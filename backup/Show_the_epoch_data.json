{"task": "Show_the_epoch", "blocks": [{"lang": "ABAP", "loc": 6, "block": "<pre class=\"abap highlighted_source\"><a href=\"http://help.sap.com/abapdocu/en/ABAPDATA.htm\"><span class=\"kw2\">DATA</span></a><span class=\"sy0\">:</span> lv_date <span class=\"kw4\">TYPE</span> datum<span class=\"sy0\">.</span><br/>\u00a0<br/>lv_date <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><br/>\u00a0<br/><a href=\"http://help.sap.com/abapdocu/en/ABAPWRITE.htm\"><span class=\"kw3\">WRITE</span></a><span class=\"sy0\">:</span> <span class=\"sy0\">/</span> lv_date<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "Ada", "loc": 9, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Calendar</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Formatting</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Formatting</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Conversions</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Conversions</span>;<br/><span class=\"kw3\">procedure</span> ShowEpoch <span class=\"kw1\">is</span><br/>   etime\u00a0: Time\u00a0:= To_Ada_Time <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">begin</span><br/>   Put_Line <span class=\"br0\">(</span>Image <span class=\"br0\">(</span>Date =&gt; etime<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> ShowEpoch;</pre>"}, {"lang": "AWK", "loc": 8, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f SHOW_THE_EPOCH.AWK</span><br/><span class=\"co1\"># requires GNU Awk 4.0.1 or later</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    <span class=\"kw5\">print</span><span class=\"br0\">(</span>strftime<span class=\"br0\">(</span><span class=\"st0\">\"%Y-%m-%d\u00a0%H:%M:%S\"</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 2, "block": "<pre class=\"text highlighted_source\">      INSTALL @lib$+\"DATELIB\"<br/>      PRINT FN_date$(0, \"dd-MMM-yyyy\")</pre>"}, {"lang": "C", "loc": 8, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    time_t t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/asctime.html\"><span class=\"kw3\">asctime</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/gmtime.html\"><span class=\"kw3\">gmtime</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 9, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> DateTime<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 10, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;chrono&gt;</span><br/><span class=\"co2\">#include &lt;ctime&gt;</span><br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    std<span class=\"sy4\">::</span><span class=\"me2\">chrono</span><span class=\"sy4\">::</span><span class=\"me2\">system_clock</span><span class=\"sy4\">::</span><span class=\"me2\">time_point</span> epoch<span class=\"sy4\">;</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw4\">time_t</span> t <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">chrono</span><span class=\"sy4\">::</span><span class=\"me2\">system_clock</span><span class=\"sy4\">::</span><span class=\"me2\">to_time_t</span><span class=\"br0\">(</span>epoch<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"kw3\">asctime</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">gmtime</span><span class=\"br0\">(</span><span class=\"sy3\">&amp;</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 1, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span>println <span class=\"br0\">(</span>java<span class=\"sy0\">.</span>util<span class=\"sy0\">.</span>Date<span class=\"sy0\">.</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 17, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> epoch<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  epoch-<span class=\"kw3\">date</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  year                <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  month               <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  dday                <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">DATE-OF-INTEGER</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> epoch-<span class=\"kw3\">date</span><br/>\u00a0<br/>           <span class=\"kw2\">DISPLAY</span> year <span class=\"st0\">\"-\"</span> month <span class=\"st0\">\"-\"</span> dday<br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span></pre>"}, {"lang": "CoffeeScript", "loc": 1, "block": "<pre class=\"coffeescript highlighted_source\">console.<span class=\"me1\">log</span> <span class=\"kw3\">new</span> Date<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">toISOString</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Common Lisp", "loc": 2, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>multiple-value-bind <span class=\"br0\">(</span>second minute hour day month year<span class=\"br0\">)</span> <span class=\"br0\">(</span>decode-universal-time <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/> \t  <span class=\"br0\">(</span>format t <span class=\"st0\">\"~4,'0D-~2,'0D-~2,'0D ~2,'0D:~2,'0D:~2,'0D\"</span> year month day hour minute second<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 3, "block": "<pre class=\"text highlighted_source\">main() {<br/>  print(new Date.fromEpoch(0,new TimeZone.utc()));<br/>}</pre>"}, {"lang": "Dart", "loc": 3, "block": "<pre class=\"text highlighted_source\">main() {<br/>  print(new Date.fromEpoch(0,new TimeZone.utc()));<br/>}</pre>"}, {"lang": "Delphi", "loc": 9, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> ShowEpoch<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"kw3\">FormatDateTime</span><span class=\"br0\">(</span><span class=\"st0\">'yyyy-mm-dd hh:nn:ss.zzz'</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Erlang", "loc": 1, "block": "<pre>2&gt; calendar:universal_time().\n{{2013,9,13},{8,3,16}}\n3&gt; calendar:datetime_to_gregorian_seconds(calendar:universal_time()).\n63546278932\n4&gt; calendar:gregorian_seconds_to_datetime(63546278932).\n{{2013,9,13},{8,8,52}}\n11&gt; calendar:gregorian_seconds_to_datetime(0).\n{{0,1,1},{0,0,0}}\n</pre>"}, {"lang": "F#", "loc": 1, "block": "<pre class=\"fsharp highlighted_source\">printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> System.<span class=\"me1\">DateTime</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"u\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>IN: USE: calendar calendar.format<br/>IN: 0 micros&gt;timestamp timestamp&gt;ymdhms .<br/>\"1970-01-01 00:00:00\"<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 2, "block": "<pre class=\"text highlighted_source\">include lib/longjday.4th<br/>0 posix&gt;jday .longjday  cr</pre>"}, {"lang": "Fortran", "loc": 16, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co2\">#Include \"vbcompat.bi\"</span><br/>\u00a0<br/><span class=\"co1\">' The first argument to the Format function is a date serial</span><br/><span class=\"co1\">' and so the first statement below displays the epoch.</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> f <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"mmmm d, yyyy hh:mm:ss\"</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span> <span class=\"nu0\">0</span> , f<span class=\"br0\">)</span>      <span class=\"co1\">'' epoch</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span> <span class=\"nu0\">0.5</span>, f<span class=\"br0\">)</span>     <span class=\"co1\">'' noon on the same day</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span>-<span class=\"nu0\">0.5</span>, f<span class=\"br0\">)</span>     <span class=\"co1\">'' noon on the previous day</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span><span class=\"nu0\">1000000</span>, f<span class=\"br0\">)</span>  <span class=\"co1\">'' one million days after the epoch</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span>-<span class=\"nu0\">80000</span>, f<span class=\"br0\">)</span>   <span class=\"co1\">'' eighty thousand days before the epoch</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "FreeBASIC", "loc": 16, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co2\">#Include \"vbcompat.bi\"</span><br/>\u00a0<br/><span class=\"co1\">' The first argument to the Format function is a date serial</span><br/><span class=\"co1\">' and so the first statement below displays the epoch.</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> f <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"mmmm d, yyyy hh:mm:ss\"</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span> <span class=\"nu0\">0</span> , f<span class=\"br0\">)</span>      <span class=\"co1\">'' epoch</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span> <span class=\"nu0\">0.5</span>, f<span class=\"br0\">)</span>     <span class=\"co1\">'' noon on the same day</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span>-<span class=\"nu0\">0.5</span>, f<span class=\"br0\">)</span>     <span class=\"co1\">'' noon on the previous day</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span><span class=\"nu0\">1000000</span>, f<span class=\"br0\">)</span>  <span class=\"co1\">'' one million days after the epoch</span><br/><span class=\"kw1\">Print</span> Format<span class=\"br0\">(</span>-<span class=\"nu0\">80000</span>, f<span class=\"br0\">)</span>   <span class=\"co1\">'' eighty thousand days before the epoch</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "FutureBasic", "loc": 17, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>include \"ConsoleWindow\"<br/>\u00a0<br/>print date$<br/>print date$(\"d MMM yyyy\")<br/>print date$(\"EEE, MMM d, yyyy\")<br/>print date$(\"MMMM d, yyyy \")<br/>print date$(\"MMMM d, yyyy G\")<br/>print \"This is day \";date$(\"D\");\" of the year\"<br/>print<br/>print time$<br/>print time$(\"hh:mm:ss\")<br/>print time$(\"h:mm a\")<br/>print time$(\"h:mm a zzz\")<br/>print<br/>print time$(\"h:mm a ZZZZ \"); date$(\"MMMM d, yyyy G\")<br/>\u00a0</pre>"}, {"lang": "Go", "loc": 6, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><span class=\"st0\">\"fmt\"</span><span class=\"sy1\">;</span> <span class=\"st0\">\"time\"</span><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><span class=\"sy1\">{})</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 4, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> date <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=Date&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Date</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> format <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> java.<span class=\"me1\">text</span>.<a href=\"http://www.google.de/search?as_q=SimpleDateFormat&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">SimpleDateFormat</span></a><span class=\"br0\">(</span><span class=\"st0\">'yyyy-MM-dd<span class=\"es0\">\\'</span>T<span class=\"es0\">\\'</span>HH:mm:ss.SSSZ'</span><span class=\"br0\">)</span><br/>format.<span class=\"me1\">timeZone</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?as_q=TimeZone&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">TimeZone</span></a>.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">'UTC'</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"br0\">(</span>format.<span class=\"me1\">format</span><span class=\"br0\">(</span>date<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 3, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Time<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> calendarTimeToString <span class=\"sy0\">$</span> toUTCTime <span class=\"sy0\">$</span> TOD <span class=\"nu0\">0</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "Icon and Unicon", "loc": 12, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">link</span> printf<span class=\"sy0\">,</span>datetime<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"co1\"># Unicon</span><br/>  now <span class=\"sy0\">:=</span> <span class=\"kw4\">gettimeofday</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">sec</span><br/>  <span class=\"kw1\">if</span> now <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span><span class=\"kw3\">now</span> <span class=\"kw1\">then</span> printf<span class=\"br0\">(</span><span class=\"st0\">\"&amp;now and gettimeofday().sec are equal<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span> <br/>  printf<span class=\"br0\">(</span><span class=\"st0\">\"Now (UTC)\u00a0%s, (local)\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"kw4\">gtime</span><span class=\"br0\">(</span>now<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"kw4\">ctime</span><span class=\"br0\">(</span>now<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  printf<span class=\"br0\">(</span><span class=\"st0\">\"Epoch\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"kw4\">gtime</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co1\"># Icon and Unicon</span><br/>  now <span class=\"sy0\">:=</span> DateToSec<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span><span class=\"kw3\">date</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> ClockToSec<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span><span class=\"kw3\">clock</span><span class=\"br0\">)</span><br/>  printf<span class=\"br0\">(</span><span class=\"st0\">\"Now is also\u00a0%s and\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span>SecToDate<span class=\"br0\">(</span>now<span class=\"br0\">)</span><span class=\"sy0\">,</span>SecToDateLine<span class=\"br0\">(</span>now<span class=\"br0\">)</span><span class=\"br0\">)</span>  <br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\">   <span class=\"nu0\">6</span>!:<span class=\"nu0\">0</span><span class=\"st_h\">''</span><br/><span class=\"nu0\">2011</span> <span class=\"nu0\">8</span> <span class=\"nu0\">8</span> <span class=\"nu0\">20</span> <span class=\"nu0\">25</span> <span class=\"nu0\">44.725</span></pre>"}, {"lang": "Java", "loc": 12, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.text.DateFormat</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Date</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.TimeZone</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> DateTest<span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adate+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Date</span></a> date <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adate+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Date</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adateformat+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">DateFormat</span></a> format <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adateformat+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">DateFormat</span></a>.<span class=\"me1\">getDateTimeInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        format.<span class=\"me1\">setTimeZone</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Atimezone+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">TimeZone</span></a>.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>format.<span class=\"me1\">format</span><span class=\"br0\">(</span>date<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 1, "block": "<pre class=\"javascript highlighted_source\">document.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <span class=\"kw4\">Date</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">toUTCString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 1, "block": "<pre class=\"text highlighted_source\">0 | todate</pre>"}, {"lang": "Julia", "loc": 2, "block": "<pre class=\"text highlighted_source\">using Base.Dates<br/>println(\"Time zero (the epoch) is $(unix2datetime(0)).\")</pre>"}, {"lang": "Kotlin", "loc": 12, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Date</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">TimeZone</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">DateFormat</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span> args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> epoch <span class=\"sy0\">=</span> Date<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> format <span class=\"sy0\">=</span> DateFormat.<span class=\"me1\">getDateTimeInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    format.<span class=\"me1\">timeZone</span> <span class=\"sy0\">=</span> TimeZone.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>format.<span class=\"me1\">format</span><span class=\"br0\">(</span>epoch<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 2, "block": "<pre class=\"text highlighted_source\">date(0.00)<br/>date(0)</pre>"}, {"lang": "Limbo", "loc": 17, "block": "<pre class=\"text highlighted_source\">implement Epoch;<br/>\u00a0<br/>include \"sys.m\"; sys: Sys;<br/>include \"draw.m\";<br/>include \"daytime.m\"; daytime: Daytime;<br/>\tTm: import daytime;<br/>\u00a0<br/>Epoch: module {<br/>\tinit: fn(nil: ref Draw-&gt;Context, nil: list of string);<br/>};<br/>\u00a0<br/>init(nil: ref Draw-&gt;Context, nil: list of string)<br/>{<br/>\tsys = load Sys Sys-&gt;PATH;<br/>\tdaytime = load Daytime Daytime-&gt;PATH;<br/>\tsys-&gt;print(\"%s\\n\", daytime-&gt;text(daytime-&gt;gmt(0)));<br/>}</pre>"}, {"lang": "Lingo", "loc": 9, "block": "<pre class=\"text highlighted_source\">now = the systemDate<br/>put now<br/>-- date( 2018, 3, 21 )<br/>\u00a0<br/>babylonianDate = date(-1800,1,1)<br/>\u00a0<br/>-- print approx. year difference between \"babylonianDate\" and now<br/>put (now-babylonianDate)/365.2425<br/>-- 3818.1355</pre>"}, {"lang": "LiveCode", "loc": 7, "block": "<pre class=\"text highlighted_source\">put 0 into somedate<br/>convert somedate to internet date<br/>put somedate<br/>\u00a0<br/>-- output GMT (localised)<br/>-- Thu, 1 Jan 1970 10:00:00 +1000<br/>\u00a0</pre>"}, {"lang": "LotusScript", "loc": 19, "block": "<pre class=\"lotusscript highlighted_source\">\u00a0<br/><span class=\"kw1\">Sub</span> Click<span class=\"br0\">(</span>Source <span class=\"kw1\">As</span> <span class=\"kw2\">Button</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">'Create timestamp as of now</span><br/>  <span class=\"kw1\">Dim</span> timeStamp <span class=\"kw1\">As</span> <span class=\"kw2\">NotesDateTime</span><br/>  <span class=\"kw1\">Set</span> timeStamp = <span class=\"kw1\">New</span> <span class=\"kw2\">NotesDateTime</span> <span class=\"br0\">(</span> <span class=\"kw1\">Now</span> <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\">'Assign epoch start time to variable</span><br/>  <span class=\"kw1\">Dim</span> epochTime <span class=\"kw1\">As</span> <span class=\"kw2\">NotesDateTime</span><br/>  <span class=\"kw1\">Set</span> epochTime = <span class=\"kw1\">New</span> <span class=\"kw2\">NotesDateTime</span> <span class=\"br0\">(</span> <span class=\"st0\">\"01/01/1970 00:00:00 AM GMT\"</span> <span class=\"br0\">)</span>  <span class=\"co1\">''' These two commands only to get epoch time.</span><br/>\u00a0<br/>  <span class=\"co1\">'Calculate time difference between both dates</span><br/>  <span class=\"kw1\">Dim</span> epochSeconds <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span><br/>  epochSeconds = timeStamp.<span class=\"me1\">TimeDifference</span> <span class=\"br0\">(</span> epochTime <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\">'Print result</span><br/>  <span class=\"kw1\">Print</span> epochSeconds<br/>\u00a0<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 1, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">os.date</span><span class=\"br0\">(</span><span class=\"st0\">\"%c\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">DateString[0]</pre>"}, {"lang": "MATLAB / Octave", "loc": 5, "block": "<pre class=\"matlab highlighted_source\">d = <span class=\"br0\">[</span><span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">3.5</span>,-<span class=\"nu0\">3.5</span>,<span class=\"nu0\">1000</span>*<span class=\"nu0\">365</span>,<span class=\"nu0\">1000</span>*<span class=\"nu0\">366</span>,<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/now.html\"><span class=\"kw2\">now</span></a>+<span class=\"br0\">[</span>-<span class=\"nu0\">1</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>;<br/><span class=\"kw1\">for</span> k=<span class=\"nu0\">1</span>:<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/>    printf<span class=\"br0\">(</span><span class=\"co2\">'day\u00a0%f\\t%s\\n'</span>,d<span class=\"br0\">(</span>k<span class=\"br0\">)</span>,<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/datestr.html\"><span class=\"kw2\">datestr</span></a><span class=\"br0\">(</span>d<span class=\"br0\">(</span>k<span class=\"br0\">)</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/disp.html\"><span class=\"kw2\">disp</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/datevec.html\"><span class=\"kw2\">datevec</span></a><span class=\"br0\">(</span>d<span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span>;</pre>"}, {"lang": "Maxima", "loc": 2, "block": "<pre class=\"text highlighted_source\">timedate(0);<br/>\"1900-01-01 10:00:00+10:00\"</pre>"}, {"lang": "NetRexx", "loc": 11, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols nobinary<br/>\u00a0<br/><span class=\"kw1\">import</span> java.<span class=\"me0\">text</span>.<span class=\"me0\">DateFormat</span><br/>\u00a0<br/>edate = Date<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>zulu  = DateFormat.<span class=\"me0\">getDateTimeInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>zulu.<span class=\"me0\">setTimeZone</span><span class=\"br0\">(</span>TimeZone.<span class=\"me0\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">'UTC'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> zulu.<span class=\"me0\">format</span><span class=\"br0\">(</span>edate<span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "NewLISP", "loc": 2, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#date\"><span class=\"kw1\">date</span></a> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"sy1\">-&gt;</span><span class=\"st0\">\"Thu Jan 01 01:00:00 1970\"</span></pre>"}, {"lang": "Nim", "loc": 3, "block": "<pre class=\"text highlighted_source\">import times<br/>\u00a0<br/>echo getGMTime(fromSeconds(0))</pre>"}, {"lang": "Objective-C", "loc": 14, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argc, <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>argv<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  @autoreleasepool <span class=\"br0\">{</span><br/>\u00a0<br/>    <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSDate_Class/\"><span class=\"kw5\">NSDate</span></a> <span class=\"sy0\">*</span>t <span class=\"sy0\">=</span> <span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSDate_Class/\"><span class=\"kw5\">NSDate</span></a> dateWithTimeIntervalSinceReferenceDate<span class=\"sy0\">:</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>;<br/>    <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSDateFormatter_Class/\"><span class=\"kw5\">NSDateFormatter</span></a> <span class=\"sy0\">*</span>dateFormatter <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSDateFormatter_Class/\"><span class=\"kw5\">NSDateFormatter</span></a> alloc<span class=\"br0\">]</span> init<span class=\"br0\">]</span>;<br/>    <span class=\"br0\">[</span>dateFormatter setTimeZone<span class=\"sy0\">:</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSTimeZone_Class/\"><span class=\"kw5\">NSTimeZone</span></a> timeZoneWithName<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span>;<br/>    <span class=\"br0\">[</span>dateFormatter setDateFormat<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"yyyy-MM-dd HH:mm:ss ZZ\"</span><span class=\"br0\">]</span>;<br/>    NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%@\"</span>, <span class=\"br0\">[</span>dateFormatter stringFromDate<span class=\"sy0\">:</span>t<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 8, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">open</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html\"><span class=\"kw2\">Unix</span></a><br/>\u00a0<br/><span class=\"kw1\">let</span> months <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span> <span class=\"st0\">\"January\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"February\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"March\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"April\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"May\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"June\"</span><span class=\"sy0\">;</span><br/>      <span class=\"st0\">\"July\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"August\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"September\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"October\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"November\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"December\"</span> <span class=\"sy0\">|</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> t <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html\"><span class=\"kw2\">Unix</span></a><span class=\"sy0\">.</span>gmtime <span class=\"nu0\">0.0</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%s\u00a0%d,\u00a0%d\\n\"</span> months<span class=\"sy0\">.</span><span class=\"br0\">(</span>t<span class=\"sy0\">.</span>tm_mon<span class=\"br0\">)</span> t<span class=\"sy0\">.</span>tm_mday <span class=\"br0\">(</span><span class=\"nu0\">1900</span> <span class=\"sy0\">+</span> t<span class=\"sy0\">.</span>tm_year<span class=\"br0\">)</span></pre>"}, {"lang": "Oforth", "loc": 3, "block": "<pre class=\"text highlighted_source\">import: date<br/>\u00a0<br/>0 asDateUTC println</pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">system</span><span class=\"br0\">(</span><span class=\"st0\">\"date -ur 0\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 9, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> ShowEpoch<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>FormatDateTime<span class=\"br0\">(</span><span class=\"st0\">'yyyy-mm-dd hh:nn:ss.zzz'</span><span class=\"sy1\">,</span> Now<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>FormatDateTime<span class=\"br0\">(</span><span class=\"st0\">'yyyy-mm-dd hh:nn:ss.zzz'</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <a href=\"http://perldoc.perl.org/functions/scalar.html\"><span class=\"kw3\">scalar</span></a> <a href=\"http://perldoc.perl.org/functions/gmtime.html\"><span class=\"kw3\">gmtime</span></a> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 1, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw3\">say</span> DateTime<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre>"}, {"lang": "Phix", "loc": 4, "block": "<pre class=\"text highlighted_source\">constant d0 = {0,1,1,0,0,0,1,1}<br/>include builtins\\timedate.e<br/>?format_timedate(d0,\"YYYY-MM-DD\")<br/>?format_timedate(d0,\"Dddd, Mmmm d, YYYY\")</pre>"}, {"lang": "PHP", "loc": 3, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw1\">echo</span> <a href=\"http://www.php.net/gmdate\"><span class=\"kw3\">gmdate</span></a><span class=\"br0\">(</span><span class=\"st_h\">'r'</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 2, "block": "<pre class=\"text highlighted_source\">: (date 1)<br/>-&gt; (0 3 1)  # Year zero, March 1st</pre>"}, {"lang": "PL/I", "loc": 17, "block": "<pre class=\"pli highlighted_source\"><span class=\"sy0\">*</span>process source attributes xref<span class=\"sy0\">;</span><br/> epoch<span class=\"sy0\">:</span> <span class=\"kw1\">Proc</span> <span class=\"kw1\">Options</span><span class=\"br0\">(</span><span class=\"kw1\">main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"coMULTI\">/*********************************************************************<br/> * 20.08.2013 Walter Pachl  shows that PL/I uses 15 Oct 1582 as epoch<br/> * DAYS returns a FIXED BINARY(31,0) value which is the number of days<br/> * (in Lilian format) corresponding to the date d.<br/> *********************************************************************/</span><br/> <span class=\"kw1\">Dcl</span> d <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"kw1\">datetime</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"kw1\">days</span><span class=\"br0\">(</span><span class=\"kw1\">datetime</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> d<span class=\"sy0\">=</span><span class=\"st0\">'15821015000000000'</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>d         <span class=\"sy0\">,</span><span class=\"kw1\">days</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> d<span class=\"sy0\">=</span><span class=\"st0\">'15821014000000000'</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>d         <span class=\"sy0\">,</span><span class=\"kw1\">days</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PowerShell", "loc": 1, "block": "<pre class=\"powershell highlighted_source\"><span class=\"br0\">[</span>datetime<span class=\"br0\">]</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "PureBasic", "loc": 6, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">FormatDate</span><span class=\"br0\">(</span><span class=\"st0\">\"Y =\u00a0%yyyy  M =\u00a0%mm  D =\u00a0%dd,\u00a0%hh:%ii:%ss\"</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 4, "block": "<pre class=\"python highlighted_source\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw3\">time</span>.<span class=\"me1\">asctime</span><span class=\"br0\">(</span><span class=\"kw3\">time</span>.<span class=\"me1\">gmtime</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"st0\">'Thu Jan  1 00:00:00 1970'</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span></pre>"}, {"lang": "R", "loc": 4, "block": "<pre class=\"text highlighted_source\">&gt; epoch &lt;- 0<br/>&gt; class(epoch) &lt;- class(Sys.time())<br/>&gt; format(epoch, \"%Y-%m-%d\u00a0%H:%M:%S\u00a0%Z\")<br/>[1] \"1970-01-01 00:00:00 UTC\"</pre>"}, {"lang": "Racket", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require racket/date)<br/>(date-&gt;string (seconds-&gt;date 0 #f))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 11, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program displays the number of days since the epoch for the DATE function (BIF). */</span><br/>\u00a0<br/><span class=\"kw1\">say</span> <span class=\"st0\">'     today is: '</span>  <span class=\"kw6\">date</span><span class=\"br0\">(</span><span class=\"br0\">)</span>                    <span class=\"coMULTI\">/*today's is format:     mm MON YYYY   */</span><br/>\u00a0<br/>days=<span class=\"kw6\">date</span><span class=\"br0\">(</span><span class=\"st0\">'Basedate'</span><span class=\"br0\">)</span>                            <span class=\"coMULTI\">/*only the first char of option is used*/</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>days, <span class=\"nu0\">40</span><span class=\"br0\">)</span>         <span class=\"st0\">\" days since the REXX base date of January 1st, year 1\"</span><br/>\u00a0<br/><span class=\"kw1\">say</span> <span class=\"st0\">' and today is: '</span>  <span class=\"kw6\">date</span><span class=\"br0\">(</span>, days, <span class=\"st0\">\"B\"</span><span class=\"br0\">)</span>         <span class=\"coMULTI\">/*it should still be today (\u00b5Sec later)*/</span><br/>                    <span class=\"coMULTI\">/*   \u2191                \u250c\u2500\u2500\u2500\u25c4\u2500\u2500\u2500 This BIF (Built-In Function) is only */</span><br/>                    <span class=\"coMULTI\">/*   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2518        for  newer  versions of  REXX  that  */</span><br/>                    <span class=\"coMULTI\">/*                             support the  2nd and 3rd  arguments. */</span></pre>"}, {"lang": "Ring", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>load \"guilib.ring\"<br/>\u00a0<br/>New qApp {<br/>         win1 = new qMainWindow() {<br/>                setwindowtitle(\"Using QDateEdit\")<br/>                setGeometry(100,100,250,100)<br/>                oDate = new qdateedit(win1) {<br/>                        setGeometry(20,40,220,30) <br/>\t                oDate.minimumDate()<br/>                }<br/>                show()<br/>                }<br/>                exec()<br/>                }<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 2, "block": "<pre class=\"ruby highlighted_source\">irb<span class=\"br0\">(</span>main<span class=\"br0\">)</span>:001:<span class=\"nu0\">0</span><span class=\"sy0\">&gt;</span> <span class=\"kw4\">Time</span>.<span class=\"me1\">at</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">utc</span><br/><span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1970</span><span class=\"sy0\">-</span>01<span class=\"sy0\">-</span>01 00:00:00 UTC</pre>"}, {"lang": "Rust", "loc": 8, "block": "<pre class=\"text highlighted_source\">extern crate time;<br/>\u00a0<br/>use time::{at_utc, Timespec};<br/>\u00a0<br/>fn main() {<br/>    let epoch = at_utc(Timespec::new(0, 0));  <br/>    println!(\"{}\", epoch.asctime());<br/>}</pre>"}, {"lang": "Run BASIC", "loc": 3, "block": "<pre class=\"text highlighted_source\">eDate$ = date$(\"01/01/0001\")<br/>cDate$ = date$(0) ' 01/01/1901<br/>sDate$ = date$(\"01/01/1970\")</pre>"}, {"lang": "Scala", "loc": 6, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"br0\">{</span>Date, TimeZone, Locale<span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">DateFormat</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> df<span class=\"sy0\">=</span>DateFormat.<span class=\"me1\">getDateTimeInstance</span><span class=\"br0\">(</span>DateFormat.<span class=\"me1\">LONG</span>, DateFormat.<span class=\"me1\">LONG</span>, Locale.<span class=\"me1\">ENGLISH</span><span class=\"br0\">)</span><br/>df.<span class=\"me1\">setTimeZone</span><span class=\"br0\">(</span>TimeZone.<span class=\"me1\">getTimeZone</span><span class=\"br0\">(</span><span class=\"st0\">\"UTC\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>println<span class=\"br0\">(</span>df.<span class=\"me1\">format</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Date<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 7, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"time.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(time.value);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 1, "block": "<pre class=\"ruby highlighted_source\">say <span class=\"kw4\">Time</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">gmtime</span>.<span class=\"me1\">ctime</span>;</pre>"}, {"lang": "Standard ML", "loc": 2, "block": "<pre class=\"text highlighted_source\">- Date.toString (Date.fromTimeUniv Time.zeroTime);<br/>val it = \"Thu Jan  1 00:00:00 1970\"\u00a0: string</pre>"}, {"lang": "Stata", "loc": 4, "block": "<pre class=\"text highlighted_source\">. di\u00a0%td 0<br/>01jan1960<br/>. di\u00a0%tc 0<br/>01jan1960 00:00:00</pre>"}, {"lang": "Tcl", "loc": 2, "block": "<pre class=\"tcl highlighted_source\"><span class=\"sy0\">%</span> <span class=\"kw2\">clock</span> <span class=\"kw2\">format</span> <span class=\"nu0\">0</span> -gmt <span class=\"nu0\">1</span><br/>Thu Jan 01 00:00:00 GMT <span class=\"nu0\">1970</span></pre>"}, {"lang": "TUSCRIPT", "loc": 10, "block": "<pre class=\"text highlighted_source\">$$ MODE TUSCRIPT<br/>- epoch<br/>number=1<br/>dayofweeknr=DATE (date,day,month,year,number)<br/>epoch=JOIN(year,\"-\",month,day)<br/>PRINT \"epoch: \", epoch,\" (daynumber \",number,\")\"<br/>- today's daynumber<br/>dayofweeknr=DATE (today,day,month,year,number)<br/>date=JOIN (year,\"-\",month,day)<br/>PRINT \"today's date: \", date,\" (daynumber \", number,\")\"</pre>"}, {"lang": "UNIX Shell", "loc": 2, "block": "<pre class=\"bash highlighted_source\">$ <span class=\"kw2\">date</span> <span class=\"re5\">-ur</span> <span class=\"nu0\">0</span><br/>Thu Jan  <span class=\"nu0\">1</span> 00:00:00 UTC <span class=\"nu0\">1970</span></pre>"}, {"lang": "Visual Basic", "loc": 3, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Sub</span> Main()<br/>    Debug.<span class=\"kw4\">Print</span> Format(0, <span class=\"st0\">\"dd mmm yyyy hh:mm\"</span>)<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span></pre>"}, {"lang": "zkl", "loc": 2, "block": "<pre class=\"text highlighted_source\">zkl: Time.Clock.tickToTock(0,False)<br/>L(1970,1,1,0,0,0) // y,m,d, h,m,s</pre>"}]}