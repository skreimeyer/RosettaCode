{"task": "Ray-casting_algorithm", "blocks": [{"lang": "Ada", "loc": 14, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">package</span> Polygons <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">type</span> Point <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      X, Y\u00a0: Float;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/>   <span class=\"kw3\">type</span> Point_List <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Point;<br/>   <span class=\"kw3\">subtype</span> Segment <span class=\"kw1\">is</span> Point_List <span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Polygon <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Segment;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Create_Polygon <span class=\"br0\">(</span>List\u00a0: Point_List<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Polygon;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Is_Inside <span class=\"br0\">(</span>Who\u00a0: Point; Where\u00a0: Polygon<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Boolean;<br/>\u00a0<br/><span class=\"kw1\">end</span> Polygons;</pre>"}, {"lang": "ANSI Standard BASIC", "loc": 184, "block": "<pre class=\"text highlighted_source\">1000 PUBLIC NUMERIC x,y<br/>1010 LET x=1<br/>1020 LET y=2<br/>1030\u00a0!<br/>1040 DEF isLeft2(L(,),p()) = -SGN(  (L(1,x)-L(2,x))*(p(y)-L(2,y)) - (p(x)-L(2,x))*(L(1,y)-L(2,y)))<br/>1050\u00a0!<br/>1060 FUNCTION inpolygon(p1(,),p2())<br/>1070    LET k=UBOUND(p1,1)+1<br/>1080    DIM send (1 TO 2,2)<br/>1090    LET wn=0<br/>1100    FOR n=1 TO UBOUND(p1,1)<br/>1110       LET index=MOD(n, k)<br/>1120       LET nextindex=MOD(n+1, k)<br/>1130       IF nextindex=0 THEN LET nextindex=1<br/>1140       LET send(1,x)=p1(index,x)<br/>1150       LET send(2,x)=p1(nextindex,x)<br/>1160       LET send(1,y)=p1(index,y)<br/>1170       LET send(2,y)=p1(nextindex,y)<br/>1180       IF p1(index,y)&lt;=p2(y) THEN<br/>1190          IF p1(nextindex,y)&gt;p2(y) THEN<br/>1200             IF isleft2(send,p2)&gt;=0 THEN\u00a0!'=<br/>1210                LET wn=wn+1<br/>1220             END IF<br/>1230          END IF<br/>1240       ELSE<br/>1250          IF p1(nextindex,y)&lt;=p2(y) THEN<br/>1260             IF isleft2(send,p2)&lt;=0 THEN\u00a0!'=<br/>1270                LET wn=wn-1<br/>1280             END IF<br/>1290          END IF<br/>1300       END IF<br/>1310    NEXT n<br/>1320    LET inpolygon = wn<br/>1330 END FUNCTION<br/>1340\u00a0!<br/>1350 DIM type(1 TO 2)<br/>1360\u00a0!<br/>1370 DIM square(4,2)<br/>1380 MAT READ square<br/>1390 DATA 0,0,10,0,10,10,0,10<br/>1400\u00a0!<br/>1410 DIM hole(4,2)<br/>1420 MAT READ hole<br/>1430 DATA 2.5,2.5,7.5,2.5,7.5,7.5,2.5,7.5<br/>1440\u00a0!<br/>1450 DIM strange(8,2)<br/>1460 MAT READ strange<br/>1470 DATA 0,0,2.5,2.5,0,10,2.5,7.5,7.5,7.5,10,10,10,0,2.5,2.5<br/>1480\u00a0!<br/>1490 DIM exagon(6,2)  <br/>1500 MAT READ exagon<br/>1510 DATA 3,0,7,0,10,5,7,10,3,10,0,5<br/>1520\u00a0!<br/>1530\u00a0! printouts<br/>1540 FOR z=1 TO 4<br/>1550    SELECT CASE z<br/>1560    CASE 1<br/>1570       PRINT \"squared\"<br/>1580       PRINT \"(5,5)  \";TAB(12);<br/>1590       MAT READ type<br/>1600       DATA 5,5<br/>1610       IF inpolygon(square,type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1620       MAT READ type<br/>1630       DATA 5,8<br/>1640       PRINT \"(5,8)  \";TAB(12);<br/>1650       IF inpolygon(square,type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1660       PRINT \"(-10,5)  \";TAB(12);<br/>1670       MAT READ type<br/>1680       DATA -10,5<br/>1690       IF inpolygon(square,type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1700       Print \"(0,5)  \";Tab(12);<br/>1710       MAT READ type<br/>1720       DATA 0,5<br/>1730       IF inpolygon(square,type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1740       Print \"(10,5)  \";Tab(12);<br/>1750       MAT READ type<br/>1760       DATA 10,5<br/>1770       IF inpolygon(square,type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1780       PRINT \"(8,5)  \";TAB(12);<br/>1790       MAT READ type<br/>1800       DATA 8,5<br/>1810       IF inpolygon(square,Type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1820       PRINT \"(10,10)  \";TAB(12);<br/>1830       MAT READ type<br/>1840       DATA 10,10<br/>1850       IF inpolygon(square,Type) &lt;&gt; 0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1860       PRINT<br/>1870    CASE 2<br/>1880       PRINT \"squared hole\"<br/>1890       PRINT \"(5,5)  \";TAB(12);<br/>1900       MAT READ type<br/>1910       DATA 5,5<br/>1920       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1930       Print \"(5,8)  \";Tab(12);<br/>1940       MAT READ type<br/>1950       DATA 5,8<br/>1960       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>1970       PRINT \"(-10,5)  \";TAB(12);<br/>1980       MAT READ type<br/>1990       DATA -10,5<br/>2000       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2010       PRINT \"(0,5)  \";TAB(12);<br/>2020       MAT READ type<br/>2030       DATA 0,5<br/>2040       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2050       PRINT \"(10,5)  \";TAB(12);<br/>2060       MAT READ type<br/>2070       DATA 10,5<br/>2080       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2090       PRINT \"(8,5)  \";TAB(12);<br/>2100       MAT READ type<br/>2110       DATA 8,5<br/>2120       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2130       PRINT \"(10,10)  \";TAB(12);<br/>2140       MAT READ type<br/>2150       DATA 10,10<br/>2160       IF NOT inpolygon(hole,Type)&lt;&gt;0 AND inpolygon(square,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2170       PRINT<br/>2180    CASE 3<br/>2190       PRINT \"strange\"<br/>2200       PRINT \"(5,5)  \";TAB(12);<br/>2210       MAT READ type<br/>2220       DATA 5,5<br/>2230       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2240       PRINT \"(5,8)  \";TAB(12);<br/>2250       MAT READ type<br/>2260       DATA 5,8<br/>2270       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2280       PRINT \"(-10,5)  \";TAB(12);<br/>2290       MAT READ type<br/>2300       DATA -10,5<br/>2310       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2320       PRINT \"(0,5)  \";TAB(12);<br/>2330       MAT READ type<br/>2340       DATA 0,5<br/>2350       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2360       PRINT \"(10,5)  \";TAB(12);<br/>2370       MAT READ type<br/>2380       DATA 10,5<br/>2390       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2400       PRINT \"(8,5)  \";TAB(12);<br/>2410       MAT READ type<br/>2420       DATA 8,5<br/>2430       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2440       PRINT \"(10,10)  \";TAB(12);<br/>2450       MAT READ type<br/>2460       DATA 10,10<br/>2470       IF inpolygon(strange,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2480       PRINT<br/>2490    CASE 4<br/>2500       PRINT \"exagon\"<br/>2510       PRINT \"(5,5)  \";TAB(12);<br/>2520       MAT READ type<br/>2530       DATA 5,5<br/>2540       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2550       PRINT \"(5,8)  \";TAB(12);<br/>2560       MAT READ type<br/>2570       DATA 5,8<br/>2580       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2590       PRINT \"(-10,5)  \";TAB(12);<br/>2600       MAT READ type<br/>2610       DATA -10,5<br/>2620       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2630       PRINT \"(0,5)  \";TAB(12);<br/>2640       MAT READ type<br/>2650       DATA 0,5<br/>2660       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2670       PRINT \"(10,5)  \";TAB(12);<br/>2680       MAT READ type<br/>2690       DATA 10,5<br/>2700       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2710       PRINT \"(8,5)  \";TAB(12);<br/>2720       MAT READ type<br/>2730       DATA 8,5<br/>2740       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2750       PRINT \"(10,10)  \";TAB(12);<br/>2760       MAT READ type<br/>2770       DATA 10,10<br/>2780       IF inpolygon(exagon,Type)&lt;&gt;0 THEN PRINT \"in\" ELSE PRINT \"out\"<br/>2790       PRINT<br/>2800    END SELECT<br/>2810 NEXT z<br/>2820 END<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 94, "block": "<pre class=\"ahk highlighted_source\">Points <span class=\"sy0\">:=</span><span class=\"br0\">[</span><span class=\"br0\">{</span>x:  <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:  <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">8.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"sy0\">-</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:  <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:  <span class=\"nu0\">8.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>Square <span class=\"sy0\">:=</span><span class=\"br0\">[</span><span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>Sq_Hole<span class=\"sy0\">:=</span><span class=\"br0\">[</span><span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>Strange<span class=\"sy0\">:=</span><span class=\"br0\">[</span><span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>Exagon <span class=\"sy0\">:=</span><span class=\"br0\">[</span><span class=\"br0\">{</span>x: <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x:<span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span> y:<span class=\"nu0\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><br/>\t\t<span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">5.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x: <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span> y: <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>Polygons <span class=\"sy0\">:=</span> <span class=\"br0\">{</span><span class=\"st0\">\"Square\"</span>:Square<span class=\"sy0\">,</span> <span class=\"st0\">\"Sq_Hole\"</span>:Sq_Hole<span class=\"sy0\">,</span> <span class=\"st0\">\"Strange\"</span>:Strange<span class=\"sy0\">,</span> <span class=\"st0\">\"Exagon\"</span>:Exagon<span class=\"br0\">}</span><br/>For j<span class=\"sy0\">,</span> Poly in Polygons<br/>\tFor i<span class=\"sy0\">,</span> Point in Points<br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>point_in_polygon<span class=\"br0\">(</span>Point<span class=\"sy0\">,</span>Poly<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\ts<span class=\"sy0\">.=</span> j <span class=\"st0\">\" does contain point \"</span> i <span class=\"st0\">\"`n\"</span><br/>\t\t<span class=\"kw1\">Else</span><br/>\t\t\ts<span class=\"sy0\">.=</span> j <span class=\"st0\">\" doesn't contain point \"</span> i <span class=\"st0\">\"`n\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">Msgbox</span></a> <span class=\"re0\">%s%</span><br/>\u00a0<br/>point_in_polygon<span class=\"br0\">(</span>Point<span class=\"sy0\">,</span>Poly<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tn<span class=\"sy0\">:=</span>Poly<span class=\"sy0\">.</span>MaxIndex<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\tcount<span class=\"sy0\">:=</span><span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">loop</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%n%</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>ray_intersects_segment<span class=\"br0\">(</span>Point<span class=\"sy0\">,</span>Poly<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span><span class=\"sy0\">,</span>Poly<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">mod</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span>n<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tcount<span class=\"sy0\">++</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">mod</span></a><span class=\"br0\">(</span>count<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">; true = inside, false = outside</span><br/>\t\t<span class=\"kw1\">return</span> true\t\t<span class=\"co1\">; P is in the polygon</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> false\t<span class=\"co1\">; P isn't in the polygon</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>ray_intersects_segment<span class=\"br0\">(</span>P<span class=\"sy0\">,</span>A<span class=\"sy0\">,</span>B<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"co1\">;P = the point from which the ray starts</span><br/>\t<span class=\"co1\">;A = the end-point of the segment with the smallest y coordinate</span><br/>\t<span class=\"co1\">;B = the end-point of the segment with the greatest y coordinate</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>A<span class=\"sy0\">.</span>y <span class=\"sy0\">&gt;</span> B<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\ttemp<span class=\"sy0\">:=</span>A<br/>\t\tA<span class=\"sy0\">:=</span>B<br/>\t\tB<span class=\"sy0\">:=</span>temp<br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"sy0\">.</span>y <span class=\"sy0\">=</span> A<span class=\"sy0\">.</span>y <span class=\"kw1\">or</span> P<span class=\"sy0\">.</span>y <span class=\"sy0\">=</span> B<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tP<span class=\"sy0\">.</span>y <span class=\"sy0\">+=</span> <span class=\"nu0\">0.000001</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"sy0\">.</span>y <span class=\"sy0\">&lt;</span> A<span class=\"sy0\">.</span>y <span class=\"kw1\">or</span> P<span class=\"sy0\">.</span>y <span class=\"sy0\">&gt;</span> B<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> false<br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"sy0\">.</span>x <span class=\"sy0\">&gt;</span> A<span class=\"sy0\">.</span>x <span class=\"sy0\">&amp;&amp;</span> P<span class=\"sy0\">.</span>x <span class=\"sy0\">&gt;</span> B<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> false<br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"sy0\">.</span>x <span class=\"sy0\">&lt;</span> A<span class=\"sy0\">.</span>x <span class=\"sy0\">&amp;&amp;</span> P<span class=\"sy0\">.</span>x <span class=\"sy0\">&lt;</span> B<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">return</span> true<br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>A<span class=\"sy0\">.</span>x\u00a0!<span class=\"sy0\">=</span> B<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\tm_red <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>B<span class=\"sy0\">.</span>y <span class=\"sy0\">-</span> A<span class=\"sy0\">.</span>y<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>B<span class=\"sy0\">.</span>x <span class=\"sy0\">-</span> A<span class=\"sy0\">.</span>x<span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t\t\tm_red <span class=\"sy0\">:=</span> <span class=\"st0\">\"inf\"</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>A<span class=\"sy0\">.</span>x\u00a0!<span class=\"sy0\">=</span> P<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\tm_blue <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>P<span class=\"sy0\">.</span>y <span class=\"sy0\">-</span> A<span class=\"sy0\">.</span>y<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>P<span class=\"sy0\">.</span>x <span class=\"sy0\">-</span> A<span class=\"sy0\">.</span>x<span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t\t\tm_blue <span class=\"sy0\">:=</span> <span class=\"st0\">\"inf\"</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>m_blue <span class=\"sy0\">&gt;=</span> m_red<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">return</span> true<br/>\t\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">return</span> false<br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C", "loc": 141, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> <span class=\"kw4\">double</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">;</span> <span class=\"br0\">}</span> vec<span class=\"sy0\">;</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> <span class=\"kw4\">int</span> n<span class=\"sy0\">;</span> vec<span class=\"sy0\">*</span> v<span class=\"sy0\">;</span> <span class=\"br0\">}</span> polygon_t<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>polygon<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">#define BIN_V(op, xx, yy) vec v##op(vec a,vec b){vec c;c.x=xx;c.y=yy;return c;}</span><br/><span class=\"co2\">#define BIN_S(op, r) double v##op(vec a, vec b){ return r; }</span><br/>BIN_V<span class=\"br0\">(</span>sub<span class=\"sy0\">,</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> b.<span class=\"me1\">x</span><span class=\"sy0\">,</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>BIN_V<span class=\"br0\">(</span>add<span class=\"sy0\">,</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">+</span> b.<span class=\"me1\">x</span><span class=\"sy0\">,</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>BIN_S<span class=\"br0\">(</span>dot<span class=\"sy0\">,</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">x</span> <span class=\"sy0\">+</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>BIN_S<span class=\"br0\">(</span>cross<span class=\"sy0\">,</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* return a + s * b */</span><br/>vec vmadd<span class=\"br0\">(</span>vec a<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> s<span class=\"sy0\">,</span> vec b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tvec c<span class=\"sy0\">;</span><br/>\tc.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">+</span> s <span class=\"sy0\">*</span> b.<span class=\"me1\">x</span><span class=\"sy0\">;</span><br/>\tc.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> s <span class=\"sy0\">*</span> b.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> c<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* check if x0-&gt;x1 edge crosses y0-&gt;y1 edge. dx = x1 - x0, dy = y1 - y0, then<br/>   solve  x0 + a * dx == y0 + b * dy with a, b in real<br/>   cross both sides with dx, then: (remember, cross product is a scalar)<br/>\tx0 X dx = y0 X dx + b * (dy X dx)<br/>   similarly,<br/>\tx0 X dy + a * (dx X dy) == y0 X dy<br/>   there is an intersection iff 0 &lt;= a &lt;= 1 and 0 &lt;= b &lt;= 1<br/>\u00a0<br/>   returns: 1 for intersect, -1 for not, 0 for hard to say (if the intersect<br/>   point is too close to y0 or y1)<br/>*/</span><br/><span class=\"kw4\">int</span> intersect<span class=\"br0\">(</span>vec x0<span class=\"sy0\">,</span> vec x1<span class=\"sy0\">,</span> vec y0<span class=\"sy0\">,</span> vec y1<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> tol<span class=\"sy0\">,</span> vec <span class=\"sy0\">*</span>sect<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tvec dx <span class=\"sy0\">=</span> vsub<span class=\"br0\">(</span>x1<span class=\"sy0\">,</span> x0<span class=\"br0\">)</span><span class=\"sy0\">,</span> dy <span class=\"sy0\">=</span> vsub<span class=\"br0\">(</span>y1<span class=\"sy0\">,</span> y0<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> d <span class=\"sy0\">=</span> vcross<span class=\"br0\">(</span>dy<span class=\"sy0\">,</span> dx<span class=\"br0\">)</span><span class=\"sy0\">,</span> a<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>d<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* edges are parallel */</span><br/>\u00a0<br/>\ta <span class=\"sy0\">=</span> <span class=\"br0\">(</span>vcross<span class=\"br0\">(</span>x0<span class=\"sy0\">,</span> dx<span class=\"br0\">)</span> <span class=\"sy0\">-</span> vcross<span class=\"br0\">(</span>y0<span class=\"sy0\">,</span> dx<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> d<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>sect<span class=\"br0\">)</span><br/>\t\t<span class=\"sy0\">*</span>sect <span class=\"sy0\">=</span> vmadd<span class=\"br0\">(</span>y0<span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> dy<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&lt;</span> <span class=\"sy0\">-</span>tol <span class=\"sy0\">||</span> a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> tol<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&lt;</span> tol <span class=\"sy0\">||</span> a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> tol<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\ta <span class=\"sy0\">=</span> <span class=\"br0\">(</span>vcross<span class=\"br0\">(</span>x0<span class=\"sy0\">,</span> dy<span class=\"br0\">)</span> <span class=\"sy0\">-</span> vcross<span class=\"br0\">(</span>y0<span class=\"sy0\">,</span> dy<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> d<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* distance between x and nearest point on y0-&gt;y1 segment.  if the point<br/>   lies outside the segment, returns infinity */</span><br/><span class=\"kw4\">double</span> dist<span class=\"br0\">(</span>vec x<span class=\"sy0\">,</span> vec y0<span class=\"sy0\">,</span> vec y1<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> tol<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tvec dy <span class=\"sy0\">=</span> vsub<span class=\"br0\">(</span>y1<span class=\"sy0\">,</span> y0<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tvec x1<span class=\"sy0\">,</span> s<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> r<span class=\"sy0\">;</span><br/>\u00a0<br/>\tx1.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> x.<span class=\"me1\">x</span> <span class=\"sy0\">+</span> dy.<span class=\"me1\">y</span><span class=\"sy0\">;</span> x1.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> x.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> dy.<span class=\"me1\">x</span><span class=\"sy0\">;</span><br/>\tr <span class=\"sy0\">=</span> intersect<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> y0<span class=\"sy0\">,</span> y1<span class=\"sy0\">,</span> tol<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> HUGE_VAL<span class=\"sy0\">;</span><br/>\ts <span class=\"sy0\">=</span> vsub<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>vdot<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">#define for_v(i, z, p) for(i = 0, z = p-&gt;v; i &lt; p-&gt;n; i++, z++)</span><br/><span class=\"coMULTI\">/* returns 1 for inside, -1 for outside, 0 for on edge */</span><br/><span class=\"kw4\">int</span> inside<span class=\"br0\">(</span>vec v<span class=\"sy0\">,</span> polygon p<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> tol<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"coMULTI\">/* should assert p-&gt;n &gt; 1 */</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> k<span class=\"sy0\">,</span> crosses<span class=\"sy0\">,</span> intersectResult<span class=\"sy0\">;</span><br/>\tvec <span class=\"sy0\">*</span>pv<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> min_x<span class=\"sy0\">,</span> max_x<span class=\"sy0\">,</span> min_y<span class=\"sy0\">,</span> max_y<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> p<span class=\"sy0\">-&gt;</span>n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tk <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> p<span class=\"sy0\">-&gt;</span>n<span class=\"sy0\">;</span><br/>\t\tmin_x <span class=\"sy0\">=</span> dist<span class=\"br0\">(</span>v<span class=\"sy0\">,</span> p<span class=\"sy0\">-&gt;</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> p<span class=\"sy0\">-&gt;</span>v<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">,</span> tol<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>min_x <span class=\"sy0\">&lt;</span> tol<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\tmin_x <span class=\"sy0\">=</span> max_x <span class=\"sy0\">=</span> p<span class=\"sy0\">-&gt;</span>v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">x</span><span class=\"sy0\">;</span><br/>\tmin_y <span class=\"sy0\">=</span> max_y <span class=\"sy0\">=</span> p<span class=\"sy0\">-&gt;</span>v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"coMULTI\">/* calculate extent of polygon */</span><br/>\tfor_v<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> pv<span class=\"sy0\">,</span> p<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>pv<span class=\"sy0\">-&gt;</span>x <span class=\"sy0\">&gt;</span> max_x<span class=\"br0\">)</span> max_x <span class=\"sy0\">=</span> pv<span class=\"sy0\">-&gt;</span>x<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>pv<span class=\"sy0\">-&gt;</span>x <span class=\"sy0\">&lt;</span> min_x<span class=\"br0\">)</span> min_x <span class=\"sy0\">=</span> pv<span class=\"sy0\">-&gt;</span>x<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>pv<span class=\"sy0\">-&gt;</span>y <span class=\"sy0\">&gt;</span> max_y<span class=\"br0\">)</span> max_y <span class=\"sy0\">=</span> pv<span class=\"sy0\">-&gt;</span>y<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>pv<span class=\"sy0\">-&gt;</span>y <span class=\"sy0\">&lt;</span> min_y<span class=\"br0\">)</span> min_y <span class=\"sy0\">=</span> pv<span class=\"sy0\">-&gt;</span>y<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>v.<span class=\"me1\">x</span> <span class=\"sy0\">&lt;</span> min_x <span class=\"sy0\">||</span> v.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> max_x <span class=\"sy0\">||</span> v.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> min_y <span class=\"sy0\">||</span> v.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> max_y<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tmax_x <span class=\"sy0\">-=</span> min_x<span class=\"sy0\">;</span> max_x <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\tmax_y <span class=\"sy0\">-=</span> min_y<span class=\"sy0\">;</span> max_y <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\tmax_x <span class=\"sy0\">+=</span> max_y<span class=\"sy0\">;</span><br/>\u00a0<br/>\tvec e<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tcrosses <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"coMULTI\">/* pick a rand point far enough to be outside polygon */</span><br/>\t\te.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> v.<span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>RAND_MAX <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>.<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> max_x<span class=\"sy0\">;</span><br/>\t\te.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> v.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>RAND_MAX <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>.<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> max_x<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> p<span class=\"sy0\">-&gt;</span>n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tk <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> p<span class=\"sy0\">-&gt;</span>n<span class=\"sy0\">;</span><br/>\t\t\tintersectResult <span class=\"sy0\">=</span> intersect<span class=\"br0\">(</span>v<span class=\"sy0\">,</span> e<span class=\"sy0\">,</span> p<span class=\"sy0\">-&gt;</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> p<span class=\"sy0\">-&gt;</span>v<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">,</span> tol<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"coMULTI\">/* picked a bad point, ray got too close to vertex.<br/>\t\t\t   re-pick */</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>intersectResult<span class=\"br0\">)</span> <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>intersectResult <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> crosses<span class=\"sy0\">++;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> p<span class=\"sy0\">-&gt;</span>n<span class=\"br0\">)</span> <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">(</span>crosses <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tvec vsq<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"br0\">{</span><span class=\"nu16\">2.5</span><span class=\"sy0\">,</span><span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">7.5</span><span class=\"sy0\">,</span><span class=\"nu16\">0.1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">7.5</span><span class=\"sy0\">,</span><span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">2.5</span><span class=\"sy0\">,</span><span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tpolygon_t sq <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> vsq <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"coMULTI\">/* outer square */</span><br/>\t\tsq_hole <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> vsq <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* outer and inner square, ie hole */</span><br/>\u00a0<br/>\tvec c <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* on edge */</span><br/>\tvec d <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> inside<span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>sq<span class=\"sy0\">,</span> <span class=\"nu19\">1e-10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> inside<span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>sq_hole<span class=\"sy0\">,</span> <span class=\"nu19\">1e-10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> inside<span class=\"br0\">(</span>d<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>sq<span class=\"sy0\">,</span> <span class=\"nu19\">1e-10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<span class=\"coMULTI\">/* in */</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> inside<span class=\"br0\">(</span>d<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>sq_hole<span class=\"sy0\">,</span> <span class=\"nu19\">1e-10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"coMULTI\">/* out (in the hole) */</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 81, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;algorithm&gt;</span><br/><span class=\"co2\">#include &lt;cstdlib&gt;</span><br/><span class=\"co2\">#include &lt;iomanip&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;limits&gt;</span><br/>\u00a0<br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">double</span> epsilon <span class=\"sy1\">=</span> numeric_limits<span class=\"sy1\">&lt;</span><span class=\"kw4\">float</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">epsilon</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">const</span> numeric_limits<span class=\"sy1\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span> DOUBLE<span class=\"sy4\">;</span><br/><span class=\"kw4\">const</span> <span class=\"kw4\">double</span> MIN <span class=\"sy1\">=</span> DOUBLE.<span class=\"me1\">min</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">const</span> <span class=\"kw4\">double</span> MAX <span class=\"sy1\">=</span> DOUBLE.<span class=\"me1\">max</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Point <span class=\"br0\">{</span> <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> x, y<span class=\"sy4\">;</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Edge <span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> Point a, b<span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> operator<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Point<span class=\"sy3\">&amp;</span> p<span class=\"br0\">)</span> <span class=\"kw4\">const</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a.<span class=\"me1\">y</span> <span class=\"sy1\">&gt;</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> Edge<span class=\"br0\">{</span> b, a <span class=\"br0\">}</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy1\">==</span> a.<span class=\"me1\">y</span> <span class=\"sy3\">||</span> p.<span class=\"me1\">y</span> <span class=\"sy1\">==</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> operator<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">{</span> p.<span class=\"me1\">x</span>, p.<span class=\"me1\">y</span> <span class=\"sy2\">+</span> epsilon <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy1\">&gt;</span> b.<span class=\"me1\">y</span> <span class=\"sy3\">||</span> p.<span class=\"me1\">y</span> <span class=\"sy1\">&lt;</span> a.<span class=\"me1\">y</span> <span class=\"sy3\">||</span> p.<span class=\"me1\">x</span> <span class=\"sy1\">&gt;</span> max<span class=\"br0\">(</span>a.<span class=\"me1\">x</span>, b.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> <span class=\"sy1\">&lt;</span> min<span class=\"br0\">(</span>a.<span class=\"me1\">x</span>, b.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>        <span class=\"kw4\">auto</span> blue <span class=\"sy1\">=</span> <span class=\"kw3\">abs</span><span class=\"br0\">(</span>a.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> p.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy1\">&gt;</span> MIN <span class=\"sy4\">?</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy2\">-</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span> <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> a.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> MAX<span class=\"sy4\">;</span><br/>        <span class=\"kw4\">auto</span> red <span class=\"sy1\">=</span> <span class=\"kw3\">abs</span><span class=\"br0\">(</span>a.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy1\">&gt;</span> MIN <span class=\"sy4\">?</span> <span class=\"br0\">(</span>b.<span class=\"me1\">y</span> <span class=\"sy2\">-</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span> <span class=\"br0\">(</span>b.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> a.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> MAX<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> blue <span class=\"sy1\">&gt;=</span> red<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Figure <span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> string  name<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">const</span> initializer_list<span class=\"sy1\">&lt;</span>Edge<span class=\"sy1\">&gt;</span> edges<span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> contains<span class=\"br0\">(</span><span class=\"kw4\">const</span> Point<span class=\"sy3\">&amp;</span> p<span class=\"br0\">)</span> <span class=\"kw4\">const</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">auto</span> c <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> e <span class=\"sy4\">:</span> edges<span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e<span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"br0\">)</span> c<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> c <span class=\"sy2\">%</span> <span class=\"nu0\">2</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">char</span> W <span class=\"sy1\">=</span> <span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><br/>    <span class=\"kw4\">void</span> check<span class=\"br0\">(</span><span class=\"kw4\">const</span> initializer_list<span class=\"sy1\">&lt;</span>Point<span class=\"sy1\">&gt;</span><span class=\"sy3\">&amp;</span> points, ostream<span class=\"sy3\">&amp;</span> os<span class=\"br0\">)</span> <span class=\"kw4\">const</span><br/>    <span class=\"br0\">{</span><br/>        os <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Is point inside figure \"</span> <span class=\"sy1\">&lt;&lt;</span> name <span class=\"sy1\">&lt;&lt;</span>  <span class=\"st0\">'?'</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> p <span class=\"sy4\">:</span> points<span class=\"br0\">)</span><br/>            os <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  (\"</span> <span class=\"sy1\">&lt;&lt;</span> setw<span class=\"br0\">(</span>W<span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> p.<span class=\"me1\">x</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">','</span> <span class=\"sy1\">&lt;&lt;</span> setw<span class=\"br0\">(</span>W<span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> p.<span class=\"me1\">y</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"): \"</span> <span class=\"sy1\">&lt;&lt;</span> boolalpha <span class=\"sy1\">&lt;&lt;</span> contains<span class=\"br0\">(</span>p<span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>        os <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> initializer_list<span class=\"sy1\">&lt;</span>Point<span class=\"sy1\">&gt;</span> points <span class=\"sy1\">=</span>  <span class=\"br0\">{</span> <span class=\"br0\">{</span> <span class=\"nu16\">5.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">5.0</span>, <span class=\"nu16\">8.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"sy2\">-</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">8.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">const</span> Figure square <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Square\"</span>,<br/>        <span class=\"br0\">{</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> Figure square_hole <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Square hole\"</span>,<br/>        <span class=\"br0\">{</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>,<br/>           <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">7.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">7.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">7.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">7.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> Figure strange <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Strange\"</span>,<br/>        <span class=\"br0\">{</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">7.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>,<br/>           <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">7.5</span>, <span class=\"nu16\">7.5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">2.5</span>, <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> Figure exagon <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Exagon\"</span>,<br/>        <span class=\"br0\">{</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">3.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">7.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">7.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">7.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">7.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">3.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>,<br/>           <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">3.0</span>, <span class=\"nu16\">10.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">0.0</span>, <span class=\"nu16\">5.0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu16\">3.0</span>, <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">auto</span> f <span class=\"sy4\">:</span> <span class=\"br0\">{</span>square, square_hole, strange, exagon<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>        f.<span class=\"me1\">check</span><span class=\"br0\">(</span>points, <span class=\"kw3\">cout</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">EXIT_SUCCESS</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "CoffeeScript", "loc": 28, "block": "<pre class=\"coffeescript highlighted_source\">  Point = <span class=\"br0\">(</span><span class=\"sy0\">@</span>x<span class=\"sy0\">,@</span>y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>\u00a0<br/>  pointInPoly = <span class=\"br0\">(</span>point<span class=\"sy0\">,</span>poly<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    segments = <span class=\"kw1\">for</span> pointA<span class=\"sy0\">,</span> index <span class=\"kw1\">in</span> poly<br/>                 pointB = poly<span class=\"br0\">[</span><span class=\"br0\">(</span>index <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> poly.<span class=\"me1\">length</span><span class=\"br0\">]</span><br/>                 <span class=\"br0\">[</span>pointA<span class=\"sy0\">,</span>pointB<span class=\"br0\">]</span><br/>    intesected = <span class=\"br0\">(</span>segment <span class=\"kw1\">for</span> segment <span class=\"kw1\">in</span> segments <span class=\"kw1\">when</span> rayIntesectsSegment<span class=\"br0\">(</span>point<span class=\"sy0\">,</span>segment<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    intesected.<span class=\"me1\">length</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">!</span>= <span class=\"nu0\">0</span><br/>\u00a0<br/>  rayIntesectsSegment = <span class=\"br0\">(</span>p<span class=\"sy0\">,</span>segment<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    <span class=\"br0\">[</span>p1<span class=\"sy0\">,</span>p2<span class=\"br0\">]</span> = segment<br/>    <span class=\"br0\">[</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">]</span> = <span class=\"kw1\">if</span> p1.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> p2.<span class=\"me1\">y</span><br/>              <span class=\"br0\">[</span>p1<span class=\"sy0\">,</span>p2<span class=\"br0\">]</span><br/>            <span class=\"kw1\">else</span><br/>              <span class=\"br0\">[</span>p2<span class=\"sy0\">,</span>p1<span class=\"br0\">]</span><br/>    <span class=\"kw1\">if</span> p.<span class=\"me1\">y</span> == b.<span class=\"me1\">y</span> <span class=\"sy0\">||</span> p.<span class=\"me1\">y</span> == a.<span class=\"me1\">y</span><br/>      p.<span class=\"me1\">y</span> <span class=\"sy0\">+</span>= Number.<span class=\"me1\">MIN_VALUE</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">y</span> <span class=\"sy0\">||</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> a.<span class=\"me1\">y</span><br/>      <span class=\"kw4\">false</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> p.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">&amp;&amp;</span> p.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">x</span><br/>      <span class=\"kw4\">false</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> p.<span class=\"me1\">x</span> <span class=\"sy0\">&lt;</span> a.<span class=\"me1\">x</span> <span class=\"sy0\">&amp;&amp;</span> p.<span class=\"me1\">x</span> <span class=\"sy0\">&lt;</span> b.<span class=\"me1\">x</span><br/>      <span class=\"kw4\">true</span><br/>    <span class=\"kw1\">else</span><br/>      mAB = <span class=\"br0\">(</span>b.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>b.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">x</span><span class=\"br0\">)</span><br/>      mAP = <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">x</span><span class=\"br0\">)</span><br/>      mAP <span class=\"sy0\">&gt;</span> mAB</pre>"}, {"lang": "Common Lisp", "loc": 30, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> point-in-polygon <span class=\"br0\">(</span>point polygon<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>in-p <span class=\"kw1\">nil</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>endp polygon<span class=\"br0\">)</span> in-p<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span>ray-intersects-segment point <span class=\"br0\">(</span>pop polygon<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> in-p <span class=\"br0\">(</span><span class=\"kw1\">not</span> in-p<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> ray-intersects-segment <span class=\"br0\">(</span>point segment <span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>epsilon <span class=\"sy0\">.</span>001<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>destructuring-bind <span class=\"br0\">(</span>px <span class=\"sy0\">.</span> py<span class=\"br0\">)</span> point<br/>    <span class=\"br0\">(</span>destructuring-bind <span class=\"br0\">(</span><span class=\"br0\">(</span>ax <span class=\"sy0\">.</span> ay<span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span>bx <span class=\"sy0\">.</span> by<span class=\"br0\">)</span><span class=\"br0\">)</span> segment<br/>      <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> ay by<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>rotatef ay by<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>rotatef ax bx<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> py ay<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> py by<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>incf py epsilon<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>       <span class=\"co1\">;; point is above, below, or to the right of the rectangle</span><br/>       <span class=\"co1\">;; determined by segment; ray does not intesect the segment.</span><br/>       <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> px <span class=\"br0\">(</span><span class=\"kw1\">max</span> ax bx<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> py <span class=\"br0\">(</span><span class=\"kw1\">max</span> ay by<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> py <span class=\"br0\">(</span><span class=\"kw1\">min</span> ay by<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">nil</span><span class=\"br0\">)</span><br/>       <span class=\"co1\">;; point is to left of the rectangle; ray intersects segment</span><br/>       <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> px <span class=\"br0\">(</span><span class=\"kw1\">min</span> ax bx<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        t<span class=\"br0\">)</span><br/>       <span class=\"co1\">;; point is within the rectangle...</span><br/>       <span class=\"br0\">(</span>t <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>m-red <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> ax bx<span class=\"br0\">)</span> <span class=\"kw1\">nil</span><br/>                         <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>- by ay<span class=\"br0\">)</span> <span class=\"br0\">(</span>- bx ax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span>m-blue <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> px ax<span class=\"br0\">)</span> <span class=\"kw1\">nil</span><br/>                          <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>- py ay<span class=\"br0\">)</span> <span class=\"br0\">(</span>- px ax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>             <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null</span> m-blue<span class=\"br0\">)</span> t<span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null</span> m-red<span class=\"br0\">)</span> <span class=\"kw1\">nil</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>t <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> m-blue m-red<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 68, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">immutable</span> <span class=\"kw4\">struct</span> Point <span class=\"br0\">{</span> <span class=\"kw4\">double</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"kw4\">immutable</span> <span class=\"kw4\">struct</span> Edge <span class=\"br0\">{</span> Point a<span class=\"sy0\">,</span> b<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"kw4\">immutable</span> <span class=\"kw4\">struct</span> Figure <span class=\"br0\">{</span><br/>    <span class=\"kw4\">string</span> name<span class=\"sy0\">;</span><br/>    Edge<span class=\"br0\">[</span><span class=\"br0\">]</span> edges<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> contains<span class=\"br0\">(</span><span class=\"kw2\">in</span> Figure poly<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> Point p<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">bool</span> raySegI<span class=\"br0\">(</span><span class=\"kw2\">in</span> Point p<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> Edge edge<span class=\"br0\">)</span><br/>    <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw4\">enum</span> <span class=\"kw4\">double</span> epsilon <span class=\"sy0\">=</span> <span class=\"nu16\">0.00001</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">with</span> <span class=\"br0\">(</span>edge<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span><br/>                <span class=\"co1\">//swap(a, b); // if edge is mutable</span><br/>                <span class=\"kw1\">return</span> raySegI<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> Edge<span class=\"br0\">(</span>b<span class=\"sy0\">,</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">||</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> b.<span class=\"me1\">y</span><span class=\"br0\">)</span><br/>                <span class=\"co1\">//p.y += epsilon; // if p is mutable</span><br/>                <span class=\"kw1\">return</span> raySegI<span class=\"br0\">(</span>Point<span class=\"br0\">(</span>p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> epsilon<span class=\"br0\">)</span><span class=\"sy0\">,</span> edge<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">y</span> <span class=\"sy0\">||</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">||</span> p.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> max<span class=\"br0\">(</span>a.<span class=\"me1\">x</span><span class=\"sy0\">,</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> <span class=\"sy0\">&lt;</span> min<span class=\"br0\">(</span>a.<span class=\"me1\">x</span><span class=\"sy0\">,</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">immutable</span> blue <span class=\"sy0\">=</span> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span>a.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> p.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"kw4\">double</span>.<span class=\"me1\">min_normal</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span><br/>                             <span class=\"br0\">(</span><span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><br/>                             <span class=\"kw4\">double</span>.<span class=\"me1\">max</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">immutable</span> red <span class=\"sy0\">=</span> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span>a.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"kw4\">double</span>.<span class=\"me1\">min_normal</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span><br/>                            <span class=\"br0\">(</span><span class=\"br0\">(</span>b.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>b.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><br/>                            <span class=\"kw4\">double</span>.<span class=\"me1\">max</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> blue <span class=\"sy0\">&gt;=</span> red<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> poly.<span class=\"me1\">edges</span>.<span class=\"me1\">count</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>e <span class=\"sy0\">=&gt;</span> raySegI<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> e<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> Figure<span class=\"br0\">[</span><span class=\"br0\">]</span> polys <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>  <span class=\"br0\">{</span><span class=\"st0\">\"Square\"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span><span class=\"st0\">\"Square hole\"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span><span class=\"st0\">\"Strange\"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">7.5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>   <span class=\"br0\">{</span> <span class=\"nu16\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu16\">2.5</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span><span class=\"st0\">\"Exagon\"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">3.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">7.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">7.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">5.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu16\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">5.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">7.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">7.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">3.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">3.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">5.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">,</span>  <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">5.0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu16\">3.0</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> Point<span class=\"br0\">[</span><span class=\"br0\">]</span> testPoints <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">{</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>                                    <span class=\"br0\">{</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> poly<span class=\"sy0\">;</span> polys<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st_h\">`Is point inside figure \"%s\"?`</span><span class=\"sy0\">,</span> poly.<span class=\"me1\">name</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> p<span class=\"sy0\">;</span> testPoints<span class=\"br0\">)</span><br/>            writefln<span class=\"br0\">(</span><span class=\"st0\">\"  (%3s,\u00a0%2s):\u00a0%s\"</span><span class=\"sy0\">,</span> p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span><span class=\"sy0\">,</span> contains<span class=\"br0\">(</span>poly<span class=\"sy0\">,</span> p<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        writeln<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Factor", "loc": 19, "block": "<pre class=\"text highlighted_source\">USING: kernel prettyprint sequences arrays math math.vectors\u00a0;<br/>IN: raycasting<br/>\u00a0<br/>: between ( a b x --\u00a0? ) [ last ] <a class=\"__cf_email__\" data-cfemail=\"aaded8c3ea\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> [ &lt; ] curry <a class=\"__cf_email__\" data-cfemail=\"84e6edc4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> xor\u00a0;<br/>\u00a0<br/>: lincomb ( a b x -- w )<br/>  3dup [ last ] <a class=\"__cf_email__\" data-cfemail=\"a7d3d5cee7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>  [ - ] curry <a class=\"__cf_email__\" data-cfemail=\"abc9c2eb\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>  [ drop ] 2dip<br/>  neg 2dup + [ / ] curry <a class=\"__cf_email__\" data-cfemail=\"0d6f644d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>  [ [ v*n ] curry ] <a class=\"__cf_email__\" data-cfemail=\"afcdc6ef\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> bi*  v+\u00a0;<br/>: leftof ( a b x --\u00a0? ) dup [ lincomb ] dip [ first ] <a class=\"__cf_email__\" data-cfemail=\"92f0fbd2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> &gt;\u00a0;<br/>\u00a0<br/>: ray ( a b x --\u00a0? ) [ between ] [ leftof ] 3bi and\u00a0;<br/>\u00a0<br/>: raycast ( poly x --\u00a0? )<br/>  [ dup first suffix [ rest-slice ] [ but-last-slice ] bi ] dip<br/>  [ ray ] curry 2map<br/>  f [ xor ] reduce\u00a0;</pre>"}, {"lang": "Fortran", "loc": 35, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">module</span> Polygons<br/>  <span class=\"kw3\">use</span> Points_Module<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">type</span> polygon<br/>     <span class=\"kw3\">type</span><span class=\"br0\">(</span>point<span class=\"br0\">)</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, <span class=\"kw3\">allocatable</span> <span class=\"sy0\">::</span> <span class=\"me2\">points</span><br/>     <span class=\"kw3\">integer</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, <span class=\"kw3\">allocatable</span> <span class=\"sy0\">::</span> <span class=\"me2\">vertices</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw3\">type</span> polygon<br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> create_polygon<span class=\"br0\">(</span>pts, vt<span class=\"br0\">)</span><br/>    <span class=\"kw3\">type</span><span class=\"br0\">(</span>polygon<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">create_polygon</span><br/>    <span class=\"kw3\">type</span><span class=\"br0\">(</span>point<span class=\"br0\">)</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">pts</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">vt</span><br/>\u00a0<br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">np</span>, nv<br/>\u00a0<br/>    np <span class=\"sy0\">=</span> <span class=\"kw4\">size</span><span class=\"br0\">(</span>pts,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    nv <span class=\"sy0\">=</span> <span class=\"kw4\">size</span><span class=\"br0\">(</span>vt,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">allocate</span><span class=\"br0\">(</span>create_polygon<span class=\"sy0\">%</span>points<span class=\"br0\">(</span>np<span class=\"br0\">)</span>, create_polygon<span class=\"sy0\">%</span>vertices<span class=\"br0\">(</span>nv<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    create_polygon<span class=\"sy0\">%</span>points <span class=\"sy0\">=</span> pts<br/>    create_polygon<span class=\"sy0\">%</span>vertices <span class=\"sy0\">=</span> vt<br/>\u00a0<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> create_polygon<br/>\u00a0<br/>  <span class=\"kw1\">subroutine</span> free_polygon<span class=\"br0\">(</span>pol<span class=\"br0\">)</span><br/>    <span class=\"kw3\">type</span><span class=\"br0\">(</span>polygon<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">inout</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">pol</span><br/>\u00a0<br/>    <span class=\"kw1\">deallocate</span><span class=\"br0\">(</span>pol<span class=\"sy0\">%</span>points, pol<span class=\"sy0\">%</span>vertices<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span> free_polygon<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">module</span> Polygons</pre>"}, {"lang": "FreeBASIC", "loc": 114, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"kw1\">Type</span> <span class=\"kw1\">Point</span><br/>  <span class=\"kw1\">As</span> <span class=\"kw1\">Single</span> x,y<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Type</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> inpolygon<span class=\"br0\">(</span>p1<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span>,p2 <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span><br/>  <span class=\"co2\">#Macro isleft2(L,p)</span><br/>    -<span class=\"kw1\">Sgn</span><span class=\"br0\">(</span>  <span class=\"br0\">(</span>L<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span>-L<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span><span class=\"br0\">)</span>*<span class=\"br0\">(</span>p.<span class=\"me1\">y</span>-L<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span><span class=\"br0\">)</span> - <span class=\"br0\">(</span>p.<span class=\"me1\">x</span>-L<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span><span class=\"br0\">)</span>*<span class=\"br0\">(</span>L<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span>-L<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co2\">#EndMacro</span><br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> index,nextindex<br/>  <span class=\"kw1\">Dim</span> k <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span>=<span class=\"kw1\">UBound</span><span class=\"br0\">(</span>p1<span class=\"br0\">)</span>+<span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Dim</span> send <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span><br/>  <span class=\"kw1\">Dim</span> wn <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span>=<span class=\"nu0\">0</span><br/>  <span class=\"kw1\">For</span> n <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span>=<span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>p1<span class=\"br0\">)</span><br/>    index=n <span class=\"kw1\">Mod</span> k:nextindex=<span class=\"br0\">(</span>n+<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> k<br/>    <span class=\"kw1\">If</span> nextindex=<span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> nextindex=<span class=\"nu0\">1</span><br/>    send<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span>=p1<span class=\"br0\">(</span>index<span class=\"br0\">)</span>.<span class=\"me1\">x</span>:send<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span>=p1<span class=\"br0\">(</span>nextindex<span class=\"br0\">)</span>.<span class=\"me1\">x</span><br/>    send<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span>=p1<span class=\"br0\">(</span>index<span class=\"br0\">)</span>.<span class=\"me1\">y</span>:send<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span>=p1<span class=\"br0\">(</span>nextindex<span class=\"br0\">)</span>.<span class=\"me1\">y</span><br/>    <span class=\"kw1\">If</span> p1<span class=\"br0\">(</span>index<span class=\"br0\">)</span>.<span class=\"me1\">y</span>&lt;=p2.<span class=\"me1\">y</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">If</span> p1<span class=\"br0\">(</span>nextindex<span class=\"br0\">)</span>.<span class=\"me1\">y</span>&gt;p2.<span class=\"me1\">y</span> <span class=\"kw1\">Then</span><br/>        <span class=\"kw1\">If</span> isleft2<span class=\"br0\">(</span>send,p2<span class=\"br0\">)</span>&gt;=<span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> <span class=\"co1\">'=</span><br/>          wn=wn+<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Else</span><br/>      <span class=\"kw1\">If</span> p1<span class=\"br0\">(</span>nextindex<span class=\"br0\">)</span>.<span class=\"me1\">y</span>&lt;=p2.<span class=\"me1\">y</span> <span class=\"kw1\">Then</span><br/>        <span class=\"kw1\">If</span> isleft2<span class=\"br0\">(</span>send,p2<span class=\"br0\">)</span>&lt;=<span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><span class=\"co1\">'=</span><br/>          wn=wn-<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Next</span> n<br/>  <span class=\"kw1\">Return</span> wn<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span> square<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>  =<span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span> hole<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>    =<span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"nu0\">2.5</span>,<span class=\"nu0\">2.5</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">7.5</span>,<span class=\"nu0\">2.5</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">7.5</span>,<span class=\"nu0\">7.5</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">2.5</span>,<span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span> strange<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span> =<span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">2.5</span>,<span class=\"nu0\">2.5</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">2.5</span>,<span class=\"nu0\">7.5</span><span class=\"br0\">)</span>,_<br/>                              <span class=\"br0\">(</span><span class=\"nu0\">7.5</span>,<span class=\"nu0\">7.5</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">2.5</span>,<span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Point</span> exagon<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span>  =<span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">7</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">7</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">'printouts</span><br/><span class=\"kw1\">For</span> z <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span>=<span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><br/>  Select <span class=\"kw1\">Case</span> z<br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">1</span>: <span class=\"kw1\">Print</span> <span class=\"st0\">\"squared\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,8)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(-10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span>-<span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(0,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(8,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">8</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,10)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">2</span>:<span class=\"kw1\">Print</span> <span class=\"st0\">\"squared hole\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,8)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span> And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(-10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span>-<span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span>-<span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(0,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(8,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">8</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">8</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,10)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> inpolygon<span class=\"br0\">(</span>hole<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span>And inpolygon<span class=\"br0\">(</span>square<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">3</span>:<span class=\"kw1\">Print</span> <span class=\"st0\">\"strange\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,8)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(-10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span>-<span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(0,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(8,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">8</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,10)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>strange<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span><br/>    <span class=\"kw1\">Case</span> <span class=\"nu0\">4</span>:<span class=\"kw1\">Print</span> <span class=\"st0\">\"exagon\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(5,8)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(-10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span>-<span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(0,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(8,5)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">8</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span> <span class=\"st0\">\"(10,10)  \"</span>\u00a0;<span class=\"kw1\">Tab</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">If</span> inpolygon<span class=\"br0\">(</span>exagon<span class=\"br0\">(</span><span class=\"br0\">)</span>,Type&lt;Point&gt;<span class=\"br0\">(</span><span class=\"nu0\">10</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"in\"</span> <span class=\"kw1\">Else</span> <span class=\"kw1\">Print</span> <span class=\"st0\">\"out\"</span><br/>      <span class=\"kw1\">Print</span><br/>  <span class=\"kw1\">End</span> Select<br/><span class=\"kw1\">Next</span> z<br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Go", "loc": 102, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">type</span> xy <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    x<span class=\"sy1\">,</span> y <span class=\"kw4\">float64</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> seg <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    p1<span class=\"sy1\">,</span> p2 xy<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> poly <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    name  <span class=\"kw4\">string</span><br/>    sides <span class=\"sy1\">[]</span>seg<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> inside<span class=\"sy1\">(</span>pt xy<span class=\"sy1\">,</span> pg poly<span class=\"sy1\">)</span> <span class=\"sy1\">(</span><span class=\"nu2\">i</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> side <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> pg<span class=\"sy3\">.</span>sides <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> rayIntersectsSegment<span class=\"sy1\">(</span>pt<span class=\"sy1\">,</span> side<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>            <span class=\"nu2\">i</span> <span class=\"sy2\">=</span> <span class=\"sy3\">!</span><span class=\"nu2\">i</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> rayIntersectsSegment<span class=\"sy1\">(</span>p xy<span class=\"sy1\">,</span> s seg<span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">var</span> a<span class=\"sy1\">,</span> b xy<br/>    <span class=\"kw1\">if</span> s<span class=\"sy3\">.</span>p1<span class=\"sy3\">.</span>y &lt; s<span class=\"sy3\">.</span>p2<span class=\"sy3\">.</span>y <span class=\"sy1\">{</span><br/>        a<span class=\"sy1\">,</span> b <span class=\"sy2\">=</span> s<span class=\"sy3\">.</span>p1<span class=\"sy1\">,</span> s<span class=\"sy3\">.</span>p2<br/>    <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>        a<span class=\"sy1\">,</span> b <span class=\"sy2\">=</span> s<span class=\"sy3\">.</span>p2<span class=\"sy1\">,</span> s<span class=\"sy3\">.</span>p1<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> p<span class=\"sy3\">.</span>y <span class=\"sy3\">==</span> a<span class=\"sy3\">.</span>y <span class=\"sy3\">||</span> p<span class=\"sy3\">.</span>y <span class=\"sy3\">==</span> b<span class=\"sy3\">.</span>y <span class=\"sy1\">{</span><br/>        p<span class=\"sy3\">.</span>y <span class=\"sy2\">=</span> math<span class=\"sy3\">.</span>Nextafter<span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>y<span class=\"sy1\">,</span> math<span class=\"sy3\">.</span>Inf<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">))</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>y &lt; a<span class=\"sy3\">.</span>y <span class=\"sy3\">||</span> p<span class=\"sy3\">.</span>y &gt; b<span class=\"sy3\">.</span>y <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> a<span class=\"sy3\">.</span>x &gt; b<span class=\"sy3\">.</span>x <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>x &gt; a<span class=\"sy3\">.</span>x <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>x &lt; b<span class=\"sy3\">.</span>x <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>x &gt; b<span class=\"sy3\">.</span>x <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>x &lt; a<span class=\"sy3\">.</span>x <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>y<span class=\"sy3\">-</span>a<span class=\"sy3\">.</span>y<span class=\"sy1\">)</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>x<span class=\"sy3\">-</span>a<span class=\"sy3\">.</span>x<span class=\"sy1\">)</span> &gt;<span class=\"sy2\">=</span> <span class=\"sy1\">(</span>b<span class=\"sy3\">.</span>y<span class=\"sy3\">-</span>a<span class=\"sy3\">.</span>y<span class=\"sy1\">)</span><span class=\"sy3\">/</span><span class=\"sy1\">(</span>b<span class=\"sy3\">.</span>x<span class=\"sy3\">-</span>a<span class=\"sy3\">.</span>x<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> <span class=\"sy1\">(</span><br/>    p1  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}</span><br/>    p2  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}</span><br/>    p3  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">}</span><br/>    p4  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">}</span><br/>    p5  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    p6  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">7</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    p7  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">7</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    p8  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    p9  <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    p10 <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    p11 <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}</span><br/>    p12 <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}</span><br/>    p13 <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">}</span><br/>    p14 <span class=\"sy2\">=</span> xy<span class=\"sy1\">{</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">}</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> tpg <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span>poly<span class=\"sy1\">{</span><br/>    <span class=\"sy1\">{</span><span class=\"st0\">\"square\"</span><span class=\"sy1\">,</span> <span class=\"sy1\">[]</span>seg<span class=\"sy1\">{{</span>p1<span class=\"sy1\">,</span> p2<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p2<span class=\"sy1\">,</span> p3<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p3<span class=\"sy1\">,</span> p4<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p4<span class=\"sy1\">,</span> p1<span class=\"sy1\">}}},</span><br/>    <span class=\"sy1\">{</span><span class=\"st0\">\"square hole\"</span><span class=\"sy1\">,</span> <span class=\"sy1\">[]</span>seg<span class=\"sy1\">{{</span>p1<span class=\"sy1\">,</span> p2<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p2<span class=\"sy1\">,</span> p3<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p3<span class=\"sy1\">,</span> p4<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p4<span class=\"sy1\">,</span> p1<span class=\"sy1\">},</span><br/>        <span class=\"sy1\">{</span>p5<span class=\"sy1\">,</span> p6<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p6<span class=\"sy1\">,</span> p7<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p7<span class=\"sy1\">,</span> p8<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p8<span class=\"sy1\">,</span> p5<span class=\"sy1\">}}},</span><br/>    <span class=\"sy1\">{</span><span class=\"st0\">\"strange\"</span><span class=\"sy1\">,</span> <span class=\"sy1\">[]</span>seg<span class=\"sy1\">{{</span>p1<span class=\"sy1\">,</span> p5<span class=\"sy1\">},</span><br/>        <span class=\"sy1\">{</span>p5<span class=\"sy1\">,</span> p4<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p4<span class=\"sy1\">,</span> p8<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p8<span class=\"sy1\">,</span> p7<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p7<span class=\"sy1\">,</span> p3<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p3<span class=\"sy1\">,</span> p2<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p2<span class=\"sy1\">,</span> p5<span class=\"sy1\">}}},</span><br/>    <span class=\"sy1\">{</span><span class=\"st0\">\"exagon\"</span><span class=\"sy1\">,</span> <span class=\"sy1\">[]</span>seg<span class=\"sy1\">{{</span>p11<span class=\"sy1\">,</span> p12<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p12<span class=\"sy1\">,</span> p10<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p10<span class=\"sy1\">,</span> p13<span class=\"sy1\">},</span><br/>        <span class=\"sy1\">{</span>p13<span class=\"sy1\">,</span> p14<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p14<span class=\"sy1\">,</span> p9<span class=\"sy1\">},</span> <span class=\"sy1\">{</span>p9<span class=\"sy1\">,</span> p11<span class=\"sy1\">}}},</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> tpt <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span>xy<span class=\"sy1\">{</span><br/>    <span class=\"co1\">// test points common in other solutions on this page</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"sy3\">-</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">},</span><br/>    <span class=\"co1\">// test points that show the problem with \"strange\"</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">},</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> pg <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> tpg <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%s:<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> pg<span class=\"sy3\">.</span>name<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> pt <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> tpt <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>pt<span class=\"sy1\">,</span> inside<span class=\"sy1\">(</span>pt<span class=\"sy1\">,</span> pg<span class=\"sy1\">))</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 49, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Ratio<br/>\u00a0<br/><span class=\"kw1\">type</span> Point <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"br0\">)</span><br/><span class=\"kw1\">type</span> Polygon <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Point<span class=\"br0\">]</span><br/><span class=\"kw1\">data</span> Line <span class=\"sy0\">=</span> Sloped <span class=\"br0\">{</span>lineSlope<span class=\"sy0\">,</span> lineYIntercept <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"br0\">}</span> <span class=\"sy0\">|</span><br/>            Vert <span class=\"br0\">{</span>lineXIntercept <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Rational\"><span class=\"kw4\">Rational</span></a><span class=\"br0\">}</span><br/>\u00a0<br/>polygonSides <span class=\"sy0\">::</span> Polygon <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>Point<span class=\"sy0\">,</span> Point<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>polygonSides poly<span class=\"sy0\">@</span><span class=\"br0\">(</span>p1\u00a0: ps<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> poly <span class=\"sy0\">$</span> ps <span class=\"sy0\">++</span> <span class=\"br0\">[</span>p1<span class=\"br0\">]</span><br/>\u00a0<br/>intersects <span class=\"sy0\">::</span> Point <span class=\"sy0\">-&gt;</span> Line <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/><span class=\"coMULTI\">{- @intersects (px, py) <a class=\"__cf_email__\" data-cfemail=\"c7ab87\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> is true if the ray {(x, py) | x \u2265 px}<br/>intersects l. -}</span><br/>intersects <span class=\"br0\">(</span>px<span class=\"sy0\">,</span> <span class=\"sy0\">_</span><span class=\"br0\">)</span>  <span class=\"br0\">(</span>Vert xint<span class=\"br0\">)</span>  <span class=\"sy0\">=</span> px <span class=\"sy0\">&lt;=</span> xint<br/>intersects <span class=\"br0\">(</span>px<span class=\"sy0\">,</span> py<span class=\"br0\">)</span> <span class=\"br0\">(</span>Sloped m b<span class=\"br0\">)</span> <span class=\"sy0\">|</span> m <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>     <span class=\"sy0\">=</span> py <span class=\"sy0\">&lt;=</span> m <span class=\"sy0\">*</span> px <span class=\"sy0\">+</span> b<br/>                                 <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> py <span class=\"sy0\">&gt;=</span> m <span class=\"sy0\">*</span> px <span class=\"sy0\">+</span> b<br/>\u00a0<br/>onLine <span class=\"sy0\">::</span> Point <span class=\"sy0\">-&gt;</span> Line <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/><span class=\"coMULTI\">{- Is the point on the line? -}</span><br/>onLine <span class=\"br0\">(</span>px<span class=\"sy0\">,</span> <span class=\"sy0\">_</span><span class=\"br0\">)</span>  <span class=\"br0\">(</span>Vert xint<span class=\"br0\">)</span>  <span class=\"sy0\">=</span> px <span class=\"sy0\">==</span> xint<br/>onLine <span class=\"br0\">(</span>px<span class=\"sy0\">,</span> py<span class=\"br0\">)</span> <span class=\"br0\">(</span>Sloped m b<span class=\"br0\">)</span> <span class=\"sy0\">=</span> py <span class=\"sy0\">==</span> m <span class=\"sy0\">*</span> px <span class=\"sy0\">+</span> b<br/>\u00a0<br/>carrier <span class=\"sy0\">::</span> <span class=\"br0\">(</span>Point<span class=\"sy0\">,</span> Point<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> Line<br/><span class=\"coMULTI\">{- Finds the line containing the given line segment. -}</span><br/>carrier <span class=\"br0\">(</span><span class=\"br0\">(</span>ax<span class=\"sy0\">,</span> ay<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>bx<span class=\"sy0\">,</span> by<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> ax <span class=\"sy0\">==</span> bx  <span class=\"sy0\">=</span> Vert ax<br/>                             <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> Sloped slope yint<br/>  <span class=\"kw1\">where</span> slope <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ay <span class=\"sy0\">-</span> by<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>ax <span class=\"sy0\">-</span> bx<span class=\"br0\">)</span><br/>        yint <span class=\"sy0\">=</span> ay <span class=\"sy0\">-</span> slope <span class=\"sy0\">*</span> ax<br/>\u00a0<br/>between <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a> a <span class=\"sy0\">=&gt;</span> a <span class=\"sy0\">-&gt;</span> a <span class=\"sy0\">-&gt;</span> a <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/>between x a b <span class=\"sy0\">|</span> a <span class=\"sy0\">&gt;</span> b     <span class=\"sy0\">=</span> b <span class=\"sy0\">&lt;=</span> x <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;=</span> a<br/>              <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> a <span class=\"sy0\">&lt;=</span> x <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;=</span> b<br/>\u00a0<br/>inPolygon <span class=\"sy0\">::</span> Point <span class=\"sy0\">-&gt;</span> Polygon <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/>inPolygon p<span class=\"sy0\">@</span><span class=\"br0\">(</span>px<span class=\"sy0\">,</span> py<span class=\"br0\">)</span> <span class=\"sy0\">=</span> f <span class=\"nu0\">0</span> <span class=\"sy0\">.</span> polygonSides<br/>  <span class=\"kw1\">where</span> f n <span class=\"br0\">[</span><span class=\"br0\">]</span>                             <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:odd\"><span class=\"kw3\">odd</span></a> n<br/>        f n <span class=\"br0\">(</span>side\u00a0: sides<span class=\"br0\">)</span> <span class=\"sy0\">|</span> far           <span class=\"sy0\">=</span> f n       sides<br/>                           <span class=\"sy0\">|</span> onSegment     <span class=\"sy0\">=</span> True<br/>                           <span class=\"sy0\">|</span> rayIntersects <span class=\"sy0\">=</span> f <span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> sides<br/>                           <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a>     <span class=\"sy0\">=</span> f n       sides<br/>          <span class=\"kw1\">where</span> far <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:not\"><span class=\"kw3\">not</span></a> <span class=\"sy0\">$</span> between py ay by<br/>                onSegment <span class=\"sy0\">|</span> ay <span class=\"sy0\">==</span> by  <span class=\"sy0\">=</span> between px ax bx<br/>                          <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> p `onLine` line<br/>                rayIntersects <span class=\"sy0\">=</span><br/>                    intersects p line <span class=\"sy0\">&amp;&amp;</span><br/>                    <span class=\"br0\">(</span>py <span class=\"sy0\">/=</span> ay <span class=\"sy0\">||</span> by <span class=\"sy0\">&lt;</span> py<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span><br/>                    <span class=\"br0\">(</span>py <span class=\"sy0\">/=</span> by <span class=\"sy0\">||</span> ay <span class=\"sy0\">&lt;</span> py<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"br0\">(</span>ax<span class=\"sy0\">,</span> ay<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>bx<span class=\"sy0\">,</span> by<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> side<br/>                line <span class=\"sy0\">=</span> carrier side</pre>"}, {"lang": "J", "loc": 9, "block": "<pre class=\"j highlighted_source\"><span class=\"co1\">NB.*crossPnP v point in closed polygon, crossing number</span><br/><span class=\"co1\">NB.  bool=. points crossPnP polygon</span><br/>crossPnP=: <span class=\"nu0\">4</span>\u00a0: <span class=\"nu0\">0</span>\"<span class=\"nu0\">2</span><br/>  <span class=\"st_h\">'X Y'</span>=. |:<span class=\"kw2\">x</span><br/>  <span class=\"st_h\">'x0 y0 x1 y1'</span>=. |:<span class=\"nu0\">2</span> ,/\\^:<span class=\"sy0\">(</span><span class=\"nu0\">2</span>={:@<a class=\"__cf_email__\" data-cfemail=\"0f2b4f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>]<span class=\"sy0\">)</span> <span class=\"kw2\">y</span><br/>  p1=. <span class=\"sy0\">((</span>y0&lt;:/Y<span class=\"sy0\">)</span>*. y1&gt;/Y<span class=\"sy0\">)</span> +. <span class=\"sy0\">(</span>y0&gt;/Y<span class=\"sy0\">)</span>*. y1&lt;:/Y<br/>  p2=. <span class=\"sy0\">(</span>x0-/X<span class=\"sy0\">)</span> &lt; <span class=\"sy0\">(</span>x0-x1<span class=\"sy0\">)</span> * <span class=\"sy0\">(</span>y0-/Y<span class=\"sy0\">)</span>\u00a0% <span class=\"sy0\">(</span>y0 - y1<span class=\"sy0\">)</span><br/>  <span class=\"nu0\">2</span>|+/ p1*.p2<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 56, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">static</span> java.<span class=\"me1\">lang</span>.<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"sy0\">*;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RayCasting <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> intersects<span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> A, <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> B, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> P<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> B<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> intersects<span class=\"br0\">(</span>B, A, P<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">||</span> P<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> B<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            P<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">0.0001</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> B<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">||</span> P<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">||</span> P<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;=</span> max<span class=\"br0\">(</span>A<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, B<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>P<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> min<span class=\"br0\">(</span>A<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, B<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">double</span> red <span class=\"sy0\">=</span> <span class=\"br0\">(</span>P<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>P<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> A<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> blue <span class=\"sy0\">=</span> <span class=\"br0\">(</span>B<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>B<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> A<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> red <span class=\"sy0\">&gt;=</span> blue<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> contains<span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> shape, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> pnt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">boolean</span> inside <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> len <span class=\"sy0\">=</span> shape.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>intersects<span class=\"br0\">(</span>shape<span class=\"br0\">[</span>i<span class=\"br0\">]</span>, shape<span class=\"br0\">[</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> len<span class=\"br0\">]</span>, pnt<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                inside <span class=\"sy0\">=</span> <span class=\"sy0\">!</span>inside<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> inside<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> testPoints <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">10</span>, <span class=\"nu0\">16</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">20</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>,<br/>        <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">16</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> shape <span class=\"sy0\">:</span> shapes<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> pnt <span class=\"sy0\">:</span> testPoints<span class=\"br0\">)</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%7s \"</span>, contains<span class=\"br0\">(</span>shape, pnt<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> square <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> squareHole <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>    <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">15</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">15</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> strange <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">15</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>,<br/>    <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> hexagon <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">6</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">14</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">14</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>    <span class=\"br0\">{</span><span class=\"nu0\">6</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> shapes <span class=\"sy0\">=</span> <span class=\"br0\">{</span>square, squareHole, strange, hexagon<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 60, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"coMULTI\">/**<br/> * @return {boolean} true if (lng, lat) is in bounds<br/> */</span><br/><span class=\"kw1\">function</span> contains<span class=\"br0\">(</span>bounds<span class=\"sy0\">,</span> lat<span class=\"sy0\">,</span> lng<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">//https://rosettacode.org/wiki/Ray-casting_algorithm</span><br/>    <span class=\"kw1\">var</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> b <span class=\"sy0\">&lt;</span> bounds.<span class=\"me1\">length</span><span class=\"sy0\">;</span> b<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> vertex1 <span class=\"sy0\">=</span> bounds<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> vertex2 <span class=\"sy0\">=</span> bounds<span class=\"br0\">[</span><span class=\"br0\">(</span>b <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> bounds.<span class=\"me1\">length</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>west<span class=\"br0\">(</span>vertex1<span class=\"sy0\">,</span> vertex2<span class=\"sy0\">,</span> lng<span class=\"sy0\">,</span> lat<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"sy0\">++</span>count<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> count <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/**<br/>     * @return {boolean} true if (x,y) is west of the line segment connecting A and B<br/>     */</span><br/>    <span class=\"kw1\">function</span> west<span class=\"br0\">(</span>A<span class=\"sy0\">,</span> B<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>A.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;=</span> B.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>y <span class=\"sy0\">&lt;=</span> A.<span class=\"me1\">y</span> <span class=\"sy0\">||</span> y <span class=\"sy0\">&gt;</span> B.<span class=\"me1\">y</span> <span class=\"sy0\">||</span><br/>                x <span class=\"sy0\">&gt;=</span> A.<span class=\"me1\">x</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&gt;=</span> B.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">x</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;</span> B.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> A.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> A.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span>B.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> A.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>B.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> A.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> west<span class=\"br0\">(</span>B<span class=\"sy0\">,</span> A<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> square <span class=\"sy0\">=</span> <span class=\"br0\">{</span>name<span class=\"sy0\">:</span> <span class=\"st0\">'square'</span><span class=\"sy0\">,</span> bounds<span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> squareHole <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    name<span class=\"sy0\">:</span> <span class=\"st0\">'squareHole'</span><span class=\"sy0\">,</span><br/>    bounds<span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> strange <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    name<span class=\"sy0\">:</span> <span class=\"st0\">'strange'</span><span class=\"sy0\">,</span><br/>    bounds<span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> hexagon <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    name<span class=\"sy0\">:</span> <span class=\"st0\">'hexagon'</span><span class=\"sy0\">,</span><br/>    bounds<span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>x<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> shapes <span class=\"sy0\">=</span> <span class=\"br0\">[</span>square<span class=\"sy0\">,</span> squareHole<span class=\"sy0\">,</span> strange<span class=\"sy0\">,</span> hexagon<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> testPoints <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">16</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>lng<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> lat<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> s <span class=\"sy0\">&lt;</span> shapes.<span class=\"me1\">length</span><span class=\"sy0\">;</span> s<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> shape <span class=\"sy0\">=</span> shapes<span class=\"br0\">[</span>s<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> tp <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> tp <span class=\"sy0\">&lt;</span> testPoints.<span class=\"me1\">length</span><span class=\"sy0\">;</span> tp<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> testPoint <span class=\"sy0\">=</span> testPoints<span class=\"br0\">[</span>tp<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        console.<span class=\"me1\">log</span><span class=\"br0\">(</span>JSON.<span class=\"me1\">stringify</span><span class=\"br0\">(</span>testPoint<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>in '</span> <span class=\"sy0\">+</span> shape.<span class=\"me1\">name</span> <span class=\"sy0\">+</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>'</span> <span class=\"sy0\">+</span> contains<span class=\"br0\">(</span>shape.<span class=\"me1\">bounds</span><span class=\"sy0\">,</span> testPoint.<span class=\"me1\">lat</span><span class=\"sy0\">,</span> testPoint.<span class=\"me1\">lng</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 45, "block": "<pre class=\"text highlighted_source\">module RayCastings<br/>\u00a0<br/>export Point<br/>\u00a0<br/>struct Point{T}<br/>    x::T<br/>    y::T<br/>end<br/>Base.show(io::IO, p::Point) = print(io, \"($(p.x), $(p.y))\")<br/>\u00a0<br/>const Edge = Tuple{Point{T}, Point{T}} where T<br/>Base.show(io::IO, e::Edge) = print(io, \"$(e[1]) \u2218-\u2218 $(e[2])\")<br/>\u00a0<br/>function rayintersectseg(p::Point{T}, edge::Edge{T}) where T<br/>    a, b = edge<br/>    if a.y &gt; b.y<br/>        a, b = b, a<br/>    end<br/>    if p.y \u2208 (a.y, b.y)<br/>        p = Point(p.x, p.y + eps(p.y))<br/>    end<br/>\u00a0<br/>    rst = false<br/>    if (p.y &gt; b.y || p.y &lt; a.y) || (p.x &gt; max(a.x, b.x))<br/>        return false<br/>    end<br/>\u00a0<br/>    if p.x &lt; min(a.x, b.x)<br/>        rst = true<br/>    else<br/>        mred = (b.y - a.y) / (b.x - a.x)<br/>        mblu = (p.y - a.y) / (p.x - a.x)<br/>        rst = mblu \u2265 mred<br/>    end<br/>\u00a0<br/>    return rst<br/>end<br/>\u00a0<br/>isinside(poly::Vector{Tuple{Point{T}, Point{T}}}, p::Point{T}) where T =<br/>    isodd(count(edge -&gt; rayintersectseg(p, edge), poly))<br/>\u00a0<br/>connect(a::Point{T}, b::Point{T}...) where T =<br/>    [(a, b) for (a, b) in zip(vcat(a, b...), vcat(b..., a))]<br/>\u00a0<br/>end  # module RayCastings</pre>"}, {"lang": "Kotlin", "loc": 36, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">lang</span>.<span class=\"me1\">Double</span>.<span class=\"me1\">MAX_VALUE</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">lang</span>.<span class=\"me1\">Double</span>.<span class=\"me1\">MIN_VALUE</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">lang</span>.<span class=\"me1\">Math</span>.<span class=\"me1\">abs</span><br/>\u00a0<br/>data <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Point<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span><br/>\u00a0<br/>data <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Edge<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> s<span class=\"sy0\">:</span> Point, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> e<span class=\"sy0\">:</span> Point<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    operator fun invoke<span class=\"br0\">(</span>p<span class=\"sy0\">:</span> Point<span class=\"br0\">)</span> <span class=\"sy0\">:</span> Boolean <span class=\"sy0\">=</span> when <span class=\"br0\">{</span><br/>        s.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> e.<span class=\"me1\">y</span> -<span class=\"sy0\">&gt;</span> Edge<span class=\"br0\">(</span>e, s<span class=\"br0\">)</span>.<span class=\"me1\">invoke</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>        p.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> s.<span class=\"me1\">y</span> || p.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> e.<span class=\"me1\">y</span> -<span class=\"sy0\">&gt;</span> invoke<span class=\"br0\">(</span>Point<span class=\"br0\">(</span>p.<span class=\"me1\">x</span>, p.<span class=\"me1\">y</span> + epsilon<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        p.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> e.<span class=\"me1\">y</span> || p.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> s.<span class=\"me1\">y</span> || p.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> Math.<span class=\"me1\">max</span><span class=\"br0\">(</span>s.<span class=\"me1\">x</span>, e.<span class=\"me1\">x</span><span class=\"br0\">)</span> -<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>        p.<span class=\"me1\">x</span> <span class=\"sy0\">&lt;</span> Math.<span class=\"me1\">min</span><span class=\"br0\">(</span>s.<span class=\"me1\">x</span>, e.<span class=\"me1\">x</span><span class=\"br0\">)</span> -<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> -<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> blue <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span>s.<span class=\"me1\">x</span> - p.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> MIN<span class=\"sy0\">_</span>VALUE<span class=\"br0\">)</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> - s.<span class=\"me1\">y</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span>p.<span class=\"me1\">x</span> - s.<span class=\"me1\">x</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> MAX<span class=\"sy0\">_</span>VALUE<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> red <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span>s.<span class=\"me1\">x</span> - e.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> MIN<span class=\"sy0\">_</span>VALUE<span class=\"br0\">)</span> <span class=\"br0\">(</span>e.<span class=\"me1\">y</span> - s.<span class=\"me1\">y</span><span class=\"br0\">)</span> / <span class=\"br0\">(</span>e.<span class=\"me1\">x</span> - s.<span class=\"me1\">x</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> MAX<span class=\"sy0\">_</span>VALUE<br/>            blue <span class=\"sy0\">&gt;=</span> red<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> epsilon <span class=\"sy0\">=</span> <span class=\"nu0\">0.00001</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Figure<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> name<span class=\"sy0\">:</span> String, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> edges<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>Edge<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    operator fun contains<span class=\"br0\">(</span>p<span class=\"sy0\">:</span> Point<span class=\"br0\">)</span> <span class=\"sy0\">=</span> edges.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"br0\">{</span> it<span class=\"br0\">(</span>p<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Ray<span class=\"sy0\">_</span>casting <span class=\"br0\">{</span><br/>    fun check<span class=\"br0\">(</span>figures <span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>Figure<span class=\"sy0\">&gt;</span>, points <span class=\"sy0\">:</span> List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"points: \"</span> + points<span class=\"br0\">)</span><br/>        figures.<span class=\"me1\">forEach</span> <span class=\"br0\">{</span> f -<span class=\"sy0\">&gt;</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"figure: \"</span> + f.<span class=\"me1\">name</span><span class=\"br0\">)</span><br/>            f.<span class=\"me1\">edges</span>.<span class=\"me1\">forEach</span> <span class=\"br0\">{</span> println<span class=\"br0\">(</span><span class=\"st0\">\"        \"</span> + it<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"result: \"</span> + <span class=\"br0\">(</span>points.<span class=\"me1\">map</span> <span class=\"br0\">{</span> it in f <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 76, "block": "<pre class=\"lb highlighted_source\"><span class=\"kw1\">NoMainWin</span><br/><span class=\"kw1\">Global</span> sw<span class=\"sy0\">,</span> sh<span class=\"sy0\">,</span> verts<br/>\u00a0<br/>sw <span class=\"sy0\">=</span> <span class=\"nu0\">640</span> <span class=\"sy0\">:</span>   sh <span class=\"sy0\">=</span> <span class=\"nu0\">480</span><br/><span class=\"kw3\">WindowWidth</span>  <span class=\"sy0\">=</span> sw<span class=\"sy0\">+</span><span class=\"nu0\">8</span> <span class=\"sy0\">:</span> <span class=\"kw3\">WindowHeight</span> <span class=\"sy0\">=</span> sh<span class=\"sy0\">+</span><span class=\"nu0\">31</span><br/><span class=\"kw3\">UpperLeftX</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">DisplayWidth</span> <span class=\"sy0\">-</span>sw<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/><span class=\"kw3\">UpperLeftY</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>DisplayHeight<span class=\"sy0\">-</span>sh<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/><span class=\"kw1\">Open</span><span class=\"st0\">\"Ray Casting Algorithm\"</span> <span class=\"kw1\">For</span> Graphics_nf_nsb <span class=\"kw1\">As</span> <span class=\"sy0\">#</span>g<br/><span class=\"sy0\">#</span>g <span class=\"st0\">\"Down; TrapClose [halt]\"</span><br/>h$ <span class=\"sy0\">=</span> <span class=\"st0\">\"#g\"</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> xp<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>yp<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><br/><span class=\"sy0\">#</span>g <span class=\"st0\">\"when leftButtonDown [halt];when mouseMove checkPoint\"</span><br/><span class=\"sy0\">#</span>g <span class=\"st0\">\"when rightButtonDown [Repeat]\"</span><br/>\u00a0<br/><span class=\"br0\">[</span>Repeat<span class=\"br0\">]</span><br/>    <span class=\"sy0\">#</span>g <span class=\"st0\">\"Cls;Fill 32 160 255; Color white;BackColor 32 160 255\"</span><br/>    <span class=\"sy0\">#</span>g <span class=\"st0\">\"Place 5 460;\\L-click to exit\"</span><br/>    <span class=\"sy0\">#</span>g <span class=\"st0\">\"Place 485 460;\\R-click for new polygon\"</span><br/>\u00a0<br/>    <span class=\"co1\">'generate polygon from random points</span><br/>    numPoints <span class=\"sy0\">=</span>  rand<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>    verts <span class=\"sy0\">=</span> numPoints<br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> numPoints<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>        xp<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> rand<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">620</span><span class=\"br0\">)</span><br/>        yp<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> rand<span class=\"br0\">(</span><span class=\"nu0\">40</span><span class=\"sy0\">,</span><span class=\"nu0\">420</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">Call</span> drawPoly h$<span class=\"sy0\">,</span> verts<span class=\"sy0\">,</span> <span class=\"st0\">\"white\"</span><br/>    <span class=\"sy0\">#</span>g <span class=\"st0\">\"Flush\"</span><br/>    <span class=\"kw1\">Wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>halt<span class=\"br0\">]</span><br/><span class=\"kw1\">Close</span> <span class=\"sy0\">#</span>g<br/><span class=\"kw1\">End</span><br/>\u00a0<br/><span class=\"co1\">'Point In Polygon Function</span><br/><span class=\"kw1\">Function</span> pnp<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> numSides<span class=\"br0\">)</span><br/>    j<span class=\"sy0\">=</span> numSides<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span> oddNodes <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> numSides<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>        <span class=\"kw1\">If</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>yp<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">&lt;</span>y<span class=\"br0\">)</span> <span class=\"kw1\">And</span> <span class=\"br0\">(</span>yp<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">&gt;=</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>yp<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">&lt;</span>y<span class=\"br0\">)</span> <span class=\"kw1\">And</span> <span class=\"br0\">(</span>yp<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">&gt;=</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>            f1 <span class=\"sy0\">=</span> y <span class=\"sy0\">-</span> yp<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">:</span>f2 <span class=\"sy0\">=</span> yp<span class=\"br0\">(</span>j<span class=\"br0\">)</span> <span class=\"sy0\">-</span> yp<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">:</span> f3 <span class=\"sy0\">=</span> xp<span class=\"br0\">(</span>j<span class=\"br0\">)</span> <span class=\"sy0\">-</span> xp<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> <span class=\"br0\">(</span>xp<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> f1 <span class=\"sy0\">/</span> f2 <span class=\"sy0\">*</span> f3<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> x <span class=\"kw1\">Then</span> oddNodes <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> oddNodes<br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        j <span class=\"sy0\">=</span> i<br/>    <span class=\"kw1\">Next</span><br/>    pnp <span class=\"sy0\">=</span> oddNodes<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"co1\">'draw the polygon</span><br/><span class=\"kw1\">Sub</span> drawPoly h$<span class=\"sy0\">,</span> verts<span class=\"sy0\">,</span> colour$<br/>    <span class=\"sy0\">#</span>h$<span class=\"sy0\">,</span> <span class=\"st0\">\"Color \"</span>;colour$<br/>    j <span class=\"sy0\">=</span> verts<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> verts<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Line \"</span>;xp<span class=\"br0\">(</span>j<span class=\"br0\">)</span>;<span class=\"st0\">\" \"</span>;yp<span class=\"br0\">(</span>j<span class=\"br0\">)</span>;<span class=\"st0\">\" \"</span>;xp<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<span class=\"st0\">\" \"</span>;yp<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>        j <span class=\"sy0\">=</span> i<br/>    <span class=\"kw1\">Next</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"co1\">'change message and color of polygon</span><br/><span class=\"kw1\">Sub</span> checkPoint h$<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<br/>    <span class=\"kw1\">If</span> pnp<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span>verts<span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Color 32 160 255;BackColor 32 160 255\"</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Place 5 0;BoxFilled 150 20;Color white\"</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Place 7 15;\\Mouse In Polygon\"</span><br/>        <span class=\"kw1\">Call</span> drawPoly h$<span class=\"sy0\">,</span> verts<span class=\"sy0\">,</span> <span class=\"st0\">\"red\"</span><br/>    <span class=\"kw1\">Else</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Color 32 160 255;BackColor 32 160 255\"</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Place 5 0;BoxFilled 150 20;Color white\"</span><br/>        <span class=\"sy0\">#</span>h$ <span class=\"st0\">\"Place 7 15;\\Mouse Not In Polygon\"</span><br/>        <span class=\"kw1\">Call</span> drawPoly h$<span class=\"sy0\">,</span> verts<span class=\"sy0\">,</span> <span class=\"st0\">\"white\"</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> rand<span class=\"br0\">(</span>loNum<span class=\"sy0\">,</span>hiNum<span class=\"br0\">)</span><br/>    rand <span class=\"sy0\">=</span> <span class=\"kw2\">Int</span><span class=\"br0\">(</span><span class=\"kw2\">Rnd</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>hiNum<span class=\"sy0\">-</span>loNum<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>loNum<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span> </pre>"}, {"lang": "OCaml", "loc": 97, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">type</span> point <span class=\"sy0\">=</span> <span class=\"br0\">{</span> x<span class=\"sy0\">:</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a><span class=\"sy0\">;</span> y<span class=\"sy0\">:</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> polygon <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  vertices<span class=\"sy0\">:</span> point <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEarray\"><span class=\"kw4\">array</span></a><span class=\"sy0\">;</span><br/>  edges<span class=\"sy0\">:</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> <span class=\"sy0\">*</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a><span class=\"br0\">)</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPElist\"><span class=\"kw4\">list</span></a><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> p x y <span class=\"sy0\">=</span> <span class=\"br0\">{</span> x<span class=\"sy0\">=</span>x<span class=\"sy0\">;</span> y<span class=\"sy0\">=</span>y <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> square_v <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span><br/>  <span class=\"br0\">(</span>p <span class=\"nu0\">0</span><span class=\"sy0\">.</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">0</span><span class=\"sy0\">.</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span>p <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span><span class=\"br0\">)</span><br/><span class=\"sy0\">|</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">let</span> esa_v <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span><br/>  <span class=\"br0\">(</span>p <span class=\"nu0\">3</span><span class=\"sy0\">.</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">7</span><span class=\"sy0\">.</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"nu0\">5</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">7</span><span class=\"sy0\">.</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">3</span><span class=\"sy0\">.</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">0</span><span class=\"sy0\">.</span> <span class=\"nu0\">5</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><br/><span class=\"sy0\">|</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">let</span> esa <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  vertices <span class=\"sy0\">=</span> esa_v<span class=\"sy0\">;</span><br/>  edges <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">4</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> square <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  vertices <span class=\"sy0\">=</span> square_v<span class=\"sy0\">;</span><br/>  edges <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> squarehole <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  vertices <span class=\"sy0\">=</span> square_v<span class=\"sy0\">;</span><br/>  edges <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">4</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">7</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> strange <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  vertices <span class=\"sy0\">=</span> square_v<span class=\"sy0\">;</span><br/>  edges <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">4</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">7</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> min_y <span class=\"re1\">~a</span> <span class=\"re1\">~b</span> <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> a<span class=\"sy0\">.</span>y <span class=\"sy0\">&gt;</span> b<span class=\"sy0\">.</span>y <span class=\"kw1\">then</span> <span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> coeff_ang <span class=\"re1\">~pa</span> <span class=\"re1\">~pb</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>pb<span class=\"sy0\">.</span>y <span class=\"sy0\">-.</span> pa<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"sy0\">/.</span> <span class=\"br0\">(</span>pb<span class=\"sy0\">.</span>x <span class=\"sy0\">-.</span> pa<span class=\"sy0\">.</span>x<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> huge_val <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinfinity\"><span class=\"kw3\">infinity</span></a><br/>\u00a0<br/><span class=\"kw1\">let</span> hseg_intersect_seg <span class=\"re1\">~s</span> <span class=\"re1\">~a</span> <span class=\"re1\">~b</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> _eps <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> s<span class=\"sy0\">.</span>y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> a<span class=\"sy0\">.</span>y b<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"sy0\">||</span><br/>       s<span class=\"sy0\">.</span>y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmin\"><span class=\"kw3\">min</span></a> a<span class=\"sy0\">.</span>y b<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"nu0\">0.00001</span> <span class=\"kw1\">else</span> <span class=\"nu0\">0.0</span><br/>  <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">if</span>  <span class=\"br0\">(</span>s<span class=\"sy0\">.</span>y <span class=\"sy0\">+.</span> _eps<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> a<span class=\"sy0\">.</span>y b<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"sy0\">||</span><br/>      <span class=\"br0\">(</span>s<span class=\"sy0\">.</span>y <span class=\"sy0\">+.</span> _eps<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmin\"><span class=\"kw3\">min</span></a> a<span class=\"sy0\">.</span>y b<span class=\"sy0\">.</span>y<span class=\"br0\">)</span> <span class=\"sy0\">||</span><br/>       s<span class=\"sy0\">.</span>x <span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> a<span class=\"sy0\">.</span>x b<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"br0\">(</span><span class=\"kw1\">false</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> s<span class=\"sy0\">.</span>x <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmin\"><span class=\"kw3\">min</span></a> a<span class=\"sy0\">.</span>x b<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"br0\">(</span><span class=\"kw1\">true</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw1\">let</span> ca <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> a<span class=\"sy0\">.</span>x <span class=\"sy0\">&lt;&gt;</span> b<span class=\"sy0\">.</span>x <span class=\"kw1\">then</span> <span class=\"br0\">(</span>coeff_ang a b<span class=\"br0\">)</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span>huge_val<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">let</span> my <span class=\"sy0\">=</span> min_y <span class=\"re1\">~a</span> <span class=\"re1\">~b</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">let</span> cp <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>s<span class=\"sy0\">.</span>x <span class=\"sy0\">-.</span> my<span class=\"sy0\">.</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">0.0</span> <span class=\"kw1\">then</span> <span class=\"br0\">(</span>coeff_ang my s<span class=\"br0\">)</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span>huge_val<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    <span class=\"br0\">(</span>cp <span class=\"sy0\">&gt;=</span> ca<span class=\"br0\">)</span><br/><span class=\"sy0\">;;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> point_is_inside <span class=\"re1\">~poly</span> <span class=\"re1\">~pt</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> cross <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>a,b<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    <span class=\"kw1\">if</span> hseg_intersect_seg pt<br/>             poly<span class=\"sy0\">.</span>vertices<span class=\"sy0\">.</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>             poly<span class=\"sy0\">.</span>vertices<span class=\"sy0\">.</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">then</span> <span class=\"kw1\">incr</span> cross<br/>  <span class=\"br0\">)</span> poly<span class=\"sy0\">.</span>edges<span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>cross <span class=\"kw1\">mod</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"sy0\">;;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> make_test p label s <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"point (%.5f,%.5f) is \"</span> p<span class=\"sy0\">.</span>x p<span class=\"sy0\">.</span>y<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"br0\">(</span><span class=\"kw1\">if</span> point_is_inside s p<br/>                <span class=\"kw1\">then</span> <span class=\"st0\">\"INSIDE \"</span><br/>                <span class=\"kw1\">else</span> <span class=\"st0\">\"OUTSIDE \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> label<span class=\"sy0\">;</span><br/><span class=\"sy0\">;;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> test_points <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>    <span class=\"br0\">(</span>p <span class=\"nu0\">5</span><span class=\"sy0\">.</span> <span class=\"nu0\">5</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">5</span><span class=\"sy0\">.</span> <span class=\"nu0\">8</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">2</span><span class=\"sy0\">.</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">0</span><span class=\"sy0\">.</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span>p <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">0.01</span> <span class=\"nu0\">5</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span>p <span class=\"nu0\">2.2</span> <span class=\"nu0\">7.4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">0</span><span class=\"sy0\">.</span> <span class=\"nu0\">5</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"nu0\">10</span><span class=\"sy0\">.</span> <span class=\"nu0\">5</span><span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span>p <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">.</span><span class=\"br0\">)</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"kw1\">in</span><br/>\u00a0<br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">fun</span> p <span class=\"sy0\">-&gt;</span><br/>    make_test p <span class=\"st0\">\"square\"</span>     square<span class=\"sy0\">;</span><br/>    make_test p <span class=\"st0\">\"squarehole\"</span> squarehole<span class=\"sy0\">;</span><br/>    make_test p <span class=\"st0\">\"strange\"</span>    strange<span class=\"sy0\">;</span><br/>    make_test p <span class=\"st0\">\"esa\"</span>        esa<span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span> test_points<span class=\"sy0\">;</span><br/><span class=\"sy0\">;;</span></pre>"}, {"lang": "Perl", "loc": 38, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">Util</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>max min<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> point_in_polygon<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span> <span class=\"re0\">$point</span><span class=\"sy0\">,</span> <span class=\"re0\">$polygon</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$side</span> <span class=\"br0\">(</span> <span class=\"re0\">@$polygon</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"re0\">$count</span><span class=\"sy0\">++</span> <span class=\"kw1\">if</span> ray_intersect_segment<span class=\"br0\">(</span><span class=\"re0\">$point</span><span class=\"sy0\">,</span> <span class=\"re0\">$side</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"re0\">$count</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$eps</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0001</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$inf</span> <span class=\"sy0\">=</span> 1e600<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> ray_intersect_segment<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$point</span><span class=\"sy0\">,</span> <span class=\"re0\">$segment</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">,</span> <span class=\"re0\">$B</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$segment</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@P</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$point</span><span class=\"sy0\">;</span> <span class=\"co1\"># copy it</span><br/>\u00a0<br/>    <span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">,</span> <span class=\"re0\">$B</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$B</span><span class=\"sy0\">,</span> <span class=\"re0\">$A</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$eps</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span> <span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> max<span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">1</span> <span class=\"kw1\">if</span> <span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> min<span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$m_red</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"br0\">(</span> <span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"re0\">$B</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"re0\">$inf</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$m_blue</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"br0\">(</span> <span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"re0\">$P</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"re0\">$inf</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"re0\">$m_blue</span> <span class=\"sy0\">&gt;=</span> <span class=\"re0\">$m_red</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 72, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">constant</span> \u03b5 <span class=\"sy0\">=</span> <span class=\"nu0\">0.0001</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> ray<span class=\"sy0\">-</span>hits<span class=\"sy0\">-</span>seg<span class=\"br0\">(</span><span class=\"br0\">[</span>\\Px<span class=\"sy0\">,</span>\\Py<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>\\Ax<span class=\"sy0\">,</span>\\Ay<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>\\Bx<span class=\"sy0\">,</span>\\By<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">--&gt;</span> Bool<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    Py <span class=\"sy0\">+=</span> \u03b5 <span class=\"kw1\">if</span> Py <span class=\"sy0\">==</span> Ay <span class=\"sy0\">|</span> By<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> Py <span class=\"sy0\">&lt;</span> Ay <span class=\"kw1\">or</span> Py <span class=\"sy0\">&gt;</span> By <span class=\"kw1\">or</span> Px <span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span>Ax <span class=\"kw3\">max</span> Bx<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">False</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">elsif</span> Px <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span>Ax <span class=\"kw3\">min</span> Bx<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">True</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> \\red  <span class=\"sy0\">=</span> Ax <span class=\"sy0\">==</span> Bx <span class=\"sy0\">??</span> Inf <span class=\"sy0\">!!</span> <span class=\"br0\">(</span>By <span class=\"sy0\">-</span> Ay<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>Bx <span class=\"sy0\">-</span> Ax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> \\blue <span class=\"sy0\">=</span> Ax <span class=\"sy0\">==</span> Px <span class=\"sy0\">??</span> Inf <span class=\"sy0\">!!</span> <span class=\"br0\">(</span>Py <span class=\"sy0\">-</span> Ay<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>Px <span class=\"sy0\">-</span> Ax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tblue <span class=\"sy0\">&gt;=</span> red<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> point<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>poly<span class=\"br0\">(</span><span class=\"re0\">@point</span><span class=\"sy0\">,</span> <span class=\"re0\">@polygon</span> <span class=\"sy0\">--&gt;</span> Bool<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    so <span class=\"nu0\">2</span> R<span class=\"sy0\">%</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> gather <span class=\"kw1\">for</span> <span class=\"re0\">@polygon</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">@side</span> <span class=\"br0\">{</span><br/>\ttake ray<span class=\"sy0\">-</span>hits<span class=\"sy0\">-</span>seg <span class=\"re0\">@point</span><span class=\"sy0\">,</span> <span class=\"re0\">@side</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"br0\">(</span><span class=\"sy0\">*.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">%poly</span> <span class=\"sy0\">=</span><br/>    squared <span class=\"sy0\">=&gt;</span> <br/>\t <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    squaredhole <span class=\"sy0\">=&gt;</span><br/>\t <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    strange <span class=\"sy0\">=&gt;</span><br/>\t <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">7.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2.5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>  <span class=\"co1\"># conjecturally close polygon</span><br/>    exagon <span class=\"sy0\">=&gt;</span><br/>\t <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">7.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"nu0\">3.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@test</span><span class=\"sy0\">-</span>points <span class=\"sy0\">=</span><br/>\t  <span class=\"br0\">[</span>  <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span>  <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span>  <span class=\"nu0\">0.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span> <span class=\"nu0\">10.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span>  <span class=\"nu0\">8.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t  <span class=\"br0\">[</span> <span class=\"nu0\">10.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"sy0\">&lt;</span>squared squaredhole strange exagon<span class=\"sy0\">&gt;</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$polywanna</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"$polywanna\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@poly</span> <span class=\"sy0\">=</span> <span class=\"re0\">%poly</span><span class=\"br0\">{</span><span class=\"re0\">$polywanna</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"re0\">@test</span><span class=\"sy0\">-</span>points <span class=\"sy0\">-&gt;</span> <span class=\"re0\">@point</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">say</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>(@point.fmt('%.1f',','))<span class=\"es0\">\\t</span>{ point-in-poly(@point, @poly)\u00a0?? 'IN'\u00a0!! 'OUT' }\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 103, "block": "<pre class=\"text highlighted_source\">constant true = (1=1), false = not true<br/>constant inf = 1e300*1e300<br/>\u00a0<br/>function rayIntersectsSegment(sequence point, sequence segment)<br/>atom {pX,pY} = point<br/>atom {{aX,aY},{bX,bY}} = segment<br/>atom m_red,m_blue<br/>    -- ensure {aX,aY} is the segment end-point with the smallest y coordinate<br/>    if aY&gt;bY then<br/>        {{bX,bY},{aX,aY}} = segment<br/>    end if<br/>    if pY=aY or pY=bY then<br/>        --<br/>        -- Consider a ray passing through the top or left corner of a diamond:<br/>        --          /<br/>        --  --- or  -<br/>        --   ^      \\<br/>        -- In both cases it touches both edges, but ends up outside in the<br/>        --  top case, whereas it ends up inside in the left case. Just move<br/>        --  the y co-ordinate down a smidge and it'll work properly, by <br/>        --  missing one line in the left/right cases and hitting both/none <br/>        --  in the top/bottom cases.<br/>        --<br/>        pY += 0.000001<br/>    end if<br/>    if pY&lt;aY or pY&gt;bY then return false end if<br/>    if pX&gt;max(aX,bX) then return false end if<br/>    if pX&lt;min(aX,bX) then return true end if<br/>    if aX!=bX then<br/>        m_red = (bY-aY)/(bX-aX)<br/>    else<br/>        m_red = inf<br/>    end if<br/>    if aX!=pX then<br/>        m_blue = (pY-aY)/(pX-aX)<br/>    else<br/>        m_blue = inf<br/>    end if<br/>    return m_blue &gt;= m_red<br/>end function<br/>\u00a0<br/>function inside(sequence point, sequence poly)<br/>integer in = 0<br/>    for i=1 to length(poly) do<br/>        if rayIntersectsSegment(point,poly[i]) then<br/>            in = not in<br/>        end if<br/>    end for<br/>    return in<br/>end function<br/>\u00a0<br/>constant INOUT = {\"in\", \"out\"}<br/>function in(integer flag, integer expected)<br/>    if flag=expected then<br/>        return INOUT[2-flag]<br/>    end if<br/>    return INOUT[2-flag] &amp; \"*** ERROR ***\" <br/>end function<br/>\u00a0<br/>constant INSTAR = \"* \"<br/>function instar(integer flag)<br/>    return INSTAR[2-flag]<br/>end function<br/>\u00a0<br/>constant test_points = {{5,5},{5,8},{-10,5},{0,5},{10,5},{8,5},{10,10}}<br/>\u00a0<br/>--constant NAME = 1, POLY = 2, EXPECTED = 3<br/>constant test_polygons = {<br/>        {\"square\",      {{{0,0},{10,0}},{{10,0},{10,10}},{{10,10},{0,10}},{{0,10},{0,0}}},<br/>                        {true,true,false,false,true,true,false}},<br/>        {\"square hole\", {{{0,0},{10,0}},{{10,0},{10,10}},{{10,10},{0,10}},{{0,10},{0,0}},<br/>                         {{2.5,2.5},{7.5,2.5}},{{7.5,2.5},{7.5,7.5}},{{7.5,7.5},{2.5,7.5}},{{2.5,7.5},{2.5,2.5}}},<br/>                        {false,true,false,false,true,true,false}},<br/>        {\"strange\",     {{{0,5},{2.5,2.5}},{{2.5,2.5},{0,10}},{{0,10},{2.5,7.5}},{{2.5,7.5},{7.5,7.5}},<br/>                         {{7.5,7.5},{10,10}},{{10,10},{10,0}},{{10,0},{2.5,2.5}}},<br/>                        {true,false,false,false,true,true,false}},<br/>        {\"exagon\",      {{{3,0},{7,0}},{{7,0},{10,5}},{{10,5},{7,10}},{{7,10},{3,10}},{{3,10},{0,5}},{{0,5},{3,0}}},<br/>                        {true,true,false,false,true,true,false}}<br/>}<br/>\u00a0<br/>sequence name, poly, expected, tp<br/>\u00a0<br/>    for i=1 to length(test_polygons) do<br/>        {name,poly,expected} = test_polygons[i]<br/>        printf(1,\"\\n%12s:\",{name})<br/>        for j=1 to length(test_points) do<br/>            tp = test_points[j]<br/>            printf(1,\"\u00a0%s,\u00a0%-4s\",{sprint(tp),in(inside(tp,poly),expected[j])})<br/>        end for<br/>    end for<br/>\u00a0<br/>    puts(1,\"\\n\\n\\n\")<br/>\u00a0<br/>    for i=0 to 10 do<br/>        for j=1 to length(test_polygons) do<br/>            puts(1,\"     \")<br/>            poly = test_polygons[j][2]<br/>            for k=0 to 10 do<br/>                puts(1,instar(inside({k+0.5,10.5-i},poly)))<br/>            end for<br/>        end for<br/>        puts(1,\"\\n\")<br/>    end for</pre>"}, {"lang": "PicoLisp", "loc": 27, "block": "<pre class=\"text highlighted_source\">(scl 4)<br/>\u00a0<br/>(de intersects (Px Py Ax Ay Bx By)<br/>   (when (&gt; Ay By)<br/>      (xchg 'Ax 'Bx)<br/>      (xchg 'Ay 'By) )<br/>   (when (or (= Py Ay) (= Py By))<br/>      (inc 'Py) )<br/>   (and<br/>      (&gt;= Py Ay)<br/>      (&gt;= By Py)<br/>      (&gt;= (max Ax Bx) Px)<br/>      (or<br/>         (&gt; (min Ax Bx) Px)<br/>         (= Ax Px)<br/>         (and<br/>            (&lt;&gt; Ax Bx)<br/>            (&gt;=<br/>               (*/ (- Py Ay) 1.0 (- Px Ax))            # Blue<br/>               (*/ (- By Ay) 1.0 (- Bx Ax)) ) ) ) ) )  # Red<br/>\u00a0<br/>(de inside (Pt Poly)<br/>   (let Res NIL<br/>      (for Edge Poly<br/>         (when (apply intersects Edge (car Pt) (cdr Pt))<br/>            (onOff Res) ) )<br/>      Res ) )</pre>"}, {"lang": "PureBasic", "loc": 83, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Structure</span> point_f<br/>  x.f<br/>  y.f<br/><span class=\"kw1\">EndStructure</span><br/><span class=\"kw1\">Procedure</span> inpoly<span class=\"br0\">(</span><span class=\"sy0\">*</span>p.point_f, List poly.point_f<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span>.point_f new, old, lp, rp<br/>  <span class=\"kw1\">Protected</span> inside<br/>  <span class=\"kw1\">If</span> ListSize<span class=\"br0\">(</span>poly<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span>: <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0</span>: <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw2\">LastElement</span><span class=\"br0\">(</span>poly<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>: old <span class=\"sy0\">=</span> poly<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ForEach</span> poly<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">;find leftmost endpoint 'lp' and the rightmost endpoint 'rp' based on x value</span><br/>    <span class=\"kw1\">If</span> poly<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>x <span class=\"sy0\">&gt;</span> old<span class=\"sy0\">\\</span>x <br/>      lp <span class=\"sy0\">=</span> old<br/>      rp <span class=\"sy0\">=</span> poly<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Else</span><br/>      lp <span class=\"sy0\">=</span> poly<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      rp <span class=\"sy0\">=</span> old<br/>    <span class=\"kw1\">EndIf</span> <br/>    <span class=\"kw1\">If</span> lp<span class=\"sy0\">\\</span>x <span class=\"sy0\">&lt;</span> <span class=\"sy0\">*</span>p<span class=\"sy0\">\\</span>x <span class=\"kw1\">And</span> <span class=\"sy0\">*</span>p<span class=\"sy0\">\\</span>x <span class=\"sy0\">&lt;=</span> rp<span class=\"sy0\">\\</span>x <span class=\"kw1\">And</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>p<span class=\"sy0\">\\</span>y <span class=\"sy0\">-</span> lp<span class=\"sy0\">\\</span>y<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>rp<span class=\"sy0\">\\</span>x <span class=\"sy0\">-</span> lp<span class=\"sy0\">\\</span>x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span>rp<span class=\"sy0\">\\</span>y <span class=\"sy0\">-</span> lp<span class=\"sy0\">\\</span>y<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>p<span class=\"sy0\">\\</span>x <span class=\"sy0\">-</span> lp<span class=\"sy0\">\\</span>x<span class=\"br0\">)</span><br/>      inside <span class=\"sy0\">=</span> <span class=\"sy0\">~</span>inside<br/>    <span class=\"kw1\">EndIf</span> <br/>    old <span class=\"sy0\">=</span> poly<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span> <br/>  <span class=\"kw1\">ProcedureReturn</span> inside <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">InitSprite</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">InitKeyboard</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">And</span> <span class=\"kw2\">InitMouse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">OpenWindow</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">800</span>, <span class=\"nu0\">600</span>, <span class=\"st0\">\"Press [Esc] to close, [Left mouse button] Add Point, [Right mouse button] Clear All Points.\"</span>, #PB_Window_ScreenCentered <span class=\"sy0\">|</span> #PB_Window_SystemMenu<span class=\"br0\">)</span><br/>    <span class=\"kw2\">OpenWindowedScreen</span><span class=\"br0\">(</span><span class=\"kw2\">WindowID</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">800</span>, <span class=\"nu0\">600</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">SetFrameRate</span><span class=\"br0\">(</span><span class=\"nu0\">60</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">Else</span><br/>  <span class=\"kw2\">MessageRequester</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span>, <span class=\"st0\">\"Unable to initsprite\"</span><span class=\"br0\">)</span>: <span class=\"kw1\">End</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0<br/><span class=\"kw1\">NewList</span> v.point_f<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Define</span>.point_f pvp, mp<br/><span class=\"kw1\">Define</span> Col, EventID, mode.b, modetxt.s<br/><span class=\"kw1\">Repeat</span><br/>  <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  EventID <span class=\"sy0\">=</span> <span class=\"kw2\">WindowEvent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">ExamineKeyboard</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">ExamineMouse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">ClearScreen</span><span class=\"br0\">(</span>Col<span class=\"br0\">)</span><br/>\u00a0<br/>  mp<span class=\"sy0\">\\</span>x <span class=\"sy0\">=</span> <span class=\"kw2\">MouseX</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  mp<span class=\"sy0\">\\</span>y <span class=\"sy0\">=</span> <span class=\"kw2\">MouseY</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">MouseButton</span><span class=\"br0\">(</span>#PB_MouseButton_Left<span class=\"br0\">)</span><br/>    <span class=\"kw2\">AddElement</span><span class=\"br0\">(</span>v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>x <span class=\"sy0\">=</span> mp<span class=\"sy0\">\\</span>x<br/>    v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>y <span class=\"sy0\">=</span> mp<span class=\"sy0\">\\</span>y<br/>    <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">MouseButton</span><span class=\"br0\">(</span>#PB_MouseButton_Right<span class=\"br0\">)</span><br/>    <span class=\"kw2\">ClearList</span><span class=\"br0\">(</span>v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">ScreenOutput</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">LastElement</span><span class=\"br0\">(</span>v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      pvp <span class=\"sy0\">=</span> v<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">ForEach</span> v<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">LineXY</span><span class=\"br0\">(</span>pvp<span class=\"sy0\">\\</span>x, pvp<span class=\"sy0\">\\</span>y, v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>x, v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>y, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, $FF, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;Green</span><br/>        <span class=\"kw2\">Circle</span><span class=\"br0\">(</span>pvp<span class=\"sy0\">\\</span>x, pvp<span class=\"sy0\">\\</span>y, <span class=\"nu0\">5</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span>$FF, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;Red</span><br/>        pvp <span class=\"sy0\">=</span> v<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">EndIf</span> <br/>    <span class=\"kw2\">Circle</span><span class=\"br0\">(</span><span class=\"kw2\">MouseX</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"kw2\">MouseY</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">5</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span>$C0, $C0, $FF<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;LightBlue </span><br/>\u00a0<br/>    <span class=\"kw1\">If</span> inpoly<span class=\"br0\">(</span>mp, v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      modetxt <span class=\"sy0\">=</span> <span class=\"st0\">\"You are in the polygon.\"</span><br/>      Col <span class=\"sy0\">=</span> <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Else</span><br/>      modetxt <span class=\"sy0\">=</span> <span class=\"st0\">\"You are not in the polygon.\"</span><br/>      Col <span class=\"sy0\">=</span> <span class=\"kw2\">RGB</span><span class=\"br0\">(</span>$50, $50, $50<span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw2\">DrawText</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">800</span> <span class=\"sy0\">-</span> <span class=\"kw2\">TextWidth</span><span class=\"br0\">(</span>modetxt<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, <span class=\"nu0\">0</span>, modetxt<span class=\"br0\">)</span> <br/>  <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">FlipBuffers</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Until</span> <span class=\"kw2\">KeyboardReleased</span><span class=\"br0\">(</span>#PB_Key_Escape<span class=\"br0\">)</span> <span class=\"kw1\">Or</span> EventID <span class=\"sy0\">=</span> #PB_Event_CloseWindow</pre>"}, {"lang": "Python", "loc": 102, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> namedtuple<br/><span class=\"kw1\">from</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">import</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">as</span> pp<br/><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span><br/>\u00a0<br/>Pt <span class=\"sy0\">=</span> namedtuple<span class=\"br0\">(</span><span class=\"st0\">'Pt'</span><span class=\"sy0\">,</span> <span class=\"st0\">'x, y'</span><span class=\"br0\">)</span>               <span class=\"co1\"># Point</span><br/>Edge <span class=\"sy0\">=</span> namedtuple<span class=\"br0\">(</span><span class=\"st0\">'Edge'</span><span class=\"sy0\">,</span> <span class=\"st0\">'a, b'</span><span class=\"br0\">)</span>           <span class=\"co1\"># Polygon edge from a to b</span><br/>Poly <span class=\"sy0\">=</span> namedtuple<span class=\"br0\">(</span><span class=\"st0\">'Poly'</span><span class=\"sy0\">,</span> <span class=\"st0\">'name, edges'</span><span class=\"br0\">)</span>    <span class=\"co1\"># Polygon</span><br/>\u00a0<br/>_eps <span class=\"sy0\">=</span> <span class=\"nu0\">0.00001</span><br/>_huge <span class=\"sy0\">=</span> <span class=\"kw3\">sys</span>.<span class=\"me1\">float_info</span>.<span class=\"kw2\">max</span><br/>_tiny <span class=\"sy0\">=</span> <span class=\"kw3\">sys</span>.<span class=\"me1\">float_info</span>.<span class=\"kw2\">min</span><br/>\u00a0<br/><span class=\"kw1\">def</span> rayintersectseg<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> edge<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">''' takes a point p=Pt() and an edge of two endpoints a,b=Pt() of a line segment returns boolean<br/>    '''</span><br/>    a<span class=\"sy0\">,</span>b <span class=\"sy0\">=</span> edge<br/>    <span class=\"kw1\">if</span> a.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">y</span>:<br/>        a<span class=\"sy0\">,</span>b <span class=\"sy0\">=</span> b<span class=\"sy0\">,</span>a<br/>    <span class=\"kw1\">if</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> a.<span class=\"me1\">y</span> <span class=\"kw1\">or</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> b.<span class=\"me1\">y</span>:<br/>        p <span class=\"sy0\">=</span> Pt<span class=\"br0\">(</span>p.<span class=\"me1\">x</span><span class=\"sy0\">,</span> p.<span class=\"me1\">y</span> + _eps<span class=\"br0\">)</span><br/>\u00a0<br/>    intersect <span class=\"sy0\">=</span> <span class=\"kw2\">False</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">y</span> <span class=\"kw1\">or</span> p.<span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> a.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"br0\">(</span><br/>        p.<span class=\"me1\">x</span> <span class=\"sy0\">&gt;</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span>a.<span class=\"me1\">x</span><span class=\"sy0\">,</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">False</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> p.<span class=\"me1\">x</span> <span class=\"sy0\">&lt;</span> <span class=\"kw2\">min</span><span class=\"br0\">(</span>a.<span class=\"me1\">x</span><span class=\"sy0\">,</span> b.<span class=\"me1\">x</span><span class=\"br0\">)</span>:<br/>        intersect <span class=\"sy0\">=</span> <span class=\"kw2\">True</span><br/>    <span class=\"kw1\">else</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span>a.<span class=\"me1\">x</span> - b.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> _tiny:<br/>            m_red <span class=\"sy0\">=</span> <span class=\"br0\">(</span>b.<span class=\"me1\">y</span> - a.<span class=\"me1\">y</span><span class=\"br0\">)</span> / <span class=\"kw2\">float</span><span class=\"br0\">(</span>b.<span class=\"me1\">x</span> - a.<span class=\"me1\">x</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span>:<br/>            m_red <span class=\"sy0\">=</span> _huge<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span>a.<span class=\"me1\">x</span> - p.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> _tiny:<br/>            m_blue <span class=\"sy0\">=</span> <span class=\"br0\">(</span>p.<span class=\"me1\">y</span> - a.<span class=\"me1\">y</span><span class=\"br0\">)</span> / <span class=\"kw2\">float</span><span class=\"br0\">(</span>p.<span class=\"me1\">x</span> - a.<span class=\"me1\">x</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span>:<br/>            m_blue <span class=\"sy0\">=</span> _huge<br/>        intersect <span class=\"sy0\">=</span> m_blue <span class=\"sy0\">&gt;=</span> m_red<br/>    <span class=\"kw1\">return</span> intersect<br/>\u00a0<br/><span class=\"kw1\">def</span> _odd<span class=\"br0\">(</span>x<span class=\"br0\">)</span>: <span class=\"kw1\">return</span> x%<span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">def</span> ispointinside<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> poly<span class=\"br0\">)</span>:<br/>    ln <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>poly<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> _odd<span class=\"br0\">(</span><span class=\"kw2\">sum</span><span class=\"br0\">(</span>rayintersectseg<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> edge<span class=\"br0\">)</span><br/>                    <span class=\"kw1\">for</span> edge <span class=\"kw1\">in</span> poly.<span class=\"me1\">edges</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> polypp<span class=\"br0\">(</span>poly<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>  Polygon(name='%s', edges=(\"</span>\u00a0% poly.<span class=\"me1\">name</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">'   '</span><span class=\"sy0\">,</span> <span class=\"st0\">',<span class=\"es0\">\\n</span>    '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span> <span class=\"kw1\">for</span> e <span class=\"kw1\">in</span> poly.<span class=\"me1\">edges</span><span class=\"br0\">)</span> + <span class=\"st0\">'<span class=\"es0\">\\n</span>    ))'</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    polys <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>      Poly<span class=\"br0\">(</span>name<span class=\"sy0\">=</span><span class=\"st0\">'square'</span><span class=\"sy0\">,</span> edges<span class=\"sy0\">=</span><span class=\"br0\">(</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      Poly<span class=\"br0\">(</span>name<span class=\"sy0\">=</span><span class=\"st0\">'square_hole'</span><span class=\"sy0\">,</span> edges<span class=\"sy0\">=</span><span class=\"br0\">(</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      Poly<span class=\"br0\">(</span>name<span class=\"sy0\">=</span><span class=\"st0\">'strange'</span><span class=\"sy0\">,</span> edges<span class=\"sy0\">=</span><span class=\"br0\">(</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      Poly<span class=\"br0\">(</span>name<span class=\"sy0\">=</span><span class=\"st0\">'exagon'</span><span class=\"sy0\">,</span> edges<span class=\"sy0\">=</span><span class=\"br0\">(</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        Edge<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>      <span class=\"br0\">]</span><br/>    testpoints <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                  Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span>-<span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                  Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                  Pt<span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span> TESTING WHETHER POINTS ARE WITHIN POLYGONS\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> poly <span class=\"kw1\">in</span> polys:<br/>        polypp<span class=\"br0\">(</span>poly<span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">'   '</span><span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"%s:\u00a0%s\"</span>\u00a0% <span class=\"br0\">(</span>p<span class=\"sy0\">,</span> ispointinside<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> poly<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"kw1\">for</span> p <span class=\"kw1\">in</span> testpoints<span class=\"br0\">[</span>:<span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">'   '</span><span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"%s:\u00a0%s\"</span>\u00a0% <span class=\"br0\">(</span>p<span class=\"sy0\">,</span> ispointinside<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> poly<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"kw1\">for</span> p <span class=\"kw1\">in</span> testpoints<span class=\"br0\">[</span><span class=\"nu0\">3</span>:<span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">'   '</span><span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"%s:\u00a0%s\"</span>\u00a0% <span class=\"br0\">(</span>p<span class=\"sy0\">,</span> ispointinside<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> poly<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"kw1\">for</span> p <span class=\"kw1\">in</span> testpoints<span class=\"br0\">[</span><span class=\"nu0\">6</span>:<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 44, "block": "<pre class=\"text highlighted_source\">point_in_polygon &lt;- function(polygon, p) {<br/>  count &lt;- 0<br/>  for(side in polygon) {<br/>    if ( ray_intersect_segment(p, side) ) {<br/>      count &lt;- count + 1<br/>    }<br/>  }<br/>  if ( count\u00a0%% 2 == 1 )<br/>    \"INSIDE\"<br/>  else<br/>    \"OUTSIDE\"<br/>}<br/>\u00a0<br/>ray_intersect_segment &lt;- function(p, side) {<br/>  eps &lt;- 0.0001<br/>  a &lt;- side$A<br/>  b &lt;- side$B<br/>  if ( a$y &gt; b$y ) {<br/>    a &lt;- side$B<br/>    b &lt;- side$A<br/>  }<br/>  if ( (p$y == a$y) || (p$y == b$y) ) {<br/>    p$y &lt;- p$y + eps<br/>  }<br/>  if ( (p$y &lt; a$y) || (p$y &gt; b$y) )<br/>    return(FALSE)<br/>  else if ( p$x &gt; max(a$x, b$x) )<br/>    return(FALSE)<br/>  else {<br/>    if ( p$x &lt; min(a$x, b$x) )<br/>      return(TRUE)<br/>    else {<br/>      if ( a$x\u00a0!= b$x )<br/>        m_red &lt;- (b$y - a$y) / (b$x - a$x)<br/>      else<br/>        m_red &lt;- Inf<br/>      if ( a$x\u00a0!= p$x )<br/>        m_blue &lt;- (p$y - a$y) / (p$x - a$x)<br/>      else<br/>        m_blue &lt;- Inf<br/>      return( m_blue &gt;= m_red )<br/>    }<br/>  }<br/>}</pre>"}, {"lang": "Racket", "loc": 83, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/><span class=\"br0\">(</span>module pip racket<br/>  <span class=\"br0\">(</span>require racket<span class=\"sy0\">/</span>contract<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"br0\">(</span>provide point<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>provide seg<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>provide <span class=\"br0\">(</span>contract<span class=\"sy0\">-</span>out <span class=\"br0\">[</span>point<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>polygon? <span class=\"br0\">(</span><span class=\"sy0\">-&gt;</span> <br/>                                             point? <br/>                                             <span class=\"kw1\">list?</span> <br/>                                             <span class=\"kw1\">boolean?</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"br0\">(</span>struct point <span class=\"br0\">(</span>x y<span class=\"br0\">)</span> #:transparent<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>struct seg <span class=\"br0\">(</span>Ax Ay Bx By<span class=\"br0\">)</span> #:transparent<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> \u03b5 <span class=\"nu0\">0.000001</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>neq? x y<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"kw1\">eq?</span> x y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>ray<span class=\"sy0\">-</span>cross<span class=\"sy0\">-</span>seg? r <span class=\"kw1\">s</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>Ax <span class=\"br0\">(</span>seg<span class=\"sy0\">-</span>Ax <span class=\"kw1\">s</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>Ay <span class=\"br0\">(</span>seg<span class=\"sy0\">-</span>Ay <span class=\"kw1\">s</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>           <span class=\"br0\">[</span>Bx <span class=\"br0\">(</span>seg<span class=\"sy0\">-</span>Bx <span class=\"kw1\">s</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>By <span class=\"br0\">(</span>seg<span class=\"sy0\">-</span>By <span class=\"kw1\">s</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>           <span class=\"br0\">[</span>Px <span class=\"br0\">(</span>point<span class=\"sy0\">-</span>x r<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>Pyo <span class=\"br0\">(</span>point<span class=\"sy0\">-</span>y r<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>           <span class=\"br0\">[</span>Py <span class=\"br0\">(</span><span class=\"sy0\">+</span> Pyo <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"kw1\">eq?</span> Pyo Ay<span class=\"br0\">)</span> <br/>                              <span class=\"br0\">(</span><span class=\"kw1\">eq?</span> Pyo By<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                          \u03b5 <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"br0\">(</span><span class=\"kw1\">define</span> Ax2 <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> Ay By<span class=\"br0\">)</span> Ax Bx<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">define</span> Ay2 <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> Ay By<span class=\"br0\">)</span> Ay By<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">define</span> Bx2 <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> Ay By<span class=\"br0\">)</span> Bx Ax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">define</span> By2 <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> Ay By<span class=\"br0\">)</span> By Ay<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> Py <span class=\"br0\">(</span><span class=\"kw1\">max</span> Ay By<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> Py <span class=\"br0\">(</span><span class=\"kw1\">min</span> Ay By<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> #f<span class=\"br0\">]</span><br/>            <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> Px <span class=\"br0\">(</span><span class=\"kw1\">max</span> Ax Bx<span class=\"br0\">)</span><span class=\"br0\">)</span> #f<span class=\"br0\">]</span><br/>            <span class=\"br0\">[</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <br/>                <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> Px <span class=\"br0\">(</span><span class=\"kw1\">min</span> Ax Bx<span class=\"br0\">)</span><span class=\"br0\">)</span> #t<span class=\"br0\">]</span><br/>                <span class=\"br0\">[</span><span class=\"kw1\">else</span><br/>                 <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>red <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>neq? Ax2 Bx2<span class=\"br0\">)</span><br/>                               <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> By2 Ay2<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> Bx2 Ax2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"sy0\">+</span>inf.0<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>                      <span class=\"br0\">[</span>blue <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>neq? Ax2 Px<span class=\"br0\">)</span><br/>                                <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> Py Ay2<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> Px Ax2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                 <span class=\"sy0\">+</span>inf.0<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> blue red<span class=\"br0\">)</span> #t #f<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>point<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>polygon? point polygon<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">odd?</span> <br/>     <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>fold <span class=\"br0\">(</span><span class=\"br0\">[</span>c <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>seg polygon<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"sy0\">+</span> c <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>ray<span class=\"sy0\">-</span>cross<span class=\"sy0\">-</span>seg? point seg<span class=\"br0\">)</span> <span class=\"nu0\">1</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>require 'pip<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> test<span class=\"sy0\">-</span>point<span class=\"sy0\">-</span><span class=\"kw1\">list</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">list</span><br/>   <span class=\"br0\">(</span>point <span class=\"nu0\">5.0</span>    <span class=\"nu0\">5.0</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">(</span>point <span class=\"nu0\">5.0</span>    <span class=\"nu0\">8.0</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">(</span>point <span class=\"sy0\">-</span><span class=\"nu0\">10.0</span>  <span class=\"nu0\">5.0</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">(</span>point  <span class=\"nu0\">0.0</span>   <span class=\"nu0\">5.0</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">(</span>point <span class=\"nu0\">10.0</span>   <span class=\"nu0\">5.0</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">(</span>point  <span class=\"nu0\">8.0</span>   <span class=\"nu0\">5.0</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">(</span>point <span class=\"nu0\">10.0</span>  <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> square<br/>  <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>seg <span class=\"nu0\">0.0</span>   <span class=\"nu0\">0.0</span>  <span class=\"nu0\">10.0</span>   <span class=\"nu0\">0.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg <span class=\"nu0\">10.0</span>  <span class=\"nu0\">0.0</span>  <span class=\"nu0\">10.0</span>  <span class=\"nu0\">10.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg <span class=\"nu0\">10.0</span>  <span class=\"nu0\">10.0</span>  <span class=\"nu0\">0.0</span>  <span class=\"nu0\">10.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg <span class=\"nu0\">0.0</span>   <span class=\"nu0\">0.0</span>  <span class=\"nu0\">0.0</span>   <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> exagon<br/>  <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>seg  <span class=\"nu0\">3.0</span>   <span class=\"nu0\">0.0</span>   <span class=\"nu0\">7.0</span>   <span class=\"nu0\">0.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg  <span class=\"nu0\">7.0</span>   <span class=\"nu0\">0.0</span>  <span class=\"nu0\">10.0</span>   <span class=\"nu0\">5.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg <span class=\"nu0\">10.0</span>   <span class=\"nu0\">5.0</span>   <span class=\"nu0\">7.0</span>  <span class=\"nu0\">10.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg  <span class=\"nu0\">7.0</span>  <span class=\"nu0\">10.0</span>   <span class=\"nu0\">3.0</span>  <span class=\"nu0\">10.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg  <span class=\"nu0\">0.0</span>   <span class=\"nu0\">5.0</span>   <span class=\"nu0\">3.0</span>   <span class=\"nu0\">10.0</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>seg  <span class=\"nu0\">3.0</span>   <span class=\"nu0\">0.0</span> <span class=\"nu0\">0.0</span>   <span class=\"nu0\">5.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>test<span class=\"sy0\">-</span>figure fig name<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>printf <span class=\"st0\">\"<span class=\"es0\">\\n</span>testing ~a: <span class=\"es0\">\\n</span>\"</span> name<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>for <span class=\"br0\">(</span><span class=\"br0\">[</span>p test<span class=\"sy0\">-</span>point<span class=\"sy0\">-</span><span class=\"kw1\">list</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>printf <span class=\"st0\">\"testing ~v: ~a<span class=\"es0\">\\n</span>\"</span>  p <span class=\"br0\">(</span>point<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>polygon? p fig<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>test<span class=\"sy0\">-</span>figure square <span class=\"st0\">\"square\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>test<span class=\"sy0\">-</span>figure exagon <span class=\"st0\">\"exagon\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 50, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program verifies if a   horizontal ray   from   point P   intersects  a polygon. */</span><br/><span class=\"kw1\">call</span> points <span class=\"nu0\">5</span> <span class=\"nu0\">5</span>,       <span class=\"nu0\">5</span> <span class=\"nu0\">8</span>,       -<span class=\"nu0\">10</span>  <span class=\"nu0\">5</span>,       <span class=\"nu0\">0</span>  <span class=\"nu0\">5</span>,       <span class=\"nu0\">10</span>  <span class=\"nu0\">5</span>,       <span class=\"nu0\">8</span>  <span class=\"nu0\">5</span>,       <span class=\"nu0\">10</span> <span class=\"nu0\">10</span><br/>A=<span class=\"nu0\">2.5</span>;    B=<span class=\"nu0\">7.5</span>                            <span class=\"coMULTI\">/* \u25c4\u2500\u2500\u2500\u2500\u2500 used for shorter arguments (below).*/</span><br/><span class=\"kw1\">call</span> poly <span class=\"nu0\">0</span> <span class=\"nu0\">0</span>, <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>,  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>,  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>                            \u00a0;   <span class=\"kw1\">call</span> test <span class=\"st0\">'square'</span><br/><span class=\"kw1\">call</span> poly <span class=\"nu0\">0</span> <span class=\"nu0\">0</span>, <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>,  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>,  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>,  A  A,   B  A,   B  B, A B\u00a0;   <span class=\"kw1\">call</span> test <span class=\"st0\">'square hole'</span><br/><span class=\"kw1\">call</span> poly <span class=\"nu0\">0</span> <span class=\"nu0\">0</span>,  A A,   <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>,  A  B,  B  B,  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>,  <span class=\"nu0\">10</span>  <span class=\"nu0\">0</span>     \u00a0;   <span class=\"kw1\">call</span> test <span class=\"st0\">'irregular'</span><br/><span class=\"kw1\">call</span> poly <span class=\"nu0\">3</span> <span class=\"nu0\">0</span>,  <span class=\"nu0\">7</span> <span class=\"nu0\">0</span>,  <span class=\"nu0\">10</span>  <span class=\"nu0\">5</span>,  <span class=\"nu0\">7</span> <span class=\"nu0\">10</span>,  <span class=\"nu0\">3</span> <span class=\"nu0\">10</span>,   <span class=\"nu0\">0</span>  <span class=\"nu0\">5</span>             \u00a0;   <span class=\"kw1\">call</span> test <span class=\"st0\">'hexagon'</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>in$out: <span class=\"kw1\">procedure</span> <span class=\"kw1\">expose</span> point<span class=\"sy0\">.</span> poly<span class=\"sy0\">.</span>;     <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> p;              #=<span class=\"nu0\">0</span><br/>                     <span class=\"kw1\">do</span> side=<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> poly<span class=\"sy0\">.</span>0  <span class=\"kw2\">by</span> <span class=\"nu0\">2</span>;   #=# +intersect<span class=\"br0\">(</span>p, side<span class=\"br0\">)</span>;   <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*side*/</span><br/>        <span class=\"kw1\">return</span> # <span class=\"sy0\">//</span> <span class=\"nu0\">2</span>                            <span class=\"coMULTI\">/*ODD  is inside.     EVEN  is outside.*/</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>intersect: <span class=\"kw1\">procedure</span> <span class=\"kw1\">expose</span> point<span class=\"sy0\">.</span> poly<span class=\"sy0\">.</span>;         <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span>\u00a0?,s;                  sp=s + <span class=\"nu0\">1</span><br/>           epsilon= <span class=\"st0\">'1e'</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>-<span class=\"kw2\">digits</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\u00a0%2<span class=\"br0\">)</span>;       infinity= <span class=\"st0\">\"1e\"</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"kw2\">digits</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>           Px=point<span class=\"sy0\">.</span>?<span class=\"sy0\">.</span>x;      Ax=poly<span class=\"sy0\">.</span>s<span class=\"sy0\">.</span>x;        Bx=poly<span class=\"sy0\">.</span>sp<span class=\"sy0\">.</span>x<br/>           Py=point<span class=\"sy0\">.</span>?<span class=\"sy0\">.</span>y;      Ay=poly<span class=\"sy0\">.</span>s<span class=\"sy0\">.</span>y;        <span class=\"kw2\">By</span>=poly<span class=\"sy0\">.</span>sp<span class=\"sy0\">.</span>y  <span class=\"coMULTI\">/* [\u2193]  do a vertex swap*/</span><br/>           <span class=\"kw1\">if</span> Ay<span class=\"sy0\">&gt;</span><span class=\"kw2\">By</span>           <span class=\"kw3\">then</span> <span class=\"kw1\">parse</span>  <span class=\"kw2\">value</span>   Ax Ay Bx <span class=\"kw2\">By</span>    <span class=\"kw2\">with</span>    Bx <span class=\"kw2\">By</span> Ax Ay<br/>           <span class=\"kw1\">if</span> Py=Ay <span class=\"sy0\">|</span> Py=<span class=\"kw2\">By</span>   <span class=\"kw3\">then</span> Py=Py + epsilon<br/>           <span class=\"kw1\">if</span> Py<span class=\"sy0\">&lt;</span>Ay <span class=\"sy0\">|</span> Py<span class=\"sy0\">&gt;</span><span class=\"kw2\">By</span> <span class=\"sy0\">|</span> Px<span class=\"sy0\">&gt;</span><span class=\"kw6\">max</span><span class=\"br0\">(</span>Ax, Bx<span class=\"br0\">)</span>  <span class=\"kw3\">then</span>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>           <span class=\"kw1\">if</span>                 Px<span class=\"sy0\">&lt;</span><span class=\"kw6\">min</span><span class=\"br0\">(</span>Ax, Bx<span class=\"br0\">)</span>  <span class=\"kw3\">then</span>  <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>           <span class=\"kw1\">if</span> Ax<span class=\"sy0\">\\</span>=Bx          <span class=\"kw3\">then</span> red = <span class=\"br0\">(</span>By-Ay<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>Bx-Ax<span class=\"br0\">)</span><br/>                              <span class=\"kw3\">else</span> red = infinity<br/>           <span class=\"kw1\">if</span> Ax<span class=\"sy0\">\\</span>=Px          <span class=\"kw3\">then</span>                  <span class=\"kw1\">return</span>  <span class=\"br0\">(</span>Py-Ay<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>Px-Ax<span class=\"br0\">)</span>  <span class=\"sy0\">&gt;</span>=  red<br/>           <span class=\"kw1\">return</span>  <span class=\"nu0\">1</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>points: wx=<span class=\"nu0\">0</span>;  wy=<span class=\"nu0\">0</span>;     <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;         <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span>  <span class=\"kw1\">arg</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>    <span class=\"kw2\">with</span>   xx  yy<br/>                         wx=<span class=\"kw6\">max</span><span class=\"br0\">(</span>wx, <span class=\"kw6\">length</span><span class=\"br0\">(</span>xx<span class=\"br0\">)</span> <span class=\"br0\">)</span>;   <span class=\"kw1\">call</span>  <span class=\"kw2\">value</span>  <span class=\"st0\">'POINT.'</span>j<span class=\"st0\">\".X\"</span>,   xx<br/>                         wy=<span class=\"kw6\">max</span><span class=\"br0\">(</span>wy, <span class=\"kw6\">length</span><span class=\"br0\">(</span>yy<span class=\"br0\">)</span> <span class=\"br0\">)</span>;   <span class=\"kw1\">call</span>  <span class=\"kw2\">value</span>  <span class=\"st0\">'POINT.'</span>j<span class=\"st0\">\".Y\"</span>,       yy<br/>                         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>        <span class=\"kw1\">call</span> <span class=\"kw2\">value</span> point<span class=\"sy0\">.</span>0,  j-<span class=\"nu0\">1</span>                         <span class=\"coMULTI\">/*define the number of points. */</span><br/>        <span class=\"kw1\">return</span>                                           <span class=\"coMULTI\">/* [\u2191]  adjust J  (for DO loop)*/</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>poly:   @= <span class=\"st0\">'POLY.'</span>;      <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> Fx Fy                 <span class=\"coMULTI\">/* [\u2193]  process the X,Y points.*/</span><br/>        n=<span class=\"nu0\">0</span><br/>                 <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;      n=n + <span class=\"nu0\">1</span>;   <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>   <span class=\"kw2\">with</span>   xx yy<br/>                 <span class=\"kw1\">call</span> <span class=\"kw2\">value</span> @ <span class=\"sy0\">||</span> n<span class=\"st0\">'.X'</span>,  xx\u00a0;       <span class=\"kw1\">call</span> <span class=\"kw2\">value</span>  @ <span class=\"sy0\">||</span> n<span class=\"st0\">\".Y\"</span>, yy<br/>                 <span class=\"kw1\">if</span> n<span class=\"sy0\">//</span><span class=\"nu0\">2</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>;  n=n + <span class=\"nu0\">1</span>         <span class=\"coMULTI\">/*Inside? Then skip this point.*/</span><br/>                 <span class=\"kw1\">call</span> <span class=\"kw2\">value</span> @ <span class=\"sy0\">||</span> n<span class=\"st0\">'.X'</span>,  xx\u00a0;       <span class=\"kw1\">call</span> <span class=\"kw2\">value</span>  @ <span class=\"sy0\">||</span> n<span class=\"st0\">\".Y\"</span>, yy<br/>                 <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>        n=n + <span class=\"nu0\">1</span>                                          <span class=\"coMULTI\">/*POLY.0  is # segments(sides).*/</span><br/>        <span class=\"kw1\">call</span> <span class=\"kw2\">value</span> @ <span class=\"sy0\">||</span> n<span class=\"st0\">'.X'</span>, Fx;       <span class=\"kw1\">call</span> <span class=\"kw2\">value</span> @ <span class=\"sy0\">||</span> n<span class=\"st0\">\".Y\"</span>, Fy;     <span class=\"kw1\">call</span> <span class=\"kw2\">value</span> @<span class=\"st0\">'0'</span>, n<br/>        <span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>test:   <span class=\"kw1\">say</span>;     <span class=\"kw1\">do</span> k=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> point<span class=\"sy0\">.</span>0;    w=wx + wy + <span class=\"nu0\">2</span>   <span class=\"coMULTI\">/*W, WX, WY \u2261are various widths*/</span><br/>                 <span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"st0\">'  ['</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\"]  point:\"</span>,  <span class=\"nu0\">30</span><span class=\"br0\">)</span>,<br/>                     <span class=\"kw6\">right</span><span class=\"br0\">(</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>point<span class=\"sy0\">.</span>k<span class=\"sy0\">.</span>x, wx<span class=\"br0\">)</span><span class=\"st0\">', '</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>point<span class=\"sy0\">.</span>k<span class=\"sy0\">.</span>y, wy<span class=\"br0\">)</span>, w<span class=\"br0\">)</span>     <span class=\"st0\">\"  is  \"</span>,<br/>                     <span class=\"kw6\">right</span><span class=\"br0\">(</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span><span class=\"st0\">'outside inside'</span>,  in$out<span class=\"br0\">(</span>k<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span>,  <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>                 <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/>        <span class=\"kw1\">return</span>                                           <span class=\"coMULTI\">/* [\u2191] format the output nicely*/</span></pre>"}, {"lang": "Rust", "loc": 131, "block": "<pre class=\"text highlighted_source\">use std::f64;<br/>\u00a0<br/>const _EPS: f64 = 0.00001;<br/>const _MIN: f64 = f64::MIN_POSITIVE;<br/>const _MAX: f64 = f64::MAX;<br/>\u00a0<br/>#[derive(Clone)]<br/>struct Point {<br/>    x: f64,<br/>    y: f64,<br/>}<br/>\u00a0<br/>#[derive(Clone)]<br/>struct Edge {<br/>    pt1: Point,<br/>    pt2: Point,<br/>}<br/>\u00a0<br/>impl Edge {<br/>    fn new(pt1: (f64, f64), pt2: (f64, f64)) -&gt; Edge {<br/>        Edge {<br/>            pt1: Point { x: pt1.0, y: pt1.1 },<br/>            pt2: Point { x: pt2.0, y: pt2.1 },<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>struct Polygon {<br/>    edges: Vec&lt;Edge&gt;, // Polygon has to be created with counter-clockwise coordinates<br/>}<br/>\u00a0<br/>fn pt_in_polygon(pt: &amp;Point, poly: &amp;Polygon) -&gt; bool {<br/>    let count = poly.edges<br/>        .iter()<br/>        .filter(|edge| ray_intersect_seg(pt, edge))<br/>        .count();<br/>\u00a0<br/>    count\u00a0% 2 == 1<br/>}<br/>\u00a0<br/>fn ray_intersect_seg(p: &amp;Point, edge: &amp;Edge) -&gt; bool {<br/>    let mut pt = p.clone();<br/>    let (mut a, mut b): (&amp;Point, &amp;Point) = (&amp;edge.pt1, &amp;edge.pt2);<br/>    if a.y &gt; b.y {<br/>        std::mem::swap(&amp;mut a, &amp;mut b);<br/>    }<br/>    if pt.y == a.y || pt.y == b.y {<br/>        pt.y += _EPS;<br/>    }<br/>\u00a0<br/>    if (pt.y &gt; b.y || pt.y &lt; a.y) || pt.x &gt; a.x.max(b.x) {<br/>        false<br/>    } else if pt.x &lt; a.x.min(b.x) {<br/>        true<br/>    } else {<br/>        let m_red = if (a.x - b.x).abs() &gt; _MIN {<br/>            (b.y - a.y) / (b.x - a.x)<br/>        } else {<br/>            _MAX<br/>        };<br/>        let m_blue = if (a.x - pt.x).abs() &gt; _MIN {<br/>            (pt.y - a.y) / (pt.x - a.x)<br/>        } else {<br/>            _MAX<br/>        };<br/>        m_blue &gt;= m_red<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    let p = |x, y| Point { x, y };<br/>    let testpoints = [p(5.0, 5.0), p(5.0, 8.0), p(-10.0, 5.0), p(0.0, 5.0), p(10.0, 5.0), p(8.0, 5.0), p(10.0, 10.0)];<br/>    let poly_square = Polygon {<br/>        edges: vec![<br/>            Edge::new((0.0, 0.0), (10.0, 0.0)),<br/>            Edge::new((10.0, 0.0), (10.0, 10.0)),<br/>            Edge::new((10.0, 10.0), (0.0, 10.0)),<br/>            Edge::new((0.0, 10.0), (0.0, 0.0)),<br/>        ],<br/>    };<br/>    let poly_square_hole = Polygon {<br/>        edges: vec![<br/>            Edge::new((0.0, 0.0), (10.0, 0.0)),<br/>            Edge::new((10.0, 0.0), (10.0, 10.0)),<br/>            Edge::new((10.0, 10.0), (0.0, 10.0)),<br/>            Edge::new((0.0, 10.0), (0.0, 0.0)),<br/>            Edge::new((2.5, 2.5), (7.5, 2.5)),<br/>            Edge::new((7.5, 2.5), (7.5, 7.5)),<br/>            Edge::new((7.5, 7.5), (2.5, 7.5)),<br/>            Edge::new((2.5, 7.5), (2.5, 2.5)),<br/>        ],<br/>    };<br/>    let poly_strange = Polygon {<br/>        edges: vec![<br/>            Edge::new((0.0, 0.0), (2.5, 2.5)),<br/>            Edge::new((2.5, 2.5), (0.0, 10.0)),<br/>            Edge::new((0.0, 10.0), (2.5, 7.5)),<br/>            Edge::new((2.5, 7.5), (7.5, 7.5)),<br/>            Edge::new((7.5, 7.5), (10.0, 10.0)),<br/>            Edge::new((10.0, 10.0), (10.0, 0.0)),<br/>            Edge::new((10.0, 0.0), (2.5, 2.5)),<br/>        ],<br/>    };<br/>    let poly_hexagon = Polygon {<br/>        edges: vec![<br/>            Edge::new((3.0, 0.0), (7.0, 0.0)),<br/>            Edge::new((7.0, 0.0), (10.0, 5.0)),<br/>            Edge::new((10.0, 5.0), (7.0, 10.0)),<br/>            Edge::new((7.0, 10.0), (3.0, 10.0)),<br/>            Edge::new((3.0, 10.0), (0.0, 5.0)),<br/>            Edge::new((0.0, 5.0), (3.0, 0.0)),<br/>        ],<br/>    };<br/>    print!(\"\\nSquare\u00a0:\");<br/>    for pt in &amp;testpoints {<br/>        print!(\" {:?}\", pt_in_polygon(pt, &amp;poly_square));<br/>    }<br/>    print!(\"\\nSquare with hole:\");<br/>    for pt in &amp;testpoints {<br/>        print!(\" {:?}\", pt_in_polygon(pt, &amp;poly_square_hole));<br/>    }<br/>    print!(\"\\nStrange polygon\u00a0:\");<br/>    for pt in &amp;testpoints {<br/>        print!(\" {:?}\", pt_in_polygon(pt, &amp;poly_strange));<br/>    }<br/>    print!(\"\\nHexagon\u00a0:\");<br/>    for pt in &amp;testpoints {<br/>        print!(\" {:?}\", pt_in_polygon(pt, &amp;poly_hexagon));<br/>    }<br/>    println!();<br/>}</pre>"}, {"lang": "Scala", "loc": 47, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">package</span></a> scala.<span class=\"me1\">ray_casting</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Edge<span class=\"br0\">(</span><span class=\"sy0\">_</span>1<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Double, Double<span class=\"br0\">)</span>, <span class=\"sy0\">_</span>2<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Double, Double<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> Math.<span class=\"sy0\">_</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> Double.<span class=\"sy0\">_</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> raySegI<span class=\"br0\">(</span>p<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Double, Double<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Boolean <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>2 <span class=\"sy0\">&gt;</span> <span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Edge<span class=\"br0\">(</span><span class=\"sy0\">_</span>2, <span class=\"sy0\">_</span>1<span class=\"br0\">)</span>.<span class=\"me1\">raySegI</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>2 <span class=\"sy0\">==</span> <span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>2 || p.<span class=\"sy0\">_</span>2 <span class=\"sy0\">==</span> <span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> raySegI<span class=\"br0\">(</span><span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>1, p.<span class=\"sy0\">_</span>2 + epsilon<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>2 <span class=\"sy0\">&gt;</span> <span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>2 || p.<span class=\"sy0\">_</span>2 <span class=\"sy0\">&lt;</span> <span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>2 || p.<span class=\"sy0\">_</span>1 <span class=\"sy0\">&gt;</span> max<span class=\"br0\">(</span><span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>1, <span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>1 <span class=\"sy0\">&lt;</span> min<span class=\"br0\">(</span><span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>1, <span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> blue <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span><span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>1 - p.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> MinValue<span class=\"br0\">)</span> <span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>2 - <span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span> / <span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>1 - <span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> MaxValue<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> red <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span><span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>1 - <span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> MinValue<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>2 - <span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"sy0\">_</span>2.<span class=\"sy0\">_</span>1 - <span class=\"sy0\">_</span>1.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> MaxValue<br/>    blue <span class=\"sy0\">&gt;=</span> red<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">final</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> epsilon <span class=\"sy0\">=</span> <span class=\"nu0\">0.00001</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Figure<span class=\"br0\">(</span>name<span class=\"sy0\">:</span> String, edges<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>Edge<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> contains<span class=\"br0\">(</span>p<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Double, Double<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> edges.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">raySegI</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Ray<span class=\"sy0\">_</span>casting <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> figures <span class=\"sy0\">=</span> Seq<span class=\"br0\">(</span>Figure<span class=\"br0\">(</span><span class=\"st0\">\"Square\"</span>, Seq<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>    Figure<span class=\"br0\">(</span><span class=\"st0\">\"Square hole\"</span>, Seq<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">7.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">7.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>    Figure<span class=\"br0\">(</span><span class=\"st0\">\"Strange\"</span>, Seq<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">7.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7.5</span>, <span class=\"nu0\">7.5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>    Figure<span class=\"br0\">(</span><span class=\"st0\">\"Exagon\"</span>, Seq<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">7.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">7.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">7.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> points <span class=\"sy0\">=</span> Seq<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">5.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">5.0</span>, <span class=\"nu0\">8.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span>-<span class=\"nu0\">10.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">8.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span><span class=\"st0\">\"points: \"</span> + points<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>f <span class=\"sy0\">&lt;</span>- figures<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"figure: \"</span> + f.<span class=\"me1\">name</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"        \"</span> + f.<span class=\"me1\">edges</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"result: \"</span> + <span class=\"br0\">(</span>points map f.<span class=\"me1\">contains</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">implicit</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> to<span class=\"sy0\">_</span>edge<span class=\"br0\">(</span>p<span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>Double, Double<span class=\"br0\">)</span>, <span class=\"br0\">(</span>Double, Double<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Edge <span class=\"sy0\">=</span> Edge<span class=\"br0\">(</span>p.<span class=\"sy0\">_</span>1, p.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Smalltalk", "loc": 77, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">Object</span> subclass: <span class=\"re0\">Segment</span> <span class=\"br0\">[</span><br/>    |<span class=\"re3\">pts</span>|<br/>    <span class=\"re0\">Segment</span> class &gt;&gt; new: <span class=\"re5\">points</span> <span class=\"br0\">[</span> |<span class=\"re3\">a</span>|<br/>      <span class=\"re6\">a</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">super</span> new.<br/>      ^ a init: <span class=\"re5\">points</span><br/>    <span class=\"br0\">]</span><br/>    init: <span class=\"re5\">points</span> <span class=\"br0\">[</span> <span class=\"re5\">pts</span> <span class=\"sy0\">:=</span> <span class=\"re5\">points</span> copy. ^self <span class=\"br0\">]</span><br/>    endPoints <span class=\"br0\">[</span> ^pts <span class=\"br0\">]</span><br/>    <span class=\"coMULTI\">\"utility methods\"</span><br/>    first <span class=\"br0\">[</span> ^ pts at: <span class=\"re5\">1</span><span class=\"br0\">]</span><br/>    second <span class=\"br0\">[</span> ^ pts at: <span class=\"re5\">2</span><span class=\"br0\">]</span><br/>    leftmostEndPoint <span class=\"br0\">[</span> <br/>      ^ <span class=\"br0\">(</span><span class=\"kw1\">self</span> first x &gt; <span class=\"kw1\">self</span> second x<span class=\"br0\">)</span> ifTrue: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> second <span class=\"br0\">]</span> ifFalse: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> first <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/>    rightmostEndPoint <span class=\"br0\">[</span><br/>      ^ <span class=\"br0\">(</span><span class=\"kw1\">self</span> first x &gt; <span class=\"kw1\">self</span> second x<span class=\"br0\">)</span> ifTrue: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> first <span class=\"br0\">]</span> ifFalse: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> second <span class=\"br0\">]</span> <br/>    <span class=\"br0\">]</span><br/>    topmostEndPoint <span class=\"br0\">[</span><br/>      ^ <span class=\"br0\">(</span><span class=\"kw1\">self</span> first y &gt; <span class=\"kw1\">self</span> second y<span class=\"br0\">)</span> ifTrue: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> first <span class=\"br0\">]</span> ifFalse: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> second <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/>    bottommostEndPoint <span class=\"br0\">[</span><br/>      ^ <span class=\"br0\">(</span><span class=\"kw1\">self</span> first y &gt; <span class=\"kw1\">self</span> second y<span class=\"br0\">)</span> ifTrue: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> second <span class=\"br0\">]</span> ifFalse: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> first <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/>\u00a0<br/>    slope <span class=\"br0\">[</span><br/>      <span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span> x ~<span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">2</span><span class=\"br0\">)</span> x<br/>      ifTrue: <span class=\"br0\">[</span> ^ <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span> y - <span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">2</span><span class=\"br0\">)</span> y<span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span> x - <span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">2</span><span class=\"br0\">)</span> x<span class=\"br0\">)</span> <span class=\"br0\">]</span><br/>      ifFalse: <span class=\"br0\">[</span> ^ <span class=\"re0\">FloatD</span> infinity <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/>\u00a0<br/>    doesIntersectRayFrom: <span class=\"re5\">point</span> <span class=\"br0\">[</span> |p <span class=\"re0\">A</span> <span class=\"re0\">B</span>|<br/>      <span class=\"br0\">(</span><span class=\"re5\">point</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span> y<span class=\"br0\">)</span> | <span class=\"br0\">(</span><span class=\"re5\">point</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re5\">pts</span> at: <span class=\"re5\">2</span><span class=\"br0\">)</span> y<span class=\"br0\">)</span><br/>      ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">p</span> <span class=\"sy0\">:=</span> <span class=\"re0\">Point</span> x: <span class=\"br0\">(</span><span class=\"re5\">point</span> x<span class=\"br0\">)</span> y: <span class=\"br0\">(</span><span class=\"re5\">point</span> y<span class=\"br0\">)</span> + <span class=\"re5\">0</span>.<span class=\"re5\">00001</span> <span class=\"br0\">]</span><br/>      ifFalse: <span class=\"br0\">[</span> <span class=\"re5\">p</span> <span class=\"sy0\">:=</span> <span class=\"re5\">point</span> copy <span class=\"br0\">]</span>.<br/>      <span class=\"re0\">A</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">self</span> bottommostEndPoint.<br/>      <span class=\"re0\">B</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">self</span> topmostEndPoint.<br/>      <span class=\"br0\">(</span><span class=\"re5\">p</span> y &lt; <span class=\"re0\">A</span> y<span class=\"br0\">)</span> | <span class=\"br0\">(</span><span class=\"re5\">p</span> y &gt; <span class=\"re0\">B</span> y<span class=\"br0\">)</span> | <span class=\"br0\">(</span><span class=\"re5\">p</span> x &gt; <span class=\"br0\">(</span><span class=\"kw1\">self</span> rightmostEndPoint x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        ifTrue: <span class=\"br0\">[</span> ^false <span class=\"br0\">]</span><br/>        ifFalse: <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"re5\">p</span> x &lt; <span class=\"br0\">(</span><span class=\"kw1\">self</span> leftmostEndPoint x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     ifTrue: <span class=\"br0\">[</span> ^true <span class=\"br0\">]</span><br/>                     ifFalse: <span class=\"br0\">[</span> |<span class=\"re3\">s</span>| <br/>                        <span class=\"re6\">s</span> <span class=\"sy0\">:=</span> <span class=\"re0\">Segment</span> new: <span class=\"br0\">{</span> <span class=\"re0\">A</span> . <span class=\"re5\">point</span> <span class=\"br0\">}</span>.<br/>\t\t\t<span class=\"br0\">(</span><span class=\"re5\">s</span> slope<span class=\"br0\">)</span> &gt;<span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">self</span> slope<span class=\"br0\">)</span><br/>\t\t\t  ifTrue: <span class=\"br0\">[</span> ^ <span class=\"kw1\">true</span> <span class=\"br0\">]</span><br/>                     <span class=\"br0\">]</span><br/>                 <span class=\"br0\">]</span>.<br/>        ^false<br/>    <span class=\"br0\">]</span><br/><span class=\"br0\">]</span>.<br/>\u00a0<br/><span class=\"re0\">Object</span> subclass: <span class=\"re0\">Polygon</span> <span class=\"br0\">[</span><br/>    |<span class=\"re3\">polysegs</span>|<br/>    <span class=\"re0\">Polygon</span> class &gt;&gt; new <span class=\"br0\">[</span> |<span class=\"re3\">a</span>| <span class=\"re6\">a</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">super</span> new. ^ a init. <span class=\"br0\">]</span><br/>    <span class=\"re0\">Polygon</span> class &gt;&gt; fromSegments: <span class=\"re5\">segments</span> <span class=\"br0\">[</span> |<span class=\"re3\">a</span>|<br/>      <span class=\"re6\">a</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">super</span> new.<br/>      ^ a initWithSegments: <span class=\"re5\">segments</span><br/>    <span class=\"br0\">]</span><br/>    <span class=\"re0\">Polygon</span> class &gt;&gt; fromPoints: <span class=\"re5\">pts</span> and: <span class=\"re5\">indexes</span> <span class=\"br0\">[</span> |<span class=\"re3\">a</span>|<br/>      <span class=\"re6\">a</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">self</span> new.<br/>      <span class=\"re5\">indexes</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">i</span> |<br/>        a addSegment: <span class=\"br0\">(</span> <span class=\"re0\">Segment</span> new: <span class=\"br0\">{</span> pts at: <span class=\"br0\">(</span><span class=\"re5\">i</span> at: <span class=\"re5\">1</span><span class=\"br0\">)</span> . <span class=\"re5\">pts</span> at: <span class=\"br0\">(</span><span class=\"re5\">i</span> at: <span class=\"re5\">2</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span><br/>      <span class=\"br0\">]</span>.<br/>      ^ a<br/>    <span class=\"br0\">]</span><br/>    initWithSegments: <span class=\"re5\">segments</span> <span class=\"br0\">[</span><br/>      <span class=\"re5\">polysegs</span> <span class=\"sy0\">:=</span> <span class=\"re5\">segments</span> copy. ^self<br/>    <span class=\"br0\">]</span><br/>    init <span class=\"br0\">[</span> <span class=\"re5\">polysegs</span> <span class=\"sy0\">:=</span> <span class=\"re0\">OrderedCollection</span> new. ^ <span class=\"kw1\">self</span> <span class=\"br0\">]</span><br/>    addSegment: <span class=\"re5\">segment</span> <span class=\"br0\">[</span> <span class=\"re5\">polysegs</span> add: <span class=\"re5\">segment</span> <span class=\"br0\">]</span><br/>\u00a0<br/>    pointInside: <span class=\"re5\">point</span> <span class=\"br0\">[</span> |<span class=\"re3\">cnt</span>|<br/>      <span class=\"re6\">cnt</span> <span class=\"sy0\">:=</span> <span class=\"re5\">0</span>.<br/>      <span class=\"re5\">polysegs</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">s</span> | <span class=\"br0\">(</span><span class=\"re5\">s</span> doesIntersectRayFrom: <span class=\"re5\">point</span><span class=\"br0\">)</span><br/>                          ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">cnt</span> <span class=\"sy0\">:=</span> <span class=\"re5\">cnt</span> + <span class=\"re5\">1</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span>.<br/>      ^ <span class=\"br0\">(</span> <span class=\"re5\">cnt</span> \\\\ <span class=\"nu0\">2</span> <span class=\"sy0\">=</span> <span class=\"re5\">0</span> <span class=\"br0\">)</span> not<br/>    <span class=\"br0\">]</span><br/><span class=\"br0\">]</span>.</pre>"}, {"lang": "Tcl", "loc": 58, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> point_in_polygon <span class=\"br0\">{</span>point polygon<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> count <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">foreach</span> side <span class=\"br0\">[</span>sides <span class=\"re0\">$polygon</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>ray_intersects_line <span class=\"re0\">$point</span> <span class=\"re0\">$side</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">incr</span> count<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$count</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"sy0\">;</span><span class=\"co1\">#-- 1 = odd = true, 0 = even = false</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> sides polygon <span class=\"br0\">{</span><br/>    lassign <span class=\"re0\">$polygon</span> x0 y0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>x y<span class=\"br0\">}</span> <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"br0\">[</span><span class=\"kw2\">lappend</span> polygon <span class=\"re0\">$x0</span> <span class=\"re0\">$y0</span><span class=\"br0\">]</span> <span class=\"nu0\">2</span> end<span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">lappend</span> res <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$x0</span> <span class=\"re0\">$y0</span> <span class=\"re0\">$x</span> <span class=\"re0\">$y</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> x0 <span class=\"re0\">$x</span><br/>        <span class=\"kw1\">set</span> y0 <span class=\"re0\">$y</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$res</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> ray_intersects_line <span class=\"br0\">{</span>point line<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lassign <span class=\"re0\">$point</span> Px Py<br/>    lassign <span class=\"re0\">$line</span> Ax Ay Bx By<br/>    <span class=\"co1\"># Reverse line direction if necessary</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$By</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$Ay</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\tlassign <span class=\"re0\">$line</span> Bx By Ax Ay<br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\"># Add epsilon to </span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$Py</span> == <span class=\"re0\">$Ay</span> || <span class=\"re0\">$Py</span> == <span class=\"re0\">$By</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> Py <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$Py</span> + abs<span class=\"br0\">(</span><span class=\"re0\">$Py</span><span class=\"br0\">)</span>/1e6<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\"># Bounding box checks</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$Py</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$Ay</span> || <span class=\"re0\">$Py</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$By</span> || <span class=\"re0\">$Px</span> <span class=\"sy0\">&gt;</span> max<span class=\"br0\">(</span><span class=\"re0\">$Ax</span>,<span class=\"re0\">$Bx</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$Px</span> <span class=\"sy0\">&lt;</span> min<span class=\"br0\">(</span><span class=\"re0\">$Ax</span>,<span class=\"re0\">$Bx</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\"># Compare dot products to compare (cosines of) angles</span><br/>    <span class=\"kw1\">set</span> mRed <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$Ax</span> <span class=\"sy0\">!</span>= <span class=\"re0\">$Bx</span> <span class=\"sy0\">?</span> <span class=\"br0\">(</span><span class=\"re0\">$By</span>-<span class=\"re0\">$Ay</span><span class=\"br0\">)</span>/<span class=\"br0\">(</span><span class=\"re0\">$Bx</span>-<span class=\"re0\">$Ax</span><span class=\"br0\">)</span>\u00a0: Inf<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> mBlu <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$Ax</span> <span class=\"sy0\">!</span>= <span class=\"re0\">$Px</span> <span class=\"sy0\">?</span> <span class=\"br0\">(</span><span class=\"re0\">$Py</span>-<span class=\"re0\">$Ay</span><span class=\"br0\">)</span>/<span class=\"br0\">(</span><span class=\"re0\">$Px</span>-<span class=\"re0\">$Ax</span><span class=\"br0\">)</span>\u00a0: Inf<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$mBlu</span> <span class=\"sy0\">&gt;</span>= <span class=\"re0\">$mRed</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>point poly<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span>-<span class=\"nu0\">1</span> -<span class=\"nu0\">1</span>  -<span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> -<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">2</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span>-<span class=\"nu0\">1</span> -<span class=\"nu0\">1</span>  -<span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> -<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span>-<span class=\"nu0\">2</span> -<span class=\"nu0\">2</span>  -<span class=\"nu0\">2</span> <span class=\"nu0\">2</span>  <span class=\"nu0\">2</span> <span class=\"nu0\">2</span>  <span class=\"nu0\">2</span> -<span class=\"nu0\">2</span>   <span class=\"nu0\">2</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  -<span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  -<span class=\"nu0\">1</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">2</span> -<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">1.5</span> <span class=\"nu0\">1.5</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span>-<span class=\"nu0\">2</span> -<span class=\"nu0\">2</span>  -<span class=\"nu0\">2</span> <span class=\"nu0\">2</span>  <span class=\"nu0\">2</span> <span class=\"nu0\">2</span>  <span class=\"nu0\">2</span> -<span class=\"nu0\">2</span>   <span class=\"nu0\">2</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  -<span class=\"nu0\">1</span> <span class=\"nu0\">1</span>  -<span class=\"nu0\">1</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">1</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">2</span> -<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">5</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">5</span> <span class=\"nu0\">8</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">2</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">10</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span><span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">2.5</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">2.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">7.5</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7.5</span> <span class=\"nu0\">0.1</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">{</span>-<span class=\"nu0\">5</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span>\t<span class=\"br0\">{</span><span class=\"nu0\">3</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">7</span> <span class=\"nu0\">0</span>  <span class=\"nu0\">10</span> <span class=\"nu0\">5</span>  <span class=\"nu0\">7</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">3</span> <span class=\"nu0\">10</span>  <span class=\"nu0\">0</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"$point in $poly = [point_in_polygon $point $poly]\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ursala", "loc": 7, "block": "<pre class=\"text highlighted_source\">#import flo<br/>\u00a0<br/>in =<br/>\u00a0<br/>@lrzyCipPX ~|afatPRZaq ~&amp;EZ+fleq~~lrPrbr2G&amp;&amp; ~&amp;B+fleq~~lrPrbl2G!| -&amp;<br/>   ~&amp;Y+ ~~lrPrbl2G fleq,<br/>   ^E(<a class=\"__cf_email__\" data-cfemail=\"eb8d878e9aab879999bbb3\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>,@rl fleq\\0.)^/~&amp;lr ^(~&amp;r,times)^/<a class=\"__cf_email__\" data-cfemail=\"e78a8e899294a78b8bb7958b8bd5bf\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> vid+ minus~~rbbI&amp;-</pre>"}, {"lang": "Visual Basic .NET", "loc": 47, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Imports</span> System<span class=\"sy0\">.</span><span class=\"me1\">Math</span><br/>\u00a0<br/><span class=\"kw1\">Module</span> RayCasting<br/>\u00a0<br/>    <span class=\"kw1\">Private</span> square <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">Private</span> squareHole <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">15</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">15</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">Private</span> strange <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">15</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">Private</span> hexagon <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">6</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">14</span>, <span class=\"nu0\">0</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">14</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">6</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">Private</span> shapes <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span>square, squareHole, strange, hexagon<span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Sub</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> testPoints <span class=\"kw1\">As</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">10</span>, <span class=\"nu0\">16</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">20</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">16</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span>, <span class=\"kw1\">New</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">For</span> <span class=\"kw1\">Each</span> shape <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">In</span> shapes<br/>            <span class=\"kw1\">For</span> <span class=\"kw1\">Each</span> point <span class=\"kw1\">As</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">In</span> testPoints<br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"kw2\">String</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=FORMAT+site:msdn.microsoft.com\"><span class=\"kw7\">Format</span></a><span class=\"br0\">(</span><span class=\"st0\">\"{0} \"</span>, Contains<span class=\"br0\">(</span>shape, point<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"sy0\">.</span><span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Next</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>    <span class=\"kw1\">Private</span> <span class=\"kw1\">Function</span> Contains<span class=\"br0\">(</span>shape <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, point <span class=\"kw1\">As</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span><br/>\u00a0<br/>        <span class=\"kw1\">Dim</span> inside <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span> <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><br/>        <span class=\"kw1\">Dim</span> length <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> shape<span class=\"sy0\">.</span><span class=\"me1\">Length</span><br/>\u00a0<br/>        <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> length <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">If</span> Intersects<span class=\"br0\">(</span>shape<span class=\"br0\">(</span>i<span class=\"br0\">)</span>, shape<span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> length<span class=\"br0\">)</span>, point<span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>                inside <span class=\"sy0\">=</span> <span class=\"kw1\">Not</span> inside<br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">Next</span><br/>\u00a0<br/>        <span class=\"kw1\">Return</span> inside<br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/>    <span class=\"kw1\">Private</span> <span class=\"kw1\">Function</span> Intersects<span class=\"br0\">(</span>a <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, b <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, p <span class=\"kw1\">As</span> <span class=\"kw2\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span><br/>\u00a0<br/>        <span class=\"kw1\">If</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> b<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> Intersects<span class=\"br0\">(</span>b, a, p<span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Or</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> b<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">0.0001</span><br/>        <span class=\"kw1\">If</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> b<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Or</span> p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Or</span> p<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> Max<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>, b<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> <span class=\"kw1\">False</span><br/>        <span class=\"kw1\">If</span> p<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> Min<span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>, b<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> <span class=\"kw1\">True</span><br/>        <span class=\"kw1\">Dim</span> red <span class=\"kw1\">As</span> <span class=\"kw2\">Double</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>p<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> a<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> blue <span class=\"kw1\">As</span> <span class=\"kw2\">Double</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> a<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">Return</span> red <span class=\"sy0\">&gt;=</span> blue<br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Module</span></pre>"}, {"lang": "zkl", "loc": 17, "block": "<pre class=\"text highlighted_source\">const E = 0.0001;<br/>\u00a0<br/>fcn rayHitsSeg([(Px,Py)],[(Ax,Ay)],[(Bx,By)]){ // --&gt; Bool<br/>   if(Py==Ay or Py==By) Py+=E;<br/>   if(Py&lt;Ay or Py&gt;By or Px&gt;Ax.max(Bx)) False<br/>   else if(Px&lt;Ax.min(Bx))              True<br/>   else try{ ( (Py - Ay)/(Px - Ax) )&gt;=( (By - Ay)/(Bx - Ax) ) } //blue&gt;=red<br/>        catch(MathError){ Px==Ax } // divide by zero == \u221e, only blue?<br/>}<br/>\u00a0<br/>fcn pointInPoly(point, polygon){ // --&gt; Bool, polygon is ( (a,b),(c,d).. )<br/>   polygon.filter('wrap([(ab,cd)]){ a,b:=ab; c,d:=cd;<br/>      if(b&lt;=d) rayHitsSeg(point,ab,cd); // left point has smallest y coordinate<br/>      else     rayHitsSeg(point,cd,ab);<br/>   })<br/>   .len().isOdd; // True if crossed an odd number of borders ie inside polygon<br/>}</pre>"}]}