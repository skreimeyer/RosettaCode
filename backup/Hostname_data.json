{"task": "Hostname", "blocks": [{"lang": "Ada", "loc": 7, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> GNAT.<span class=\"me1\">Sockets</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Demo <span class=\"kw1\">is</span><br/><span class=\"kw1\">begin</span><br/>   Put_Line <span class=\"br0\">(</span>GNAT.<span class=\"me1\">Sockets</span>.<span class=\"me1\">Host_Name</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Demo;</pre>"}, {"lang": "ALGOL 68", "loc": 3, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw3\">STRING</span> hostname<span class=\"sy1\">;</span><br/>get<span class=\"br0\">(</span>read <span class=\"kw6\">OF</span> execve child pipe<span class=\"br0\">(</span><span class=\"st0\">\"/bin/hostname\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"hostname\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> hostname<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"hostname: \"</span><span class=\"sy1\">,</span> hostname<span class=\"sy1\">,</span> <span class=\"kw22\">new line</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Aikido", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>println (System.hostname)<br/>\u00a0</pre>"}, {"lang": "AppleScript", "loc": 3, "block": "<pre class=\"applescript highlighted_source\">\u00a0<br/>host <span class=\"kw1\">name</span> <span class=\"kw3\">of</span> <span class=\"br0\">(</span>system info<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 1, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ComputerName\"><span class=\"kw2\">A_ComputerName</span></a></pre>"}, {"lang": "Arc", "loc": 1, "block": "<pre class=\"text highlighted_source\">(system \"hostname -f\")</pre>"}, {"lang": "AWK", "loc": 2, "block": "<pre class=\"awk highlighted_source\">$ awk '<span class=\"kw2\">BEGIN</span><span class=\"br0\">{</span><span class=\"kw5\">print</span> <span class=\"kw3\">ENVIRON</span><span class=\"br0\">[</span><span class=\"st0\">\"HOST\"</span><span class=\"br0\">]</span><span class=\"br0\">}</span>'<br/>E51A08ZD</pre>"}, {"lang": "BaCon", "loc": 1, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Hostname: \"</span>, HOSTNAME$</pre>"}, {"lang": "Batch File", "loc": 1, "block": "<pre class=\"dos highlighted_source\">Hostname</pre>"}, {"lang": "BBC BASIC", "loc": 4, "block": "<pre class=\"text highlighted_source\">      INSTALL @lib$+\"SOCKLIB\"<br/>      PROC_initsockets<br/>      PRINT \"hostname: \" FN_gethostname<br/>      PROC_exitsockets</pre>"}, {"lang": "C/C++", "loc": 10, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;limits.h&gt;</span><br/><span class=\"co2\">#include &lt;unistd.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/> <span class=\"kw4\">char</span> name<span class=\"br0\">[</span>_POSIX_HOST_NAME_MAX <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">return</span> gethostname<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span> name<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">||</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> name<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> EXIT_FAILURE <span class=\"sy0\">:</span> EXIT_SUCCESS<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 1, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw5\">System.<span class=\"me1\">Net</span></span><span class=\"sy0\">.</span><span class=\"me1\">Dns</span><span class=\"sy0\">.</span><span class=\"me1\">GetHostName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Cach\u00e9 ObjectScript", "loc": 1, "block": "<pre>Write ##class(%SYS.System).GetNodeName()</pre>"}, {"lang": "Clojure", "loc": 3, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"sy0\">..</span> java<span class=\"sy0\">.</span>net<span class=\"sy0\">.</span>InetAddress getLocalHost getHostName<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 16, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> hostname<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> hostname <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> nullpos  <span class=\"kw3\">pic</span> <span class=\"nu0\">999</span> <span class=\"kw3\">value</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"gethostname\"</span> <span class=\"kw3\">using</span> hostname <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> <span class=\"kw4\">length</span> <span class=\"kw3\">of</span> hostname<br/>       <span class=\"kw3\">string</span> hostname <span class=\"kw3\">delimited</span> <span class=\"kw3\">by</span> <span class=\"kw3\">low-value</span> <span class=\"kw2\">into</span> hostname<br/>           <span class=\"kw3\">with</span> <span class=\"kw3\">pointer</span> nullpos<br/>       <span class=\"kw2\">display</span> <span class=\"st0\">\"Host: \"</span> hostname<span class=\"br0\">(</span><span class=\"nu0\">1</span>\u00a0: nullpos<span class=\"sy0\"> - </span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>       goback<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> hostname<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "CoffeeScript", "loc": 4, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>os = require <span class=\"st0\">'os'</span><br/>console.<span class=\"me1\">log</span> os.<span class=\"me1\">hostname</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 4, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> get-host-<span class=\"kw1\">name</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    #+<span class=\"br0\">(</span><span class=\"kw1\">or</span> sbcl ccl<span class=\"br0\">)</span> <span class=\"br0\">(</span>machine-instance<span class=\"br0\">)</span><br/>    #+clisp <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>s <span class=\"br0\">(</span>machine-instance<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>subseq s <span class=\"nu0\">0</span> <span class=\"br0\">(</span>position #\\Space s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    #-<span class=\"br0\">(</span><span class=\"kw1\">or</span> sbcl ccl clisp<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">error</span> <span class=\"st0\">\"get-host-name not implemented\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 5, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">socket</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    writeln<span class=\"br0\">(</span>Socket.<span class=\"me1\">hostName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 16, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> ShowHostName<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> Windows<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  lHostName<span class=\"sy1\">:</span> <span class=\"kw1\">array</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">..</span><span class=\"nu0\">255</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"kw4\">char</span><span class=\"sy1\">;</span><br/>  lBufferSize<span class=\"sy1\">:</span> <span class=\"kw4\">DWORD</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  lBufferSize <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">256</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">if</span> GetComputerName<span class=\"br0\">(</span>lHostName<span class=\"sy1\">,</span> lBufferSize<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>lHostName<span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'error getting host name'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "E", "loc": 1, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/makeCommand\"><span class=\"kw7\">makeCommand</span></a><span class=\"br0\">(</span><span class=\"st0\">\"hostname\"</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Emacs Lisp", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>system-<span class=\"kw1\">name</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 1, "block": "<pre class=\"fsharp highlighted_source\">printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>System.<span class=\"me1\">Net</span>.<span class=\"me1\">Dns</span>.<span class=\"me1\">GetHostName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 2, "block": "<pre class=\"text highlighted_source\">USE: io.sockets<br/>host-name</pre>"}, {"lang": "Forth", "loc": 3, "block": "<pre class=\"text highlighted_source\">include unix/socket.fs<br/>\u00a0<br/>hostname type</pre>"}, {"lang": "Erlang", "loc": 1, "block": "<pre class=\"erlang highlighted_source\"><span class=\"re5\">Host</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/net_adm.html\"><span class=\"kw5\">net_adm</span></a>:<span class=\"re3\">localhost</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span></pre>"}, {"lang": "friendly interactive shell", "loc": 1, "block": "<pre class=\"text highlighted_source\">hostname</pre>"}, {"lang": "Fortran", "loc": 5, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> HostTest<br/>  <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=</span><span class=\"nu0\">128</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"kw1\">name</span> <br/>  <span class=\"kw1\">call</span> hostnm<span class=\"br0\">(</span><span class=\"kw1\">name</span><span class=\"br0\">)</span><br/>  print <span class=\"sy0\">*</span>, <span class=\"kw1\">name</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> HostTest</pre>"}, {"lang": "FreeBASIC", "loc": 13, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co1\">' On Windows 10, the command line utility HOSTNAME.EXE prints the 'hostname' to the console.</span><br/><span class=\"co1\">' We can execute this remotely and read from its 'stdin' stream as follows:</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> hostname<br/><span class=\"kw1\">Open</span> <span class=\"kw1\">Pipe</span> <span class=\"st0\">\"hostname\"</span> <span class=\"kw1\">For</span> <span class=\"kw1\">Input</span> <span class=\"kw1\">As</span> <span class=\"co2\">#1</span><br/><span class=\"kw1\">Input</span> <span class=\"co2\">#1, hostname</span><br/><span class=\"kw1\">Close</span> <span class=\"co2\">#1</span><br/><span class=\"kw1\">Print</span> hostname<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Gambas", "loc": 5, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=system+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">System</span></a>.<span class=\"me1\">Host</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 10, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Hostname<span class=\"sy1\">())</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 1, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <a href=\"http://www.google.de/search?as_q=InetAddress&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">InetAddress</span></a>.<span class=\"me1\">localHost</span>.<span class=\"me1\">hostName</span></pre>"}, {"lang": "Harbour", "loc": 1, "block": "<pre class=\"visualfoxpro highlighted_source\"><span class=\"sy0\">?</span> NetName<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 3, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Network<span class=\"sy0\">.</span>BSD<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> hostName <span class=\"sy0\">&lt;-</span> getHostName<br/>          <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> hostName</pre>"}, {"lang": "Icon and Unicon", "loc": 3, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">host</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "IDL", "loc": 1, "block": "<pre class=\"idl highlighted_source\">hostname <span class=\"sy0\">=</span> GETENV<span class=\"br0\">(</span><span class=\"st0\">'computername'</span><span class=\"br0\">)</span></pre>"}, {"lang": "J", "loc": 13, "block": "<pre class=\"j highlighted_source\"><span class=\"co1\">NB. Load the socket libraries</span><br/>\u00a0<br/>  load <span class=\"st_h\">'socket'</span><br/>  coinsert <span class=\"st_h\">'jsocket'</span><br/>\u00a0<br/><span class=\"co1\">NB. fetch and implicitly display the hostname</span><br/>\u00a0<br/>  &gt; {: sdgethostname <span class=\"st_h\">''</span><br/>\u00a0<br/><span class=\"co1\">NB. If fetching the hostname is the only reason for loading the socket libraries,</span><br/><span class=\"co1\">NB. and the hostname is fetched only once, then use a 'one-liner' to accomplish it:</span><br/>\u00a0<br/>  &gt; {: sdgethostname coinsert <span class=\"st_h\">'jsocket'</span> [ load <span class=\"st_h\">'socket'</span></pre>"}, {"lang": "Java", "loc": 9, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.net.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">class</span> DiscoverHostName <span class=\"br0\">{</span><br/> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">try</span> <span class=\"br0\">{</span><br/>   <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainetaddress+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">InetAddress</span></a>.<span class=\"me1\">getLocalHost</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">getHostName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aunknownhostexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">UnknownHostException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">// Doesn't actually happen, but Java requires it be handled.</span><br/>  <span class=\"br0\">}</span><br/> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 3, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> network <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ActiveXObject<span class=\"br0\">(</span><span class=\"st0\">'WScript.Network'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> hostname <span class=\"sy0\">=</span> network.<span class=\"me1\">computerName</span><span class=\"sy0\">;</span><br/>WScript.<span class=\"me1\">echo</span><span class=\"br0\">(</span>hostname<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 1, "block": "<pre>HOST=$(hostname) jq -n --arg hostname $(hostname) '[env.HOST, $hostname]'</pre>"}, {"lang": "Julia", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>println(gethostname())<br/>\u00a0</pre>"}, {"lang": "K", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>_h<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 7, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.4</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">InetAddress</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span>InetAddress.<span class=\"me1\">getLocalHost</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">hostName</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 1, "block": "<pre class=\"text highlighted_source\">[web_request-&gt;httpHost]</pre>"}, {"lang": "LFE", "loc": 3, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>net_adm<span class=\"sy0\">:</span><span class=\"me1\">localhost</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Liberty BASIC", "loc": 8, "block": "<pre class=\"lb highlighted_source\">lpBuffer$<span class=\"sy0\">=</span><span class=\"kw2\">Space$</span><span class=\"br0\">(</span><span class=\"nu0\">128</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Chr$</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">struct</span> SIZE<span class=\"sy0\">,</span>sz <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span><br/>SIZE.sz.<span class=\"kw1\">struct</span><span class=\"sy0\">=</span><span class=\"kw2\">Len</span><span class=\"br0\">(</span>lpBuffer$<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">calldll</span> <span class=\"sy0\">#</span>kernel32<span class=\"sy0\">,</span> <span class=\"st0\">\"GetComputerNameA\"</span><span class=\"sy0\">,</span>lpBuffer$ <span class=\"kw1\">as</span> <span class=\"kw1\">ptr</span><span class=\"sy0\">,</span> SIZE <span class=\"kw1\">as</span> <span class=\"kw1\">struct</span><span class=\"sy0\">,</span> result <span class=\"kw1\">as</span> <span class=\"kw1\">Long</span><br/>CurrentComputerName$<span class=\"sy0\">=</span><span class=\"kw2\">Trim$</span><span class=\"br0\">(</span><span class=\"kw2\">Left$</span><span class=\"br0\">(</span>lpBuffer$<span class=\"sy0\">,</span> SIZE.sz.<span class=\"kw1\">struct</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">print</span> CurrentComputerName$</pre>"}, {"lang": "Limbo", "loc": 32, "block": "<pre class=\"text highlighted_source\">implement Hostname;<br/>\u00a0<br/>include \"sys.m\"; sys: Sys;<br/>include \"draw.m\";<br/>\u00a0<br/>Hostname: module {<br/>\tinit: fn(nil: ref Draw-&gt;Context, nil: list of string);<br/>};<br/>\u00a0<br/>init(nil: ref Draw-&gt;Context, nil: list of string)<br/>{<br/>\tsys = load Sys Sys-&gt;PATH;<br/>\tbuf\u00a0:= array[Sys-&gt;ATOMICIO] of byte;<br/>\u00a0<br/>\tfd\u00a0:= sys-&gt;open(\"/dev/sysname\", Sys-&gt;OREAD);<br/>\tif(fd == nil)<br/>\t\tdie(\"Couldn't open /dev/sysname\");<br/>\u00a0<br/>\tn\u00a0:= sys-&gt;read(fd, buf, len buf - 1);<br/>\tif(n &lt; 1)<br/>\t\tdie(\"Couldn't read /dev/sysname\");<br/>\u00a0<br/>\tbuf[n++] = byte '\\n';<br/>\tsys-&gt;write(sys-&gt;fildes(1), buf, n);<br/>}<br/>\u00a0<br/>die(s: string)<br/>{<br/>\tsys-&gt;fprint(sys-&gt;fildes(2), \"hostname:\u00a0%s:\u00a0%r\", s);<br/>\traise \"fail:errors\";<br/>}<br/>\u00a0</pre>"}, {"lang": "Lingo", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>sx = xtra(\"Shell\").new()<br/>if the platform contains \"win\" then<br/>  hostname = sx.shell_cmd(\"hostname\", [\"eol\":RETURN]).line[1] -- win 7 or later<br/>else<br/>  hostname = sx.shell_cmd(\"hostname\", RETURN).line[1]<br/>end if</pre>"}, {"lang": "LiveCode", "loc": 1, "block": "<pre class=\"text highlighted_source\">answer the hostName</pre>"}, {"lang": "Lua", "loc": 2, "block": "<pre class=\"lua highlighted_source\">socket <span class=\"sy0\">=</span> <span class=\"kw3\">require</span> <span class=\"st0\">\"socket\"</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span> socket<span class=\"sy0\">.</span>dns<span class=\"sy0\">.</span>gethostname<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module Host {<br/>      \\\\ one way<br/>      Print computer$<br/>      \\\\ second way<br/>      Declare objNetwork \"WScript.Network\"<br/>      With objNetwork,  \"ComputerName\" as cName$<br/>      Print cName$, cName$=Computer$<br/>      Declare objNetwork Nothing<br/>}<br/>Host<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 1, "block": "<pre class=\"text highlighted_source\">Sockets:-GetHostName()</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 1, "block": "<pre class=\"text highlighted_source\">$MachineName</pre>"}, {"lang": "MATLAB", "loc": 1, "block": "<pre class=\"matlab highlighted_source\"><span class=\"br0\">[</span>failed,hostname<span class=\"br0\">]</span> = system<span class=\"br0\">(</span><span class=\"co2\">'hostname'</span><span class=\"br0\">)</span></pre>"}, {"lang": "mIRC Scripting Language", "loc": 1, "block": "<pre class=\"mirc highlighted_source\"><a href=\"http://www.mirc.com/echo\"><span class=\"kw3\">echo</span></a> <span class=\"re4\">-ag</span> <span class=\"re0\">$host</span></pre>"}, {"lang": "Modula-3", "loc": 7, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> Hostname <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">IMPORT</span> IO<span class=\"sy0\">,</span> OSConfig;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>OSConfig.<span class=\"me1\">HostName</span><span class=\"br0\">(</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> Hostname.</pre>"}, {"lang": "MUMPS", "loc": 1, "block": "<pre class=\"text highlighted_source\">Write $Piece($System,\":\")</pre>"}, {"lang": "NetRexx", "loc": 5, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref savelog symbols <span class=\"kw2\">binary</span><br/>\u00a0<br/><span class=\"kw1\">say</span> InetAddress.<span class=\"me0\">getLocalHost</span>.<span class=\"me0\">getHostName</span><br/>\u00a0</pre>"}, {"lang": "NewLISP", "loc": 1, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"br0\">(</span><span class=\"sy1\">!</span> <span class=\"st0\">\"hostname\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Nim", "loc": 5, "block": "<pre class=\"text highlighted_source\">import posix<br/>const size = 64<br/>var s = cstring(newString(size))<br/>discard s.getHostname(size)<br/>echo s</pre>"}, {"lang": "Oberon-2", "loc": 9, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> HostName;<br/><span class=\"kw1\">IMPORT</span> <br/>  OS<span class=\"sy0\">:</span>ProcessParameters<span class=\"sy0\">,</span><br/>  Out;<br/><span class=\"kw1\">BEGIN</span><br/>  Out.<span class=\"me1\">Object</span><span class=\"br0\">(</span><span class=\"st0\">\"Host: \"</span> <span class=\"sy0\">+</span> ProcessParameters.<span class=\"me1\">GetEnv</span><span class=\"br0\">(</span><span class=\"st0\">\"HOSTNAME\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Ln</span><br/><span class=\"kw1\">END</span> HostName.<br/>\u00a0</pre>"}, {"lang": "Objective-C", "loc": 3, "block": "<pre class=\"objc highlighted_source\">\u00a0<br/>NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%@\"</span>, <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSProcessInfo_Class/\"><span class=\"kw5\">NSProcessInfo</span></a> processInfo<span class=\"br0\">]</span> hostName<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\u00a0</pre>"}, {"lang": "Objeck", "loc": 11, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">use</span> Net<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> Hello <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      TCPSocket<span class=\"sy0\">-&gt;</span><span class=\"me1\">HostName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 1, "block": "<pre class=\"ocaml highlighted_source\"><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html\"><span class=\"kw2\">Unix</span></a><span class=\"sy0\">.</span>gethostname<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Octave", "loc": 1, "block": "<pre class=\"octave highlighted_source\"><a href=\"http://octave.sourceforge.net/octave/function/uname.html\"><span class=\"kw5\">uname</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">nodename</span></pre>"}, {"lang": "ooRexx", "loc": 1, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"kw1\">say</span> <span class=\"sy0\">.</span>oleObject~new<span class=\"br0\">(</span><span class=\"st0\">'WScript.Network'</span><span class=\"br0\">)</span>~computerName</pre>"}, {"lang": "Oz", "loc": 1, "block": "<pre class=\"oz highlighted_source\"><span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>getHostByName <span class=\"st0\">'localhost'</span><span class=\"br0\">}</span><span class=\"sy0\">.</span>name<span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 2, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw2\">str</span> <span class=\"sy0\">=</span> <span class=\"kw1\">externstr</span><span class=\"br0\">(</span><span class=\"st0\">\"hostname\"</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">str</span> <span class=\"sy0\">=</span> <span class=\"kw1\">externstr</span><span class=\"br0\">(</span><span class=\"st0\">\"uname -n\"</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 8, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> HostName<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  unix<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span><span class=\"st0\">'The name of this computer is: '</span><span class=\"sy1\">,</span> GetHostName<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 3, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Sys<span class=\"sy0\">::</span><span class=\"me2\">Hostname</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$name</span> <span class=\"sy0\">=</span> hostname<span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 1, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$host</span> <span class=\"sy0\">=</span> qx<span class=\"br0\">[</span>hostname<span class=\"br0\">]</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PHP", "loc": 1, "block": "<pre class=\"php highlighted_source\"><span class=\"kw1\">echo</span> <span class=\"re0\">$_SERVER</span><span class=\"br0\">[</span><span class=\"st_h\">'HTTP_HOST'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PicoLisp", "loc": 1, "block": "<pre class=\"text highlighted_source\">(call 'hostname)</pre>"}, {"lang": "Pike", "loc": 5, "block": "<pre class=\"pike highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">;</span><br/>\u00a0<br/>int main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>   write<span class=\"br0\">(</span>gethostname<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PL/SQL", "loc": 4, "block": "<pre class=\"plsql highlighted_source\"><a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=SET\"><span class=\"kw1\">SET</span></a> serveroutput <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=ON\"><span class=\"kw1\">ON</span></a><br/><a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=BEGIN\"><span class=\"kw1\">BEGIN</span></a><br/>  <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=DBMS_OUTPUT\"><span class=\"kw3\">DBMS_OUTPUT</span></a><span class=\"sy0\">.</span>PUT_LINE<span class=\"br0\">(</span><a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=UTL_INADDR\"><span class=\"kw3\">UTL_INADDR</span></a><span class=\"sy0\">.</span>GET_HOST_NAME<span class=\"br0\">)</span><span class=\"sy0\">;</span>  <br/><a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=END\"><span class=\"kw1\">END</span></a><span class=\"sy0\">;</span></pre>"}, {"lang": "Pop11", "loc": 1, "block": "<pre class=\"text highlighted_source\">lvars host = sys_host_name();</pre>"}, {"lang": "PowerBASIC", "loc": 1, "block": "<pre class=\"text highlighted_source\">HOST NAME TO hostname$</pre>"}, {"lang": "PowerShell", "loc": 1, "block": "<pre class=\"powershell highlighted_source\"><span class=\"re0\">$Env</span>:COMPUTERNAME</pre>"}, {"lang": "PureBasic", "loc": 2, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw2\">InitNetwork</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>answer$<span class=\"sy0\">=</span><span class=\"kw2\">Hostname</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 2, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">socket</span><br/>host <span class=\"sy0\">=</span> <span class=\"kw3\">socket</span>.<span class=\"me1\">gethostname</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 1, "block": "<pre class=\"text highlighted_source\">Sys.info()[[\"nodename\"]]</pre>"}, {"lang": "Racket", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket/base<br/>(require mzlib/os)<br/>(gethostname)<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 1, "block": "<pre class=\"rebol highlighted_source\"><span class=\"kw3\">print</span> system<span class=\"sy0\">/</span>network<span class=\"sy0\">/</span>host</pre>"}, {"lang": "REXX", "loc": 2, "block": "<pre class=\"rexx highlighted_source\"><span class=\"kw1\">say</span> <span class=\"kw2\">value</span><span class=\"br0\">(</span><span class=\"st0\">'COMPUTERNAME'</span>,,<span class=\"st0\">\"ENVIRONMENT\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw2\">value</span><span class=\"br0\">(</span><span class=\"st0\">'OS'</span>,,<span class=\"st0\">\"ENVIRONMENT\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Ruby", "loc": 2, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'socket'</span><br/>host = Socket.<span class=\"me1\">gethostname</span></pre>"}, {"lang": "Run BASIC", "loc": 3, "block": "<pre class=\"text highlighted_source\">print Platform$    ' OS where Run BASIC is being hosted<br/>print UserInfo$    ' Information about the user's web browser<br/>print UserAddress$ ' IP address of the user</pre>"}, {"lang": "Scala", "loc": 1, "block": "<pre class=\"scala highlighted_source\">println<span class=\"br0\">(</span>java.<span class=\"me1\">net</span>.<span class=\"me1\">InetAddress</span>.<span class=\"me1\">getLocalHost</span>.<span class=\"me1\">getHostName</span><span class=\"br0\">)</span></pre>"}, {"lang": "Scheme", "loc": 2, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span>use posix<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>get<span class=\"sy0\">-</span>host<span class=\"sy0\">-</span>name<span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 7, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"socket.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(getHostname);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 2, "block": "<pre class=\"ruby highlighted_source\">var sys = frequire<span class=\"br0\">(</span><span class=\"st0\">'Sys::Hostname'</span><span class=\"br0\">)</span>;<br/>var host = sys.<span class=\"me1\">hostname</span>;</pre>"}, {"lang": "Slate", "loc": 1, "block": "<pre class=\"text highlighted_source\">Platform current nodeName</pre>"}, {"lang": "SNOBOL4", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>      output = host(4,\"HOSTNAME\")<br/>end</pre>"}, {"lang": "Standard ML", "loc": 1, "block": "<pre class=\"text highlighted_source\">NetHostDB.getHostName ()</pre>"}, {"lang": "Smalltalk", "loc": 1, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">OperatingSystem</span> getHostName</pre>"}, {"lang": "SQL", "loc": 3, "block": "<pre class=\"sql highlighted_source\">\u00a0<br/><span class=\"kw1\">SELECT</span> host_name <span class=\"kw1\">FROM</span> v$instance;<br/>\u00a0</pre>"}, {"lang": "SQL PL", "loc": 3, "block": "<pre class=\"sql highlighted_source\">\u00a0<br/><span class=\"kw1\">SELECT</span> HOST_NAME <span class=\"kw1\">FROM</span> SYSIBMADM<span class=\"sy0\">.</span>ENV_SYS_INFO<br/>\u00a0</pre>"}, {"lang": "Swift", "loc": 1, "block": "<pre class=\"text highlighted_source\">print(ProcessInfo.processInfo.hostName)</pre>"}, {"lang": "Tcl", "loc": 1, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> hname <span class=\"br0\">[</span><span class=\"kw2\">info</span> hostname<span class=\"br0\">]</span></pre>"}, {"lang": "Toka", "loc": 4, "block": "<pre class=\"text highlighted_source\">2 import gethostname<br/>1024 chars is-array foo<br/>foo 1024 gethostname<br/>foo type</pre>"}, {"lang": "TUSCRIPT", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>host=HOST ()<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 1, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw2\">hostname</span></pre>"}, {"lang": "Ursa", "loc": 1, "block": "<pre class=\"text highlighted_source\">out (ursa.net.localhost.name) endl console</pre>"}, {"lang": "Ursala", "loc": 3, "block": "<pre class=\"text highlighted_source\">#import cli<br/>\u00a0<br/>hostname = ~&amp;hmh+ (ask bash)/&lt;&gt;+ &lt;'hostname'&gt;!</pre>"}, {"lang": "VBScript", "loc": 4, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw4\">Set</span> objNetwork = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"WScript.Network\"</span>)<br/>WScript.Echo objNetwork.ComputerName<br/>\u00a0</pre>"}, {"lang": "Vim Script", "loc": 1, "block": "<pre class=\"vim highlighted_source\"><span class=\"kw1\">echo</span> <span class=\"kw3\">hostname</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "zkl", "loc": 1, "block": "<pre class=\"text highlighted_source\">System.hostname</pre>"}]}