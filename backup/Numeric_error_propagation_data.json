{"task": "Numeric_error_propagation", "blocks": [{"lang": "Ada", "loc": 48, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">generic</span><br/>   <span class=\"kw3\">type</span> Real <span class=\"kw1\">is</span> <span class=\"kw3\">digits</span> &lt;&gt;;<br/>   <span class=\"kw3\">with</span> <span class=\"kw3\">function</span> Sqrt<span class=\"br0\">(</span>X: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Real;<br/>   <span class=\"kw3\">with</span> <span class=\"kw3\">function</span> <span class=\"st0\">\"**\"</span><span class=\"br0\">(</span>X: Real; Y: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Real;<br/><span class=\"kw3\">package</span> Approximation <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">type</span> Number <span class=\"kw1\">is</span> <span class=\"kw3\">private</span>;<br/>\u00a0<br/>   <span class=\"co1\">-- create an approximation</span><br/>   <span class=\"kw3\">function</span> Approx<span class=\"br0\">(</span>Value: Real; Sigma: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>\u00a0<br/>   <span class=\"co1\">-- unary operations and conversion Real to Number</span><br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"+\"</span><span class=\"br0\">(</span>X: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">(</span>X: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"+\"</span><span class=\"br0\">(</span>X: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">(</span>X: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>\u00a0<br/>   <span class=\"co1\">-- addition / subtraction</span><br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"+\"</span><span class=\"br0\">(</span>X: Number; Y: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">(</span>X: Number; Y: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>\u00a0<br/>   <span class=\"co1\">-- multiplication / division</span><br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"*\"</span><span class=\"br0\">(</span>X: Number; Y: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"/\"</span><span class=\"br0\">(</span>X: Number; Y: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>\u00a0<br/>   <span class=\"co1\">-- exponentiation</span><br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"**\"</span><span class=\"br0\">(</span>X: Number; Y: Positive<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"**\"</span><span class=\"br0\">(</span>X: Number; Y: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>\u00a0<br/>   <span class=\"co1\">-- Output to Standard IO (wrapper for Ada.Text_IO and Ada.Text_IO.Float_IO)</span><br/>   <span class=\"kw3\">procedure</span> Put_Line<span class=\"br0\">(</span>Message: String;<br/>                      Item: Number;<br/>                      Value_Fore: Natural\u00a0:= <span class=\"nu0\">7</span>;<br/>                      Sigma_Fore: Natural\u00a0:= <span class=\"nu0\">4</span>;<br/>                      Aft:  Natural\u00a0:= <span class=\"nu0\">2</span>;<br/>                      Exp:  Natural\u00a0:= <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">procedure</span> Put<span class=\"br0\">(</span>Item: Number;<br/>                 Value_Fore: Natural\u00a0:= <span class=\"nu0\">7</span>;<br/>                 Sigma_Fore: Natural\u00a0:= <span class=\"nu0\">3</span>;<br/>                 Aft:  Natural\u00a0:= <span class=\"nu0\">2</span>;<br/>                 Exp:  Natural\u00a0:= <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw3\">private</span><br/>   <span class=\"kw3\">type</span> Number <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      Value: Real;<br/>      Sigma: Real;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/><span class=\"kw1\">end</span> Approximation;</pre>"}, {"lang": "ALGOL 68", "loc": 73, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># MODE representing a uncertain number #</span><br/><span class=\"kw4\">MODE</span> UNCERTAIN <span class=\"sy1\">=</span> <span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span> <span class=\"kw3\">REAL</span> v<span class=\"sy1\">,</span> uncertainty <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># add a costant and an uncertain value #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">INT</span>  c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> UNCERTAIN<span class=\"br0\">(</span> v <span class=\"kw6\">OF</span> u <span class=\"sy1\">+</span> c<span class=\"sy1\">,</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span>  c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">+</span> u<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">REAL</span> c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> UNCERTAIN<span class=\"br0\">(</span> v <span class=\"kw6\">OF</span> u <span class=\"sy1\">+</span> c<span class=\"sy1\">,</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">+</span> u<span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># add two uncertain values #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN a<span class=\"sy1\">,</span> b <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> UNCERTAIN<span class=\"br0\">(</span> v <span class=\"kw6\">OF</span> a <span class=\"sy1\">+</span> v <span class=\"kw6\">OF</span> b<br/>                                             <span class=\"sy1\">,</span> <span class=\"kw24\">sqrt</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> uncertainty <span class=\"kw6\">OF</span> a <span class=\"sy1\">*</span> uncertainty <span class=\"kw6\">OF</span> a <span class=\"br0\">)</span><br/>                                                   <span class=\"sy1\">+</span> <span class=\"br0\">(</span> uncertainty <span class=\"kw6\">OF</span> b <span class=\"sy1\">*</span> uncertainty <span class=\"kw6\">OF</span> b <span class=\"br0\">)</span><br/>                                                   <span class=\"br0\">)</span><br/>                                             <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># negate an uncertain value #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN a <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> <span class=\"br0\">(</span> <span class=\"sy1\">-</span> v <span class=\"kw6\">OF</span> a<span class=\"sy1\">,</span> uncertainty <span class=\"kw6\">OF</span> a <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># subtract an uncertain value from a constant #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">INT</span>  c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">+</span> <span class=\"sy1\">-</span> u<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">REAL</span> c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">+</span> <span class=\"sy1\">-</span> u<span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># subtract a constant from an uncertain value #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span>  c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> u <span class=\"sy1\">+</span> <span class=\"sy1\">-</span> c<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> u <span class=\"sy1\">+</span> <span class=\"sy1\">-</span> c<span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># subtract two uncertain values #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN a<span class=\"sy1\">,</span> b <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> a <span class=\"sy1\">+</span> <span class=\"sy1\">-</span> b<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># multiply a constant by an uncertain value #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">INT</span>  c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> UNCERTAIN<span class=\"br0\">(</span> v <span class=\"kw6\">OF</span> u <span class=\"sy1\">+</span> c<span class=\"sy1\">,</span> <span class=\"kw8\">ABS</span><span class=\"br0\">(</span> c <span class=\"sy1\">*</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span>  c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">*</span> u<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">REAL</span> c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> UNCERTAIN<span class=\"br0\">(</span> v <span class=\"kw6\">OF</span> u <span class=\"sy1\">+</span> c<span class=\"sy1\">,</span> <span class=\"kw8\">ABS</span><span class=\"br0\">(</span> c <span class=\"sy1\">*</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">*</span> u<span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># multiply two uncertain values #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN a<span class=\"sy1\">,</span> b <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span><br/>   <span class=\"kw2\">BEGIN</span><br/>       <span class=\"kw3\">REAL</span> av <span class=\"sy1\">=</span> v <span class=\"kw6\">OF</span> a<span class=\"sy1\">;</span><br/>       <span class=\"kw3\">REAL</span> bv <span class=\"sy1\">=</span> v <span class=\"kw6\">OF</span> b<span class=\"sy1\">;</span><br/>       <span class=\"kw3\">REAL</span> f  <span class=\"sy1\">=</span> av <span class=\"sy1\">*</span> bv<span class=\"sy1\">;</span><br/>       UNCERTAIN<span class=\"br0\">(</span> f<span class=\"sy1\">,</span> f <span class=\"sy1\">*</span> <span class=\"kw24\">sqrt</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> uncertainty <span class=\"kw6\">OF</span> a <span class=\"sy1\">/</span> av <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"br0\">(</span> uncertainty <span class=\"kw6\">OF</span> b <span class=\"sy1\">/</span> bv <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>   <span class=\"kw2\">END</span> <span class=\"coMULTI\"># * #</span> <span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># construct the reciprocol of an uncertain value #</span><br/><span class=\"kw4\">OP</span> ONEOVER <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> <span class=\"br0\">(</span> 1 <span class=\"sy1\">/</span> v <span class=\"kw6\">OF</span> u<span class=\"sy1\">,</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># divide a constant by an uncertain value #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">INT</span>  c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">*</span> ONEOVER u<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">REAL</span> c<span class=\"sy1\">,</span> UNCERTAIN u <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> c <span class=\"sy1\">*</span> ONEOVER u<span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># divide an uncertain value by a constant #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span>  c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> u <span class=\"sy1\">*</span> <span class=\"br0\">(</span> 1 <span class=\"sy1\">/</span> c <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> u <span class=\"sy1\">*</span> <span class=\"br0\">(</span> 1 <span class=\"sy1\">/</span> c <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># divide two uncertain values #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN a<span class=\"sy1\">,</span> b <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span> a <span class=\"sy1\">*</span> ONEOVER b<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># exponentiation #</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">^</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span> c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span><br/>   <span class=\"kw2\">BEGIN</span><br/>       <span class=\"kw3\">REAL</span> f <span class=\"sy1\">=</span> v <span class=\"kw6\">OF</span> u <span class=\"sy1\">^</span> c<span class=\"sy1\">;</span><br/>       UNCERTAIN<span class=\"br0\">(</span> f<span class=\"sy1\">,</span> <span class=\"kw8\">ABS</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> f <span class=\"sy1\">*</span> c <span class=\"sy1\">*</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span> <span class=\"sy1\">/</span> v <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>   <span class=\"kw2\">END</span> <span class=\"coMULTI\"># ^ #</span> <span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">^</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> UNCERTAIN u<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> c <span class=\"br0\">)</span>UNCERTAIN<span class=\"sy1\">:</span><br/>   <span class=\"kw2\">BEGIN</span><br/>       <span class=\"kw3\">REAL</span> f <span class=\"sy1\">=</span> v <span class=\"kw6\">OF</span> u <span class=\"sy1\">^</span> c<span class=\"sy1\">;</span><br/>       UNCERTAIN<span class=\"br0\">(</span> f<span class=\"sy1\">,</span> <span class=\"kw8\">ABS</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> f <span class=\"sy1\">*</span> c <span class=\"sy1\">*</span> uncertainty <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span> <span class=\"sy1\">/</span> v <span class=\"kw6\">OF</span> u <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>   <span class=\"kw2\">END</span> <span class=\"coMULTI\"># ^ #</span> <span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># test the above operatrs by using them to find the pythagorean distance between the two sample points #</span><br/>UNCERTAIN x1 <span class=\"sy1\">=</span> UNCERTAIN<span class=\"br0\">(</span> 100<span class=\"sy1\">,</span> <span class=\"re1\">1.1</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>UNCERTAIN y1 <span class=\"sy1\">=</span> UNCERTAIN<span class=\"br0\">(</span>  50<span class=\"sy1\">,</span> <span class=\"re1\">1.2</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>UNCERTAIN x2 <span class=\"sy1\">=</span> UNCERTAIN<span class=\"br0\">(</span> 200<span class=\"sy1\">,</span> <span class=\"re1\">2.2</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>UNCERTAIN y2 <span class=\"sy1\">=</span> UNCERTAIN<span class=\"br0\">(</span> 100<span class=\"sy1\">,</span> <span class=\"re1\">2.3</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>UNCERTAIN d  <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> x1 <span class=\"sy1\">-</span> x2 <span class=\"br0\">)</span> <span class=\"sy1\">^</span> 2 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"br0\">(</span> y1 <span class=\"sy1\">-</span> y2 <span class=\"br0\">)</span> <span class=\"sy1\">^</span> 2 <span class=\"br0\">)</span> <span class=\"sy1\">^</span> <span class=\"re1\">0.5</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"distance: \"</span><span class=\"sy1\">,</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span> v <span class=\"kw6\">OF</span> d<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 2 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">\" +/- \"</span><span class=\"sy1\">,</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span> uncertainty <span class=\"kw6\">OF</span> d<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 2 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "C", "loc": 77, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span><span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> value<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">double</span> delta<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span>imprecise<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">#define SQR(x) ((x) * (x))</span><br/>imprecise imprecise_add<span class=\"br0\">(</span>imprecise a<span class=\"sy0\">,</span> imprecise b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    imprecise ret<span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> a.<span class=\"me1\">value</span> <span class=\"sy0\">+</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">delta</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>SQR<span class=\"br0\">(</span>a.<span class=\"me1\">delta</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> SQR<span class=\"br0\">(</span>b.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> ret<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>imprecise imprecise_mul<span class=\"br0\">(</span>imprecise a<span class=\"sy0\">,</span> imprecise b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    imprecise ret<span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> a.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">delta</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>SQR<span class=\"br0\">(</span>a.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">delta</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> SQR<span class=\"br0\">(</span>b.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> a.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> ret<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>imprecise imprecise_div<span class=\"br0\">(</span>imprecise a<span class=\"sy0\">,</span> imprecise b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    imprecise ret<span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> a.<span class=\"me1\">value</span> <span class=\"sy0\">/</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">delta</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>SQR<span class=\"br0\">(</span>a.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">delta</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> SQR<span class=\"br0\">(</span>b.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> a.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> SQR<span class=\"br0\">(</span>b.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> ret<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>imprecise imprecise_pow<span class=\"br0\">(</span>imprecise a<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> c<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    imprecise ret<span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span>a.<span class=\"me1\">value</span><span class=\"sy0\">,</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ret.<span class=\"me1\">delta</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fabs.html\"><span class=\"kw3\">fabs</span></a><span class=\"br0\">(</span>ret.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> c <span class=\"sy0\">*</span> a.<span class=\"me1\">delta</span> <span class=\"sy0\">/</span> a.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> ret<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">char</span><span class=\"sy0\">*</span> printImprecise<span class=\"br0\">(</span>imprecise val<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">char</span> principal<span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>error<span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"br0\">]</span><span class=\"sy0\">,*</span>string<span class=\"sy0\">,</span>sign<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\tsign<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">241</span><span class=\"sy0\">;</span>    <span class=\"coMULTI\">/* ASCII code for \u00b1, technical notation for denoting errors */</span><br/>\tsign<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu8\">00</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a><span class=\"br0\">(</span>principal<span class=\"sy0\">,</span><span class=\"st0\">\"%f\"</span><span class=\"sy0\">,</span>val.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a><span class=\"br0\">(</span>error<span class=\"sy0\">,</span><span class=\"st0\">\"%f\"</span><span class=\"sy0\">,</span>val.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tstring <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>principal<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">+</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>error<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcpy.html\"><span class=\"kw3\">strcpy</span></a><span class=\"br0\">(</span>string<span class=\"sy0\">,</span>principal<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcat.html\"><span class=\"kw3\">strcat</span></a><span class=\"br0\">(</span>string<span class=\"sy0\">,</span>sign<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcat.html\"><span class=\"kw3\">strcat</span></a><span class=\"br0\">(</span>string<span class=\"sy0\">,</span>error<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> string<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    imprecise x1 <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    imprecise y1 <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.2</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    imprecise x2 <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu16\">2.2</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    imprecise y2 <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu16\">2.3</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    imprecise d<span class=\"sy0\">;</span><br/>\u00a0<br/>    d <span class=\"sy0\">=</span> imprecise_pow<span class=\"br0\">(</span>imprecise_add<span class=\"br0\">(</span>imprecise_pow<span class=\"br0\">(</span>imprecise_add<span class=\"br0\">(</span>x1<span class=\"sy0\">,</span> x2<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>imprecise_pow<span class=\"br0\">(</span>imprecise_add<span class=\"br0\">(</span>y1<span class=\"sy0\">,</span> y2<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Distance, d, between the following points\u00a0:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>( x1, y1) = (\u00a0%s,\u00a0%s)\"</span><span class=\"sy0\">,</span>printImprecise<span class=\"br0\">(</span>x1<span class=\"br0\">)</span><span class=\"sy0\">,</span>printImprecise<span class=\"br0\">(</span>y1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>( x2, y2) = (\u00a0%s,\u00a0%s)\"</span><span class=\"sy0\">,</span>printImprecise<span class=\"br0\">(</span>x2<span class=\"br0\">)</span><span class=\"sy0\">,</span>printImprecise<span class=\"br0\">(</span>y2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>is d =\u00a0%s\"</span><span class=\"sy0\">,</span> printImprecise<span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C++", "loc": 44, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#pragma once</span><br/>\u00a0<br/><span class=\"co2\">#include &lt;cmath&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;sstream&gt;</span><br/><span class=\"co2\">#include &lt;iomanip&gt;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Approx <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    Approx<span class=\"br0\">(</span><span class=\"kw4\">double</span> _v, <span class=\"kw4\">double</span> _s <span class=\"sy1\">=</span> <span class=\"nu16\">0.0</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> v<span class=\"br0\">(</span>_v<span class=\"br0\">)</span>, s<span class=\"br0\">(</span>_s<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/>    operator std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span><br/>        std<span class=\"sy4\">::</span><span class=\"me2\">ostringstream</span> os<span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        os <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setprecision</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> v <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \u00b1\"</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setprecision</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> s <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">ends</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> os.<span class=\"me1\">str</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Approx operator <span class=\"sy2\">+</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Approx<span class=\"sy3\">&amp;</span> a<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v <span class=\"sy2\">+</span> a.<span class=\"me1\">v</span>, <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>s <span class=\"sy2\">*</span> s <span class=\"sy2\">+</span> a.<span class=\"me1\">s</span> <span class=\"sy2\">*</span> a.<span class=\"me1\">s</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    Approx operator <span class=\"sy2\">+</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v <span class=\"sy2\">+</span> d, s<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    Approx operator <span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Approx<span class=\"sy3\">&amp;</span> a<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v <span class=\"sy2\">-</span> a.<span class=\"me1\">v</span>, <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>s <span class=\"sy2\">*</span> s <span class=\"sy2\">+</span> a.<span class=\"me1\">s</span> <span class=\"sy2\">*</span> a.<span class=\"me1\">s</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    Approx operator <span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v <span class=\"sy2\">-</span> d, s<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    Approx operator <span class=\"sy2\">*</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Approx<span class=\"sy3\">&amp;</span> a<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> t <span class=\"sy1\">=</span> v <span class=\"sy2\">*</span> a.<span class=\"me1\">v</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v, <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>t <span class=\"sy2\">*</span> t <span class=\"sy2\">*</span> s <span class=\"sy2\">*</span> s <span class=\"sy2\">/</span> <span class=\"br0\">(</span>v <span class=\"sy2\">*</span> v<span class=\"br0\">)</span> <span class=\"sy2\">+</span> a.<span class=\"me1\">s</span> <span class=\"sy2\">*</span> a.<span class=\"me1\">s</span> <span class=\"sy2\">/</span> <span class=\"br0\">(</span>a.<span class=\"me1\">v</span> <span class=\"sy2\">*</span> a.<span class=\"me1\">v</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Approx operator <span class=\"sy2\">*</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v <span class=\"sy2\">*</span> d, <span class=\"kw3\">fabs</span><span class=\"br0\">(</span>d <span class=\"sy2\">*</span> s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    Approx operator <span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Approx<span class=\"sy3\">&amp;</span> a<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> t <span class=\"sy1\">=</span> v <span class=\"sy2\">/</span> a.<span class=\"me1\">v</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>t, <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>t <span class=\"sy2\">*</span> t <span class=\"sy2\">*</span> s <span class=\"sy2\">*</span> s <span class=\"sy2\">/</span> <span class=\"br0\">(</span>v <span class=\"sy2\">*</span> v<span class=\"br0\">)</span> <span class=\"sy2\">+</span> a.<span class=\"me1\">s</span> <span class=\"sy2\">*</span> a.<span class=\"me1\">s</span> <span class=\"sy2\">/</span> <span class=\"br0\">(</span>a.<span class=\"me1\">v</span> <span class=\"sy2\">*</span> a.<span class=\"me1\">v</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Approx operator <span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>v <span class=\"sy2\">/</span> d, <span class=\"kw3\">fabs</span><span class=\"br0\">(</span>d <span class=\"sy2\">*</span> s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    Approx <span class=\"kw3\">pow</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> t <span class=\"sy1\">=</span> <span class=\"sy4\">::</span><span class=\"kw3\">pow</span><span class=\"br0\">(</span>v, d<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> Approx<span class=\"br0\">(</span>t, <span class=\"kw3\">fabs</span><span class=\"br0\">(</span>t <span class=\"sy2\">*</span> d <span class=\"sy2\">*</span> s <span class=\"sy2\">/</span> v<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">double</span> v, s<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span></pre>"}, {"lang": "Common Lisp", "loc": 58, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>defstruct uncertain-number<br/>  <span class=\"br0\">(</span><span class=\"kw1\">value</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span><span class=\"me1\">type</span> number<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>uncertainty <span class=\"nu0\">0</span> <span class=\"sy0\">:</span><span class=\"me1\">type</span> number<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod print-object <span class=\"br0\">(</span><span class=\"br0\">(</span>n uncertain-number<span class=\"br0\">)</span> stream<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>format stream <span class=\"st0\">\"~,2F \u00b1 ~,2F\"</span> <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n<span class=\"br0\">)</span> <span class=\"br0\">(</span>uncertain-number-uncertainty n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> ~+ <span class=\"br0\">(</span>n1 n2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>value1 <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>value2 <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty1 <span class=\"br0\">(</span>uncertain-number-uncertainty n1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty2 <span class=\"br0\">(</span>uncertain-number-uncertainty n2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">value</span> <span class=\"br0\">(</span>+ value1 value2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* uncertainty1 uncertainty1<span class=\"br0\">)</span><br/>                               <span class=\"br0\">(</span>* uncertainty2 uncertainty2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"kw1\">value</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> uncertainty<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> negate <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"br0\">(</span>- <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                         <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> <span class=\"br0\">(</span>uncertain-number-uncertainty n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> ~- <span class=\"br0\">(</span>n1 n2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>~+ n1 <span class=\"br0\">(</span>negate n2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> ~* <span class=\"br0\">(</span>n1 n2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>value1 <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>value2 <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty-ratio-<span class=\"nu0\">1</span> <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>uncertain-number-uncertainty n1<span class=\"br0\">)</span> value1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty-ratio-<span class=\"nu0\">2</span> <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>uncertain-number-uncertainty n2<span class=\"br0\">)</span> value2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">value</span> <span class=\"br0\">(</span>* value1 value2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>* <span class=\"kw1\">value</span><br/>                               <span class=\"kw1\">value</span><br/>                               <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* uncertainty-ratio-<span class=\"nu0\">1</span> uncertainty-ratio-<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                                  <span class=\"br0\">(</span>* uncertainty-ratio-<span class=\"nu0\">2</span> uncertainty-ratio-<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"kw1\">value</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> uncertainty<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> inverse <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                         <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> <span class=\"br0\">(</span>uncertain-number-uncertainty n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> ~/ <span class=\"br0\">(</span>n1 n2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>~* n1 <span class=\"br0\">(</span>inverse n2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> ~<span class=\"kw1\">expt</span> <span class=\"br0\">(</span>base <span class=\"kw1\">exp</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>base-<span class=\"kw1\">value</span> <span class=\"br0\">(</span>uncertain-number-<span class=\"kw1\">value</span> base<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty-ratio <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>uncertain-number-uncertainty base<span class=\"br0\">)</span> base-<span class=\"kw1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">value</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> base-<span class=\"kw1\">value</span> <span class=\"kw1\">exp</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>uncertainty <span class=\"br0\">(</span><span class=\"kw1\">abs</span> <span class=\"br0\">(</span>* <span class=\"kw1\">value</span> <span class=\"kw1\">exp</span> uncertainty-ratio<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"kw1\">value</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> uncertainty<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> solve <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>x1 <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"nu0\">100</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>y1 <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span>  <span class=\"nu0\">50</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>x2 <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"nu0\">200</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>y2 <span class=\"br0\">(</span>make-uncertain-number <span class=\"sy0\">:</span><span class=\"kw1\">value</span> <span class=\"nu0\">100</span> <span class=\"sy0\">:</span><span class=\"me1\">uncertainty</span> <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>d  <span class=\"br0\">(</span>~<span class=\"kw1\">expt</span> <span class=\"br0\">(</span>~+ <span class=\"br0\">(</span>~<span class=\"kw1\">expt</span> <span class=\"br0\">(</span>~- x1 x2<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>~<span class=\"kw1\">expt</span> <span class=\"br0\">(</span>~- y1 y2<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"nu0\">1</span>/<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>format t <span class=\"st0\">\"d = ~A~%\"</span> d<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 101, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">typecons</span><span class=\"sy0\">,</span> std.<span class=\"me1\">traits</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">struct</span> Imprecise <span class=\"br0\">{</span><br/>    <span class=\"kw4\">private</span> <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> value<span class=\"sy0\">,</span> delta<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">this</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">double</span> v<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">delta</span> <span class=\"sy0\">=</span> abs<span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">enum</span> IsImprecise<span class=\"br0\">(</span>T<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw2\">is</span><span class=\"br0\">(</span>Unqual<span class=\"sy0\">!</span>T <span class=\"sy0\">==</span> Unqual<span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw2\">this</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    I reciprocal<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"nu16\">1.0</span> <span class=\"sy0\">/</span> value<span class=\"sy0\">,</span> delta <span class=\"sy0\">/</span> <span class=\"br0\">(</span>value <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">string</span> toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> format<span class=\"br0\">(</span><span class=\"st0\">\"I(value=%g, delta=%g)\"</span><span class=\"sy0\">,</span> value<span class=\"sy0\">,</span> delta<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opUnary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"kw2\">this</span>.<span class=\"me1\">value</span><span class=\"sy0\">,</span> <span class=\"kw2\">this</span>.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"+\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T <span class=\"sy0\">||</span> IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">+</span> other.<span class=\"me1\">value</span><span class=\"sy0\">,</span><br/>                     <span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">delta</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> other.<span class=\"me1\">delta</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu16\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">+</span> other<span class=\"sy0\">,</span> <span class=\"kw2\">this</span>.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinaryRight<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"+\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">+</span> other<span class=\"sy0\">,</span> <span class=\"kw2\">this</span>.<span class=\"me1\">delta</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"-\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T <span class=\"sy0\">||</span> IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>other<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinaryRight<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"-\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">-</span> other<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"*\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T <span class=\"sy0\">||</span> IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> <span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> f <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>delta <span class=\"sy0\">/</span> value<span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span><br/>                     <span class=\"br0\">(</span>other.<span class=\"me1\">delta</span> <span class=\"sy0\">/</span> other.<span class=\"me1\">value</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu16\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> other<span class=\"sy0\">,</span> <span class=\"kw2\">this</span>.<span class=\"me1\">delta</span> <span class=\"sy0\">*</span> other<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinaryRight<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"*\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">*</span> other<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"/\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T <span class=\"sy0\">||</span> IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>IsImprecise<span class=\"sy0\">!</span>T<span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">reciprocal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">/</span> other<span class=\"sy0\">,</span> <span class=\"kw2\">this</span>.<span class=\"me1\">delta</span> <span class=\"sy0\">/</span> other<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinaryRight<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"/\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">/</span> other<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    I opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">:</span><span class=\"st0\">\"^^\"</span><span class=\"sy0\">,</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T other<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> <span class=\"kw2\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">^^</span> other<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> f <span class=\"sy0\">*</span> other <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw2\">this</span>.<span class=\"me1\">delta</span> <span class=\"sy0\">/</span> <span class=\"kw2\">this</span>.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">alias</span> I <span class=\"sy0\">=</span> Imprecise<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">auto</span> distance<span class=\"br0\">(</span>T1<span class=\"sy0\">,</span> T2<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T1 p1<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> T2 p2<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>p1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> p2<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>p1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> p2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu16\">0.5</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> x1 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> x2 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu16\">2.2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> y1 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> y2 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu16\">2.3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> p1 <span class=\"sy0\">=</span> tuple<span class=\"br0\">(</span>x1<span class=\"sy0\">,</span> y1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> p2 <span class=\"sy0\">=</span> tuple<span class=\"br0\">(</span>x2<span class=\"sy0\">,</span> y2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"Point p1: (%s,\u00a0%s)\"</span><span class=\"sy0\">,</span> p1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> p1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"Point p2: (%s,\u00a0%s)\"</span><span class=\"sy0\">,</span> p2<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> p2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Distance(p1, p2): \"</span><span class=\"sy0\">,</span> distance<span class=\"br0\">(</span>p1<span class=\"sy0\">,</span> p2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "F#", "loc": 39, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> sqr <span class=\"br0\">(</span>x\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x<br/><span class=\"kw1\">let</span> <span class=\"kw3\">abs</span> <span class=\"br0\">(</span>x\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span>  <span class=\"sy0\">=</span> System.<span class=\"me1\">Math</span>.<span class=\"me1\">Abs</span> x<br/><span class=\"kw1\">let</span> pow <span class=\"sy0\">=</span> System.<span class=\"me1\">Math</span>.<span class=\"me1\">Pow</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Approx <span class=\"br0\">(</span>value\u00a0: <span class=\"kw4\">float</span>, sigma\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">sigma</span> <span class=\"sy0\">=</span> sigma<br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">~-</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span><span class=\"sy0\">-</span> x.<span class=\"me1\">value</span>, x.<span class=\"me1\">sigma</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x: Approx, y\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span>x.<span class=\"me1\">value</span> <span class=\"sy0\">+</span> y, x.<span class=\"me1\">sigma</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>y\u00a0: <span class=\"kw4\">float</span>, x\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">%+</span> y<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx, y\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        Approx <span class=\"br0\">(</span>x.<span class=\"me1\">value</span> <span class=\"sy0\">+</span> y.<span class=\"me1\">value</span>, <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span><span class=\"br0\">(</span>sqr x.<span class=\"me1\">sigma</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>sqr y.<span class=\"me1\">sigma</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%-</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x: Approx, y\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span>x.<span class=\"me1\">value</span> <span class=\"sy0\">-</span> y, x.<span class=\"me1\">sigma</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%-</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>y\u00a0: <span class=\"kw4\">float</span>, x\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>x<span class=\"br0\">)</span> <span class=\"sy0\">%+</span> y<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%-</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx, y\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">%+</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>y<span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%*</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx, y\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span>y <span class=\"sy0\">*</span> x.<span class=\"me1\">value</span>, <span class=\"kw3\">abs</span><span class=\"br0\">(</span>y <span class=\"sy0\">*</span> x.<span class=\"me1\">sigma</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%*</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>y\u00a0: <span class=\"kw4\">float</span>, x\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">%*</span> y<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%*</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx, y\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">let</span> v <span class=\"sy0\">=</span> x.<span class=\"me1\">value</span> <span class=\"sy0\">*</span> y.<span class=\"me1\">value</span><br/>        Approx <span class=\"br0\">(</span>v, v <span class=\"sy0\">*</span> <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>sqr<span class=\"br0\">(</span>x.<span class=\"me1\">sigma</span><span class=\"sy0\">/</span>x.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>sqr<span class=\"br0\">(</span>y.<span class=\"me1\">sigma</span><span class=\"sy0\">/</span>y.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%/</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx, y\u00a0: Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        Approx <span class=\"br0\">(</span>x.<span class=\"me1\">value</span> <span class=\"sy0\">/</span> y.<span class=\"me1\">value</span>, <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>sqr<span class=\"br0\">(</span>x.<span class=\"me1\">sigma</span><span class=\"sy0\">/</span>x.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>sqr<span class=\"br0\">(</span>y.<span class=\"me1\">sigma</span><span class=\"sy0\">/</span>y.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span>^<span class=\"br0\">)</span> <span class=\"br0\">(</span>x\u00a0: Approx, y\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">if</span> y <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>. <span class=\"kw1\">then</span> <span class=\"kw5\">failwith</span> <span class=\"br0\">(</span><span class=\"st0\">\"Cannot raise the power with a negative number \"</span> <span class=\"sy0\">+</span> y.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>        <span class=\"kw1\">let</span> v <span class=\"sy0\">=</span> pow<span class=\"br0\">(</span>x.<span class=\"me1\">value</span>,y<span class=\"br0\">)</span><br/>        Approx <span class=\"br0\">(</span>v, <span class=\"kw3\">abs</span><span class=\"br0\">(</span>v <span class=\"sy0\">*</span> y <span class=\"sy0\">*</span> x.<span class=\"me1\">sigma</span> <span class=\"sy0\">/</span> x.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">override</span> this.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> sprintf <span class=\"st0\">\"%.2f \u00b1%.2f\"</span> value sigma<br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> x1 <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span><span class=\"nu0\">100</span>., <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> y1 <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span><span class=\"nu0\">50</span>., <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> x2 <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span><span class=\"nu0\">200</span>., <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> y2 <span class=\"sy0\">=</span> Approx <span class=\"br0\">(</span><span class=\"nu0\">100</span>., <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><br/>\u00a0<br/>    printfn <span class=\"st0\">\"Distance:\u00a0%A\"</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x1 <span class=\"sy0\">%-</span> x2<span class=\"br0\">)</span> <span class=\"sy0\">%</span>^ <span class=\"nu0\">2</span>.<span class=\"br0\">)</span> <span class=\"sy0\">%+</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>y1 <span class=\"sy0\">%-</span> y2<span class=\"br0\">)</span> <span class=\"sy0\">%</span>^ <span class=\"nu0\">2</span>.<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span>^ <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Fortran", "loc": 27, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw1\">PROGRAM</span> CALCULATE\t<span class=\"co1\">!A distance, with error propagation.</span><br/>      <span class=\"kw3\">REAL</span> X1, Y1, X2, Y2\t<span class=\"co1\">!The co-ordinates.</span><br/>      <span class=\"kw3\">REAL</span> X1E,Y1E,X2E,Y2E\t<span class=\"co1\">!Their standard deviation.</span><br/>      <span class=\"kw3\">DATA</span> X1, Y1 ,X2, Y2 <span class=\"sy0\">/</span><span class=\"nu0\">100</span>., <span class=\"nu0\">50</span>., <span class=\"nu0\">200</span>.,<span class=\"nu0\">100</span>.<span class=\"sy0\">/</span>\t<span class=\"co1\">!Specified</span><br/>      <span class=\"kw3\">DATA</span> X1E,Y1E,X2E,Y2E<span class=\"sy0\">/</span>  <span class=\"nu0\">1.1</span>, <span class=\"nu0\">1.2</span>,  <span class=\"nu0\">2.2</span>, <span class=\"nu0\">2.3</span><span class=\"sy0\">/</span>\t<span class=\"co1\">!Values.</span><br/>      <span class=\"kw3\">REAL</span> DX,DY,D2,D,DXE,DYE,E\t<span class=\"co1\">!Assistants.</span><br/>      <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"nu0\">1</span> C\t\t\t<span class=\"co1\">!I'm stuck with code page 437 instead of 850.</span><br/>      <span class=\"kw3\">PARAMETER</span> <span class=\"br0\">(</span>C <span class=\"sy0\">=</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">(</span><span class=\"nu0\">241</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\t\t<span class=\"co1\">!Thus \u00b1 does not yield this glyph on a \"console\" screen. CHAR(241) does.</span><br/>      <span class=\"kw3\">REAL</span> SD\t<span class=\"co1\">!This is an arithmetic statement function.</span><br/>      SD<span class=\"br0\">(</span>X,P,S<span class=\"br0\">)</span> <span class=\"sy0\">=</span> P<span class=\"sy0\">*</span><span class=\"kw4\">ABS</span><span class=\"br0\">(</span>X<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>P <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>S\t<span class=\"co1\">!SD for X**P where SD of X is S</span><br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span> X1,C,X1E,Y1,C,Y1E,\t<span class=\"co1\">!Reveal the points</span><br/>     <span class=\"nu0\">1</span>            X2,C,X2E,Y2,C,Y2E\t<span class=\"co1\">!Though one could have used an array...</span><br/>    <span class=\"nu0\">1</span> FORMAT <span class=\"br0\">(</span><span class=\"st0\">\"Euclidean distance between two points:\"</span><span class=\"sy0\">/</span>\t<span class=\"co1\">!A heading.</span><br/>     <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"st0\">\"(\"</span>,F5.1,A1,F3.1,<span class=\"st0\">\",\"</span>,F5.1,A1,F3.1,<span class=\"st0\">\")\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\t\t<span class=\"co1\">!Thus, One point per line.</span><br/>      DX <span class=\"sy0\">=</span> <span class=\"br0\">(</span>X1 <span class=\"sy0\">-</span> X2<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!X difference.</span><br/>      DXE <span class=\"sy0\">=</span> <span class=\"kw4\">SQRT</span><span class=\"br0\">(</span>X1E<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> X2E<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\t<span class=\"co1\">!SD for DX, a simple difference.</span><br/>      DY <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Y1 <span class=\"sy0\">-</span> Y2<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!Y difference.</span><br/>      DYE <span class=\"sy0\">=</span> <span class=\"kw4\">SQRT</span><span class=\"br0\">(</span>Y1E<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> Y2E<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\t<span class=\"co1\">!SD for DY, (Y1 - Y2)</span><br/>      D2 <span class=\"sy0\">=</span> DX<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> DY<span class=\"sy0\">**</span><span class=\"nu0\">2</span>\t\t<span class=\"co1\">!The distance, squared.</span><br/>      DXE <span class=\"sy0\">=</span> SD<span class=\"br0\">(</span>DX,<span class=\"nu0\">2</span>,DXE<span class=\"br0\">)</span>\t\t<span class=\"co1\">!SD for DX**2</span><br/>      DYE <span class=\"sy0\">=</span> SD<span class=\"br0\">(</span>DY,<span class=\"nu0\">2</span>,DYE<span class=\"br0\">)</span>\t\t<span class=\"co1\">!SD for DY**2</span><br/>      E <span class=\"sy0\">=</span> <span class=\"kw4\">SQRT</span><span class=\"br0\">(</span>DXE<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> DYE<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\t\t<span class=\"co1\">!SD for their sum</span><br/>      D <span class=\"sy0\">=</span> <span class=\"kw4\">SQRT</span><span class=\"br0\">(</span>D2<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!The distance!</span><br/>      E <span class=\"sy0\">=</span> SD<span class=\"br0\">(</span>D2,<span class=\"nu0\">0.5</span>,E<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!SD after the SQRT.</span><br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span> D,C,E\t\t\t<span class=\"co1\">!Ahh, the relief.</span><br/>    <span class=\"nu0\">2</span> FORMAT <span class=\"br0\">(</span><span class=\"st0\">\"Distance\"</span>,F6.1,A1,F4.2<span class=\"br0\">)</span>\t<span class=\"co1\">!Sizes to fit the example.</span><br/>      <span class=\"kw1\">END</span>\t<span class=\"co1\">!Enough.</span></pre>"}, {"lang": "Go", "loc": 101, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// \"uncertain number type\"</span><br/><span class=\"co1\">// a little optimization is to represent the error term with its square.</span><br/><span class=\"co1\">// this saves some taking of square roots in various places.</span><br/><span class=\"kw1\">type</span> unc <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    n <span class=\"kw4\">float64</span> <span class=\"co1\">// the number</span><br/>    s <span class=\"kw4\">float64</span> <span class=\"co1\">// *square* of one sigma error term</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// constructor, nice to have so it can handle squaring of error term</span><br/><span class=\"kw4\">func</span> newUnc<span class=\"sy1\">(</span>n<span class=\"sy1\">,</span> s <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> &amp;unc<span class=\"sy1\">{</span>n<span class=\"sy1\">,</span> s <span class=\"sy3\">*</span> s<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// error term accessor method, nice to have so it can handle recovering</span><br/><span class=\"co1\">// (non-squared) error term from internal (squared) representation</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> errorTerm<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> math<span class=\"sy3\">.</span>Sqrt<span class=\"sy1\">(</span>z<span class=\"sy3\">.</span>s<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Arithmetic methods are modeled on the Go big number package.</span><br/><span class=\"co1\">// The basic scheme is to pass all operands as method arguments, compute</span><br/><span class=\"co1\">// the result into the method receiver, and then return the receiver as</span><br/><span class=\"co1\">// the result of the method.  This has an advantage of letting the programer</span><br/><span class=\"co1\">// determine allocation and use of temporary objects, reducing garbage;</span><br/><span class=\"co1\">// and has the convenience and efficiency of allowing operations to be chained.</span><br/>\u00a0<br/><span class=\"co1\">// addition/subtraction</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> addC<span class=\"sy1\">(</span>a <span class=\"sy3\">*</span>unc<span class=\"sy1\">,</span> c <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    <span class=\"sy3\">*</span>z <span class=\"sy2\">=</span> <span class=\"sy3\">*</span>a<br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">+=</span> c<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> subC<span class=\"sy1\">(</span>a <span class=\"sy3\">*</span>unc<span class=\"sy1\">,</span> c <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    <span class=\"sy3\">*</span>z <span class=\"sy2\">=</span> <span class=\"sy3\">*</span>a<br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">-=</span> c<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> addU<span class=\"sy1\">(</span>a<span class=\"sy1\">,</span> b <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>n <span class=\"sy3\">+</span> b<span class=\"sy3\">.</span>n<br/>    z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>s <span class=\"sy3\">+</span> b<span class=\"sy3\">.</span>s<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> subU<span class=\"sy1\">(</span>a<span class=\"sy1\">,</span> b <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>n <span class=\"sy3\">-</span> b<span class=\"sy3\">.</span>n<br/>    z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>s <span class=\"sy3\">+</span> b<span class=\"sy3\">.</span>s<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// multiplication/division</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> mulC<span class=\"sy1\">(</span>a <span class=\"sy3\">*</span>unc<span class=\"sy1\">,</span> c <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>n <span class=\"sy3\">*</span> c<br/>    z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>s <span class=\"sy3\">*</span> c <span class=\"sy3\">*</span> c<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> divC<span class=\"sy1\">(</span>a <span class=\"sy3\">*</span>unc<span class=\"sy1\">,</span> c <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>n <span class=\"sy3\">/</span> c<br/>    z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>s <span class=\"sy3\">/</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span> c<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> mulU<span class=\"sy1\">(</span>a<span class=\"sy1\">,</span> b <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    prod <span class=\"sy2\">:=</span> a<span class=\"sy3\">.</span>n <span class=\"sy3\">*</span> b<span class=\"sy3\">.</span>n<br/>    z<span class=\"sy3\">.</span>n<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> prod<span class=\"sy1\">,</span> prod<span class=\"sy3\">*</span>prod<span class=\"sy3\">*</span><span class=\"sy1\">(</span>a<span class=\"sy3\">.</span>s<span class=\"sy3\">/</span><span class=\"sy1\">(</span>a<span class=\"sy3\">.</span>n<span class=\"sy3\">*</span>a<span class=\"sy3\">.</span>n<span class=\"sy1\">)</span><span class=\"sy3\">+</span>b<span class=\"sy3\">.</span>s<span class=\"sy3\">/</span><span class=\"sy1\">(</span>b<span class=\"sy3\">.</span>n<span class=\"sy3\">*</span>b<span class=\"sy3\">.</span>n<span class=\"sy1\">))</span><br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> divU<span class=\"sy1\">(</span>a<span class=\"sy1\">,</span> b <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    quot <span class=\"sy2\">:=</span> a<span class=\"sy3\">.</span>n <span class=\"sy3\">/</span> b<span class=\"sy3\">.</span>n<br/>    z<span class=\"sy3\">.</span>n<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> quot<span class=\"sy1\">,</span> quot<span class=\"sy3\">*</span>quot<span class=\"sy3\">*</span><span class=\"sy1\">(</span>a<span class=\"sy3\">.</span>s<span class=\"sy3\">/</span><span class=\"sy1\">(</span>a<span class=\"sy3\">.</span>n<span class=\"sy3\">*</span>a<span class=\"sy3\">.</span>n<span class=\"sy1\">)</span><span class=\"sy3\">+</span>b<span class=\"sy3\">.</span>s<span class=\"sy3\">/</span><span class=\"sy1\">(</span>b<span class=\"sy3\">.</span>n<span class=\"sy3\">*</span>b<span class=\"sy3\">.</span>n<span class=\"sy1\">))</span><br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// exponentiation</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>unc<span class=\"sy1\">)</span> expC<span class=\"sy1\">(</span>a <span class=\"sy3\">*</span>unc<span class=\"sy1\">,</span> c <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>unc <span class=\"sy1\">{</span><br/>    f <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>Pow<span class=\"sy1\">(</span>a<span class=\"sy3\">.</span>n<span class=\"sy1\">,</span> c<span class=\"sy1\">)</span><br/>    g <span class=\"sy2\">:=</span> f <span class=\"sy3\">*</span> c <span class=\"sy3\">/</span> a<span class=\"sy3\">.</span>n<br/>    z<span class=\"sy3\">.</span>n <span class=\"sy2\">=</span> f<br/>    z<span class=\"sy3\">.</span>s <span class=\"sy2\">=</span> a<span class=\"sy3\">.</span>s <span class=\"sy3\">*</span> g <span class=\"sy3\">*</span> g<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    x1 <span class=\"sy2\">:=</span> newUnc<span class=\"sy1\">(</span><span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>    x2 <span class=\"sy2\">:=</span> newUnc<span class=\"sy1\">(</span><span class=\"nu0\">200</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span><br/>    y1 <span class=\"sy2\">:=</span> newUnc<span class=\"sy1\">(</span><span class=\"nu0\">50</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span><br/>    y2 <span class=\"sy2\">:=</span> newUnc<span class=\"sy1\">(</span><span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">3</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">var</span> d<span class=\"sy1\">,</span> d2 unc<br/>    d<span class=\"sy3\">.</span>expC<span class=\"sy1\">(</span>d<span class=\"sy3\">.</span>addU<span class=\"sy1\">(</span>d<span class=\"sy3\">.</span>expC<span class=\"sy1\">(</span>d<span class=\"sy3\">.</span>subU<span class=\"sy1\">(</span>x1<span class=\"sy1\">,</span> x2<span class=\"sy1\">),</span> <span class=\"nu0\">2</span><span class=\"sy1\">),</span> d2<span class=\"sy3\">.</span>expC<span class=\"sy1\">(</span>d2<span class=\"sy3\">.</span>subU<span class=\"sy1\">(</span>y1<span class=\"sy1\">,</span> y2<span class=\"sy1\">),</span> <span class=\"nu0\">2</span><span class=\"sy1\">)),</span> <span class=\"sy3\">.</span><span class=\"nu0\">5</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"d:    \"</span><span class=\"sy1\">,</span> d<span class=\"sy3\">.</span><span class=\"me1\">n</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"error:\"</span><span class=\"sy1\">,</span> d<span class=\"sy3\">.</span><span class=\"me1\">errorTerm</span><span class=\"sy1\">())</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 21, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">data</span> Error a <span class=\"sy0\">=</span> Error <span class=\"br0\">{</span>value <span class=\"sy0\">::</span> a<span class=\"sy0\">,</span> uncertainty <span class=\"sy0\">::</span> a<span class=\"br0\">}</span> <span class=\"kw1\">deriving</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Eq\"><span class=\"kw4\">Eq</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Show\"><span class=\"kw4\">Show</span></a><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">instance</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Floating\"><span class=\"kw4\">Floating</span></a> a<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> <span class=\"br0\">(</span>Error a<span class=\"br0\">)</span> <span class=\"kw1\">where</span><br/>\tError a ua <span class=\"sy0\">+</span> Error b ub <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span>a <span class=\"sy0\">+</span> b<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"br0\">(</span>ua <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> ub <span class=\"sy0\">^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:negate\"><span class=\"kw3\">negate</span></a> <span class=\"br0\">(</span>Error a ua<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:negate\"><span class=\"kw3\">negate</span></a> a<span class=\"br0\">)</span> ua<br/>\tError a ua <span class=\"sy0\">*</span> Error b ub <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> b<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:abs\"><span class=\"kw3\">abs</span></a> <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> b <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>ua <span class=\"sy0\">/</span> a<span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>ub <span class=\"sy0\">/</span> b<span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">-- I've factored out the f^2 from the square root</span><br/>\t<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromInteger\"><span class=\"kw3\">fromInteger</span></a> a <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromInteger\"><span class=\"kw3\">fromInteger</span></a> a<span class=\"br0\">)</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">instance</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Floating\"><span class=\"kw4\">Floating</span></a> a<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Fractional\"><span class=\"kw4\">Fractional</span></a> <span class=\"br0\">(</span>Error a<span class=\"br0\">)</span> <span class=\"kw1\">where</span><br/>\t<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromRational\"><span class=\"kw3\">fromRational</span></a> a <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromRational\"><span class=\"kw3\">fromRational</span></a> a<span class=\"br0\">)</span> <span class=\"nu0\">0</span><br/>\tError a ua <span class=\"sy0\">/</span> Error b ub <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span>a <span class=\"sy0\">/</span> b<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:abs\"><span class=\"kw3\">abs</span></a> <span class=\"br0\">(</span>a <span class=\"sy0\">/</span> b <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>ua <span class=\"sy0\">/</span> a<span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>ub <span class=\"sy0\">/</span> b<span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">-- I've factored out the f^2 from the square root</span><br/>\u00a0<br/><span class=\"kw1\">instance</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Floating\"><span class=\"kw4\">Floating</span></a> a<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Floating\"><span class=\"kw4\">Floating</span></a> <span class=\"br0\">(</span>Error a<span class=\"br0\">)</span> <span class=\"kw1\">where</span><br/>\tError a ua <span class=\"sy0\">**</span> Error c <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> Error <span class=\"br0\">(</span>a <span class=\"sy0\">**</span> c<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:abs\"><span class=\"kw3\">abs</span></a> <span class=\"br0\">(</span>ua <span class=\"sy0\">*</span> c <span class=\"sy0\">*</span> a<span class=\"sy0\">**</span>c <span class=\"sy0\">/</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>x1 <span class=\"sy0\">-</span> x2<span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>y1 <span class=\"sy0\">-</span> y2<span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">where</span> <span class=\"co1\">-- using (^) for exponentiation would calculate a*a, which the problem specifically said was calculated wrong</span><br/>\tx1 <span class=\"sy0\">=</span> Error <span class=\"nu0\">100</span> <span class=\"nu0\">1.1</span><br/>\ty1 <span class=\"sy0\">=</span> Error <span class=\"nu0\">50</span> <span class=\"nu0\">1.2</span><br/>\tx2 <span class=\"sy0\">=</span> Error <span class=\"nu0\">200</span> <span class=\"nu0\">2.2</span><br/>\ty2 <span class=\"sy0\">=</span> Error <span class=\"nu0\">100</span> <span class=\"nu0\">2.3</span><br/>\u00a0</pre>"}, {"lang": "Icon and Unicon", "loc": 43, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">record</span> num<span class=\"br0\">(</span>val<span class=\"sy0\">,</span>err<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>    x1 <span class=\"sy0\">:=</span> num<span class=\"br0\">(</span><span class=\"nu0\">100.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><br/>    y1 <span class=\"sy0\">:=</span> num<span class=\"br0\">(</span><span class=\"nu0\">50.0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><br/>    x2 <span class=\"sy0\">:=</span> num<span class=\"br0\">(</span><span class=\"nu0\">200.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><br/>    y2 <span class=\"sy0\">:=</span> num<span class=\"br0\">(</span><span class=\"nu0\">100.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><br/>    d <span class=\"sy0\">:=</span> pow<span class=\"br0\">(</span>add<span class=\"br0\">(</span>pow<span class=\"br0\">(</span>sub<span class=\"br0\">(</span>x1<span class=\"sy0\">,</span>x2<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>pow<span class=\"br0\">(</span>sub<span class=\"br0\">(</span>y1<span class=\"sy0\">,</span>y2<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"d = [\"</span><span class=\"sy0\">,</span>d<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span><span class=\"st0\">\", \"</span><span class=\"sy0\">,</span>d<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">,</span><span class=\"st0\">\"]\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> add<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">+</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">+</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">+</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> sub<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">-</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">-</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">-</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> mul<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">*</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>a<span class=\"sy0\">*</span>b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">*</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>b<span class=\"sy0\">*</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>f <span class=\"sy0\">:=</span> a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">*</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>f<span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">/</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">/</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> div<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">/</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>a<span class=\"sy0\">*</span>b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">/</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>b<span class=\"sy0\">*</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>f <span class=\"sy0\">:=</span> a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">/</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>f<span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">/</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>b<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">/</span>b<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> pow<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">^</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>           num<span class=\"br0\">(</span>f <span class=\"sy0\">:=</span> a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"sy0\">^</span><span class=\"kw4\">numeric</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>f<span class=\"sy0\">*</span>b<span class=\"sy0\">*</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">err</span><span class=\"sy0\">/</span>a<span class=\"sy0\">.</span><span class=\"me1\">val</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">num=: {.\"<span class=\"nu0\">1</span><br/>unc=: {:@}.\"<span class=\"nu0\">1</span>\u00a0: ,.<br/>dist=: +/&amp;.:*:</pre>"}, {"lang": "Java", "loc": 87, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Approx <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">double</span> value<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">double</span> error<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> <span class=\"kw1\">this</span>.<span class=\"me1\">error</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx<span class=\"br0\">(</span>Approx b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">error</span> <span class=\"sy0\">=</span> b.<span class=\"me1\">error</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx<span class=\"br0\">(</span><span class=\"kw4\">double</span> value, <span class=\"kw4\">double</span> error<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">error</span> <span class=\"sy0\">=</span> error<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx add<span class=\"br0\">(</span>Approx b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        value<span class=\"sy0\">+=</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>error <span class=\"sy0\">*</span> error <span class=\"sy0\">+</span> b.<span class=\"me1\">error</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">error</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx add<span class=\"br0\">(</span><span class=\"kw4\">double</span> b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        value<span class=\"sy0\">+=</span> b<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx sub<span class=\"br0\">(</span>Approx b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        value<span class=\"sy0\">-=</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>error <span class=\"sy0\">*</span> error <span class=\"sy0\">+</span> b.<span class=\"me1\">error</span> <span class=\"sy0\">*</span> b.<span class=\"me1\">error</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx sub<span class=\"br0\">(</span><span class=\"kw4\">double</span> b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        value<span class=\"sy0\">-=</span> b<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx mult<span class=\"br0\">(</span>Approx b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> oldVal <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>        value<span class=\"sy0\">*=</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>value <span class=\"sy0\">*</span> value <span class=\"sy0\">*</span> <span class=\"br0\">(</span>error<span class=\"sy0\">*</span>error<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>oldVal<span class=\"sy0\">*</span>oldVal<span class=\"br0\">)</span> <span class=\"sy0\">+</span><br/>                                  <span class=\"br0\">(</span>b.<span class=\"me1\">error</span><span class=\"sy0\">*</span>b.<span class=\"me1\">error</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>b.<span class=\"me1\">value</span><span class=\"sy0\">*</span>b.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx mult<span class=\"br0\">(</span><span class=\"kw4\">double</span> b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        value<span class=\"sy0\">*=</span> b<span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>b <span class=\"sy0\">*</span> error<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx div<span class=\"br0\">(</span>Approx b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> oldVal <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>        value<span class=\"sy0\">/=</span> b.<span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>value <span class=\"sy0\">*</span> value <span class=\"sy0\">*</span> <span class=\"br0\">(</span>error<span class=\"sy0\">*</span>error<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>oldVal<span class=\"sy0\">*</span>oldVal<span class=\"br0\">)</span> <span class=\"sy0\">+</span><br/>                                  <span class=\"br0\">(</span>b.<span class=\"me1\">error</span><span class=\"sy0\">*</span>b.<span class=\"me1\">error</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>b.<span class=\"me1\">value</span><span class=\"sy0\">*</span>b.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx div<span class=\"br0\">(</span><span class=\"kw4\">double</span> b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        value<span class=\"sy0\">/=</span> b<span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>b <span class=\"sy0\">*</span> error<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Approx pow<span class=\"br0\">(</span><span class=\"kw4\">double</span> b<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> oldVal <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>        value <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">pow</span><span class=\"br0\">(</span>value, b<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        error <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>value <span class=\"sy0\">*</span> b <span class=\"sy0\">*</span> <span class=\"br0\">(</span>error <span class=\"sy0\">/</span> oldVal<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> toString<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> value<span class=\"sy0\">+</span><span class=\"st0\">\"\u00b1\"</span><span class=\"sy0\">+</span>error<span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        Approx x1 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">100</span>, <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Approx y1 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">50</span>, <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Approx x2 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">200</span>, <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Approx y2 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">100</span>, <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        x1.<span class=\"me1\">sub</span><span class=\"br0\">(</span>x2<span class=\"br0\">)</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">add</span><span class=\"br0\">(</span>y1.<span class=\"me1\">sub</span><span class=\"br0\">(</span>y2<span class=\"br0\">)</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>x1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 61, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>module NumericError<br/>\u00a0<br/>import Base: convert, promote_rule, +, -, *, /, ^<br/>\u00a0<br/>export Measure<br/>\u00a0<br/>type Measure &lt;: Number<br/>  x::Float64<br/>  \u03c3::Float64<br/>  Measure(x::Real) = new(Float64(x), 0)<br/>  Measure(x::Real, \u03c3::Real) = new(Float64(x), \u03c3)<br/>end<br/>\u00a0<br/>Base.show(io::IO, x::Measure) = print(io, string(x.x, \" \u00b1 \", x.\u03c3))<br/>\u00a0<br/>Base.convert(::Type{Measure}, x::Real) = Measure(Float64(x), 0.0)<br/>Base.promote_rule(::Type{Float64},\u00a0::Type{Measure}) = Measure<br/>Base.promote_rule(::Type{Int64},\u00a0::Type{Measure}) = Measure<br/>\u00a0<br/>+(a::Measure, b::Measure) = Measure(a.x + b.x, sqrt(a.\u03c3 ^ 2 + b.\u03c3 ^ 2))<br/>-(a::Measure, b::Measure) = Measure(a.x - b.x, sqrt(a.\u03c3 ^ 2 + b.\u03c3 ^ 2))<br/>-(a::Measure) = Measure(-a.x, a.\u03c3)<br/>\u00a0<br/>*(a::Measure, b::Measure) = begin<br/>  x = a.x * b.x<br/>  \u03c3 = sqrt(x ^ 2 * ((a.\u03c3 / a.x) ^ 2 + (b.\u03c3 / b.x) ^ 2))<br/>  Measure(x, \u03c3)<br/>end<br/>/(a::Measure, b::Measure) = begin<br/>  x = a.x / b.x<br/>  \u03c3 = sqrt(x ^ 2 * ((a.\u03c3 / a.x) ^ 2 + (b.\u03c3 / b.x) ^ 2))<br/>  Measure(x, \u03c3)<br/>end<br/>\u00a0<br/>^(a::Measure, b::Float64) = begin<br/>  x = a.x ^ b<br/>  \u03c3 = abs(x * b * a.\u03c3 / a.x)<br/>  Measure(x, \u03c3)<br/>end<br/>\u00a0<br/>Base.sqrt(a::Measure) = a ^ .5<br/>\u00a0<br/>end  # module NumericError<br/>\u00a0<br/>using NumericError<br/>\u00a0<br/># x1 = 100 \u00b1 1.1<br/># y1 = 50 \u00b1 1.2<br/># x2 = 200 \u00b1 2.2<br/># y2 = 100 \u00b1 2.3<br/>\u00a0<br/>x1 = Measure(100, 1.1)<br/>y1 = Measure(50,  1.2)<br/>x2 = Measure(200, 2.2)<br/>y2 = Measure(100, 2.3)<br/>\u00a0<br/>d = sqrt((x1 - x2) ^ 2 + (y1 - y2) ^ 2)<br/>\u00a0<br/>@show x1 y1 x2 y2 sqrt((x1 - x2) ^ 2 + (y1 - y2) ^ 2)<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 40, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">lang</span>.<span class=\"me1\">Math</span>.<span class=\"sy0\">*</span><br/>\u00a0<br/>data <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Approx<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> \u03bd<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> \u03c3<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    constructor<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">(</span>a.\u03bd, a.\u03c3<span class=\"br0\">)</span><br/>    constructor<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Number<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">(</span>n.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$\u03bd \u00b1$\u03c3\"</span><br/>\u00a0<br/>    operator infix fun plus<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd + a.\u03bd, sqrt<span class=\"br0\">(</span>\u03c3 <span class=\"sy0\">*</span> \u03c3 + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    operator infix fun plus<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd + d, \u03c3<span class=\"br0\">)</span><br/>    operator infix fun minus<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd - a.\u03bd, sqrt<span class=\"br0\">(</span>\u03c3 <span class=\"sy0\">*</span> \u03c3 + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    operator infix fun minus<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd - d, \u03c3<span class=\"br0\">)</span><br/>\u00a0<br/>    operator infix fun times<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span><span class=\"sy0\">:</span> Approx <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> v <span class=\"sy0\">=</span> \u03bd <span class=\"sy0\">*</span> a.\u03bd<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Approx<span class=\"br0\">(</span>v, sqrt<span class=\"br0\">(</span>v <span class=\"sy0\">*</span> v <span class=\"sy0\">*</span> \u03c3 <span class=\"sy0\">*</span> \u03c3 / <span class=\"br0\">(</span>\u03bd <span class=\"sy0\">*</span> \u03bd<span class=\"br0\">)</span> + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3 / <span class=\"br0\">(</span>a.\u03bd <span class=\"sy0\">*</span> a.\u03bd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    operator infix fun times<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd <span class=\"sy0\">*</span> d, abs<span class=\"br0\">(</span>d <span class=\"sy0\">*</span> \u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    operator infix fun div<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span><span class=\"sy0\">:</span> Approx <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> v <span class=\"sy0\">=</span> \u03bd / a.\u03bd<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Approx<span class=\"br0\">(</span>v, sqrt<span class=\"br0\">(</span>v <span class=\"sy0\">*</span> v <span class=\"sy0\">*</span> \u03c3 <span class=\"sy0\">*</span> \u03c3 / <span class=\"br0\">(</span>\u03bd <span class=\"sy0\">*</span> \u03bd<span class=\"br0\">)</span> + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3 / <span class=\"br0\">(</span>a.\u03bd <span class=\"sy0\">*</span> a.\u03bd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    operator infix fun div<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd / d, abs<span class=\"br0\">(</span>d <span class=\"sy0\">*</span> \u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    fun pow<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span><span class=\"sy0\">:</span> Approx <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> v <span class=\"sy0\">=</span> pow<span class=\"br0\">(</span>\u03bd, d<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Approx<span class=\"br0\">(</span>v, abs<span class=\"br0\">(</span>v <span class=\"sy0\">*</span> d <span class=\"sy0\">*</span> \u03c3 / \u03bd<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x1 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">100.0</span>, <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y1 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">50.0</span>, <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x2 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">200.0</span>, <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y2 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">100.0</span>, <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x1 - x2<span class=\"br0\">)</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span>y1 - y2<span class=\"br0\">)</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Mathematica", "loc": 5, "block": "<pre class=\"text highlighted_source\">PlusMinus /: a_ \u00b1 \u03c3a_ + c_?NumericQ\u00a0:= N[(a + c) \u00b1 \u03c3a];<br/>PlusMinus /: a_ \u00b1 \u03c3a_ + b_ \u00b1 \u03c3b_\u00a0:= N[(a + b) \u00b1 <a class=\"__cf_email__\" data-cfemail=\"4f01203d220f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{\u03c3a, \u03c3b}];<br/>PlusMinus /: c_?NumericQ (a_ \u00b1 \u03c3a_)\u00a0:= N[c a \u00b1 Abs[c \u03c3a]];<br/>PlusMinus /: (a_ \u00b1 \u03c3a_) (b_ \u00b1 \u03c3b_)\u00a0:= N[a b \u00b1 (a b <a class=\"__cf_email__\" data-cfemail=\"93ddfce1fed3\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{\u03c3a/a, \u03c3b/b})^2];<br/>PlusMinus /: (a_ \u00b1 \u03c3a_)^c_?NumericQ\u00a0:= N[a^c \u00b1 Abs[a^c \u03c3a/a]];</pre>"}, {"lang": "PARI/GP", "loc": 7, "block": "<pre class=\"parigp highlighted_source\">add<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> a<span class=\"sy0\">+</span>b<span class=\"sy0\">,</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"st0\">\"t_VEC\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">+</span><span class=\"br0\">[</span>b<span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>b<span class=\"sy0\">+</span><span class=\"br0\">[</span>a<span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>sub<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>a<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>b<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"st0\">\"t_VEC\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">-</span><span class=\"br0\">[</span>b<span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span>a<span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>mult<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"st0\">\"t_VEC\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"st0\">\"t_VEC\"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw1\">abs</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw1\">sqrt</span><span class=\"br0\">(</span><span class=\"kw1\">norml2</span><span class=\"br0\">(</span><span class=\"br0\">[</span>a<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">/</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>b<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">/</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>b<span class=\"sy0\">*</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw1\">abs</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">*</span>a<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>a<span class=\"sy0\">*</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw1\">abs</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">*</span>b<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>div<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">!=</span><span class=\"st0\">\"t_VEC\"</span><span class=\"sy0\">,</span> mult<span class=\"br0\">(</span>a<span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"sy0\">/</span>b<span class=\"br0\">)</span><span class=\"sy0\">,</span> mult<span class=\"br0\">(</span>a<span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"sy0\">/</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>b<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">/</span>b<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>pow<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">[</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">^</span>b<span class=\"sy0\">,</span> <span class=\"kw1\">abs</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">^</span>b<span class=\"sy0\">*</span>b<span class=\"sy0\">*</span>a<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">/</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>x1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">100</span><span class=\"sy0\">,</span><span class=\"nu2\">1.1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>y1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">50</span><span class=\"sy0\">,</span><span class=\"nu2\">1.2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>x2<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">200</span><span class=\"sy0\">,</span><span class=\"nu2\">2.2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>y2<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">100</span><span class=\"sy0\">,</span><span class=\"nu2\">2.3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>pow<span class=\"br0\">(</span>add<span class=\"br0\">(</span>pow<span class=\"br0\">(</span>sub<span class=\"br0\">(</span>x1<span class=\"sy0\">,</span>x2<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu1\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>pow<span class=\"br0\">(</span>sub<span class=\"br0\">(</span>y1<span class=\"sy0\">,</span>y2<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu1\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu2\">.5</span><span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 186, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> utf8<span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> ErrVar<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># helper function, apply f to pairs (a, b) from listX and listY</span><br/><span class=\"kw2\">sub</span> zip<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span><span class=\"co5\">$$</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$f</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$l</span> <span class=\"sy0\">=</span> <span class=\"co5\">$#</span><span class=\"re0\">$x</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$l</span> <span class=\"sy0\">&lt;</span> <span class=\"co5\">$#</span><span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$l</span> <span class=\"sy0\">=</span> <span class=\"co5\">$#</span><span class=\"re0\">$y</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">@out</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$l</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://perldoc.perl.org/functions/local.html\"><span class=\"kw3\">local</span></a> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://perldoc.perl.org/functions/local.html\"><span class=\"kw3\">local</span></a> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"re0\">$y</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@out</span><span class=\"sy0\">,</span> <span class=\"re0\">$f</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"re0\">\\@out</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">use</span> overload<br/>\t<span class=\"st_h\">'\"\"'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_str</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'+'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_add</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'-'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_sub</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'*'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_mul</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'/'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_div</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'bool'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_bool</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'&lt;=&gt;'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_ncmp</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'neg'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_neg</span><span class=\"sy0\">,</span><br/>\u00a0<br/>\t<span class=\"st_h\">'sqrt'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_sqrt</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'log'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_log</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'exp'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_exp</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">'**'</span>\t<span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_pow</span><span class=\"sy0\">,</span><br/><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># make a variable with mean value and a list of coefficient to</span><br/><span class=\"co1\"># variables providing independent errors</span><br/><span class=\"kw2\">sub</span> make <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"sy0\">+</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _str <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a> <span class=\"st0\">\"%g\u00b1%.3g\"</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> sigma<span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># mean value of the var, or just the input if it's not of this class</span><br/><span class=\"kw2\">sub</span> mean <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a><span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">isa</span><span class=\"br0\">(</span>__PACKAGE__<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:</span> <span class=\"re0\">$x</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># return variance index array</span><br/><span class=\"kw2\">sub</span> vlist <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a><span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">isa</span><span class=\"br0\">(</span>__PACKAGE__<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> variance <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a><span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">isa</span><span class=\"br0\">(</span>__PACKAGE__<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$s</span> <span class=\"sy0\">+=</span> <span class=\"co5\">$_</span> <span class=\"sy0\">*</span> <span class=\"co5\">$_</span> <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$s</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> covariance <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a><span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$x</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">isa</span><span class=\"br0\">(</span>__PACKAGE__<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a><span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$y</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">isa</span><span class=\"br0\">(</span>__PACKAGE__<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/>\tzip <span class=\"br0\">{</span> <span class=\"re0\">$s</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$s</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> sigma <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a> variance<span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># to determine if a var is probably zero. we use 1\u03c3 here</span><br/><span class=\"kw2\">sub</span> _bool <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/abs.html\"><span class=\"kw3\">abs</span></a><span class=\"br0\">(</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> sigma<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _ncmp <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span>\t<span class=\"kw1\">or</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _neg <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"sy0\">-</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span>vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _add <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> mean<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span><span class=\"re0\">$x0</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> zip <span class=\"br0\">{</span><span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"br0\">}</span> <span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _sub <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> mean<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span><span class=\"re0\">$x0</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> zip <span class=\"br0\">{</span><span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span><span class=\"br0\">}</span> <span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _mul <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> mean<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"re0\">$xv</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"re0\">$y0</span> <span class=\"sy0\">*</span> <span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">@$xv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$yv</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"re0\">$x0</span> <span class=\"sy0\">*</span> <span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">@$yv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span><span class=\"re0\">$x0</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> zip <span class=\"br0\">{</span><span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"br0\">}</span> <span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _div <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> mean<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"re0\">$xv</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">/</span><span class=\"re0\">$y0</span><span class=\"sy0\">,</span> <span class=\"re0\">@$xv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$yv</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"re0\">$x0</span> <span class=\"sy0\">*</span> <span class=\"co5\">$_</span><span class=\"sy0\">/</span><span class=\"re0\">$y0</span><span class=\"sy0\">/</span><span class=\"re0\">$y0</span><span class=\"sy0\">,</span> <span class=\"re0\">@$yv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span><span class=\"re0\">$x0</span> <span class=\"sy0\">/</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> zip <span class=\"br0\">{</span><span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"br0\">}</span> <span class=\"re0\">$xv</span><span class=\"sy0\">,</span> <span class=\"re0\">$yv</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _sqrt <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x0</span> <span class=\"sy0\">=</span> mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$xv</span> <span class=\"sy0\">=</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$x0</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$xv</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"co5\">$_</span> <span class=\"co2\">/ 2 /</span> <span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">@$xv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span><span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">$xv</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _pow <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$y</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Can't take pow of negative number $x\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"re0\">$x</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://perldoc.perl.org/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">*</span> <a href=\"http://perldoc.perl.org/functions/log.html\"><span class=\"kw3\">log</span></a> <span class=\"re0\">$x</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _exp <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x0</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span>mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$xv</span> <span class=\"sy0\">=</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"re0\">$x0</span> <span class=\"sy0\">*</span> <span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">@$xv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _log <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x0</span> <span class=\"sy0\">=</span> mean<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$xv</span> <span class=\"sy0\">=</span> vlist<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/log.html\"><span class=\"kw3\">log</span></a><span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"co5\">$_</span> <span class=\"sy0\">/</span> <span class=\"re0\">$x0</span><span class=\"sy0\">,</span> <span class=\"re0\">@$xv</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"st0\">\"If this package were to be in its own file, you need some truth value to end it like this.\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> main<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> e <span class=\"br0\">{</span> ErrVar<span class=\"sy0\">::</span><span class=\"me2\">make</span> <span class=\"co5\">@_</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># x1 is of mean value 100, containing error 1.1 from source 1, etc.</span><br/><span class=\"co1\"># all error sources are independent.</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$x1</span> <span class=\"sy0\">=</span> e <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1.1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">0</span>  <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$x2</span> <span class=\"sy0\">=</span> e <span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">2.2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">0</span>  <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$y1</span> <span class=\"sy0\">=</span> e <span class=\"nu0\">50</span><span class=\"sy0\">,</span>  <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">1.2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span>  <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$y2</span> <span class=\"sy0\">=</span> e <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">0</span><span class=\"sy0\">,</span>   <span class=\"nu0\">2.3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$z1</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$x1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$x2</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$y1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y2</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"distance: $z1<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># this is not for task requirement</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x2</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"re0\">$y1</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"re0\">$x2</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"covariance between $a and $b: \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">covariance</span><span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 100, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"co1\"># cache of independent sources so we can make them all the same length.</span><br/><span class=\"co1\"># (Because Perl 6 does not yet have a longest-zip metaoperator.)</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@INDEP</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Approx <span class=\"kw1\">does</span> Numeric <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> Real <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">;</span>\t<span class=\"co1\"># The mean.</span><br/>    <span class=\"kw1\">has</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">;</span>\t\t<span class=\"co1\"># The components of error.</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> <span class=\"kw2\">method</span> Str  <span class=\"br0\">{</span> <span class=\"kw3\">sprintf</span> <span class=\"st0\">\"%g\u00b1%.3g\"</span><span class=\"sy0\">,</span> $<span class=\"sy0\">!</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span>\u03c3 <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> <span class=\"kw2\">method</span> Bool <span class=\"br0\">{</span> <span class=\"kw3\">abs</span><span class=\"br0\">(</span>$<span class=\"sy0\">!</span><span class=\"kw1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span>\u03c3 <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> variance <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@</span><span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"kw1\">X</span><span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> \u03c3 <span class=\"br0\">{</span> <span class=\"kw3\">sqrt</span> self<span class=\"sy0\">.</span><span class=\"me1\">variance</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> approx<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span><span class=\"re0\">$c</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Approx<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">:</span> <span class=\"sy0\">:</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$c</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> approx<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Approx<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">:</span> <span class=\"sy0\">:</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span>c<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"kw1\">xx</span> <span class=\"sy0\">+</span><span class=\"re0\">@INDEP</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Each \u00b1 gets its own source slot.</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;</span>\u00b1<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"nu0\">0</span> <span class=\"kw1\">for</span> <span class=\"re0\">@INDEP</span><span class=\"sy0\">;</span> <span class=\"co1\"># lengthen older component lists</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> flat <span class=\"nu0\">0</span> <span class=\"kw1\">xx</span> <span class=\"re0\">@INDEP</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@INDEP</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> <span class=\"re0\">$c</span><span class=\"sy0\">;</span>\t <span class=\"co1\"># add new component list</span><br/>\u00a0<br/>    approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> prefix<span class=\"sy0\">:&lt;-&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx <span class=\"sy0\">-</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"sy0\">-*</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> approx<span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"kw1\">Z</span><span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;-&gt;</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;-&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> approx<span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;-&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span> Z<span class=\"sy0\">-</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> covariance<span class=\"br0\">(</span>Real   <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Real   <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> covariance<span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"kw1\">Z</span><span class=\"sy0\">*</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:</span>\u00ab<span class=\"sy0\">&lt;=&gt;</span>\u00bb<span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">&lt;=&gt;</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;</span>cmp<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">&lt;=&gt;</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> approx<span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    approx <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span><br/>           <span class=\"br0\">[</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">*</span> <span class=\"re0\">$_</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"kw1\">Z</span><span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">*</span> <span class=\"re0\">$_</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;/&gt;</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> approx<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;/&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">/</span> approx<span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;/&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    approx <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">/</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span><br/>           <span class=\"br0\">[</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span> <span class=\"re0\">$_</span> <span class=\"co2\">/ $b.x }) Z+ $b.c.map({ $a.x * $_ /</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">/</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    approx <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"re0\">$_</span> <span class=\"co2\">/ 2 /</span> <span class=\"re0\">$x</span> <span class=\"br0\">}</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;**&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Real <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">**</span> approx<span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;**&gt;</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span> <span class=\"kw1\">is</span> copy<span class=\"sy0\">,</span> Approx <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$ax</span> <span class=\"sy0\">=</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$bx</span> <span class=\"sy0\">=</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$fbx</span> <span class=\"sy0\">=</span> <span class=\"kw3\">floor</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"re0\">$ax</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"re0\">$fbx</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$bx</span> <span class=\"kw1\">or</span> <span class=\"re0\">$fbx</span> <span class=\"sy0\">+&amp;</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">die</span> <span class=\"st0\">\"Can't take power of negative number $ax\"</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"re0\">$a</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw3\">exp</span><span class=\"br0\">(</span><span class=\"re0\">$b</span> <span class=\"sy0\">*</span> <span class=\"kw3\">log</span> <span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> <span class=\"kw3\">exp</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"kw3\">exp</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tapprox <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"re0\">$x</span> <span class=\"sy0\">*</span> <span class=\"re0\">$_</span> <span class=\"br0\">}</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> <span class=\"kw3\">log</span><span class=\"br0\">(</span>Approx <span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$x0</span> <span class=\"sy0\">=</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">;</span><br/>\tapprox <span class=\"kw3\">log</span><span class=\"br0\">(</span><span class=\"re0\">$x0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"re0\">$_</span> <span class=\"sy0\">/</span> <span class=\"re0\">$x0</span> <span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Each \u00b1 sets up an independent source component.</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$x1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">100</span> \u00b1 <span class=\"nu0\">1.1</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$x2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">200</span> \u00b1 <span class=\"nu0\">2.2</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$y1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">50</span>  \u00b1 <span class=\"nu0\">1.2</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$y2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">100</span> \u00b1 <span class=\"nu0\">2.3</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># The standard task.</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$z1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$x1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$x2</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$y1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y2</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"distance: $z1<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># Just showing off.</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x2</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"re0\">$y1</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"re0\">$x2</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"covariance between $a and $b: \"</span><span class=\"sy0\">,</span> covariance<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span><span class=\"re0\">$b</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 56, "block": "<pre class=\"text highlighted_source\">enum VALUE, DELTA<br/>\u00a0<br/>type imprecise(object imp)<br/>    return sequence(imp) and atom(imp[VALUE]) and atom(imp[DELTA])<br/>end type <br/>\u00a0<br/>function sqr(atom a)<br/>    return a*a<br/>end function<br/>\u00a0<br/>function imprecise_add(imprecise a, b)<br/>    atom delta = sqrt(sqr(a[DELTA]) + sqr(b[DELTA]))<br/>    imprecise ret = {a[VALUE] + b[VALUE], delta}<br/>    return ret<br/>end function<br/>\u00a0<br/>function imprecise_mul(imprecise a, b)<br/>    atom delta = sqrt(sqr(a[VALUE]*b[DELTA]) + sqr(b[VALUE]*a[DELTA]))<br/>    imprecise ret = {a[VALUE] * b[VALUE],delta}<br/>    return ret<br/>end function<br/>\u00a0<br/>function imprecise_div(imprecise a, b)<br/>    atom delta = sqrt(sqr(a[VALUE]*b[DELTA]) + sqr(b[VALUE]*a[DELTA]))/sqr(b[VALUE])<br/>    imprecise ret = {a[VALUE] / b[VALUE], delta}<br/>    return ret<br/>end function<br/>\u00a0<br/>function imprecise_pow(imprecise a, atom c)<br/>    atom v = power(a[VALUE], c),<br/>         delta = abs(v*c*a[DELTA]/a[VALUE])<br/>    imprecise ret = {v,delta}<br/>    return ret<br/>end function<br/>\u00a0<br/>function printImprecise(imprecise imp)<br/>    return sprintf(\"%g+/-%g\",imp)<br/>end function<br/>\u00a0<br/>imprecise x1 = {100, 1.1},<br/>          y1 = {50, 1.2},<br/>          x2 = {-200, 2.2},<br/>          y2 = {-100, 2.3},<br/>          tmp1, tmp2,<br/>          d<br/>\u00a0<br/>    tmp1 = imprecise_add(x1, x2)<br/>    tmp1 = imprecise_pow(tmp1, 2)<br/>    tmp2 = imprecise_add(y1, y2)<br/>    tmp2 = imprecise_pow(tmp2, 2)<br/>    d = imprecise_add(tmp1,tmp2)<br/>    d = imprecise_pow(d, 0.5)<br/>    printf(1,\"Distance, d, between the following points\u00a0:\")<br/>    printf(1,\"\\n( x1, y1) = (\u00a0%s,\u00a0%s)\",{printImprecise(x1),printImprecise(y1)})<br/>    printf(1,\"\\n( x2, y2) = (\u00a0%s,\u00a0%s)\",{printImprecise(x2),printImprecise(y2)})<br/>    printf(1,\"\\nis d =\u00a0%s\\n\", {printImprecise(d)})</pre>"}, {"lang": "PicoLisp", "loc": 94, "block": "<pre class=\"text highlighted_source\">(scl 12)<br/>(load \"@lib/math.l\")<br/>\u00a0<br/># Overload arithmetic operators +, -, *, / and **<br/>(redef + @<br/>   (let R (next)<br/>      (while (args)<br/>         (let N (next)<br/>            (setq R<br/>               (if2 (atom R) (atom N)<br/>                  (+ R N)                       # c + c<br/>                  (cons (+ R (car N)) (cdr N))  # c + a<br/>                  (cons (+ (car R) N) (cdr R))  # a + c<br/>                  (cons                         # a + b<br/>                     (+ (car R) (car N))<br/>                     (+ (cdr R) (cdr N)) ) ) ) ) )<br/>      R ) )<br/>\u00a0<br/>(redef - @<br/>   (let R (next)<br/>      (ifn (args)<br/>         (- R)<br/>         (while (args)<br/>            (let N (next)<br/>               (setq R<br/>                  (if2 (atom R) (atom N)<br/>                     (- R N)                       # c - c<br/>                     (cons (- R (car N)) (cdr N))  # c - a<br/>                     (cons (- (car R) N) (cdr R))  # a - c<br/>                     (cons                         # a - b<br/>                        (- (car R) (car N))<br/>                        (+ (cdr R) (cdr N)) ) ) ) ) )<br/>         R ) ) )<br/>\u00a0<br/>(redef * @<br/>   (let R (next)<br/>      (while (args)<br/>         (let N (next)<br/>            (setq R<br/>               (if2 (atom R) (atom N)<br/>                  (* R N)                                        # c * c<br/>                  (cons                                          # c * a<br/>                     (*/ R (car N) 1.0)<br/>                     (mul2div2 (cdr N) R 1.0) )<br/>                  (cons                                          # a * c<br/>                     (*/ (car R) N 1.0)<br/>                     (mul2div2 (cdr R) N 1.0) )<br/>                  (uncMul (*/ (car R) (car N) 1.0) R N) ) ) ) )  # a * b<br/>      R ) )<br/>\u00a0<br/>(redef / @<br/>   (let R (next)<br/>      (while (args)<br/>         (let N (next)<br/>            (setq R<br/>               (if2 (atom R) (atom N)<br/>                  (/ R N)                                        # c / c<br/>                  (cons                                          # c / a<br/>                     (*/ R 1.0 (car N))<br/>                     (mul2div2 (cdr N) R 1.0) )<br/>                  (cons                                          # a / c<br/>                     (*/ (car R) 1.0 N)<br/>                     (mul2div2 (cdr R) N 1.0) )<br/>                  (uncMul (*/ (car R) 1.0 (car N)) R N) ) ) ) )  # a / b<br/>      R ) )<br/>\u00a0<br/>(redef ** (A C)<br/>   (if (atom A)<br/>      (** A C)<br/>      (let F (pow (car A) C)<br/>         (cons F<br/>            (mul2div2 (cdr A) (*/ F C (car A)) 1.0) ) ) ) )<br/>\u00a0<br/># Utilities<br/>(de mul2div2 (A B C)<br/>   (*/ A B B (* C C)) )<br/>\u00a0<br/>(de uncMul (F R N)<br/>   (cons F<br/>      (mul2div2<br/>         (+<br/>            (mul2div2 (cdr R) 1.0 (car R))<br/>            (mul2div2 (cdr N) 1.0 (car N)) )<br/>         F<br/>         1.0 ) ) )<br/>\u00a0<br/># I/O conversion<br/>(de unc (N U)<br/>   (if U<br/>      (cons N (*/ U U 1.0))<br/>      (pack<br/>         (round (car N) 10)<br/>         \" \u00b1 \"<br/>         (round (sqrt (cdr N) 1.0) 8) ) ) )</pre>"}, {"lang": "Python", "loc": 93, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> namedtuple<br/><span class=\"kw1\">import</span> <span class=\"kw3\">math</span><br/>\u00a0<br/><span class=\"kw1\">class</span> I<span class=\"br0\">(</span>namedtuple<span class=\"br0\">(</span><span class=\"st0\">'Imprecise'</span><span class=\"sy0\">,</span> <span class=\"st0\">'value, delta'</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Imprecise type: I(value=0.0, delta=0.0)'</span> <br/>\u00a0<br/>    <span class=\"kw4\">__slots__</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__new__</span><span class=\"br0\">(</span>_cls<span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> delta<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">'Defaults to 0.0 \u00b1 delta'</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__new__</span><span class=\"br0\">(</span>_cls<span class=\"sy0\">,</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>value<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span><span class=\"kw2\">float</span><span class=\"br0\">(</span>delta<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> reciprocal<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"nu0\">1</span>. / <span class=\"kw2\">self</span>.<span class=\"me1\">value</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">delta</span> / <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">value</span>**<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">'Shorter form of Imprecise as string'</span><br/>        <span class=\"kw1\">return</span> <span class=\"st0\">'I(%g,\u00a0%g)'</span>\u00a0% <span class=\"kw2\">self</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__neg__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span>-<span class=\"kw2\">self</span>.<span class=\"me1\">value</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">delta</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__add__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> I:<br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span> <span class=\"kw2\">self</span>.<span class=\"me1\">value</span> + other.<span class=\"me1\">value</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">delta</span>**<span class=\"nu0\">2</span> + other.<span class=\"me1\">delta</span>**<span class=\"nu0\">2</span><span class=\"br0\">)</span>**<span class=\"nu0\">0.5</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">try</span>:<br/>            c <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">value</span> + c<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">delta</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__sub__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span> + <span class=\"br0\">(</span>-other<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__radd__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> I.<span class=\"kw4\">__add__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__mul__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> I:<br/>            <span class=\"co1\">#if id(self) == id(other):    </span><br/>            <span class=\"co1\">#    return self ** 2</span><br/>            a1<span class=\"sy0\">,</span>b1 <span class=\"sy0\">=</span> <span class=\"kw2\">self</span><br/>            a2<span class=\"sy0\">,</span>b2 <span class=\"sy0\">=</span> other<br/>            f <span class=\"sy0\">=</span> a1 * a2<br/>            <span class=\"kw1\">return</span> I<span class=\"br0\">(</span> f<span class=\"sy0\">,</span> f * <span class=\"br0\">(</span> <span class=\"br0\">(</span>b1 / a1<span class=\"br0\">)</span>**<span class=\"nu0\">2</span> + <span class=\"br0\">(</span>b2 / a2<span class=\"br0\">)</span>**<span class=\"nu0\">2</span> <span class=\"br0\">)</span>**<span class=\"nu0\">0.5</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">try</span>:<br/>            c <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">value</span> * c<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">delta</span> * c<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__pow__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> I:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">try</span>:<br/>            c <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        f <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">value</span> ** c<br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> f * c * <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">delta</span> / <span class=\"kw2\">self</span>.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__rmul__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> I.<span class=\"kw4\">__mul__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> __truediv__<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> I:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"kw4\">__mul__</span><span class=\"br0\">(</span>other.<span class=\"me1\">reciprocal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">try</span>:<br/>            c <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">return</span> I<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">value</span> / c<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">delta</span> / c<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> __rtruediv__<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> other * <span class=\"kw2\">self</span>.<span class=\"me1\">reciprocal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw4\">__div__</span><span class=\"sy0\">,</span> <span class=\"kw4\">__rdiv__</span> <span class=\"sy0\">=</span> __truediv__<span class=\"sy0\">,</span> __rtruediv__<br/>\u00a0<br/>Imprecise <span class=\"sy0\">=</span> I<br/>\u00a0<br/><span class=\"kw1\">def</span> distance<span class=\"br0\">(</span>p1<span class=\"sy0\">,</span> p2<span class=\"br0\">)</span>:<br/>    x1<span class=\"sy0\">,</span> y1 <span class=\"sy0\">=</span> p1<br/>    x2<span class=\"sy0\">,</span> y2 <span class=\"sy0\">=</span> p2<br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x1 - x2<span class=\"br0\">)</span>**<span class=\"nu0\">2</span> + <span class=\"br0\">(</span>y1 - y2<span class=\"br0\">)</span>**<span class=\"nu0\">2</span><span class=\"br0\">)</span>**<span class=\"nu0\">0.5</span><br/>\u00a0<br/>x1 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><br/>x2 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><br/>y1 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><br/>y2 <span class=\"sy0\">=</span> I<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><br/>\u00a0<br/>p1<span class=\"sy0\">,</span> p2 <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x1<span class=\"sy0\">,</span> y1<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>x2<span class=\"sy0\">,</span> y2<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Distance between points<span class=\"es0\">\\n</span>  p1:\u00a0%s<span class=\"es0\">\\n</span>  and p2:\u00a0%s<span class=\"es0\">\\n</span>  =\u00a0%r\"</span>\u00a0% <span class=\"br0\">(</span><br/>      p1<span class=\"sy0\">,</span> p2<span class=\"sy0\">,</span> distance<span class=\"br0\">(</span>p1<span class=\"sy0\">,</span> p2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 42, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>\u00a0<br/>(struct \u00b1 (x dx) #:transparent<br/>  #:methods gen:custom-write<br/>  [(define (write-proc a port mode) (display (\u00b1-&gt;string a) port))])<br/>\u00a0<br/>(define/match (\u00b1+ a [b 0])<br/>  [((\u00b1 x dx) (\u00b1 y dy)) (\u00b1 (+ x y) (norm dx dy))]<br/>  [((\u00b1 x dx) c) (\u00b1 (+ x c) dx)]<br/>  [(_ (\u00b1 y dy)) (\u00b1+ b a)])<br/>\u00a0<br/>(define/match (\u00b1* a b)<br/>  [((\u00b1 x dx) (\u00b1 y dy)) (\u00b1 (* x y) (* x y (norm (/ dx x) (/ dy y))))]<br/>  [((\u00b1 x dx) c) (\u00b1 (* x c) (abs (* c dx)))]<br/>  [(_ (\u00b1 y dy)) (\u00b1* b a)])<br/>\u00a0<br/>(define/match (\u00b1- a [b #f])<br/>  [(a #f) (\u00b1* -1 a)]<br/>  [(a b) (\u00b1+ a (\u00b1* -1 b))])<br/>\u00a0<br/>(define/match (\u00b1/ a b)<br/>  [((\u00b1 x dx) (\u00b1 y dy)) (\u00b1 (/ x y) (/ x y (norm (/ dx x) (/ dy y))))]<br/>  [((\u00b1 _ _) c) (\u00b1* a (/ 1 c))])<br/>\u00a0<br/>(define/match (\u00b1expt a c)<br/>  [((\u00b1 x dx) c) (\u00b1 (expt x c) (abs (* (expt x c) (/ dx x))))])<br/>\u00a0<br/>(define/match (norm a b)<br/>  [((\u00b1 x dx) (\u00b1 y dy)) (\u00b1expt (\u00b1+ (\u00b1expt a 2) (\u00b1expt b 2)) 0.5)]<br/>  [(x y) (sqrt (+ (sqr x) (sqr y)))])<br/>\u00a0<br/>(define/match (\u00b1-&gt;string x [places 3])<br/>  [((\u00b1 x dx) p) (string-join (map (\u03bb (s) (real-&gt;decimal-string s p))<br/>                                  (list x dx))\" \u00b1 \")])<br/>\u00a0<br/>;; Test<br/>;;<br/>(define x1 (\u00b1 100 1.1))<br/>(define y1 (\u00b1 50 1.2))<br/>(define x2 (\u00b1 200 2.2))<br/>(define y2 (\u00b1 100 2.3))<br/>(norm (\u00b1- x1 x2) (\u00b1- y1 y2))</pre>"}, {"lang": "REXX", "loc": 25, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program calculates the distance between two points (2D)  with error propagation. */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> a b <span class=\"sy0\">.</span>                                           <span class=\"coMULTI\">/*obtain arguments from the CL*/</span><br/><span class=\"kw1\">if</span> a==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> a==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> a= <span class=\"st0\">'100\u00b11.1,  50\u00b11.2'</span>             <span class=\"coMULTI\">/*Not given? Then use default.*/</span><br/><span class=\"kw1\">if</span> b==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> b==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> b= <span class=\"st0\">'200\u00b12.2, 100\u00b12.3'</span>             <span class=\"coMULTI\">/* \"    \"      \"   \"     \"    */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> a  ax <span class=\"st0\">','</span> ay;     <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> b  bx <span class=\"st0\">','</span> <span class=\"kw2\">by</span>        <span class=\"coMULTI\">/*obtain X,Y from A &amp; B point.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> ax ax <span class=\"st0\">'\u00b1'</span> axe;    <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> bx bx <span class=\"st0\">'\u00b1'</span> bxE       <span class=\"coMULTI\">/*   \"   err   \"  Ax  and  Bx.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> ay ay <span class=\"st0\">'\u00b1'</span> aye;    <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> <span class=\"kw2\">by</span> <span class=\"kw2\">by</span> <span class=\"st0\">'\u00b1'</span> byE       <span class=\"coMULTI\">/*   \"    \"    \"  Ay   \"   By.*/</span><br/><span class=\"kw1\">if</span> axE==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> axE=<span class=\"nu0\">0</span>;     <span class=\"kw1\">if</span> bxE==<span class=\"st0\">\"\"</span>  <span class=\"kw3\">then</span> bxE=<span class=\"nu0\">0</span>;       <span class=\"coMULTI\">/*No error?  Then use default.*/</span><br/><span class=\"kw1\">if</span> ayE==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> ayE=<span class=\"nu0\">0</span>;     <span class=\"kw1\">if</span> byE==<span class=\"st0\">\"\"</span>  <span class=\"kw3\">then</span> byE=<span class=\"nu0\">0</span>;       <span class=\"coMULTI\">/* \"   \"       \"   \"     \"    */</span><br/>   <span class=\"kw1\">say</span> <span class=\"st0\">' A point (x,y)=   '</span> ax <span class=\"st0\">\"\u00b1\"</span> axE<span class=\"st0\">',   '</span> ay <span class=\"st0\">\"\u00b1\"</span> ayE   <span class=\"coMULTI\">/*display  A  point (with err)*/</span><br/>   <span class=\"kw1\">say</span> <span class=\"st0\">' B point (x.y)=   '</span> bx <span class=\"st0\">\"\u00b1\"</span> bxE<span class=\"st0\">',   '</span> <span class=\"kw2\">by</span> <span class=\"st0\">\"\u00b1\"</span> byE   <span class=\"coMULTI\">/*   \"     B    \"      \"   \"  */</span><br/>   <span class=\"kw1\">say</span>                                                    <span class=\"coMULTI\">/*blank line for the eyeballs.*/</span><br/>dx=ax-bx;  dxE=sqrt<span class=\"br0\">(</span>axE<span class=\"sy0\">**</span><span class=\"nu0\">2</span> + bxE<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;  xe=#<span class=\"br0\">(</span>dx, <span class=\"nu0\">2</span>, dxE<span class=\"br0\">)</span>   <span class=\"coMULTI\">/*compute  X distances (&amp; err)*/</span><br/>dy=ay-<span class=\"kw2\">by</span>;  dyE=sqrt<span class=\"br0\">(</span>ayE<span class=\"sy0\">**</span><span class=\"nu0\">2</span> + byE<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;  ye=#<span class=\"br0\">(</span>dy, <span class=\"nu0\">2</span>, dyE<span class=\"br0\">)</span>   <span class=\"coMULTI\">/*   \"     Y     \"      \"  \"  */</span><br/>D=sqrt<span class=\"br0\">(</span>dx<span class=\"sy0\">**</span><span class=\"nu0\">2</span> + dy<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>                                     <span class=\"coMULTI\">/*compute the   2D  distance. */</span><br/>   <span class=\"kw1\">say</span> <span class=\"st0\">'distance='</span> D <span class=\"st0\">\"\u00b1\"</span> #<span class=\"br0\">(</span>D<span class=\"sy0\">**</span><span class=\"nu0\">2</span>, <span class=\"sy0\">.</span>5, sqrt<span class=\"br0\">(</span>xE<span class=\"sy0\">**</span><span class=\"nu0\">2</span> + yE<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/*display  \"     \"      \"     */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>#: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">arg</span> x,p,e; <span class=\"kw1\">if</span> p=<span class=\"sy0\">.</span>5 <span class=\"kw3\">then</span> z=<span class=\"nu0\">1</span><span class=\"sy0\">/</span>sqrt<span class=\"br0\">(</span><span class=\"kw6\">abs</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw3\">else</span> z=<span class=\"kw6\">abs</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>p-<span class=\"nu0\">1</span><span class=\"br0\">)</span>; <span class=\"kw1\">return</span> p<span class=\"sy0\">*</span>e<span class=\"sy0\">*</span>z<br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>sqrt: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;  <span class=\"kw1\">if</span> x=<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;  d=<span class=\"kw2\">digits</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;  <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span>;  h=d+<span class=\"nu0\">6</span><br/>      <span class=\"kw1\">numeric</span> <span class=\"kw2\">form</span>;  <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"kw6\">format</span><span class=\"br0\">(</span>x,<span class=\"nu0\">2</span>,<span class=\"nu0\">1</span>,,<span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"st0\">'E0'</span> <span class=\"kw2\">with</span> g <span class=\"st0\">\"E\"</span> _ <span class=\"sy0\">.</span>;    g=g <span class=\"sy0\">*</span> <span class=\"sy0\">.</span>5<span class=\"st0\">'e'</span>_\u00a0% <span class=\"nu0\">2</span><br/>      m<span class=\"sy0\">.</span>=<span class=\"nu0\">9</span>;       <span class=\"kw1\">do</span> j=<span class=\"nu0\">0</span>  <span class=\"kw2\">while</span> h<span class=\"sy0\">&gt;</span><span class=\"nu0\">9</span>;       m<span class=\"sy0\">.</span>j=h;               h=h%2+<span class=\"nu0\">1</span>;        <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*j*/</span><br/>                  <span class=\"kw1\">do</span> k=j+<span class=\"nu0\">5</span>  <span class=\"kw2\">to</span> <span class=\"nu0\">0</span>  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>;   <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> m<span class=\"sy0\">.</span>k;  g=<span class=\"br0\">(</span>g+x<span class=\"sy0\">/</span>g<span class=\"br0\">)</span><span class=\"sy0\">*.</span>5;   <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*k*/</span><br/>      <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> d;                    <span class=\"kw1\">return</span> g<span class=\"sy0\">/</span><span class=\"nu0\">1</span></pre>"}, {"lang": "Ruby", "loc": 64, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> NumberWithUncertainty<br/>  <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span>number, error<span class=\"br0\">)</span><br/>    <span class=\"re1\">@num</span> = number<br/>    <span class=\"re1\">@err</span> = error.<span class=\"me1\">abs</span><br/>  <span class=\"kw1\">end</span><br/>  attr_reader <span class=\"re3\">:num</span>, <span class=\"re3\">:err</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">+</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> other.<span class=\"me1\">kind_of</span>?<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"kw1\">class</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>num <span class=\"sy0\">+</span> other.<span class=\"me1\">num</span>, <span class=\"kw4\">Math</span>::hypot<span class=\"br0\">(</span>err, other.<span class=\"me1\">err</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>num <span class=\"sy0\">+</span> other, err<span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> other.<span class=\"me1\">kind_of</span>?<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"kw1\">class</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>num <span class=\"sy0\">-</span> other.<span class=\"me1\">num</span>, <span class=\"kw4\">Math</span>::hypot<span class=\"br0\">(</span>err, other.<span class=\"me1\">err</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>num <span class=\"sy0\">-</span> other, err<span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> other.<span class=\"me1\">kind_of</span>?<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"kw1\">class</span><span class=\"br0\">)</span><br/>      prod = num <span class=\"sy0\">*</span> other.<span class=\"me1\">num</span><br/>      e = <span class=\"kw4\">Math</span>::hypot<span class=\"br0\">(</span><span class=\"br0\">(</span>prod <span class=\"sy0\">*</span> err <span class=\"sy0\">/</span> num<span class=\"br0\">)</span>, <span class=\"br0\">(</span>prod <span class=\"sy0\">*</span> other.<span class=\"me1\">err</span> <span class=\"sy0\">/</span> other.<span class=\"me1\">num</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>prod, e<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>num <span class=\"sy0\">*</span> other, <span class=\"br0\">(</span>err <span class=\"sy0\">*</span> other<span class=\"br0\">)</span>.<span class=\"me1\">abs</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">/</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> other.<span class=\"me1\">kind_of</span>?<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"kw1\">class</span><span class=\"br0\">)</span><br/>      quo = num <span class=\"sy0\">/</span> other.<span class=\"me1\">num</span><br/>      e = <span class=\"kw4\">Math</span>::hypot<span class=\"br0\">(</span><span class=\"br0\">(</span>quo <span class=\"sy0\">*</span> err <span class=\"sy0\">/</span> num<span class=\"br0\">)</span>, <span class=\"br0\">(</span>quo <span class=\"sy0\">*</span> other.<span class=\"me1\">err</span> <span class=\"sy0\">/</span> other.<span class=\"me1\">num</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>quo, e<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>num <span class=\"sy0\">/</span> other, <span class=\"br0\">(</span>err <span class=\"sy0\">*</span> other<span class=\"br0\">)</span>.<span class=\"me1\">abs</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">**</span><span class=\"br0\">(</span>exponent<span class=\"br0\">)</span><br/>    <span class=\"kw3\">Float</span><span class=\"br0\">(</span>exponent<span class=\"br0\">)</span> <span class=\"kw1\">rescue</span> <span class=\"kw3\">raise</span> <span class=\"kw4\">ArgumentError</span>, <span class=\"st0\">\"not an number: #{exponent}\"</span><br/>    prod = num <span class=\"sy0\">**</span> exponent<br/>    <span class=\"kw2\">self</span>.<span class=\"kw1\">class</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>prod, <span class=\"br0\">(</span>prod <span class=\"sy0\">*</span> exponent <span class=\"sy0\">*</span> err <span class=\"sy0\">/</span> num<span class=\"br0\">)</span>.<span class=\"me1\">abs</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> sqrt<br/>    <span class=\"kw2\">self</span> <span class=\"sy0\">**</span> <span class=\"nu0\">0.5</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> to_s<br/>    <span class=\"st0\">\"#{num} <span class=\"es0\">\\u</span>00b1 #{err}\"</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>x1 = NumberWithUncertainty.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">100</span>, <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><br/>y1 = NumberWithUncertainty.<span class=\"me1\">new</span><span class=\"br0\">(</span> <span class=\"nu0\">50</span>, <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><br/>x2 = NumberWithUncertainty.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">200</span>, <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><br/>y2 = NumberWithUncertainty.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">100</span>, <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x1 <span class=\"sy0\">-</span> x2<span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>y1 <span class=\"sy0\">-</span> y2<span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">sqrt</span></pre>"}, {"lang": "Scala", "loc": 43, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">lang</span>.<span class=\"me1\">Math</span>.<span class=\"sy0\">_</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Approx<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> \u03bd<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> \u03c3<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">(</span>a.\u03bd, a.\u03c3<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Number<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">(</span>n.<span class=\"me1\">doubleValue</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> toString <span class=\"sy0\">=</span> s<span class=\"st0\">\"$\u03bd \u00b1$\u03c3\"</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> +<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd + a.\u03bd, sqrt<span class=\"br0\">(</span>\u03c3 <span class=\"sy0\">*</span> \u03c3 + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> +<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd + d, \u03c3<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> -<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd - a.\u03bd, sqrt<span class=\"br0\">(</span>\u03c3 <span class=\"sy0\">*</span> \u03c3 + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> -<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd - d, \u03c3<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> <span class=\"sy0\">*</span><span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> v <span class=\"sy0\">=</span> \u03bd <span class=\"sy0\">*</span> a.\u03bd<br/>        Approx<span class=\"br0\">(</span>v, sqrt<span class=\"br0\">(</span>v <span class=\"sy0\">*</span> v <span class=\"sy0\">*</span> \u03c3 <span class=\"sy0\">*</span> \u03c3 / <span class=\"br0\">(</span>\u03bd <span class=\"sy0\">*</span> \u03bd<span class=\"br0\">)</span> + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3 / <span class=\"br0\">(</span>a.\u03bd <span class=\"sy0\">*</span> a.\u03bd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> <span class=\"sy0\">*</span><span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd <span class=\"sy0\">*</span> d, abs<span class=\"br0\">(</span>d <span class=\"sy0\">*</span> \u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> /<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> t <span class=\"sy0\">=</span> \u03bd / a.\u03bd<br/>        Approx<span class=\"br0\">(</span>t, sqrt<span class=\"br0\">(</span>t <span class=\"sy0\">*</span> t <span class=\"sy0\">*</span> \u03c3 <span class=\"sy0\">*</span> \u03c3 / <span class=\"br0\">(</span>\u03bd <span class=\"sy0\">*</span> \u03bd<span class=\"br0\">)</span> + a.\u03c3 <span class=\"sy0\">*</span> a.\u03c3 / <span class=\"br0\">(</span>a.\u03bd <span class=\"sy0\">*</span> a.\u03bd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> /<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span>\u03bd / d, abs<span class=\"br0\">(</span>d <span class=\"sy0\">*</span> \u03c3<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> ^<span class=\"br0\">(</span>d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> t <span class=\"sy0\">=</span> pow<span class=\"br0\">(</span>\u03bd, d<span class=\"br0\">)</span><br/>        Approx<span class=\"br0\">(</span>t, abs<span class=\"br0\">(</span>t <span class=\"sy0\">*</span> d <span class=\"sy0\">*</span> \u03c3 / \u03bd<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Approx <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> apply<span class=\"br0\">(</span>\u03bd<span class=\"sy0\">:</span> Double, \u03c3<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Approx<span class=\"br0\">(</span>\u03bd, \u03c3<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> NumericError <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> \u221a<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Approx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> a^<span class=\"nu0\">0.5</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x1 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">100.0</span>, <span class=\"nu0\">1.1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x2 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">50.0</span>, <span class=\"nu0\">1.2</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y1 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">200.0</span>, <span class=\"nu0\">2.2</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y2 <span class=\"sy0\">=</span> Approx<span class=\"br0\">(</span><span class=\"nu0\">100.0</span>, <span class=\"nu0\">2.3</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span>\u221a<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x1 - x2<span class=\"br0\">)</span>^<span class=\"nu0\">2.0</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span><span class=\"br0\">(</span>y1 - y2<span class=\"br0\">)</span>^<span class=\"nu0\">2.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\">// =&gt; 111.80339887498948 \u00b12.938366893361004</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Tcl", "loc": 54, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/>oo::<span class=\"me1\">class</span> create RAII-support <span class=\"br0\">{</span><br/>    constructor <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> end<br/>\t<span class=\"kw2\">lappend</span> end <span class=\"br0\">[</span>self<span class=\"br0\">]</span><br/>\ttrace add <span class=\"kw1\">variable</span> end unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my DieNicely<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    destructor <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">catch</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> end<br/>\t    trace remove <span class=\"kw1\">variable</span> end unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my DieNicely<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> <span class=\"kw1\">return</span> <span class=\"br0\">{</span><span class=\"br0\">{</span>level <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">incr</span> level<br/>\t<span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> end<br/>\t<span class=\"kw1\">upvar</span> <span class=\"re0\">$level</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> parent<br/>\ttrace remove <span class=\"kw1\">variable</span> end unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my DieNicely<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">lappend</span> parent <span class=\"br0\">[</span>self<span class=\"br0\">]</span><br/>\ttrace add <span class=\"kw1\">variable</span> parent unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my DieNicely<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">return</span> -level <span class=\"re0\">$level</span> <span class=\"br0\">[</span>self<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\"># Swallows arguments</span><br/>    <span class=\"kw1\">method</span> DieNicely args <span class=\"br0\">{</span>tailcall my destroy<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>oo::<span class=\"me1\">class</span> create RAII-class <span class=\"br0\">{</span><br/>    superclass oo::<span class=\"me1\">class</span><br/>    <span class=\"kw1\">method</span> <span class=\"kw1\">return</span> args <span class=\"br0\">{</span><br/>\t<span class=\"br0\">[</span>my new <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$args</span><span class=\"br0\">]</span> <span class=\"kw1\">return</span> <span class=\"nu0\">2</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> <span class=\"kw2\">unknown</span> <span class=\"br0\">{</span>m args<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> is double -strict <span class=\"re0\">$m</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">return</span> <span class=\"br0\">[</span>tailcall my new <span class=\"re0\">$m</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$args</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\tnext <span class=\"re0\">$m</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$args</span><br/>    <span class=\"br0\">}</span><br/>    unexport create <span class=\"kw2\">unknown</span><br/>    self <span class=\"kw1\">method</span> create args <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> c <span class=\"br0\">[</span>next <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$args</span><span class=\"br0\">]</span><br/>\too::<span class=\"me1\">define</span> <span class=\"re0\">$c</span> superclass <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> class superclass <span class=\"re0\">$c</span><span class=\"br0\">]</span> RAII-support<br/>\t<span class=\"kw1\">return</span> <span class=\"re0\">$c</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\"># Makes a convenient scope for limiting RAII lifetimes</span><br/><span class=\"kw1\">proc</span> scope <span class=\"br0\">{</span>script<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> v <span class=\"br0\">[</span><span class=\"kw2\">info</span> <span class=\"kw1\">global</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>array exists\u00a0::<span class=\"re0\">$v</span><span class=\"br0\">]</span> || <span class=\"br0\">[</span><span class=\"kw2\">string</span> match <span class=\"br0\">{</span> <span class=\"sy0\">*</span> <span class=\"br0\">}</span> <span class=\"re0\">$v</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><br/>\t<span class=\"kw2\">lappend</span> vars <span class=\"re0\">$v</span><br/>\t<span class=\"kw2\">lappend</span> vals <span class=\"br0\">[</span><span class=\"kw1\">set</span>\u00a0::<span class=\"re0\">$v</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    tailcall apply <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$vars</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> \\<br/>\ttry <span class=\"re0\">$script</span> on ok msg <span class=\"br0\">{</span><span class=\"re0\">$msg</span> <span class=\"kw1\">return</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><span class=\"kw1\">namespace</span> current<span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$vals</span><br/><span class=\"br0\">}</span></pre>"}]}