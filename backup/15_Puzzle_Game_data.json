{"task": "15_Puzzle_Game", "blocks": [{"lang": "Ada", "loc": 16, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">generic</span><br/>   Rows, Cols: Positive;<br/>   <span class=\"kw3\">with</span> <span class=\"kw3\">function</span> Name<span class=\"br0\">(</span>N: Natural<span class=\"br0\">)</span> <span class=\"kw1\">return</span> String; <span class=\"co1\">-- with Pre =&gt; (N &lt; Rows*Cols);</span><br/>   <span class=\"co1\">-- Name(0) shall return the name for the empty tile</span><br/><span class=\"kw3\">package</span> Generic_Puzzle <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">subtype</span> Row_Type <span class=\"kw1\">is</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">Rows</span>;<br/>   <span class=\"kw3\">subtype</span> Col_Type <span class=\"kw1\">is</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">Cols</span>;<br/>   <span class=\"kw3\">type</span> Moves <span class=\"kw1\">is</span> <span class=\"br0\">(</span>Up, Down, Left, Right<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Move_Arr <span class=\"kw1\">is</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>Moves<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Boolean;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Get_Point<span class=\"br0\">(</span>Row: Row_Type; Col: Col_Type<span class=\"br0\">)</span> <span class=\"kw1\">return</span> String;<br/>   <span class=\"kw3\">function</span> Possible <span class=\"kw1\">return</span> Move_Arr;<br/>   <span class=\"kw3\">procedure</span> Move<span class=\"br0\">(</span>The_Move: Moves<span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span> Generic_Puzzle;</pre>"}, {"lang": "APL", "loc": 25, "block": "<pre class=\"text highlighted_source\">fpg\u2190{\u2395IO\u21900<br/>    \u237a\u21904 4<br/>    (s\u2228.&lt;0)\u22282\u2260\u2374s\u2190\u237a:'invalid shape:'s<br/>    0\u2260\u2374\u2374\u2375:'invalid shuffle count:'\u2375<br/>    d\u2190d,-d\u2190\u21932 2\u23743\u21911<br/>    e\u2190\u00af1+\u2374c\u2190'\u2191\u2193\u2190\u2192\u25cb'<br/>    b\u2190w\u2190s\u2374w\u21901\u233d\u2373\u00d7/s<br/>    z\u2190\u2283{<br/>        z p\u2190\u2375<br/>        n\u2190(?\u2374p)\u2283p\u2190(p\u2261\u00a8(\u2282s)|p)/p\u2190(d~p)+\u2282z<br/>        b[z n]\u2190b[n z]<br/>        -\u2368\\n z<br/>    }\u2363\u2375\u22a2(s-1)0<br/>    \u2395\u2190b<br/>    \u236c{<br/>        b\u2261w:'win'<br/>        0=\u2374\u237a:\u235e\u2207 \u2375<br/>        e=i\u2190c\u2373m\u2190\u2283\u237a:'quit'<br/>        i&gt;e:\u235e\u2207 \u2375\u22a3\u2395\u2190'invalid direction:'m<br/>        n\u2262s|n\u2190\u2375+i\u2283d:\u235e\u2207 \u2375\u22a3'out of bounds:'m<br/>        b[\u2375 n]\u2190b[n \u2375]<br/>        \u2395\u2190(s\u00d70\u2260\u2374\u237a)\u2374b<br/>        (1\u2193\u237a)\u2207 n<br/>    }z<br/>}</pre>"}, {"lang": "Astro", "loc": 116, "block": "<pre class=\"python highlighted_source\"><span class=\"kw2\">type</span> Puzzle<span class=\"br0\">(</span>var items: <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> var position: -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun mainframe<span class=\"br0\">(</span>puz<span class=\"br0\">)</span>:<br/>    let d <span class=\"sy0\">=</span> puz.<span class=\"me1\">items</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> first: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> sep: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> last: <span class=\"st0\">'|'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> first: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> sep: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> last: <span class=\"st0\">'|'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> first: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> sep: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> last: <span class=\"st0\">'|'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">14</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">16</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> first: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> sep: <span class=\"st0\">'|'</span><span class=\"sy0\">,</span> last: <span class=\"st0\">'|'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>   \u00a0:<span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun format<span class=\"br0\">(</span>puz<span class=\"sy0\">,</span> ch<span class=\"br0\">)</span>:<br/>    match ch.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">length</span>:<br/>        | <span class=\"nu0\">1</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'  $ch  '</span><br/>        | <span class=\"nu0\">2</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'  $ch '</span><br/>        | <span class=\"nu0\">0</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'     '</span><br/>\u00a0<br/>fun change<span class=\"br0\">(</span>puz<span class=\"sy0\">,</span> to<span class=\"br0\">)</span>:<br/>    let fro <span class=\"sy0\">=</span> puz.<span class=\"me1\">position</span><br/>    <span class=\"kw1\">for</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">in</span> puz.<span class=\"me1\">items</span> where b <span class=\"sy0\">==</span> puz.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"kw2\">str</span> i<span class=\"br0\">)</span>:<br/>        to <span class=\"sy0\">=</span> a<br/>        <span class=\"kw1\">break</span><br/>\u00a0<br/>    swap<span class=\"br0\">(</span>puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>fro<span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>to<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    puz.<span class=\"me1\">position</span> <span class=\"sy0\">=</span> to<span class=\"sy0\">;</span><br/>\u00a0<br/>fun buildboard<span class=\"br0\">(</span>puz<span class=\"sy0\">,</span> difficulty<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">16</span>:<br/>        puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> puz.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"kw2\">str</span> i<span class=\"br0\">)</span><br/>\u00a0<br/>    var tmp <span class=\"sy0\">=</span> a<br/>    <span class=\"kw1\">for</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">in</span> puz.<span class=\"me1\">items</span> where b <span class=\"sy0\">==</span> <span class=\"st0\">'  16 '</span>:<br/>        puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'     '</span><br/>            tmp <span class=\"sy0\">=</span> a<br/>            <span class=\"kw1\">break</span><br/>\u00a0<br/>    puz.<span class=\"me1\">position</span> <span class=\"sy0\">=</span> tmp<br/>    let diff <span class=\"sy0\">=</span> match difficulty:<br/>        | <span class=\"nu0\">0</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">10</span><br/>        | <span class=\"nu0\">1</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span><br/>        | _ <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">100</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"nu0\">1</span>..<span class=\"me1\">diff</span>:<br/>        let lst <span class=\"sy0\">=</span> puz.<span class=\"me1\">validmoves</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        let lst1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> lst:<br/>            lst1.<span class=\"me1\">push</span><span class=\"sy0\">!</span> j.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        puz.<span class=\"me1\">change</span><span class=\"br0\">(</span>lst1<span class=\"br0\">[</span><span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> lst1.<span class=\"me1\">length</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun validmoves<span class=\"br0\">(</span>puz<span class=\"br0\">)</span>:<br/>    let pos <span class=\"sy0\">=</span> puz.<span class=\"me1\">position</span><br/>    match puz.<span class=\"me1\">position</span>:<br/>        | <span class=\"nu0\">6</span> <span class=\"kw1\">or</span> <span class=\"nu0\">7</span> <span class=\"kw1\">or</span> <span class=\"nu0\">10</span> <span class=\"kw1\">or</span> <span class=\"nu0\">11</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">5</span> <span class=\"kw1\">or</span> <span class=\"nu0\">9</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">8</span> <span class=\"kw1\">or</span> <span class=\"nu0\">12</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">2</span> <span class=\"kw1\">or</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">14</span> <span class=\"kw1\">or</span> <span class=\"nu0\">15</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">1</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">4</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">13</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        | <span class=\"nu0\">16</span> <span class=\"sy0\">=&gt;</span><br/>            puz.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\u00a0:<span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\u00a0<br/>fun mainframe<span class=\"br0\">(</span>puz<span class=\"br0\">)</span>:<br/>    var flag <span class=\"sy0\">=</span> false<br/>    <span class=\"kw1\">for</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">in</span> puz.<span class=\"me1\">items</span>:<br/>        <span class=\"kw1\">if</span> b <span class=\"sy0\">==</span> <span class=\"st0\">'     '</span>:<br/>            <span class=\"kw1\">pass</span><br/>        <span class=\"kw1\">else</span>:<br/>            flag <span class=\"sy0\">=</span> <span class=\"br0\">(</span>a <span class=\"sy0\">==</span> b.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    ..<br/>    <span class=\"kw1\">return</span> flag<br/>\u00a0<br/>let game <span class=\"sy0\">=</span> Puzzle<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>game.<span class=\"me1\">buildboard</span><span class=\"br0\">(</span><br/>    <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">'Enter the difficulty\u00a0: 0 1 2<span class=\"es0\">\\n</span>2 =&gt; highest 0=&gt; lowest<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>game.<span class=\"me1\">mainframe</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">'Enter 0 to exit'</span><br/>\u00a0<br/>loop:<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">'Hello user:<span class=\"es0\">\\n</span>To change the position just enter the no. near it'</span><br/>\u00a0<br/>    var lst <span class=\"sy0\">=</span> game.<span class=\"me1\">validmoves</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    var lst1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> lst:<br/>        lst1.<span class=\"me1\">push</span><span class=\"sy0\">!</span> i.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span>i.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>'</span><span class=\"sy0\">,</span> last: <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    let value <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> value <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">break</span><br/>    <span class=\"kw1\">elif</span> x <span class=\"kw1\">not</span> <span class=\"kw1\">in</span> lst1:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Wrong move'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span>:<br/>        game.<span class=\"me1\">change</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>\u00a0<br/>    game.<span class=\"me1\">mainframe</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> g.<span class=\"me1\">gameover</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">'You WON'</span><br/>        <span class=\"kw1\">break</span><br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 84, "block": "<pre class=\"autohotkey highlighted_source\">S <span class=\"sy0\">:=</span> <span class=\"nu0\">16</span><br/>Grid <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> Direc <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"Up\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Down\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Left\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Right\"</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> w <span class=\"sy0\">:=</span> S <span class=\"sy0\">*</span> <span class=\"nu0\">2.5</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">font</span></a><span class=\"sy0\">,</span> S<span class=\"re0\">%S%</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">text</span></a><span class=\"sy0\">,</span> y1<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><br/><span class=\"br0\">{</span><br/>\ti <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><br/>\t<span class=\"br0\">{</span><br/>\t\tj <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>\t\t<span class=\"kw1\">if</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">button</span></a><span class=\"sy0\">,</span> v<span class=\"re0\">%i%</span>_<span class=\"re0\">%j%</span> xs  y<span class=\"sy0\">+</span><span class=\"nu0\">1</span> w<span class=\"re0\">%w%</span> gButton <span class=\"sy0\">-</span>TabStop<span class=\"sy0\">,</span>\u00a0% Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span>j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> j <span class=\"sy0\">+</span> <span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">4</span><br/>\t\t<span class=\"kw1\">else</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">button</span></a><span class=\"sy0\">,</span> v<span class=\"re0\">%i%</span>_<span class=\"re0\">%j%</span> x<span class=\"sy0\">+</span><span class=\"nu0\">1</span> yp  w<span class=\"re0\">%w%</span> gButton <span class=\"sy0\">-</span>TabStop<span class=\"sy0\">,</span>\u00a0% Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span>j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> j <span class=\"sy0\">+</span> <span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">4</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> Hide<span class=\"sy0\">,</span> <span class=\"nu0\">4</span>_4<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a> <span class=\"sy0\">,</span>\u00a0% <span class=\"st0\">\"xs gScramble w\"</span> <span class=\"nu0\">4</span> <span class=\"sy0\">*</span> w <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> Scramble<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a><span class=\"sy0\">,,</span> <span class=\"nu0\">15</span> Puzzle<br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><span class=\"re2\">Scramble:<br/></span><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">500</span><br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> Rnd<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gosub.htm\"><span class=\"kw3\">gosub</span></a><span class=\"sy0\">,</span>\u00a0% <span class=\"st0\">\"move\"</span> Direc<span class=\"br0\">[</span>Rnd<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a>:<br/>x <span class=\"sy0\">:=</span> StrSplit<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_GuiControl\"><span class=\"kw2\">A_GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\"_\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span>1 <span class=\"sy0\">,</span> y <span class=\"sy0\">:=</span> StrSplit<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_GuiControl\"><span class=\"kw2\">A_GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\"_\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span>2<br/><span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Abs</span></a><span class=\"br0\">(</span>x<span class=\"sy0\">-</span>i<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> || <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Abs</span></a><span class=\"br0\">(</span>y<span class=\"sy0\">-</span>j<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> || <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Abs</span></a><span class=\"br0\">(</span>x<span class=\"sy0\">-</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Abs</span></a><span class=\"br0\">(</span>y<span class=\"sy0\">-</span>j<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gosub.htm\"><span class=\"kw3\">gosub</span></a><span class=\"sy0\">,</span>\u00a0% <span class=\"br0\">(</span>x<span class=\"sy0\">&gt;</span>i<span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\"moveDown\"</span>\u00a0: <span class=\"br0\">(</span>x<span class=\"sy0\">&lt;</span>i<span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\"moveUp\"</span>\u00a0: <span class=\"br0\">(</span>y<span class=\"sy0\">&gt;</span>j<span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\"moveRight\"</span>\u00a0: <span class=\"br0\">(</span>y<span class=\"sy0\">&lt;</span>j<span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\"moveLeft\"</span>\u00a0: <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><a href=\"http://www.autohotkey.com/docs/commands/_IfWinActive.htm\"><span class=\"kw5\">#IfWinActive</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">15</span> Puzzle<br/><span class=\"co1\">;------------------------------</span><br/><span class=\"kw6\">up</span>::<br/><span class=\"re2\">MoveUp:<br/></span><span class=\"kw1\">if</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">return</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> Hide<span class=\"sy0\">,</span>\u00a0% i<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"st0\">\"_\"</span> j<br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>\u00a0% i <span class=\"st0\">\"_\"</span> j<br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> <span class=\"re0\">%i%</span>_<span class=\"re0\">%j%</span><span class=\"sy0\">,</span>\u00a0%  Grid<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> j<span class=\"br0\">]</span><br/>Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Grid<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> j<span class=\"br0\">]</span><span class=\"sy0\">,</span> Grid<span class=\"br0\">[</span><span class=\"sy0\">--</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">16</span><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><span class=\"kw6\">Down</span>::<br/><span class=\"re2\">MoveDown:<br/></span><span class=\"kw1\">if</span> i<span class=\"sy0\">=</span><span class=\"nu0\">4</span><br/>\t<span class=\"kw1\">return</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> Hide<span class=\"sy0\">,</span>\u00a0% i<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"st0\">\"_\"</span> j<br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>\u00a0% i <span class=\"st0\">\"_\"</span> j<br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> <span class=\"re0\">%i%</span>_<span class=\"re0\">%j%</span><span class=\"sy0\">,</span>\u00a0%  Grid<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> j<span class=\"br0\">]</span><br/>Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Grid<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> j<span class=\"br0\">]</span><span class=\"sy0\">,</span> Grid<span class=\"br0\">[</span><span class=\"sy0\">++</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">16</span><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><span class=\"kw6\">Left</span>::<br/><span class=\"re2\">MoveLeft:<br/></span><span class=\"kw1\">if</span> j<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">return</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> Hide<span class=\"sy0\">,</span>\u00a0% i <span class=\"st0\">\"_\"</span> j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>\u00a0% i <span class=\"st0\">\"_\"</span> j<br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> <span class=\"re0\">%i%</span>_<span class=\"re0\">%j%</span><span class=\"sy0\">,</span>\u00a0%  Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">--</span>j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">16</span><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><span class=\"kw6\">Right</span>::<br/><span class=\"re2\">MoveRight:<br/></span><span class=\"kw1\">if</span> j<span class=\"sy0\">=</span><span class=\"nu0\">4</span><br/>\t<span class=\"kw1\">return</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> Hide<span class=\"sy0\">,</span>\u00a0% i <span class=\"st0\">\"_\"</span> j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span>\u00a0% i <span class=\"st0\">\"_\"</span> j<br/><a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> <span class=\"re0\">%i%</span>_<span class=\"re0\">%j%</span><span class=\"sy0\">,</span>\u00a0%  Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> Grid<span class=\"br0\">[</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">++</span>j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">16</span><br/><span class=\"kw1\">return</span><br/><span class=\"co1\">;------------------------------</span><br/><a href=\"http://www.autohotkey.com/docs/commands/_IfWinActive.htm\"><span class=\"kw5\">#IfWinActive</span></a><br/><span class=\"co1\">;------------------------------</span></pre>"}, {"lang": "BASIC", "loc": 107, "block": "<pre class=\"text highlighted_source\">10 REM 15-PUZZLE GAME<br/>20 REM COMMODORE BASIC 2.0<br/>30 REM ********************************<br/>40 GOSUB 400\u00a0: REM INTRO AND LEVEL<br/>50 GOSUB 510\u00a0: REM SETUP BOARD<br/>60 GOSUB 210\u00a0: REM PRINT PUZZLE<br/>70 PRINT \"TO MOVE A PIECE, ENTER ITS NUMBER:\"<br/>80 INPUT X<br/>90 GOSUB 730\u00a0: REM CHECK IF MOVE IS VALID<br/>100 IF MV=0 THEN PRINT \"WRONG MOVE\"\u00a0: GOSUB 1050\u00a0: GOTO 60<br/>110 D(Z)=X\u00a0: D(Y)=0<br/>120 GOSUB 210\u00a0: REM PRINT PUZZLE<br/>130 GOSUB 950\u00a0: REM CHECK IF PUZZLE COMPLETE<br/>140 IF PC THEN 160<br/>150 GOTO 70<br/>160 PRINT\"YOU WON!\"<br/>170 END<br/>180 REM<br/>190 REM *******************************<br/>200 REM PRINT/DRAW THE PUZZLE<br/>210 FOR P=1 TO 16<br/>220   IF D(P)=0 THEN D$(P)=\"     \"\u00a0: GOTO 260<br/>230   S$=STR$(D(P))<br/>240   N=LEN(S$)<br/>250   D$(P) = LEFT$(\"   \",3-N)+S$+\"  \"<br/>260 NEXT<br/>270 PRINT \"+-----+-----+-----+-----+\"<br/>280 PRINT \"!\"D$(1)\"!\"D$(2)\"!\"D$(3)\"!\"D$(4)\"!\"<br/>290 PRINT \"+-----+-----+-----+-----+\"<br/>300 PRINT \"!\"D$(5)\"!\"D$(6)\"!\"D$(7)\"!\"D$(8)\"!\"<br/>310 PRINT \"+-----+-----+-----+-----+\"<br/>320 PRINT \"!\"D$(9)\"!\"D$(10)\"!\"D$(11)\"!\"D$(12)\"!\"<br/>330 PRINT \"+-----+-----+-----+-----+\"<br/>340 PRINT \"!\"D$(13)\"!\"D$(14)\"!\"D$(15)\"!\"D$(16)\"!\"<br/>350 PRINT \"+-----+-----+-----+-----+\"<br/>360 RETURN<br/>370 REM<br/>380 REM *******************************<br/>390 REM INTRO AND LEVEL OF DIFFICULTY<br/>400 PRINT CHR$(147)<br/>410 DIM SH(3)\u00a0: SH(1)=10\u00a0: SH(2)=50\u00a0: SH(3)=100<br/>420 PRINT \"15 PUZZLE GAME FOR COMMODORE BASIC 2.0\"\u00a0: PRINT\u00a0: PRINT<br/>430 PRINT \"PLEASE ENTER LEVEL OF DIFFICULTY,\"<br/>440 PRINT \"1(EASY), 2(MEDIUM) OR 3(HARD):\";<br/>450 INPUT V<br/>460 IF V&lt;1 OR V&gt;3 THEN 440<br/>470 RETURN<br/>480 REM<br/>490 REM *******************************<br/>500 REM BUILD THE BOARD<br/>510 DIM D(16)\u00a0: DIM D$(16)\u00a0: REM BOARD PIECES<br/>520 REM SET PIECES IN CORRECT ORDER FIRST<br/>530 FOR P=1 TO 15<br/>540   D(P) = P<br/>550 NEXT<br/>560 D(16) = 0\u00a0: REM 0 = EMPTY PIECE/SLOT<br/>570 Z=16     \u00a0: REM Z = EMPTY POSITION<br/>580 PRINT: PRINT \"SHUFFLING PIECES\";<br/>590 FOR N=1 TO SH(V)<br/>600   PRINT\".\";<br/>610   X = INT(RND(0)*4)+1<br/>620   R = Z+(X=1)*4-(X=2)*4+(X=3)-(X=4)<br/>630   IF R&lt;1 OR R&gt;16 THEN 610<br/>640   D(Z)=D(R)<br/>650   Z=R<br/>660   D(Z)=0<br/>670 NEXT<br/>680 PRINT CHR$(147)<br/>690 RETURN<br/>700 REM<br/>710 REM *******************************<br/>720 REM CHECK IF MOVE IS VALID<br/>730 MV = 0<br/>740 IF X&lt;1 OR X&gt;15 THEN RETURN<br/>750 REM FIND POSITION OF PIECE X<br/>760 P=1<br/>770 IF D(P)=X THEN Y=P\u00a0: GOTO 810<br/>780 P=P+1\u00a0: IF P&gt;16 THEN PRINT \"UH OH!\"\u00a0: STOP<br/>790 GOTO 770<br/>800 REM FIND POSITION OF EMPTY PIECE<br/>810 P=1<br/>820 IF D(P)=0 THEN Z=P\u00a0: GOTO 860<br/>830 P=P+1\u00a0: IF P&gt;16 THEN PRINT \"UH OH!\"\u00a0: STOP<br/>840 GOTO 820<br/>850 PRINT Y;Z<br/>860 REM CHECK IF EMPTY PIECE IS ABOVE, BELOW, LEFT OR RIGHT TO PIECE X<br/>870 IF Y-4=Z THEN MV=1\u00a0: RETURN<br/>880 IF Y+4=Z THEN MV=1\u00a0: RETURN<br/>890 IF Y-1=Z THEN MV=1\u00a0: RETURN<br/>900 IF Y+1=Z THEN MV=1\u00a0: RETURN<br/>910 RETURN<br/>920 REM<br/>930 REM *******************************<br/>940 REM CHECK IF PUZZLE IS COMPLETE / GAME OVER<br/>950 PC = 0<br/>960 P=1<br/>970 IF D(P)&lt;&gt;P THEN RETURN<br/>980 P=P+1<br/>990 IF P&lt;16 THEN 970<br/>1000 PC = 1<br/>1010 RETURN<br/>1020 REM<br/>1030 REM ******************************<br/>1040 REM A SMALL DELAY<br/>1050 FOR T=0 TO 400<br/>1060 NEXT<br/>1070 RETURN</pre>"}, {"lang": "C", "loc": 22, "block": "<pre class=\"c highlighted_source\"><span class=\"coMULTI\">/* RosettaCode: Fifteen puzle game, C89, plain vanillia TTY, MVC, \u00a7 22 */</span><br/><span class=\"co2\">#define _CRT_SECURE_NO_WARNINGS</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"co2\">#define N 4</span><br/><span class=\"co2\">#define M 4</span><br/><span class=\"kw2\">enum</span> Move<span class=\"br0\">{</span>UP<span class=\"sy0\">,</span>DOWN<span class=\"sy0\">,</span>LEFT<span class=\"sy0\">,</span>RIGHT<span class=\"br0\">}</span><span class=\"sy0\">;</span><span class=\"kw4\">int</span> hR<span class=\"sy0\">;</span><span class=\"kw4\">int</span> hC<span class=\"sy0\">;</span><span class=\"kw4\">int</span> cc<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">[</span>M<span class=\"br0\">]</span><span class=\"sy0\">;</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> nS<span class=\"sy0\">=</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span><span class=\"kw4\">int</span><br/>update<span class=\"br0\">(</span><span class=\"kw2\">enum</span> Move m<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> dx<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> dy<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span>hR<br/><span class=\"sy0\">+</span>dy<span class=\"br0\">[</span>m<span class=\"br0\">]</span><span class=\"sy0\">;</span><span class=\"kw4\">int</span> j<span class=\"sy0\">=</span>hC<span class=\"sy0\">+</span>dx<span class=\"br0\">[</span>m<span class=\"br0\">]</span><span class=\"sy0\">;</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">&amp;&amp;</span>i<span class=\"sy0\">&lt;</span>N<span class=\"sy0\">&amp;&amp;</span>j<span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span><span class=\"sy0\">&amp;&amp;</span>j<span class=\"sy0\">&lt;</span>M<span class=\"br0\">)</span><span class=\"br0\">{</span>cc<span class=\"br0\">[</span>hR<span class=\"br0\">]</span><span class=\"br0\">[</span>hC<span class=\"br0\">]</span><span class=\"sy0\">=</span>cc<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span>cc<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>hR<span class=\"sy0\">=</span>i<span class=\"sy0\">;</span>hC<span class=\"sy0\">=</span>j<span class=\"sy0\">;</span><span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"kw4\">void</span> setup<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>N<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>j<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/><span class=\"sy0\">;</span>j<span class=\"sy0\">&lt;</span>M<span class=\"sy0\">;</span>j<span class=\"sy0\">++</span><span class=\"br0\">)</span>cc<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">=</span>i<span class=\"sy0\">*</span>M<span class=\"sy0\">+</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>cc<span class=\"br0\">[</span>N<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>M<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>hR<span class=\"sy0\">=</span>N<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>hC<span class=\"sy0\">=</span>M<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>k<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"kw1\">while</span><span class=\"br0\">(</span>k<span class=\"sy0\">&lt;</span>nS<span class=\"br0\">)</span>k<span class=\"sy0\">+=</span>update<span class=\"br0\">(</span><br/><span class=\"br0\">(</span><span class=\"kw2\">enum</span> Move<span class=\"br0\">)</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"kw4\">int</span> isEnd<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">;</span> <span class=\"kw4\">int</span> k<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>N<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>j<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/><span class=\"sy0\">;</span>j<span class=\"sy0\">&lt;</span>M<span class=\"sy0\">;</span>j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>k<span class=\"sy0\">&lt;</span>N<span class=\"sy0\">*</span>M<span class=\"br0\">)</span><span class=\"sy0\">&amp;&amp;</span><span class=\"br0\">(</span>cc<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">!=</span>k<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"kw4\">void</span> show<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">;</span><br/><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>N<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>j<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>j<span class=\"sy0\">&lt;</span>M<span class=\"sy0\">;</span>j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>cc<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>j<span class=\"sy0\">!=</span>M<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">?</span><span class=\"st0\">\"\u00a0%2d \"</span><br/><span class=\"sy0\">:</span><span class=\"st0\">\"\u00a0%2d <span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>cc<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">else</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>j<span class=\"sy0\">!=</span>M<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">?</span><span class=\"st0\">\"\u00a0%2s \"</span><span class=\"sy0\">:</span><span class=\"st0\">\"\u00a0%2s <span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> disp<span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> s<span class=\"br0\">)</span><span class=\"br0\">{</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"kw2\">enum</span> Move get<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw4\">int</span> c<span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"sy0\">;;</span><span class=\"br0\">)</span><span class=\"br0\">{</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><br/><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"enter u/d/l/r\u00a0: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>c<span class=\"sy0\">=</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getchar.html\"><span class=\"kw3\">getchar</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">while</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getchar.html\"><span class=\"kw3\">getchar</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!=</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">switch</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"nu0\">27</span><span class=\"sy0\">:</span><br/><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exit.html\"><span class=\"kw3\">exit</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">case</span><span class=\"st0\">'d'</span><span class=\"sy0\">:</span><span class=\"kw1\">return</span> UP<span class=\"sy0\">;</span><span class=\"kw1\">case</span><span class=\"st0\">'u'</span><span class=\"sy0\">:</span><span class=\"kw1\">return</span> DOWN<span class=\"sy0\">;</span><span class=\"kw1\">case</span><span class=\"st0\">'r'</span><span class=\"sy0\">:</span><span class=\"kw1\">return</span> LEFT<span class=\"sy0\">;</span><span class=\"kw1\">case</span><span class=\"st0\">'l'</span><span class=\"sy0\">:</span><span class=\"kw1\">return</span><br/>RIGHT<span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"kw4\">void</span> pause<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"br0\">{</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getchar.html\"><span class=\"kw3\">getchar</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"br0\">{</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/srand.html\"><span class=\"kw3\">srand</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span>NULL<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">do</span> setup<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">while</span><span class=\"br0\">(</span>isEnd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>show<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>isEnd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span>update<span class=\"br0\">(</span>get<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>show<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span>disp<span class=\"br0\">(</span><br/><span class=\"st0\">\"You win\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> pause<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 160, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Windows.Forms</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> FifteenPuzzle<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> gridSize <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"co1\">//Standard 15 puzzle is 4x4</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">bool</span> evenSized <span class=\"sy0\">=</span> gridSize <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> blockCount <span class=\"sy0\">=</span> gridSize <span class=\"sy0\">*</span> gridSize<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> last <span class=\"sy0\">=</span> blockCount <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> buttonSize <span class=\"sy0\">=</span> <span class=\"nu0\">50</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> buttonMargin <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> <span class=\"co1\">//default = 3</span><br/>    <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> formEdge <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> Random rnd <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> Font buttonFont <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Font<span class=\"br0\">(</span><span class=\"st0\">\"Arial\"</span>, 15<span class=\"sy0\">.</span>75F, FontStyle<span class=\"sy0\">.</span><span class=\"me1\">Regular</span>, GraphicsUnit<span class=\"sy0\">.</span><span class=\"me1\">Point</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">byte</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">readonly</span> Button<span class=\"br0\">[</span><span class=\"br0\">]</span> buttons <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Button<span class=\"br0\">[</span>blockCount<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">readonly</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> grid <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">int</span><span class=\"br0\">[</span>blockCount<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">readonly</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> positionOf <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">int</span><span class=\"br0\">[</span>blockCount<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> moves <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    DateTime start<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        FifteenPuzzle p <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> FifteenPuzzle<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Form f <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"me1\">BuildForm</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Application<span class=\"sy0\">.</span><span class=\"me1\">Run</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> FifteenPuzzle<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> blockCount<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            grid<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            positionOf<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Form BuildForm<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Button startButton <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Button <span class=\"br0\">{</span><br/>            Font <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Font<span class=\"br0\">(</span><span class=\"st0\">\"Arial\"</span>, 9<span class=\"sy0\">.</span>75F, FontStyle<span class=\"sy0\">.</span><span class=\"me1\">Regular</span>, GraphicsUnit<span class=\"sy0\">.</span><span class=\"me1\">Point</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">byte</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<br/>            Size <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Size<span class=\"br0\">(</span><span class=\"nu0\">86</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span>,<br/>            Location <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span>formEdge,<br/>                <span class=\"br0\">(</span>buttonSize <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> gridSize <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">+</span> formEdge<span class=\"br0\">)</span>,<br/>            Text <span class=\"sy0\">=</span> <span class=\"st0\">\"New Game\"</span>,<br/>            UseVisualStyleBackColor <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        startButton<span class=\"sy0\">.</span><span class=\"me1\">Click</span> <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>sender, e<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span> size <span class=\"sy0\">=</span> buttonSize <span class=\"sy0\">*</span> gridSize <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">*</span> gridSize <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> formEdge <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>        Form form <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Form <span class=\"br0\">{</span><br/>            Text <span class=\"sy0\">=</span> <span class=\"st0\">\"Fifteen\"</span>,<br/>            ClientSize <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Size<span class=\"br0\">(</span>width<span class=\"sy0\">:</span> size, height<span class=\"sy0\">:</span> size <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> startButton<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        form<span class=\"sy0\">.</span><span class=\"me1\">SuspendLayout</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> index <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> index <span class=\"sy0\">&lt;</span> blockCount<span class=\"sy0\">;</span> index<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            Button button <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Button <span class=\"br0\">{</span><br/>                Font <span class=\"sy0\">=</span> buttonFont,<br/>                Size <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Size<span class=\"br0\">(</span>buttonSize, buttonSize<span class=\"br0\">)</span>,<br/>                <span class=\"co1\">//Margin = new Padding(buttonMargin),</span><br/>                Text <span class=\"sy0\">=</span> <span class=\"br0\">(</span>index <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<br/>                UseVisualStyleBackColor <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><br/>            <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>            SetLocation<span class=\"br0\">(</span>button, index<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            form<span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>button<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            buttons<span class=\"br0\">[</span>index<span class=\"br0\">]</span> <span class=\"sy0\">=</span> button<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> index<span class=\"sy0\">;</span><br/>            button<span class=\"sy0\">.</span><span class=\"me1\">Click</span> <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>sender, e<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> ButtonClick<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        form<span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>startButton<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        form<span class=\"sy0\">.</span><span class=\"me1\">ResumeLayout</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> form<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> ButtonClick<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>buttons<span class=\"br0\">[</span>last<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Visible</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> target <span class=\"sy0\">=</span> positionOf<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> gridSize <span class=\"sy0\">==</span> positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">/</span> gridSize<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> target<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                Swap<span class=\"br0\">(</span>last, grid<span class=\"br0\">[</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                moves<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> target<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                Swap<span class=\"br0\">(</span>last, grid<span class=\"br0\">[</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                moves<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">%</span> gridSize <span class=\"sy0\">==</span> positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">%</span> gridSize<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> target<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                Swap<span class=\"br0\">(</span>last, grid<span class=\"br0\">[</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">+</span> gridSize<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                moves<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> target<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                Swap<span class=\"br0\">(</span>last, grid<span class=\"br0\">[</span>positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">-</span> gridSize<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                moves<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Solved<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            TimeSpan elapsed <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"me1\">Now</span> <span class=\"sy0\">-</span> start<span class=\"sy0\">;</span><br/>            elapsed <span class=\"sy0\">=</span> TimeSpan<span class=\"sy0\">.</span><span class=\"me1\">FromSeconds</span><span class=\"br0\">(</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Round</span><span class=\"br0\">(</span>elapsed<span class=\"sy0\">.</span><span class=\"me1\">TotalSeconds</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            buttons<span class=\"br0\">[</span>last<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Visible</span> <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>            MessageBox<span class=\"sy0\">.</span><span class=\"me1\">Show</span><span class=\"br0\">(</span>$<span class=\"st0\">\"Solved in {moves} moves. Time: {elapsed}\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> Solved<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Enumerable<span class=\"sy0\">.</span><span class=\"me1\">Range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, blockCount <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">All</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> positionOf<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> SetLocation<span class=\"br0\">(</span>Button button, <span class=\"kw4\">int</span> index<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> row <span class=\"sy0\">=</span> index <span class=\"sy0\">/</span> gridSize, column <span class=\"sy0\">=</span> index <span class=\"sy0\">%</span> gridSize<span class=\"sy0\">;</span><br/>        button<span class=\"sy0\">.</span><span class=\"me1\">Location</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><br/>            <span class=\"br0\">(</span>buttonSize <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> column <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">+</span> formEdge,<br/>            <span class=\"br0\">(</span>buttonSize <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> row <span class=\"sy0\">+</span> buttonMargin <span class=\"sy0\">+</span> formEdge<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> Shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> blockCount<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> rnd<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span>i, blockCount<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> g <span class=\"sy0\">=</span> grid<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            grid<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> grid<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            grid<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> g<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> blockCount<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            positionOf<span class=\"br0\">[</span>grid<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            SetLocation<span class=\"br0\">(</span>buttons<span class=\"br0\">[</span>grid<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span>, i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>Solvable<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> Swap<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">//Swap any 2 blocks</span><br/>\u00a0<br/>        buttons<span class=\"br0\">[</span>last<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Visible</span> <span class=\"sy0\">=</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>        moves <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        start <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"me1\">Now</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> Solvable<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">bool</span> parity <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> blockCount <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> blockCount <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>positionOf<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> positionOf<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> parity <span class=\"sy0\">=</span> <span class=\"sy0\">!</span>parity<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>evenSized <span class=\"sy0\">&amp;&amp;</span> positionOf<span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">/</span> gridSize <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> parity <span class=\"sy0\">=</span> <span class=\"sy0\">!</span>parity<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> parity<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> Swap<span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Point location <span class=\"sy0\">=</span> buttons<span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span><span class=\"sy0\">;</span><br/>        buttons<span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span> <span class=\"sy0\">=</span> buttons<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span><span class=\"sy0\">;</span><br/>        buttons<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span> <span class=\"sy0\">=</span> location<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span> p <span class=\"sy0\">=</span> positionOf<span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        positionOf<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">=</span> positionOf<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        positionOf<span class=\"br0\">[</span>b<span class=\"br0\">]</span> <span class=\"sy0\">=</span> p<span class=\"sy0\">;</span><br/>\u00a0<br/>        grid<span class=\"br0\">[</span>positionOf<span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span><br/>        grid<span class=\"br0\">[</span>positionOf<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 96, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;vector&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"kw2\">class</span> p15 <span class=\"br0\">{</span><br/><span class=\"kw2\">public</span> <span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> play<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">bool</span> p <span class=\"sy1\">=</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>        std<span class=\"sy4\">::</span><span class=\"me2\">string</span> a<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span> p <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            createBrd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>isDone<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span> drawBrd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span>getMove<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>            drawBrd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>Congratulations!<span class=\"es1\">\\n</span>Play again (Y/N)?\"</span><span class=\"sy4\">;</span><br/>            std<span class=\"sy4\">::</span><span class=\"kw3\">cin</span> <span class=\"sy1\">&gt;&gt;</span> a<span class=\"sy4\">;</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> a <span class=\"sy3\">!</span><span class=\"sy1\">=</span> <span class=\"st0\">\"Y\"</span> <span class=\"sy3\">&amp;&amp;</span> a <span class=\"sy3\">!</span><span class=\"sy1\">=</span> <span class=\"st0\">\"y\"</span> <span class=\"br0\">)</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> createBrd<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> v<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> <span class=\"nu0\">16</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span> brd<span class=\"br0\">[</span>i <span class=\"sy2\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> i<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>        brd<span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">=</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">3</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> <span class=\"nu0\">1000</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            getCandidates<span class=\"br0\">(</span> v <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            move<span class=\"br0\">(</span> v<span class=\"br0\">[</span><span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> v.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            v.<span class=\"me1\">clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> move<span class=\"br0\">(</span> <span class=\"kw4\">int</span> d <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> t <span class=\"sy1\">=</span> x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> <span class=\"nu0\">4</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">switch</span><span class=\"br0\">(</span> d <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy4\">:</span> y<span class=\"sy2\">--</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy4\">:</span> x<span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy4\">:</span> y<span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">8</span><span class=\"sy4\">:</span> x<span class=\"sy2\">--</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        brd<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"sy1\">=</span> brd<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>        brd<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> getCandidates<span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"sy3\">&amp;</span> v <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> v.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> x <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> v.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> <span class=\"nu0\">8</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> y <span class=\"sy1\">&lt;</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> v.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span> y <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> v.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> drawBrd<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> r<span class=\"sy4\">;</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+----+----+----+----+<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                r <span class=\"sy1\">=</span> brd<span class=\"br0\">[</span>x <span class=\"sy2\">+</span> y <span class=\"sy2\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>                std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"| \"</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> r <span class=\"sy1\">&lt;</span> <span class=\"nu0\">10</span> <span class=\"br0\">)</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>r <span class=\"br0\">)</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"  \"</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">else</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> r <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>            std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"|<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"+----+----+----+----+<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> getMove<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> v<span class=\"sy4\">;</span> getCandidates<span class=\"br0\">(</span> v <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> p<span class=\"sy4\">;</span> getTiles<span class=\"br0\">(</span> p, v <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> i<span class=\"sy4\">;</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"kw2\">true</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>Possible moves: \"</span><span class=\"sy4\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> p.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span><span class=\"sy4\">;</span><br/>            <span class=\"kw4\">int</span> z<span class=\"sy4\">;</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cin</span> <span class=\"sy1\">&gt;&gt;</span> z<span class=\"sy4\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> p.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> z <span class=\"sy1\">==</span> p<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span> move<span class=\"br0\">(</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> getTiles<span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"sy3\">&amp;</span> p, std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"sy3\">&amp;</span> v <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> t <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> t <span class=\"sy1\">&lt;</span> v.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> t<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> xx <span class=\"sy1\">=</span> x, yy <span class=\"sy1\">=</span> y<span class=\"sy4\">;</span><br/>            <span class=\"kw1\">switch</span><span class=\"br0\">(</span> v<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy4\">:</span> yy<span class=\"sy2\">--</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy4\">:</span> xx<span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy4\">:</span> yy<span class=\"sy2\">++</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">case</span> <span class=\"nu0\">8</span><span class=\"sy4\">:</span> xx<span class=\"sy2\">--</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>            p.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> brd<span class=\"br0\">[</span>xx <span class=\"sy2\">+</span> yy <span class=\"sy2\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">bool</span> isDone<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> <span class=\"nu0\">15</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> brd<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> i <span class=\"sy2\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> brd<span class=\"br0\">[</span><span class=\"nu0\">16</span><span class=\"br0\">]</span>, x, y<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span><span class=\"sy2\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">srand</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw4\">unsigned</span> <span class=\"br0\">)</span><span class=\"kw3\">time</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    p15 p<span class=\"sy4\">;</span> p.<span class=\"me1\">play</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 151, "block": "<pre class=\"cobol highlighted_source\">         &gt;&gt;<span class=\"kw1\">SOURCE</span> FORMAT FREE<br/><span class=\"co1\">*&gt; This code is dedicated to the public domain</span><br/><span class=\"co1\">*&gt; This is GNUCOBOL 2.0</span><br/><span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> fifteen<span class=\"sy0\">.</span><br/>environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>repository<span class=\"sy0\">.</span> <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/><span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  r <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  r-empty <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  r-<span class=\"kw2\">to</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  r-<span class=\"kw3\">from</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  c <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  c-empty <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  c-<span class=\"kw2\">to</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  c-<span class=\"kw3\">from</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  display-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>    <span class=\"nu0\">03</span>  display-row <span class=\"kw3\">occurs</span> <span class=\"nu0\">4</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">05</span>  display-cell <span class=\"kw3\">occurs</span> <span class=\"nu0\">4</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  tile-<span class=\"kw3\">number</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  tile-flags <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  display-<span class=\"kw2\">move</span> <span class=\"kw3\">value</span> <span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>    <span class=\"nu0\">03</span>  tile-id <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  row-separator <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">21</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"kw3\">all</span> <span class=\"st0\">'.'</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  column-separator <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">' . '</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  inversions <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  current-tile <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"nu0\">01</span>  winning-<span class=\"kw2\">display</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span><br/>        <span class=\"st0\">'01020304'</span><br/>    &amp;   <span class=\"st0\">'05060708'</span><br/>    &amp;   <span class=\"st0\">'09101112'</span><br/>    &amp;   <span class=\"st0\">'13141500'</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>start-fifteen<span class=\"sy0\">.</span><br/>    <span class=\"kw2\">display</span> <span class=\"st0\">'start fifteen puzzle'</span><br/>    <span class=\"kw2\">display</span> <span class=\"st0\">'    enter a two-digit tile number and press &lt;enter&gt; to move'</span><br/>    <span class=\"kw2\">display</span> <span class=\"st0\">'    press &lt;enter&gt; only to exit'</span><br/>\u00a0<br/>    *&gt; tables <span class=\"kw3\">with</span> an odd <span class=\"kw3\">number</span> <span class=\"kw3\">of</span> inversions are <span class=\"kw3\">not</span> solvable<br/>    <span class=\"kw2\">perform</span> initialize-<span class=\"kw3\">table</span> <span class=\"kw3\">with</span> <span class=\"kw3\">test</span> <span class=\"kw3\">after</span> <span class=\"kw2\">until</span> inversions <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw2\">perform</span> show-<span class=\"kw3\">table</span><br/>    <span class=\"kw2\">accept</span> display-<span class=\"kw2\">move</span><br/>    <span class=\"kw2\">perform</span> <span class=\"kw2\">until</span> display-<span class=\"kw2\">move</span> <span class=\"sy0\">=</span> <span class=\"kw3\">spaces</span><br/>        <span class=\"kw2\">perform</span> move-tile<br/>        <span class=\"kw2\">perform</span> show-<span class=\"kw3\">table</span><br/>        <span class=\"kw2\">move</span> <span class=\"kw3\">spaces</span> <span class=\"kw2\">to</span> display-<span class=\"kw2\">move</span><br/>        <span class=\"kw2\">accept</span> display-<span class=\"kw2\">move</span><br/>    end-<span class=\"kw2\">perform</span><br/>    <span class=\"kw3\">stop</span> <span class=\"kw3\">run</span><br/>    <span class=\"sy0\">.</span><br/>initialize-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">compute</span> tile-<span class=\"kw3\">number</span> <span class=\"sy0\">=</span> <span class=\"kw4\">random</span><span class=\"br0\">(</span>seconds-past-midnight<span class=\"br0\">)</span> *&gt; seed only<br/>    <span class=\"kw2\">move</span> <span class=\"kw3\">spaces</span> <span class=\"kw2\">to</span> tile-flags<br/>    <span class=\"kw2\">move</span> <span class=\"nu0\">0</span> <span class=\"kw2\">to</span> current-tile inversions<br/>    <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> r <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> r &gt; <span class=\"nu0\">4</span><br/>    <span class=\"kw3\">after</span> c <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> c &gt; <span class=\"nu0\">4</span><br/>        <span class=\"kw2\">perform</span> <span class=\"kw3\">with</span> <span class=\"kw3\">test</span> <span class=\"kw3\">after</span><br/>        <span class=\"kw2\">until</span> tile-flags<span class=\"br0\">(</span>tile-<span class=\"kw3\">number</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span>:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">space</span><br/>            <span class=\"kw2\">compute</span> tile-<span class=\"kw3\">number</span> <span class=\"sy0\">=</span> <span class=\"kw4\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\"> * </span><span class=\"nu0\">100</span><br/>            <span class=\"kw2\">compute</span> tile-<span class=\"kw3\">number</span> <span class=\"sy0\">=</span> <span class=\"kw4\">mod</span><span class=\"br0\">(</span>tile-<span class=\"kw3\">number</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>        end-<span class=\"kw2\">perform</span><br/>        <span class=\"kw2\">move</span> <span class=\"st0\">'x'</span> <span class=\"kw2\">to</span> tile-flags<span class=\"br0\">(</span>tile-<span class=\"kw3\">number</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span>:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> tile-<span class=\"kw3\">number</span> &gt; <span class=\"nu0\">0</span> <span class=\"kw3\">and</span> &lt; current-tile<br/>            <span class=\"kw2\">add</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> inversions<br/>        end-<span class=\"kw1\">if</span><br/>        <span class=\"kw2\">move</span> tile-<span class=\"kw3\">number</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span> current-tile<br/>    end-<span class=\"kw2\">perform</span><br/>    <span class=\"kw2\">compute</span> inversions <span class=\"sy0\">=</span> <span class=\"kw4\">mod</span><span class=\"br0\">(</span>inversions<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">.</span><br/>show-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>    <span class=\"kw1\">if</span> display-<span class=\"kw3\">table</span> <span class=\"sy0\">=</span> winning-<span class=\"kw2\">display</span><br/>        <span class=\"kw2\">display</span> <span class=\"st0\">'winning'</span><br/>    end-<span class=\"kw1\">if</span><br/>    <span class=\"kw2\">display</span> <span class=\"kw3\">space</span> row-separator<br/>    <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> r <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> r &gt; <span class=\"nu0\">4</span><br/>        <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> c <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> c &gt; <span class=\"nu0\">4</span><br/>            <span class=\"kw2\">display</span> column-separator <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>            <span class=\"kw1\">if</span> display-cell<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">00</span><br/>                <span class=\"kw2\">display</span> <span class=\"st0\">'  '</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>                <span class=\"kw2\">move</span> r <span class=\"kw2\">to</span> r-empty<br/>                <span class=\"kw2\">move</span> c <span class=\"kw2\">to</span> c-empty<br/>            <span class=\"kw3\">else</span><br/>                <span class=\"kw2\">display</span> display-cell<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>            end-<span class=\"kw1\">if</span><br/>        end-<span class=\"kw2\">perform</span><br/>        <span class=\"kw2\">display</span> column-separator<br/>    end-<span class=\"kw2\">perform</span><br/>    <span class=\"kw2\">display</span> <span class=\"kw3\">space</span> row-separator<br/>    <span class=\"sy0\">.</span><br/>move-tile<span class=\"sy0\">.</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">not</span> <span class=\"br0\">(</span>tile-id <span class=\"kw3\">numeric</span> <span class=\"kw3\">and</span> tile-id &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">01</span> <span class=\"kw3\">and</span> &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">display</span> <span class=\"st0\">'invalid tile number'</span><br/>        <span class=\"kw2\">exit</span> paragraph<br/>    end-<span class=\"kw1\">if</span><br/>\u00a0<br/>    *&gt; find the entered tile-id row <span class=\"kw3\">and</span> <span class=\"kw3\">column</span> <span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span><br/>    <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> r <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> r &gt; <span class=\"nu0\">4</span><br/>    <span class=\"kw3\">after</span> c <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> c &gt; <span class=\"nu0\">4</span><br/>        <span class=\"kw1\">if</span> display-cell<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span> <span class=\"sy0\">=</span> tile-id<br/>            <span class=\"kw2\">exit</span> <span class=\"kw2\">perform</span><br/>        end-<span class=\"kw1\">if</span><br/>    end-<span class=\"kw2\">perform</span><br/>\u00a0<br/>    *&gt; show-<span class=\"kw3\">table</span> filled <span class=\"br0\">(</span>r-empty<span class=\"sy0\">,</span>c-empty<span class=\"br0\">)</span><br/>    <span class=\"kw2\">evaluate</span> <span class=\"kw3\">true</span><br/>    <span class=\"kw3\">when</span> r <span class=\"sy0\">=</span> r-empty<br/>        <span class=\"kw1\">if</span> c-empty &lt; c<br/>            *&gt; shift <span class=\"kw3\">left</span><br/>            <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> c-<span class=\"kw2\">to</span> <span class=\"kw3\">from</span> c-empty <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> c-<span class=\"kw2\">to</span> &gt; c<br/>                <span class=\"kw2\">compute</span> c-<span class=\"kw3\">from</span> <span class=\"sy0\">=</span> c-<span class=\"kw2\">to</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span><br/>                <span class=\"kw2\">move</span> display-cell<span class=\"br0\">(</span>r-empty<span class=\"sy0\">,</span>c-<span class=\"kw3\">from</span><span class=\"br0\">)</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r-empty<span class=\"sy0\">,</span>c-<span class=\"kw2\">to</span><span class=\"br0\">)</span><br/>            end-<span class=\"kw2\">perform</span><br/>        <span class=\"kw3\">else</span><br/>           *&gt; shift <span class=\"kw3\">right</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> c-<span class=\"kw2\">to</span> <span class=\"kw3\">from</span> c-empty <span class=\"kw3\">by</span> -<span class=\"nu0\">1</span> <span class=\"kw2\">until</span> c-<span class=\"kw2\">to</span> &lt; c<br/>               <span class=\"kw2\">compute</span> c-<span class=\"kw3\">from</span> <span class=\"sy0\">=</span> c-<span class=\"kw2\">to</span><span class=\"sy0\"> - </span><span class=\"nu0\">1</span><br/>               <span class=\"kw2\">move</span> display-cell<span class=\"br0\">(</span>r-empty<span class=\"sy0\">,</span>c-<span class=\"kw3\">from</span><span class=\"br0\">)</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r-empty<span class=\"sy0\">,</span>c-<span class=\"kw2\">to</span><span class=\"br0\">)</span><br/>           end-<span class=\"kw2\">perform</span><br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"kw2\">move</span> <span class=\"nu0\">00</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span><br/>    <span class=\"kw3\">when</span> c <span class=\"sy0\">=</span> c-empty<br/>        <span class=\"kw1\">if</span> r-empty &lt; r<br/>            *&gt;shift <span class=\"kw3\">up</span><br/>            <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> r-<span class=\"kw2\">to</span> <span class=\"kw3\">from</span> r-empty <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> r-<span class=\"kw2\">to</span> &gt; r<br/>                <span class=\"kw2\">compute</span> r-<span class=\"kw3\">from</span> <span class=\"sy0\">=</span> r-<span class=\"kw2\">to</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span><br/>                <span class=\"kw2\">move</span> display-cell<span class=\"br0\">(</span>r-<span class=\"kw3\">from</span><span class=\"sy0\">,</span>c-empty<span class=\"br0\">)</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r-<span class=\"kw2\">to</span><span class=\"sy0\">,</span>c-empty<span class=\"br0\">)</span><br/>            end-<span class=\"kw2\">perform</span><br/>        <span class=\"kw3\">else</span><br/>            *&gt; shift <span class=\"kw3\">down</span><br/>            <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> r-<span class=\"kw2\">to</span> <span class=\"kw3\">from</span> r-empty <span class=\"kw3\">by</span> -<span class=\"nu0\">1</span> <span class=\"kw2\">until</span> r-<span class=\"kw2\">to</span> &lt; r<br/>                <span class=\"kw2\">compute</span> r-<span class=\"kw3\">from</span> <span class=\"sy0\">=</span> r-<span class=\"kw2\">to</span><span class=\"sy0\"> - </span><span class=\"nu0\">1</span><br/>                <span class=\"kw2\">move</span> display-cell<span class=\"br0\">(</span>r-<span class=\"kw3\">from</span><span class=\"sy0\">,</span>c-empty<span class=\"br0\">)</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r-<span class=\"kw2\">to</span><span class=\"sy0\">,</span>c-empty<span class=\"br0\">)</span><br/>            end-<span class=\"kw2\">perform</span><br/>        end-<span class=\"kw1\">if</span><br/>        <span class=\"kw2\">move</span> <span class=\"nu0\">00</span> <span class=\"kw2\">to</span> display-cell<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>c<span class=\"br0\">)</span><br/>    <span class=\"kw3\">when</span> <span class=\"kw3\">other</span><br/>         <span class=\"kw2\">display</span> <span class=\"st0\">'invalid move'</span><br/>    end-<span class=\"kw2\">evaluate</span><br/>    <span class=\"sy0\">.</span><br/><span class=\"kw3\">end</span> <span class=\"kw3\">program</span> fifteen<span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"sy0\">|</span><span class=\"nu0\">15</span><span class=\"sy0\">|::</span><span class=\"me0\">main</span></pre>"}, {"lang": "Forth", "loc": 149, "block": "<pre class=\"text highlighted_source\">\\ in Forth, you do many things on your own. This word is used to define 2D arrays<br/>: 2D-ARRAY ( height width )<br/>\tCREATE DUP ,<br/>\t* CELLS ALLOT<br/>\tDOES&gt; ( y x baseaddress )<br/>\t\tROT    ( x baseaddress y )<br/>\t\tOVER @ ( x baseaddress y width )<br/>\t\t*      ( x baseaddress y*width )<br/>\t\tROT    ( baseaddress y*width x )<br/>\t\t+ 1+ CELLS +<br/>;<br/>\u00a0<br/>require random.fs<br/>\u00a0<br/>HERE SEED\u00a0!<br/>\u00a0<br/>0 CONSTANT MOVE-UP<br/>1 CONSTANT MOVE-DOWN<br/>2 CONSTANT MOVE-LEFT<br/>3 CONSTANT MOVE-RIGHT<br/>\u00a0<br/>4 CONSTANT NROWS<br/>4 CONSTANT NCOLS<br/>NROWS NCOLS * CONSTANT BOARDSIZE<br/>\u00a0<br/>NROWS 1- CONSTANT Y-MAX<br/>NCOLS 1- CONSTANT X-MAX<br/>\u00a0<br/>1000 CONSTANT NSHUFFLES<br/>\u00a0<br/>CREATE HOLE-X CELL ALLOT<br/>CREATE HOLE-Y CELL ALLOT<br/>NROWS NCOLS 2D-ARRAY BOARD<br/>\u00a0<br/>: DIE-MOVECONST .\" Unknown move constant:\" . BYE\u00a0;<br/>: ESC #ESC EMIT\u00a0;<br/>: CLS<br/>\tESC .\" [2J\"<br/>\tESC .\" [H\"<br/>;<br/>\u00a0<br/>: NEW-HOLE-POS ( move -- new-y new-x )<br/>\tCASE<br/>\t\tMOVE-UP    OF HOLE-Y @ 1- HOLE-X @ ENDOF<br/>\t\tMOVE-DOWN  OF HOLE-Y @ 1+ HOLE-X @ ENDOF<br/>\t\tMOVE-LEFT  OF HOLE-Y @ HOLE-X @ 1- ENDOF<br/>\t\tMOVE-RIGHT OF HOLE-Y @ HOLE-X @ 1+ ENDOF<br/>\t\tDIE-MOVECONST<br/>\tENDCASE<br/>;<br/>\u00a0<br/>: MOVE-VALID? ( move -- valid? )<br/>\tCASE<br/>\t\tMOVE-UP    OF HOLE-Y @ 0&gt; ENDOF<br/>\t\tMOVE-DOWN  OF HOLE-Y @ Y-MAX &lt; ENDOF<br/>\t\tMOVE-LEFT  OF HOLE-X @ 0&gt; ENDOF<br/>\t\tMOVE-RIGHT OF HOLE-X @ X-MAX &lt; ENDOF<br/>\t\tDIE-MOVECONST<br/>\tENDCASE<br/>;<br/>\u00a0<br/>: GAME-UPDATE ( move -- success? )<br/>\tDUP MOVE-VALID? INVERT IF DROP FALSE EXIT THEN<br/>\tNEW-HOLE-POS ( new-y new-x )<br/>\t2DUP BOARD @ HOLE-Y @ HOLE-X @ BOARD\u00a0!<br/>\t2DUP BOARD 0 SWAP\u00a0!<br/>\tHOLE-X\u00a0! HOLE-Y\u00a0! TRUE<br/>;<br/>\u00a0<br/>: INIT-DESIRED-NUM ( y x -- num )<br/>\tSWAP NROWS * + 1+ DUP BOARDSIZE = IF DROP 0 THEN<br/>;<br/>\u00a0<br/>: RESET-BOARD ( -- )<br/>\tNROWS 0\u00a0?DO<br/>\t\tNCOLS 0\u00a0?DO<br/>\t\t\tJ I INIT-DESIRED-NUM J I BOARD\u00a0!<br/>\t\tLOOP<br/>\tLOOP<br/>;<br/>\u00a0<br/>: GAME-SETUP ( -- )<br/>\tRESET-BOARD<br/>\tY-MAX HOLE-Y\u00a0!<br/>\tX-MAX HOLE-X\u00a0!<br/>\tNSHUFFLES 0\u00a0?DO<br/>\t\tBEGIN<br/>\t\t\t4 RANDOM GAME-UPDATE<br/>\t\tUNTIL<br/>\tLOOP<br/>;<br/>\u00a0<br/>: GAME-FINISHED? ( -- finished? )<br/>\t0<br/>\tNROWS 0\u00a0?DO<br/>\t\tNCOLS 0\u00a0?DO<br/>\t\t\tJ I INIT-DESIRED-NUM J I BOARD @ = IF<br/>\t\t\t\t1+<br/>\t\t\tTHEN<br/>\t\tLOOP<br/>\tLOOP<br/>\tBOARDSIZE =<br/>;<br/>\u00a0<br/>: SHOW-BOARD ( -- )<br/>\tCLS CR<br/>\tNROWS 0\u00a0?DO<br/>\t\tNCOLS 0\u00a0?DO<br/>\t\t\tJ I BOARD @ DUP 0&lt;&gt; IF<br/>\t\t\t\tSPACE 2 U.R SPACE<br/>\t\t\tELSE<br/>\t\t\t\tDROP 4 SPACES<br/>\t\t\tTHEN<br/>\t\tLOOP<br/>\t\tCR<br/>\tLOOP<br/>\tCR<br/>;<br/>\u00a0<br/>: GET-MOVE ( -- move )<br/>\tBEGIN<br/>\t\tKEY CASE<br/>\t\t\t#EOF OF BYE ENDOF<br/>\t\t\t#ESC OF BYE ENDOF<br/>\t\t\t[CHAR] q OF BYE ENDOF<br/>\t\t\t[CHAR] Q OF BYE ENDOF<br/>\t\t\t[CHAR] k OF MOVE-UP TRUE ENDOF<br/>\t\t\t[CHAR] K OF MOVE-UP TRUE ENDOF<br/>\t\t\t[CHAR] j OF MOVE-DOWN TRUE ENDOF<br/>\t\t\t[CHAR] J OF MOVE-DOWN TRUE ENDOF<br/>\t\t\t[CHAR] h OF MOVE-LEFT TRUE ENDOF<br/>\t\t\t[CHAR] H OF MOVE-LEFT TRUE ENDOF<br/>\t\t\t[CHAR] l OF MOVE-RIGHT TRUE ENDOF<br/>\t\t\t[CHAR] L OF MOVE-RIGHT TRUE ENDOF<br/>\t\t\tFALSE SWAP<br/>\t\tENDCASE<br/>\tUNTIL<br/>;<br/>\u00a0<br/>: PLAY ( -- )<br/>\tGAME-SETUP<br/>\tSHOW-BOARD<br/>\tBEGIN GAME-FINISHED? INVERT WHILE<br/>\t\tGET-MOVE GAME-UPDATE SHOW-BOARD<br/>\tREPEAT<br/>\t.\" You win!\" CR<br/>;<br/>\u00a0<br/>PLAY BYE</pre>"}, {"lang": "Fortran", "loc": 1, "block": "<pre class=\"fortran highlighted_source\">LOCZ <span class=\"sy0\">=</span> <span class=\"kw4\">MINLOC</span><span class=\"br0\">(</span>BOARD<span class=\"br0\">)</span>\t<span class=\"co1\">!Find the zero. 0 = BOARD(LOCZ(1),LOCZ(2)) == BOARD(ZC,ZR)</span></pre>"}, {"lang": "Gambas", "loc": 299, "block": "<pre class=\"gambas highlighted_source\"><span class=\"co1\">'Charlie Ogier (C) 15PuzzleGame 24/04/2017 V0.1.0 Licenced under MIT</span><br/><span class=\"co1\">'Inspiration came from: -</span><br/><span class=\"co1\">''http://rosettacode.org/wiki/15_Puzzle_Game</span><br/><span class=\"co1\">''Bugs or comments to <a class=\"__cf_email__\" data-cfemail=\"4a283f2d390a29252d232f3864292527\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></span><br/><span class=\"co1\">'Written in Gambas 3.9.2 - Updated on the Gambas Farm 01/05/2017</span><br/><span class=\"co1\">'Updated so that the message and the Title show the same amount of moves 01/06/2017</span><br/><span class=\"co1\">'Form now expandable. Font height automated. Form size and position saved 06/06/2107</span><br/>\u00a0<br/><span class=\"co1\">'Simulate playing the 15 - game(puzzle)         Yes in GUI</span><br/><span class=\"co1\">'Generate a random start position               Yes</span><br/><span class=\"co1\">'Prompt the user for which piece To move        No</span><br/><span class=\"co1\">'Validate if the move is legal(possible)        Yes</span><br/><span class=\"co1\">'Display the game(puzzle) as pieces are moved   Yes in GUI</span><br/><span class=\"co1\">'Announce when the puzzle is solved             Yes</span><br/><span class=\"co1\">'Possibly keep track of the number of moves     Yes</span><br/>\u00a0<br/>byPos <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span>                                             <span class=\"co1\">'Stores the position of the 'Tiles'</span><br/>siMoves <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a>                                                <span class=\"co1\">'Stores the amount of moves</span><br/>hTimer <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/timer\"><span class=\"kw2\">Timer</span></a>                                                 <span class=\"co1\">'Timer</span><br/>dTimerStart <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/date\"><span class=\"kw4\">Date</span></a>                                             <span class=\"co1\">'Stores the start time </span><br/>dTimerDiff <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/date\"><span class=\"kw4\">Date</span></a>                                              <span class=\"co1\">'Stores the time from the start to now</span><br/>bTimerOn <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/boolean\"><span class=\"kw4\">Boolean</span></a>                                             <span class=\"co1\">'To know if the Timer is running</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Form_Open<span class=\"br0\">(</span><span class=\"br0\">)</span>                                          <span class=\"co1\">'Form opens</span><br/>\u00a0<br/><a href=\"http://www.google.com/search?hl=en&amp;q=settings+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Settings</span></a>.<a href=\"http://gambasdoc.org/help/lang/read\"><span class=\"kw1\">read</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>, <span class=\"st0\">\"Window\"</span><span class=\"br0\">)</span>                                     <span class=\"co1\">'Get details of the last window position and size</span><br/><a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>                                                         <span class=\"co1\">'With the Form..</span><br/>  .<span class=\"me1\">Padding</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>                                                  <span class=\"co1\">'Pad the edges</span><br/>  .<span class=\"me1\">Arrangement</span> <span class=\"sy0\">=</span> Arrange.<span class=\"me1\">Row</span>                                    <span class=\"co1\">'Arrange the Form</span><br/>  .<span class=\"me1\">Title</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"15PuzzleGame v0.3.0\"</span>                                <span class=\"co1\">'Set the Form Title</span><br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a><br/>\u00a0<br/>BuildForm                                                       <span class=\"co1\">'Go to the BuildForm routine</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> BuildForm<span class=\"br0\">(</span><span class=\"br0\">)</span>                                          <span class=\"co1\">'To add items to the Form</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> hButton <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=button+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Button</span></a>                                           <span class=\"co1\">'We need some Buttons</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byRand, byTest <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a>                                      <span class=\"co1\">'Various variables</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> bOK <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/boolean\"><span class=\"kw4\">Boolean</span></a>                                              <span class=\"co1\">'Used to stop duplicate numbers being added</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> bSolvable <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/boolean\"><span class=\"kw4\">Boolean</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/repeat\"><span class=\"kw1\">Repeat</span></a>                                                          <span class=\"co1\">'Repeat until the puzzle is solvable    </span><br/>  <a href=\"http://gambasdoc.org/help/lang/do\"><span class=\"kw1\">Do</span></a>                                                            <span class=\"co1\">'Start of a Do loop to create 0 to 15 in random order</span><br/>    byRand <span class=\"sy0\">=</span> Rand<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">15</span><span class=\"br0\">)</span>                                        <span class=\"co1\">'Get a random number between 0 and 15</span><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byRand <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> byRand <span class=\"sy0\">=</span> <span class=\"nu0\">99</span>                              <span class=\"co1\">'Change 0 to 99 for the Blank space</span><br/>    bOK <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                                  <span class=\"co1\">'Set bOK to True</span><br/>    <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> byTest <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> byPos                                    <span class=\"co1\">'For each number stored in the array byPos</span><br/>      <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byRand <span class=\"sy0\">=</span> byTest <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> bOK <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/false\"><span class=\"kw1\">False</span></a>                       <span class=\"co1\">'Check to see if it already exists, if it does set bOK to False</span><br/>    <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> bOK <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> byPos.<span class=\"me1\">Add</span><span class=\"br0\">(</span>byRand<span class=\"br0\">)</span>                               <span class=\"co1\">'If not a duplicate then add it to the array</span><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byPos.<a href=\"http://gambasdoc.org/help/lang/max\"><span class=\"kw2\">max</span></a> <span class=\"sy0\">=</span> <span class=\"nu0\">15</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/break\"><span class=\"kw1\">Break</span></a>                                <span class=\"co1\">'Once the array has 16 numbers get out of here. 99 is used for the blank space</span><br/>  <a href=\"http://gambasdoc.org/help/lang/loop\"><span class=\"kw1\">Loop</span></a><br/>  bSolvable <span class=\"sy0\">=</span> IsItSolvable<span class=\"br0\">(</span><span class=\"br0\">)</span>                                    <span class=\"co1\">'Go to the 'check if puzzle is solvable' routine</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/not\"><span class=\"kw5\">Not</span></a> bSolvable <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> byPos.<span class=\"me1\">clear</span>                             <span class=\"co1\">'If it's not solvable then clear byPos</span><br/><a href=\"http://gambasdoc.org/help/lang/until\"><span class=\"kw1\">Until</span></a> bSolvable <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                          <span class=\"co1\">'Repeat until the puzzle is solvable</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> byRand <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">15</span>                                            <span class=\"co1\">'Loop</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byPos<span class=\"br0\">[</span>byRand<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">99</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                    <span class=\"co1\">'Check if value is 99 as this is where the blank space will go</span><br/>    AddPanel                                                    <span class=\"co1\">'Go to the AddPanel routine to add the blank space</span><br/>    <a href=\"http://gambasdoc.org/help/lang/continue\"><span class=\"kw1\">Continue</span></a>                                                    <span class=\"co1\">'Skip to the end of the loop</span><br/>  <a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/>  hButton <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=button+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Button</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <span class=\"st0\">\"AllButtons\"</span>                      <span class=\"co1\">'Add a new button to the Form, all buttons grouped as 'AllButtons'</span><br/>  <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a> hButton                                                  <span class=\"co1\">'With the following properties</span><br/>    .<span class=\"me1\">Text</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>byPos<span class=\"br0\">[</span>byRand<span class=\"br0\">]</span><span class=\"br0\">)</span>                                  <span class=\"co1\">'Add Button text </span><br/>    .<span class=\"me1\">Tag</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>byPos<span class=\"br0\">[</span>byRand<span class=\"br0\">]</span><span class=\"br0\">)</span>                                   <span class=\"co1\">'Add a Tag</span><br/>    .<span class=\"me1\">Height</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Height</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>                              <span class=\"co1\">'Set the Button height</span><br/>    .<span class=\"me1\">Width</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Width</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>                                <span class=\"co1\">'Set the Button width</span><br/>    .<a href=\"http://www.google.com/search?hl=en&amp;q=font+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Font</span></a>.<span class=\"me1\">Bold</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                           <span class=\"co1\">'Set the font to Bold</span><br/>    .<a href=\"http://www.google.com/search?hl=en&amp;q=font+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Font</span></a>.<span class=\"me1\">Size</span> <span class=\"sy0\">=</span> <span class=\"nu0\">16</span>                                             <span class=\"co1\">'Set Font size</span><br/>  <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/>AddTimer                                                        <span class=\"co1\">'Go to the AddTimer routine</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> AddPanel<span class=\"br0\">(</span><span class=\"br0\">)</span>                                           <span class=\"co1\">'Routine to add an invisible panel that is the blank area</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=hpanel+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">hPanel</span></a> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=panel+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Panel</span></a>                                             <span class=\"co1\">'We need a Panel</span><br/>\u00a0<br/><a href=\"http://www.google.com/search?hl=en&amp;q=hpanel+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">HPanel</span></a> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=panel+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Panel</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a><span class=\"br0\">)</span>                                          <span class=\"co1\">'Add the Panel to the Form</span><br/><a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=hpanel+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">HPanel</span></a>                                                     <span class=\"co1\">'With the following Properties</span><br/>  .<span class=\"me1\">Tag</span> <span class=\"sy0\">=</span> <span class=\"nu0\">99</span>                                                     <span class=\"co1\">'Set a Tag to 99</span><br/>  .<span class=\"me1\">Height</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Height</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>                                <span class=\"co1\">'Set the height</span><br/>  .<span class=\"me1\">Width</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Width</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>                                  <span class=\"co1\">'Set the width</span><br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> AddTimer<span class=\"br0\">(</span><span class=\"br0\">)</span>                                           <span class=\"co1\">'To add a Timer</span><br/>\u00a0<br/>hTimer <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/timer\"><span class=\"kw2\">Timer</span></a> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <span class=\"st0\">\"MyTimer\"</span>                                 <span class=\"co1\">'Add a Timer</span><br/>hTimer.<span class=\"me1\">Delay</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1000</span>                                             <span class=\"co1\">'Set the timer delay </span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> MyTimer_Timer<span class=\"br0\">(</span><span class=\"br0\">)</span>                                      <span class=\"co1\">'Timer</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Title</span> <span class=\"sy0\">=</span> siMoves <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" Moves \"</span>                                  <span class=\"co1\">'Set the Form Title to show the amount of moves taken</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> dTimerStart <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                             <span class=\"co1\">'If a start time has been set then</span><br/>  dTimerDiff <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/time\"><span class=\"kw2\">Time</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/now\"><span class=\"kw2\">Now</span></a><span class=\"br0\">)</span> <span class=\"sy0\">-</span> dTimerStart                          <span class=\"co1\">'Calculate the time difference between StartTime and Now</span><br/>  <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Title</span> <span class=\"sy0\">&amp;=</span> <span class=\"st0\">\" - \"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>dTimerDiff<span class=\"br0\">)</span>                           <span class=\"co1\">'Add the time taken to the Form Title</span><br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> AllButtons_Click<span class=\"br0\">(</span><span class=\"br0\">)</span>                                   <span class=\"co1\">'What to do when a Button is clicked</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byLast <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/last\"><span class=\"kw1\">Last</span></a>.<span class=\"me1\">Tag</span>                                   <span class=\"co1\">'Get the Tag of the Button clicked</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byTemp, byCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a>                                     <span class=\"co1\">'Various variables</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byCheck <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">88</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">88</span><span class=\"br0\">]</span>                        <span class=\"co1\">'Used for checking for the blank space</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byWChgeck <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a><span class=\"br0\">[</span><span class=\"nu0\">16</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> oObj <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/object\"><span class=\"kw4\">Object</span></a>                                              <span class=\"co1\">'We need to enumerate Objects</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> oObj <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Children</span>                                    <span class=\"co1\">'For each Object (Buttons in this case) that are Children of the Form..</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> oObj.<span class=\"me1\">Tag</span> <span class=\"sy0\">=</span> byLast <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/break\"><span class=\"kw1\">Break</span></a>                               <span class=\"co1\">'If the Tag of the Button matches then we know the position of the Button on the form so get out of here</span><br/>  <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> byCount                                                   <span class=\"co1\">'Increase the value of byCount</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/select\"><span class=\"kw1\">Select</span></a> <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> byCount                                             <span class=\"co1\">'Depending on the position of the Button</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">0</span>                                                        <span class=\"co1\">'e.g 0 then we need to check positions 1 &amp; 4 for the blank</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">1</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">2</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">3</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">4</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">5</span>                                                        <span class=\"co1\">'e.g 5 then we need to check positions 1, 4, 6 &amp; 9 for the blank</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">6</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">7</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">8</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">9</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">13</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">10</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">14</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">11</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">12</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">13</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">13</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">14</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">14</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">13</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><br/>  <a href=\"http://gambasdoc.org/help/lang/case\"><span class=\"kw1\">Case</span></a> <span class=\"nu0\">15</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><br/>    byCheck<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">14</span><br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/select\"><span class=\"kw1\">Select</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> byTemp <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> byCheck                                      <span class=\"co1\">'For each value in byCheck</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byTemp <span class=\"sy0\">=</span> <span class=\"nu0\">88</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/break\"><span class=\"kw1\">Break</span></a>                                     <span class=\"co1\">'If byTemp = 88 then get out of here</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byPos<span class=\"br0\">[</span>byTemp<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">99</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                    <span class=\"co1\">'If the position checked is 99 (the blank) then..</span><br/>    byPos<span class=\"br0\">[</span>byTemp<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/last\"><span class=\"kw1\">Last</span></a>.<span class=\"me1\">Text</span>                                   <span class=\"co1\">'Set the new position of the Tile in byPos</span><br/>    byPos<span class=\"br0\">[</span>byCount<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">99</span>                                         <span class=\"co1\">'Set the existing Tile position to = 99 (blank)</span><br/>    <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> siMoves                                                 <span class=\"co1\">'Inc the amount of moves made</span><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/not\"><span class=\"kw5\">Not</span></a> bTimerOn <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                        <span class=\"co1\">'If the Timer is now needed then </span><br/>      dTimerStart <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/time\"><span class=\"kw2\">Time</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/now\"><span class=\"kw2\">Now</span></a><span class=\"br0\">)</span>                                   <span class=\"co1\">'Set the Start time to NOW</span><br/>      hTimer.<span class=\"me1\">start</span>                                              <span class=\"co1\">'Start the Timer</span><br/>      bTimerOn <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                           <span class=\"co1\">'Set bTimerOn to True </span><br/>    <a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/>    <a href=\"http://gambasdoc.org/help/lang/break\"><span class=\"kw1\">Break</span></a>                                                       <span class=\"co1\">'Get out of here</span><br/>  <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/>RebuildForm                                                     <span class=\"co1\">'Go to the RebuilForm routine</span><br/>CheckIfPuzzleCompleted                                          <span class=\"co1\">'Check to see if the puzzle has been solved</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> CheckIfPuzzleCompleted<span class=\"br0\">(</span><span class=\"br0\">)</span>                             <span class=\"co1\">'Is the puzzle is complete</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byTest <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">99</span><span class=\"br0\">]</span> <span class=\"co1\">'byPos will equal this if it is completed</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a>                                            <span class=\"co1\">'Counter</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> bCompleted <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/boolean\"><span class=\"kw4\">Boolean</span></a> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                <span class=\"co1\">'Completed?</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sMessage <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a>                                          <span class=\"co1\">'String to store the display message</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">15</span>                                           <span class=\"co1\">'Loop through the byPos</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byPos<span class=\"br0\">[</span>siCount<span class=\"br0\">]</span> <span class=\"sy0\">&lt;&gt;</span> byTest<span class=\"br0\">[</span>siCount<span class=\"br0\">]</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                     <span class=\"co1\">'If the position does not match the completed position then..</span><br/>    bCompleted <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/false\"><span class=\"kw1\">False</span></a>                                          <span class=\"co1\">'Set bCompleted to False</span><br/>    <a href=\"http://gambasdoc.org/help/lang/break\"><span class=\"kw1\">Break</span></a>                                                       <span class=\"co1\">'Get out of here</span><br/>  <a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> bCompleted <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                              <span class=\"co1\">'If the puzzle is completed then</span><br/>  hTimer.<a href=\"http://gambasdoc.org/help/lang/stop\"><span class=\"kw1\">Stop</span></a>                                                   <span class=\"co1\">'Stop the timer</span><br/>  <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Title</span> <span class=\"sy0\">=</span> siMoves <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" Moves \"</span>                                <span class=\"co1\">'Set the Form Title to show the amount of moves taken</span><br/>  sMessage <span class=\"sy0\">=</span> <span class=\"st0\">\"Congratulations!!<span class=\"es0\">\\n</span>\"</span>                              <span class=\"co1\">'Build sMessage</span><br/>  sMessage <span class=\"sy0\">&amp;=</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siMoves<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" Moves<span class=\"es0\">\\n</span>\"</span>                         <span class=\"co1\">'Build sMessage</span><br/>  sMessage <span class=\"sy0\">&amp;=</span> <span class=\"st0\">\"Time = \"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>dTimerDiff<span class=\"br0\">)</span>                       <span class=\"co1\">'Build sMessage</span><br/>  <a href=\"http://www.google.com/search?hl=en&amp;q=message+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Message</span></a><span class=\"br0\">(</span>sMessage, <span class=\"st0\">\"OK\"</span><span class=\"br0\">)</span>                                       <span class=\"co1\">'Put up a congratulatory message</span><br/>  <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<a href=\"http://gambasdoc.org/help/lang/close\"><span class=\"kw1\">Close</span></a>                                                      <span class=\"co1\">'Close the form</span><br/><a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> RebuildForm<span class=\"br0\">(</span><span class=\"br0\">)</span>                                        <span class=\"co1\">'To clear the Form and rebuild with the Tiles in the new postion</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> hButton <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=button+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Button</span></a>                                           <span class=\"co1\">'We need Buttons</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byCount, byTemp <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a>                                     <span class=\"co1\">'Various variables</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siFontH <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Children</span>.<span class=\"me1\">clear</span>                                               <span class=\"co1\">'Clear the Form of all Objects</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> byTemp <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> byPos                                        <span class=\"co1\">'For each 'Position'</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byTemp <span class=\"sy0\">=</span> <span class=\"nu0\">99</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                           <span class=\"co1\">'If the Position's value is 99 then it's the space</span><br/>    AddPanel                                                    <span class=\"co1\">'Go to the AddPanel routine</span><br/>  <a href=\"http://gambasdoc.org/help/lang/else\"><span class=\"kw1\">Else</span></a>                                                          <span class=\"co1\">'If the Position's value is NOT 99 then </span><br/>    hButton <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=button+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Button</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <span class=\"st0\">\"AllButtons\"</span>                    <span class=\"co1\">'Create a new Button</span><br/>  <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a> hButton                                                  <span class=\"co1\">'With the following properties</span><br/>    .<span class=\"me1\">Text</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>byPos<span class=\"br0\">[</span>byCount<span class=\"br0\">]</span><span class=\"br0\">)</span>                                 <span class=\"co1\">'Text as stored in byPos</span><br/>    .<span class=\"me1\">Tag</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>byPos<span class=\"br0\">[</span>byCount<span class=\"br0\">]</span><span class=\"br0\">)</span>                                  <span class=\"co1\">'Tag as stored in byPos</span><br/>    .<span class=\"me1\">Height</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Height</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>                              <span class=\"co1\">'Set the Button height</span><br/>    .<span class=\"me1\">Width</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Width</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>                                <span class=\"co1\">'Set the Button width</span><br/>    .<a href=\"http://www.google.com/search?hl=en&amp;q=font+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Font</span></a>.<span class=\"me1\">Bold</span> <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                           <span class=\"co1\">'Set the Font to Bold</span><br/>      <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/with\"><span class=\"kw1\">With</span></a><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Width</span> <span class=\"sy0\">&gt;</span> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Height</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                <span class=\"co1\">'If Form Width is greater than Form Width then..</span><br/>      siFontH <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Height</span>                                       <span class=\"co1\">'siFontH = Form Height</span><br/>    <a href=\"http://gambasdoc.org/help/lang/else\"><span class=\"kw1\">Else</span></a>                                                        <span class=\"co1\">'Else..</span><br/>      siFontH <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>.<span class=\"me1\">Width</span>                                        <span class=\"co1\">'siFontH = Form Width</span><br/>    <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>  hButton.<a href=\"http://www.google.com/search?hl=en&amp;q=font+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Font</span></a>.<span class=\"me1\">size</span> <span class=\"sy0\">=</span> siFontH <span class=\"sy0\">/</span> <span class=\"nu0\">16</span>                              <span class=\"co1\">'Set Font height</span><br/>  <a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/>\u00a0<br/>  <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> byCount                                                   <span class=\"co1\">'Increase counter</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Form_Resize<span class=\"br0\">(</span><span class=\"br0\">)</span>                                        <span class=\"co1\">'If the form is resized</span><br/>\u00a0<br/>RebuildForm                                                     <span class=\"co1\">'Rebuild the Form</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> IsItSolvable<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/boolean\"><span class=\"kw4\">Boolean</span></a>                            <span class=\"co1\">'To check if the puzzle is solvable</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> bSolvable, bBlankOnEven <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/boolean\"><span class=\"kw4\">Boolean</span></a>                          <span class=\"co1\">'Triggers</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount0, siCount1, siInversion <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a>                    <span class=\"co1\">'Counters</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount0 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> byPos.<a href=\"http://gambasdoc.org/help/lang/max\"><span class=\"kw2\">Max</span></a>                                   <span class=\"co1\">'Loop through the positions</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byPos<span class=\"br0\">[</span>siCount0<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">99</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                  <span class=\"co1\">'The blank</span><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/instr\"><span class=\"kw2\">InStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"0,1,2,3,8,9,10,11,\"</span>, <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siCount0 <span class=\"sy0\">&amp;</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>    <span class=\"co1\">'Is the blank on an even row (counting from the bottom) if so..</span><br/>      bBlankOnEven <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>                                       <span class=\"co1\">'bBlankOnEven = True</span><br/>    <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>    <a href=\"http://gambasdoc.org/help/lang/continue\"><span class=\"kw1\">Continue</span></a>                                                    <span class=\"co1\">'Go to the end of the loop</span><br/>  <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>  <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount1 <span class=\"sy0\">=</span> siCount0 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> byPos.<a href=\"http://gambasdoc.org/help/lang/max\"><span class=\"kw2\">Max</span></a>                      <span class=\"co1\">'Loop through the positions </span><br/>    <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> byPos<span class=\"br0\">[</span>siCount0<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> byPos<span class=\"br0\">[</span>siCount1<span class=\"br0\">]</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> siInversion   <span class=\"co1\">'Counts the inversions</span><br/>  <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a>                                                          <span class=\"co1\">'See https://www.cs.bham.ac.uk/~mdr/teaching/modules04/java2/TilesSolvability.html</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> bBlankOnEven <a href=\"http://gambasdoc.org/help/lang/and\"><span class=\"kw5\">And</span></a> Odd<span class=\"br0\">(</span>siInversion<span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> bSolvable <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a>      <span class=\"co1\">'Blank is on an even row (counting from the bottom) then the number of inversions in a solvable situation is odd</span><br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/not\"><span class=\"kw5\">Not</span></a> bBlankOnEven <a href=\"http://gambasdoc.org/help/lang/and\"><span class=\"kw5\">And</span></a> Even<span class=\"br0\">(</span>siInversion<span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> bSolvable <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/true\"><span class=\"kw1\">True</span></a> <span class=\"co1\">'Blank is on an odd row (counting from the bottom) then the number of inversions in a solvable situation is even</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/return\"><span class=\"kw1\">Return</span></a> bSolvable                                                <span class=\"co1\">'Return the value</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Form_Close<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.google.com/search?hl=en&amp;q=settings+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Settings</span></a>.<a href=\"http://gambasdoc.org/help/lang/write\"><span class=\"kw1\">Write</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/me\"><span class=\"kw1\">Me</span></a>, <span class=\"st0\">\"Window\"</span><span class=\"br0\">)</span>                                    <span class=\"co1\">'Store the window position and size</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0</pre>"}, {"lang": "Go", "loc": 145, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"math/rand\"</span><br/>\t<span class=\"st0\">\"strings\"</span><br/>\t<span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\trand<span class=\"sy3\">.</span>Seed<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>UnixNano<span class=\"sy1\">())</span><br/>\tp <span class=\"sy2\">:=</span> NewPuzzle<span class=\"sy1\">()</span><br/>\tp<span class=\"sy3\">.</span>Play<span class=\"sy1\">()</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> board <span class=\"sy1\">[</span><span class=\"nu0\">16</span><span class=\"sy1\">]</span>cell<br/><span class=\"kw1\">type</span> cell <span class=\"kw4\">int8</span><br/><span class=\"kw1\">type</span> move <span class=\"kw4\">int8</span><br/>\u00a0<br/><span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>\tUp move <span class=\"sy2\">=</span> iota<br/>\tDown<br/>\tRight<br/>\tLeft<br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> randMove<span class=\"sy1\">()</span> move <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> move<span class=\"sy1\">(</span>rand<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">4</span><span class=\"sy1\">))</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> solvedBoard <span class=\"sy2\">=</span> board<span class=\"sy1\">{</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"nu0\">9</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">13</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span> <span class=\"nu0\">15</span><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>b <span class=\"sy3\">*</span>board<span class=\"sy1\">)</span> String<span class=\"sy1\">()</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">var</span> buf strings<span class=\"sy3\">.</span>Builder<br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> b <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">if</span> c <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Fprint<span class=\"sy1\">(</span>&amp;buf<span class=\"sy1\">,</span> <span class=\"st0\">\"  .\"</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Fprintf<span class=\"sy1\">(</span>&amp;buf<span class=\"sy1\">,</span> <span class=\"st0\">\"%3d\"</span><span class=\"sy1\">,</span> c<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span><span class=\"sy3\">%</span><span class=\"nu0\">4</span> <span class=\"sy3\">==</span> <span class=\"nu0\">3</span> <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Fprintln<span class=\"sy1\">(</span>&amp;buf<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> buf<span class=\"sy3\">.</span>String<span class=\"sy1\">()</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> puzzle <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\tboard board<br/>\tempty <span class=\"kw4\">int</span> <span class=\"co1\">// board[empty] == 0</span><br/>\tmoves <span class=\"kw4\">int</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> NewPuzzle<span class=\"sy1\">()</span> <span class=\"sy3\">*</span>puzzle <span class=\"sy1\">{</span><br/>\tp <span class=\"sy2\">:=</span> &amp;puzzle<span class=\"sy1\">{</span><br/>\t\tboard<span class=\"sy1\">:</span> solvedBoard<span class=\"sy1\">,</span><br/>\t\tempty<span class=\"sy1\">:</span> <span class=\"nu0\">15</span><span class=\"sy1\">,</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"co1\">// Could make this configurable, 10==easy, 50==normal, 100==hard</span><br/>\tp<span class=\"sy3\">.</span>shuffle<span class=\"sy1\">(</span><span class=\"nu0\">50</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">return</span> p<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>puzzle<span class=\"sy1\">)</span> shuffle<span class=\"sy1\">(</span>moves <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"co1\">// As with other Rosetta solutions, we use some number</span><br/>\t<span class=\"co1\">// of random moves to \"shuffle\" the board.</span><br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; moves <span class=\"sy3\">||</span> p<span class=\"sy3\">.</span>board <span class=\"sy3\">==</span> solvedBoard<span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>doMove<span class=\"sy1\">(</span>randMove<span class=\"sy1\">())</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"nu2\">i</span><span class=\"sy2\">++</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>puzzle<span class=\"sy1\">)</span> isValidMove<span class=\"sy1\">(</span>m move<span class=\"sy1\">)</span> <span class=\"sy1\">(</span>newIndex <span class=\"kw4\">int</span><span class=\"sy1\">,</span> ok <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">switch</span> m <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">case</span> Up<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> p<span class=\"sy3\">.</span>empty <span class=\"sy3\">-</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>empty &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">4</span><br/>\t<span class=\"kw1\">case</span> Down<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> p<span class=\"sy3\">.</span>empty <span class=\"sy3\">+</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>empty &lt; <span class=\"nu0\">12</span><br/>\t<span class=\"kw1\">case</span> Right<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> p<span class=\"sy3\">.</span>empty <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>empty<span class=\"sy3\">%</span><span class=\"nu0\">4</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">3</span><br/>\t<span class=\"kw1\">case</span> Left<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> p<span class=\"sy3\">.</span>empty <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>empty<span class=\"sy3\">%</span><span class=\"nu0\">4</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>\t\t<span class=\"kw3\">panic</span><span class=\"sy1\">(</span><span class=\"st0\">\"not reached\"</span><span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>puzzle<span class=\"sy1\">)</span> doMove<span class=\"sy1\">(</span>m move<span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>\t<span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> p<span class=\"sy3\">.</span>empty<br/>\tj<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> p<span class=\"sy3\">.</span>isValidMove<span class=\"sy1\">(</span>m<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> ok <span class=\"sy1\">{</span><br/>\t\tp<span class=\"sy3\">.</span>board<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">],</span> p<span class=\"sy3\">.</span>board<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> p<span class=\"sy3\">.</span>board<span class=\"sy1\">[</span>j<span class=\"sy1\">],</span> p<span class=\"sy3\">.</span>board<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>\t\tp<span class=\"sy3\">.</span>empty <span class=\"sy2\">=</span> j<br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> ok<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>puzzle<span class=\"sy1\">)</span> Play<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Starting board:\"</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">for</span> quit <span class=\"sy2\">:=</span> <span class=\"kw2\">false</span><span class=\"sy1\">;</span> p<span class=\"sy3\">.</span>board <span class=\"sy2\">!=</span> solvedBoard &amp;&amp; <span class=\"sy3\">!</span>quit<span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>%v<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> &amp;p<span class=\"sy3\">.</span>board<span class=\"sy1\">)</span><br/>\t\tquit <span class=\"sy2\">=</span> p<span class=\"sy3\">.</span>playOneMove<span class=\"sy1\">()</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">if</span> p<span class=\"sy3\">.</span>board <span class=\"sy3\">==</span> solvedBoard <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"You solved the puzzle in\u00a0%d moves.<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>moves<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>puzzle<span class=\"sy1\">)</span> playOneMove<span class=\"sy1\">()</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>\tm <span class=\"sy2\">:=</span> move<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span> <span class=\"co1\">// an invalid move</span><br/>\t<span class=\"kw1\">for</span> m &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Enter move #%d (U, D, L, R, or Q): \"</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>moves<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">var</span> s <span class=\"kw4\">string</span><br/>\t\tfmt<span class=\"sy3\">.</span>Scanln<span class=\"sy1\">(</span>&amp;s<span class=\"sy1\">)</span><br/>\t\ts <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>TrimSpace<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">continue</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">switch</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">'U'</span><span class=\"sy1\">,</span> <span class=\"st0\">'u'</span><span class=\"sy1\">:</span><br/>\t\t\tm <span class=\"sy2\">=</span> Up<br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">'D'</span><span class=\"sy1\">,</span> <span class=\"st0\">'d'</span><span class=\"sy1\">:</span><br/>\t\t\tm <span class=\"sy2\">=</span> Down<br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">'L'</span><span class=\"sy1\">,</span> <span class=\"st0\">'l'</span><span class=\"sy1\">:</span><br/>\t\t\tm <span class=\"sy2\">=</span> Left<br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">'R'</span><span class=\"sy1\">,</span> <span class=\"st0\">'r'</span><span class=\"sy1\">:</span><br/>\t\t\tm <span class=\"sy2\">=</span> Right<br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy1\">,</span> <span class=\"st0\">'q'</span><span class=\"sy1\">:</span><br/>\t\t\tfmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"Quiting after\u00a0%d moves.<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> p<span class=\"sy3\">.</span>moves<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"kw1\">return</span> <span class=\"kw2\">true</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">if</span> m &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"co2\">`<br/>Please enter \"U\", \"D\", \"L\", or \"R\" to move the empty cell<br/>up, down, left, or right. You can also enter \"Q\" to quit.<br/>Upper or lowercase is accepted and only the first non-blank<br/>character is important (i.e. you may enter \"up\" if you like).<br/>`</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> ok <span class=\"sy2\">:=</span> p<span class=\"sy3\">.</span>doMove<span class=\"sy1\">(</span>m<span class=\"sy1\">);</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"That is not a valid move at the moment.\"</span><span class=\"sy1\">)</span><br/>\t\t\tm <span class=\"sy2\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\tp<span class=\"sy3\">.</span>moves<span class=\"sy2\">++</span><br/>\t<span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 73, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Array<br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Random<br/>\u00a0<br/><span class=\"kw1\">type</span> Puzzle <span class=\"sy0\">=</span> Array <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Please enter the difficulty level: 0, 1 or 2\"</span><br/>    userInput <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:getLine\"><span class=\"kw3\">getLine</span></a><br/>    <span class=\"kw1\">let</span> diffLevel <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> userInput<br/>    <span class=\"kw1\">if</span> userInput <span class=\"sy0\">==</span> <span class=\"st0\">\"\"</span> <span class=\"sy0\">||</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:any\"><span class=\"kw3\">any</span></a> <span class=\"br0\">(</span>\\c <span class=\"sy0\">-&gt;</span> c <span class=\"sy0\">&lt;</span> <span class=\"st0\">'0'</span> <span class=\"sy0\">||</span> c <span class=\"sy0\">&gt;</span> <span class=\"st0\">'9'</span><span class=\"br0\">)</span> userInput <span class=\"sy0\">||</span> diffLevel <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span> diffLevel <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">then</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"That is not a valid difficulty level.\"</span> <span class=\"sy0\">&gt;&gt;</span> main<br/>        <span class=\"kw1\">else</span> shufflePuzzle <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">]</span> <span class=\"sy0\">!!</span> diffLevel<span class=\"br0\">)</span> solvedPuzzle <span class=\"sy0\">&gt;&gt;=</span> gameLoop<br/>\u00a0<br/>gameLoop <span class=\"sy0\">::</span> Puzzle <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>gameLoop puzzle<br/>    <span class=\"sy0\">|</span> puzzle <span class=\"sy0\">==</span> solvedPuzzle <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"You solved the puzzle!\"</span> <span class=\"sy0\">&gt;&gt;</span> printPuzzle puzzle<br/>    <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    printPuzzle puzzle<br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Please enter number to move\"</span><br/>    userInput <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:getLine\"><span class=\"kw3\">getLine</span></a><br/>    <span class=\"kw1\">if</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:any\"><span class=\"kw3\">any</span></a> <span class=\"br0\">(</span>\\c <span class=\"sy0\">-&gt;</span> c <span class=\"sy0\">&lt;</span> <span class=\"st0\">'0'</span> <span class=\"sy0\">||</span> c <span class=\"sy0\">&gt;</span> <span class=\"st0\">'9'</span><span class=\"br0\">)</span> userInput<br/>        <span class=\"kw1\">then</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"That is not a valid number.\"</span> <span class=\"sy0\">&gt;&gt;</span> gameLoop puzzle<br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">let</span> move <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> userInput <span class=\"kw1\">in</span><br/>            <span class=\"kw1\">if</span> move `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:notElem\"><span class=\"kw3\">notElem</span></a>` validMoves puzzle<br/>                <span class=\"kw1\">then</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"This move is not available.\"</span> <span class=\"sy0\">&gt;&gt;</span> gameLoop puzzle<br/>                <span class=\"kw1\">else</span> gameLoop <span class=\"br0\">(</span>applyMove move puzzle<span class=\"br0\">)</span><br/>\u00a0<br/>validMoves <span class=\"sy0\">::</span> Puzzle <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span><br/>validMoves puzzle <span class=\"sy0\">=</span> <span class=\"br0\">[</span>puzzle <span class=\"sy0\">!</span> <span class=\"br0\">(</span>row<span class=\"st0\">', column'</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span><br/>                     row<span class=\"st0\">' &lt;- [rowEmpty-1..rowEmpty+1], column'</span> <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span>columnEmpty<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>columnEmpty<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                     row<span class=\"st0\">' &lt; 4, row'</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> column<span class=\"st0\">' &lt; 4, column'</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>                     <span class=\"br0\">(</span>row<span class=\"st0\">' == rowEmpty) /= (column'</span> <span class=\"sy0\">==</span> columnEmpty<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">where</span> <span class=\"br0\">(</span>rowEmpty<span class=\"sy0\">,</span> columnEmpty<span class=\"br0\">)</span> <span class=\"sy0\">=</span> findIndexOfNumber <span class=\"nu0\">16</span> puzzle<br/>\u00a0<br/>applyMove <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> Puzzle <span class=\"sy0\">-&gt;</span> Puzzle<br/>applyMove numberToMove puzzle <span class=\"sy0\">=</span> puzzle <span class=\"sy0\">//</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>indexToMove<span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>emptyIndex<span class=\"sy0\">,</span> numberToMove<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">where</span> indexToMove <span class=\"sy0\">=</span> findIndexOfNumber numberToMove puzzle<br/>          emptyIndex <span class=\"sy0\">=</span> findIndexOfNumber <span class=\"nu0\">16</span> puzzle<br/>\u00a0<br/>findIndexOfNumber <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> Puzzle <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span><br/>findIndexOfNumber number puzzle <span class=\"sy0\">=</span> <span class=\"kw1\">case</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span>\\idx <span class=\"sy0\">-&gt;</span> number <span class=\"sy0\">==</span> puzzle <span class=\"sy0\">!</span> idx<span class=\"br0\">)</span><br/>                                              <span class=\"br0\">(</span>indices puzzle<span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>                                      <span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> idx<br/>                                      <span class=\"sy0\">_</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:error\"><span class=\"kw3\">error</span></a> <span class=\"st0\">\"BUG: number not in puzzle\"</span><br/>\u00a0<br/>printPuzzle <span class=\"sy0\">::</span> Puzzle <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>printPuzzle puzzle <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"+--+--+--+--+\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"+--+--+--+--+\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"+--+--+--+--+\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"+--+--+--+--+\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">++</span> formatCell <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">++</span> <span class=\"st0\">\"|\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"+--+--+--+--+\"</span><br/>    <span class=\"kw1\">where</span> formatCell idx<br/>              <span class=\"sy0\">|</span> i <span class=\"sy0\">==</span> <span class=\"nu0\">16</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"  \"</span><br/>              <span class=\"sy0\">|</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">9</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> i<br/>              <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> i<br/>              <span class=\"kw1\">where</span> i <span class=\"sy0\">=</span> puzzle <span class=\"sy0\">!</span> idx<br/>\u00a0<br/>solvedPuzzle <span class=\"sy0\">::</span> Puzzle<br/>solvedPuzzle <span class=\"sy0\">=</span> listArray <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">16</span><span class=\"br0\">]</span><br/>\u00a0<br/>shufflePuzzle <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> Puzzle <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> Puzzle<br/>shufflePuzzle <span class=\"nu0\">0</span> puzzle <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> puzzle<br/>shufflePuzzle numOfShuffels puzzle <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">let</span> moves <span class=\"sy0\">=</span> validMoves puzzle<br/>    randomIndex <span class=\"sy0\">&lt;-</span> randomRIO <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> moves <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> move <span class=\"sy0\">=</span> moves <span class=\"sy0\">!!</span> randomIndex<br/>    shufflePuzzle <span class=\"br0\">(</span>numOfShuffels <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>applyMove move puzzle<span class=\"br0\">)</span></pre>"}, {"lang": "J", "loc": 65, "block": "<pre class=\"j highlighted_source\">require<span class=\"st_h\">'general/misc/prompt'</span><br/>\u00a0<br/>genboard=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  b=.\u00a0?~<span class=\"nu0\">16</span><br/>  <span class=\"kw1\">if.</span> <span class=\"nu0\">0</span>&lt;C.!.<span class=\"nu0\">2</span> b <span class=\"kw1\">do.</span><br/>    b=. <span class=\"sy0\">(</span>&lt;<span class=\"nu0\">0</span> <span class=\"nu0\">_1</span><span class=\"sy0\">)</span>C. b<br/>  <span class=\"kw1\">end.</span><br/>  a: <span class=\"sy0\">(</span>b i.<span class=\"nu0\">0</span><span class=\"sy0\">)</span>} &lt;\"<span class=\"nu0\">0</span> b<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>done=: <span class=\"sy0\">(</span>&lt;\"<span class=\"nu0\">0</span>]<span class=\"nu0\">1</span>+i.<span class=\"nu0\">15</span><span class=\"sy0\">)</span>,a:<br/>\u00a0<br/>shift=: |.!.<span class=\"nu0\">_</span>\"<span class=\"nu0\">0</span> <span class=\"nu0\">2</span><br/>taxi=: |:,/\"<span class=\"nu0\">2</span><span class=\"sy0\">(</span><span class=\"nu0\">_1</span> <span class=\"nu0\">1</span> shift i.<span class=\"nu0\">4</span> <span class=\"nu0\">4</span><span class=\"sy0\">)</span>,<span class=\"nu0\">_1</span> <span class=\"nu0\">1</span> shift\"<span class=\"nu0\">0</span> <span class=\"nu0\">1</span>/ i.<span class=\"nu0\">4</span> <span class=\"nu0\">4</span><br/>\u00a0<br/>showboard=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  echo <span class=\"st_h\">'current board:'</span><br/>  echo <span class=\"nu0\">4</span> <span class=\"nu0\">4</span>$<span class=\"kw2\">y</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>help=:<span class=\"nu0\">0</span>\u00a0:<span class=\"nu0\">0</span><br/>\u00a0<br/>  Slide a number block into the empty space<br/>  until you get:<br/>\u250c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2510<br/>\u2502<span class=\"nu0\">1</span> \u2502<span class=\"nu0\">2</span> \u2502<span class=\"nu0\">3</span> \u2502<span class=\"nu0\">4</span> \u2502<br/>\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524<br/>\u2502<span class=\"nu0\">5</span> \u2502<span class=\"nu0\">6</span> \u2502<span class=\"nu0\">7</span> \u2502<span class=\"nu0\">8</span> \u2502<br/>\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524<br/>\u2502<span class=\"nu0\">9</span> \u2502<span class=\"nu0\">10</span>\u2502<span class=\"nu0\">11</span>\u2502<span class=\"nu0\">12</span>\u2502<br/>\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524<br/>\u2502<span class=\"nu0\">13</span>\u2502<span class=\"nu0\">14</span>\u2502<span class=\"nu0\">15</span>\u2502  \u2502<br/>\u2514\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2518<br/>  Or type <span class=\"st_h\">'q'</span> to quit.<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>getmove=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  showboard <span class=\"kw2\">y</span><br/>  blank=. <span class=\"kw2\">y</span> i. a:<br/>  options=. /:~\u00a0;<span class=\"kw2\">y</span> {~ <span class=\"nu0\">_</span> -.~ blank { taxi<br/>  <span class=\"kw1\">whilst.</span> -. <span class=\"kw2\">n</span> e. options <span class=\"kw1\">do.</span><br/>    echo <span class=\"st_h\">'Valid moves: '</span>,\":options<br/>    t=. prompt <span class=\"st_h\">'move which number? '</span><br/>    <span class=\"kw1\">if.</span> <span class=\"st_h\">'q'</span> e. t <span class=\"kw1\">do.</span><br/>      echo <span class=\"st_h\">'giving up'</span><br/>      <span class=\"kw1\">throw.</span><br/>    <span class=\"kw1\">elseif.</span> <span class=\"st_h\">'h'</span> e. t <span class=\"kw1\">do.</span><br/>      echo help<br/>      showboard <span class=\"kw2\">y</span><br/>    <span class=\"kw1\">end.</span><br/>    <span class=\"kw2\">n</span>=. {.<span class=\"nu0\">_</span>\".t<br/>  <span class=\"kw1\">end.</span><br/>  <span class=\"sy0\">(</span>&lt;blank,<span class=\"kw2\">y</span> i.&lt;<span class=\"kw2\">n</span><span class=\"sy0\">)</span> C. <span class=\"kw2\">y</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>game=: <span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  echo <span class=\"st_h\">'15 puzzle'</span><br/>  echo <span class=\"st_h\">'h for help, q to quit'</span><br/>  board=. genboard<span class=\"st_h\">''</span><br/>  <span class=\"kw1\">whilst.</span> -. done-:board <span class=\"kw1\">do.</span><br/>    board=. getmove board<br/>  <span class=\"kw1\">end.</span><br/>  showboard board<br/>  echo <span class=\"st_h\">'You win.'</span><br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 214, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">package</span> <span class=\"co2\">fifteenpuzzle</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.event.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> FifteenPuzzle <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> side <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> numTiles <span class=\"sy0\">=</span> side <span class=\"sy0\">*</span> side <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a> rand <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> tiles <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>numTiles <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> tileSize<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> blankPos<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> margin<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> gridSize<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">boolean</span> gameOver<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> FifteenPuzzle<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> dim <span class=\"sy0\">=</span> <span class=\"nu0\">640</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        margin <span class=\"sy0\">=</span> <span class=\"nu0\">80</span><span class=\"sy0\">;</span><br/>        tileSize <span class=\"sy0\">=</span> <span class=\"br0\">(</span>dim <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> margin<span class=\"br0\">)</span> <span class=\"sy0\">/</span> side<span class=\"sy0\">;</span><br/>        gridSize <span class=\"sy0\">=</span> tileSize <span class=\"sy0\">*</span> side<span class=\"sy0\">;</span><br/>\u00a0<br/>        setPreferredSize<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a><span class=\"br0\">(</span>dim, dim <span class=\"sy0\">+</span> margin<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        setBackground<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        setForeground<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a><span class=\"br0\">(</span>0x6495ED<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// cornflowerblue</span><br/>        setFont<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a><span class=\"br0\">(</span><span class=\"st0\">\"SansSerif\"</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a>.<span class=\"me1\">BOLD</span>, <span class=\"nu0\">60</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        gameOver <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        addMouseListener<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseadapter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseAdapter</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            @Override<br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mousePressed<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>gameOver<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    newGame<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\u00a0<br/>                    <span class=\"kw4\">int</span> ex <span class=\"sy0\">=</span> e.<span class=\"me1\">getX</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> margin<span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> ey <span class=\"sy0\">=</span> e.<span class=\"me1\">getY</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> margin<span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>ex <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> ex <span class=\"sy0\">&gt;</span> gridSize <span class=\"sy0\">||</span> ey <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> ey <span class=\"sy0\">&gt;</span> gridSize<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>\u00a0<br/>                    <span class=\"kw4\">int</span> c1 <span class=\"sy0\">=</span> ex <span class=\"sy0\">/</span> tileSize<span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> r1 <span class=\"sy0\">=</span> ey <span class=\"sy0\">/</span> tileSize<span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> c2 <span class=\"sy0\">=</span> blankPos <span class=\"sy0\">%</span> side<span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> r2 <span class=\"sy0\">=</span> blankPos <span class=\"sy0\">/</span> side<span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw4\">int</span> clickPos <span class=\"sy0\">=</span> r1 <span class=\"sy0\">*</span> side <span class=\"sy0\">+</span> c1<span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw4\">int</span> dir <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c1 <span class=\"sy0\">==</span> c2 <span class=\"sy0\">&amp;&amp;</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>r1 <span class=\"sy0\">-</span> r2<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        dir <span class=\"sy0\">=</span> <span class=\"br0\">(</span>r1 <span class=\"sy0\">-</span> r2<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">4</span> <span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r1 <span class=\"sy0\">==</span> r2 <span class=\"sy0\">&amp;&amp;</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>c1 <span class=\"sy0\">-</span> c2<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        dir <span class=\"sy0\">=</span> <span class=\"br0\">(</span>c1 <span class=\"sy0\">-</span> c2<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>\u00a0<br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>dir <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>                            <span class=\"kw4\">int</span> newBlankPos <span class=\"sy0\">=</span> blankPos <span class=\"sy0\">+</span> dir<span class=\"sy0\">;</span><br/>                            tiles<span class=\"br0\">[</span>blankPos<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tiles<span class=\"br0\">[</span>newBlankPos<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                            blankPos <span class=\"sy0\">=</span> newBlankPos<span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>blankPos <span class=\"sy0\">!=</span> clickPos<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        tiles<span class=\"br0\">[</span>blankPos<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>\u00a0<br/>                    gameOver <span class=\"sy0\">=</span> isSolved<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        newGame<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> newGame<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>            reset<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>isSolvable<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        gameOver <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> reset<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> tiles.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> tiles.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        blankPos <span class=\"sy0\">=</span> tiles.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"co1\">// don't include the blank space in the shuffle, leave it</span><br/>        <span class=\"co1\">// in the home position</span><br/>        <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> numTiles<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>n<span class=\"sy0\">--</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> tmp <span class=\"sy0\">=</span> tiles<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            tiles<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tiles<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            tiles<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tmp<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/*  Only half the permutations of the puzzle are solvable.<br/>\u00a0<br/>        Whenever a tile is preceded by a tile with higher value it counts<br/>        as an inversion. In our case, with the blank space in the home<br/>        position, the number of inversions must be even for the puzzle<br/>        to be solvable.<br/>\u00a0<br/>        See also:<br/>        www.cs.bham.ac.uk/~mdr/teaching/modules04/java2/TilesSolvability.html<br/>     */</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">boolean</span> isSolvable<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> countInversions <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> numTiles<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> i<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>tiles<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    countInversions<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> countInversions <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">boolean</span> isSolved<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>tiles<span class=\"br0\">[</span>tiles.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> numTiles <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> drawGrid<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> tiles.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> i <span class=\"sy0\">/</span> side<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> i <span class=\"sy0\">%</span> side<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> margin <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> tileSize<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> margin <span class=\"sy0\">+</span> r <span class=\"sy0\">*</span> tileSize<span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>gameOver<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">GREEN</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    drawCenteredString<span class=\"br0\">(</span>g, <span class=\"st0\">\"\u2713\"</span>, x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>getForeground<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">fillRoundRect</span><span class=\"br0\">(</span>x, y, tileSize, tileSize, <span class=\"nu0\">25</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">blue</span>.<span class=\"me1\">darker</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">drawRoundRect</span><span class=\"br0\">(</span>x, y, tileSize, tileSize, <span class=\"nu0\">25</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            drawCenteredString<span class=\"br0\">(</span>g, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span>, x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> drawStartMessage<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>gameOver<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            g.<span class=\"me1\">setFont</span><span class=\"br0\">(</span>getFont<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">deriveFont</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a>.<span class=\"me1\">BOLD</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>getForeground<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> s <span class=\"sy0\">=</span> <span class=\"st0\">\"click to start a new game\"</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"br0\">(</span>getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> g.<span class=\"me1\">getFontMetrics</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">stringWidth</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> margin<span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span>s, x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">void</span> drawCenteredString<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> s, <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afontmetrics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FontMetrics</span></a> fm <span class=\"sy0\">=</span> g.<span class=\"me1\">getFontMetrics</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> asc <span class=\"sy0\">=</span> fm.<span class=\"me1\">getAscent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> des <span class=\"sy0\">=</span> fm.<span class=\"me1\">getDescent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        x <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> <span class=\"br0\">(</span>tileSize <span class=\"sy0\">-</span> fm.<span class=\"me1\">stringWidth</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>        y <span class=\"sy0\">=</span> y <span class=\"sy0\">+</span> <span class=\"br0\">(</span>asc <span class=\"sy0\">+</span> <span class=\"br0\">(</span>tileSize <span class=\"sy0\">-</span> <span class=\"br0\">(</span>asc <span class=\"sy0\">+</span> des<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span>s, x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> paintComponent<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> gg<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">super</span>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a><span class=\"br0\">)</span> gg<span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">KEY_ANTIALIASING</span>,<br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        drawGrid<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        drawStartMessage<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aswingutilities+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SwingUtilities</span></a>.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a> f <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setDefaultCloseOperation</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setTitle</span><span class=\"br0\">(</span><span class=\"st0\">\"Fifteen Puzzle\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setResizable</span><span class=\"br0\">(</span><span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> FifteenPuzzle<span class=\"br0\">(</span><span class=\"br0\">)</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderlayout+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderLayout</span></a>.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setLocationRelativeTo</span><span class=\"br0\">(</span><span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setVisible</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 120, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"kw1\">var</span> board<span class=\"sy0\">,</span> zx<span class=\"sy0\">,</span> zy<span class=\"sy0\">,</span> clicks<span class=\"sy0\">,</span> possibles<span class=\"sy0\">,</span> clickCounter<span class=\"sy0\">,</span> oldzx <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> oldzy <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">function</span> getPossibles<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> ii<span class=\"sy0\">,</span> jj<span class=\"sy0\">,</span> cx <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> cy <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    possibles <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        ii <span class=\"sy0\">=</span> zx <span class=\"sy0\">+</span> cx<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span> jj <span class=\"sy0\">=</span> zy <span class=\"sy0\">+</span> cy<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> ii <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> ii <span class=\"sy0\">&gt;</span> <span class=\"nu0\">3</span> <span class=\"sy0\">||</span> jj <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> jj <span class=\"sy0\">&gt;</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>        possibles.<span class=\"me1\">push</span><span class=\"br0\">(</span> <span class=\"br0\">{</span> x<span class=\"sy0\">:</span> ii<span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> jj <span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> updateBtns<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> b<span class=\"sy0\">,</span> v<span class=\"sy0\">,</span> id<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            id <span class=\"sy0\">=</span> <span class=\"st0\">\"btn\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            b <span class=\"sy0\">=</span> document.<span class=\"me1\">getElementById</span><span class=\"br0\">(</span> id <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            v <span class=\"sy0\">=</span> board<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> v <span class=\"sy0\">&lt;</span> <span class=\"nu0\">16</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                b.<span class=\"me1\">innerHTML</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"sy0\">+</span> v <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                b.<span class=\"me1\">className</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"button\"</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                b.<span class=\"me1\">innerHTML</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                b.<span class=\"me1\">className</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"empty\"</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    clickCounter.<span class=\"me1\">innerHTML</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Clicks: \"</span> <span class=\"sy0\">+</span> clicks<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> v <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> t<span class=\"sy0\">;</span> <br/>    <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>        getPossibles<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        while<span class=\"br0\">(</span> <span class=\"kw2\">true</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            t <span class=\"sy0\">=</span> possibles<span class=\"br0\">[</span><span class=\"kw4\">Math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> possibles.<span class=\"me1\">length</span> <span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            console.<span class=\"me1\">log</span><span class=\"br0\">(</span> t.<span class=\"me1\">x</span><span class=\"sy0\">,</span> oldzx<span class=\"sy0\">,</span> t.<span class=\"me1\">y</span><span class=\"sy0\">,</span> oldzy <span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> t.<span class=\"me1\">x</span> <span class=\"sy0\">!=</span> oldzx <span class=\"sy0\">||</span> t.<span class=\"me1\">y</span> <span class=\"sy0\">!=</span> oldzy <span class=\"br0\">)</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        oldzx <span class=\"sy0\">=</span> zx<span class=\"sy0\">;</span> oldzy <span class=\"sy0\">=</span> zy<span class=\"sy0\">;</span><br/>        board<span class=\"br0\">[</span>zx<span class=\"br0\">]</span><span class=\"br0\">[</span>zy<span class=\"br0\">]</span> <span class=\"sy0\">=</span> board<span class=\"br0\">[</span>t.<span class=\"me1\">x</span><span class=\"br0\">]</span><span class=\"br0\">[</span>t.<span class=\"me1\">y</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        zx <span class=\"sy0\">=</span> t.<span class=\"me1\">x</span><span class=\"sy0\">;</span> zy <span class=\"sy0\">=</span> t.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>        board<span class=\"br0\">[</span>zx<span class=\"br0\">]</span><span class=\"br0\">[</span>zy<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span> <br/>    <span class=\"br0\">}</span> while<span class=\"br0\">(</span> <span class=\"sy0\">++</span>v <span class=\"sy0\">&lt;</span> <span class=\"nu0\">200</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> restart<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    clicks <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    updateBtns<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> checkFinished<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span> board<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> a <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>            a <span class=\"sy0\">=</span> board<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> btnHandle<span class=\"br0\">(</span> e <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    getPossibles<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> c <span class=\"sy0\">=</span> e.<span class=\"me1\">target</span>.<span class=\"me1\">i</span><span class=\"sy0\">,</span> r <span class=\"sy0\">=</span> e.<span class=\"me1\">target</span>.<span class=\"me1\">j</span><span class=\"sy0\">,</span> p <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> possibles.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> possibles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">==</span> c <span class=\"sy0\">&amp;&amp;</span> possibles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> r <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            p <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span> p <span class=\"sy0\">&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        clicks<span class=\"sy0\">++;</span><br/>        <span class=\"kw1\">var</span> t <span class=\"sy0\">=</span> possibles<span class=\"br0\">[</span>p<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        board<span class=\"br0\">[</span>zx<span class=\"br0\">]</span><span class=\"br0\">[</span>zy<span class=\"br0\">]</span> <span class=\"sy0\">=</span> board<span class=\"br0\">[</span>t.<span class=\"me1\">x</span><span class=\"br0\">]</span><span class=\"br0\">[</span>t.<span class=\"me1\">y</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        zx <span class=\"sy0\">=</span> t.<span class=\"me1\">x</span><span class=\"sy0\">;</span> zy <span class=\"sy0\">=</span> t.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>        board<span class=\"br0\">[</span>zx<span class=\"br0\">]</span><span class=\"br0\">[</span>zy<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span><br/>        updateBtns<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span> checkFinished<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            setTimeout<span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span> <br/>                alert<span class=\"br0\">(</span> <span class=\"st0\">\"WELL DONE!\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                restart<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> createBoard<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    board <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">Array</span><span class=\"br0\">(</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        board<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">Array</span><span class=\"br0\">(</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            board<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    zx <span class=\"sy0\">=</span> zy <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> board<span class=\"br0\">[</span>zx<span class=\"br0\">]</span><span class=\"br0\">[</span>zy<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> createBtns<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> b<span class=\"sy0\">,</span> d <span class=\"sy0\">=</span> document.<span class=\"me1\">createElement</span><span class=\"br0\">(</span> <span class=\"st0\">\"div\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    d.<span class=\"me1\">className</span> <span class=\"sy0\">+=</span> <span class=\"st0\">\"board\"</span><span class=\"sy0\">;</span><br/>    document.<span class=\"me1\">body</span>.<span class=\"me1\">appendChild</span><span class=\"br0\">(</span> d <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            b <span class=\"sy0\">=</span> document.<span class=\"me1\">createElement</span><span class=\"br0\">(</span> <span class=\"st0\">\"button\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            b.<span class=\"me1\">id</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"btn\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            b.<span class=\"me1\">i</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span> b.<span class=\"me1\">j</span> <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span><br/>            b.<span class=\"me1\">addEventListener</span><span class=\"br0\">(</span> <span class=\"st0\">\"click\"</span><span class=\"sy0\">,</span> btnHandle<span class=\"sy0\">,</span> <span class=\"kw2\">false</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            b.<span class=\"me1\">appendChild</span><span class=\"br0\">(</span> document.<span class=\"me1\">createTextNode</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            d.<span class=\"me1\">appendChild</span><span class=\"br0\">(</span> b <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    clickCounter <span class=\"sy0\">=</span> document.<span class=\"me1\">createElement</span><span class=\"br0\">(</span> <span class=\"st0\">\"p\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    clickCounter.<span class=\"me1\">className</span> <span class=\"sy0\">+=</span> <span class=\"st0\">\"txt\"</span><span class=\"sy0\">;</span><br/>    document.<span class=\"me1\">body</span>.<span class=\"me1\">appendChild</span><span class=\"br0\">(</span> clickCounter <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> start<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    createBtns<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    createBoard<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    restart<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 149, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">BorderLayout</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Color</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Dimension</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Font</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Graphics</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Graphics2D</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">RenderingHints</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">event</span>.<span class=\"me1\">MouseAdapter</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">event</span>.<span class=\"me1\">MouseEvent</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JFrame</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">JPanel</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">SwingUtilities</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> FifteenPuzzle<span class=\"br0\">(</span>dim<span class=\"sy0\">:</span> Int, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> margin<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> JPanel<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rand <span class=\"sy0\">=</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tiles <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tileSize <span class=\"sy0\">=</span> <span class=\"br0\">(</span>dim - <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> margin<span class=\"br0\">)</span> / <span class=\"nu0\">4</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> gridSize <span class=\"sy0\">=</span> tileSize <span class=\"sy0\">*</span> <span class=\"nu0\">4</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> blankPos <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    init <span class=\"br0\">{</span><br/>        preferredSize <span class=\"sy0\">=</span> Dimension<span class=\"br0\">(</span>dim, dim<span class=\"br0\">)</span><br/>        background <span class=\"sy0\">=</span> Color.<span class=\"me1\">white</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cornflowerBlue <span class=\"sy0\">=</span> 0x6495ED<br/>        foreground <span class=\"sy0\">=</span> Color<span class=\"br0\">(</span>cornflowerBlue<span class=\"br0\">)</span><br/>        font <span class=\"sy0\">=</span> Font<span class=\"br0\">(</span><span class=\"st0\">\"SansSerif\"</span>, Font.<span class=\"me1\">BOLD</span>, <span class=\"nu0\">60</span><span class=\"br0\">)</span><br/>\u00a0<br/>        addMouseListener<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> <span class=\"sy0\">:</span> MouseAdapter<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun mousePressed<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> MouseEvent<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ex <span class=\"sy0\">=</span> e.<span class=\"me1\">x</span> - margin<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ey <span class=\"sy0\">=</span> e.<span class=\"me1\">y</span> - margin<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>ex <span class=\"sy0\">!</span>in <span class=\"nu0\">0</span>..<span class=\"me1\">gridSize</span> || ey <span class=\"sy0\">!</span>in <span class=\"nu0\">0</span>..<span class=\"me1\">gridSize</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>\u00a0<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c1 <span class=\"sy0\">=</span> ex / tileSize<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r1 <span class=\"sy0\">=</span> ey / tileSize<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c2 <span class=\"sy0\">=</span> blankPos <span class=\"sy0\">%</span> <span class=\"nu0\">4</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r2 <span class=\"sy0\">=</span> blankPos / <span class=\"nu0\">4</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>c1 <span class=\"sy0\">==</span> c2 <span class=\"sy0\">&amp;&amp;</span> Math.<span class=\"me1\">abs</span><span class=\"br0\">(</span>r1 - r2<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> ||<br/>                    <span class=\"br0\">(</span>r1 <span class=\"sy0\">==</span> r2 <span class=\"sy0\">&amp;&amp;</span> Math.<span class=\"me1\">abs</span><span class=\"br0\">(</span>c1 - c2<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> clickPos <span class=\"sy0\">=</span> r1 <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> + c1<br/>                    tiles<span class=\"br0\">[</span>blankPos<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tiles<span class=\"br0\">[</span>clickPos<span class=\"br0\">]</span><br/>                    tiles<span class=\"br0\">[</span>clickPos<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>                    blankPos <span class=\"sy0\">=</span> clickPos<br/>                <span class=\"br0\">}</span><br/>                repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>        shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">do</span></a> <span class=\"br0\">{</span><br/>            reset<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"co1\">// don't include the blank space in the shuffle,</span><br/>            <span class=\"co1\">// leave it in the home position</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> n <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>n--<span class=\"br0\">)</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tmp <span class=\"sy0\">=</span> tiles<span class=\"br0\">[</span>r<span class=\"br0\">]</span><br/>                tiles<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tiles<span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>                tiles<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> tmp<br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>isSolvable<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun reset<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until tiles.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i + <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> tiles.<span class=\"me1\">size</span><br/>        <span class=\"br0\">}</span><br/>        blankPos <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/*  Only half the permutations of the puzzle are solvable.<br/>\u00a0<br/>        Whenever a tile is preceded by a tile with higher value it counts<br/>        as an inversion. In our case, with the blank space in the home<br/>        position, the number of inversions must be even for the puzzle<br/>        to be solvable.<br/>    */</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun isSolvable<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Boolean <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> countInversions <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">(</span><span class=\"nu0\">0</span> until i<span class=\"br0\">)</span><br/>                .<span class=\"me1\">filter</span> <span class=\"br0\">{</span> tiles<span class=\"br0\">[</span>it<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>                .<span class=\"me1\">forEach</span> <span class=\"br0\">{</span> countInversions++ <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> countInversions <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun drawGrid<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until tiles.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> continue<br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> i / <span class=\"nu0\">4</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c <span class=\"sy0\">=</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">4</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x <span class=\"sy0\">=</span> margin + c <span class=\"sy0\">*</span> tileSize<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y <span class=\"sy0\">=</span> margin + r <span class=\"sy0\">*</span> tileSize<br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a><span class=\"br0\">(</span>g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                color <span class=\"sy0\">=</span> foreground<br/>                fillRoundRect<span class=\"br0\">(</span>x, y, tileSize, tileSize, <span class=\"nu0\">25</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><br/>                color <span class=\"sy0\">=</span> Color.<span class=\"me1\">black</span><br/>                drawRoundRect<span class=\"br0\">(</span>x, y, tileSize, tileSize, <span class=\"nu0\">25</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><br/>                color <span class=\"sy0\">=</span> Color.<span class=\"me1\">white</span><br/>            <span class=\"br0\">}</span><br/>            drawCenteredString<span class=\"br0\">(</span>g, tiles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, x, y<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun drawCenteredString<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D, s<span class=\"sy0\">:</span> String, x<span class=\"sy0\">:</span> Int, y<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> fm <span class=\"sy0\">=</span> g.<span class=\"me1\">fontMetrics</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> asc <span class=\"sy0\">=</span> fm.<span class=\"me1\">ascent</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> des <span class=\"sy0\">=</span> fm.<span class=\"me1\">descent</span><br/>\u00a0<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xx <span class=\"sy0\">=</span> x + <span class=\"br0\">(</span>tileSize - fm.<span class=\"me1\">stringWidth</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span> / <span class=\"nu0\">2</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yy <span class=\"sy0\">=</span> y + <span class=\"br0\">(</span>asc + <span class=\"br0\">(</span>tileSize - <span class=\"br0\">(</span>asc + des<span class=\"br0\">)</span><span class=\"br0\">)</span> / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>        g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span>s, xx, yy<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun paintComponent<span class=\"br0\">(</span>gg<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> gg as Graphics2D<br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_ANTIALIASING</span>,<br/>            RenderingHints.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>        drawGrid<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    SwingUtilities.<span class=\"me1\">invokeLater</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> JFrame<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            defaultCloseOperation <span class=\"sy0\">=</span> JFrame.<span class=\"me1\">EXIT_ON_CLOSE</span><br/>            title <span class=\"sy0\">=</span> <span class=\"st0\">\"Fifteen Puzzle\"</span><br/>            isResizable <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>            add<span class=\"br0\">(</span>FifteenPuzzle<span class=\"br0\">(</span><span class=\"nu0\">640</span>, <span class=\"nu0\">80</span><span class=\"br0\">)</span>, BorderLayout.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><br/>            pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            setLocationRelativeTo<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>            isVisible <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Livecode", "loc": 63, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#Please note that all this code can be performed in livecode with just few mouse clicks<br/>#This is just a pure script exampe<br/>on OpenStack<br/>   show me  #Usually not necessary<br/>   #tile creation<br/>   set the width of the templateButton to 50<br/>   set the height of the templateButton to 50<br/>   repeat with i=1 to 16<br/>      create button <br/>      set the label of  button i to i<br/>      if i =1 then<br/>         set the top of button 1 to 0<br/>         set the left of button 1 to 0<br/>      end if<br/>      if i &gt; 1 and 1 &lt;=4  then<br/>         set the left of button i to the right of button (i-1)<br/>         set the top of button i to the top of button 1<br/>      end if<br/>      if i &gt;= 5 and i &lt;= 8 then<br/>         set the top of button i to the bottom of button 1<br/>         if i = 5 then <br/>            set the left of button i to the left of button 1<br/>         else<br/>            set the left of button i to the right of button (i - 1)<br/>         end if<br/>      end if   <br/>      if i &gt;= 9 and i &lt;= 12 then<br/>         set the top of button i to the bottom of button 5<br/>         if i = 9 then <br/>            set the left of button i to the left of button 1<br/>         else <br/>            set the left of button i to the right of button (i - 1)<br/>         end if<br/>      end if   <br/>      if i &gt;= 13 and i &lt;= 16 then<br/>         set the top of button i to the bottom of button 9<br/>         if i = 13 then <br/>            set the left of button i to the left of button 1<br/>         else <br/>            set the left of button i to the right of button (i - 1)<br/>         end if<br/>      end if   <br/>      #this is usally the script directly wirtten in the objects, it's really weird this way<br/>      put \"on MouseUp\" &amp;CR&amp; \"if checkDistance(the label of me) then\" &amp; CR &amp;\"put the loc of me into temp\" into ts<br/>      put CR&amp; \"set the loc of me to the loc of button 16\" after ts<br/>      put CR&amp; \"set the loc of button 16 to temp\" &amp; Cr &amp; \"end if \" &amp;CR &amp;\"End MouseUp\" after ts<br/>      set the script of button i to ts<br/>   end repeat<br/>   #graphic adjustements<br/>   set the visible of button 16 to false   <br/>   set the width of this stack to the right of button 16<br/>   set the height of this stack to the bottom of button 16<br/>end openStack<br/>\u00a0<br/>function checkDistance i<br/>   if (((the top of button i - the bottom of button 16) = 0 OR (the top of button 16 - the bottom of button i) = 0) AND the left of button i = the left of button 16) OR (((the left of button i - the right of button 16) = 0 OR (the right of button i - the left of button 16) = 0) AND the top of button i = the top of button 16) then<br/>      return true<br/>   else <br/>      return false<br/>   end if<br/>end checkDistance<br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 98, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw3\">math.randomseed</span><span class=\"br0\">(</span> <span class=\"kw3\">os.time</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">local</span> puz <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">local</span> dir <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">local</span> sx<span class=\"sy0\">,</span> sy <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <br/>\u00a0<br/><span class=\"kw1\">function</span> isValid<span class=\"br0\">(</span> tx<span class=\"sy0\">,</span> ty <span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> tx <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> tx <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span> <span class=\"kw2\">and</span> ty <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> ty <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span>  <br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"+----+----+----+----+<span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">local</span> d <span class=\"sy0\">=</span> puz<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>            <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\": \"</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span> <span class=\"kw1\">then</span> <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">if</span> d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span>  <span class=\"kw1\">then</span><br/>                <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"  \"</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">else</span><br/>                <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%d \"</span><span class=\"sy0\">,</span> d <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>        <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\":<span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"+----+----+----+----+<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> getUserNove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> moves<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> tx<span class=\"sy0\">,</span> ty <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> d <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>        tx <span class=\"sy0\">=</span> sx<span class=\"sy0\">;</span> ty <span class=\"sy0\">=</span> sy<br/>        tx <span class=\"sy0\">=</span> tx <span class=\"sy0\">+</span> dir<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> ty <span class=\"sy0\">=</span> ty <span class=\"sy0\">+</span> dir<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> isValid<span class=\"br0\">(</span> tx<span class=\"sy0\">,</span> ty <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <br/>            <span class=\"kw3\">table.insert</span><span class=\"br0\">(</span> moves<span class=\"sy0\">,</span> puz<span class=\"br0\">[</span>tx <span class=\"sy0\">+</span> ty <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"Your possible moves are: \"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>moves <span class=\"kw1\">do</span> <br/>        <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%d \"</span><span class=\"sy0\">,</span> moves<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"kw3\">io.write</span> <span class=\"br0\">(</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>Your move: \"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span> r <span class=\"sy0\">=</span> <span class=\"kw3\">tonumber</span><span class=\"br0\">(</span> <span class=\"kw3\">io.read</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> r <span class=\"sy0\">~=</span> <span class=\"kw4\">nil</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>moves <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">if</span> moves<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> r <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> r <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"Invalid move!\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> checked<span class=\"br0\">(</span> r <span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>puz <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> puz<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> r <span class=\"kw1\">then</span> <br/>            puz<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            sx <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> sy <span class=\"sy0\">=</span> <span class=\"kw3\">math.floor</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">elseif</span> puz<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            puz<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> r<br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>puz <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> puz<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">~=</span> puz<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"kw4\">false</span> <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">true</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> beginGame<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> r<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> tx<span class=\"sy0\">,</span> ty<br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"kw4\">true</span> <span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"kw4\">true</span> <span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>                tx <span class=\"sy0\">=</span> sx<span class=\"sy0\">;</span> ty <span class=\"sy0\">=</span> sy<span class=\"sy0\">;</span> d <span class=\"sy0\">=</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><br/>                tx <span class=\"sy0\">=</span> tx <span class=\"sy0\">+</span> dir<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> ty <span class=\"sy0\">=</span> ty <span class=\"sy0\">+</span> dir<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>                <span class=\"kw1\">if</span> isValid<span class=\"br0\">(</span> tx<span class=\"sy0\">,</span> ty <span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">break</span> <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">end</span><br/>            puz<span class=\"br0\">[</span>sx <span class=\"sy0\">+</span> sy <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> puz<span class=\"br0\">[</span>tx <span class=\"sy0\">+</span> ty <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>            puz<span class=\"br0\">[</span>tx <span class=\"sy0\">+</span> ty <span class=\"sy0\">*</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> sx <span class=\"sy0\">=</span> tx<span class=\"sy0\">;</span> sy <span class=\"sy0\">=</span> ty<br/>        <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"kw4\">true</span> <span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>            display<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> r <span class=\"sy0\">=</span> getUserNove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> r <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>                <span class=\"kw1\">if</span> checked<span class=\"br0\">(</span> r <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                    display<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>Done!<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>Play again (Y/N)?\"</span> <span class=\"br0\">)</span><br/>                    r <span class=\"sy0\">=</span> <span class=\"kw3\">io.read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                    <span class=\"kw1\">if</span> r <span class=\"sy0\">~=</span> <span class=\"st0\">\"Y\"</span> <span class=\"kw2\">and</span> r <span class=\"sy0\">~=</span> <span class=\"st0\">\"y\"</span> <span class=\"kw1\">then</span> <br/>                        <span class=\"kw1\">return</span><br/>                    <span class=\"kw1\">else</span><br/>                        <span class=\"kw1\">break</span><br/>                    <span class=\"kw1\">end</span><br/>                <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/><span class=\"co1\">-- [ entry point ] --</span><br/>beginGame<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "MUMPS", "loc": 1, "block": "<pre>15Game\u00a0;\n\t; setting the layout\n\tf i=1:1:15 s box(i)=16-i\n\t; no number for box 16\n\ts box(16)=\"\"\n\tf  {\n\t; initialise i for incrementation\n\t\ts i=0\n\t; write out the 4-by-4 box\n\t\tf row=1:1:4 {\n\t\t\tw\u00a0!?20\n\t\t\tf column=1:1:4 {\n\t\t\t\ts i=$i(i)\n\t\t\t\tw $j(box(i),2),\" \"\n\t\t\t}\n\t\t}\n\t\tr\u00a0!!,\"Enter number to move (q to quit): \",number\n\t\tq:number=\"q\"\n\t\tf i=1:1:16 q:box(i)=\"\"\n\t\tif box(i)=\"\" {\n\t\t\tif i&gt;4,number=box(i-4) {\n\t\t\t\ts box(i)=number,box(i-4)=\"\"\n\t\t\t\tw\u00a0!!\n\t\t\t}\n\t\t\telseif i&gt;1,i'=5,i'=9,i'=13,number=box(i-1) {\n\t\t\t\ts box(i)=number,box(i-1)=\"\"\n\t\t\t\tw\u00a0!!\n\t\t\t}\n\t\t\telseif i&lt;16,i'=4,i'=8,i'=12,number=box(i+1) {\n\t\t\t\ts box(i)=number,box(i+1)=\"\"\n\t\t\t\tw\u00a0!!\n\t\t\t}\n\t\t\telseif i&lt;13,number=box(i+4) {\n\t\t\t\ts box(i)=number,box(i+4)=\"\"\n\t\t\t\tw\u00a0!!\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw\u00a0!,\"You have to enter a number either above, below, left or right of the empty space.\"\n\t\t\t}\n\t\t}\n\t}\n\tq\n</pre>"}, {"lang": "OCaml", "loc": 39, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">module</span> Puzzle <span class=\"sy0\">=</span><br/><span class=\"kw1\">struct</span><br/>  <span class=\"kw1\">type</span> t <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEarray\"><span class=\"kw4\">array</span></a><br/>  <span class=\"kw1\">let</span> make <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"br0\">[</span><span class=\"sy0\">|</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span> <span class=\"co1\">(* 0: the empty space *)</span><br/>        <span class=\"nu0\">0</span><span class=\"sy0\">;</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span>  <span class=\"nu0\">2</span><span class=\"sy0\">;</span>  <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>        <span class=\"nu0\">4</span><span class=\"sy0\">;</span>  <span class=\"nu0\">5</span><span class=\"sy0\">;</span>  <span class=\"nu0\">6</span><span class=\"sy0\">;</span>  <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>        <span class=\"nu0\">8</span><span class=\"sy0\">;</span>  <span class=\"nu0\">9</span><span class=\"sy0\">;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span><br/>       <span class=\"nu0\">12</span><span class=\"sy0\">;</span> <span class=\"nu0\">13</span><span class=\"sy0\">;</span> <span class=\"nu0\">14</span><span class=\"sy0\">;</span>  <span class=\"sy0\">|</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> move p n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> hole, i <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>, p<span class=\"sy0\">.</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    p<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> i<span class=\"sy0\">;</span><br/>    p<span class=\"sy0\">.</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> hole<br/>\u00a0<br/>  <span class=\"kw1\">let</span> print p <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> out <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>make <span class=\"nu0\">16</span> <span class=\"st0\">\"   \"</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">15</span> <span class=\"kw1\">do</span><br/>      out<span class=\"sy0\">.</span><span class=\"br0\">(</span>p<span class=\"sy0\">.</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>sprintf <span class=\"st0\">\"\u00a0%2d\"</span> i<br/>    <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">15</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"kw1\">mod</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> out<span class=\"sy0\">.</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> shuffle p n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n <span class=\"kw1\">do</span><br/>      move p <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> <span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">done</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">let</span> play <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> p <span class=\"sy0\">=</span> Puzzle<span class=\"sy0\">.</span>make <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  Puzzle<span class=\"sy0\">.</span>shuffle p <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"kw1\">true</span> <span class=\"kw1\">do</span><br/>    Puzzle<span class=\"sy0\">.</span>print p<span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"st0\">\"&gt; \"</span><span class=\"sy0\">;</span><br/>    Puzzle<span class=\"sy0\">.</span>move p <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALread_line\"><span class=\"kw3\">read_line</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_string\"><span class=\"kw3\">int_of_string</span></a><span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span></pre>"}, {"lang": "Perl", "loc": 252, "block": "<pre class=\"perl highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">use</span> Getopt<span class=\"sy0\">::</span><span class=\"me2\">Long</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">Util</span> <span class=\"nu0\">1.29</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>shuffle pairmap first all<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Tk<span class=\"sy0\">;</span><br/>    <span class=\"co1\"># 5 options                                 1 label text</span><br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$verbose</span><span class=\"sy0\">,</span><span class=\"re0\">@fixed</span><span class=\"sy0\">,</span><span class=\"re0\">$nocolor</span><span class=\"sy0\">,</span><span class=\"re0\">$charsize</span><span class=\"sy0\">,</span><span class=\"re0\">$extreme</span><span class=\"sy0\">,</span><span class=\"re0\">$solvability</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">unless</span> <span class=\"br0\">(</span>GetOptions <span class=\"br0\">(</span><br/>                     <span class=\"st_h\">'verbose!'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\$verbose</span><span class=\"sy0\">,</span><br/>                     <span class=\"st_h\">'tiles|positions=i{16}'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\@fixed</span><span class=\"sy0\">,</span><br/>                     <span class=\"st_h\">'nocolor'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\$nocolor</span><span class=\"sy0\">,</span><br/>                     <span class=\"st_h\">'charsize|size|c|s=i'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\$charsize</span><span class=\"sy0\">,</span><br/>                     <span class=\"st_h\">'extreme|x|perl'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\$extreme</span><span class=\"sy0\">,</span><br/>                    <span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"invalid arguments!\"</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">@fixed</span> <span class=\"sy0\">=</span> <span class=\"re0\">&amp;check_req_pos</span><span class=\"br0\">(</span><span class=\"re0\">@fixed</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">@fixed</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$mw</span> <span class=\"sy0\">=</span> Tk<span class=\"sy0\">::</span><span class=\"me2\">MainWindow</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>bg<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'black'</span><span class=\"sy0\">,-</span>title<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'Giuoco del 15'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$nocolor</span><span class=\"br0\">)</span><span class=\"br0\">{</span> <span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">optionAdd</span><span class=\"br0\">(</span> <span class=\"st_h\">'*Button.background'</span><span class=\"sy0\">,</span>   <span class=\"st_h\">'ivory'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">optionAdd</span><span class=\"br0\">(</span><span class=\"st_h\">'*Button.font'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Courier '</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"re0\">$charsize</span> <span class=\"kw1\">or</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st_h\">' bold'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/bind.html\"><span class=\"kw3\">bind</span></a><span class=\"br0\">(</span><span class=\"st_h\">'&lt;Control-s&gt;'</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span><span class=\"br0\">{</span><span class=\"co1\">#&amp;init_board;</span><br/>                             <span class=\"re0\">&amp;shuffle_board</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$top_frame</span> <span class=\"sy0\">=</span> <span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Frame</span><span class=\"br0\">(</span> <span class=\"sy0\">-</span>borderwidth <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>relief <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'groove'</span><span class=\"sy0\">,</span><br/>                           <span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/pack.html\"><span class=\"kw3\">pack</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span>expand <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'both'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$top_frame</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Label</span><span class=\"br0\">(</span> <span class=\"sy0\">-</span>textvariable<span class=\"sy0\">=&gt;</span><span class=\"re0\">\\$solvability</span><span class=\"sy0\">,</span><br/>                  <span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/pack.html\"><span class=\"kw3\">pack</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span>expand <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'both'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$game_frame</span> <span class=\"sy0\">=</span> <span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Frame</span><span class=\"br0\">(</span>  <span class=\"sy0\">-</span>background<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'saddlebrown'</span><span class=\"sy0\">,</span><br/>                              <span class=\"sy0\">-</span>borderwidth <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>relief <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'groove'</span><span class=\"sy0\">,</span><br/>                            <span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/pack.html\"><span class=\"kw3\">pack</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span>expand <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'both'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># set victory conditions in pairs of coordinates</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@vic_cond</span> <span class=\"sy0\">=</span>  pairmap <span class=\"br0\">{</span><br/>       <span class=\"br0\">[</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span><span class=\"re0\">$b</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">0</span> <span class=\"nu0\">2</span> <span class=\"nu0\">0</span> <span class=\"nu0\">3</span><br/>         <span class=\"nu0\">1</span> <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">1</span> <span class=\"nu0\">3</span><br/>         <span class=\"nu0\">2</span> <span class=\"nu0\">0</span> <span class=\"nu0\">2</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">2</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span><br/>         <span class=\"nu0\">3</span> <span class=\"nu0\">0</span> <span class=\"nu0\">3</span> <span class=\"nu0\">1</span> <span class=\"nu0\">3</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$board</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$victorious</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">&amp;init_board</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$extreme</span> <span class=\"br0\">)</span><span class=\"br0\">{</span> <span class=\"re0\">&amp;extreme_perl</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">&amp;shuffle_board</span><span class=\"sy0\">;</span><br/>\u00a0<br/>MainLoop<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">################################################################################</span><br/><span class=\"kw2\">sub</span> init_board<span class=\"br0\">{</span><br/>  <span class=\"co1\"># tiles from 1 to 15</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"nu0\">14</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>     <span class=\"re0\">$$board</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>          btn<span class=\"sy0\">=&gt;</span><span class=\"re0\">$game_frame</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Button</span><span class=\"br0\">(</span><br/>                            <span class=\"sy0\">-</span>text <span class=\"sy0\">=&gt;</span> <span class=\"co5\">$_</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>relief <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'raised'</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>borderwidth <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>height <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>width <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>background<span class=\"sy0\">=&gt;</span><span class=\"re0\">$nocolor</span><span class=\"sy0\">?</span><span class=\"st_h\">'ivory'</span><span class=\"sy0\">:</span><span class=\"st_h\">'gold1'</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>activebackground <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$nocolor</span><span class=\"sy0\">?</span><span class=\"st_h\">'ivory'</span><span class=\"sy0\">:</span><span class=\"st_h\">'gold1'</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>foreground<span class=\"sy0\">=&gt;</span> <span class=\"re0\">$nocolor</span><span class=\"sy0\">?</span><span class=\"st_h\">'black'</span><span class=\"sy0\">:</span><span class=\"st_h\">'DarkRed'</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>activeforeground<span class=\"sy0\">=&gt;</span><span class=\"re0\">$nocolor</span><span class=\"sy0\">?</span><span class=\"st_h\">'black'</span><span class=\"sy0\">:</span><span class=\"st_h\">'DarkRed'</span><br/>          <span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>          name <span class=\"sy0\">=&gt;</span> <span class=\"co5\">$_</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>     <span class=\"co1\"># x and y set by shuffle_board</span><br/>     <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^(2|4|5|7|10|12|13|15)$/</span> <span class=\"kw1\">and</span> <span class=\"sy0\">!</span><span class=\"re0\">$nocolor</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>         <span class=\"re0\">$$board</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">configure</span><span class=\"br0\">(</span><br/>                                  <span class=\"sy0\">-</span>background<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'DarkRed'</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>activebackground <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'DarkRed'</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>foreground<span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'gold1'</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>activeforeground<span class=\"sy0\">=&gt;</span><span class=\"st_h\">'gold1'</span><br/>         <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>     <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"co1\"># empty tile</span><br/>   <span class=\"re0\">$$board</span><span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>          btn<span class=\"sy0\">=&gt;</span><span class=\"re0\">$game_frame</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Button</span><span class=\"br0\">(</span><br/>                            <span class=\"sy0\">-</span>relief <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'sunken'</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>borderwidth <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>background <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'lavender'</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>height <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span><br/>                            <span class=\"sy0\">-</span>width <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span><br/>          <span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>          name <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span>      <span class=\"co1\"># x and y set by shuffle_board</span><br/>     <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">################################################################################</span><br/><span class=\"kw2\">sub</span> shuffle_board<span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$victorious</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"re0\">$victorious</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">&amp;init_board</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">@fixed</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>          <span class=\"kw1\">my</span> <span class=\"re0\">$index</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>          <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$tile</span><span class=\"br0\">(</span><span class=\"re0\">@$board</span><span class=\"br0\">[</span><span class=\"re0\">@fixed</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>                  <span class=\"kw1\">my</span> <span class=\"re0\">$xy</span> <span class=\"sy0\">=</span> <span class=\"re0\">$vic_cond</span><span class=\"br0\">[</span><span class=\"re0\">$index</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                  <span class=\"br0\">(</span><span class=\"re0\">$$tile</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">,</span><span class=\"re0\">$$tile</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$xy</span><span class=\"sy0\">;</span><br/>                  <span class=\"re0\">$$tile</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">grid</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>row<span class=\"sy0\">=&gt;</span><span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>column<span class=\"sy0\">=&gt;</span> <span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                  <span class=\"re0\">$$tile</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">configure</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>command <span class=\"sy0\">=&gt;</span><span class=\"br0\">[</span><span class=\"re0\">\\&amp;move</span><span class=\"sy0\">,</span><span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                  <span class=\"re0\">$index</span><span class=\"sy0\">++;</span><br/>          <span class=\"br0\">}</span><br/>          <a href=\"http://perldoc.perl.org/functions/undef.html\"><span class=\"kw3\">undef</span></a> <span class=\"re0\">@fixed</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@valid</span> <span class=\"sy0\">=</span> shuffle <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$tile</span> <span class=\"br0\">(</span> <span class=\"re0\">@$board</span> <span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$xy</span> <span class=\"sy0\">=</span> <span class=\"re0\">$vic_cond</span><span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"re0\">@valid</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">(</span><span class=\"re0\">$$tile</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">,</span><span class=\"re0\">$$tile</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$xy</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$$tile</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">grid</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>row<span class=\"sy0\">=&gt;</span><span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>column<span class=\"sy0\">=&gt;</span> <span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$$tile</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">configure</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>command <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"re0\">\\&amp;move</span><span class=\"sy0\">,</span> <span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$$xy</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@appear</span> <span class=\"sy0\">=</span>  <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>name<span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"nu0\">16</span><span class=\"sy0\">?</span><span class=\"st_h\">'X'</span><span class=\"sy0\">:</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>name<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>                  <a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a><span class=\"br0\">{</span><span class=\"re0\">$$a</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">&lt;=&gt;</span><span class=\"re0\">$$b</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">||</span><span class=\"re0\">$$a</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">&lt;=&gt;</span><span class=\"re0\">$$b</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"re0\">@$board</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"st_h\">'-'</span> x <span class=\"nu0\">57</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><br/>          <span class=\"st0\">\"Appearence of the board:<span class=\"es0\">\\n</span>[@appear]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><br/>          <span class=\"br0\">(</span><span class=\"st_h\">'-'</span> x <span class=\"nu0\">57</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><br/>          <span class=\"st0\">\"current<span class=\"es0\">\\t</span>followers<span class=\"es0\">\\t</span>               less than current<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><br/>          <span class=\"br0\">(</span><span class=\"st_h\">'-'</span> x <span class=\"nu0\">57</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$verbose</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># remove the, from now on inutile, 'X' for the empty space</span><br/>    <span class=\"re0\">@appear</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a><span class=\"br0\">{</span><span class=\"co5\">$_</span> <span class=\"kw1\">ne</span> <span class=\"st_h\">'X'</span><span class=\"br0\">}</span> <span class=\"re0\">@appear</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$permutation</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$num</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"re0\">$#appear</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"re0\">$num</span> <span class=\"sy0\">==</span> <span class=\"re0\">$#appear</span><span class=\"sy0\">;</span><br/>         <span class=\"kw1\">my</span> <span class=\"re0\">$perm</span><span class=\"sy0\">;</span><br/>          <span class=\"re0\">$perm</span> <span class=\"sy0\">+=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span><span class=\"co5\">$_</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$appear</span><span class=\"br0\">[</span><span class=\"re0\">$num</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"re0\">@appear</span><span class=\"br0\">[</span><span class=\"re0\">$num</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$#appear</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$verbose</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"[$appear[$num]]<span class=\"es0\">\\t</span>@appear[$num+1..$#appear]\"</span><span class=\"sy0\">.</span><br/>            <span class=\"br0\">(</span><span class=\"st0\">\" \"</span> x <span class=\"br0\">(</span><span class=\"nu0\">37</span> <span class=\"sy0\">-</span> <a href=\"http://perldoc.perl.org/functions/length.html\"><span class=\"kw3\">length</span></a> <span class=\"st0\">\"@appear[$num+1..$#appear]\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>            <span class=\"st0\">\"<span class=\"es0\">\\t</span>   $perm \"</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"re0\">$num</span> <span class=\"sy0\">==</span> <span class=\"re0\">$#appear</span>  <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'='</span> <span class=\"sy0\">:</span> <span class=\"st_h\">'+'</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>          <span class=\"br0\">}</span><br/>          <span class=\"re0\">$permutation</span><span class=\"sy0\">+=</span><span class=\"re0\">$perm</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">+</span><span class=\"br0\">(</span><span class=\"st_h\">' '</span> x <span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"----<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$verbose</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$permutation</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Impossible game with odd permutations!\"</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"st_h\">' '</span> x <span class=\"nu0\">13</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>              <span class=\"st0\">\"$permutation<span class=\"es0\">\\n</span>\"</span><span class=\"kw1\">if</span> <span class=\"re0\">$verbose</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$solvability</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Impossible game with odd permutations [$permutation]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><br/>                        <span class=\"st0\">\"(ctrl-s to shuffle)\"</span><span class=\"sy0\">.</span><br/>                        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$verbose</span> <span class=\"kw1\">or</span> <span class=\"re0\">$extreme</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st_h\">''</span> <span class=\"sy0\">:</span><br/>                           <span class=\"st0\">\" run with --verbose to see more info\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\"># 105 is the max permutation</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$diff</span> <span class=\"sy0\">=</span>  <span class=\"re0\">$permutation</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'SOLVED'</span> <span class=\"sy0\">:</span><br/>                <span class=\"re0\">$permutation</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">35</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'EASY  '</span> <span class=\"sy0\">:</span><br/>                <span class=\"re0\">$permutation</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">70</span> <span class=\"sy0\">?</span> <span class=\"st_h\">'MEDIUM'</span> <span class=\"sy0\">:</span> <span class=\"st_h\">'HARD  '</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"$diff game with even permutations\"</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"st_h\">' '</span> x <span class=\"nu0\">17</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>          <span class=\"st0\">\"$permutation<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">if</span> <span class=\"re0\">$verbose</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$solvability</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$diff game with permutation parity of [$permutation]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">.</span><br/>                    <span class=\"st0\">\"(ctrl-s to shuffle)\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">################################################################################</span><br/><span class=\"kw2\">sub</span> move<span class=\"br0\">{</span><br/>    <span class=\"co1\"># original x and y</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$ox</span><span class=\"sy0\">,</span> <span class=\"re0\">$oy</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$self</span> <span class=\"sy0\">=</span> first<span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"re0\">$ox</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"re0\">$oy</span><span class=\"br0\">}</span> <span class=\"re0\">@$board</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">if</span> <span class=\"re0\">$$self</span><span class=\"br0\">{</span>name<span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"nu0\">16</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># check if one in n,s,e,o is the empty one</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$empty</span> <span class=\"sy0\">=</span> first <span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>name<span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"nu0\">16</span> <span class=\"kw1\">and</span><br/>                          <span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$ox</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$oy</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span><br/>                            <span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$ox</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$oy</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span><br/>                            <span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$ox</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$oy</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span><br/>                            <span class=\"br0\">(</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$ox</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">==</span><span class=\"re0\">$oy</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                           <span class=\"br0\">)</span><br/>                      <span class=\"br0\">}</span> <span class=\"re0\">@$board</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">unless</span> <span class=\"re0\">$empty</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># empty x and y</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$ex</span><span class=\"sy0\">,</span><span class=\"re0\">$ey</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$$empty</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">,</span><span class=\"re0\">$$empty</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># reconfigure emtpy tile</span><br/>    <span class=\"re0\">$$empty</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">grid</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>row <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ox</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>column <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$oy</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$$empty</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">=</span><span class=\"re0\">$ox</span><span class=\"sy0\">;</span>    <span class=\"re0\">$$empty</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">=</span><span class=\"re0\">$oy</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># reconfigure pressed tile</span><br/>    <span class=\"re0\">$$self</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">grid</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>row <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ex</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>column <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ey</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$$self</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">configure</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>command <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span> <span class=\"re0\">\\&amp;move</span><span class=\"sy0\">,</span> <span class=\"re0\">$ex</span><span class=\"sy0\">,</span> <span class=\"re0\">$ey</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$$self</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">=</span><span class=\"re0\">$ex</span><span class=\"sy0\">;</span>    <span class=\"re0\">$$self</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span><span class=\"sy0\">=</span><span class=\"re0\">$ey</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># check for victory if the empty one is at the bottom rigth tile (3,3)</span><br/>    <span class=\"re0\">&amp;check_win</span> <span class=\"kw1\">if</span> <span class=\"re0\">$$empty</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span> <span class=\"kw1\">and</span> <span class=\"re0\">$$empty</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/y.html\"><span class=\"kw3\">y</span></a><span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">################################################################################</span><br/><span class=\"kw2\">sub</span> check_win<span class=\"br0\">{</span><br/>     <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$pos</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"co5\">$#</span><span class=\"re0\">$board</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"kw1\">unless</span> <span class=\"br0\">(</span> <span class=\"re0\">$$board</span><span class=\"br0\">[</span><span class=\"re0\">$pos</span><span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"st_h\">'x'</span><span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"re0\">$vic_cond</span><span class=\"br0\">[</span><span class=\"re0\">$pos</span><span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"kw1\">and</span><br/>                        <span class=\"re0\">$$board</span><span class=\"br0\">[</span><span class=\"re0\">$pos</span><span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"st_h\">'y'</span><span class=\"br0\">}</span> <span class=\"sy0\">==</span> <span class=\"re0\">$vic_cond</span><span class=\"br0\">[</span><span class=\"re0\">$pos</span><span class=\"br0\">]</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>     <span class=\"br0\">}</span><br/>     <span class=\"co1\"># victory!</span><br/>     <span class=\"re0\">$victorious</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">my</span> <span class=\"re0\">@text</span> <span class=\"sy0\">=</span>  <span class=\"br0\">(</span><span class=\"st_h\">'Dis'</span><span class=\"sy0\">,</span><span class=\"st_h\">'ci'</span><span class=\"sy0\">,</span><span class=\"st_h\">'pu'</span><span class=\"sy0\">,</span><span class=\"st_h\">'lus'</span><span class=\"sy0\">,</span><span class=\"st_h\">'15th'</span><span class=\"sy0\">,</span><span class=\"st_h\">''</span><span class=\"sy0\">,</span><span class=\"st_h\">''</span><span class=\"sy0\">,</span><span class=\"st_h\">'at'</span><span class=\"sy0\">,</span><br/>                  <span class=\"st_h\">'P'</span><span class=\"sy0\">,</span><span class=\"st_h\">'e'</span><span class=\"sy0\">,</span><span class=\"st_h\">'r'</span><span class=\"sy0\">,</span><span class=\"st_h\">'l'</span><span class=\"sy0\">,</span><span class=\"st_h\">'M'</span><span class=\"sy0\">,</span><span class=\"st_h\">'o'</span><span class=\"sy0\">,</span><span class=\"st_h\">'n'</span><span class=\"sy0\">,</span><span class=\"st_h\">'ks*'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$tile</span><span class=\"br0\">(</span><span class=\"re0\">@$board</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <span class=\"re0\">$$tile</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">configure</span><span class=\"br0\">(</span> <span class=\"sy0\">-</span>text<span class=\"sy0\">=&gt;</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"re0\">@text</span><span class=\"sy0\">,</span><br/>                                    <span class=\"sy0\">-</span>command<span class=\"sy0\">=&gt;</span><span class=\"kw2\">sub</span><span class=\"br0\">{</span><a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">update</span><span class=\"sy0\">;</span><br/>            <a href=\"http://perldoc.perl.org/functions/sleep.html\"><span class=\"kw3\">sleep</span></a> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>     <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">################################################################################</span><br/><span class=\"kw2\">sub</span> check_req_pos<span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@wanted</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># fix @wanted: seems GetOptions does not die if more elements are passed</span><br/>    <span class=\"re0\">@wanted</span> <span class=\"sy0\">=</span> <span class=\"re0\">@wanted</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@check</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">unless</span> <span class=\"br0\">(</span> all <span class=\"br0\">{</span><span class=\"co5\">$_</span> <span class=\"sy0\">==</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"re0\">@check</span><span class=\"br0\">}</span> <a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a> <span class=\"br0\">{</span><span class=\"re0\">$a</span><span class=\"sy0\">&lt;=&gt;</span><span class=\"re0\">$b</span><span class=\"br0\">}</span> <span class=\"re0\">@wanted</span> <span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"tiles must be from 1 to 16 (empty tile)<span class=\"es0\">\\n</span>you passed [@wanted]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"re0\">@wanted</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">################################################################################</span><br/><span class=\"kw2\">sub</span> extreme_perl <span class=\"br0\">{</span><br/>  <span class=\"re0\">$verbose</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">optionAdd</span><span class=\"br0\">(</span><span class=\"st_h\">'*font'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Courier 20 bold'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">@extreme</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>    <span class=\"st_h\">'if $0'</span><span class=\"sy0\">,</span>                               <span class=\"co1\">#1</span><br/>    <span class=\"st0\">\"<span class=\"es0\">\\$</span>_=<span class=\"es0\">\\n</span>()=<span class=\"es0\">\\n</span><span class=\"es0\">\\\"</span>foo<span class=\"es0\">\\\"</span>=~/o/g\"</span><span class=\"sy0\">,</span>            <span class=\"co1\">#2</span><br/>    <span class=\"st0\">\"use warnings;<span class=\"es0\">\\n</span><span class=\"es0\">\\$</span>^W\u00a0?<span class=\"es0\">\\n</span>int((length<span class=\"es0\">\\n</span>'Discipulus')/3)<span class=\"es0\">\\n</span>:'15'\"</span><span class=\"sy0\">,</span>   <span class=\"co1\">#3</span><br/>    <span class=\"st0\">\"length <span class=\"es0\">\\$</span>1<span class=\"es0\">\\n</span>if <span class=\"es0\">\\$</span>^X=~<span class=\"es0\">\\n</span><span class=\"es0\">\\/</span>(?:<span class=\"es0\">\\\\</span>W)(<span class=\"es0\">\\\\</span>w*)<span class=\"es0\">\\n</span>(?:<span class=\"es0\">\\\\</span>.exe)<span class=\"es0\">\\$</span><span class=\"es0\">\\/</span>\"</span><span class=\"sy0\">,</span> <span class=\"co1\">#4</span><br/>    <span class=\"st0\">\"use Config;<span class=\"es0\">\\n</span><span class=\"es0\">\\$</span>Config{baserev}\"</span><span class=\"sy0\">,</span>                   <span class=\"co1\">#5.</span><br/>    <span class=\"st0\">\"(split '',<span class=\"es0\">\\n</span>vec('JAPH'<span class=\"es0\">\\n</span>,1,8))[0]\"</span><span class=\"sy0\">,</span>       <span class=\"co1\">#6</span><br/>    <span class=\"st0\">\"scalar map<span class=\"es0\">\\n</span>{ord(<span class=\"es0\">\\$</span>_)=~/1/g}<span class=\"es0\">\\n</span>qw(p e r l)\"</span><span class=\"sy0\">,</span> <span class=\"co1\">#7</span><br/>    <span class=\"st0\">\"<span class=\"es0\">\\$</span>_ = () =<span class=\"es0\">\\n</span>'J A P H'<span class=\"es0\">\\n</span>=~<span class=\"es0\">\\/</span><span class=\"es0\">\\\\</span>b<span class=\"es0\">\\/</span>g\"</span><span class=\"sy0\">,</span>   <span class=\"co1\"># 8</span><br/>    <span class=\"st0\">\"eval join '+',<span class=\"es0\">\\n</span>split '',<span class=\"es0\">\\n</span>(substr<span class=\"es0\">\\n</span>'12345',3,2)\"</span><span class=\"sy0\">,</span>  <span class=\"co1\">#9</span><br/>    <span class=\"st_h\">'printf <span class=\"es_h\">\\'</span>%b<span class=\"es_h\">\\'</span>,2'</span><span class=\"sy0\">,</span>                     <span class=\"co1\">#10</span><br/>    <span class=\"st0\">\"int(((1+sqrt(5))<span class=\"es0\">\\n</span>/ 2)** 7 /<span class=\"es0\">\\n</span>sqrt(5)+0.5)-2\"</span><span class=\"sy0\">,</span>    <span class=\"co1\">#11</span><br/>    <span class=\"st0\">\"split '',<span class=\"es0\">\\n</span>unpack('V',<span class=\"es0\">\\n</span>01234567))<span class=\"es0\">\\n</span>[6,4]\"</span><span class=\"sy0\">,</span>  <span class=\"co1\"># 12</span><br/>    <span class=\"st_h\">'J'</span><span class=\"sy0\">,</span><span class=\"st_h\">'A'</span><span class=\"sy0\">,</span><span class=\"st_h\">'P'</span><span class=\"sy0\">,</span><span class=\"st_h\">'H'</span>                               <span class=\"co1\"># 13..16</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      <span class=\"re0\">$$board</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">{</span>btn<span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">configure</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>text<span class=\"sy0\">=&gt;</span> <span class=\"re0\">$extreme</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                 <span class=\"sy0\">-</span>height <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span><br/>                                  <span class=\"sy0\">-</span>width <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$extreme</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"br0\">}</span><br/>  <span class=\"re0\">@fixed</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">9</span> <span class=\"nu0\">10</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">13</span> <span class=\"nu0\">14</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$mw</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">5000</span><span class=\"sy0\">,</span><span class=\"re0\">\\&amp;shuffle_board</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">#</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 117, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">use</span> Term<span class=\"sy0\">::</span><span class=\"me2\">termios</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> <span class=\"re0\">$saved</span>   <span class=\"sy0\">=</span> Term<span class=\"sy0\">::</span><span class=\"me2\">termios</span><span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>fd <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">getattr</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> <span class=\"re0\">$termios</span> <span class=\"sy0\">=</span> Term<span class=\"sy0\">::</span><span class=\"me2\">termios</span><span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>fd <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">getattr</span><span class=\"sy0\">;</span><br/><span class=\"co1\"># raw mode interferes with carriage returns, so</span><br/><span class=\"co1\"># set flags needed to emulate it manually</span><br/><span class=\"re0\">$termios</span><span class=\"sy0\">.</span><span class=\"me1\">unset_iflags</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;</span>BRKINT ICRNL ISTRIP IXON<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$termios</span><span class=\"sy0\">.</span><span class=\"me1\">unset_lflags</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> ECHO ICANON IEXTEN ISIG<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$termios</span><span class=\"sy0\">.</span><span class=\"me1\">setattr</span><span class=\"br0\">(</span><span class=\"sy0\">:</span>DRAIN<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># reset terminal to original setting on exit</span><br/><span class=\"kw2\">END</span> <span class=\"br0\">{</span> <span class=\"re0\">$saved</span><span class=\"sy0\">.</span><span class=\"me1\">setattr</span><span class=\"br0\">(</span><span class=\"sy0\">:</span>NOW<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> n    <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"co1\"># board size</span><br/><span class=\"kw1\">constant</span> cell <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span> <span class=\"co1\"># cell width</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> <span class=\"re0\">$top</span> <span class=\"sy0\">=</span> <span class=\"kw3\">join</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">x</span> cell<span class=\"sy0\">,</span> <span class=\"st_h\">'\u250c'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u252c'</span> <span class=\"kw1\">xx</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2510'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> <span class=\"re0\">$mid</span> <span class=\"sy0\">=</span> <span class=\"kw3\">join</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">x</span> cell<span class=\"sy0\">,</span> <span class=\"st_h\">'\u251c'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u253c'</span> <span class=\"kw1\">xx</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2524'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> <span class=\"re0\">$bot</span> <span class=\"sy0\">=</span> <span class=\"kw3\">join</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">x</span> cell<span class=\"sy0\">,</span> <span class=\"st_h\">'\u2514'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2534'</span> <span class=\"kw1\">xx</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2518'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">%dir</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>   <span class=\"st0\">\"<span class=\"es0\">\\e</span>[A\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'up'</span><span class=\"sy0\">,</span><br/>   <span class=\"st0\">\"<span class=\"es0\">\\e</span>[B\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'down'</span><span class=\"sy0\">,</span><br/>   <span class=\"st0\">\"<span class=\"es0\">\\e</span>[C\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'right'</span><span class=\"sy0\">,</span><br/>   <span class=\"st0\">\"<span class=\"es0\">\\e</span>[D\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'left'</span><span class=\"sy0\">,</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@solved</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"sy0\">,</span><span class=\"nu0\">14</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"st_h\">' '</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@board</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> <span class=\"kw2\">new</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">loop</span> <span class=\"br0\">{</span><br/>       <span class=\"re0\">@board</span> <span class=\"sy0\">=</span> shuffle<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> parity<span class=\"sy0\">-</span>ok<span class=\"br0\">(</span><span class=\"re0\">@board</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> parity<span class=\"sy0\">-</span>ok <span class=\"br0\">(</span><span class=\"re0\">@b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$row</span> <span class=\"sy0\">=</span> <span class=\"re0\">@b</span><span class=\"sy0\">.</span><span class=\"kw3\">first</span><span class=\"br0\">(</span><span class=\"co2\">/' '/</span><span class=\"sy0\">,:</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$col</span> <span class=\"sy0\">=</span> <span class=\"re0\">@b</span><span class=\"br0\">[</span><span class=\"re0\">$row</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">first</span><span class=\"br0\">(</span><span class=\"co2\">/' '/</span><span class=\"sy0\">,:</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    so <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;-&gt;&gt;</span> <span class=\"br0\">[</span><span class=\"re0\">$row</span><span class=\"sy0\">,</span><span class=\"re0\">$col</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">sum</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> shuffle <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@c</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"sy0\">,</span><span class=\"nu0\">14</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"st_h\">' '</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">^</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$yd</span><span class=\"sy0\">,</span> <span class=\"re0\">$ym</span><span class=\"sy0\">,</span> <span class=\"re0\">$xd</span><span class=\"sy0\">,</span> <span class=\"re0\">$xm</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"kw1\">div</span> n<span class=\"sy0\">,</span> <span class=\"re0\">$y</span> mod n<span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"kw1\">div</span> n<span class=\"sy0\">,</span> <span class=\"re0\">$x</span> mod n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$temp</span>    <span class=\"sy0\">=</span> <span class=\"re0\">@c</span><span class=\"br0\">[</span><span class=\"re0\">$ym</span><span class=\"sy0\">;</span><span class=\"re0\">$yd</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">@c</span><span class=\"br0\">[</span><span class=\"re0\">$ym</span><span class=\"sy0\">;</span><span class=\"re0\">$yd</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">@c</span><span class=\"br0\">[</span><span class=\"re0\">$xm</span><span class=\"sy0\">;</span><span class=\"re0\">$xd</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">@c</span><span class=\"br0\">[</span><span class=\"re0\">$xm</span><span class=\"sy0\">;</span><span class=\"re0\">$xd</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$temp</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">@c</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> row <span class=\"br0\">(</span><span class=\"re0\">@row</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"st_h\">'\u2502'</span> <span class=\"sy0\">~</span> <span class=\"br0\">(</span><span class=\"kw3\">join</span> <span class=\"st_h\">'\u2502'</span><span class=\"sy0\">,</span> <span class=\"re0\">@row</span>\u00bb<span class=\"sy0\">.</span><span class=\"re0\">&amp;center</span><span class=\"br0\">)</span> <span class=\"sy0\">~</span> <span class=\"st_h\">'\u2502'</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> center <span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$c</span>   <span class=\"sy0\">=</span> cell <span class=\"sy0\">-</span> <span class=\"re0\">$s</span><span class=\"sy0\">.</span><span class=\"kw3\">chars</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$pad</span> <span class=\"sy0\">=</span> <span class=\"st_h\">' '</span> <span class=\"kw1\">x</span> <span class=\"kw3\">ceiling</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">sprintf</span> <span class=\"st0\">\"%{cell}s\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"$s$pad\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> draw<span class=\"sy0\">-</span>board <span class=\"br0\">{</span><br/>    run<span class=\"br0\">(</span><span class=\"st_h\">'clear'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">print</span> qq<span class=\"sy0\">:</span>to<span class=\"sy0\">/</span><span class=\"kw2\">END</span><span class=\"sy0\">/;</span><br/>\u00a0<br/>\u00a0<br/>\tPress direction arrows to move<span class=\"sy0\">.</span><br/>\u00a0<br/>\t<span class=\"me1\">Press</span> q to quit<span class=\"sy0\">.</span> <span class=\"me1\">Press</span> n <span class=\"kw1\">for</span> a <span class=\"kw2\">new</span> puzzle<span class=\"sy0\">.</span><br/>\u00a0<br/>\t<span class=\"re0\">$top</span><br/>\t<span class=\"br0\">{</span> <span class=\"kw3\">join</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\t</span>$mid<span class=\"es0\">\\n</span><span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"re0\">&amp;row</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">@board</span> <span class=\"br0\">}</span><br/>\t<span class=\"re0\">$bot</span><br/>\u00a0<br/>\t<span class=\"br0\">{</span> <span class=\"br0\">(</span>so <span class=\"re0\">@board</span> <span class=\"sy0\">~~</span> <span class=\"re0\">@solved</span><span class=\"br0\">)</span> <span class=\"sy0\">??</span> <span class=\"st_h\">'Solved!!'</span> <span class=\"sy0\">!!</span> <span class=\"st_h\">''</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">END</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> slide <span class=\"br0\">(</span><span class=\"re0\">@c</span> <span class=\"kw1\">is</span> copy<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$t</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">grep</span> <span class=\"br0\">{</span> <span class=\"co2\">/' '/</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span>k<span class=\"sy0\">,</span> <span class=\"re0\">@c</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">@c</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$t</span> <span class=\"kw1\">and</span> <span class=\"re0\">$t</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@c</span><span class=\"br0\">[</span><span class=\"re0\">$t</span><span class=\"sy0\">,</span><span class=\"re0\">$t</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">@c</span><span class=\"br0\">[</span><span class=\"re0\">$t</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"re0\">$t</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@c</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">proto</span> <span class=\"kw2\">sub</span> move <span class=\"br0\">(</span><span class=\"sy0\">|</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> move<span class=\"br0\">(</span><span class=\"st_h\">'up'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"sy0\">*;</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">reverse</span> slide <span class=\"kw3\">reverse</span> <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"sy0\">*;</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span>n<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> move<span class=\"br0\">(</span><span class=\"st_h\">'down'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"sy0\">*;</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> slide <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"sy0\">*;</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span>n<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> move<span class=\"br0\">(</span><span class=\"st_h\">'left'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">reverse</span> slide <span class=\"kw3\">reverse</span> <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span>n<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> move<span class=\"br0\">(</span><span class=\"st_h\">'right'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> slide <span class=\"re0\">@board</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span>n<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">loop</span> <span class=\"br0\">{</span><br/>    draw<span class=\"sy0\">-</span>board<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># Read up to 4 bytes from keyboard buffer.</span><br/>    <span class=\"co1\"># Page navigation keys are 3-4 bytes each.</span><br/>    <span class=\"co1\"># Specifically, arrow keys are 3.</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$key</span> <span class=\"sy0\">=</span> <span class=\"re0\">$*IN</span><span class=\"sy0\">.</span><span class=\"me1\">read</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">decode</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    move <span class=\"re0\">%dir</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span> <span class=\"kw1\">if</span> so <span class=\"re0\">%dir</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"re0\">$key</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'q'</span><span class=\"sy0\">;</span> <span class=\"co1\"># (q)uit</span><br/>    <span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$key</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'n'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 31, "block": "<pre class=\"text highlighted_source\">constant ESC=27, UP=328, LEFT=331, RIGHT=333, DOWN=336<br/>sequence board = tagset(15)&amp;0, solve = board<br/>integer pos = 16<br/>\u00a0<br/>procedure print_board()<br/>    for i=1 to length(board) do<br/>        puts(1,iff(i=pos?\"   \":sprintf(\"%3d\",{board[i]})))<br/>        if mod(i,4)=0 then puts(1,\"\\n\") end if<br/>    end for<br/>    puts(1,\"\\n\")<br/>end procedure<br/>\u00a0<br/>procedure move(integer d)<br/>    integer new_pos = pos+{+4,+1,-1,-4}[d]<br/>    if new_pos&gt;=1 and new_pos&lt;=16<br/>    and (mod(pos,4)=mod(new_pos,4) -- same col, or row:<br/>     or floor((pos-1)/4)=floor((new_pos-1)/4)) then<br/>        {board[pos],board[new_pos]} = {board[new_pos],0}<br/>        pos = new_pos<br/>    end if<br/>end procedure<br/>\u00a0<br/>for i=1 to 5 do move(rand(4)) end for<br/>while 1 do<br/>    print_board()<br/>    if board=solve then exit end if<br/>    integer c = find(wait_key(),{ESC,UP,LEFT,RIGHT,DOWN})-1<br/>    if c=0 then exit end if<br/>    move(c)<br/>end while<br/>puts(1,\"solved!\\n\")</pre>"}, {"lang": "Python", "loc": 126, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"st0\">''' Structural Game for 15 - Puzzle with different difficulty levels'''</span><br/><span class=\"kw1\">from</span> <span class=\"kw3\">random</span> <span class=\"kw1\">import</span> randint<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">class</span> Puzzle:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">items</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">position</span> <span class=\"sy0\">=</span> <span class=\"kw2\">None</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> main_frame<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        d <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'|%s|%s|%s|%s|'</span>\u00a0% <span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'|%s|%s|%s|%s|'</span>\u00a0% <span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'|%s|%s|%s|%s|'</span>\u00a0% <span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'|%s|%s|%s|%s|'</span>\u00a0% <span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">14</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> d<span class=\"br0\">[</span><span class=\"nu0\">16</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+-----+-----+-----+-----+'</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> format<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> ch<span class=\"br0\">)</span>:<br/>        ch <span class=\"sy0\">=</span> ch.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"st0\">'  '</span> + ch + <span class=\"st0\">'  '</span><br/>        <span class=\"kw1\">elif</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"st0\">'  '</span> + ch + <span class=\"st0\">' '</span><br/>        <span class=\"kw1\">elif</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"st0\">'     '</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> change<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> to<span class=\"br0\">)</span>:<br/>        fro <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">position</span><br/>        <span class=\"kw1\">for</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span>.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">if</span> b <span class=\"sy0\">==</span> <span class=\"kw2\">self</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>to<span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>                to <span class=\"sy0\">=</span> a<br/>                <span class=\"kw1\">break</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>fro<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>to<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>to<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>fro<span class=\"br0\">]</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">position</span> <span class=\"sy0\">=</span> to<br/>\u00a0<br/>    <span class=\"kw1\">def</span> build_board<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> difficulty<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        tmp <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">for</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span>.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">if</span> b <span class=\"sy0\">==</span> <span class=\"st0\">'  16 '</span>:<br/>                <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'     '</span><br/>                tmp <span class=\"sy0\">=</span> a<br/>                <span class=\"kw1\">break</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">position</span> <span class=\"sy0\">=</span> tmp<br/>        <span class=\"kw1\">if</span> difficulty <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>            diff <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>        <span class=\"kw1\">elif</span> difficulty <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>:<br/>            diff <span class=\"sy0\">=</span> <span class=\"nu0\">50</span><br/>        <span class=\"kw1\">else</span>:<br/>            diff <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>        <span class=\"kw1\">for</span> _ <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>diff<span class=\"br0\">)</span>:<br/>            lst <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">valid_moves</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            lst1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>            <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> lst:<br/>                lst1.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span>j.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">change</span><span class=\"br0\">(</span>lst1<span class=\"br0\">[</span>randint<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>lst1<span class=\"br0\">)</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> valid_moves<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        pos <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">position</span><br/>        <span class=\"kw1\">if</span> pos <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"br0\">]</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\\<br/>                   <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\\<br/>                   <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">]</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\\<br/>                   <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\\<br/>                  <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"sy0\">==</span> <span class=\"nu0\">4</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"sy0\">==</span> <span class=\"nu0\">13</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">elif</span> pos <span class=\"sy0\">==</span> <span class=\"nu0\">16</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span><span class=\"br0\">[</span>pos - <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> game_over<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        flag <span class=\"sy0\">=</span> <span class=\"kw2\">False</span><br/>        <span class=\"kw1\">for</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">items</span>.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">if</span> b <span class=\"sy0\">==</span> <span class=\"st0\">'     '</span>:<br/>                <span class=\"kw1\">pass</span><br/>            <span class=\"kw1\">else</span>:<br/>                <span class=\"kw1\">if</span> a <span class=\"sy0\">==</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span>b.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>                    flag <span class=\"sy0\">=</span> <span class=\"kw2\">True</span><br/>                <span class=\"kw1\">else</span>:<br/>                    flag <span class=\"sy0\">=</span> <span class=\"kw2\">False</span><br/>        <span class=\"kw1\">return</span> flag<br/>\u00a0<br/>\u00a0<br/>g <span class=\"sy0\">=</span> Puzzle<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>g.<span class=\"me1\">build_board</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">'Enter the difficulty\u00a0: 0 1 2<span class=\"es0\">\\n</span>2 '</span><br/>                        <span class=\"st0\">'=&gt; highest 0=&gt; lowest<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>g.<span class=\"me1\">main_frame</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Enter 0 to exit'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Hello user:<span class=\"es0\">\\n</span>To change the position just enter the no. near it'</span><span class=\"br0\">)</span><br/>    lst <span class=\"sy0\">=</span> g.<span class=\"me1\">valid_moves</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    lst1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> lst:<br/>        lst1.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span>i.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span>i.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es0\">\\t</span>'</span><span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">''</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    x <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> x <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">break</span><br/>    <span class=\"kw1\">elif</span> x <span class=\"kw1\">not</span> <span class=\"kw1\">in</span> lst1:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Wrong move'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span>:<br/>        g.<span class=\"me1\">change</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>    g.<span class=\"me1\">main_frame</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> g.<span class=\"me1\">game_over</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'You WON'</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">break</span><br/>\u00a0</pre>"}, {"lang": "QB64", "loc": 85, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>_TITLE \"GUI Sliding Blocks Game \"<br/>RANDOMIZE TIMER<br/>\u00a0<br/>' get from user the desired board size = s<br/>DO<br/>    LOCATE CSRLIN, 3: INPUT \"(0 quits) Enter your number of blocks per side 3 - 9 you want &gt; \", s<br/>    IF s = 0 THEN END<br/>LOOP UNTIL s &gt; 2 AND s &lt; 10<br/>\u00a0<br/>' screen setup: based on the square blocks q pixels a sides<br/>q = 540 / s 'square size, shoot for 540 x 540 pixel board display<br/>SCREEN _NEWIMAGE(q * s + 1, q * s + 1, 32): _SCREENMOVE 360, 60<br/>\u00a0<br/>'initialize board = solution<br/>DIM board(s, s)<br/>FOR r = 1 TO s<br/>    FOR c = 1 TO s<br/>        board(c, r) = c + (r - 1) * s<br/>    NEXT<br/>NEXT<br/>board(s, s) = 0: c0 = s: r0 = s<br/>\u00a0<br/>'scramble board for puzzle<br/>FOR i = 0 TO s ^ 5 ' mix blocks<br/>    SELECT CASE INT(RND * 4) + 1<br/>        CASE 1: IF c0 &lt; s THEN board(c0, r0) = board(c0 + 1, r0): board(c0 + 1, r0) = 0: c0 = c0 + 1<br/>        CASE 2: IF c0 &gt; 1 THEN board(c0, r0) = board(c0 - 1, r0): board(c0 - 1, r0) = 0: c0 = c0 - 1<br/>        CASE 3: IF r0 &lt; s THEN board(c0, r0) = board(c0, r0 + 1): board(c0, r0 + 1) = 0: r0 = r0 + 1<br/>        CASE 4: IF r0 &gt; 1 THEN board(c0, r0) = board(c0, r0 - 1): board(c0, r0 - 1) = 0: r0 = r0 - 1<br/>    END SELECT<br/>NEXT<br/>\u00a0<br/>t = TIMER: update = -1 'OK user here you go!<br/>DO<br/>    IF update THEN 'display status and determine if solved<br/>        solved = -1: update = 0<br/>        FOR r = 1 TO s<br/>            FOR c = 1 TO s<br/>                IF board(c, r) THEN<br/>                    IF board(c, r) &lt;&gt; (r - 1) * s + c THEN solved = 0<br/>                    COLOR _RGB32(255, 255, 255), _RGB32(0, 0, 255)<br/>                    LINE ((c - 1) * q + 1, (r - 1) * q + 2)-(c * q - 2, r * q - 2), _RGB32(0, 0, 255), BF<br/>                    _PRINTSTRING ((c - 1) * q + .4 * q, (r - 1) * q + .4 * q), RIGHT$(\" \" + STR$(board(c, r)), 2)<br/>                ELSE<br/>                    IF board(s, s) &lt;&gt; 0 THEN solved = 0<br/>                    COLOR _RGB32(0, 0, 0), _RGB32(0, 0, 0)<br/>                    LINE ((c - 1) * q, (r - 1) * q)-(c * q, r * q), , BF<br/>                END IF<br/>            NEXT<br/>        NEXT<br/>        IF solved THEN 'flash the Solved Report until user closes window else report status<br/>            _DISPLAY<br/>            flash$ = \"Solved!\" + STR$(mc) + \" Moves in \" + STR$(INT(TIMER - t)) + \" secs.\"<br/>            WHILE 1: _TITLE flash$: _DELAY .2: _TITLE \"  \": _DELAY .2: WEND<br/>        ELSE<br/>            _TITLE STR$(mc) + \" Moves in \" + STR$(INT(TIMER - t)) + \" secs.\" + STR$(test)<br/>        END IF<br/>        _DISPLAY<br/>    END IF<br/>\u00a0<br/>    'get next mouse click, check if on block next to empty space make move or beep<br/>    m = _MOUSEINPUT: mb = _MOUSEBUTTON(1): mx = _MOUSEX: my = _MOUSEY<br/>    IF mb AND solved = 0 THEN 'get last place mouse button was down<br/>        mb = _MOUSEBUTTON(1): mx = _MOUSEX: my = _MOUSEY<br/>        WHILE mb 'left button down, wait for mouse button release<br/>            m = _MOUSEINPUT: mb = _MOUSEBUTTON(1): mx = _MOUSEX: my = _MOUSEY<br/>        WEND<br/>\u00a0<br/>        'convert mouse position to board array (x, y) are we near empty space?<br/>        bx = INT(mx / q) + 1: by = INT(my / q) + 1: update = -1<br/>        IF bx = c0 + 1 AND by = r0 THEN<br/>            board(c0, r0) = board(c0 + 1, r0): board(c0 + 1, r0) = 0: c0 = c0 + 1: mc = mc + 1<br/>        ELSEIF bx = c0 - 1 AND by = r0 THEN<br/>            board(c0, r0) = board(c0 - 1, r0): board(c0 - 1, r0) = 0: c0 = c0 - 1: mc = mc + 1<br/>        ELSEIF bx = c0 AND by = r0 + 1 THEN<br/>            board(c0, r0) = board(c0, r0 + 1): board(c0, r0 + 1) = 0: r0 = r0 + 1: mc = mc + 1<br/>        ELSEIF bx = c0 AND by = r0 - 1 THEN<br/>            board(c0, r0) = board(c0, r0 - 1): board(c0, r0 - 1) = 0: r0 = r0 - 1: mc = mc + 1<br/>        ELSE<br/>            BEEP<br/>        END IF<br/>    END IF<br/>LOOP<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 49, "block": "<pre class=\"text highlighted_source\">#lang racket/base<br/>(require 2htdp/universe 2htdp/image racket/list racket/match)<br/>\u00a0<br/>(define ((fifteen-&gt;pict (finished? #f)) fifteen)<br/>  (for/fold ((i (empty-scene 0 0))) ((r 4))<br/>    (define row<br/>      (for/fold ((i (empty-scene 0 0))) ((c 4))<br/>        (define v (list-ref fifteen (+ (* r 4) c)))<br/>        (define cell<br/>          (if v<br/>              (overlay/align<br/>               \"center\" \"center\"<br/>               (rectangle 50 50 'outline (if finished? \"white\" \"blue\"))<br/>               (text (number-&gt;string v) 30 \"black\"))<br/>              (rectangle 50 50 'solid (if finished? \"white\" \"powderblue\"))))<br/>        (beside i cell)))<br/>    (above i row)))<br/>\u00a0<br/>(define (move-space fifteen direction)<br/>  (define idx (for/first ((i (in-naturals)) (x fifteen) #:unless x) i))<br/>  (define-values (row col) (quotient/remainder idx 4))<br/>  (define dest (+ idx (match direction<br/>                        ['l #:when (&gt; col 0) -1]<br/>                        ['r #:when (&lt; col 3)  1]<br/>                        ['u #:when (&gt; row 0) -4]<br/>                        ['d #:when (&lt; row 3)  4]<br/>                        [else 0])))<br/>    (list-set (list-set fifteen idx (list-ref fifteen dest)) dest #f))<br/>\u00a0<br/>(define (key-move-space fifteen a-key)<br/>  (cond [(key=? a-key \"left\") (move-space fifteen 'l)]<br/>        [(key=? a-key \"right\") (move-space fifteen 'r)]<br/>        [(key=? a-key \"up\") (move-space fifteen 'u)]<br/>        [(key=? a-key \"down\") (move-space fifteen 'd)]<br/>        [else fifteen]))<br/>\u00a0<br/>(define (shuffle-15 fifteen shuffles)<br/>  (for/fold ((rv fifteen)) ((_ shuffles))<br/>    (move-space rv (list-ref '(u d l r) (random 4)))))<br/>\u00a0<br/>(define fifteen0 '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #f))<br/>\u00a0<br/>(define (solved-world? w) (equal? w fifteen0))<br/>\u00a0<br/>(big-bang (shuffle-15 fifteen0 200)<br/>          (name \"Fifteen\")<br/>          (to-draw (fifteen-&gt;pict))<br/>          (stop-when solved-world? (fifteen-&gt;pict #t))<br/>          (on-key key-move-space))</pre>"}, {"lang": "Rebol", "loc": 6, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol []</span>  <span class=\"kw3\">random</span><span class=\"sy0\">/</span>seed <span class=\"kw3\">now</span>  g: <span class=\"br0\">[</span>style t box red <span class=\"br0\">[</span><br/>  <span class=\"kw2\">if</span> <span class=\"kw3\">not</span> <span class=\"kw3\">find</span> <span class=\"br0\">[</span>0x108 108x0 0x-<span class=\"nu0\">108</span> -108x0<span class=\"br0\">]</span> face<span class=\"sy0\">/</span>offset - e<span class=\"sy0\">/</span>offset <span class=\"br0\">[</span><span class=\"kw2\">exit</span><span class=\"br0\">]</span><br/>  x: face<span class=\"sy0\">/</span>offset face<span class=\"sy0\">/</span>offset: e<span class=\"sy0\">/</span>offset e<span class=\"sy0\">/</span>offset: x<span class=\"br0\">]</span> across<br/><span class=\"br0\">]</span> x: <span class=\"kw3\">random</span> <span class=\"kw2\">repeat</span> i <span class=\"nu0\">15</span> <span class=\"br0\">[</span><span class=\"kw3\">append</span> x:<span class=\"br0\">[</span><span class=\"br0\">]</span> i<span class=\"br0\">]</span>  <span class=\"kw2\">repeat</span> i <span class=\"nu0\">15</span> <span class=\"br0\">[</span><br/>  <span class=\"kw3\">repend</span> g <span class=\"br0\">[</span>'t <span class=\"kw3\">mold</span> x<span class=\"sy0\">/</span>:i <span class=\"kw3\">random</span> white<span class=\"br0\">]</span> <span class=\"kw2\">if</span> <span class=\"kw3\">find</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span> <span class=\"nu0\">8</span> <span class=\"nu0\">12</span><span class=\"br0\">]</span> i <span class=\"br0\">[</span><span class=\"kw3\">append</span> g '<span class=\"kw2\">return</span><span class=\"br0\">]</span><br/><span class=\"br0\">]</span> <span class=\"kw3\">append</span> g <span class=\"br0\">[</span>e: box<span class=\"br0\">]</span>  <span class=\"kw3\">view</span> <span class=\"kw3\">layout</span> g</pre>"}, {"lang": "REXX", "loc": 54, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program implements the  15\u2500puzzle  (AKA: Gem Puzzle, Boss Puzzle, Mystic Square).*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> N seed <span class=\"sy0\">.</span>                               <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> N==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> N==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> N=<span class=\"nu0\">4</span>                      <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> <span class=\"kw6\">datatype</span><span class=\"br0\">(</span>seed, <span class=\"st0\">'W'</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> <span class=\"kw6\">random</span> ,,seed  <span class=\"coMULTI\">/*use repeatability seed for RANDOM BIF*/</span><br/>nh=N<span class=\"sy0\">**</span><span class=\"nu0\">2</span>;   @<span class=\"sy0\">.</span>=;    nn=nh - <span class=\"nu0\">1</span>;     w=<span class=\"kw6\">length</span><span class=\"br0\">(</span>nn<span class=\"br0\">)</span>   <span class=\"coMULTI\">/*define/initialize some handy values. */</span><br/>$=<br/>       <span class=\"kw1\">do</span> i=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> nn;  $=$  i;   <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*i*/</span>      <span class=\"coMULTI\">/* [\u25c4]  build a solution for testing.  */</span><br/>done=$                                           <span class=\"coMULTI\">/* [\u2193]  scramble the tiles in puzzle.  */</span><br/>       <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> nn;  a=<span class=\"kw6\">random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"kw6\">words</span><span class=\"br0\">(</span>$<span class=\"br0\">)</span><span class=\"br0\">)</span>; @<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>$,a<span class=\"br0\">)</span>; $=<span class=\"kw6\">delword</span><span class=\"br0\">(</span>$,a,<span class=\"nu0\">1</span><span class=\"br0\">)</span>;  <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*j*/</span><br/><span class=\"coMULTI\">/*\u2550\u2550\u2550\u2500\u2500\u2500\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 play the 15\u2500puzzle 'til done or quit.*/</span><br/>   <span class=\"kw1\">do</span>  <span class=\"kw2\">until</span> puzz=done <span class=\"sy0\">&amp;</span> @<span class=\"sy0\">.</span>nh==<span class=\"st0\">''</span>                <span class=\"coMULTI\">/*perform moves until puzzle is solved.*/</span><br/>   <span class=\"kw1\">call</span> getmv                                    <span class=\"coMULTI\">/*get user's move(s)  and  validate it.*/</span><br/>   <span class=\"kw1\">if</span> errMsg<span class=\"sy0\">\\</span>==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span> sep errMsg<span class=\"st0\">\".\"</span>;  <span class=\"kw1\">iterate</span>; <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*possible error message? */</span><br/>   <span class=\"kw1\">call</span> showGrid <span class=\"nu0\">0</span>                               <span class=\"coMULTI\">/*don't display puzzle, just find hole.*/</span><br/>   <span class=\"kw1\">if</span> <span class=\"kw6\">wordpos</span><span class=\"br0\">(</span>x,\u00a0!<span class=\"br0\">)</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span> sep  <span class=\"st0\">'tile '</span>  x  <span class=\"st0\">\" can't be moved.\"</span>;  <span class=\"kw1\">iterate</span>;   <span class=\"kw3\">end</span><br/>   @<span class=\"sy0\">.</span>hole=x;   @<span class=\"sy0\">.</span>tile=;      <span class=\"kw1\">call</span> showGrid <span class=\"nu0\">0</span>     <span class=\"coMULTI\">/*move specified tile \u2500\u2500\u2500\u25ba puzzle hole.*/</span><br/>   <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*until*/</span><br/>\u00a0<br/><span class=\"kw1\">call</span> showGrid <span class=\"nu0\">1</span>;    <span class=\"kw1\">say</span>;     <span class=\"kw1\">say</span> sep  <span class=\"st0\">'Congratulations!   The'</span>      nn<span class=\"st0\">\"-puzzle is solved.\"</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>getmv: x=<span class=\"nu0\">0</span>;    sep= <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'\u2500'</span>, <span class=\"nu0\">8</span><span class=\"br0\">)</span>;      pad=<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"st0\">''</span>, <span class=\"nu0\">1</span> + <span class=\"kw6\">length</span><span class=\"br0\">(</span>sep<span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"coMULTI\">/*pad=9 blanks*/</span><br/>       prompt= sep    <span class=\"st0\">'Please enter a tile number  or  numbers '</span>     sep     <span class=\"st0\">\" (or Quit).\"</span><br/>       <span class=\"kw1\">if</span> <span class=\"kw6\">queued</span><span class=\"br0\">(</span><span class=\"br0\">)</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;   <span class=\"kw1\">say</span>;   <span class=\"kw1\">call</span> showGrid <span class=\"nu0\">1</span>;   <span class=\"kw1\">say</span>;   <span class=\"kw1\">say</span> prompt;   <span class=\"kw3\">end</span><br/>       <span class=\"kw1\">pull</span> x                                    <span class=\"coMULTI\">/*obtain a number (or numbers) from CL.*/</span><br/>       <span class=\"kw1\">if</span> <span class=\"kw6\">abbrev</span><span class=\"br0\">(</span><span class=\"st0\">'QUIT'</span>, x, <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span>;  <span class=\"kw1\">say</span>;  <span class=\"kw1\">say</span> sep  <span class=\"st0\">\"quitting.\"</span>;   <span class=\"kw1\">exit</span>;    <span class=\"kw3\">end</span><br/>       <span class=\"kw1\">if</span> <span class=\"kw6\">words</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> x  x xq;  <span class=\"kw1\">queue</span> xq;   <span class=\"kw3\">end</span><br/>              <span class=\"kw1\">select</span><br/>              <span class=\"kw3\">when</span> x ==<span class=\"st0\">''</span>             <span class=\"kw3\">then</span> errMsg= <span class=\"st0\">\"nothing entered\"</span><br/>              <span class=\"kw3\">when</span> <span class=\"sy0\">\\</span><span class=\"kw6\">datatype</span><span class=\"br0\">(</span>x, <span class=\"st0\">'N'</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> errMsg= <span class=\"st0\">\"tile number isn't numeric\"</span><br/>              <span class=\"kw3\">when</span> <span class=\"sy0\">\\</span><span class=\"kw6\">datatype</span><span class=\"br0\">(</span>x, <span class=\"st0\">'W'</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> errMsg= <span class=\"st0\">\"tile number isn't an integer\"</span><br/>              <span class=\"kw3\">when</span> x=<span class=\"nu0\">0</span>                <span class=\"kw3\">then</span> errMsg= <span class=\"st0\">\"tile number can't be zero\"</span><br/>              <span class=\"kw3\">when</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>                <span class=\"kw3\">then</span> errMsg= <span class=\"st0\">\"tile number can't be negative\"</span><br/>              <span class=\"kw3\">when</span> x<span class=\"sy0\">&gt;</span>nn               <span class=\"kw3\">then</span> errMsg= <span class=\"st0\">\"tile number can't be greater than\"</span>  nn<br/>              <span class=\"kw3\">otherwise</span>                    errMsg=<br/>              <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*select*/</span>                   <span class=\"coMULTI\">/* [\u2191]  verify the human entered data. */</span><br/>       <span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>showGrid: <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> show;      \u00a0!<span class=\"sy0\">.</span>=;            #=<span class=\"nu0\">0</span>;       x=x<span class=\"sy0\">/</span><span class=\"nu0\">1</span>;              puzz=<br/>          top= <span class=\"st0\">'\u2554'</span><span class=\"kw6\">copies</span><span class=\"br0\">(</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">\"\u2550\"</span>, w<span class=\"br0\">)</span><span class=\"st0\">'\u2566'</span>, N<span class=\"br0\">)</span>;         top=<span class=\"kw6\">left</span><span class=\"br0\">(</span> top, <span class=\"kw6\">length</span><span class=\"br0\">(</span>top<span class=\"br0\">)</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\"\u2557\"</span><br/>          bar= <span class=\"st0\">'\u2560'</span><span class=\"kw6\">copies</span><span class=\"br0\">(</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">\"\u2550\"</span>, w<span class=\"br0\">)</span><span class=\"st0\">'\u256c'</span>, N<span class=\"br0\">)</span>;         bar=<span class=\"kw6\">left</span><span class=\"br0\">(</span> bar, <span class=\"kw6\">length</span><span class=\"br0\">(</span>bar<span class=\"br0\">)</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\"\u2563\"</span><br/>          bot= <span class=\"st0\">'\u255a'</span><span class=\"kw6\">copies</span><span class=\"br0\">(</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">\"\u2550\"</span>, w<span class=\"br0\">)</span><span class=\"st0\">'\u2569'</span>, N<span class=\"br0\">)</span>;         bot=<span class=\"kw6\">left</span><span class=\"br0\">(</span> bot, <span class=\"kw6\">length</span><span class=\"br0\">(</span>bot<span class=\"br0\">)</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\"\u255d\"</span><br/>          <span class=\"kw1\">if</span> show  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> pad top<br/>               <span class=\"kw1\">do</span>   r=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> N;      z=<span class=\"st0\">'\u2551'</span><br/>                 <span class=\"kw1\">do</span> c=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> N;      #=#+<span class=\"nu0\">1</span>;     <a class=\"__cf_email__\" data-cfemail=\"0a73374a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>#;       puzz=puzz y;         \u00a0!<span class=\"sy0\">.</span>r<span class=\"sy0\">.</span>c=y<br/>                 _=<span class=\"kw6\">right</span><span class=\"br0\">(</span>@<span class=\"sy0\">.</span>#, w<span class=\"br0\">)</span><span class=\"st0\">\"\u2551\"</span>;            z=z <span class=\"sy0\">||</span> _               <span class=\"coMULTI\">/* [\u2193]  find hole*/</span><br/>                 <span class=\"kw1\">if</span> @<span class=\"sy0\">.</span>#==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  hole=#;  holeRow=r;   holeCol=c;    <span class=\"kw3\">end</span><br/>                 <span class=\"kw1\">if</span> @<span class=\"sy0\">.</span>#==x   <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  tile=#;  tileRow=r;   tileCol=c;    <span class=\"kw3\">end</span><br/>                 <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*c*/</span>                                           <span class=\"coMULTI\">/* [\u2191]  find  X. */</span><br/>               <span class=\"kw1\">if</span> show  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span> pad z;  <span class=\"kw1\">if</span> r<span class=\"sy0\">\\</span>==N  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> pad bar;  <span class=\"kw3\">end</span><br/>               <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*r*/</span><br/>          rm=holeRow-<span class=\"nu0\">1</span>;   rp=holeRow+<span class=\"nu0\">1</span>;  cm=holeCol-<span class=\"nu0\">1</span>;  cp=holeCol+<span class=\"nu0\">1</span>   <span class=\"coMULTI\">/*possible moves.*/</span><br/>         \u00a0!=!<span class=\"sy0\">.</span>rm<span class=\"sy0\">.</span>holeCol \u00a0!<span class=\"sy0\">.</span>rp<span class=\"sy0\">.</span>holeCol  \u00a0!<span class=\"sy0\">.</span>holeRow<span class=\"sy0\">.</span>cm  \u00a0!<span class=\"sy0\">.</span>holeRow<span class=\"sy0\">.</span>cp   <span class=\"coMULTI\">/* legal   moves.*/</span><br/>          <span class=\"kw1\">if</span> show  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> pad bot;            <span class=\"kw1\">return</span></pre>"}, {"lang": "Ring", "loc": 763, "block": "<pre class=\"text highlighted_source\"># Project\u00a0: CalmoSoft Fifteen Puzzle Game (Under Development)<br/>\u00a0<br/>load \"guilib.ring\"<br/>\u00a0<br/>app1 = new qapp {<br/>\u00a0<br/>        stylefusionblack()<br/>        empty = 16  <br/>        nrMoves = 0<br/>        nrSleep = 1<br/>        butSize = 4 <br/>        curBut = 4<br/>        temp = 0<br/>        flaginit = 0<br/>        flagsave = 0<br/>        flagmove = 0<br/>        button = list(52)   <br/>        sizebtn = list(7)<br/>        table1 = [] <br/>        table2 = [] <br/>        table3 = []<br/>        nDegree = 0<br/>        nrDegree = [0,90,180,270 ,-90,-180,-270]<br/>        nDegreeRight = 0<br/>        nDegreeLeft = 0<br/>        btnDegree = newlist(52,2)<br/>        CounterMan = 0 <br/>        t1 = 0<br/>\u00a0<br/>        win1 = new qwidget() {<br/>                   move(0,0)<br/>                   resize(380,760)<br/>                   setwindowtitle(\"CalmoSoft Fifteen Puzzle Game\")<br/>\u00a0<br/>                  for n=1 to 52<br/>                        for m=1 to 2<br/>                             btnDegree[n][m] = 0<br/>                        next<br/>                  next <br/>\u00a0<br/>                   for n = 4 to 7<br/>                               sizebtn[n] = new qpushbutton(win1)   <br/>                               {<br/>                                                  col = n%4<br/>                                                  setgeometry(100+col*40,60,40,40)<br/>                                                  settext(string(n) + \"x\" + string(n))<br/>                                                  setclickevent(\"newsize(\" + string(n) + \")\")<br/>                               } <br/>                   next    <br/>\u00a0<br/>                  btnMoves = new qpushbutton(win1)<br/>                  {<br/>                                 setgeometry(100,260,80,40)<br/>                                 settext(\"0\")<br/>                                 show() <br/>                  }<br/>\u00a0<br/>                   scramblebtn = new qpushbutton(win1)<br/>                   {<br/>                                         setgeometry(100,300,160,40)<br/>                                         settext(\"Scramble\")<br/>                                         setclickevent(\"scramble()\")                        <br/>                   }<br/>\u00a0<br/>                   resetbtn = new qpushbutton(win1)   <br/>                   {<br/>                                    setgeometry(100,340,160,40)<br/>                                    settext(\"Reset\")<br/>                                    setclickevent(\"resettiles()\")<br/>                   }<br/>\u00a0<br/>                   savebtn = new qpushbutton(win1)   <br/>                   {<br/>                                   setgeometry(100,380,160,40)  <br/>                                   settext(\"Save Game\")  <br/>                                   setclickevent(\"pSave()\")<br/>                   }<br/>\u00a0<br/>                   playbtn = new qpushbutton(win1)   <br/>                   {<br/>                                   setgeometry(100,420,160,40)  <br/>                                   settext(\"Resume Game\")  <br/>                                   setclickevent(\"pPlay()\")<br/>                   }<br/>\u00a0<br/>                   sleepbtn = new qpushbutton(win1)   <br/>                   {<br/>                                   setgeometry(100,460,160,40)  <br/>                                   settext(\"Sleep Time: \")  <br/>\u00a0<br/>                   }<br/>\u00a0<br/>                  decbtn = new qpushbutton(win1)   <br/>                  {<br/>                               setgeometry(220,460,40,40)  <br/>                               settext(\"&lt;-\")  <br/>                               setclickevent(\"pDecSleep()\")<br/>                  }<br/>\u00a0<br/>                  incbtn = new qpushbutton(win1)   <br/>                  {<br/>                               setgeometry(260,460,40,40)  <br/>                               settext(\"-&gt;\")  <br/>                               setclickevent(\"pIncSleep()\")<br/>                  }<br/>\u00a0<br/>                 rightbtn = new qpushbutton(win1)   <br/>                 {<br/>                               setgeometry(100,500,160,40)  <br/>                               settext(\"In the Right Place\u00a0: \")  <br/>                 }<br/>\u00a0<br/>                 timebtn = new qpushbutton(win1)   <br/>                 {<br/>                               setgeometry(100,540,160,40)  <br/>                               settext(\"Elapsed Time\u00a0: \")  <br/>                 }<br/>\u00a0<br/>                TimerMan = new qtimer(win1)<br/>               {<br/>                                  setinterval(500)<br/>                                  settimeoutevent(\"pTime()\")<br/>                                  stop()<br/>               }<br/>              newsize(4) <br/>              show()<br/>        }<br/>        exec()<br/>}<br/>\u00a0<br/>Func newlist x, y<br/>     if isstring(x) x=0+x ok<br/>     if isstring(y) y=0+y ok<br/>     alist = list(x)<br/>     for t in alist<br/>         t = list(y)<br/>     next<br/>     return alist<br/>\u00a0<br/>func scramble<br/>       for n= 1 to 1000   <br/>            curBut=random(butSize*butSize-1)+1<br/>            up = (empty = (curBut - butSize))<br/>            down = (empty = (curBut + butSize))<br/>            left = ((empty = (curBut - 1)) and ((curBut\u00a0% butSize)\u00a0!= 1))<br/>            right = ((empty = (curBut + 1)) and ((curBut\u00a0% butSize)\u00a0!= 0))<br/>            move = up or down or left  or right<br/>            if move = 1 <br/>               button[curBut] { temp2 = text() }<br/>               col = empty%butSize<br/>               if col = 0 col = butSize ok<br/>               row = ceil(empty/butSize)<br/>               button[empty] {<br/>                       setgeometry(60+col*40,60+row*40,40,40)<br/>                       rnd = random(6)+1<br/>                       nDegree = nrDegree[rnd]<br/>                       button[empty].setbuttoncolor(\"yellow\")<br/>                       button[empty].settext(temp2)<br/>                       button[empty].setClickEvent(\"movetile(\" + string(empty) +\")\")<br/>                       btnDegree[empty] [1] = temp2<br/>                       btnDegree[empty] [2] = nDegree<br/>                       }<br/>               button[curBut].setbuttoncolor(\"yellow\")<br/>               btnDegree[curBut][2] = 0<br/>               button[curBut]{settext(\"\")}<br/>               empty = curBut<br/>            ok<br/>       next<br/>       button[butSize*butSize+2]{settext(\"Here\")}<br/>       for n=1 to butSize*butSize<br/>             button[n].setbuttoncolor(\"yellow\")<br/>       next<br/>       table1 = []<br/>       table2 = []<br/>       table3 = []   <br/>       for n = 1 to butSize*butSize<br/>             add(table1, button[n].text())<br/>             add(table2, button[n].text())<br/>             add(table3, string(btnDegree[n][2]))<br/>       next<br/>       add(table1, string(empty))<br/>       add(table2, string(empty))<br/>       add(table3, string(empty))<br/>       add(table1, \"OK\")<br/>       add(table2, \"OK\")<br/>       add(table3, \"OK\")<br/>       flagsave = 0<br/>       flagmove = 0<br/>       nrMoves = 0<br/>       btnMoves.settext(string(nrMoves))<br/>       timebtn.settext(\"Elapsed Time\u00a0: \")<br/>       t1 = clock()<br/>       rightPlace()<br/>       return<br/>\u00a0<br/>func movetile curBut2<br/>       if (curBut2 = butSize*butSize-1 and button[curBut2].text() = \"In\")<br/>           pBack()<br/>       else<br/>           see char(7)<br/>           up = (empty = (curBut2 - butSize))<br/>           down = (empty = (curBut2 + butSize))<br/>           left = ((empty = (curBut2- 1)) and ((curBut2\u00a0% butSize)\u00a0!= 1))<br/>           right = ((empty = (curBut2 + 1)) and ((curBut2\u00a0% butSize)\u00a0!= 0))<br/>           move = up or down or left  or right<br/>           if move = 1 <br/>              temp2 = button[curBut2].text() <br/>              btnDegree[empty][1] = temp2<br/>              add(table1, temp2)<br/>              add(table2, string(curBut2))              <br/>              col = empty%butSize<br/>              if col = 0 col = butSize ok<br/>              row = ceil(empty/butSize)<br/>              button[empty] {<br/>                                   setgeometry(60+col*40,60+row*40,40,40)<br/>                                   nDegree = btnDegree[curBut2][2]<br/>                                   btnDegree[empty][2] = nDegree<br/>                                   button[empty].setbuttoncolor(\"orange\")<br/>                                   button[empty].settext(temp2)                                   <br/>              }<br/>              add(table3, string(nDegree))<br/>              button[curBut2].setbuttoncolor(\"cyan\")<br/>              button[curBut2]{settext(\"\")}<br/>              empty = curBut2<br/>              nrMoves = nrMoves + 1<br/>              btnMoves.settext(string(nrMoves))<br/>              isGameOver()<br/>           ok<br/>      ok <br/>      flagmove = 1<br/>      pElapsedTime()<br/>      rightPlace()<br/>      return<br/>\u00a0<br/>func resettiles<br/>        nDegree = 0  <br/>        empty = butSize*butSize<br/>        for empty = 1 to butSize*butSize-1<br/>             btnDegree[empty][2] = 0<br/>             nDegree = 0<br/>             btnDegree[empty][1] = string(empty)<br/>             button[empty].setstylesheet(\"background-color:yellow\")<br/>             button[empty] {settext(string(empty))}<br/>        next<br/>        button[butSize*butSize].setstylesheet(\"background-color:yellow\")<br/>        button[butSize*butSize] {settext(\"\")}<br/>        table1 = []<br/>        table2 = []<br/>        table3 = []   <br/>        for n = 1 to butSize*butSize<br/>             add(table1, button[n].text())<br/>             add(table2, button[n].text())<br/>             add(table3, string(btnDegree[n][2]))<br/>        next<br/>        add(table1, string(empty))<br/>        add(table2, string(empty))<br/>        add(table3, string(empty))<br/>        add(table1, \"OK\")<br/>        add(table2, \"OK\")<br/>        add(table3, \"OK\")<br/>        flagsave = 0<br/>        flagmove = 0<br/>        nrMoves = 0<br/>        btnMoves.settext(string(nrMoves))<br/>        timebtn.settext(\"Elapsed Time\u00a0: \")<br/>        t1 = clock()<br/>        rightPlace()<br/>        return<br/>\u00a0<br/>func pHere<br/>        if button[butSize*butSize-1].text()\u00a0!= \"\" and button[butSize*butSize+2].text() = \"Here\"<br/>           button[butSize*butSize-1] { temp = text() }<br/>           button[butSize*butSize+2].close()<br/>           button[butSize*butSize+2] = new ButtonWithRotatedText(win1)<br/>           button[butSize*butSize+2] {<br/>           setgeometry(60+(butSize-1)*40,60+(butSize+1)*40,40,40)<br/>           setstylesheet(\"background-color:yellow\")<br/>           btnDegree[butSize*butSize+2][2] = btnDegree[butSize*butSize-1][2]<br/>           nDegree = btnDegree[butSize*butSize+2][2]<br/>           emptysave = empty<br/>           empty = butSize*butSize+2<br/>           btnDegree[empty][1] = temp<br/>           settext(temp)<br/>           }<br/>           nDegree = 0<br/>           empty = butSize*butSize-1<br/>           btnDegree[empty][1] = \"In\"<br/>           button[butSize*butSize-1]{settext(\"In\")}<br/>           for n = 1 to butSize*butSize<br/>\t   button[n].setenabled(false)<br/>           next<br/>           button[butSize*butSize-1].setenabled(true)<br/>           scramblebtn.setenabled(false)<br/>           resetbtn.setenabled(false)<br/>           savebtn.setenabled(false)<br/>           playbtn.setenabled(false)<br/>           empty = emptysave<br/>        ok<br/>\u00a0<br/>func pBack<br/>        button[butSize*butSize+2] { temp = text() }<br/>        nDegree = btnDegree[butSize*butSize+2][2]<br/>        btnDegree[butSize*butSize-1][2] = btnDegree[butSize*butSize+2][2]<br/>        emptysave = empty<br/>        empty = butSize*butSize-1<br/>        btnDegree[empty][1] = temp<br/>        button[butSize*butSize-1] {settext(temp)}<br/>        button[butSize*butSize+2].close()<br/>        button[butSize*butSize+2] = new qpushbutton(win1)<br/>                {<br/>                setgeometry(60+(butSize-1)*40,60+(butSize+1)*40,40,40)<br/>                settext(\"Here\")<br/>                setclickevent(\"pHere()\")   <br/>                show() <br/>                } <br/>        for n = 1 to butSize*butSize<br/>              button[n].setenabled(true)<br/>        next<br/>        scramblebtn.setenabled(true)<br/>        resetbtn.setenabled(true)<br/>        savebtn.setenabled(true)<br/>        playbtn.setenabled(true)<br/>        empty = emptysave<br/>        isGameOver()<br/>\u00a0<br/>func rotateleft<br/>        if button[butSize*butSize+2].text()\u00a0!= \"Here\" <br/>           button[butSize*butSize+2].close()<br/>           button[butSize*butSize+2] = new ButtonWithRotatedText(win1)<br/>                      button[butSize*butSize+2] {<br/>                      setgeometry(60+(butSize-1)*40,60+(butSize+1)*40,40,40)<br/>                      setstylesheet(\"background-color:yellow\")<br/>                      nDegreeLeft = (nDegreeLeft-90)%360<br/>                      nDegree = nDegreeLeft<br/>                      btnDegree[butSize*butSize+2][2] = nDegree<br/>                      emptysave = empty<br/>                      empty = butSize*butSize+2<br/>                      btnDegree[empty][1] = temp<br/>                      button[butSize*butSize+2]{settext(temp)}<br/>                      } <br/>                      empty = emptysave<br/>        ok<br/>\u00a0<br/>func rotateright<br/>        if button[butSize*butSize+2].text()\u00a0!= \"Here\"  <br/>           button[butSize*butSize+2].close()<br/>           button[butSize*butSize+2] = new ButtonWithRotatedText(win1)<br/>                      button[butSize*butSize+2] {<br/>                      setgeometry(60+(butSize-1)*40,60+(butSize+1)*40,40,40)<br/>                      setstylesheet(\"background-color:yellow\")<br/>                      nDegreeRight = (nDegreeRight+90)%360<br/>                      nDegree = nDegreeRight<br/>                      btnDegree[butSize*butSize+2][2] = nDegree<br/>                      emptysave = empty<br/>                      empty = butSize*butSize+2<br/>                      btnDegree[empty][1] = temp<br/>                      button[butSize*butSize+2]{settext(temp)}<br/>                      }<br/>                      empty = emptysave<br/>        ok<br/>\u00a0<br/>func newsize curBut<br/>        win1{ <br/>                sizenew = curBut%4<br/>                win1.resize(360+sizenew*40,640+sizenew*40)<br/>                if flaginit\u00a0!= 0<br/>                   for nb = 1 to butSize*butSize+3<br/>                         button[nb] {close()}<br/>                   next<br/>                   btnMoves.close()<br/>                ok<br/>                scramblebtn.close()<br/>                resetbtn.close()<br/>                savebtn.close()<br/>                playbtn.close()<br/>                btnMoves.close()<br/>                sleepbtn.close()<br/>                decbtn.close()<br/>                incbtn.close()<br/>                rightbtn.close()<br/>                timebtn.close()<br/>\u00a0<br/>                for n = 1 to curBut*curBut<br/>                     col = n%curBut<br/>                     if col = 0 col = curBut ok<br/>                     row = ceil(n/curBut)<br/>                     button[n] = new ButtonWithRotatedText(win1)<br/>                                       button[n] {<br/>                                       setgeometry(60+col*40,60+row*40,40,40)<br/>                                       button[n].setbuttoncolor(\"yellow\")                                       <br/>                                       nDegree = 0<br/>                                       if n &lt; curBut*curBut<br/>                                          button[n].settext(string(n))<br/>                                       but n = curBut*curBut<br/>                                          button[n].settext(\"\")<br/>                                       ok <br/>                                       setClickEvent(\"movetile(\" + string(n) +\")\")<br/>                                       }<br/>                next<br/>\u00a0<br/>                btnMoves = new qpushbutton(win1)<br/>                {<br/>                                        setgeometry(100,60+(curBut+1)*40,(curBut-3)*40,40)<br/>                                        setStyleSheet(\"text-align:center\")<br/>                                        settext(\"0\")<br/>                                        show() <br/>                }<br/>\u00a0<br/>                button[curBut*curBut+1] = new qpushbutton(win1)<br/>                {<br/>                                              setgeometry(60+(curBut-2)*40,60+(curBut+1)*40,40,40)<br/>                                              settext(\"&lt;-\")<br/>                                              setclickevent(\"rotateLeft()\")   <br/>                                              show() <br/>                } <br/>\u00a0<br/>                button[curBut*curBut+2] = new qpushbutton(win1)<br/>                {<br/>                                             setgeometry(60+(curBut-1)*40,60+(curBut+1)*40,40,40)<br/>                                             settext(\"Here\")<br/>                                             setclickevent(\"pHere()\")   <br/>                                             show() <br/>                }<br/>\u00a0<br/>                button[curBut*curBut+3] = new qpushbutton(win1)<br/>                {<br/>                                             setgeometry(60+curBut*40,60+(curBut+1)*40,40,40)<br/>                                             settext(\"-&gt;\")<br/>                                             setclickevent(\"rotateRight()\")   <br/>                                             show() <br/>                 }<br/>\u00a0<br/>                scramblebtn = new qpushbutton(win1)<br/>                {<br/>                                      setgeometry(100,100+(curBut+1)*40,curBut*40,40)<br/>                                      settext(\"Scramble\")<br/>                                      setclickevent(\"scramble()\")<br/>                                      show()                        <br/>                }<br/>\u00a0<br/>                resetbtn = new qpushbutton(win1)   <br/>                {<br/>                                 setgeometry(100,100+(curBut+2)*40,curBut*40,40)<br/>                                 settext(\"Reset\")<br/>                                 setclickevent(\"resettiles()\")<br/>                                 show() <br/>                }<br/>\u00a0<br/>                savebtn = new qpushbutton(win1)   <br/>                {<br/>                                 setgeometry(100,100+(curBut+3)*40,curBut*40,40)<br/>                                 settext(\"Save Game\")<br/>                                 setclickevent(\"pSave()\")<br/>                                 show() <br/>                }<br/>\u00a0<br/>                playbtn = new qpushbutton(win1)   <br/>                {<br/>                               setgeometry(100,100+(curBut+4)*40,curBut*40,40)  <br/>                               settext(\"Resume Game\")  <br/>                               setclickevent(\"pPlay()\")<br/>                               show()<br/>                }<br/>\u00a0<br/>                sleepbtn = new qpushbutton(win1)   <br/>                {<br/>                               setgeometry(100,100+(curBut+5)*40,(curBut-2)*40,40)  <br/>                               settext(\"Sleep Time: \" + string(nrSleep) + \" s\")  <br/>                               show()<br/>                }<br/>\u00a0<br/>                decbtn = new qpushbutton(win1)   <br/>                {<br/>                               setgeometry(100+(curBut-2)*40,100+(curBut+5)*40,40,40)  <br/>                               settext(\"&lt;-\")  <br/>                               setclickevent(\"pDecSleep()\")<br/>                               show()<br/>                }<br/>\u00a0<br/>                incbtn = new qpushbutton(win1)   <br/>                {<br/>                               setgeometry(100+(curBut-1)*40,100+(curBut+5)*40,40,40)  <br/>                               settext(\"-&gt;\")  <br/>                               setclickevent(\"pIncSleep()\")<br/>                               show()<br/>                }<br/>\u00a0<br/>               rightbtn = new qpushbutton(win1)   <br/>                {<br/>                               setgeometry(100,100+(curBut+6)*40,curBut*40,40)  <br/>                               settext(\"In the Right Place\u00a0: \")  <br/>                               show()<br/>                }<br/>\u00a0<br/>                timebtn = new qpushbutton(win1)   <br/>                {<br/>                               setgeometry(100,100+(curBut+7)*40,curBut*40,40)  <br/>                               settext(\"Elapsed Time\u00a0: \")  <br/>                               show()<br/>                }<br/>\u00a0<br/>                table1 = []<br/>                table2 = []<br/>                table3 = []   <br/>                for n = 1 to butSize*butSize<br/>                      add(table1, button[n].text())<br/>                      add(table2, button[n].text())<br/>                      add(table3, string(0))<br/>                next<br/>                add(table1, string(empty))<br/>                add(table2, string(empty))<br/>                add(table3, string(empty))<br/>                add(table1, \"OK\")<br/>                add(table2, \"OK\")<br/>                add(table3, \"OK\")<br/>                empty = curBut*curBut<br/>                butSize = curBut<br/>                flaginit = 1<br/>                flagsave = 0<br/>                flagmove = 0<br/>                nrMoves = 0<br/>                timebtn.settext(\"Elapsed Time\u00a0: \")<br/>                t1 = clock()<br/>                scramble()<br/>                }<br/>\u00a0<br/>func pSave<br/>        textedit1 = list2str(table1)<br/>        textedit2 = list2str(table2)<br/>        textedit3 = list2str(table3)<br/>        chdir(currentdir())<br/>        cName1 = \"CalmoSoftPuzzle1.txt\"<br/>        cName2 = \"CalmoSoftPuzzle2.txt\"<br/>        cName3 = \"CalmoSoftPuzzle3.txt\"<br/>        write(cName1,textedit1)<br/>        write(cName2,textedit2)<br/>        write(cName3,textedit3)<br/>         flagsave = 1   <br/>         timebtn.settext(\"Elapsed Time\u00a0: \")<br/>         t1 = clock()<br/>         return<br/>\u00a0<br/>func pPlay<br/>        if  flagsave = 0 or flagmove = 0<br/>            warning()  <br/>        else<br/>           chdir(currentdir())<br/>           cName1 = \"CalmoSoftPuzzle1.txt\"<br/>           textedit1 = read(cName1)<br/>           table1 = str2list(textedit1)<br/>           cName2 = \"CalmoSoftPuzzle2.txt\"<br/>           textedit2 = read(cName2)<br/>           table2 = str2list(textedit2)<br/>           cName3 = \"CalmoSoftPuzzle3.txt\"<br/>           textedit3 = read(cName3)<br/>           table3 = str2list(textedit3)<br/>           for empty = 1 to butSize*butSize<br/>                button[empty].setbuttoncolor(\"yellow\") <br/>                nDegree = number(table3[empty])<br/>                btnDegree[empty][1] = table1[empty]<br/>                button[empty] {settext(table1[empty])}<br/>           next<br/>           empty = number(table1[butSize*butSize + 1])<br/>           CounterMan = butSize*butSize+2<br/>           nrMoves = 0<br/>           t1 = clock()<br/>           TimerMan.start()<br/>       ok<br/>\u00a0<br/>func pTime()<br/>        if flagsave = 0 or flagmove = 0<br/>           warning()    <br/>        else<br/>           CounterMan++<br/>           pPlaySleep()<br/>           sleep(nrSleep*1000) <br/>           pElapsedTime()<br/>           if CounterMan = len(table1)<br/>              TimerMan.stop()<br/>           ok<br/>        ok<br/>\u00a0<br/>func pPlaySleep<br/>        see char(7)<br/>        value = table1[CounterMan]<br/>        place = table2[CounterMan]<br/>        nDegree = number(table3[CounterMan])<br/>        btnDegree[empty][1] = value<br/>        button[empty].setbuttoncolor(\"orange\")<br/>        button[empty] {settext(value)}<br/>        nDegree = 0<br/>        button[number(place)].setbuttoncolor(\"cyan\")<br/>        button[number(place)] {settext(\"\")}<br/>        empty = number(place)        <br/>        nrMoves = nrMoves + 1<br/>        btnMoves.settext(string(nrMoves))<br/>\u00a0<br/>func pIncSleep<br/>        nrSleep = nrSleep + 1 <br/>        sleepbtn.settext(\"Sleep Time: \" + string(nrSleep) + \" s\")<br/>\u00a0<br/>func pDecSleep<br/>        if nrSleep &gt; 1 <br/>           nrSleep = nrSleep - 1<br/>           sleepbtn.settext(\"Sleep Time: \" + string(nrSleep) + \" s\")<br/>        ok<br/>\u00a0<br/>func sleep(x)<br/>        nTime = x <br/>        oTest = new qTest<br/>        oTest.qsleep(nTime)<br/>        return<br/>\u00a0<br/>func isGameOver<br/>        flagend = 1<br/>        for n=1 to butSize*butSize-1<br/>              if button[n].text()\u00a0!= n or btnDegree[n][2]\u00a0!= 0<br/>                 flagend = 0<br/>                 exit<br/>              ok<br/>        next<br/>        if flagend = 1<br/>           new qmessagebox(win1) {<br/>                   setwindowtitle(\"Game Over\") <br/>                   settext(\"Congratulations!\")<br/>                   show()<br/>                   }   <br/>        ok   <br/>\u00a0<br/>func rightPlace<br/>        count = 0<br/>        for n=1 to butSize*butSize<br/>             if button[n].text() = n and btnDegree[n][2] = 0<br/>                count = count + 1<br/>             ok<br/>        next   <br/>        rightbtn.settext(\"In the Right Place\u00a0: \" + count)<br/>\u00a0<br/>func warning<br/>        new qmessagebox(win1) {<br/>                setwindowtitle(\"Warning!\") <br/>                settext(\"First you must play and save the game.\")<br/>                show()<br/>                }         <br/>\u00a0<br/>func pElapsedTime<br/>        t2 = (clock() - t1)/1000<br/>        timebtn.settext(\"Elapsed Time\u00a0: \" + t2 + \" s\")<br/>\u00a0<br/>Class ButtonWithRotatedText<br/>\u00a0<br/>         oButton oLabel  cText=\"We are here\"  nDegree = 30  nTransX = 50   nTransY = 0<br/>\u00a0<br/>func init( oParent)<br/>        oButton = new qPushButton(oParent)<br/>        oLabel  = new qLabel(oParent)<br/>        oLabel.setAttribute(Qt_WA_TransparentForMouseEvents,True)<br/>        oLabel.setAttribute(Qt_WA_DeleteOnClose, True)<br/>        oButton.setAttribute(Qt_WA_DeleteOnClose, True)<br/>        oButton.Show()<br/>        return<br/>\u00a0<br/>func close()<br/>        oLabel.close()<br/>        oButton.close()<br/>        return<br/>\u00a0<br/>func setstylesheet(x)<br/>        oButton.setstylesheet(x)<br/>\u00a0<br/>func setgeometry( x,y,width,height)<br/>        oButton.setgeometry(x,y,width,height)<br/>        oLabel.setgeometry( x,y,width,height)<br/>\u00a0<br/>func setText( cValue)<br/>        cText = cValue<br/>        return<br/>\u00a0<br/>func Text() <br/>         return cText<br/>\u00a0<br/>func setTranslate( x,y )    <br/>         nTransX = x<br/>         nTransY = y\t\t<br/>         return<br/>\u00a0<br/>func TranslateOffsetX()<br/>        return nTransX <br/>\u00a0<br/>func TranslateOffsetY()<br/>        return nTransY <br/>\u00a0<br/>func setRotationDegree( nValue)<br/>        nDegree = nValue<br/>        return<br/>\u00a0<br/>func RotationDegree()<br/>        return nDegree<br/>\u00a0<br/>func setClickEvent( cEvent)<br/>        oButton.setClickEvent(cEvent)<br/>        return<br/>\u00a0<br/>func braceend()<br/>        draw() <br/>        return<br/>\u00a0<br/>func setEnabled(value)        <br/>        oButton.setenabled(value)<br/>        return\t<br/>\u00a0<br/> func setButtonColor(color)  <br/>         colorIt = \"background-color:\" + color  <br/>         oButton.setstylesheet(colorIt) <br/>         return<br/>\u00a0<br/>func draw()<br/>         picture = new qpicture()<br/>         color   = new qcolor() { setrgb(0,0,255,255) }<br/>         pen     = new qpen()   { setcolor(color) setwidth(10) }<br/>\u00a0<br/>         painter = new qpainter() <br/>         {<br/>                       begin(picture)        <br/>                       setpen(pen)<br/>                       oFont = new qfont(\"Courier New\",12,75,0)<br/>                       oFont.setpointsize(20)<br/>                       setfont(oFont)<br/>                       if nDegree = 0<br/>                          if btnDegree[empty] [1]=\"In\" p1 = -8 p2=0 <br/>                          translate(p1,p2) ok ok<br/>                       if nDegree = 0<br/>                          if btnDegree[empty] [1]&lt;10 p1 = 10 p2=10 else p1=5 p2=10 ok<br/>                          translate(p1,p2)<br/>                       but nDegree = 90<br/>                             if btnDegree[empty] [1]&lt;10 p=-10 else p=-15 ok<br/>                             translate(10,p)<br/>                       but nDegree = 180<br/>                              if btnDegree[empty] [1]&lt;10 p1= 30 p2=-10 else p1=35 p2=-10 ok<br/>                              translate(p1,p2)<br/>                       but nDegree = 270<br/>                             if btnDegree[empty] [1]&lt;10 p=10 else p=15 ok<br/>                             translate(30,p)<br/>                       but nDegree = -90<br/>                             if btnDegree[empty] [1]&lt;10 p=10 else p=15 ok<br/>                             translate(30,p)<br/>                       but nDegree = -180<br/>                              if btnDegree[empty] [1]&lt;10 p1=30 p2=-10 else p1=35 p2=-10 ok<br/>                              translate(p1,p2)<br/>                       but nDegree = -270<br/>                             if btnDegree[empty] [1]&lt;10 p1=10 p2=-10 else p1=10 p2=-15 ok<br/>                             translate(p1,p2)<br/>                       ok\t\t\t\t\t\t<br/>                       rotate(nDegree)<br/>\t          drawtext(0,0,this.Text())   <br/>                       endpaint()<br/>         }<br/>         oLabel {<br/>                    setpicture(picture)  <br/>                     show() <br/>                    }<br/>         return<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 90, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'io/console'</span><br/>\u00a0<br/><span class=\"kw1\">class</span> Board<br/>  SIZE = <span class=\"nu0\">4</span><br/>  RANGE = <span class=\"nu0\">0</span>...<span class=\"me1\">SIZE</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> initialize<br/>    width = <span class=\"br0\">(</span>SIZE<span class=\"sy0\">*</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">to_s</span>.<span class=\"me1\">size</span><br/>    <span class=\"re1\">@frame</span> = <span class=\"br0\">(</span><span class=\"st0\">\"+\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"-\"</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>width<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> SIZE <span class=\"sy0\">+</span> <span class=\"st0\">\"+\"</span><br/>    <span class=\"re1\">@form</span> = <span class=\"st0\">\"|\u00a0%#{width}d \"</span> <span class=\"sy0\">*</span> SIZE <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><br/>    <span class=\"re1\">@step</span> = <span class=\"nu0\">0</span><br/>    <span class=\"re1\">@orign</span> = <span class=\"br0\">[</span><span class=\"sy0\">*</span><span class=\"nu0\">0</span>...<span class=\"me1\">SIZE</span><span class=\"sy0\">*</span>SIZE<span class=\"br0\">]</span>.<span class=\"me1\">rotate</span>.<span class=\"me1\">each_slice</span><span class=\"br0\">(</span>SIZE<span class=\"br0\">)</span>.<span class=\"me1\">to_a</span>.<span class=\"me1\">freeze</span><br/>    <span class=\"re1\">@board</span> = <span class=\"re1\">@orign</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>row <span class=\"sy0\">|</span> row.<span class=\"me1\">dup</span><span class=\"br0\">}</span><br/>    randomize<br/>    draw<br/>    message<br/>    play<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  private<br/>\u00a0<br/>  <span class=\"kw1\">def</span> randomize<br/>    <span class=\"re1\">@board</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><br/>    <span class=\"re1\">@board</span><span class=\"br0\">[</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"re1\">@board</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span>SIZE<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    x, y, dx, dy = <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span><br/>    <span class=\"nu0\">50</span>.<span class=\"me1\">times</span> <span class=\"kw1\">do</span><br/>      nx,ny = <span class=\"br0\">[</span><span class=\"br0\">[</span>x<span class=\"sy0\">+</span>dx,y<span class=\"sy0\">+</span>dy<span class=\"br0\">]</span>, <span class=\"br0\">[</span>x<span class=\"sy0\">+</span>dy,y<span class=\"sy0\">-</span>dx<span class=\"br0\">]</span>, <span class=\"br0\">[</span>x<span class=\"sy0\">-</span>dy,y<span class=\"sy0\">+</span>dx<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>                .<span class=\"kw3\">select</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>nx,ny<span class=\"sy0\">|</span> RANGE.<span class=\"kw1\">include</span>?<span class=\"br0\">(</span>nx<span class=\"br0\">)</span> <span class=\"kw1\">and</span> RANGE.<span class=\"kw1\">include</span>?<span class=\"br0\">(</span>ny<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>                .<span class=\"me1\">sample</span><br/>      <span class=\"re1\">@board</span><span class=\"br0\">[</span>nx<span class=\"br0\">]</span><span class=\"br0\">[</span>ny<span class=\"br0\">]</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"br0\">]</span> = <span class=\"nu0\">0</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span>nx<span class=\"br0\">]</span><span class=\"br0\">[</span>ny<span class=\"br0\">]</span><br/>      x, y, dx, dy = nx, ny, nx<span class=\"sy0\">-</span>x, ny<span class=\"sy0\">-</span>y<br/>    <span class=\"kw1\">end</span><br/>    <span class=\"re1\">@x</span>, <span class=\"re1\">@y</span> = x, y <br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> draw<br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"<span class=\"es0\">\\e</span>[H<span class=\"es0\">\\e</span>[2J\"</span><br/>    <span class=\"re1\">@board</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>row<span class=\"sy0\">|</span><br/>      <span class=\"kw3\">puts</span> <span class=\"re1\">@frame</span><br/>      <span class=\"kw3\">puts</span> <span class=\"br0\">(</span>@form <span class=\"sy0\">%</span> row<span class=\"br0\">)</span>.<span class=\"kw3\">sub</span><span class=\"br0\">(</span><span class=\"st0\">\" 0 \"</span>, <span class=\"st0\">\"   \"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw3\">puts</span> <span class=\"re1\">@frame</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Step: #{@step}\"</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  DIR = <span class=\"br0\">{</span>up: <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"nu0\">0</span><span class=\"br0\">]</span>, down: <span class=\"br0\">[</span><span class=\"nu0\">1</span>,<span class=\"nu0\">0</span><span class=\"br0\">]</span>, left: <span class=\"br0\">[</span><span class=\"nu0\">0</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, right: <span class=\"br0\">[</span><span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">def</span> move<span class=\"br0\">(</span>direction<span class=\"br0\">)</span><br/>    dx, dy = DIR<span class=\"br0\">[</span>direction<span class=\"br0\">]</span><br/>    nx, ny = <span class=\"re1\">@x</span> <span class=\"sy0\">+</span> dx, <span class=\"re1\">@y</span> <span class=\"sy0\">+</span> dy<br/>    <span class=\"kw1\">if</span> RANGE.<span class=\"kw1\">include</span>?<span class=\"br0\">(</span>nx<span class=\"br0\">)</span> <span class=\"kw1\">and</span> RANGE.<span class=\"kw1\">include</span>?<span class=\"br0\">(</span>ny<span class=\"br0\">)</span><br/>      <span class=\"re1\">@board</span><span class=\"br0\">[</span>nx<span class=\"br0\">]</span><span class=\"br0\">[</span>ny<span class=\"br0\">]</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span>@x<span class=\"br0\">]</span><span class=\"br0\">[</span>@y<span class=\"br0\">]</span> = <span class=\"nu0\">0</span>, <span class=\"re1\">@board</span><span class=\"br0\">[</span>nx<span class=\"br0\">]</span><span class=\"br0\">[</span>ny<span class=\"br0\">]</span><br/>      <span class=\"re1\">@x</span>, <span class=\"re1\">@y</span> = nx, ny<br/>      <span class=\"re1\">@step</span> <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>      draw<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> play<br/>    <span class=\"kw1\">until</span> <span class=\"re1\">@board</span> == <span class=\"re1\">@orign</span><br/>      <span class=\"kw1\">case</span>  key_in<br/>      <span class=\"kw1\">when</span> <span class=\"st0\">\"<span class=\"es0\">\\e</span>[A\"</span>, <span class=\"st0\">\"w\"</span> <span class=\"kw1\">then</span> move<span class=\"br0\">(</span><span class=\"re3\">:up</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">when</span> <span class=\"st0\">\"<span class=\"es0\">\\e</span>[B\"</span>, <span class=\"st0\">\"s\"</span> <span class=\"kw1\">then</span> move<span class=\"br0\">(</span><span class=\"re3\">:down</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">when</span> <span class=\"st0\">\"<span class=\"es0\">\\e</span>[C\"</span>, <span class=\"st0\">\"d\"</span> <span class=\"kw1\">then</span> move<span class=\"br0\">(</span><span class=\"re3\">:right</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">when</span> <span class=\"st0\">\"<span class=\"es0\">\\e</span>[D\"</span>, <span class=\"st0\">\"a\"</span> <span class=\"kw1\">then</span> move<span class=\"br0\">(</span><span class=\"re3\">:left</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"kw1\">when</span> <span class=\"st0\">\"q\"</span>,<span class=\"st0\">\"<span class=\"es0\">\\u</span>0003\"</span>,<span class=\"st0\">\"<span class=\"es0\">\\u</span>0004\"</span>  <span class=\"kw1\">then</span> <span class=\"kw3\">exit</span><br/>      <span class=\"kw1\">when</span> <span class=\"st0\">\"h\"</span>  <span class=\"kw1\">then</span> message<br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Congratulations, you have won!\"</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> key_in<br/>    input = STDIN.<span class=\"me1\">getch</span><br/>    <span class=\"kw1\">if</span> input == <span class=\"st0\">\"<span class=\"es0\">\\e</span>\"</span> <br/>      <span class=\"nu0\">2</span>.<span class=\"me1\">times</span> <span class=\"br0\">{</span>input <span class=\"sy0\">&lt;&lt;</span> STDIN.<span class=\"me1\">getch</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">end</span><br/>    input<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> message<br/>    <span class=\"kw3\">puts</span> <span class=\"sy0\">&lt;&lt;</span>~EOM<br/>      Use the arrow<span class=\"sy0\">-</span>keys <span class=\"kw1\">or</span> WASD on your keyboard to push board <span class=\"kw1\">in</span> the given direction.   <br/>      <span class=\"me1\">PRESS</span> q TO QUIT <span class=\"br0\">(</span><span class=\"kw1\">or</span> Ctrl<span class=\"sy0\">-</span>C <span class=\"kw1\">or</span> Ctrl<span class=\"sy0\">-</span>D<span class=\"br0\">)</span><br/>    EOM<br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>Board.<span class=\"me1\">new</span></pre>"}, {"lang": "Run BASIC", "loc": 69, "block": "<pre class=\"text highlighted_source\">call SetCSS<br/>' ---- fill 15 squares with 1 to 15<br/>dim sq(16)<br/>for i = 1 to 15: sq(i) = i: next <br/>\u00a0<br/>'----- shuffle the squares<br/>[newGame]<br/>for i = 1 to 100\t\t' Shuffle the squares<br/>\tj\t= rnd(0) * 16 + 1<br/>\tk\t= rnd(0) * 16 + 1<br/>\th\t= sq(j)<br/>\tsq(j)\t= sq(k)<br/>\tsq(k)\t= h<br/>next i<br/>\u00a0<br/>' ---- show the squares<br/>[loop]<br/>cls<br/>html \"&lt;CENTER&gt;&lt;TABLE&gt;&lt;TR align=center&gt;\"<br/>for i = 1 to 16<br/>\thtml \"&lt;TD&gt;\"<br/>\tif sq(i) &lt;&gt; 0 then<br/>\t\tbutton\t#pick, str$(sq(i)), [pick]<br/>\t\t\t#pick setkey(str$(i))<br/>\t\t\t#pick cssclass(\"lBtn\")<br/>\tend if<br/>\thtml \"&lt;/TD&gt;\"<br/>\tif i mod 4 = 0 then html \"&lt;/TR&gt;&lt;TR align=center&gt;\"<br/>next i<br/>html \"&lt;/table&gt;\"<br/>wait<br/>\u00a0<br/>' ---- Find what square they picked<br/>[pick]\t\t\t<br/>picked\t= val(EventKey$)<br/>move\t= 0             '                0000000001111111<br/>if picked - 1 &gt; 0 then  ' LEFT           1234567890123456<br/>\t\t\t\tif mid$(\" *** *** *** ***\",picked,1) = \"*\" and sq(picked -1) = 0 then move = -1\u00a0:end if<br/>if picked + 1 &lt; 17 then ' RIGHT<br/>\t\t\t\tif mid$(\"*** *** *** *** \",picked,1) = \"*\" and sq(picked +1) = 0 then move =  1\u00a0:end if<br/>if picked - 4 &gt; 0  then ' UP <br/>\t\t\t\tif mid$(\"    ************\",picked,1) = \"*\" and sq(picked -4) = 0 then move = -4\u00a0:end if<br/>if picked + 4 &lt; 17 then ' DOWN <br/>\t\t\t\tif mid$(\"************    \",picked,1) = \"*\" and sq(picked +4) = 0 then move =  4\u00a0:end if<br/>' ---- See if they picked a valid square next to the blank square<br/>if move = 0 then<br/>\tprint \"Invalid move: \";sq(picked)<br/>\twait<br/>end if<br/>\u00a0<br/>' ---- Valid squire, switch it with the blank square<br/>sq(picked + move) = sq(picked) ' move to the empty square<br/>sq(picked) = 0<br/>for i = 1 to 15  ' ---- If they got them all in a row they are a winner<br/>\tif sq(i) &lt;&gt; i then goto [loop]<br/>next i<br/>\u00a0<br/>print \"----- You are a winner -----\"<br/>input \"Play again (Y/N)\";a$<br/>if a$ = \"Y\" then goto [newGame]\t\t' set up new game<br/>end<br/>\u00a0<br/>' ---- Make the squares look nice<br/>SUB SetCSS<br/>CSSClass \".lBtn\", \"{<br/>background:wheat;border-width:5px;width:70px;<br/>Text-Align:Center;Font-Size:24pt;Font-Weight:Bold;Font-Family:Arial;<br/>}\"<br/>END SUB</pre>"}, {"lang": "Rust", "loc": 204, "block": "<pre class=\"text highlighted_source\">extern crate rand;<br/>\u00a0<br/>use std::collections::HashMap;<br/>use std::fmt;<br/>\u00a0<br/>use rand::Rng;<br/>\u00a0<br/>#[derive(Copy, Clone, PartialEq, Debug)]<br/>enum Cell {<br/>    Card(usize),<br/>    Empty,<br/>}<br/>\u00a0<br/>#[derive(Eq, PartialEq, Hash, Debug)]<br/>enum Direction {<br/>    Up,<br/>    Down,<br/>    Left,<br/>    Right,<br/>}<br/>\u00a0<br/>enum Action {<br/>    Move(Direction),<br/>    Quit,<br/>}<br/>\u00a0<br/>type Board = [Cell; 16];<br/>const EMPTY: Board = [Cell::Empty; 16];<br/>\u00a0<br/>struct P15 {<br/>    board: Board,<br/>}<br/>\u00a0<br/>impl P15 {<br/>    fn new() -&gt; Self {<br/>        let mut board = EMPTY;<br/>        for (i, cell) in board.iter_mut().enumerate().skip(1) {<br/>            *cell = Cell::Card(i);<br/>        }<br/>\u00a0<br/>        let mut rng = rand::thread_rng();<br/>\u00a0<br/>        rng.shuffle(&amp;mut board);<br/>        if\u00a0!Self::is_valid(board) {<br/>            // random swap<br/>            let i = rng.gen_range(0, 16);<br/>            let mut j = rng.gen_range(0, 16);<br/>            while j == i {<br/>                j = rng.gen_range(0, 16);<br/>            }<br/>            board.swap(i, j);<br/>        }<br/>\u00a0<br/>        Self { board }<br/>    }<br/>\u00a0<br/>    fn is_valid(mut board: Board) -&gt; bool {<br/>        // TODO: optimize<br/>        let mut permutations = 0;<br/>\u00a0<br/>        let pos = board.iter().position(|&amp;cell| cell == Cell::Empty).unwrap();<br/>\u00a0<br/>        if pos\u00a0!= 15 {<br/>            board.swap(pos, 15);<br/>            permutations += 1;<br/>        }<br/>\u00a0<br/>        for i in 1..16 {<br/>            let pos = board<br/>                .iter()<br/>                .position(|&amp;cell| match cell {<br/>                    Cell::Card(value) if value == i =&gt; true,<br/>                    _ =&gt; false,<br/>                })<br/>                .unwrap();<br/>\u00a0<br/>            if pos + 1\u00a0!= i {<br/>                board.swap(pos, i - 1);<br/>                permutations += 1;<br/>            }<br/>        }<br/>\u00a0<br/>        permutations\u00a0% 2 == 0<br/>    }<br/>\u00a0<br/>    fn get_empty_position(&amp;self) -&gt; usize {<br/>        self.board.iter().position(|&amp;c| c == Cell::Empty).unwrap()<br/>    }<br/>\u00a0<br/>    fn get_moves(&amp;self) -&gt; HashMap&lt;Direction, Cell&gt; {<br/>        let mut moves = HashMap::new();<br/>        let i = self.get_empty_position();<br/>\u00a0<br/>        if i &gt; 3 {<br/>            moves.insert(Direction::Up, self.board[i - 4]);<br/>        }<br/>        if i\u00a0% 4\u00a0!= 0 {<br/>            moves.insert(Direction::Left, self.board[i - 1]);<br/>        }<br/>        if i &lt; 12 {<br/>            moves.insert(Direction::Down, self.board[i + 4]);<br/>        }<br/>        if i\u00a0% 4\u00a0!= 3 {<br/>            moves.insert(Direction::Right, self.board[i + 1]);<br/>        }<br/>        moves<br/>    }<br/>\u00a0<br/>    fn play(&amp;mut self, direction: &amp;Direction) {<br/>        let i = self.get_empty_position();<br/>        // This is safe because `ask_action` only returns legal moves<br/>        match *direction {<br/>            Direction::Up =&gt; self.board.swap(i, i - 4),<br/>            Direction::Left =&gt; self.board.swap(i, i - 1),<br/>            Direction::Right =&gt; self.board.swap(i, i + 1),<br/>            Direction::Down =&gt; self.board.swap(i, i + 4),<br/>        };<br/>    }<br/>\u00a0<br/>    fn is_complete(&amp;self) -&gt; bool {<br/>        self.board.iter().enumerate().all(|(i, &amp;cell)| match cell {<br/>            Cell::Card(value) =&gt; value == i + 1,<br/>            Cell::Empty =&gt; i == 15,<br/>        })<br/>    }<br/>}<br/>\u00a0<br/>impl fmt::Display for P15 {<br/>    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {<br/>        try!(write!(f, \"+----+----+----+----+\\n\"));<br/>        for (i, &amp;cell) in self.board.iter().enumerate() {<br/>            match cell {<br/>                Cell::Card(value) =&gt; try!(write!(f, \"| {:2} \", value)),<br/>                Cell::Empty =&gt; try!(write!(f, \"|    \")),<br/>            }<br/>\u00a0<br/>            if i\u00a0% 4 == 3 {<br/>                try!(write!(f, \"|\\n\"));<br/>                try!(write!(f, \"+----+----+----+----+\\n\"));<br/>            }<br/>        }<br/>        Ok(())<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    let mut p15 = P15::new();<br/>\u00a0<br/>    for turns in 1.. {<br/>        println!(\"{}\", p15);<br/>        match ask_action(&amp;p15.get_moves()) {<br/>            Action::Move(direction) =&gt; {<br/>                p15.play(&amp;direction);<br/>            }<br/>            Action::Quit =&gt; {<br/>                println!(\"Bye\u00a0!\");<br/>                break;<br/>            }<br/>        }<br/>\u00a0<br/>        if p15.is_complete() {<br/>            println!(\"Well done\u00a0! You won in {} turns\", turns);<br/>            break;<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>fn ask_action(moves: &amp;HashMap&lt;Direction, Cell&gt;) -&gt; Action {<br/>    use std::io::{self, Write};<br/>    use Action::*;<br/>    use Direction::*;<br/>\u00a0<br/>    println!(\"Possible moves:\");<br/>\u00a0<br/>    if let Some(&amp;Cell::Card(value)) = moves.get(&amp;Up) {<br/>        println!(\"\\tU) {}\", value);<br/>    }<br/>    if let Some(&amp;Cell::Card(value)) = moves.get(&amp;Left) {<br/>        println!(\"\\tL) {}\", value);<br/>    }<br/>    if let Some(&amp;Cell::Card(value)) = moves.get(&amp;Right) {<br/>        println!(\"\\tR) {}\", value);<br/>    }<br/>    if let Some(&amp;Cell::Card(value)) = moves.get(&amp;Down) {<br/>        println!(\"\\tD) {}\", value);<br/>    }<br/>    println!(\"\\tQ) Quit\");<br/>    print!(\"Choose your move\u00a0: \");<br/>    io::stdout().flush().unwrap();<br/>\u00a0<br/>    let mut action = String::new();<br/>    io::stdin().read_line(&amp;mut action).expect(\"read error\");<br/>    match action.to_uppercase().trim() {<br/>        \"U\" if moves.contains_key(&amp;Up) =&gt; Move(Up),<br/>        \"L\" if moves.contains_key(&amp;Left) =&gt; Move(Left),<br/>        \"R\" if moves.contains_key(&amp;Right) =&gt; Move(Right),<br/>        \"D\" if moves.contains_key(&amp;Down) =&gt; Move(Down),<br/>        \"Q\" =&gt; Quit,<br/>        _ =&gt; {<br/>            println!(\"Unknown action: {}\", action);<br/>            ask_action(moves)<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "Scheme", "loc": 87, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>import <span class=\"br0\">(</span>scheme base<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme <span class=\"kw1\">read</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme <span class=\"kw1\">write</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>srfi <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>    <span class=\"co1\">; random numbers</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>start<span class=\"sy0\">-</span>position<span class=\"sy0\">*</span> #<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">9</span> <span class=\"nu0\">10</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">13</span> <span class=\"nu0\">14</span> <span class=\"nu0\">15</span> #\\space<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>random<span class=\"sy0\">-</span>source<span class=\"sy0\">-</span>randomize<span class=\"sy0\">!</span> default<span class=\"sy0\">-</span>random<span class=\"sy0\">-</span>source<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; return a 16-place vector with the tiles randomly shuffled</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>create<span class=\"sy0\">-</span>start<span class=\"sy0\">-</span>position<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>board <span class=\"br0\">(</span>vector<span class=\"sy0\">-</span>copy <span class=\"sy0\">*</span>start<span class=\"sy0\">-</span>position<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>moves <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>moves board<span class=\"br0\">)</span> <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>moves board<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> i <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>finished? board<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       board<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>move board<br/>                 <span class=\"br0\">(</span><span class=\"kw1\">list-ref</span> moves <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>integer <span class=\"br0\">(</span><span class=\"kw1\">length</span> moves<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; return index of space</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>space board<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal?</span> #\\space <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> board i<span class=\"br0\">)</span><span class=\"br0\">)</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; return a list of symbols indicating available moves</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>moves board<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>posn <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>space board<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>row <span class=\"br0\">(</span><span class=\"kw1\">quotient</span> posn <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>col <span class=\"br0\">(</span><span class=\"kw1\">remainder</span> posn <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>result '<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> row <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">set!</span> result <span class=\"br0\">(</span><span class=\"kw1\">cons</span> 'up result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> row <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">set!</span> result <span class=\"br0\">(</span><span class=\"kw1\">cons</span> 'down result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> col <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">set!</span> result <span class=\"br0\">(</span><span class=\"kw1\">cons</span> 'left result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> col <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">set!</span> result <span class=\"br0\">(</span><span class=\"kw1\">cons</span> 'right result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    result<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; make given move - assume it is legal</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>move board move<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>swap posn<span class=\"sy0\">-</span><span class=\"nu0\">1</span> posn<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>tmp <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> board posn<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> board posn<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> board posn<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> board posn<span class=\"sy0\">-</span><span class=\"nu0\">2</span> tmp<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>posn <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>space board<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">case</span> move<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>left<span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>swap posn <span class=\"br0\">(</span><span class=\"sy0\">-</span> posn <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>right<span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>swap posn <span class=\"br0\">(</span><span class=\"sy0\">+</span> posn <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>up<span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>swap posn <span class=\"br0\">(</span><span class=\"sy0\">-</span> posn <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>down<span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>swap posn <span class=\"br0\">(</span><span class=\"sy0\">+</span> posn <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>finished? board<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> board <span class=\"sy0\">*</span>start<span class=\"sy0\">-</span>position<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>display<span class=\"sy0\">-</span>board board<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> i <span class=\"br0\">(</span><span class=\"kw1\">vector-length</span> board<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> <span class=\"br0\">(</span><span class=\"kw1\">modulo</span> i <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>curr <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> board i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">display</span> curr<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"kw1\">number?</span> curr<span class=\"br0\">)</span> <br/>                        <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> curr <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                 <span class=\"st0\">\" \"</span><br/>                 <span class=\"st0\">\"  \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; the main game loop</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>play<span class=\"sy0\">-</span>game<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>board <span class=\"br0\">(</span>create<span class=\"sy0\">-</span>start<span class=\"sy0\">-</span>position<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>count <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>moves <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>moves board<span class=\"br0\">)</span> <span class=\"br0\">(</span>find<span class=\"sy0\">-</span>moves board<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>finished? board<span class=\"br0\">)</span> <br/>       <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>COMPLETED PUZZLE in \"</span><br/>                               <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> count<span class=\"br0\">)</span><br/>                               <span class=\"st0\">\" moves<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>display<span class=\"sy0\">-</span>board board<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"Enter a move: \"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">display</span> moves<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>move <span class=\"br0\">(</span><span class=\"kw1\">read</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">memq</span> move moves<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>move board move<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"Invalid move - try again\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>play<span class=\"sy0\">-</span>game<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Scilab", "loc": 84, "block": "<pre class=\"text highlighted_source\">tiles=[1:15,0];<br/>solution=[tiles(1:4);...<br/>          tiles(5:8);...<br/>          tiles(9:12);...<br/>          tiles(13:16)];<br/>solution=string(solution);<br/>solution(16)=\" \";<br/>\u00a0<br/>init_pos=grand(1,\"prm\",tiles);<br/>puzzle=[init_pos(1:4);...<br/>        init_pos(5:8);...<br/>        init_pos(9:12);...<br/>        init_pos(13:16)];<br/>puzzle=string(puzzle);<br/>\u00a0<br/>blank_pos=[];<br/>for i=1:4<br/>    for j=1:4<br/>        if puzzle(i,j)==\"0\" then<br/>            blank_pos=[i,j];<br/>        end<br/>    end<br/>end<br/>\u00a0<br/>clear i j<br/>\u00a0<br/>puzzle(blank_pos(1),blank_pos(2))=\" \";<br/>\u00a0<br/>n_moves=0;<br/>solved=%F;<br/>while ~solved<br/>    disp(puzzle); mprintf(\"\\n\");<br/>\u00a0<br/>    neighbours=[0 -1;...<br/>               -1  0;...<br/>                0 +1;...<br/>               +1  0];<br/>    neighbours(:,1)=neighbours(:,1)+blank_pos(1);<br/>    neighbours(:,2)=neighbours(:,2)+blank_pos(2);<br/>    neighbours=[neighbours zeros(4,1)]<br/>\u00a0<br/>    i=0;<br/>    for i=1:4<br/>        if ~(neighbours(i,1)&lt;1 | neighbours(i,1)&gt;4 |...<br/>           neighbours(i,2)&lt;1 | neighbours(i,2)&gt;4) then<br/>           neighbours(i,3)=evstr(puzzle(neighbours(i,1),neighbours(i,2)));<br/>       end<br/>    end<br/>\u00a0<br/>    valid_move=%F;<br/>    while ~valid_move<br/>        move_tile=[];    <br/>        move_tile=input(\"Enter tile you want to move (0 to exit):\");<br/>        if sum(move_tile==neighbours(:,3)) &amp; move_tile~=0 then<br/>            valid_move=%T;<br/>            n_moves=n_moves+1;<br/>        elseif move_tile==0 then<br/>            disp(\"Exit\");<br/>            abort<br/>        else<br/>            disp(puzzle);<br/>            disp(\"Invalid input\");<br/>        end<br/>    end<br/>\u00a0<br/>    neighb_i=find(neighbours(:,3)'==move_tile);<br/>    puzzle(neighbours(neighb_i,1),neighbours(neighb_i,2))=\" \";<br/>    puzzle(blank_pos(1),blank_pos(2))=string(move_tile);<br/>    blank_pos=neighbours(neighb_i,1:2);<br/>\u00a0<br/>    if sum(puzzle==solution)==16 then<br/>        solved=%T;<br/>        disp(puzzle);<br/>        mprintf(\"\\n\"+...<br/>                \"   _____       _               _ _ \\n\"+...<br/>                \"  / ____|     | |             | | |\\n\"+...<br/>                \" | (___   ___ | |_   _____  __| | |\\n\"+...<br/>                \"  \\\\___ \\\\ / _ \\\\| \\\\ \\\\ / / _ \\\\/ _` | |\\n\"+...<br/>                \"  ____) | (_) | |\\\\ V /  __/ (_| |_|\\n\"+...<br/>                \" |_____/ \\\\___/|_| \\\\_/ \\\\___|\\\\__,_(_)\\n\")<br/>    end<br/>end<br/>\u00a0<br/>disp(\"Solved in \"+string(n_moves)+\" moves.\");</pre>"}, {"lang": "Simula", "loc": 214, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>BEGIN<br/>    CLASS FIFTEENPUZZLE(NUMTILES, SIDE, WIDTH, SEED);<br/>        INTEGER NUMTILES, SIDE, WIDTH, SEED;<br/>    BEGIN<br/>        INTEGER ARRAY TILES(0:NUMTILES);<br/>        INTEGER BLANKPOS;<br/>\u00a0<br/>        PROCEDURE INVARIANT;<br/>        BEGIN<br/>            INTEGER ARRAY UQ(0:NUMTILES);<br/>            INTEGER I;<br/>            FOR I\u00a0:= 0 STEP 1 UNTIL NUMTILES DO UQ(I)\u00a0:= -1;<br/>            FOR I\u00a0:= 0 STEP 1 UNTIL NUMTILES DO<br/>            BEGIN<br/>                INTEGER T;<br/>                T\u00a0:= TILES(I);<br/>                IF UQ(T) &lt;&gt; -1 THEN ERROR(\"TILES ARE NOT UNIQUE\");<br/>                UQ(T)\u00a0:= T;<br/>            END;<br/>            IF TILES(BLANKPOS) &lt;&gt; 0 THEN ERROR(\"BLANKPOS IS NOT BLANK\");<br/>        END;<br/>\u00a0<br/>        PROCEDURE SHUFFLE;<br/>        BEGIN<br/>            BOOLEAN B;<br/>            WHILE NOT B DO<br/>            BEGIN<br/>                INTEGER N;<br/>                RESET;<br/>               \u00a0! DON'T INCLUDE THE BLANK SPACE IN THE SHUFFLE, LEAVE IT<br/>               \u00a0! IN THE HOME POSITION\u00a0;<br/>                N\u00a0:= NUMTILES;<br/>                WHILE N &gt; 1 DO<br/>                BEGIN<br/>                    INTEGER R, TMP;<br/>                    R\u00a0:= UNIFORM(0, N, SEED); N\u00a0:= N - 1;<br/>                    TMP\u00a0:= TILES(R);<br/>                    TILES(R)\u00a0:= TILES(N);<br/>                    TILES(N)\u00a0:= TMP;<br/>                END;<br/>                B\u00a0:= ISSOLVABLE;<br/>            END;<br/>            INVARIANT;<br/>        END;<br/>\u00a0<br/>        PROCEDURE RESET;<br/>        BEGIN<br/>            INTEGER I;<br/>            FOR I\u00a0:= 0 STEP 1 UNTIL NUMTILES DO<br/>                TILES(I)\u00a0:= MOD((I + 1), NUMTILES + 1);<br/>            BLANKPOS\u00a0:= NUMTILES;<br/>            INVARIANT;<br/>        END;<br/>\u00a0<br/>       \u00a0! ONLY HALF THE PERMUTATIONS OF THE PUZZLE ARE SOLVABLE.<br/>       \u00a0! WHENEVER A TILE IS PRECEDED BY A TILE WITH HIGHER VALUE IT COUNTS<br/>       \u00a0! AS AN INVERSION. IN OUR CASE, WITH THE BLANK SPACE IN THE HOME<br/>       \u00a0! POSITION, THE NUMBER OF INVERSIONS MUST BE EVEN FOR THE PUZZLE<br/>       \u00a0! TO BE SOLVABLE.<br/>       \u00a0! SEE ALSO:<br/>       \u00a0! WWW.CS.BHAM.AC.UK/~MDR/TEACHING/MODULES04/JAVA2/TILESSOLVABILITY.HTML<br/>       \u00a0;<br/>\u00a0<br/>        BOOLEAN PROCEDURE ISSOLVABLE;<br/>        BEGIN<br/>            INTEGER COUNTINVERSIONS;<br/>            INTEGER I, J;<br/>            FOR I\u00a0:= 0 STEP 1 UNTIL NUMTILES - 1 DO<br/>                FOR J\u00a0:= 0 STEP 1 UNTIL I - 1 DO<br/>                    IF TILES(J) &gt; TILES(I) THEN<br/>                        COUNTINVERSIONS\u00a0:= COUNTINVERSIONS + 1;<br/>            ISSOLVABLE\u00a0:= MOD(COUNTINVERSIONS, 2) = 0;<br/>        END;<br/>\u00a0<br/>        PROCEDURE PRINTBOARD;<br/>        BEGIN<br/>            INTEGER I, J;<br/>\u00a0<br/>            PROCEDURE PRINTLINE;<br/>            BEGIN<br/>              INTEGER ROW, COL;<br/>             \u00a0!      +-----+-----+-----+-----+\u00a0;<br/>              FOR ROW\u00a0:= 1 STEP 1 UNTIL SIDE DO<br/>              BEGIN<br/>                  OUTCHAR('+');<br/>                  FOR COL\u00a0:= 0 STEP 1 UNTIL WIDTH DO OUTCHAR('-');<br/>              END;<br/>              OUTCHAR('+');<br/>              OUTIMAGE;<br/>            END;<br/>\u00a0<br/>            PROCEDURE PRINTCELL(T); INTEGER T;<br/>            BEGIN<br/>                IF T = 0 THEN<br/>                BEGIN<br/>                    INTEGER R;<br/>                    FOR R\u00a0:= 1 STEP 1 UNTIL WIDTH DO<br/>                        OUTCHAR(' ');<br/>                END<br/>                ELSE OUTINT(T, WIDTH);<br/>                OUTCHAR(' ');<br/>            END;<br/>\u00a0<br/>           \u00a0!      +-----+-----+-----+-----+<br/>           \u00a0!      |  1  |  2  |  3  |  4  |<br/>           \u00a0!      +-----+-----+-----+-----+<br/>           \u00a0!      |  5  |  6  |  7  |  8  |<br/>           \u00a0!      +-----+-----+-----+-----+<br/>           \u00a0!      |  9  |  10 |  11 |     |<br/>           \u00a0!      +-----+-----+-----+-----+<br/>           \u00a0!      |  13 |  14 |  15 |  12 |<br/>           \u00a0!      +-----+-----+-----+-----+  \u00a0;<br/>\u00a0<br/>            FOR I\u00a0:= 1 STEP 1 UNTIL SIDE DO<br/>            BEGIN<br/>                PRINTLINE;<br/>                OUTCHAR('|');<br/>                FOR J\u00a0:= 1 STEP 1 UNTIL SIDE DO<br/>                BEGIN<br/>                    INTEGER T;<br/>                    T\u00a0:= TILES((I - 1) * SIDE + (J - 1));<br/>                    PRINTCELL(T);<br/>                    OUTCHAR('|');<br/>                END;<br/>                OUTIMAGE;<br/>            END;<br/>            PRINTLINE;<br/>        END;<br/>\u00a0<br/>        BOOLEAN PROCEDURE DONE;<br/>        BEGIN<br/>            BOOLEAN ORDERED;<br/>            INTEGER I, EXPECT;<br/>            ORDERED\u00a0:= TRUE;<br/>            EXPECT\u00a0:= 1;<br/>            FOR I\u00a0:= 0 STEP 1 UNTIL NUMTILES - 1 DO<br/>            BEGIN<br/>                IF I &lt;&gt; BLANKPOS THEN<br/>                BEGIN<br/>                    IF TILES(I) &lt;&gt; EXPECT THEN<br/>                        ORDERED\u00a0:= FALSE;<br/>                    EXPECT\u00a0:= EXPECT + 1;<br/>                END;<br/>            END;<br/>            DONE\u00a0:= ORDERED;<br/>        END;<br/>\u00a0<br/>        PROCEDURE REQUEST;<br/>        BEGIN<br/>            INTEGER ARRAY CANDIDATES(1:4);<br/>            INTEGER I, CANDCOUNT, CHOOSE;<br/>            BOOLEAN VALIDINPUT;<br/>\u00a0<br/>            PROCEDURE ADDCAND(IDX); INTEGER IDX;<br/>            BEGIN<br/>                IF IDX &gt;= 0 AND IDX &lt;= NUMTILES THEN<br/>                BEGIN<br/>                    CANDCOUNT\u00a0:= CANDCOUNT + 1;<br/>                    CANDIDATES(CANDCOUNT)\u00a0:= TILES(IDX);<br/>                END;<br/>            END;<br/>\u00a0<br/>            PRINTBOARD;<br/>\u00a0<br/>            IF BLANKPOS &lt;= NUMTILES - SIDE     THEN ADDCAND(BLANKPOS + SIDE);<br/>            IF BLANKPOS &gt;= SIDE                THEN ADDCAND(BLANKPOS - SIDE);<br/>            IF MOD(BLANKPOS, SIDE) &lt;&gt; SIDE - 1 THEN ADDCAND(BLANKPOS + 1);<br/>            IF MOD(BLANKPOS, SIDE) &lt;&gt; 0        THEN ADDCAND(BLANKPOS - 1);<br/>\u00a0<br/>            WHILE NOT VALIDINPUT DO<br/>            BEGIN<br/>                OUTTEXT(\"YOUR MOVE: \");<br/>\u00a0<br/>                FOR I\u00a0:= 1 STEP 1 UNTIL CANDCOUNT DO<br/>                    OUTINT(CANDIDATES(I), SIDE);<br/>                OUTIMAGE;<br/>                CHOOSE\u00a0:= ININT;<br/>\u00a0<br/>                FOR I\u00a0:= 1 STEP 1 UNTIL CANDCOUNT DO<br/>                    IF CHOOSE = CANDIDATES(I) THEN<br/>                    BEGIN<br/>                        INTEGER LOOKUP;<br/>                        FOR LOOKUP\u00a0:= 0 STEP 1 UNTIL NUMTILES DO<br/>                            IF NOT VALIDINPUT AND TILES(LOOKUP) = CHOOSE THEN<br/>                            BEGIN<br/>                                TILES(BLANKPOS)\u00a0:= TILES(LOOKUP);<br/>                                TILES(LOOKUP)\u00a0:= 0;<br/>                                BLANKPOS\u00a0:= LOOKUP;<br/>                                INVARIANT;<br/>                                VALIDINPUT\u00a0:= TRUE;<br/>                            END;<br/>                    END;<br/>\u00a0<br/>                IF NOT VALIDINPUT THEN<br/>                BEGIN<br/>                    OUTTEXT(\"INVALID INPUT!\");<br/>                    OUTIMAGE;<br/>                END;<br/>            END;<br/>        END;<br/>\u00a0<br/>        SHUFFLE;<br/>    END;<br/>\u00a0<br/>    REF(FIFTEENPUZZLE) P;<br/>\u00a0<br/>    OUTTEXT(\"INPUT RANDOM SEED: \");<br/>    OUTIMAGE;<br/>    P\u00a0:- NEW FIFTEENPUZZLE(15, 4, 3, ININT);\u00a0! ININT = RANDOM SEED\u00a0;<br/>    WHILE NOT P.DONE DO<br/>        P.REQUEST;<br/>    P.PRINTBOARD;<br/>END.</pre>"}, {"lang": "Standard ML", "loc": 252, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(* Load required Modules for Moscow ML *)<br/>load \"Int\";<br/>load \"Random\";<br/>\u00a0<br/>\u00a0<br/>(* Mutable Matrix *)<br/>signature MATRIX =<br/>sig<br/>\ttype 'a matrix<br/>\tval construct\u00a0: 'a -&gt; int * int -&gt; 'a matrix<br/>\tval size\u00a0: 'a matrix -&gt; int * int<br/>\tval get\u00a0: 'a matrix -&gt; int * int -&gt; 'a<br/>\tval set\u00a0: 'a matrix -&gt; int * int -&gt; 'a -&gt; unit<br/>end<br/>\u00a0<br/>structure Matrix\u00a0:&gt; MATRIX =<br/>struct<br/>\t(* Array of rows, where the rows are a array of 'a *)<br/>\ttype 'a matrix = 'a Array.array Array.array<br/>\u00a0<br/>\tfun 'a construct (a\u00a0: 'a) (width, height)\u00a0: 'a matrix =<br/>\t\tif width &lt; 1 orelse height &lt; 1<br/>\t\t\tthen raise Subscript<br/>\t\t\telse Array.tabulate (height, fn _ =&gt; Array.tabulate (width, fn _ =&gt; a))<br/>\u00a0<br/>\tfun size b =<br/>\t\tlet<br/>\t\t\tval firstrow = Array.sub (b, 0)<br/>\t\tin<br/>\t\t\t(Array.length firstrow, Array.length b)<br/>\t\tend<br/>\u00a0<br/>\u00a0<br/>\tfun get b (x, y) = Array.sub (Array.sub (b, y), x)<br/>\u00a0<br/>\tfun set b (x, y) v = Array.update (Array.sub (b, y), x, v)<br/>end<br/>\u00a0<br/>signature P15BOARD =<br/>sig<br/>\ttype board<br/>\tdatatype direction = North | East | South | West<br/>\u00a0<br/>\tval construct\u00a0: int * int -&gt; board<br/>\tval emptyField\u00a0: board -&gt; int * int<br/>\tval get\u00a0: board -&gt; int * int -&gt; int option<br/>\tval size\u00a0: board -&gt; int * int<br/>\u00a0<br/>\texception IllegalMove<br/>\tval moves\u00a0: board -&gt; int list<br/>\tval move\u00a0: board -&gt; int -&gt; unit<br/>\u00a0<br/>\tval issolved\u00a0: board -&gt; bool<br/>end<br/>\u00a0<br/>(* Game Logic and data *)<br/>\u00a0<br/>structure Board\u00a0:&gt; P15BOARD =<br/>struct<br/>\t(* Matrix + empty Field position *)<br/>\ttype board = int option Matrix.matrix * (int * int) ref<br/>\u00a0<br/>\tdatatype direction = North | East | South | West<br/>\u00a0<br/>\texception IllegalMove<br/>\u00a0<br/>\tfun numberat width (x, y) = (y*width + x + 1)<br/>\u00a0<br/>\tfun construct (width, height) =<br/>\t\tlet<br/>\t\t\tval emptyBoard\u00a0: int option Matrix.matrix = Matrix.construct NONE (width, height) <br/>\t\tin<br/>\t\t\t(* Fill the board with numbers *)<br/>\t\t\tList.tabulate (height, fn y =&gt; List.tabulate (width, fn x =&gt;<br/>\t\t\t\t\tMatrix.set emptyBoard (x, y) (SOME (numberat width (x, y)))));<br/>\t\t\t(* Clear the last field *)<br/>\t\t\tMatrix.set emptyBoard (width-1, height-1) NONE;<br/>\t\t\t(* Return the board *)<br/>\t\t\t(emptyBoard, ref (width-1, height-1))<br/>\t\tend<br/>\u00a0<br/>\tfun emptyField (_, rfield) =\u00a0!rfield<br/>\u00a0<br/>\tfun get (mat, _) (x, y) = Matrix.get mat (x, y)<br/>\u00a0<br/>\tfun size (mat, _) = Matrix.size mat<br/>\u00a0<br/>\t(* toggle the empty field with a given field *)<br/>\tfun toggle (mat, rpos) pos =<br/>\t\tlet<br/>\t\t\tval pos' =\u00a0!rpos<br/>\t\t\tval value = Matrix.get mat pos<br/>\t\tin<br/>\t\t\tMatrix.set mat pos NONE;<br/>\t\t\tMatrix.set mat pos' value;<br/>\t\t\trpos\u00a0:= pos<br/>\t\tend<br/>\u00a0<br/>\t(* Get list of positions of the neighbors of a given field *)<br/>\tfun neighbors mat (x, y)\u00a0: (int * int) list =<br/>\t\tlet<br/>\t\t\tval (width, height) = Matrix.size mat<br/>\t\t\tval directions = [(x, y-1), (x+1, y), (x, y+1), (x-1, y)]<br/>\t\tin<br/>\t\t\tList.mapPartial (fn pos =&gt; SOME (Matrix.get mat pos; pos) handle Subscript =&gt; NONE) directions<br/>\t\tend<br/>\u00a0<br/>\tfun moves (mat, rpos) =<br/>\t\tlet<br/>\t\t\tval neighbors = neighbors mat (!rpos)<br/>\t\tin<br/>\t\t\tmap (fn pos =&gt; valOf (Matrix.get mat pos)) neighbors<br/>\t\tend<br/>\u00a0<br/>\tfun move (mat, rpos) m =<br/>\t\tlet<br/>\t\t\tval (hx, hy) =\u00a0!rpos<br/>\t\t\tval neighbors = neighbors mat (hx, hy)<br/>\t\t\tval optNeighbor = List.find (fn pos =&gt; SOME m = Matrix.get mat pos) neighbors<br/>\t\tin<br/>\t\t\tif isSome optNeighbor<br/>\t\t\tthen<br/>\t\t\t\ttoggle (mat, rpos) (valOf optNeighbor)<br/>\t\t\telse<br/>\t\t\t\traise IllegalMove<br/>\t\tend<br/>\u00a0<br/>\tfun issolved board =<br/>\t\tlet<br/>\t\t\tval (width, height) = size board<br/>\t\t\tval xs = List.tabulate (width,  fn x =&gt; x)<br/>\t\t\tval ys = List.tabulate (height, fn y =&gt; y)<br/>\t\tin<br/>\t\t\tList.all (fn x =&gt; List.all (fn y =&gt; (x + 1 = width andalso y + 1 = height) orelse get board (x, y) = SOME (numberat width (x,y))) ys) xs<br/>\t\tend<br/>end<br/>\u00a0<br/>(* Board Shuffle *)<br/>signature BOARDSHUFFLE =<br/>sig<br/>\tval shuffle\u00a0: Board.board -&gt; int -&gt; unit<br/>end<br/>\u00a0<br/>structure Shuffle\u00a0:&gt; BOARDSHUFFLE =<br/>struct<br/>\t(*<br/>\t * Note: Random Number Interfaces are different in SML/NJ and Moscow ML. Comment out the corresponding version:<br/>\t *)<br/>\u00a0<br/>\t(*<br/>\t(* SML/NJ - Version *)<br/>\tval time = Time.now ()<br/>\tval timeInf = Time.toMicroseconds time<br/>\tval timens = Int.fromLarge (LargeInt.mod (timeInf, 1073741823));<br/>\tval rand = Random.rand (timens, timens)<br/>\u00a0<br/>\tfun next n = Random.randRange (0, n) rand<br/>\t*)<br/>\u00a0<br/>\t(* Moscow ML - Version *)<br/>\tval generator = Random.newgen ()<br/>\tfun next n = Random.range (0, n) generator<br/>\u00a0<br/>\u00a0<br/>\tfun shuffle board 0 = if (Board.issolved board) then shuffle board 1 else ()<br/>\t  | shuffle board n =<br/>\t  \tlet<br/>\t\t\tval moves = Board.moves board<br/>\t\t\tval move  = List.nth (moves, next (List.length moves - 1))<br/>\t\tin<br/>\t\t\tBoard.move board move;<br/>\t\t\tshuffle board (n-1)<br/>\t\tend<br/>end<br/>\u00a0<br/>\u00a0<br/>(* Console interface *)<br/>\u00a0<br/>signature CONSOLEINTERFACE =<br/>sig<br/>\tval start\u00a0: unit -&gt; unit<br/>\tval printBoard\u00a0: Board.board -&gt; unit<br/>end<br/>\u00a0<br/>structure Console\u00a0:&gt; CONSOLEINTERFACE =<br/>struct<br/>\tfun cls () = print \"\\^[[1;1H\\^[[2J\"<br/>\u00a0<br/>\tfun promptNumber prompt =<br/>\t\tlet<br/>\t\t\tval () = print prompt<br/>\t\t\t(* Input + \"\\n\" *)<br/>\t\t\tval line   = valOf (TextIO.inputLine TextIO.stdIn)<br/>\t\t\tval length = String.size line<br/>\t\t\tval input  = String.substring (line, 0, length - 1)<br/>\t\t\tval optnum = Int.fromString input<br/>\t\tin<br/>\t\t\tif isSome optnum<br/>\t\t\t\tthen valOf optnum<br/>\t\t\t\telse (print \"Input is not a number.\\n\"; promptNumber prompt)<br/>\t\tend<br/>\u00a0<br/>\tfun fieldToString (SOME x) = Int.toString x<br/>\t  | fieldToString (NONE  ) = \"\"<br/>\u00a0<br/>\tfun boardToString board =<br/>\t\tlet<br/>\t\t\tval (width, height) = Board.size board<br/>\t\t\tval xs = List.tabulate (width,  fn x =&gt; x)<br/>\t\t\tval ys = List.tabulate (height, fn y =&gt; y)<br/>\t\tin<br/>\t\t\tfoldl (fn (y, str) =&gt; (foldl (fn (x, str') =&gt; str' ^ (fieldToString (Board.get board (x, y))) ^ \"\\t\") str xs) ^ \"\\n\") \"\" ys<br/>\t\tend<br/>\u00a0<br/>\tfun printBoard board = print (boardToString board)<br/>\u00a0<br/>\u00a0<br/>\tfun loop board =<br/>\t\tlet<br/>\t\t\tval rvalidInput = ref false<br/>\t\t\tval rinput      = ref 42<br/>\t\t\tval () = cls ()<br/>\t\t\tval () = printBoard board<br/>\t\tin<br/>\t\t\t(* Ask for a move and repeat until it is a valid move *)<br/>\t\t\twhile (not (!rvalidInput)) do<br/>\t\t\t\t(<br/>\t\t\t\t\trinput\u00a0:= promptNumber \"Input the number to move: \";<br/>\t\t\t\t\tBoard.move board (!rinput);<br/>\t\t\t\t\trvalidInput\u00a0:= true<br/>\t\t\t\t) handle Board.IllegalMove =&gt; print \"Illegal move!\\n\"<br/>\t\tend<br/>\u00a0<br/>\u00a0<br/>\tfun start () =<br/>\t\tlet<br/>\t\t\tval () = cls ()<br/>\t\t\tval () = print \"Welcome to nxm-Puzzle!\\n\"<br/>\t\t\tval (width, height) = (promptNumber \"Enter the width: \", promptNumber \"Enter the height: \")<br/>\t\t\tval diff = (promptNumber \"Enter the difficulty (number of shuffles): \")<br/>\t\t\tval board = Board.construct (width, height)<br/>\t\tin<br/>\t\t\tShuffle.shuffle board diff;<br/>\t\t\twhile (not (Board.issolved board)) do loop board;<br/>\t\t\tprint \"Solved!\\n\"<br/>\t\tend<br/>end<br/>\u00a0<br/>\u00a0<br/>val () = Console.start()<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 138, "block": "<pre class=\"tcl highlighted_source\"> <span class=\"co1\"># 15puzzle_21.tcl - HaJo Gurt -  2016-02-16</span><br/> <span class=\"co1\"># http://wiki.tcl.tk/14403</span><br/>\u00a0<br/> <span class=\"co1\">#: 15-Puzzle - with grid, buttons and colors</span><br/>\u00a0<br/>  <span class=\"kw2\">package</span> require Tk<br/>\u00a0<br/>  <span class=\"kw1\">set</span> progVersion <span class=\"st0\">\"15-Puzzle v0.21\"</span><span class=\"sy0\">;</span>        <span class=\"co1\"># 2016-02-20</span><br/>\u00a0<br/>  <span class=\"kw1\">global</span> Msg Moves PuzzNr GoalNr<br/>  <span class=\"kw1\">set</span> Msg    <span class=\"st0\">\" \"</span><br/>  <span class=\"kw1\">set</span> Moves  -<span class=\"nu0\">1</span><br/>  <span class=\"kw1\">set</span> PuzzNr  <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">set</span> GoalNr  <span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"kw1\">set</span> Keys   <span class=\"br0\">{</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">13</span> <span class=\"nu0\">14</span>  <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span>  <span class=\"nu0\">31</span> <span class=\"nu0\">32</span> <span class=\"nu0\">33</span> <span class=\"nu0\">34</span>  <span class=\"nu0\">41</span> <span class=\"nu0\">42</span> <span class=\"nu0\">43</span> <span class=\"nu0\">44</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">set</span> Puzz_T <span class=\"br0\">{</span>  T  h  e  F   i  f  t  e   e  n  P  u   z  z  l  e <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># Title</span><br/>  <span class=\"kw1\">set</span> Goal_T <span class=\"br0\">{</span>  x  x  x  F   i  f  t  e   e  n  x  x   x  x  x  x <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># Title-highlight</span><br/>\u00a0<br/>  <span class=\"kw1\">set</span> Puzz_0 <span class=\"br0\">{</span>  E  G  P  N   C  A  F  B   D  L  H  I   O  K  M  _ <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># -  / 116</span><br/>  <span class=\"kw1\">set</span> Puzz_1 <span class=\"br0\">{</span>  C  A  F  B   E  G  P  N   D  L  H  I   O  K  M  _ <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># E  / 156 from Tk-demo</span><br/>  <span class=\"kw1\">set</span> Puzz_2 <span class=\"br0\">{</span>  E  O  N  K   M  I  _  G   B  H  L  P   C  F  A  D <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># L  / 139</span><br/>  <span class=\"kw1\">set</span> Puzz_3 <span class=\"br0\">{</span>  P  G  M  _   E  L  N  D   O  K  H  I   B  C  F  A <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># EK / 146</span><br/>\u00a0<br/>  <span class=\"kw1\">set</span> Goal_0 <span class=\"br0\">{</span>  A  B  C  D   E  F  G  H   I  K  L  M   N  O  P  _ <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># Rows LTR   / 1:E\u00a0: 108</span><br/>  <span class=\"kw1\">set</span> Goal_1 <span class=\"br0\">{</span>  A  E  I  N   B  F  K  O   C  G  L  P   D  H  M  _ <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"co1\"># Cols forw. / 1:M\u00a0: 114</span><br/>\u00a0<br/>  <span class=\"kw1\">set</span> Puzz <span class=\"re0\">$Puzz_T</span><br/>  <span class=\"kw1\">set</span> Goal <span class=\"re0\">$Goal_T</span><br/>\u00a0<br/><span class=\"co1\">#---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+---</span><br/>\u00a0<br/>  <span class=\"kw1\">proc</span> Move <span class=\"br0\">{</span>k<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>  <span class=\"co1\"># find the key with the empty tile:</span><br/>    <span class=\"kw1\">set</span> e -<span class=\"nu0\">1</span><br/>    <span class=\"kw1\">foreach</span> p <span class=\"sy0\">$</span>::<span class=\"me1\">Keys</span>  <span class=\"br0\">{</span><br/>      <span class=\"kw1\">set</span> t <span class=\"br0\">[</span>.key<span class=\"re0\">$p</span> cget -text<span class=\"br0\">]</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$t</span> eq <span class=\"st0\">\"_\"</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span> e <span class=\"re0\">$p</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$e</span>  <span class=\"sy0\">&lt;</span>  <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span>   <span class=\"co1\"># no key with empty tile found</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$k</span> == <span class=\"re0\">$e</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span>   <span class=\"co1\"># click was on the empty tile</span><br/>\u00a0<br/>    <span class=\"kw1\">set</span> t <span class=\"br0\">[</span>.key<span class=\"re0\">$k</span> cget -text<span class=\"br0\">]</span><br/>    .key<span class=\"re0\">$e</span> config -text <span class=\"re0\">$t</span><br/>    .key<span class=\"re0\">$k</span> config -text <span class=\"st0\">\"_\"</span><span class=\"sy0\">;</span>  <br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">proc</span> Check <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> ok <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> i  <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">foreach</span> k <span class=\"sy0\">$</span>::<span class=\"me1\">Keys</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">set</span> t <span class=\"br0\">[</span>.key<span class=\"re0\">$k</span> cget -text<span class=\"br0\">]</span><br/>      <span class=\"kw1\">set</span> g <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Goal</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span><br/>      <span class=\"kw2\">incr</span> i<br/>\u00a0<br/>      .key<span class=\"re0\">$k</span> config -background white<br/>      <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$t</span> eq <span class=\"re0\">$g</span>  <span class=\"br0\">}</span> <span class=\"br0\">{</span> .key<span class=\"re0\">$k</span> config -background lightgreen<span class=\"sy0\">;</span> <span class=\"kw2\">incr</span> ok <span class=\"br0\">}</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$t</span> eq <span class=\"st0\">\"_\"</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> .key<span class=\"re0\">$k</span> config -background gray <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># Solved:</span><br/>    update<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$ok</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">15</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Moves</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">foreach</span> k <span class=\"sy0\">$</span>::<span class=\"me1\">Keys</span>  <span class=\"br0\">{</span><br/>        .key<span class=\"re0\">$k</span> flash<span class=\"sy0\">;</span> bell<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">proc</span> Click <span class=\"br0\">{</span>k<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Msg</span> <span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">set</span> val <span class=\"br0\">[</span>.key<span class=\"re0\">$k</span> cget -text<span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> ok <span class=\"br0\">[</span>Move <span class=\"re0\">$k</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"kw2\">incr</span>\u00a0::<span class=\"me1\">Moves</span> <span class=\"re0\">$ok</span><br/>    wm title . <span class=\"st0\">\"$::Moves moves\"</span><br/>    Check<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">proc</span> ShowKeys <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">foreach</span> k <span class=\"sy0\">$</span>::<span class=\"me1\">Keys</span>  <span class=\"br0\">{</span><br/>      <span class=\"kw1\">set</span> t <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Puzz</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span><br/>      <span class=\"kw2\">incr</span> i<br/>      .key<span class=\"re0\">$k</span> config -text <span class=\"re0\">$t</span> -background white<span class=\"sy0\">;</span>  <br/>    <span class=\"br0\">}</span><br/>    Check<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">proc</span> NewGame <span class=\"br0\">{</span>N<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> Msg Moves PuzzNr GoalNr<br/>\u00a0<br/>    <span class=\"kw2\">incr</span>  PuzzNr <span class=\"re0\">$N</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$PuzzNr</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">3</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span> PuzzNr <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/>                         <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Goal</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Goal_0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$GoalNr</span> == <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Goal</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Goal_1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$PuzzNr</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Puzz</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Puzz_0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$PuzzNr</span> == <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Puzz</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Puzz_1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$PuzzNr</span> == <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Puzz</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Puzz_2</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$PuzzNr</span> == <span class=\"nu0\">3</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span>\u00a0::<span class=\"me1\">Puzz</span> <span class=\"sy0\">$</span>::<span class=\"me1\">Puzz_3</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>                  <span class=\"kw1\">set</span> Msg <span class=\"st0\">\"Try again\"</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"re0\">$N</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw1\">set</span> Msg <span class=\"st0\">\"New game\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">set</span> Moves <span class=\"nu0\">0</span><br/>    ShowKeys<br/>    wm title . <span class=\"st0\">\"$Msg \"</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">#---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+---</span><br/>\u00a0<br/>  button .reset   -text <span class=\"st0\">\"Restart\"</span>  -fg blue -command <span class=\"br0\">{</span>NewGame  <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>  button .newGame -text <span class=\"st0\">\"New Game\"</span> -fg red  -command <span class=\"br0\">{</span>NewGame +<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">foreach</span> k <span class=\"sy0\">$</span>::<span class=\"me1\">Keys</span> <span class=\"br0\">{</span><br/>    button .key<span class=\"re0\">$k</span> -text <span class=\"st0\">\"$k\"</span> -width <span class=\"nu0\">4</span> -command <span class=\"st0\">\"Click $k\"</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  grid .newGame x .reset x -sticky nsew<br/>\u00a0<br/>  grid .key11 .key12 .key13 .key14  -sticky nsew  -padx <span class=\"nu0\">2</span> -pady <span class=\"nu0\">2</span><br/>  grid .key21 .key22 .key23 .key24  -sticky nsew  -padx <span class=\"nu0\">2</span> -pady <span class=\"nu0\">2</span><br/>  grid .key31 .key32 .key33 .key34  -sticky nsew  -padx <span class=\"nu0\">2</span> -pady <span class=\"nu0\">2</span><br/>  grid .key41 .key42 .key43 .key44  -sticky nsew  -padx <span class=\"nu0\">2</span> -pady <span class=\"nu0\">2</span><br/>\u00a0<br/>  grid configure .newGame .reset  -columnspan <span class=\"nu0\">2</span> -padx <span class=\"nu0\">4</span><br/>\u00a0<br/>  ShowKeys<span class=\"sy0\">;</span> Check<br/>  wm title . <span class=\"re0\">$progVersion</span><br/>  focus -force .<br/>  wm resizable . <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\"># For some more versions, see:  http://wiki.tcl.tk/15067\u00a0: Classic 15 Puzzle and http://wiki.tcl.tk/15085\u00a0: N-Puzzle</span><br/>\u00a0</pre>"}, {"lang": "Visual Basic .NET", "loc": 96, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Public</span> <span class=\"kw1\">Class</span> Board<br/>    <span class=\"kw1\">Inherits</span> System<span class=\"sy0\">.</span><span class=\"me1\">Windows</span><span class=\"sy0\">.</span><span class=\"me1\">Forms</span><span class=\"sy0\">.</span><span class=\"me1\">Form</span><br/>\u00a0<br/>    <span class=\"kw1\">Const</span> XbyX <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>    <span class=\"kw1\">Const</span> XSize <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><br/>\u00a0<br/>    <span class=\"kw1\">Private</span> Empty <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Panel<br/>    <span class=\"kw1\">Private</span> Tiles <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> Tile<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Private</span> Moves <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Sub</span> <span class=\"kw1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Text</span> <span class=\"sy0\">=</span> XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" Puzzle Game\"</span><br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">ClientSize</span> <span class=\"sy0\">=</span> <span class=\"kw1\">New</span> Size<span class=\"br0\">(</span>XbyX <span class=\"sy0\">*</span> XSize, XbyX <span class=\"sy0\">*</span> XSize<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">FormBorderStyle</span> <span class=\"sy0\">=</span> FormBorderStyle<span class=\"sy0\">.</span><span class=\"me1\">FixedToolWindow</span><br/>        Restart<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Sub</span> Restart<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> Start <span class=\"kw1\">As</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> MakeCompleteable<span class=\"br0\">(</span>GetRandamStartOrder<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        Empty<span class=\"sy0\">.</span><span class=\"me1\">SetBounds</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> XbyX<span class=\"br0\">)</span> <span class=\"sy0\">*</span> XSize, <span class=\"br0\">(</span><span class=\"br0\">(</span>XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> \\ XbyX<span class=\"br0\">)</span> <span class=\"sy0\">*</span> XSize, XSize, XSize<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Moves</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Tiles</span><span class=\"sy0\">.</span><span class=\"me1\">Clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"me1\">Clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">For</span> No <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><br/>            <span class=\"kw1\">Dim</span> Tile <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Tile<br/>            Tile<span class=\"sy0\">.</span><span class=\"me1\">Text</span> <span class=\"sy0\">=</span> Start<span class=\"br0\">(</span>No<span class=\"br0\">)</span><br/>            Tile<span class=\"sy0\">.</span><span class=\"me1\">Board</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Me</span><br/>            Tile<span class=\"sy0\">.</span><span class=\"me1\">SetBounds</span><span class=\"br0\">(</span><span class=\"br0\">(</span>No <span class=\"kw1\">Mod</span> XbyX<span class=\"br0\">)</span> <span class=\"sy0\">*</span> XSize, <span class=\"br0\">(</span>No \\ XbyX<span class=\"br0\">)</span> <span class=\"sy0\">*</span> XSize, XSize, XSize<span class=\"br0\">)</span><br/>            <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Tiles</span><span class=\"sy0\">.</span><span class=\"me1\">Add</span><span class=\"br0\">(</span>Tile<span class=\"br0\">)</span><br/>            <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"me1\">Add</span><span class=\"br0\">(</span>Tile<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Next</span><br/>\u00a0<br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Sub</span> IsComplete<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Moves</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">If</span> Empty<span class=\"sy0\">.</span><span class=\"me1\">Left</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> XbyX<span class=\"br0\">)</span> <span class=\"sy0\">*</span> XSize <span class=\"kw1\">AndAlso</span> Empty<span class=\"sy0\">.</span><span class=\"me1\">Top</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> \\ XbyX<span class=\"br0\">)</span> <span class=\"sy0\">*</span> XSize <span class=\"kw1\">Then</span><br/>            <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Tiles</span><span class=\"sy0\">.</span><span class=\"me1\">Sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">For</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> Tiles<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Text</span> <span class=\"sy0\">=</span> x <span class=\"kw1\">Then</span><br/>                    <span class=\"kw1\">Exit</span> <span class=\"kw1\">Sub</span><br/>                <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>            <span class=\"kw1\">Next</span><br/>            <a href=\"http://www.google.com/search?q=MSGBOX+site:msdn.microsoft.com\"><span class=\"kw7\">MsgBox</span></a><span class=\"br0\">(</span>$<span class=\"st0\">\"Completed in {Me.Moves} Moves!\"</span>, MsgBoxStyle<span class=\"sy0\">.</span><span class=\"me1\">Information</span>, <span class=\"st0\">\"Winner\"</span><span class=\"br0\">)</span><br/>            Restart<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Class</span> Tile<br/>        <span class=\"kw1\">Inherits</span> Button<br/>        <span class=\"kw1\">Implements</span> IComparable<span class=\"br0\">(</span><span class=\"kw1\">Of</span> Tile<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Public</span> Board <span class=\"kw1\">As</span> Board<br/>        <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> Tile_Click<span class=\"br0\">(</span>sender <span class=\"kw1\">As</span> <span class=\"kw2\">Object</span>, e <span class=\"kw1\">As</span> EventArgs<span class=\"br0\">)</span> <span class=\"kw1\">Handles</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Click</span><br/>            <span class=\"kw1\">With</span> Board<span class=\"sy0\">.</span><span class=\"me1\">Empty</span><br/>                <span class=\"kw1\">If</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Left</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">Left</span> <span class=\"kw1\">AndAlso</span> <span class=\"br0\">(</span><span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Top</span> <span class=\"sy0\">+</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Height</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">Top</span> <span class=\"kw1\">OrElse</span> <span class=\"sy0\">.</span><span class=\"me1\">Top</span> <span class=\"sy0\">+</span> <span class=\"sy0\">.</span><span class=\"me1\">Height</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>                    Swap<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">ElseIf</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Top</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">Top</span> <span class=\"kw1\">AndAlso</span> <span class=\"br0\">(</span><span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Left</span> <span class=\"sy0\">+</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">Left</span> <span class=\"kw1\">OrElse</span> <span class=\"sy0\">.</span><span class=\"me1\">Left</span> <span class=\"sy0\">+</span> <span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>                    Swap<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">With</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>        <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> Swap<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Dim</span> p <span class=\"sy0\">=</span> Board<span class=\"sy0\">.</span><span class=\"me1\">Empty</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span><br/>            Board<span class=\"sy0\">.</span><span class=\"me1\">Empty</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span><br/>            <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Location</span> <span class=\"sy0\">=</span> p<br/>            Board<span class=\"sy0\">.</span><span class=\"me1\">IsComplete</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>        <span class=\"kw1\">Public</span> <span class=\"kw1\">Function</span> CompareTo<span class=\"br0\">(</span>other <span class=\"kw1\">As</span> Tile<span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"kw1\">Implements</span> IComparable<span class=\"br0\">(</span><span class=\"kw1\">Of</span> Tile<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><br/>            <span class=\"kw1\">Dim</span> Result <span class=\"sy0\">=</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Top</span><span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>other<span class=\"sy0\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> Result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>                <span class=\"kw1\">Return</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">Left</span><span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>other<span class=\"sy0\">.</span><span class=\"me1\">Left</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>            <span class=\"kw1\">Return</span> Result<br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Class</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Function</span> GetRandamStartOrder<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> List <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> Random <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Do</span> <span class=\"kw1\">While</span> List<span class=\"sy0\">.</span><span class=\"me1\">Count</span> <span class=\"sy0\">&lt;</span> XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">Dim</span> Value <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> Random<span class=\"sy0\">.</span><span class=\"kw1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, XbyX <span class=\"sy0\">^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> List<span class=\"sy0\">.</span><span class=\"me1\">Contains</span><span class=\"br0\">(</span>Value<span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>                List<span class=\"sy0\">.</span><span class=\"me1\">Add</span><span class=\"br0\">(</span>Value<span class=\"br0\">)</span><br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">Loop</span><br/>        <span class=\"kw1\">Return</span> List<br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/>    <span class=\"kw1\">Public</span> <span class=\"kw1\">Function</span> MakeCompleteable<span class=\"br0\">(</span>List <span class=\"kw1\">As</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> List<span class=\"br0\">(</span><span class=\"kw1\">Of</span> <span class=\"kw2\">Integer</span><span class=\"br0\">)</span><br/>        <span class=\"co1\">'ToDo</span><br/>        <span class=\"kw1\">Return</span> List<br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Class</span></pre>"}, {"lang": "VBA", "loc": 182, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Public</span> iSide <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/><span class=\"kw2\">Public</span> iSize <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/><span class=\"kw2\">Public</span> iGrid() <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/><span class=\"kw2\">Public</span> lMoves <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span><br/><span class=\"kw2\">Public</span> sMessage <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw2\">Public</span> Const sTitle <span class=\"kw4\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"Tile Puzzle\"</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">Sub</span> PlayGame()<br/>    <span class=\"kw4\">Dim</span> iNum <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> vInput <span class=\"kw4\">As</span> <span class=\"kw1\">Variant</span><br/>\u00a0<br/>DefineGrid:<br/>    vInput = InputBox(<span class=\"st0\">\"Enter size of grid, as a whole number\"</span> &amp; <span class=\"kw1\">String</span>(2, vbCr) &amp; <span class=\"st0\">\"(e.g. for a 4 x 4 grid, enter '4')\"</span>, sTitle, 4)<br/>    <span class=\"kw3\">If</span> vInput = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span> <span class=\"kw2\">Exit</span> <span class=\"kw2\">Sub</span><br/>    <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> IsNumeric(vInput) <span class=\"kw3\">Then</span> <span class=\"kw3\">GoTo</span> DefineGrid<br/>    iSide = vInput<br/>    <span class=\"kw3\">If</span> iSide &lt; 3 <span class=\"kw3\">Or</span> iNum &gt; 10 <span class=\"kw3\">Then</span> <span class=\"kw3\">GoTo</span> DefineGrid<br/>    iSize = iSide ^ 2<br/>    <span class=\"kw4\">ReDim</span> iGrid(1 <span class=\"kw3\">To</span> iSize)<br/>\u00a0<br/>Initalize:<br/>    InitializeGrid<br/>    <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> IsSolvable <span class=\"kw3\">Then</span> <span class=\"kw3\">GoTo</span> Initalize<br/>\u00a0<br/>GetInput:<br/>    vInput = InputBox(ShowGrid &amp; vbCr &amp; <span class=\"st0\">\"Enter number to move into empty tile\"</span>, sTitle)<br/>    <span class=\"kw3\">If</span> vInput = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>        <span class=\"kw3\">If</span> MsgBox(<span class=\"st0\">\"Are you sure? This will end the current game.\"</span>, vbExclamation + vbYesNo, sTitle) = vbYes <span class=\"kw3\">Then</span> <span class=\"kw2\">Exit</span> <span class=\"kw2\">Sub</span><br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> IsNumeric(vInput) <span class=\"kw3\">Then</span><br/>        sMessage = <span class=\"st0\">\"'\"</span> &amp; vInput &amp; <span class=\"st0\">\"' is not a valid tile\"</span><br/>        <span class=\"kw3\">GoTo</span> GetInput<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    iNum = vInput<br/>    <span class=\"kw3\">If</span> iNum &lt; 1 <span class=\"kw3\">Or</span> iNum &gt; iSize - 1 <span class=\"kw3\">Then</span><br/>        sMessage = iNum &amp; <span class=\"st0\">\" is not a valid tile\"</span><br/>        <span class=\"kw3\">GoTo</span> GetInput<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    i = FindTile(iNum)<br/>    <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> ValidMove(i) <span class=\"kw3\">Then</span> <span class=\"kw3\">GoTo</span> GetInput<br/>    MoveTile (i)<br/>    <span class=\"kw3\">If</span> TestGrid <span class=\"kw3\">Then</span><br/>        MsgBox <span class=\"st0\">\"SUCCESS! You solved the puzzle in \"</span> &amp; lMoves &amp; <span class=\"st0\">\" moves\"</span>, vbInformation + vbOKOnly, sTitle<br/>    <span class=\"kw3\">Else</span><br/>        <span class=\"kw3\">GoTo</span> GetInput<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> RandomTile() <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    Randomize<br/>    RandomTile = Int(Rnd * iSize) + 1<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> GetX(<span class=\"kw4\">ByVal</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    GetX = Int((i - 1) / iSide) + 1<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> GetY(<span class=\"kw4\">ByVal</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    GetY = (i - 1) <span class=\"kw4\">Mod</span> iSide + 1<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> GetI(<span class=\"kw4\">ByVal</span> x <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, y <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>)<br/>    GetI = (x - 1) * iSide + y<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> InitializeGrid()<br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> x <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> y <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>\u00a0<br/>    sMessage = <span class=\"st0\">\"New \"</span> &amp; iSide &amp; <span class=\"st0\">\" x \"</span> &amp; iSide &amp; <span class=\"st0\">\" game started\"</span> &amp; vbCr<br/>\u00a0<br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> iSize<br/>        iGrid(i) = 0<br/>    <span class=\"kw3\">Next</span> i<br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> iSize - 1<br/>        <span class=\"kw3\">Do</span><br/>            x = RandomTile<br/>            <span class=\"kw3\">If</span> iGrid(x) = 0 <span class=\"kw3\">Then</span> iGrid(x) = i<br/>        <span class=\"kw3\">Loop</span> <span class=\"kw3\">Until</span> iGrid(x) = i<br/>    <span class=\"kw3\">Next</span> i<br/>    lMoves = 0<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> IsSolvable() <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> j <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> iCount <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> iSize - 1<br/>        <span class=\"kw3\">For</span> j = i + 1 <span class=\"kw3\">To</span> iSize<br/>            <span class=\"kw3\">If</span> iGrid(j) &lt; iGrid(i) <span class=\"kw3\">And</span> iGrid(j) &gt; 0 <span class=\"kw3\">Then</span> iCount = iCount + 1<br/>        <span class=\"kw3\">Next</span> j<br/>    <span class=\"kw3\">Next</span> i<br/>    <span class=\"kw3\">If</span> iSide <span class=\"kw4\">Mod</span> 2 <span class=\"kw3\">Then</span><br/>        IsSolvable = <span class=\"kw3\">Not</span> iCount <span class=\"kw4\">Mod</span> 2<br/>    <span class=\"kw3\">Else</span><br/>        IsSolvable = iCount <span class=\"kw4\">Mod</span> 2 = GetX(FindTile(0)) <span class=\"kw4\">Mod</span> 2<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> TestGrid() <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>\u00a0<br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> iSize - 1<br/>        <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> iGrid(i) = i <span class=\"kw3\">Then</span><br/>            TestGrid = <span class=\"kw5\">False</span><br/>            <span class=\"kw2\">Exit</span> <span class=\"kw2\">Function</span><br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">Next</span> i<br/>    TestGrid = <span class=\"kw5\">True</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> FindTile(<span class=\"kw4\">ByVal</span> iNum <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> iSize<br/>        <span class=\"kw3\">If</span> iGrid(i) = iNum <span class=\"kw3\">Then</span><br/>            FindTile = i<br/>            <span class=\"kw2\">Exit</span> <span class=\"kw2\">Function</span><br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">Next</span> i<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> ValidMove(<span class=\"kw4\">ByVal</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/>    <span class=\"kw4\">Dim</span> e <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> xDiff <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> yDiff <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>\u00a0<br/>    e = FindTile(0)<br/>    xDiff = GetX(i) - GetX(e)<br/>    yDiff = GetY(i) - GetY(e)<br/>    <span class=\"kw3\">If</span> xDiff = 0 <span class=\"kw3\">Then</span><br/>        <span class=\"kw3\">If</span> yDiff = 1 <span class=\"kw3\">Then</span><br/>            sMessage = <span class=\"st0\">\"Tile \"</span> &amp; iGrid(i) &amp; <span class=\"st0\">\" was moved left\"</span><br/>            ValidMove = <span class=\"kw5\">True</span><br/>        <span class=\"kw3\">ElseIf</span> yDiff = -1 <span class=\"kw3\">Then</span><br/>            sMessage = <span class=\"st0\">\"Tile \"</span> &amp; iGrid(i) &amp; <span class=\"st0\">\" was moved right\"</span><br/>            ValidMove = <span class=\"kw5\">True</span><br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">ElseIf</span> yDiff = 0 <span class=\"kw3\">Then</span><br/>        <span class=\"kw3\">If</span> xDiff = 1 <span class=\"kw3\">Then</span><br/>            sMessage = <span class=\"st0\">\"Tile \"</span> &amp; iGrid(i) &amp; <span class=\"st0\">\" was moved up\"</span><br/>            ValidMove = <span class=\"kw5\">True</span><br/>        <span class=\"kw3\">ElseIf</span> xDiff = -1 <span class=\"kw3\">Then</span><br/>            sMessage = <span class=\"st0\">\"Tile \"</span> &amp; iGrid(i) &amp; <span class=\"st0\">\" was moved down\"</span><br/>            ValidMove = <span class=\"kw5\">True</span><br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> ValidMove <span class=\"kw3\">Then</span> sMessage = <span class=\"st0\">\"Tile \"</span> &amp; iGrid(i) &amp; <span class=\"st0\">\" may not be moved\"</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> MoveTile(<span class=\"kw4\">ByVal</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>)<br/>    <span class=\"kw4\">Dim</span> e <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    e = FindTile(0)<br/>    iGrid(e) = iGrid(i)<br/>    iGrid(i) = 0<br/>    lMoves = lMoves + 1<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> ShowGrid()<br/>    <span class=\"kw4\">Dim</span> x <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> y <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw4\">Dim</span> sNum <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/>    <span class=\"kw4\">Dim</span> s <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/>\u00a0<br/>    <span class=\"kw3\">For</span> x = 1 <span class=\"kw3\">To</span> iSide<br/>        <span class=\"kw3\">For</span> y = 1 <span class=\"kw3\">To</span> iSide<br/>            sNum = iGrid(GetI(x, y))<br/>            <span class=\"kw3\">If</span> sNum = <span class=\"st0\">\"0\"</span> <span class=\"kw3\">Then</span> sNum = <span class=\"st0\">\"\"</span><br/>            s = s &amp; sNum &amp; vbTab<br/>        <span class=\"kw3\">Next</span> y<br/>        s = s &amp; vbCr<br/>    <span class=\"kw3\">Next</span> x<br/>    <span class=\"kw3\">If</span> <span class=\"kw3\">Not</span> sMessage = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>        s = s &amp; vbCr &amp; sMessage &amp; vbCr<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    ShowGrid = s<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0</pre>"}, {"lang": "Yabasic", "loc": 78, "block": "<pre class=\"text highlighted_source\">dx = 4\u00a0: dy = 4\u00a0: dxy = dx * dy<br/>dim grid(dx, dy)<br/>\u00a0<br/>dim t(dxy)<br/>\u00a0<br/>for x = 1 to dx<br/>\tfor y = 1 to dy<br/>\t\tfin = false<br/>\t\trepeat<br/>\t\t\ti = int(ran(dxy) + 1)<br/>\t\t\tif t(i) = 0 then<br/>\t\t\t\tt(i) = 1<br/>\t\t\t\tfin = true<br/>\t\t\t\tif i &lt; dxy then<br/>\t\t\t\t\tgrid(x, y) = i<br/>\t\t\t\telse<br/>\t\t\t\t\tex = x\u00a0: ey = y<br/>\t\t\t\tend if<br/>\t\t\tend if<br/>\t\tuntil(fin = true)<br/>\tnext y<br/>next x<br/>\u00a0<br/>drawTable()<br/>\u00a0<br/>repeat<br/>\tmoveTile()<br/>\tdrawTable()<br/>until(finish())<br/>\u00a0<br/>print \"\\n\\n\\nNumber of movements: \",mov,\"\\nEnd\\n\"<br/>\u00a0<br/>sub finish()<br/>\tlocal x, y, v<br/>\u00a0<br/>\tfor y = 1 to dy<br/>\t\tfor x = 1 to dx<br/>\t\t\tv = v + 1<br/>\t\t\tif (v &lt; dxy) and (grid(x, y) &lt;&gt; v) return false<br/>\t\tnext x<br/>\tnext y<br/>\treturn true<br/>end sub<br/>\u00a0<br/>sub moveTile()<br/>\tlocal direction$<br/>\u00a0<br/>\tdirection$ = inkey$<br/>\u00a0<br/>\tswitch direction$<br/>\t\tcase \"up\": if (ey + 1) &lt; (dy + 1) then grid(ex, ey) = grid(ex, ey + 1)\u00a0: ey = ey + 1  end if\u00a0: break<br/>\t\tcase \"down\": if (ey - 1) &gt; 0 then grid(ex, ey) = grid(ex, ey - 1)\u00a0: ey = ey - 1  end if\u00a0: break<br/>\t\tcase \"right\": if (ex - 1) &gt; 0 then grid(ex, ey) = grid(ex - 1, ey)\u00a0: ex = ex - 1  end if\u00a0: break<br/>\t\tcase \"left\": if (ex + 1) &lt; (dx + 1) then grid(ex, ey) = grid(ex + 1, ey)\u00a0: ex = ex + 1  end if\u00a0: break<br/>\t\tdefault: return\u00a0: break<br/>\tend switch<br/>\tmov = mov + 1<br/>\tgrid(ex, ey) = 0<br/>end sub<br/>\u00a0<br/>sub drawTable()<br/>\tlocal x, y<br/>\u00a0<br/>\tclear screen<br/>\u00a0<br/>\tprint \"   Use the cursor keys\"<br/>\u00a0<br/>\tfor x = 1 to dx<br/>\t\tfor y = 1 to dy<br/>\t\t\tprint at(x * 3, y * 2);<br/>\t\t\tif grid(x, y) then<br/>\t\t\t\tprint color(\"yellow\",\"magenta\") grid(x, y) using \"##\"<br/>\t\t\telse<br/>\t\t\t\tprint \"  \"<br/>\t\t\tend if<br/>\t\tnext y<br/>\tnext x<br/>end sub</pre>"}]}