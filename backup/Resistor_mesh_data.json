{"task": "Resistor_mesh", "blocks": [{"lang": "Ada", "loc": 69, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">procedure</span> ResistMesh <span class=\"kw1\">is</span><br/>   H, W\u00a0: <span class=\"kw3\">constant</span> Positive\u00a0:= <span class=\"nu0\">10</span>;<br/>   rowA, colA\u00a0: <span class=\"kw3\">constant</span> Positive\u00a0:= <span class=\"nu0\">2</span>; <span class=\"co1\">-- row/col indexed from 1</span><br/>   rowB\u00a0: <span class=\"kw3\">constant</span> Positive\u00a0:= <span class=\"nu0\">7</span>;<br/>   colB\u00a0: <span class=\"kw3\">constant</span> Positive\u00a0:= <span class=\"nu0\">8</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Ntype <span class=\"kw1\">is</span> <span class=\"br0\">(</span>A, B, Free<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Vtype <span class=\"kw1\">is</span> <span class=\"kw3\">digits</span> <span class=\"nu0\">15</span>;<br/>   <span class=\"kw3\">type</span> Node <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      volt\u00a0: Vtype\u00a0:= <span class=\"nu0\">0.0</span>;<br/>      name\u00a0: Ntype\u00a0:= Free;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/>   <span class=\"kw3\">type</span> NodeMesh <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;, Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Node;<br/>   <span class=\"kw3\">package</span> IIO <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Float_IO</span> <span class=\"br0\">(</span>Vtype<span class=\"br0\">)</span>;<br/>   mesh, dmesh\u00a0: NodeMesh <span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"me1\">H</span>, <span class=\"nu0\">1</span> .. <span class=\"me1\">W</span><span class=\"br0\">)</span>;<br/>   curA, curB, diff\u00a0: Vtype;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> set_AB <span class=\"br0\">(</span>mesh\u00a0: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> NodeMesh<span class=\"br0\">)</span> <span class=\"kw1\">is</span> <span class=\"kw1\">begin</span><br/>      mesh <span class=\"br0\">(</span>rowA, colA<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>\u00a0:=  <span class=\"nu0\">1.0</span>;  mesh <span class=\"br0\">(</span>rowA, colA<span class=\"br0\">)</span>.<span class=\"me1\">name</span>\u00a0:= A;<br/>      mesh <span class=\"br0\">(</span>rowB, colB<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>\u00a0:= -<span class=\"nu0\">1.0</span>;  mesh <span class=\"br0\">(</span>rowB, colB<span class=\"br0\">)</span>.<span class=\"me1\">name</span>\u00a0:= B;<br/>   <span class=\"kw1\">end</span> set_AB;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> sides <span class=\"br0\">(</span>i\u00a0: Positive; j\u00a0: Positive<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Vtype <span class=\"kw1\">is</span><br/>      s\u00a0: Integer\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> i /= <span class=\"nu0\">1</span> <span class=\"kw2\">and</span> i /= H <span class=\"kw1\">then</span> s\u00a0:= s + <span class=\"nu0\">2</span>; <span class=\"kw1\">else</span> s\u00a0:= s + <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">if</span> j /= <span class=\"nu0\">1</span> <span class=\"kw2\">and</span> j /= W <span class=\"kw1\">then</span> s\u00a0:= s + <span class=\"nu0\">2</span>; <span class=\"kw1\">else</span> s\u00a0:= s + <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">return</span> Vtype <span class=\"br0\">(</span>s<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> sides;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> calc_diff <span class=\"br0\">(</span>mesh\u00a0: NodeMesh; dmesh\u00a0: <span class=\"kw3\">out</span> NodeMesh;<br/>      total\u00a0: <span class=\"kw3\">out</span> Vtype<span class=\"br0\">)</span>  <span class=\"kw1\">is</span><br/>      n\u00a0: Natural;<br/>      v\u00a0: Vtype\u00a0:= <span class=\"nu0\">0.0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      total\u00a0:= <span class=\"nu0\">0.0</span>;<br/>      <span class=\"kw1\">for</span> i <span class=\"kw3\">in</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">H</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">for</span> j <span class=\"kw3\">in</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">W</span> <span class=\"kw1\">loop</span><br/>            n\u00a0:= <span class=\"nu0\">0</span>;    v\u00a0:= <span class=\"nu0\">0.0</span>;<br/>            <span class=\"kw1\">if</span>  i /= <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> v\u00a0:= v + mesh <span class=\"br0\">(</span>i - <span class=\"nu0\">1</span>, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>; n\u00a0:= n + <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">if</span> j /= <span class=\"nu0\">1</span> <span class=\"kw1\">then</span>  v\u00a0:= v + mesh <span class=\"br0\">(</span>i, j - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">volt</span>; n\u00a0:= n + <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">if</span> i &lt; H <span class=\"kw1\">then</span> v\u00a0:= v + mesh <span class=\"br0\">(</span>i + <span class=\"nu0\">1</span>, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>; n\u00a0:= n + <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">if</span> j &lt; W <span class=\"kw1\">then</span> v\u00a0:= v + mesh <span class=\"br0\">(</span>i, j + <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">volt</span>; n\u00a0:= n + <span class=\"nu0\">1</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            v\u00a0:= mesh <span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span> - v / Vtype <span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>            dmesh <span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>\u00a0:= v;<br/>            <span class=\"kw1\">if</span> mesh <span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>.<span class=\"me1\">name</span> = Free <span class=\"kw1\">then</span> total\u00a0:= total + v ** <span class=\"nu0\">2</span>; <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span> calc_diff;<br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>   <span class=\"kw1\">loop</span><br/>      set_AB <span class=\"br0\">(</span>mesh<span class=\"br0\">)</span>;<br/>      calc_diff <span class=\"br0\">(</span>mesh, dmesh, diff<span class=\"br0\">)</span>;<br/>      <span class=\"kw3\">exit</span> <span class=\"kw3\">when</span> diff &lt; 1.0e-40;<br/>      <span class=\"kw1\">for</span> i <span class=\"kw3\">in</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">H</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">for</span> j <span class=\"kw3\">in</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">W</span> <span class=\"kw1\">loop</span><br/>            mesh <span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>\u00a0:= mesh <span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span> - dmesh <span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>.<span class=\"me1\">volt</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>\u00a0<br/>   curA\u00a0:= dmesh <span class=\"br0\">(</span>rowA, colA<span class=\"br0\">)</span>.<span class=\"me1\">volt</span> * sides <span class=\"br0\">(</span>rowA, colA<span class=\"br0\">)</span>;<br/>   curB\u00a0:= dmesh <span class=\"br0\">(</span>rowB, colB<span class=\"br0\">)</span>.<span class=\"me1\">volt</span> * sides <span class=\"br0\">(</span>rowB, colB<span class=\"br0\">)</span>;<br/>   diff\u00a0:= <span class=\"nu0\">4.0</span> / <span class=\"br0\">(</span>curA - curB<span class=\"br0\">)</span>;<br/>   IIO.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>diff, Exp =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>; New_Line;<br/><span class=\"kw1\">end</span> ResistMesh;</pre>"}, {"lang": "BBC BASIC", "loc": 31, "block": "<pre class=\"text highlighted_source\">      INSTALL @lib$+\"ARRAYLIB\"<br/>      *FLOAT 64<br/>      @% = &amp;F0F<br/>\u00a0<br/>      PRINT \"Resistance = \"; FNresistormesh(10, 10, 1, 1, 7, 6) \" ohms\"<br/>      END<br/>\u00a0<br/>      DEF FNresistormesh(ni%, nj%, ai%, aj%, bi%, bj%)<br/>      LOCAL c%, i%, j%, k%, n%, A(), B()<br/>      n% = ni% * nj%<br/>      DIM A(n%-1, n%-1), B(n%-1, 0)<br/>      FOR i% = 0 TO ni%-1<br/>        FOR j% = 0 TO nj%-1<br/>          k% = i% * nj% + j%<br/>          IF i% = ai% AND j% = aj% THEN<br/>            A(k%, k%) = 1<br/>          ELSE<br/>            c% = 0<br/>            IF (i% + 1) &lt; ni% c% += 1\u00a0: A(k%, k% + nj%) = -1<br/>            IF i% &gt; 0         c% += 1\u00a0: A(k%, k% - nj%) = -1<br/>            IF (j% + 1) &lt; nj% c% += 1\u00a0: A(k%, k% + 1)   = -1<br/>            IF j% &gt; 0         c% += 1\u00a0: A(k%, k% - 1)   = -1<br/>            A(k%, k%) = c%<br/>          ENDIF<br/>        NEXT<br/>      NEXT<br/>      k% = bi% * nj% + bj%<br/>      B(k%, 0) = 1<br/>      PROC_invert(A())<br/>      B() = A().B()<br/>      = B(k%, 0)</pre>"}, {"lang": "C", "loc": 65, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define S 10</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> <span class=\"kw4\">double</span> v<span class=\"sy0\">;</span> <span class=\"kw4\">int</span> fixed<span class=\"sy0\">;</span> <span class=\"br0\">}</span> node<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">#define each(i, x) for(i = 0; i &lt; x; i++)</span><br/>node <span class=\"sy0\">**</span>alloc2<span class=\"br0\">(</span><span class=\"kw4\">int</span> w<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> h<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>\tnode <span class=\"sy0\">**</span>a <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/calloc.html\"><span class=\"kw3\">calloc</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>node<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>h <span class=\"sy0\">+</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>node<span class=\"br0\">)</span><span class=\"sy0\">*</span>w<span class=\"sy0\">*</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\teach<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> h<span class=\"br0\">)</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">?</span> a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> w <span class=\"sy0\">:</span> <span class=\"br0\">(</span>node<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> a<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> set_boundary<span class=\"br0\">(</span>node <span class=\"sy0\">**</span>m<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tm<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span> m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\tm<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> calc_diff<span class=\"br0\">(</span>node <span class=\"sy0\">**</span>m<span class=\"sy0\">,</span> node <span class=\"sy0\">**</span>d<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> w<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> h<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> n<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> v<span class=\"sy0\">,</span> total <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\teach<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> h<span class=\"br0\">)</span> each<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tv <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">,</span> n<span class=\"sy0\">++;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>j<span class=\"br0\">)</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">,</span> n<span class=\"sy0\">++;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> h<span class=\"br0\">)</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">,</span> n<span class=\"sy0\">++;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> w<span class=\"br0\">)</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">,</span> n<span class=\"sy0\">++;</span><br/>\u00a0<br/>\t\td<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> v <span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">-</span> v <span class=\"sy0\">/</span> n<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">fixed</span><span class=\"br0\">)</span> total <span class=\"sy0\">+=</span> v <span class=\"sy0\">*</span> v<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> total<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> iter<span class=\"br0\">(</span>node <span class=\"sy0\">**</span>m<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> w<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> h<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tnode <span class=\"sy0\">**</span>d <span class=\"sy0\">=</span> alloc2<span class=\"br0\">(</span>w<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> diff <span class=\"sy0\">=</span> <span class=\"nu19\">1e10</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> cur<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span>diff <span class=\"sy0\">&gt;</span> <span class=\"nu19\">1e-24</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tset_boundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tdiff <span class=\"sy0\">=</span> calc_diff<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\teach<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>h<span class=\"br0\">)</span> each<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> w<span class=\"br0\">)</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">-=</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\teach<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> h<span class=\"br0\">)</span> each<span class=\"br0\">(</span>j<span class=\"sy0\">,</span> w<span class=\"br0\">)</span><br/>\t\tcur<span class=\"br0\">[</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span> <span class=\"sy0\">+=</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">*</span><br/>\t\t\t\t<span class=\"br0\">(</span><span class=\"sy0\">!!</span>i <span class=\"sy0\">+</span> <span class=\"sy0\">!!</span>j <span class=\"sy0\">+</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">(</span>cur<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> cur<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tnode <span class=\"sy0\">**</span>mesh <span class=\"sy0\">=</span> alloc2<span class=\"br0\">(</span>S<span class=\"sy0\">,</span> S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"R =\u00a0%g<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">/</span> iter<span class=\"br0\">(</span>mesh<span class=\"sy0\">,</span> S<span class=\"sy0\">,</span> S<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 108, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> ResistorMesh <span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Node <span class=\"br0\">{</span><br/>        <span class=\"kw1\">public</span> Node<span class=\"br0\">(</span><span class=\"kw4\">double</span> v, <span class=\"kw4\">int</span> fixed_<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            V <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">Fixed</span> <span class=\"sy0\">=</span> fixed_<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> V <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> <span class=\"kw1\">Fixed</span> <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">class</span> Program <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> SetBoundary<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> m<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">;</span><br/>            m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw1\">Fixed</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span><span class=\"sy0\">;</span><br/>            m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw1\">Fixed</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> CalcuateDifference<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> m, List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> d, <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">double</span> total <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">double</span> v <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span><span class=\"sy0\">;</span><br/>                        n<span class=\"sy0\">++;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span><span class=\"sy0\">;</span><br/>                        n<span class=\"sy0\">++;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span><span class=\"sy0\">;</span><br/>                        n<span class=\"sy0\">++;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span><span class=\"sy0\">;</span><br/>                        n<span class=\"sy0\">++;</span><br/>                    <span class=\"br0\">}</span><br/>                    v <span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span> <span class=\"sy0\">-</span> v <span class=\"sy0\">/</span> n<span class=\"sy0\">;</span><br/>                    d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span> <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw1\">Fixed</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        total <span class=\"sy0\">+=</span> v <span class=\"sy0\">*</span> v<span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">return</span> total<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> Iter<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> m, <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> d <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span> t <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    t<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Node<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                d<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> curr <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">double</span> diff <span class=\"sy0\">=</span> 1e10<span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>diff <span class=\"sy0\">&gt;</span> 1e<span class=\"sy0\">-</span>24<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                SetBoundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                diff <span class=\"sy0\">=</span> CalcuateDifference<span class=\"br0\">(</span>m, d, w, h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span> <span class=\"sy0\">-=</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                    curr<span class=\"br0\">[</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw1\">Fixed</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">V</span> <span class=\"sy0\">*</span> k<span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">return</span> <span class=\"br0\">(</span>curr<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> curr<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> S <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> mesh <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> S<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span> t <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> S<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    t<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Node<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                mesh<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw4\">double</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">/</span> Iter<span class=\"br0\">(</span>mesh, S, S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"R = {0:F15}\"</span>, r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 78, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">traits</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">enum</span> Node.<span class=\"me1\">FP</span> differenceThreshold <span class=\"sy0\">=</span> <span class=\"nu19\">1e-40</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Node <span class=\"br0\">{</span><br/>    <span class=\"kw2\">alias</span> FP <span class=\"sy0\">=</span> <span class=\"kw4\">real</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">enum</span> Kind <span class=\"sy0\">:</span> <span class=\"kw4\">size_t</span> <span class=\"br0\">{</span> free<span class=\"sy0\">,</span> A<span class=\"sy0\">,</span> B <span class=\"br0\">}</span><br/>\u00a0<br/>    FP voltage <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/*const*/</span> <span class=\"kw4\">private</span> Kind kind <span class=\"sy0\">=</span> Kind.<span class=\"me1\">free</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">// Remove kindGet once kind is const.</span><br/>    <span class=\"kw4\">@property</span> Kind kindGet<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @nogc <span class=\"br0\">{</span><span class=\"kw1\">return</span> kind<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Node.<span class=\"me1\">FP</span> iter<span class=\"br0\">(</span><span class=\"kw4\">size_t</span> w<span class=\"sy0\">,</span> <span class=\"kw4\">size_t</span> h<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">ref</span> Node<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> m<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">void</span> enforceBoundaryConditions<span class=\"br0\">(</span><span class=\"kw2\">ref</span> Node<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> m<span class=\"br0\">)</span><br/>    <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @nogc <span class=\"br0\">{</span><br/>        m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">=</span>  <span class=\"nu16\">1.0</span><span class=\"sy0\">;</span><br/>        m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu16\">1.0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">static</span> Node.<span class=\"me1\">FP</span> calcDifference<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw2\">ref</span> Node<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> m<span class=\"sy0\">,</span><br/>                                  <span class=\"kw2\">ref</span> Node<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> d<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @nogc <span class=\"br0\">{</span><br/>        Node.<span class=\"me1\">FP</span> total <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> j<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">w</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                Node.<span class=\"me1\">FP</span> v <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw4\">size_t</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>    <span class=\"br0\">{</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n<span class=\"sy0\">++;</span> <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>    <span class=\"br0\">{</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n<span class=\"sy0\">++;</span> <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n<span class=\"sy0\">++;</span> <span class=\"br0\">}</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> v <span class=\"sy0\">+=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n<span class=\"sy0\">++;</span> <span class=\"br0\">}</span><br/>                    v <span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">-</span> v <span class=\"sy0\">/</span> n<span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">kindGet</span> <span class=\"sy0\">==</span> Node.<span class=\"me1\">Kind</span>.<span class=\"me1\">free</span><span class=\"br0\">)</span><br/>                    total <span class=\"sy0\">+=</span> v <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> total<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Node<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> difference<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        enforceBoundaryConditions<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>calcDifference<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> difference<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> differenceThreshold<span class=\"br0\">)</span><br/>            <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> di<span class=\"sy0\">;</span> difference<span class=\"br0\">)</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> j<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">ref</span> dij<span class=\"sy0\">;</span> di<span class=\"br0\">)</span><br/>                m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">-=</span> dij.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Node.<span class=\"me1\">FP</span><span class=\"br0\">[</span>EnumMembers<span class=\"sy0\">!</span><span class=\"br0\">(</span>Node.<span class=\"me1\">Kind</span><span class=\"br0\">)</span>.<span class=\"me1\">length</span><span class=\"br0\">]</span> cur <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> di<span class=\"sy0\">;</span> difference<span class=\"br0\">)</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> j<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">ref</span> dij<span class=\"sy0\">;</span> di<span class=\"br0\">)</span><br/>            cur<span class=\"br0\">[</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">kindGet</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> dij.<span class=\"me1\">voltage</span> <span class=\"sy0\">*</span><br/>                                   <span class=\"br0\">(</span><span class=\"sy0\">!!</span>i <span class=\"sy0\">+</span> <span class=\"sy0\">!!</span>j <span class=\"sy0\">+</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>cur<span class=\"br0\">[</span>Node.<span class=\"me1\">Kind</span>.<span class=\"me1\">A</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> cur<span class=\"br0\">[</span>Node.<span class=\"me1\">Kind</span>.<span class=\"me1\">B</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu16\">2.0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">enum</span> <span class=\"kw4\">size_t</span> w <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span><br/>                h <span class=\"sy0\">=</span> w<span class=\"sy0\">;</span><br/>    Node<span class=\"br0\">[</span>w<span class=\"br0\">]</span><span class=\"br0\">[</span>h<span class=\"br0\">]</span> mesh<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Set A and B Nodes.</span><br/>    mesh<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Node<span class=\"br0\">(</span> <span class=\"nu16\">1.0</span><span class=\"sy0\">,</span> Node.<span class=\"me1\">Kind</span>.<span class=\"me1\">A</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    mesh<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Node<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu16\">1.0</span><span class=\"sy0\">,</span> Node.<span class=\"me1\">Kind</span>.<span class=\"me1\">B</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"R =\u00a0%.19f\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">/</span> mesh.<span class=\"me1\">iter</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "ERRE", "loc": 78, "block": "<pre class=\"text highlighted_source\">\u00a0<br/> PROGRAM RESISTENCE_MESH<br/>\u00a0<br/>\u00a0!$BASE=1<br/>\u00a0<br/>\u00a0!$DYNAMIC<br/> DIM A[0,0]<br/>\u00a0<br/> BEGIN<br/>\u00a0<br/>  N=10<br/>  NN=N*N<br/> \u00a0!$DIM A[NN,NN+1]<br/>\u00a0<br/>  PRINT(CHR$(12);)\u00a0!CLS<br/> \u00a0! generate matrix data<br/>  NODE=0<br/>  FOR ROW=1 TO N DO<br/>    FOR COL=1 TO N DO<br/>        NODE=NODE+1<br/>        IF ROW&gt;1 THEN<br/>            A[NODE,NODE]=A[NODE,NODE]+1<br/>            A[NODE,NODE-N]=-1<br/>        END IF<br/>        IF ROW&lt;N THEN<br/>            A[NODE,NODE]=A[NODE,NODE]+1<br/>            A[NODE,NODE+N]=-1<br/>        END IF<br/>        IF COL&gt;1 THEN<br/>            A[NODE,NODE]=A[NODE,NODE]+1<br/>            A[NODE,NODE-1]=-1<br/>        END IF<br/>        IF COL&lt;N THEN<br/>            A[NODE,NODE]=A[NODE,NODE]+1<br/>            A[NODE,NODE+1]=-1<br/>        END IF<br/>    END FOR<br/>  END FOR<br/>\u00a0<br/>  AR=2  AC=2  A=AC+N*(AR-1)<br/>  BR=7  BC=8  B=BC+N*(BR-1)<br/>  A[A,NN+1]=-1<br/>  A[B,NN+1]=1<br/>\u00a0<br/>  PRINT(\"Nodes \";A,B)<br/>\u00a0<br/> \u00a0! solve linear system<br/> \u00a0! using Gauss-Seidel method <br/> \u00a0! with pivoting<br/>  R=NN<br/>\u00a0<br/>  FOR J=1 TO R DO<br/>    FOR I=J TO R DO<br/>      EXIT IF A[I,J]&lt;&gt;0<br/>    END FOR<br/>    IF I=R+1 THEN<br/>      PRINT(\"No solution!\")<br/>     \u00a0!$STOP<br/>    END IF<br/>    FOR K=1 TO R+1 DO<br/>      SWAP(A[J,K],A[I,K])<br/>    END FOR<br/>    Y=1/A[J,J]<br/>    FOR K=1 TO R+1 DO<br/>      A[J,K]=Y*A[J,K]<br/>    END FOR<br/>    FOR I=1 TO R DO<br/>      IF I&lt;&gt;J THEN<br/>         Y=-A[I,J]<br/>         FOR K=1 TO R+1 DO<br/>            A[I,K]=A[I,K]+Y*A[J,K]<br/>         END FOR<br/>      END IF<br/>    END FOR<br/>  END FOR<br/>  PRINT(\"Resistence=\";ABS(A[A,NN+1]-A[B,NN+1]))<br/> END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Euler Math Toolbox", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&gt;load incidence;<br/>&gt;{u,r}=solvePotentialX(makeRectangleX(10,10),12,68); r,<br/> 1.60899124173<br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 81, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 01-07-2018</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"co2\">#Define n 10</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> nn = n * n<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> g<span class=\"br0\">(</span>-nn <span class=\"kw1\">To</span> nn +<span class=\"nu0\">1</span>, -nn <span class=\"kw1\">To</span> nn +<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> node, row, col<br/>\u00a0<br/><span class=\"kw1\">For</span> row = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> n<br/>    <span class=\"kw1\">For</span> col = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> n<br/>        node += <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">If</span> row &gt; <span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>            g<span class=\"br0\">(</span>node, node<span class=\"br0\">)</span> += <span class=\"nu0\">1</span><br/>            g<span class=\"br0\">(</span>node, node - n<span class=\"br0\">)</span> = -<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">If</span> row &lt; n <span class=\"kw1\">Then</span><br/>            g<span class=\"br0\">(</span>node, node<span class=\"br0\">)</span> += <span class=\"nu0\">1</span><br/>            g<span class=\"br0\">(</span>node, node + n<span class=\"br0\">)</span> = -<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">If</span> col &gt; <span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>            g<span class=\"br0\">(</span>node, node<span class=\"br0\">)</span> += <span class=\"nu0\">1</span><br/>            g<span class=\"br0\">(</span>node, node -<span class=\"nu0\">1</span><span class=\"br0\">)</span> = -<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">If</span> col &lt; n <span class=\"kw1\">Then</span><br/>            g<span class=\"br0\">(</span>node, node<span class=\"br0\">)</span> += <span class=\"nu0\">1</span><br/>            g<span class=\"br0\">(</span>node, node +<span class=\"nu0\">1</span><span class=\"br0\">)</span> = -<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> ar = <span class=\"nu0\">2</span>, ac = <span class=\"nu0\">2</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> br = <span class=\"nu0\">7</span>, bc = <span class=\"nu0\">8</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> a = ac + n * <span class=\"br0\">(</span>ar -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> b = bc + n * <span class=\"br0\">(</span>br -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>g<span class=\"br0\">(</span>a, nn +<span class=\"nu0\">1</span><span class=\"br0\">)</span> = -<span class=\"nu0\">1</span><br/>g<span class=\"br0\">(</span>b, nn +<span class=\"nu0\">1</span><span class=\"br0\">)</span> = <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"Nodes a: \"</span>; a, <span class=\"st0\">\" b: \"</span>; b<br/>\u00a0<br/><span class=\"co1\">' solve linear system using Gauss-Seidel method with pivoting</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> i, j, k<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> y<br/>\u00a0<br/><span class=\"kw1\">Do</span><br/>    <span class=\"kw1\">For</span> j = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> nn<br/>        <span class=\"kw1\">For</span> i = j <span class=\"kw1\">To</span> nn<br/>            <span class=\"kw1\">If</span> g<span class=\"br0\">(</span>i, j<span class=\"br0\">)</span> &lt;&gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>        <span class=\"kw1\">Next</span><br/>        <span class=\"kw1\">If</span> i = nn +<span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>            <span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"No solution\"</span><br/>            <span class=\"kw1\">Exit</span> <span class=\"kw1\">Do</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">For</span> k = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> nn +<span class=\"nu0\">1</span><br/>            <span class=\"kw1\">Swap</span> g<span class=\"br0\">(</span>j, k<span class=\"br0\">)</span>, g<span class=\"br0\">(</span>i, k<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Next</span><br/>        y = g<span class=\"br0\">(</span>j, j<span class=\"br0\">)</span><br/>        <span class=\"kw1\">For</span> k = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> nn +<span class=\"nu0\">1</span><br/>            g<span class=\"br0\">(</span>j, k<span class=\"br0\">)</span> = g<span class=\"br0\">(</span>j, k<span class=\"br0\">)</span> / y<br/>        <span class=\"kw1\">Next</span><br/>        <span class=\"kw1\">For</span> i = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> nn<br/>            <span class=\"kw1\">If</span> i &lt;&gt; j <span class=\"kw1\">Then</span><br/>                y = -g<span class=\"br0\">(</span>i, j<span class=\"br0\">)</span><br/>                <span class=\"kw1\">For</span> k = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> nn +<span class=\"nu0\">1</span><br/>                    g<span class=\"br0\">(</span>i, k<span class=\"br0\">)</span> = g<span class=\"br0\">(</span>i, k<span class=\"br0\">)</span> + y * g<span class=\"br0\">(</span>j, k<span class=\"br0\">)</span><br/>                <span class=\"kw1\">Next</span><br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">Next</span><br/>\u00a0<br/>    <span class=\"kw1\">Print</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"Resistance =\"</span>; Abs<span class=\"br0\">(</span>g<span class=\"br0\">(</span>a, nn +<span class=\"nu0\">1</span><span class=\"br0\">)</span> - g<span class=\"br0\">(</span>b, nn +<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"st0\">\" Ohm\"</span><br/>    <span class=\"kw1\">Exit</span> <span class=\"kw1\">Do</span><br/><span class=\"kw1\">Loop</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "Go", "loc": 103, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>\tS <span class=\"sy2\">=</span> <span class=\"nu0\">10</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">type</span> node <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\tv     <span class=\"kw4\">float64</span><br/>\tfixed <span class=\"kw4\">int</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> alloc2<span class=\"sy1\">(</span>w<span class=\"sy1\">,</span> h <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">[][]</span>node <span class=\"sy1\">{</span><br/>\ta <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([][]</span>node<span class=\"sy1\">,</span> h<span class=\"sy1\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> a <span class=\"sy1\">{</span><br/>\t\ta<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span>node<span class=\"sy1\">,</span> w<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> set_boundary<span class=\"sy1\">(</span>m <span class=\"sy1\">[][]</span>node<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\tm<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>fixed <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><br/>\tm<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>v <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><br/>\tm<span class=\"sy1\">[</span><span class=\"nu0\">6</span><span class=\"sy1\">][</span><span class=\"nu0\">7</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>fixed <span class=\"sy2\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/>\tm<span class=\"sy1\">[</span><span class=\"nu0\">6</span><span class=\"sy1\">][</span><span class=\"nu0\">7</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>v <span class=\"sy2\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> calc_diff<span class=\"sy1\">(</span>m <span class=\"sy1\">[][]</span>node<span class=\"sy1\">,</span> d <span class=\"sy1\">[][]</span>node<span class=\"sy1\">,</span> w<span class=\"sy1\">,</span> h <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>\ttotal <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; h<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> j &lt; w<span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\tv <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>\t\t\tn <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t\tv <span class=\"sy2\">+=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v<br/>\t\t\t\tn<span class=\"sy2\">++</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> j <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t\tv <span class=\"sy2\">+=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>v<br/>\t\t\t\tn<span class=\"sy2\">++</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span> &lt; h <span class=\"sy1\">{</span><br/>\t\t\t\tv <span class=\"sy2\">+=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v<br/>\t\t\t\tn<span class=\"sy2\">++</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> j<span class=\"sy3\">+</span><span class=\"nu0\">1</span> &lt; w <span class=\"sy1\">{</span><br/>\t\t\t\tv <span class=\"sy2\">+=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>v<br/>\t\t\t\tn<span class=\"sy2\">++</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\u00a0<br/>\t\t\tv <span class=\"sy2\">=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v <span class=\"sy3\">-</span> v<span class=\"sy3\">/</span><span class=\"kw4\">float64</span><span class=\"sy1\">(</span>n<span class=\"sy1\">)</span><br/>\t\t\td<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v <span class=\"sy2\">=</span> v<br/>\t\t\t<span class=\"kw1\">if</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>fixed <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t\ttotal <span class=\"sy2\">+=</span> v <span class=\"sy3\">*</span> v<br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> total<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> iter<span class=\"sy1\">(</span>m <span class=\"sy1\">[][]</span>node<span class=\"sy1\">,</span> w<span class=\"sy1\">,</span> h <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>\td <span class=\"sy2\">:=</span> alloc2<span class=\"sy1\">(</span>w<span class=\"sy1\">,</span> h<span class=\"sy1\">)</span><br/>\tdiff <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu1\">0e10</span><br/>\tcur <span class=\"sy2\">:=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> diff &gt; 1e<span class=\"sy3\">-</span><span class=\"nu0\">24</span> <span class=\"sy1\">{</span><br/>\t\tset_boundary<span class=\"sy1\">(</span>m<span class=\"sy1\">)</span><br/>\t\tdiff <span class=\"sy2\">=</span> calc_diff<span class=\"sy1\">(</span>m<span class=\"sy1\">,</span> d<span class=\"sy1\">,</span> w<span class=\"sy1\">,</span> h<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; h<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> j &lt; w<span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\t\tm<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v <span class=\"sy2\">-=</span> d<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v<br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; h<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> j &lt; w<span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\t\tt <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t\tt <span class=\"sy2\">+=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> j <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t\tt <span class=\"sy2\">+=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span> &lt; h<span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>\t\t\t\tt <span class=\"sy2\">+=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\t<span class=\"kw1\">if</span> j &lt; w<span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>\t\t\t\tt <span class=\"sy2\">+=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\tcur<span class=\"sy1\">[</span>m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>fixed<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">+=</span> d<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>v <span class=\"sy3\">*</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>t<span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"sy1\">(</span>cur<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy3\">-</span> cur<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">])</span> <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tmesh <span class=\"sy2\">:=</span> alloc2<span class=\"sy1\">(</span>S<span class=\"sy1\">,</span> S<span class=\"sy1\">)</span><br/>\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"R =\u00a0%g<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy3\">/</span>iter<span class=\"sy1\">(</span>mesh<span class=\"sy1\">,</span> S<span class=\"sy1\">,</span> S<span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0</pre>"}, {"lang": "Haskell", "loc": 31, "block": "<pre class=\"haskell highlighted_source\"><span class=\"coMULTI\">{-# LANGUAGE ParallelListComp #-}</span><br/><span class=\"kw1\">import</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Numeric.html\"><span class=\"kw2\">Numeric</span></a><span class=\"sy0\">.</span>LinearAlgebra <span class=\"br0\">(</span>linearSolve<span class=\"sy0\">,</span> toDense<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> flatten<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Monoid <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> Sum<span class=\"br0\">(</span><span class=\"sy0\">..</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>rMesh n <span class=\"br0\">(</span>ar<span class=\"sy0\">,</span> ac<span class=\"br0\">)</span> <span class=\"br0\">(</span>br<span class=\"sy0\">,</span> bc<span class=\"br0\">)</span><br/>  <span class=\"sy0\">|</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">=</span> Nothing<br/>  <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:any\"><span class=\"kw3\">any</span></a> <span class=\"br0\">(</span>\\x <span class=\"sy0\">-&gt;</span> x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> x <span class=\"sy0\">&gt;</span> n<span class=\"br0\">)</span> <span class=\"br0\">[</span>ar<span class=\"sy0\">,</span> ac<span class=\"sy0\">,</span> br<span class=\"sy0\">,</span> bc<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Nothing<br/>  <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> between a b <span class=\"sy0\">&lt;$&gt;</span> voltage<br/>  <span class=\"kw1\">where</span><br/>    a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ac <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> n<span class=\"sy0\">*</span><span class=\"br0\">(</span>ar <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    b <span class=\"sy0\">=</span> <span class=\"br0\">(</span>bc <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> n<span class=\"sy0\">*</span><span class=\"br0\">(</span>br <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>    between x y v <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:abs\"><span class=\"kw3\">abs</span></a> <span class=\"br0\">(</span>v <span class=\"sy0\">!</span> a <span class=\"sy0\">-</span> v <span class=\"sy0\">!</span> b<span class=\"br0\">)</span><br/>\u00a0<br/>    voltage <span class=\"sy0\">=</span> flatten <span class=\"sy0\">&lt;$&gt;</span> linearSolve matrixG current<br/>\u00a0<br/>    matrixG <span class=\"sy0\">=</span> toDense <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concat\"><span class=\"kw3\">concat</span></a> <span class=\"br0\">[</span> element row col node<br/>                               <span class=\"sy0\">|</span> row <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>n<span class=\"br0\">]</span><span class=\"sy0\">,</span> col <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>n<span class=\"br0\">]</span><br/>                               <span class=\"sy0\">|</span> node <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><br/>\u00a0<br/>    element row col node <span class=\"sy0\">=</span><br/>      <span class=\"kw1\">let</span> <span class=\"br0\">(</span>Sum c<span class=\"sy0\">,</span> elements<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>            <span class=\"br0\">(</span>Sum <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>node<span class=\"sy0\">,</span> node<span class=\"sy0\">-</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> `when` <span class=\"br0\">(</span>row <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span><br/>            <span class=\"br0\">(</span>Sum <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>node<span class=\"sy0\">,</span> node<span class=\"sy0\">+</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> `when` <span class=\"br0\">(</span>row <span class=\"sy0\">&lt;</span> n<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span><br/>            <span class=\"br0\">(</span>Sum <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>node<span class=\"sy0\">,</span> node<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> `when` <span class=\"br0\">(</span>col <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span><br/>            <span class=\"br0\">(</span>Sum <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>node<span class=\"sy0\">,</span> node<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> `when` <span class=\"br0\">(</span>col <span class=\"sy0\">&lt;</span> n<span class=\"br0\">)</span><br/>      <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>node<span class=\"sy0\">,</span> node<span class=\"br0\">)</span><span class=\"sy0\">,</span> c<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&gt;</span> elements<br/>\u00a0<br/>    x `when` p <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> p <span class=\"kw1\">then</span> x <span class=\"kw1\">else</span> mempty<br/>\u00a0<br/>    current  <span class=\"sy0\">=</span> toDense <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>b<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>n<span class=\"sy0\">^</span><span class=\"nu0\">2</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 12, "block": "<pre class=\"j highlighted_source\">nodes=: <span class=\"nu0\">10</span> <span class=\"nu0\">10</span> #: i. <span class=\"nu0\">100</span><br/>nodeA=: <span class=\"nu0\">1</span> <span class=\"nu0\">1</span><br/>nodeB=: <span class=\"nu0\">6</span> <span class=\"nu0\">7</span><br/>\u00a0<br/><span class=\"co1\">NB. verb to pair up coordinates along a specific offset</span><br/>conn =: [: <span class=\"sy0\">(</span>#~ e.~/@|:~&amp;<span class=\"nu0\">0</span> <span class=\"nu0\">2</span><span class=\"sy0\">)</span> <span class=\"sy0\">(</span>[ ,: +<span class=\"sy0\">)</span>\"<span class=\"nu0\">1</span><br/>\u00a0<br/>ref =: ~. nodeA,nodes-.nodeB                    <span class=\"co1\">NB. all nodes, with A first and B omitted</span><br/>wiring=: /:~ ref i. ,/ nodes conn\"<span class=\"nu0\">2</span> <span class=\"nu0\">1</span> <span class=\"sy0\">(</span>,-<span class=\"sy0\">)</span>=i.<span class=\"nu0\">2</span>  <span class=\"co1\">NB. connected pairs (indices into ref)</span><br/>Yii=: <span class=\"sy0\">(</span>* <a class=\"__cf_email__\" data-cfemail=\"360b765f18\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>@#<span class=\"sy0\">)</span> #/.~ {.\"<span class=\"nu0\">1</span> wiring               <span class=\"co1\">NB. diagonal of Y represents connections to B</span><br/>Yij=: -1:`<span class=\"sy0\">(</span>&lt;\"<span class=\"nu0\">1</span>@[<span class=\"sy0\">)</span>`]}&amp;<span class=\"sy0\">(</span>+/~ <span class=\"nu0\">0</span>*i.<span class=\"nu0\">1</span>+#ref<span class=\"sy0\">)</span> wiring    <span class=\"co1\">NB. off diagonal of Y represents wiring</span><br/>Y=: <span class=\"nu0\">_1</span> <span class=\"nu0\">_1</span> }. Yii+Yij</pre>"}, {"lang": "Java", "loc": 107, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.ArrayList</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.List</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> ResistorMesh <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> S <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">class</span> Node <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> v<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> fixed<span class=\"sy0\">;</span><br/>\u00a0<br/>        Node<span class=\"br0\">(</span><span class=\"kw4\">double</span> v, <span class=\"kw4\">int</span> fixed<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">this</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">this</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span> fixed<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> setBoundary<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> m<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        m.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">;</span><br/>        m.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        m.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span><span class=\"sy0\">;</span><br/>        m.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> calcDiff<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> m, List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> d, <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> total <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">double</span> v <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>                <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    v <span class=\"sy0\">+=</span> m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span><br/>                    n<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    v <span class=\"sy0\">+=</span> m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span><br/>                    n<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    v <span class=\"sy0\">+=</span> m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span><br/>                    n<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    v <span class=\"sy0\">+=</span> m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span><br/>                    n<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>                v <span class=\"sy0\">=</span> m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span> <span class=\"sy0\">-</span> v <span class=\"sy0\">/</span> n<span class=\"sy0\">;</span><br/>                d.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    total <span class=\"sy0\">+=</span> v <span class=\"sy0\">*</span> v<span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> total<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> iter<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> m, <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> d <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span> t <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                t.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> Node<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            d.<span class=\"me1\">add</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> cur <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> diff <span class=\"sy0\">=</span> 1e10<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>diff <span class=\"sy0\">&gt;</span> 1e<span class=\"sy0\">-</span>24<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            setBoundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            diff <span class=\"sy0\">=</span> calcDiff<span class=\"br0\">(</span>m, d, w, h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span> <span class=\"sy0\">-=</span> d.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> k<span class=\"sy0\">++;</span><br/>                cur<span class=\"br0\">[</span>m.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> d.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>.<span class=\"me1\">v</span> <span class=\"sy0\">*</span> k<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>cur<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> cur<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;&gt;</span> mesh <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> S<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            List<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span> t <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> S<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                t.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> Node<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            mesh.<span class=\"me1\">add</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw4\">double</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">/</span> iter<span class=\"br0\">(</span>mesh, S, S<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"R =\u00a0%.15f\"</span>, r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 7, "block": "<pre class=\"text highlighted_source\">N = 10<br/>D1 = speye(N-1,N) - spdiagm(ones(N-1),1,N-1,N)<br/>D = [ kron(D1, speye(N)); kron(speye(N), D1) ]<br/>i, j = N*1 + 2, N*7+7<br/>b = zeros(N^2); b[i], b[j] = 1, -1<br/>v = (D' * D) \\ b<br/>v[i] - v[j]</pre>"}, {"lang": "Kotlin", "loc": 62, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.4-3</span><br/>\u00a0<br/>typealias List2D<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> List<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;&gt;</span><br/>\u00a0<br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> S <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Node<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> v<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> fixed<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><br/>\u00a0<br/>fun setBoundary<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> List2D<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span>  <span class=\"nu0\">1.0</span><span class=\"sy0\">;</span> m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span>  <span class=\"nu0\">1</span><br/>    m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> -<span class=\"nu0\">1.0</span><span class=\"sy0\">;</span> m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span> -<span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun calcDiff<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> List2D<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span>, d<span class=\"sy0\">:</span> List2D<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span>, w<span class=\"sy0\">:</span> Int, h<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> total <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in <span class=\"nu0\">0</span> until w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> v <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i - <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span> n++ <span class=\"br0\">}</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j - <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span> n++ <span class=\"br0\">}</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i + <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span> v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i + <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span> n++ <span class=\"br0\">}</span> <br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>j + <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> w<span class=\"br0\">)</span> <span class=\"br0\">{</span> v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j + <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">v</span><span class=\"sy0\">;</span> n++ <span class=\"br0\">}</span><br/>            v <span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> - v / n <br/>            d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">=</span> v<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> total +<span class=\"sy0\">=</span> v <span class=\"sy0\">*</span> v<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> total<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun iter<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> List2D<span class=\"sy0\">&lt;</span>Node<span class=\"sy0\">&gt;</span>, w<span class=\"sy0\">:</span> Int, h<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d <span class=\"sy0\">=</span> List<span class=\"br0\">(</span>h<span class=\"br0\">)</span> <span class=\"br0\">{</span> List<span class=\"br0\">(</span>w<span class=\"br0\">)</span> <span class=\"br0\">{</span> Node<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cur <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> diff <span class=\"sy0\">=</span> 1e10<br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>diff <span class=\"sy0\">&gt;</span> 1e-24<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        setBoundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span><br/>        diff <span class=\"sy0\">=</span> calcDiff<span class=\"br0\">(</span>m, d, w, h<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in <span class=\"nu0\">0</span> until w<span class=\"br0\">)</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> -<span class=\"sy0\">=</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in <span class=\"nu0\">0</span> until w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> k++<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>j <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> k++<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h - <span class=\"nu0\">1</span><span class=\"br0\">)</span> k++<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w - <span class=\"nu0\">1</span><span class=\"br0\">)</span> k++ <br/>            cur<span class=\"br0\">[</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> + <span class=\"nu0\">1</span><span class=\"br0\">]</span> +<span class=\"sy0\">=</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">v</span> <span class=\"sy0\">*</span> k<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <span class=\"br0\">(</span>cur<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> - cur<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"nu0\">2.0</span>  <br/><span class=\"br0\">}</span> <br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> mesh <span class=\"sy0\">=</span> List<span class=\"br0\">(</span>S<span class=\"br0\">)</span> <span class=\"br0\">{</span> List<span class=\"br0\">(</span>S<span class=\"br0\">)</span> <span class=\"br0\">{</span> Node<span class=\"br0\">(</span><span class=\"nu0\">0.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span> / iter<span class=\"br0\">(</span>mesh, S, S<span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"R = $r\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Maxima", "loc": 62, "block": "<pre class=\"text highlighted_source\">/* Place a current souce between A and B, providing 1 A. Then we are really looking<br/>   for the potential at A and B, since I = R (V(B) - V(A)) where I is given and we want R.<br/>\u00a0<br/>   Atually, we will compute potential at each node, except A where we assume it's 0.<br/>   Without with assumption, there would be infinitely many solutions since potential<br/>   is known up to a constant. For A we will simply write the equation V(A) = 0, to<br/>   keep the program simple.<br/>\u00a0<br/>   Hence, for a general grid of p rows and q columns, there are n = p * q nodes,<br/>   so n unknowns, and n equations. Write Kirchhoff's current law at each node.<br/>   Be careful with the node A (equation A = 0) and the node B (there is a constant<br/>   current to add, from the source, that will go in the constant terms of the system).<br/>\u00a0<br/>   Finally, we have a n x n linear system of equations to solve. Simply use Maxima's<br/>   builtin LU decomposition.<br/>\u00a0<br/>   Since all computations are exact, the result will be also exact, written as a fraction.<br/>   Also, the program can work with any grid, and any two nodes on the grid.<br/>\u00a0<br/>   For those who want more speed and less space, notice the system is sparse and necessarily<br/>   symmetric, so one can use conjugate gradient or any other sparse symmetric solver. */<br/>\u00a0<br/>\u00a0<br/>/* Auxiliary function to get rid of the borders */<br/>ongrid(i, j, p, q)\u00a0:= is(i &gt;= 1 and i &lt;= p and j &gt;= 1 and j &lt;= q)$<br/>\u00a0<br/>grid_resistor(p, q, ai, aj, bi, bj)\u00a0:= block(<br/>   [n: p * q, A, B, M, k, c, V],<br/>   A: zeromatrix(n, n),<br/>   for i thru p do<br/>      for j thru q do (<br/>         k: (i - 1) * q + j,<br/>         if i = ai and j = aj then<br/>            A[k, k]: 1<br/>         else (<br/>            c: 0,<br/>            if ongrid(i + 1, j, p, q) then (c: c + 1, A[k, k + q]: -1),<br/>            if ongrid(i - 1, j, p, q) then (c: c + 1, A[k, k - q]: -1),<br/>            if ongrid(i, j + 1, p, q) then (c: c + 1, A[k, k + 1]: -1),<br/>            if ongrid(i, j - 1, p, q) then (c: c + 1, A[k, k - 1]: -1),<br/>            A[k, k]: c<br/>         )<br/>      ),<br/>   B: zeromatrix(n, 1),<br/>   B[k: (bi - 1) * q + bj, 1]: 1,<br/>   M: lu_factor(A),<br/>   V: lu_backsub(M, B),<br/>   V[k, 1]<br/>)$<br/>\u00a0<br/>grid_resistor(10, 10, 2, 2, 8, 7);<br/>455859137025721 / 283319837425200<br/>\u00a0<br/>bfloat(%), fpprec = 40;<br/>1.608991241730729655954495520510088761201b0<br/>\u00a0<br/>/* Some larger example */<br/>grid_resistor(20, 20, 1, 1, 20, 20);<br/>129548954101732562831760781545158173626645023 / 33283688571680493510612137844679320717594861<br/>\u00a0<br/>bfloat(%), fpprec = 40;<br/>3.89226554090400912102670691601064387507b0</pre>"}, {"lang": "Mathematica", "loc": 12, "block": "<pre class=\"text highlighted_source\">gridresistor[p_, q_, ai_, aj_, bi_, bj_]\u00a0:= <br/>  Block[{A, B, k, c, V}, A = ConstantArray[0, {p*q, p*q}];<br/>   Do[k = (i - 1) q + j;<br/>    If[{i, j} == {ai, aj}, A[[k, k]] = 1, c = 0;<br/>     If[1 &lt;= i + 1 &lt;= p &amp;&amp; 1 &lt;= j &lt;= q, c++; A[[k, k + q]] = -1];<br/>     If[1 &lt;= i - 1 &lt;= p &amp;&amp; 1 &lt;= j &lt;= q, c++; A[[k, k - q]] = -1];<br/>     If[1 &lt;= i &lt;= p &amp;&amp; 1 &lt;= j + 1 &lt;= q, c++; A[[k, k + 1]] = -1];<br/>     If[1 &lt;= i &lt;= p &amp;&amp; 1 &lt;= j - 1 &lt;= q, c++; A[[k, k - 1]] = -1];<br/>     A[[k, k]] = c], {i, p}, {j, q}];<br/>   B = SparseArray[(k = (bi - 1) q + bj) -&gt; 1, p*q];<br/>   LinearSolve[A, B][[k]]];<br/>N[gridresistor[10, 10, 2, 2, 8, 7], 40]</pre>"}, {"lang": "Modula-2", "loc": 111, "block": "<pre class=\"modula2 highlighted_source\"><span class=\"kw1\">MODULE</span> ResistorMesh;<br/><span class=\"kw1\">FROM</span> RConversions <span class=\"kw1\">IMPORT</span> RealToStringFixed;<br/><span class=\"kw1\">FROM</span> Terminal <span class=\"kw1\">IMPORT</span> WriteString<span class=\"sy0\">,</span>WriteLn<span class=\"sy0\">,</span>ReadChar;<br/>\u00a0<br/><span class=\"kw1\">CONST</span> S <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>;<br/>\u00a0<br/><span class=\"kw1\">TYPE</span> Node <span class=\"sy0\">=</span> <span class=\"kw1\">RECORD</span><br/>    v <span class=\"sy0\">:</span> <span class=\"kw4\">LONGREAL</span>;<br/>    fixed <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">END</span>;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> SetBoundary<span class=\"br0\">(</span><span class=\"kw1\">VAR</span> m <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> Node<span class=\"br0\">)</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.v <span class=\"sy0\">:=</span> <span class=\"nu0\">1.0</span>;<br/>    m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.fixed <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span>;<br/>\u00a0<br/>    m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.v <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.0</span>;<br/>    m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>.fixed <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/><span class=\"kw1\">END</span> SetBoundary;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> CalcDiff<span class=\"br0\">(</span><span class=\"kw1\">VAR</span> m<span class=\"sy0\">,</span>d <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> Node<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"kw4\">LONGREAL</span>;<br/><span class=\"kw1\">VAR</span><br/>    total<span class=\"sy0\">,</span>v <span class=\"sy0\">:</span> <span class=\"kw4\">LONGREAL</span>;<br/>    i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>n <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    total <span class=\"sy0\">:=</span> <span class=\"nu0\">0.0</span>;<br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>        <span class=\"kw1\">FOR</span> j<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>            v <span class=\"sy0\">:=</span> <span class=\"nu0\">0.0</span>;<br/>            n <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>;<br/>            <span class=\"kw1\">IF</span> i&gt;<span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>                v <span class=\"sy0\">:=</span> v <span class=\"sy0\">+</span> m<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v;<br/>                <span class=\"kw3\">INC</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">IF</span> j&gt;<span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>                v <span class=\"sy0\">:=</span> v <span class=\"sy0\">+</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.v;<br/>                <span class=\"kw3\">INC</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">IF</span> i<span class=\"sy0\">+</span><span class=\"nu0\">1</span>&lt;S <span class=\"kw1\">THEN</span><br/>                v <span class=\"sy0\">:=</span> v <span class=\"sy0\">+</span> m<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v;<br/>                <span class=\"kw3\">INC</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">IF</span> j<span class=\"sy0\">+</span><span class=\"nu0\">1</span>&lt;S <span class=\"kw1\">THEN</span><br/>                v <span class=\"sy0\">:=</span> v <span class=\"sy0\">+</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.v;<br/>                <span class=\"kw3\">INC</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">END</span>;<br/>            v <span class=\"sy0\">:=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v <span class=\"sy0\">-</span> v <span class=\"sy0\">/</span> LFLOAT<span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>            d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v <span class=\"sy0\">:=</span> v;<br/>            <span class=\"kw1\">IF</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.fixed<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>                total <span class=\"sy0\">:=</span> total <span class=\"sy0\">+</span> v<span class=\"sy0\">*</span>v;<br/>            <span class=\"kw1\">END</span>;<br/>        <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">RETURN</span> total;<br/><span class=\"kw1\">END</span> CalcDiff;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Iter<span class=\"br0\">(</span>m <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> Node<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"kw4\">LONGREAL</span>;<br/><span class=\"kw1\">VAR</span><br/>    d <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..S<span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..S<span class=\"br0\">]</span> <span class=\"kw1\">OF</span> Node;<br/>    i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/>    cur <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">LONGREAL</span>;<br/>    diff <span class=\"sy0\">:</span> <span class=\"kw4\">LONGREAL</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>        <span class=\"kw1\">FOR</span> j<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>            d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Node<span class=\"br0\">{</span><span class=\"nu0\">0.0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span>;<br/>        <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    diff <span class=\"sy0\">:=</span> 1.0E10;<br/>    <span class=\"kw1\">WHILE</span> diff&gt;1.0E<span class=\"sy0\">-</span>24 <span class=\"kw1\">DO</span><br/>        SetBoundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span>;<br/>        diff <span class=\"sy0\">:=</span> CalcDiff<span class=\"br0\">(</span>m<span class=\"sy0\">,</span>d<span class=\"br0\">)</span>;<br/>        <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>            <span class=\"kw1\">FOR</span> j<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>                m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v <span class=\"sy0\">:=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v <span class=\"sy0\">-</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v;<br/>            <span class=\"kw1\">END</span>;<br/>        <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>        <span class=\"kw1\">FOR</span> j<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> S <span class=\"kw1\">DO</span><br/>            k<span class=\"sy0\">:=</span><span class=\"nu0\">0</span>;<br/>            <span class=\"kw1\">IF</span> i<span class=\"sy0\">#</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"kw3\">INC</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span> <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">IF</span> j<span class=\"sy0\">#</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"kw3\">INC</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span> <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">IF</span> i&lt;S<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span> <span class=\"kw3\">INC</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span> <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">IF</span> j&lt;S<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span> <span class=\"kw3\">INC</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span> <span class=\"kw1\">END</span>;<br/>            cur<span class=\"br0\">[</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.fixed<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> cur<span class=\"br0\">[</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.fixed<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.v<span class=\"sy0\">*</span>LFLOAT<span class=\"br0\">(</span>k<span class=\"br0\">)</span>;<br/>        <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    <span class=\"kw1\">RETURN</span> <span class=\"br0\">(</span>cur<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>cur<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span>;<br/><span class=\"kw1\">END</span> Iter;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>    mesh <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..S<span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..S<span class=\"br0\">]</span> <span class=\"kw1\">OF</span> Node;<br/>    buf <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">32</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>    r <span class=\"sy0\">:</span> <span class=\"kw4\">LONGREAL</span>;<br/>    pos <span class=\"sy0\">:</span> <span class=\"kw4\">CARDINAL</span>;<br/>    ok <span class=\"sy0\">:</span> <span class=\"kw4\">BOOLEAN</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    pos <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>;<br/>    r <span class=\"sy0\">:=</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">/</span> Iter<span class=\"br0\">(</span>mesh<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"R = \"</span><span class=\"br0\">)</span>;<br/>    RealToStringFixed<span class=\"br0\">(</span>r<span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> pos<span class=\"sy0\">,</span> ok<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span>buf<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\" ohms\"</span><span class=\"br0\">)</span>;<br/>    WriteLn;<br/>\u00a0<br/>    ReadChar;<br/><span class=\"kw1\">END</span> ResistorMesh.</pre>"}, {"lang": "Octave", "loc": 40, "block": "<pre class=\"octave highlighted_source\">N <span class=\"sy3\">=</span> <span class=\"nu0\">10</span><span class=\"sy5\">;</span><br/>NN <span class=\"sy3\">=</span> N<span class=\"sy1\">*</span>N<span class=\"sy5\">;</span><br/>G <span class=\"sy3\">=</span> <a href=\"http://octave.sourceforge.net/octave/function/sparse.html\"><span class=\"kw5\">sparse</span></a><span class=\"br0\">(</span>NN<span class=\"sy5\">,</span> NN<span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>\u00a0<br/>node <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy5\">;</span><br/><span class=\"kw4\">for</span> row<span class=\"sy3\">=</span><span class=\"nu0\">1</span><span class=\"sy4\">:</span>N<span class=\"sy5\">;</span><br/>    <span class=\"kw4\">for</span> col<span class=\"sy3\">=</span><span class=\"nu0\">1</span><span class=\"sy4\">:</span>N<span class=\"sy5\">;</span><br/>\tnode<span class=\"sy1\">++</span><span class=\"sy5\">;</span><br/>\t<span class=\"kw4\">if</span> row <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node<span class=\"br0\">)</span><span class=\"sy1\">++</span><span class=\"sy5\">;</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node <span class=\"sy1\">-</span> N<span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>\t<span class=\"kw4\">end</span><br/>\t<span class=\"kw4\">if</span> row <span class=\"sy0\">&lt;</span> N<span class=\"sy5\">;</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node<span class=\"br0\">)</span><span class=\"sy1\">++</span><span class=\"sy5\">;</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node <span class=\"sy1\">+</span> N<span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>\t<span class=\"kw4\">end</span><br/>\t<span class=\"kw4\">if</span> col <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node<span class=\"br0\">)</span><span class=\"sy1\">++</span><span class=\"sy5\">;</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node <span class=\"sy1\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>\t<span class=\"kw4\">end</span><br/>\t<span class=\"kw4\">if</span> col <span class=\"sy0\">&lt;</span> N<span class=\"sy5\">;</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node<span class=\"br0\">)</span><span class=\"sy1\">++</span><span class=\"sy5\">;</span><br/>\t    G<span class=\"br0\">(</span>node<span class=\"sy5\">,</span> node <span class=\"sy1\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>\t<span class=\"kw4\">end</span><br/>    <span class=\"kw4\">end</span><br/><span class=\"kw4\">end</span><br/>\u00a0<br/>current <span class=\"sy3\">=</span> <a href=\"http://octave.sourceforge.net/octave/function/sparse.html\"><span class=\"kw5\">sparse</span></a><span class=\"br0\">(</span>NN<span class=\"sy5\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>\u00a0<br/>Ar <span class=\"sy3\">=</span> <span class=\"nu0\">2</span><span class=\"sy5\">;</span> Ac <span class=\"sy3\">=</span> <span class=\"nu0\">2</span><span class=\"sy5\">;</span> A <span class=\"sy3\">=</span> Ac <span class=\"sy1\">+</span> N<span class=\"sy1\">*</span><span class=\"br0\">(</span> Ar <span class=\"sy1\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>Br <span class=\"sy3\">=</span> <span class=\"nu0\">7</span><span class=\"sy5\">;</span> Bc <span class=\"sy3\">=</span> <span class=\"nu0\">8</span><span class=\"sy5\">;</span> B <span class=\"sy3\">=</span> Bc <span class=\"sy1\">+</span> N<span class=\"sy1\">*</span><span class=\"br0\">(</span> Br <span class=\"sy1\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy5\">;</span> <br/>current<span class=\"br0\">(</span> A <span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>current<span class=\"br0\">(</span> B <span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy5\">;</span><br/>\u00a0<br/>voltage <span class=\"sy3\">=</span> G <span class=\"sy1\">\\</span> current<span class=\"sy5\">;</span><br/>\u00a0<br/>VA <span class=\"sy3\">=</span> voltage<span class=\"br0\">(</span> A <span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>VB <span class=\"sy3\">=</span> voltage<span class=\"br0\">(</span> B <span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>\u00a0<br/><a href=\"http://octave.sourceforge.net/octave/function/full.html\"><span class=\"kw5\">full</span></a><span class=\"br0\">(</span> <a href=\"http://octave.sourceforge.net/octave/function/abs.html\"><span class=\"kw5\">abs</span></a><span class=\"br0\">(</span> VA <span class=\"sy1\">-</span> VB <span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 60, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@v</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x <span class=\"br0\">(</span><span class=\"re0\">$w</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># voltage</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@f</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x <span class=\"br0\">(</span><span class=\"re0\">$w</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># fixed condition</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@d</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x <span class=\"br0\">(</span><span class=\"re0\">$w</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># diff</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@n</span><span class=\"sy0\">;</span> <span class=\"co1\"># neighbors</span><br/><span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"re0\">$n</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"re0\">$n</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"re0\">$n</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"re0\">$n</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> set_boundary <span class=\"br0\">{</span><br/>\t<span class=\"re0\">$f</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$f</span><span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$v</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$v</span><span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> calc_diff <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$total_diff</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$p</span><span class=\"sy0\">,</span> <span class=\"re0\">$v</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">$n</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"re0\">$v</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$v</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"re0\">@$p</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"re0\">$d</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$v</span> <span class=\"sy0\">=</span> <span class=\"re0\">$v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$v</span> <span class=\"sy0\">/</span> <a href=\"http://perldoc.perl.org/functions/scalar.html\"><span class=\"kw3\">scalar</span></a><span class=\"br0\">(</span><span class=\"re0\">@$p</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"re0\">$total_diff</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$v</span> <span class=\"sy0\">*</span> <span class=\"re0\">$v</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$f</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"re0\">$total_diff</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> iter <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$diff</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$diff</span> <span class=\"sy0\">&gt;</span> 1e<span class=\"sy0\">-</span>24<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\"># 1e-24 is overkill (12 digits of precision)</span><br/>\t\tset_boundary<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$diff</span> <span class=\"sy0\">=</span> calc_diff<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"error^2: $diff<span class=\"es0\">\\r</span>\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"re0\">$v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">-=</span> <span class=\"re0\">$d</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">@current</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"re0\">$current</span><span class=\"br0\">[</span> <span class=\"re0\">$f</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"br0\">]</span> <span class=\"sy0\">+=</span><br/>\t\t\t\t<span class=\"re0\">$d</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <a href=\"http://perldoc.perl.org/functions/scalar.html\"><span class=\"kw3\">scalar</span></a><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"re0\">$n</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"re0\">$current</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$current</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"R = @{[2 / iter()]}<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 58, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$S</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@fixed</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> allocmesh <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    gather <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$h</span> <span class=\"br0\">{</span><br/>\ttake <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"kw1\">xx</span> <span class=\"re0\">$w</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> force<span class=\"sy0\">-</span>fixed<span class=\"br0\">(</span><span class=\"re0\">@f</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">@f</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@f</span><span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> force<span class=\"sy0\">-</span>v<span class=\"br0\">(</span><span class=\"re0\">@v</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> calc_diff<span class=\"br0\">(</span><span class=\"re0\">@v</span><span class=\"sy0\">,</span> <span class=\"re0\">@d</span><span class=\"sy0\">,</span> Int <span class=\"re0\">$w</span><span class=\"sy0\">,</span> Int <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>flat <span class=\"sy0\">^</span><span class=\"re0\">$h</span> <span class=\"kw1\">X</span> <span class=\"sy0\">^</span><span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@neighbors</span> <span class=\"sy0\">=</span> <span class=\"kw3\">grep</span> <span class=\"sy0\">*.</span><span class=\"kw3\">defined</span><span class=\"sy0\">,</span> <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$v</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@neighbors</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">@d</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$v</span> <span class=\"sy0\">=</span> <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$v</span> <span class=\"sy0\">/</span> <span class=\"sy0\">+</span><span class=\"re0\">@neighbors</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$total</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$v</span> <span class=\"sy0\">*</span> <span class=\"re0\">$v</span> <span class=\"kw1\">unless</span> <span class=\"re0\">@fixed</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$total</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> iter<span class=\"br0\">(</span><span class=\"re0\">@v</span><span class=\"sy0\">,</span> Int <span class=\"re0\">$w</span><span class=\"sy0\">,</span> Int <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@d</span> <span class=\"sy0\">=</span> allocmesh<span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$diff</span> <span class=\"sy0\">=</span> 1e10<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@cur</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"re0\">$diff</span> <span class=\"sy0\">&gt;</span> 1e<span class=\"sy0\">-</span>24 <span class=\"br0\">{</span><br/>        force<span class=\"sy0\">-</span>v<span class=\"br0\">(</span><span class=\"re0\">@v</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$diff</span> <span class=\"sy0\">=</span> calc_diff<span class=\"br0\">(</span><span class=\"re0\">@v</span><span class=\"sy0\">,</span> <span class=\"re0\">@d</span><span class=\"sy0\">,</span> <span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>flat <span class=\"sy0\">^</span><span class=\"re0\">$h</span> <span class=\"kw1\">X</span> <span class=\"sy0\">^</span><span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@v</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">-=</span> <span class=\"re0\">@d</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>flat <span class=\"sy0\">^</span><span class=\"re0\">$h</span> <span class=\"kw1\">X</span> <span class=\"sy0\">^</span><span class=\"re0\">$w</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">@cur</span><span class=\"br0\">[</span> <span class=\"re0\">@fixed</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span><br/>            <span class=\"sy0\">+=</span> <span class=\"re0\">@d</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">?</span><span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"sy0\">?</span><span class=\"re0\">$j</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$h</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$w</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"re0\">@cur</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">@cur</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@mesh</span> <span class=\"sy0\">=</span> allocmesh<span class=\"br0\">(</span><span class=\"re0\">$S</span><span class=\"sy0\">,</span> <span class=\"re0\">$S</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">@fixed</span> <span class=\"sy0\">=</span> allocmesh<span class=\"br0\">(</span><span class=\"re0\">$S</span><span class=\"sy0\">,</span> <span class=\"re0\">$S</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>force<span class=\"sy0\">-</span>fixed<span class=\"br0\">(</span><span class=\"re0\">@fixed</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"nu0\">2</span> <span class=\"sy0\">/</span> iter<span class=\"br0\">(</span><span class=\"re0\">@mesh</span><span class=\"sy0\">,</span> <span class=\"re0\">$S</span><span class=\"sy0\">,</span> <span class=\"re0\">$S</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Python", "loc": 64, "block": "<pre class=\"python highlighted_source\">DIFF_THRESHOLD <span class=\"sy0\">=</span> <span class=\"nu0\">1e-40</span><br/>\u00a0<br/><span class=\"kw1\">class</span> Fixed:<br/>    FREE <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    A <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    B <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>\u00a0<br/><span class=\"kw1\">class</span> Node:<br/>    <span class=\"kw4\">__slots__</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">\"voltage\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"fixed\"</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> v<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> f<span class=\"sy0\">=</span>Fixed.<span class=\"me1\">FREE</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">=</span> v<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">=</span> f<br/>\u00a0<br/><span class=\"kw1\">def</span> set_boundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span>:<br/>    m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Node<span class=\"br0\">(</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">,</span> Fixed.<span class=\"me1\">A</span><span class=\"br0\">)</span><br/>    m<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Node<span class=\"br0\">(</span>-<span class=\"nu0\">1.0</span><span class=\"sy0\">,</span> Fixed.<span class=\"me1\">B</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> calc_difference<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> d<span class=\"br0\">)</span>:<br/>    h <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span><br/>    w <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>m<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    total <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span>:<br/>            v <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>            n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"kw1\">if</span> i <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span>:  v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">if</span> j <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span>:  v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j-<span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">if</span> i <span class=\"sy0\">&lt;</span> h-<span class=\"nu0\">1</span>: v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">if</span> j <span class=\"sy0\">&lt;</span> w-<span class=\"nu0\">1</span>: v +<span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j+<span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">voltage</span><span class=\"sy0\">;</span> n +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            v <span class=\"sy0\">=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> - v / n<br/>\u00a0<br/>            d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> <span class=\"sy0\">=</span> v<br/>            <span class=\"kw1\">if</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">fixed</span> <span class=\"sy0\">==</span> Fixed.<span class=\"me1\">FREE</span>:<br/>                total +<span class=\"sy0\">=</span> v ** <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">return</span> total<br/>\u00a0<br/><span class=\"kw1\">def</span> <span class=\"kw2\">iter</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span>:<br/>    h <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span><br/>    w <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>m<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    difference <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>Node<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>        set_boundary<span class=\"br0\">(</span>m<span class=\"br0\">)</span> <span class=\"co1\"># Enforce boundary conditions.</span><br/>        <span class=\"kw1\">if</span> calc_difference<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> difference<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> DIFF_THRESHOLD:<br/>            <span class=\"kw1\">break</span><br/>        <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span> di <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>difference<span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">for</span> j<span class=\"sy0\">,</span> dij <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>di<span class=\"br0\">)</span>:<br/>                m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">voltage</span> -<span class=\"sy0\">=</span> dij.<span class=\"me1\">voltage</span><br/>\u00a0<br/>    cur <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0.0</span><span class=\"br0\">]</span> * <span class=\"nu0\">3</span><br/>    <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span> di <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>difference<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">for</span> j<span class=\"sy0\">,</span> dij <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>di<span class=\"br0\">)</span>:<br/>            cur<span class=\"br0\">[</span>m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">fixed</span><span class=\"br0\">]</span> +<span class=\"sy0\">=</span> <span class=\"br0\">(</span>dij.<span class=\"me1\">voltage</span> *<br/>                <span class=\"br0\">(</span><span class=\"kw2\">bool</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> + <span class=\"kw2\">bool</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span> + <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> h-<span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> w-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>cur<span class=\"br0\">[</span>Fixed.<span class=\"me1\">A</span><span class=\"br0\">]</span> - cur<span class=\"br0\">[</span>Fixed.<span class=\"me1\">B</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"nu0\">2.0</span><br/>\u00a0<br/><span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    w <span class=\"sy0\">=</span> h <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>    mesh <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>Node<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"R =\u00a0%.16f\"</span>\u00a0% <span class=\"br0\">(</span><span class=\"nu0\">2</span> / <span class=\"kw2\">iter</span><span class=\"br0\">(</span>mesh<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 70, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(require racket/flonum)<br/>\u00a0<br/>(define-syntax-rule (fi c t f) (if c f t))<br/>\u00a0<br/>(define (neighbours w h)<br/>  (define h-1 (sub1 h))<br/>  (define w-1 (sub1 w))<br/>  (lambda (i j)<br/>    (+ (fi (zero? i) 1 0)<br/>       (fi (zero? j) 1 0)<br/>       (if (&lt; i h-1) 1 0)<br/>       (if (&lt; j w-1) 1 0))))<br/>\u00a0<br/>(define (mesh-R probes w h)<br/>  (define h-1 (sub1 h))<br/>  (define w-1 (sub1 w))<br/>\u00a0<br/>  (define-syntax-rule (v2ref v r c)\u00a0; 2D vector ref<br/>    (flvector-ref v (+ (* r w) c)))<br/>\u00a0<br/>  (define w*h (* w h))<br/>\u00a0<br/>  (define (alloc2 (v 0.))<br/>    (make-flvector w*h v))<br/>\u00a0<br/>  (define nghbrs (neighbours w h))<br/>\u00a0<br/>  (match-define `((,fix+r ,fix+c) (,fix-r ,fix-c)) probes)<br/>  (define fix+idx (+ fix+c (* fix+r w)))<br/>  (define fix-idx (+ fix-c (* fix-r w)))<br/>  (define fix-val<br/>    (match-lambda** <br/>     [((== fix+idx) _) 1.]<br/>     [((== fix-idx) _) -1.]<br/>     [(_ v) v]))<br/>\u00a0<br/>  (define (calc-diff m)<br/>    (define d<br/>      (for*/flvector #:length w*h ((i (in-range h)) (j (in-range w)))<br/>        (define v<br/>          (+ (fi (zero? i) (v2ref m (- i 1) j) 0)<br/>             (fi (zero? j) (v2ref m i (- j 1)) 0)<br/>             (if (&lt; i h-1) (v2ref m (+ i 1) j) 0)<br/>             (if (&lt; j w-1) (v2ref m i (+ j 1)) 0)))<br/>        (- (v2ref m i j) (/ v (nghbrs i j))))) <br/>\u00a0<br/>    (define \u0394<br/>      (for/sum ((i (in-naturals)) (d.v (in-flvector d)) #:when (= (fix-val i 0.) 0.))<br/>        (sqr d.v)))<br/>\u00a0<br/>    (values d \u0394))<br/>\u00a0<br/>  (define final-d<br/>    (let loop ((m (alloc2)) (d (alloc2)))<br/>      (define m+\u00a0; do this first will get the boundaries on<br/>        (for/flvector #:length w*h ((j (in-naturals)) (m.v (in-flvector m)) (d.v (in-flvector d)))<br/>          (fix-val j (- m.v d.v))))<br/>\u00a0<br/>      (define-values (d- \u0394) (calc-diff m+))<br/>\u00a0<br/>      (if (&lt; \u0394 1e-24) d (loop m+ d-))))<br/>\u00a0<br/>  (/ 2<br/>     (/ (- (* (v2ref final-d fix+r fix+c) (nghbrs fix+r fix+c))<br/>           (* (v2ref final-d fix-r fix-c) (nghbrs fix-r fix-c)))<br/>        2)))<br/>\u00a0<br/>(module+ main<br/>  (printf \"R = ~a~%\" (mesh-R '((1 1) (6 7)) 10 10)))</pre>"}, {"lang": "REXX", "loc": 45, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program calculates the  resistance  between any  two points  on a  resister grid.*/</span><br/><span class=\"kw1\">if</span> <span class=\"nu0\">2</span>==<span class=\"st0\">'f2'</span>x  <span class=\"kw3\">then</span> ohms = <span class=\"st0\">\"ohms\"</span>                  <span class=\"coMULTI\">/*EBCDIC machine?    Then use  'ohms'. */</span><br/>             <span class=\"kw3\">else</span> ohms = <span class=\"st0\">\"\u03a9\"</span>                     <span class=\"coMULTI\">/* ASCII    \"          \"   \"   Greek \u03a9.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> high wide  Arow Acol  Brow Bcol digs <span class=\"sy0\">.</span> <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> high==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> high==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> high=<span class=\"nu0\">10</span>            <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> wide==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> wide==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> wide=<span class=\"nu0\">10</span>            <span class=\"coMULTI\">/* \"      \"         \"   \"   \"      \"   */</span><br/><span class=\"kw1\">if</span> Arow==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> Arow==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> Arow= <span class=\"nu0\">2</span>            <span class=\"coMULTI\">/* \"      \"         \"   \"   \"      \"   */</span><br/><span class=\"kw1\">if</span> Acol==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> Acol==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> Acol= <span class=\"nu0\">2</span>            <span class=\"coMULTI\">/* \"      \"         \"   \"   \"      \"   */</span><br/><span class=\"kw1\">if</span> Brow==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> Brow==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> Brow= <span class=\"nu0\">7</span>            <span class=\"coMULTI\">/* \"      \"         \"   \"   \"      \"   */</span><br/><span class=\"kw1\">if</span> Bcol==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> Bcol==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> Bcol= <span class=\"nu0\">8</span>            <span class=\"coMULTI\">/* \"      \"         \"   \"   \"      \"   */</span><br/><span class=\"kw1\">if</span> digs==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> digs==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> digs=<span class=\"nu0\">20</span>            <span class=\"coMULTI\">/* \"      \"         \"   \"   \"      \"   */</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> digs                              <span class=\"coMULTI\">/*use moderate decimal digs (precision)*/</span><br/>minVal = <span class=\"nu0\">1</span><span class=\"st0\">'e-'</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>digs<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>                       <span class=\"coMULTI\">/*calculate the threshold minimul value*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'    minimum value is '</span>  <span class=\"kw6\">format</span><span class=\"br0\">(</span>minVal,,,,<span class=\"nu0\">0</span><span class=\"br0\">)</span>  <span class=\"st0\">\" using \"</span>  digs  <span class=\"st0\">' decimal digits'</span>;  <span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'    resistor mesh size is: '</span>     wide     <span class=\"st0\">\"wide, \"</span>     high   <span class=\"st0\">'high'</span>          \u00a0;  <span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'    point  A  is at (row,col): '</span>   Arow<span class=\"st0\">\",\"</span> Acol<br/><span class=\"kw1\">say</span> <span class=\"st0\">'    point  B  is at (row,col): '</span>   Brow<span class=\"st0\">\",\"</span> Bcol<br/>@<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span>;  cell<span class=\"sy0\">.</span>=<span class=\"nu0\">1</span><br/>                <span class=\"kw1\">do</span>  <span class=\"kw2\">until</span>  $<span class=\"sy0\">&lt;</span>=minVal;        v=<span class=\"nu0\">0</span><br/>                @<span class=\"sy0\">.</span>Arow<span class=\"sy0\">.</span>Acol=   <span class=\"nu0\">1</span> \u00a0;          cell<span class=\"sy0\">.</span>Arow<span class=\"sy0\">.</span>Acol=<span class=\"nu0\">0</span><br/>                @<span class=\"sy0\">.</span>Brow<span class=\"sy0\">.</span>Bcol= <span class=\"st0\">'-1'</span>\u00a0;          cell<span class=\"sy0\">.</span>Brow<span class=\"sy0\">.</span>Bcol=<span class=\"nu0\">0</span><br/>                $=<span class=\"nu0\">0</span><br/>                    <span class=\"kw1\">do</span>   i=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> high;      im=i-<span class=\"nu0\">1</span>;     ip=i+<span class=\"nu0\">1</span><br/>                      <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> wide;      n=<span class=\"nu0\">0</span>;        v=<span class=\"nu0\">0</span><br/>                      <span class=\"kw1\">if</span> i<span class=\"sy0\">\\</span>==<span class=\"nu0\">1</span>   <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;                v=v + @<span class=\"sy0\">.</span>im<span class=\"sy0\">.</span>j;     n=n+<span class=\"nu0\">1</span>;      <span class=\"kw3\">end</span><br/>                      <span class=\"kw1\">if</span> j<span class=\"sy0\">\\</span>==<span class=\"nu0\">1</span>   <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;    jm=j-<span class=\"nu0\">1</span>;     v=v + @<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>jm;     n=n+<span class=\"nu0\">1</span>;      <span class=\"kw3\">end</span><br/>                      <span class=\"kw1\">if</span> i<span class=\"sy0\">&lt;</span>high  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;                v=v + @<span class=\"sy0\">.</span>ip<span class=\"sy0\">.</span>j;     n=n+<span class=\"nu0\">1</span>;      <span class=\"kw3\">end</span><br/>                      <span class=\"kw1\">if</span> j<span class=\"sy0\">&lt;</span>wide  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;    jp=j+<span class=\"nu0\">1</span>;     v=v + @<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>jp;     n=n+<span class=\"nu0\">1</span>;      <span class=\"kw3\">end</span><br/>                      <a class=\"__cf_email__\" data-cfemail=\"b6c08bf6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j - v<span class=\"sy0\">/</span>n;         #<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j=v;    <span class=\"kw1\">if</span> cell<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j  <span class=\"kw3\">then</span> $=$ + v<span class=\"sy0\">*</span>v<br/>                      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>                    <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*i*/</span><br/>                                     <span class=\"kw1\">do</span>   r=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> High<br/>                                       <span class=\"kw1\">do</span> c=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> Wide;     @<span class=\"sy0\">.</span>r<span class=\"sy0\">.</span>c= @<span class=\"sy0\">.</span>r<span class=\"sy0\">.</span>c  -  #<span class=\"sy0\">.</span>r<span class=\"sy0\">.</span>c<br/>                                       <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*c*/</span><br/>                                     <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*r*/</span><br/>                <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*until*/</span><br/><span class=\"kw1\">say</span><br/>Acur= #<span class=\"sy0\">.</span>Arow<span class=\"sy0\">.</span>Acol <span class=\"sy0\">*</span> sides<span class=\"br0\">(</span>Arow, Acol<span class=\"br0\">)</span><br/>Bcur= #<span class=\"sy0\">.</span>Brow<span class=\"sy0\">.</span>Bcol <span class=\"sy0\">*</span> sides<span class=\"br0\">(</span>Brow, Bcol<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'    resistance between point  A  and point  B  is: '</span>     <span class=\"nu0\">4</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>Acur - Bcur<span class=\"br0\">)</span>       ohms<br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>sides:  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> row,col;    z=<span class=\"nu0\">0</span>;    <span class=\"kw1\">if</span> row<span class=\"sy0\">\\</span>==<span class=\"nu0\">1</span> <span class=\"sy0\">&amp;</span> row<span class=\"sy0\">\\</span>==high  <span class=\"kw3\">then</span>  z=z+<span class=\"nu0\">2</span>;    <span class=\"kw3\">else</span>  z=z+<span class=\"nu0\">1</span><br/>                                      <span class=\"kw1\">if</span> col<span class=\"sy0\">\\</span>==<span class=\"nu0\">1</span> <span class=\"sy0\">&amp;</span> col<span class=\"sy0\">\\</span>==wide  <span class=\"kw3\">then</span>  z=z+<span class=\"nu0\">2</span>;    <span class=\"kw3\">else</span>  z=z+<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">return</span> z</pre>"}, {"lang": "Sidef", "loc": 50, "block": "<pre class=\"ruby highlighted_source\">var <span class=\"br0\">(</span>w, h<span class=\"br0\">)</span> = <span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\u00a0<br/>var v = h.<span class=\"me1\">of</span> <span class=\"br0\">{</span> w.<span class=\"me1\">of</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"co1\"># voltage</span><br/>var f = h.<span class=\"me1\">of</span> <span class=\"br0\">{</span> w.<span class=\"me1\">of</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"co1\"># fixed condition</span><br/>var d = h.<span class=\"me1\">of</span> <span class=\"br0\">{</span> w.<span class=\"me1\">of</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"co1\"># diff</span><br/>var n = <span class=\"br0\">[</span><span class=\"br0\">]</span>               <span class=\"co1\"># neighbors</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> ^h <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> ..^ w  <span class=\"br0\">)</span> <span class=\"br0\">{</span> n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>\u00a0:= <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">[</span>i, j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> ..^ w<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>\u00a0:= <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">[</span>i, j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> ^w <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> ..^ h  <span class=\"br0\">)</span> <span class=\"br0\">{</span> n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>\u00a0:= <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, j<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> ..^ h<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>\u00a0:= <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, j<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>func set_boundary <span class=\"br0\">{</span><br/>    f<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"nu0\">1</span>; f<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> = <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/>    v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"nu0\">1</span>; v<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> = <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func calc_diff <span class=\"br0\">{</span><br/>    var total_diff = <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i,j <span class=\"kw1\">in</span> <span class=\"br0\">(</span>^h ~X ^w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        var w = n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>a<span class=\"sy0\">|</span> v.<span class=\"me1\">dig</span><span class=\"br0\">(</span>a...<span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">sum</span><br/>        d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> = <span class=\"br0\">(</span>w = <span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">-</span> w<span class=\"sy0\">/</span>n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">len</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        f<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>total_diff <span class=\"sy0\">+</span>= w<span class=\"sy0\">*</span>w<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    total_diff<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func iter <span class=\"br0\">{</span><br/>    var diff = <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>diff <span class=\"sy0\">&gt;</span> 1e<span class=\"sy0\">-</span>24<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        set_boundary<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        diff = calc_diff<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> i,j <span class=\"kw1\">in</span> <span class=\"br0\">(</span>^h ~X ^w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">-</span>= d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    var current = <span class=\"nu0\">3</span>.<span class=\"me1\">of</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i,j <span class=\"kw1\">in</span> <span class=\"br0\">(</span>^h ~X ^w<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        current<span class=\"br0\">[</span> f<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"br0\">]</span> <span class=\"sy0\">+</span>= <span class=\"br0\">(</span>d<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">*</span> n<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">len</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"br0\">(</span>current<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> current<span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">\"R = #{2 / iter()}\"</span></pre>"}, {"lang": "Tcl", "loc": 95, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><span class=\"sy0\">;</span>  <span class=\"co1\"># Or 8.5 with the TclOO package</span><br/>\u00a0<br/><span class=\"co1\"># This code is structured as a class with a little trivial DSL parser</span><br/><span class=\"co1\"># so it is easy to change what problem is being worked on.</span><br/>oo::<span class=\"me1\">class</span> create ResistorMesh <span class=\"br0\">{</span><br/>    <span class=\"kw1\">variable</span> forcePoints V fixed w h<br/>\u00a0<br/>    constructor <span class=\"br0\">{</span>boundaryConditions<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>op condition<span class=\"br0\">}</span> <span class=\"re0\">$boundaryConditions</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">switch</span> <span class=\"re0\">$op</span> <span class=\"br0\">{</span><br/>\t\tsize <span class=\"br0\">{</span><br/>\t\t    lassign <span class=\"re0\">$condition</span> w h<br/>\t\t    <span class=\"kw1\">set</span> fixed <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$h</span> <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$w</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw1\">set</span> V <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$h</span> <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$w</span> <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\tfixed <span class=\"br0\">{</span><br/>\t\t    lassign <span class=\"re0\">$condition</span> j i v<br/>\t\t    <span class=\"kw2\">lset</span> fixed <span class=\"re0\">$i</span> <span class=\"re0\">$j</span> <span class=\"br0\">[</span><span class=\"kw2\">incr</span> ctr<span class=\"br0\">]</span><br/>\t\t    <span class=\"kw2\">lappend</span> forcePoints <span class=\"re0\">$j</span> <span class=\"re0\">$i</span> <span class=\"re0\">$v</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> CalculateDifferences <span class=\"br0\">{</span><span class=\"sy0\">*</span>dV<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"sy0\">$</span><span class=\"br0\">{</span><span class=\"sy0\">*</span>dV<span class=\"br0\">}</span> dV<br/>\t<span class=\"kw1\">set</span> <span class=\"kw1\">error</span> <span class=\"nu0\">0.0</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$h</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$w</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">set</span> v <span class=\"nu0\">0.0</span><br/>\t\t<span class=\"kw1\">set</span> n <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$v</span> + <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$V</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw2\">incr</span> n<br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$v</span> + <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$V</span> <span class=\"re0\">$i</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw2\">incr</span> n<br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span>+<span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$h</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$v</span> + <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$V</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw2\">incr</span> n<br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span>+<span class=\"nu0\">1</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$w</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$v</span> + <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$V</span> <span class=\"re0\">$i</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span>+<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw2\">incr</span> n<br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw2\">lset</span> dV <span class=\"re0\">$i</span> <span class=\"re0\">$j</span> <span class=\"br0\">[</span><span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$V</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> - <span class=\"re0\">$v</span>/<span class=\"re0\">$n</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$fixed</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> <span class=\"kw1\">error</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$error</span> + <span class=\"re0\">$v</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"re0\">$error</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> FindCurrentFixpoint <span class=\"br0\">{</span>epsilon<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> dV <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$h</span> <span class=\"br0\">[</span>lrepeat <span class=\"re0\">$w</span> <span class=\"nu0\">0.0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> current <span class=\"br0\">{</span><span class=\"nu0\">0.0</span> <span class=\"nu0\">0.0</span> <span class=\"nu0\">0.0</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">while</span> true <span class=\"br0\">{</span><br/>\t    <span class=\"co1\"># Enforce the boundary conditions</span><br/>\t    <span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>j i v<span class=\"br0\">}</span> <span class=\"re0\">$forcePoints</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">lset</span> V <span class=\"re0\">$i</span> <span class=\"re0\">$j</span> <span class=\"re0\">$v</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"co1\"># Compute the differences and the error</span><br/>\t    <span class=\"kw1\">set</span> <span class=\"kw1\">error</span> <span class=\"br0\">[</span>my CalculateDifferences dV<span class=\"br0\">]</span><br/>\t    <span class=\"co1\"># Apply the differences</span><br/>\t    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$h</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$w</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">lset</span> V <span class=\"re0\">$i</span> <span class=\"re0\">$j</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$V</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$dV</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"co1\"># Done if the error is small enough</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$error</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$epsilon</span><span class=\"br0\">}</span> <span class=\"kw1\">break</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"co1\"># Compute the currents from the error</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$h</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$w</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">lset</span> current <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$fixed</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$current</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$fixed</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">]</span> +<br/>\t\t    <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$dV</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">!!</span><span class=\"re0\">$i</span>+<span class=\"sy0\">!!</span><span class=\"re0\">$j</span>+<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$h</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span>+<span class=\"br0\">(</span><span class=\"re0\">$j</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$w</span>-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"co1\"># Compute the actual current flowing between source and sink</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$current</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$current</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span> / <span class=\"nu0\">2.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># Public entry point</span><br/>    <span class=\"kw1\">method</span> solveForResistance <span class=\"br0\">{</span><span class=\"br0\">{</span>epsilon 1e-24<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> voltageDifference <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t    <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$forcePoints</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$forcePoints</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$voltageDifference</span> / <span class=\"br0\">[</span>my FindCurrentFixpoint <span class=\"re0\">$epsilon</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "XPL0", "loc": 49, "block": "<pre class=\"text highlighted_source\">code real RlRes=46, RlOut=48;<br/>def  S = 10;<br/>\u00a0<br/>proc SetBoundary(MV, MF);<br/>real MV; int MF;<br/>[MF(1,1):= 1;  MV(1,1):= 1.0;<br/> MF(6,7):= -1; MV(6,7):= -1.0;<br/>];<br/>\u00a0<br/>func real CalcDiff(MV, MF, DV, W, H);<br/>real MV; int MF; real DV; int W, H;<br/>int  I, J, N; real V, Total;<br/>[Total:= 0.0;<br/>for I:= 0 to H-1 do<br/>    for J:= 0 to W-1 do<br/>        [V:= 0.0;  N:= 0;<br/>        if I then [V:= V + MV(I-1,J);  N:= N+1];<br/>        if J then [V:= V + MV(I,J-1);  N:= N+1];<br/>        if I+1 &lt; H then [V:= V + MV(I+1,J);  N:= N+1];<br/>        if J+1 &lt; W then [V:= V + MV(I,J+1);  N:= N+1];<br/>        V:= MV(I,J) - V/float(N);  DV(I,J):= V;<br/>        if MF(I,J) = 0 then Total:= Total + V*V;<br/>        ];<br/>return Total;<br/>];<br/>\u00a0<br/>func real Iter(MV, MF, W, H);<br/>real MV; int MF, W, H;<br/>real DV, Diff, Cur; int I, J;<br/>[DV:= RlRes(W);  for I:= 0 to W-1 do DV(I):= RlRes(H);<br/>Diff:= 1E10;<br/>Cur:= [0.0, 0.0, 0.0];<br/>while Diff &gt; 1E-24 do<br/>        [SetBoundary(MV, MF);<br/>        Diff:= CalcDiff(MV, MF, DV, W, H);<br/>        for I:= 0 to H-1 do<br/>            for J:= 0 to W-1 do<br/>                MV(I,J):= MV(I,J) - DV(I,J);<br/>        ];<br/>for I:= 0 to H-1 do<br/>    for J:= 0 to W-1 do<br/>        Cur(MF(I,J)+1):= Cur(MF(I,J)+1) +<br/>                DV(I,J) * float(-(I&gt;0) - (J&gt;0) - (I&lt;H-1) - (J&lt;W-1));<br/>                                \\middle=4; side=3; corner=2<br/>return (Cur(2)-Cur(0))/2.0;<br/>];<br/>\u00a0<br/>real MeshV(S,S); int MeshF(S,S);<br/>RlOut(0, 2.0 / Iter(MeshV, MeshF, S, S))</pre>"}, {"lang": "zkl", "loc": 20, "block": "<pre class=\"text highlighted_source\">var [const] GSL=Import(\"zklGSL\");\t// libGSL (GNU Scientific Library)<br/>fcn onGrid(i,j,p,q){ ((0&lt;=i&lt;p) and (0&lt;=j&lt;q)) }<br/>fcn gridResistor(p,q, ai,aj, bi,bj){<br/>   n,A\u00a0:= p*q, GSL.Matrix(n,n);  // zero filled<br/>   foreach i,j in (p,q){<br/>      k:=i*q + j;<br/>      if(i==ai and j==aj) A[k,k]=1;<br/>      else{<br/>\t c:=0;<br/>\t if(onGrid(i+1,j,   p,q)){ c+=1; A[k, k+q]=-1 }<br/>\t if(onGrid(i-1,j,   p,q)){ c+=1; A[k, k-q]=-1 }<br/>\t if(onGrid(i,  j+1, p,q)){ c+=1; A[k, k+1]=-1 }<br/>\t if(onGrid(i,  j-1, p,q)){ c+=1; A[k, k-1]=-1 }<br/>\t A[k,k]=c;<br/>      }<br/>   }<br/>   b:=GSL.Vector(n);  // zero filled<br/>   b[k:=bi*q + bj]=1;<br/>   A.AxEQb(b)[k];<br/>}</pre>"}]}