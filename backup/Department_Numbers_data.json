{"task": "Department_Numbers", "blocks": [{"lang": "Aime", "loc": 14, "block": "<pre class=\"text highlighted_source\">integer p, s, f;<br/>\u00a0<br/>p = 0;<br/>while ((p += 2) &lt;= 7) {<br/>    s = 0;<br/>    while ((s += 1) &lt;= 7) {<br/>        f = 0;<br/>        while ((f += 1) &lt;= 7) {<br/>            if (p + s + f == 12 &amp;&amp; p\u00a0!= s &amp;&amp; p\u00a0!= f &amp;&amp; s\u00a0!= f) {<br/>                o_form(\" ~ ~ ~\\n\", p, s, f);<br/>            }<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 26, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw2\">BEGIN</span><br/>    <span class=\"coMULTI\"># show possible department number allocations for police, sanitation and fire departments #</span><br/>    <span class=\"coMULTI\"># the police department number must be even, all department numbers in the range 1 .. 7   #</span><br/>    <span class=\"coMULTI\"># the sum of the department numbers must be 12                                            #</span><br/>    <span class=\"kw3\">INT</span> max department number <span class=\"sy1\">=</span>  7<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span> department sum        <span class=\"sy1\">=</span> 12<span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"police sanitation fire\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> police <span class=\"kw2\">FROM</span> 2 <span class=\"kw2\">BY</span> 2 <span class=\"kw2\">TO</span> max department number <span class=\"kw2\">DO</span><br/>        <span class=\"kw2\">FOR</span> sanitation <span class=\"kw2\">TO</span> max department number <span class=\"kw2\">DO</span><br/>            <span class=\"kw2\">IF</span> sanitation <span class=\"sy1\">/=</span> police <span class=\"kw2\">THEN</span><br/>                <span class=\"kw3\">INT</span> fire <span class=\"sy1\">=</span> <span class=\"br0\">(</span> department sum <span class=\"sy1\">-</span> police <span class=\"br0\">)</span> <span class=\"sy1\">-</span> sanitation<span class=\"sy1\">;</span><br/>                <span class=\"kw2\">IF</span>  fire <span class=\"sy1\">&gt;</span> 0 <span class=\"kw16\">AND</span> fire <span class=\"sy1\">&lt;=</span> max department number<br/>                <span class=\"kw16\">AND</span> fire <span class=\"sy1\">/=</span> sanitation<br/>                <span class=\"kw16\">AND</span> fire <span class=\"sy1\">/=</span> police<br/>                <span class=\"kw2\">THEN</span><br/>                    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> police<span class=\"sy1\">,</span>      <span class=\"sy1\">-</span>6 <span class=\"br0\">)</span><br/>                           <span class=\"sy1\">,</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> sanitation<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>11 <span class=\"br0\">)</span><br/>                           <span class=\"sy1\">,</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> fire<span class=\"sy1\">,</span>        <span class=\"sy1\">-</span>5 <span class=\"br0\">)</span><br/>                           <span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><br/>                           <span class=\"br0\">)</span><br/>                         <span class=\"br0\">)</span><br/>                <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">OD</span><br/>    <span class=\"kw2\">OD</span><br/><span class=\"kw2\">END</span></pre>"}, {"lang": "AppleScript", "loc": 65, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>    <span class=\"kw3\">script</span><br/>        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>            <span class=\"kw3\">script</span><br/>                <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>y<span class=\"br0\">)</span><br/>                    <span class=\"kw3\">script</span><br/>                        <span class=\"kw3\">on</span> |\u03bb|<span class=\"br0\">(</span>z<span class=\"br0\">)</span><br/>                            <span class=\"kw3\">if</span> y \u2260 z <span class=\"kw2\">and</span> <span class=\"nu0\">1</span> \u2264 z <span class=\"kw2\">and</span> z \u2264 <span class=\"nu0\">7</span> <span class=\"kw3\">then</span><br/>                                <span class=\"br0\">{</span><span class=\"br0\">{</span>x, y, z<span class=\"br0\">}</span> <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><span class=\"br0\">}</span><br/>                            <span class=\"kw3\">else</span><br/>                                <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>                            <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>                        <span class=\"kw3\">end</span> |\u03bb|<br/>                    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>                    concatMap<span class=\"br0\">(</span><span class=\"kw1\">result</span>, <span class=\"br0\">{</span><span class=\"nu0\">12</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"co1\">--Z</span><br/>                <span class=\"kw3\">end</span> |\u03bb|<br/>            <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>            concatMap<span class=\"br0\">(</span><span class=\"kw1\">result</span>, <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"co1\">--Y</span><br/>        <span class=\"kw3\">end</span> |\u03bb|<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/>    unlines<span class=\"br0\">(</span>concatMap<span class=\"br0\">(</span><span class=\"kw1\">result</span>, <span class=\"br0\">{</span><span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">6</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">--X</span><br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- GENERIC FUNCTIONS ----------------------------------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- concatMap\u00a0:: (a -&gt; [b]) -&gt; [a] -&gt; [b]</span><br/><span class=\"kw3\">on</span> concatMap<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">(</span>lst <span class=\"sy0\">&amp;</span> |\u03bb|<span class=\"br0\">(</span><span class=\"kw1\">contents</span> <span class=\"kw3\">of</span> <span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, i, xs<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/>    <span class=\"kw3\">return</span> lst<br/><span class=\"kw3\">end</span> concatMap<br/>\u00a0<br/><span class=\"co1\">-- intercalate\u00a0:: Text -&gt; [Text] -&gt; Text</span><br/><span class=\"kw3\">on</span> intercalate<span class=\"br0\">(</span>strText, lstText<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>dlm, <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span>, strText<span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> strJoined <span class=\"kw3\">to</span> lstText <span class=\"kw2\">as</span> <span class=\"kw1\">text</span><br/>    <span class=\"kw3\">set</span> <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> dlm<br/>    <span class=\"kw3\">return</span> strJoined<br/><span class=\"kw3\">end</span> intercalate<br/>\u00a0<br/><span class=\"co1\">-- Lift 2nd class handler function into 1st class script wrapper </span><br/><span class=\"co1\">-- mReturn\u00a0:: Handler -&gt; Script</span><br/><span class=\"kw3\">on</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> f <span class=\"kw3\">is</span> <span class=\"kw3\">script</span> <span class=\"kw3\">then</span><br/>        f<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span><br/>            <span class=\"kw3\">property</span> |\u03bb|\u00a0: f<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> mReturn<br/>\u00a0<br/><span class=\"co1\">-- unlines\u00a0:: [String] -&gt; String</span><br/><span class=\"kw3\">on</span> unlines<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>    intercalate<span class=\"br0\">(</span>linefeed, xs<span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> unlines</pre>"}, {"lang": "AWK", "loc": 22, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f DEPARTMENT_NUMBERS.AWK</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    <span class=\"kw5\">print</span><span class=\"br0\">(</span><span class=\"st0\">\" # FD PD SD\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>fire=<span class=\"nu0\">1</span>; fire<span class=\"sy2\">&lt;=</span><span class=\"nu0\">7</span>; fire<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>police=<span class=\"nu0\">1</span>; police<span class=\"sy2\">&lt;=</span><span class=\"nu0\">7</span>; police<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>sanitation=<span class=\"nu0\">1</span>; sanitation<span class=\"sy2\">&lt;=</span><span class=\"nu0\">7</span>; sanitation<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span>rules<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy4\">~</span> <span class=\"sy3\">/^</span><span class=\"nu0\">1</span><span class=\"sy3\">+</span>$<span class=\"sy3\">/</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%2d\u00a0%2d\u00a0%2d\u00a0%2d<span class=\"es0\">\\n</span>\"</span>,<span class=\"sy3\">++</span>count,fire,police,sanitation<span class=\"br0\">)</span><br/>          <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> rules<span class=\"br0\">(</span>  stmt1,stmt2,stmt3<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    stmt1 = fire <span class=\"sy2\">!=</span> police <span class=\"sy1\">&amp;&amp;</span> fire <span class=\"sy2\">!=</span> sanitation <span class=\"sy1\">&amp;&amp;</span> police <span class=\"sy2\">!=</span> sanitation<br/>    stmt2 = fire <span class=\"sy3\">+</span> police <span class=\"sy3\">+</span> sanitation <span class=\"sy2\">==</span> <span class=\"nu0\">12</span><br/>    stmt3 = police <span class=\"sy3\">%</span> <span class=\"nu0\">2</span> <span class=\"sy2\">==</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw6\">return</span><span class=\"br0\">(</span>stmt1 stmt2 stmt3<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "BASIC", "loc": 8, "block": "<pre class=\"text highlighted_source\">10 PRINT \"POLICE SANITATION FIRE\"<br/>20 FOR P=2 TO 7 STEP 2<br/>30 FOR S=1 TO 7<br/>40 IF S=P THEN NEXT S<br/>50 LET F=(12-P)-S<br/>60 IF F&gt;0 AND F&lt;=7 AND F&lt;&gt;S AND F&lt;&gt;P THEN PRINT \"   \";P;\"       \";S;\"       \";F<br/>70 NEXT S<br/>80 NEXT P</pre>"}, {"lang": "BBC BASIC", "loc": 13, "block": "<pre class=\"text highlighted_source\">REM &gt;deptnums<br/>max_dept_num% = 7<br/>dept_sum% = 12<br/>PRINT \"police sanitation fire\"<br/>FOR police% = 2 TO max_dept_num% STEP 2<br/>  FOR sanitation% = 1 TO max_dept_num%<br/>    IF sanitation% &lt;&gt; police% THEN<br/>      fire% = (dept_sum% - police%) - sanitation%<br/>      IF fire% &gt; 0 AND fire% &lt;= max_dept_num% AND fire% &lt;&gt; sanitation% AND fire% &lt;&gt; police% THEN PRINT \"   \"; police%; \"       \"; sanitation%; \"       \"; fire%<br/>    ENDIF<br/>  NEXT<br/>NEXT<br/>END</pre>"}, {"lang": "C", "loc": 23, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include&lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> police<span class=\"sy0\">,</span>sanitation<span class=\"sy0\">,</span>fire<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Police     Sanitation         Fire<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"----------------------------------\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>police<span class=\"sy0\">=</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span>police<span class=\"sy0\">&lt;=</span><span class=\"nu0\">6</span><span class=\"sy0\">;</span>police<span class=\"sy0\">+=</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>sanitation<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>sanitation<span class=\"sy0\">&lt;=</span><span class=\"nu0\">7</span><span class=\"sy0\">;</span>sanitation<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>fire<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>fire<span class=\"sy0\">&lt;=</span><span class=\"nu0\">7</span><span class=\"sy0\">;</span>fire<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>police<span class=\"sy0\">!=</span>sanitation <span class=\"sy0\">&amp;&amp;</span> sanitation<span class=\"sy0\">!=</span>fire <span class=\"sy0\">&amp;&amp;</span> fire<span class=\"sy0\">!=</span>police <span class=\"sy0\">&amp;&amp;</span> police<span class=\"sy0\">+</span>fire<span class=\"sy0\">+</span>sanitation<span class=\"sy0\">==</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>%d<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>%d<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>%d\"</span><span class=\"sy0\">,</span>police<span class=\"sy0\">,</span>sanitation<span class=\"sy0\">,</span>fire<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 16, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> p <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> p<span class=\"sy0\">+=</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> s <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> s<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">int</span> f <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <span class=\"sy0\">-</span> p <span class=\"sy0\">-</span> s<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>s <span class=\"sy0\">&gt;=</span> f<span class=\"br0\">)</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>f <span class=\"sy0\">&gt;</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>s <span class=\"sy0\">==</span> p <span class=\"sy0\">||</span> f <span class=\"sy0\">==</span> p<span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span> <span class=\"co1\">//not even necessary</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>$<span class=\"st0\">\"Police:{p}, Sanitation:{s}, Fire:{f}\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>$<span class=\"st0\">\"Police:{p}, Sanitation:{f}, Fire:{s}\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 20, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;iomanip&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span><span class=\"sy2\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> sol <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>FIRE<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>POLICE<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>SANITATION<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> f <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> f <span class=\"sy1\">&lt;</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span> f<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> p <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> p <span class=\"sy1\">&lt;</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span> p<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> s <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> s <span class=\"sy1\">&lt;</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span> s<span class=\"sy2\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> f <span class=\"sy3\">!</span><span class=\"sy1\">=</span> p <span class=\"sy3\">&amp;&amp;</span> f <span class=\"sy3\">!</span><span class=\"sy1\">=</span> s <span class=\"sy3\">&amp;&amp;</span> p <span class=\"sy3\">!</span><span class=\"sy1\">=</span> s <span class=\"sy3\">&amp;&amp;</span> <span class=\"sy3\">!</span><span class=\"br0\">(</span> p <span class=\"sy3\">&amp;</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy3\">&amp;&amp;</span> <span class=\"br0\">(</span> f <span class=\"sy2\">+</span> s <span class=\"sy2\">+</span> p <span class=\"sy1\">==</span> <span class=\"nu0\">12</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"SOLUTION #\"</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> sol<span class=\"sy2\">++</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <br/>                <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\":<span class=\"es1\">\\t</span>\"</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> f <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span> \"</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> p <br/>                <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>\"</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span> <span class=\"nu0\">6</span> <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> s <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 8, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>n <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">for</span> <span class=\"br0\">[</span>police n<br/>        sanitation n<br/>        fire n<br/>       \u00a0:<span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">distinct</span>? police sanitation fire<span class=\"br0\">)</span><br/>       \u00a0:<span class=\"kw1\">when</span> <span class=\"br0\">(</span>even? police<span class=\"br0\">)</span><br/>       \u00a0:<span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> police sanitation fire<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>println police sanitation fire<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 17, "block": "<pre class=\"d highlighted_source\">\u00a0<br/><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> sol <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>FIRE<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>POLICE<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>SANITATION\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span><span class=\"br0\">(</span> f<span class=\"sy0\">;</span> iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">foreach</span><span class=\"br0\">(</span> p<span class=\"sy0\">;</span> iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">foreach</span><span class=\"br0\">(</span> s<span class=\"sy0\">;</span> iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span> f <span class=\"sy0\">!=</span> p <span class=\"sy0\">&amp;&amp;</span> f <span class=\"sy0\">!=</span> s <span class=\"sy0\">&amp;&amp;</span> p <span class=\"sy0\">!=</span> s <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><span class=\"br0\">(</span> p <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span> f <span class=\"sy0\">+</span> s <span class=\"sy0\">+</span> p <span class=\"sy0\">==</span> <span class=\"nu0\">12</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    writefln<span class=\"br0\">(</span><span class=\"st0\">\"SOLUTION #%2d:<span class=\"es1\">\\t</span>%2d<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>%3d<span class=\"es1\">\\t</span><span class=\"es1\">\\t</span>%6d\"</span><span class=\"sy0\">,</span> sol<span class=\"sy0\">++,</span> f<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "F#", "loc": 6, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"co1\">// A function to generate department numbers. Nigel Galloway: May 2nd., 2018</span><br/><span class=\"kw1\">type</span> dNum <span class=\"sy0\">=</span> <span class=\"br0\">{</span>Police:int<span class=\"sy0\">;</span> Fire:int<span class=\"sy0\">;</span> Sanitation:<span class=\"kw4\">int</span><span class=\"br0\">}</span><br/><span class=\"kw1\">let</span> fN n<span class=\"sy0\">=</span>n.<span class=\"me1\">Police</span><span class=\"sy0\">%</span>2<span class=\"sy0\">=</span><span class=\"nu0\">0</span>&amp;&amp;n.<span class=\"me1\">Police</span><span class=\"sy0\">+</span>n.<span class=\"me1\">Fire</span><span class=\"sy0\">+</span>n.<span class=\"me1\">Sanitation</span><span class=\"sy0\">=</span><span class=\"nu0\">12</span>&amp;&amp;n.<span class=\"me1\">Police</span><span class=\"sy0\">&lt;&gt;</span>n.<span class=\"me1\">Fire</span>&amp;&amp;n.<span class=\"me1\">Police</span><span class=\"sy0\">&lt;&gt;</span>n.<span class=\"me1\">Sanitation</span>&amp;&amp;n.<span class=\"me1\">Fire</span><span class=\"sy0\">&lt;&gt;</span>n.<span class=\"me1\">Sanitation</span><br/><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">init</span> <span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"sy0\">*</span><span class=\"nu0\">7</span><span class=\"sy0\">*</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> n<span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>Police<span class=\"sy0\">=</span>n<span class=\"sy0\">%</span>7<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>Fire<span class=\"sy0\">=</span><span class=\"br0\">(</span>n<span class=\"sy0\">/</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>7<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>Sanitation<span class=\"sy0\">=</span><span class=\"br0\">(</span>n<span class=\"sy0\">/</span><span class=\"nu0\">49</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">|&gt;</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">filter</span> fN<span class=\"sy0\">|&gt;</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">iter</span><span class=\"br0\">(</span>printfn <span class=\"st0\">\"%A\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 9, "block": "<pre class=\"text highlighted_source\">USING: formatting io kernel math math.combinatorics math.ranges<br/>sequences sets\u00a0;<br/>IN: rosetta-code.department-numbers<br/>\u00a0<br/>7 [1,b] 3 &lt;k-permutations&gt;<br/>[ [ first even? ] [ sum 12 = ] bi and ] filter<br/>\u00a0<br/>\"{ Police, Sanitation, Fire }\" print nl<br/>[ \"%[%d,\u00a0%]\\n\" printf ] each</pre>"}, {"lang": "Fortran", "loc": 11, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw3\">INTEGER</span> P,S,F\t<span class=\"co1\">!Department codes for Police, Sanitation, and Fire. Values 1 to 7 only.</span><br/>    <span class=\"nu0\">1</span>  PP<span class=\"sy0\">:</span><span class=\"kw1\">DO</span> P <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>,<span class=\"nu0\">7</span>,<span class=\"nu0\">2</span>\t<span class=\"co1\">!The police demand an even number. They're special and use violence.</span><br/>    <span class=\"nu0\">2</span>   SS<span class=\"sy0\">:</span><span class=\"kw1\">DO</span> S <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">7</span>\t\t<span class=\"co1\">!The sanitation department accepts any value.</span><br/>    <span class=\"nu0\">3</span>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>P.<span class=\"me1\">EQ</span>.<span class=\"me1\">S</span><span class=\"br0\">)</span> <span class=\"kw1\">CYCLE</span> SS\t<span class=\"co1\">!But it must differ from the others.</span><br/>    <span class=\"nu0\">4</span>        F <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>P <span class=\"sy0\">+</span> S<span class=\"br0\">)</span>\t\t<span class=\"co1\">!The fire department accepts any number, but the sum must be twelve.</span><br/>    <span class=\"nu0\">5</span>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>F.<span class=\"me1\">LE</span>.0 <span class=\"kw2\">.<span class=\"me1\">OR</span>.</span> F.<span class=\"me1\">GT</span>.7<span class=\"br0\">)</span> <span class=\"kw1\">CYCLE</span> SS\t<span class=\"co1\">!Ensure that the only option is within range.</span><br/>    <span class=\"nu0\">6</span>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>F <span class=\"sy0\">-</span> S<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>F <span class=\"sy0\">-</span> P<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">7</span>,<span class=\"nu0\">8</span>,<span class=\"nu0\">7</span>\t\t<span class=\"co1\">!And F is to differ from S and from P</span><br/>    <span class=\"nu0\">7</span>        WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"st0\">\"(3I2)\"</span><span class=\"br0\">)</span> P,S,F\t\t<span class=\"co1\">!If we get here, we have a possible set.</span><br/>    <span class=\"nu0\">8</span>      <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span> SS\t\t<span class=\"co1\">!Next S</span><br/>    <span class=\"nu0\">9</span>    <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span> PP\t<span class=\"co1\">!Next P.</span><br/>      <span class=\"kw1\">END</span>\t<span class=\"co1\">!Well, that was straightforward.</span></pre>"}, {"lang": "FreeBASIC", "loc": 24, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 15-08-2017</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> fire, police, sanitation<br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"police fire sanitation\"</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"----------------------\"</span><br/>\u00a0<br/><span class=\"kw1\">For</span> police = <span class=\"nu0\">2</span> <span class=\"kw1\">To</span> <span class=\"nu0\">7</span> <span class=\"kw1\">Step</span> <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">For</span> fire = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">7</span><br/>        <span class=\"kw1\">If</span> fire = police <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">For</span><br/>        sanitation = <span class=\"nu0\">12</span> - police - fire<br/>        <span class=\"kw1\">If</span> sanitation = fire <span class=\"kw1\">Or</span> sanitation = police <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">For</span><br/>        <span class=\"kw1\">If</span> sanitation &gt;= <span class=\"nu0\">1</span> And sanitation &lt;= <span class=\"nu0\">7</span> <span class=\"kw1\">Then</span><br/>            <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"   #     #       # \"</span>; police; fire; sanitation<br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "Gambas", "loc": 24, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siC0, siC1, siC2 <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sOut <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sTemp <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siC0 <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">6</span> <a href=\"http://gambasdoc.org/help/lang/step\"><span class=\"kw1\">Step</span></a> <span class=\"nu0\">2</span><br/>  <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siC1 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">7</span><br/>    <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siC2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">7</span><br/>      <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> sic0 <span class=\"sy0\">+</span> siC1 <span class=\"sy0\">+</span> siC2 <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a><br/>        <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siC0 <span class=\"sy0\">&lt;&gt;</span> siC1 <a href=\"http://gambasdoc.org/help/lang/and\"><span class=\"kw5\">And</span></a> siC1 <span class=\"sy0\">&lt;&gt;</span> siC2 <a href=\"http://gambasdoc.org/help/lang/and\"><span class=\"kw5\">And</span></a> siC0 <span class=\"sy0\">&lt;&gt;</span> siC2 <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> sOut.<span class=\"me1\">Add</span><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siC0<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siC1<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siC2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a> <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a><br/>    <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>  <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\t</span>Police<span class=\"es0\">\\t</span>Fire<span class=\"es0\">\\t</span>Sanitation\"</span><br/>siC0 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> sTemp <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> sOut<br/>  <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> sic0<br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"[\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siC0<span class=\"br0\">)</span>, <span class=\"st0\">\"00\"</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"]<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/left\"><span class=\"kw2\">Left</span></a><span class=\"br0\">(</span>sTemp, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/mid\"><span class=\"kw2\">Mid</span></a><span class=\"br0\">(</span>sTemp, <span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://gambasdoc.org/help/lang/right\"><span class=\"kw2\">Right</span></a><span class=\"br0\">(</span>sTemp, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 21, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Police  Sanitation  Fire\"</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"------  ----------  ----\"</span><span class=\"sy1\">)</span><br/>    count <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; <span class=\"nu0\">7</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> <span class=\"sy2\">+=</span> <span class=\"nu0\">2</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> j &lt; <span class=\"nu0\">8</span><span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">if</span> j <span class=\"sy3\">==</span> <span class=\"nu2\">i</span> <span class=\"sy1\">{</span> <span class=\"kw1\">continue</span> <span class=\"sy1\">}</span><br/>            <span class=\"kw1\">for</span> k <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> k &lt; <span class=\"nu0\">8</span><span class=\"sy1\">;</span> k<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">if</span> k <span class=\"sy3\">==</span> <span class=\"nu2\">i</span> <span class=\"sy3\">||</span> k <span class=\"sy3\">==</span> j <span class=\"sy1\">{</span> <span class=\"kw1\">continue</span> <span class=\"sy1\">}</span><br/>                <span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy3\">+</span> j <span class=\"sy3\">+</span> k <span class=\"sy2\">!=</span> <span class=\"nu0\">12</span> <span class=\"sy1\">{</span> <span class=\"kw1\">continue</span> <span class=\"sy1\">}</span><br/>                fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\" \u00a0%d        \u00a0%d        \u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> i<span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> k<span class=\"sy1\">)</span><br/>                count<span class=\"sy2\">++</span><br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>%d valid combinations<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> count<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 12, "block": "<pre class=\"haskell highlighted_source\">main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span><br/>  <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;=</span><br/>  \\x <span class=\"sy0\">-&gt;</span><br/>     <span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;=</span><br/>     \\y <span class=\"sy0\">-&gt;</span><br/>        <span class=\"br0\">[</span><span class=\"nu0\">12</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;&gt;=</span><br/>        \\z <span class=\"sy0\">-&gt;</span><br/>           <span class=\"kw1\">case</span> y <span class=\"sy0\">/=</span> z <span class=\"sy0\">&amp;&amp;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;=</span> z <span class=\"sy0\">&amp;&amp;</span> z <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span> <span class=\"kw1\">of</span><br/>             True <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>             <span class=\"sy0\">_</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 12, "block": "<pre class=\"j highlighted_source\">require <span class=\"st_h\">'stats'</span><br/>permfrom=: ,/@<span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"b0c0d5c2ddf0\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[ {\"<span class=\"nu0\">_</span> <span class=\"nu0\">1</span> comb<span class=\"sy0\">)</span>  <span class=\"co1\">NB. get permutations of length x from y possible items</span><br/>\u00a0<br/>alluniq=: # = #@~.           <span class=\"co1\">NB. check items are unique</span><br/>addto12=: <span class=\"nu0\">12</span> = +/            <span class=\"co1\">NB. check items add to 12</span><br/>iseven=: <a class=\"__cf_email__\" data-cfemail=\"9cb1b2dc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">(</span><span class=\"nu0\">2</span>&amp;|<span class=\"sy0\">)</span>            <span class=\"co1\">NB. check items are even</span><br/>policeeven=: {<a class=\"__cf_email__\" data-cfemail=\"bc92fcd5cfd9cad9d2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>       <span class=\"co1\">NB. check first item is even</span><br/>conditions=: policeeven *. addto12 *. alluniq<br/>\u00a0<br/>Validnums=: &gt;: i.<span class=\"nu0\">7</span>           <span class=\"co1\">NB. valid Department numbers</span><br/>\u00a0<br/>getDeptNums=: [: <span class=\"sy0\">(</span>#~ conditions\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span> Validnums {~ permfrom</pre>"}, {"lang": "Java", "loc": 19, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> DepartmentNumbers <span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Police  Sanitation  Fire\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"------  ----------  ----\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">==</span> i<span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>k<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>k <span class=\"sy0\">==</span> i <span class=\"sy0\">||</span> k <span class=\"sy0\">==</span> j<span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> j <span class=\"sy0\">+</span> k <span class=\"sy0\">!=</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>                    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\" \u00a0%d        \u00a0%d        \u00a0%d<span class=\"es0\">\\n</span>\"</span>, i, j, k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    count<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>%d valid combinations\"</span>, count<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 21, "block": "<pre class=\"javascript highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"st0\">'use strict'</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// concatMap\u00a0:: (a -&gt; [b]) -&gt; [a] -&gt; [b]</span><br/>    <span class=\"kw1\">function</span> concatMap<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> xs<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>.<span class=\"me1\">concat</span>.<span class=\"me1\">apply</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> xs.<span class=\"me1\">map</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"st0\">'(Police, Sanitation, Fire)<span class=\"es0\">\\n</span>'</span> <span class=\"sy0\">+</span><br/>        concatMap<span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> concatMap<span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span>y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> concatMap<span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span>z<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">return</span> z <span class=\"sy0\">!==</span> y <span class=\"sy0\">&amp;&amp;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;=</span> z <span class=\"sy0\">&amp;&amp;</span> z <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">7</span> <span class=\"sy0\">?</span> <span class=\"br0\">[</span><br/>                        <span class=\"br0\">[</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">]</span><br/>                    <span class=\"br0\">]</span> <span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">12</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        .<span class=\"me1\">map</span><span class=\"br0\">(</span>JSON.<span class=\"me1\">stringify</span><span class=\"br0\">)</span><br/>        .<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 1, "block": "<pre>   {\"fire\":1,\"police\":4,\"sanitation\":7}\n</pre>"}, {"lang": "Julia", "loc": 20, "block": "<pre class=\"text highlighted_source\">function findsolution(rng=1:7)<br/>    rst = Matrix{Int}(0, 3)<br/>    for p in rng, f in rng, s in rng<br/>        if p\u00a0!= s\u00a0!= f\u00a0!= p &amp;&amp; p + s + f == 12 &amp;&amp; iseven(p)<br/>            rst = [rst; p s f]<br/>        end<br/>    end<br/>    return rst<br/>end<br/>\u00a0<br/>function printsolutions(sol::Matrix{Int})<br/>    println(\"      Pol.   Fire   San.\")<br/>    println(\"      ----   ----   ----\")<br/>    for row in 1:size(sol, 1)<br/>        @printf(\"%2i |\u00a0%4i%7i%7i\\n\", row, sol[row,\u00a0:]...)<br/>    end<br/>end<br/>\u00a0<br/>printsolutions(findsolution())<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 19, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Police  Sanitation  Fire\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"------  ----------  ----\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">2</span>..<span class=\"nu0\">6</span> step <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in <span class=\"nu0\">1</span>..<span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>j <span class=\"sy0\">==</span> i<span class=\"br0\">)</span> continue<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>k in <span class=\"nu0\">1</span>..<span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>k <span class=\"sy0\">==</span> i || k <span class=\"sy0\">==</span> j<span class=\"br0\">)</span> continue<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i + j + k <span class=\"sy0\">!=</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> continue<br/>                println<span class=\"br0\">(</span><span class=\"st0\">\"  $i         $j         $k\"</span><span class=\"br0\">)</span><br/>                count++<br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>$count valid combinations\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 14, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"Fire\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Police\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sanitation\"</span> <span class=\"br0\">)</span><br/>sol <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">for</span> f <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">for</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">for</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">if</span> s <span class=\"sy0\">+</span> p <span class=\"sy0\">+</span> f <span class=\"sy0\">==</span> <span class=\"nu0\">12</span> <span class=\"kw2\">and</span> p <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> f <span class=\"sy0\">~=</span> p <span class=\"kw2\">and</span> f <span class=\"sy0\">~=</span> s <span class=\"kw2\">and</span> p <span class=\"sy0\">~=</span> s <span class=\"kw1\">then</span><br/>                <span class=\"kw3\">print</span><span class=\"br0\">(</span> f<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> s <span class=\"br0\">)</span><span class=\"sy0\">;</span> sol <span class=\"sy0\">=</span> sol <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>%d solutions found\"</span><span class=\"sy0\">,</span> sol <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 24, "block": "<pre class=\"text highlighted_source\">#determines if i, j, k are exclusive numbers<br/>exclusive_numbers\u00a0:= proc(i, j, k)<br/>\tif (i = j) or (i = k) or (j = k) then<br/>\t\treturn false;<br/>\tend if;<br/>\treturn true;<br/>end proc;<br/>\u00a0<br/>#outputs all possible combinations of numbers that statisfy given conditions<br/>department_numbers\u00a0:= proc()<br/>\tlocal i, j, k;<br/>\tprintf(\"Police\t\tSanitation\tFire\\n\");<br/>\tfor i to 7 do<br/>\t\tfor j to 7 do<br/>\t\t\tk\u00a0:= 12 - i - j;<br/>\t\t\tif (k &lt;= 7) and (k &gt;= 1) and (i mod 2 = 0) and exclusive_numbers(i,j,k) then<br/>\t\t\t\tprintf(\"%d\t\t%d\t\t%d\\n\", i, j, k);<br/>\t\t\tend if;<br/>\t\tend do;<br/>\tend do;<br/>end proc;<br/>\u00a0<br/>department_numbers();<br/>\u00a0</pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">Select[Permutations[Range[7], {3}], Total[#] == 12 &amp;&amp; EvenQ[First[#]] &amp;]</pre>"}, {"lang": "Objeck", "loc": 16, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">class</span> Program <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    sol <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"st0\">\"<span class=\"es0\">\\t</span><span class=\"es0\">\\t</span>FIRE<span class=\"es0\">\\t</span>POLICE<span class=\"es0\">\\t</span>SANITATION\"</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> f <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> f <span class=\"sy0\">&lt;</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span> f<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span> p <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> p <span class=\"sy0\">&lt;</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span> p<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span> s<span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> s <span class=\"sy0\">&lt;</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span> s<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"kw1\">if</span><span class=\"br0\">(</span> f <span class=\"sy0\">&lt;&gt;</span> p <span class=\"sy0\">&amp;</span> f <span class=\"sy0\">&lt;&gt;</span> s <span class=\"sy0\">&amp;</span> p <span class=\"sy0\">&lt;&gt;</span> s <span class=\"sy0\">&amp;</span> <span class=\"br0\">(</span> p and <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> <span class=\"br0\">(</span> f <span class=\"sy0\">+</span> s <span class=\"sy0\">+</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"st0\">\"SOLUTION #{$sol}: <span class=\"es0\">\\t</span>{$f}<span class=\"es0\">\\t</span>{$p}<span class=\"es0\">\\t</span>{$s}\"</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            sol <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>          <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span>  <br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Modula-2", "loc": 45, "block": "<pre class=\"modula2 highlighted_source\"><span class=\"kw1\">MODULE</span> DepartmentNumbers;<br/><span class=\"kw1\">FROM</span> Conversions <span class=\"kw1\">IMPORT</span> IntToStr;<br/><span class=\"kw1\">FROM</span> Terminal <span class=\"kw1\">IMPORT</span> WriteString<span class=\"sy0\">,</span>WriteLn<span class=\"sy0\">,</span>ReadChar;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> WriteInt<span class=\"br0\">(</span>num <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">VAR</span> str <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">16</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    IntToStr<span class=\"br0\">(</span>num<span class=\"sy0\">,</span>str<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span>str<span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> WriteInt;<br/>\u00a0<br/><span class=\"kw1\">VAR</span> i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>k<span class=\"sy0\">,</span>count <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    count<span class=\"sy0\">:=</span><span class=\"nu0\">0</span>;<br/>\u00a0<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"Police  Sanitation  Fire\"</span><span class=\"br0\">)</span>;<br/>    WriteLn;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"------  ----------  ----\"</span><span class=\"br0\">)</span>;<br/>    WriteLn;<br/>\u00a0<br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">2</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">6</span> <span class=\"kw1\">BY</span> <span class=\"nu0\">2</span> <span class=\"kw1\">DO</span><br/>        <span class=\"kw1\">FOR</span> j<span class=\"sy0\">:=</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">7</span> <span class=\"kw1\">DO</span><br/>            <span class=\"kw1\">IF</span> j<span class=\"sy0\">=</span>i <span class=\"kw1\">THEN</span> CONTINUE; <span class=\"kw1\">END</span>;<br/>            <span class=\"kw1\">FOR</span> k<span class=\"sy0\">:=</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">7</span> <span class=\"kw1\">DO</span><br/>                <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>k<span class=\"sy0\">=</span>i<span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>k<span class=\"sy0\">=</span>j<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> CONTINUE; <span class=\"kw1\">END</span>;<br/>                <span class=\"kw1\">IF</span> i<span class=\"sy0\">+</span>j<span class=\"sy0\">+</span>k <span class=\"sy0\">#</span> <span class=\"nu0\">12</span> <span class=\"kw1\">THEN</span> CONTINUE; <span class=\"kw1\">END</span>;<br/>                WriteString<span class=\"br0\">(</span><span class=\"st0\">\"  \"</span><span class=\"br0\">)</span>;<br/>                WriteInt<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/>                WriteString<span class=\"br0\">(</span><span class=\"st0\">\"         \"</span><span class=\"br0\">)</span>;<br/>                WriteInt<span class=\"br0\">(</span>j<span class=\"br0\">)</span>;<br/>                WriteString<span class=\"br0\">(</span><span class=\"st0\">\"         \"</span><span class=\"br0\">)</span>;<br/>                WriteInt<span class=\"br0\">(</span>k<span class=\"br0\">)</span>;<br/>                WriteLn;<br/>                <span class=\"kw3\">INC</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">END</span>;<br/>        <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    WriteLn;<br/>    WriteInt<span class=\"br0\">(</span>count<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\" valid combinations\"</span><span class=\"br0\">)</span>;<br/>    WriteLn;<br/>\u00a0<br/>    ReadChar;<br/><span class=\"kw1\">END</span> DepartmentNumbers.</pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">forstep</span><span class=\"br0\">(</span>p<span class=\"sy0\">=</span><span class=\"nu1\">2</span><span class=\"sy0\">,</span><span class=\"nu1\">6</span><span class=\"sy0\">,</span><span class=\"nu1\">2</span><span class=\"sy0\">,</span> <span class=\"kw1\">for</span><span class=\"br0\">(</span>f<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">7</span><span class=\"sy0\">,</span> s<span class=\"sy0\">=</span><span class=\"nu1\">12</span><span class=\"sy0\">-</span>p<span class=\"sy0\">-</span>f<span class=\"sy0\">;</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>p<span class=\"sy0\">!=</span>f <span class=\"sy0\">&amp;&amp;</span> p<span class=\"sy0\">!=</span>s <span class=\"sy0\">&amp;&amp;</span> f<span class=\"sy0\">!=</span>s <span class=\"sy0\">&amp;&amp;</span> s<span class=\"sy0\">&gt;</span><span class=\"nu1\">0</span> <span class=\"sy0\">&amp;&amp;</span> s<span class=\"sy0\">&lt;</span><span class=\"nu1\">8</span><span class=\"sy0\">,</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span>p<span class=\"st0\">\" \"</span>f<span class=\"st0\">\" \"</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 32, "block": "<pre class=\"perl highlighted_source\">\u00a0<br/><span class=\"co1\">#!/usr/bin/perl</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@even_numbers</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"co5\">$_</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@even_numbers</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Police<span class=\"es0\">\\t</span>Fire<span class=\"es0\">\\t</span>Sanitation<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$police_number</span> <span class=\"br0\">(</span><span class=\"re0\">@even_numbers</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$fire_number</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$sanitation_number</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$police_number</span> <span class=\"sy0\">+</span> <span class=\"re0\">$fire_number</span> <span class=\"sy0\">+</span> <span class=\"re0\">$sanitation_number</span> <span class=\"sy0\">==</span> <span class=\"nu0\">12</span> <span class=\"sy0\">&amp;&amp;</span> <br/>           <span class=\"re0\">$police_number</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$fire_number</span> <span class=\"sy0\">&amp;&amp;</span> <br/>           <span class=\"re0\">$fire_number</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$sanitation_number</span> <span class=\"sy0\">&amp;&amp;</span> <br/>           <span class=\"re0\">$sanitation_number</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$police_number</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"$police_number<span class=\"es0\">\\t</span>$fire_number<span class=\"es0\">\\t</span>$sanitation_number<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span>\t<br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 6, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">combinations</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">grep</span><span class=\"br0\">(</span><span class=\"sy0\">*.</span><span class=\"me1\">sum</span> <span class=\"sy0\">==</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span>   <span class=\"sy0\">.</span><span class=\"me1\">permutations</span>\\  <span class=\"sy0\">.</span><span class=\"kw3\">grep</span><span class=\"br0\">(</span><span class=\"sy0\">*.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%%</span>  <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">say</span> <span class=\"sy0\">&lt;</span>police fire sanitation<span class=\"sy0\">&gt;</span> <span class=\"kw1\">Z</span><span class=\"sy0\">=&gt;</span> <span class=\"sy0\">.</span><span class=\"me1\">list</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Phix", "loc": 18, "block": "<pre class=\"text highlighted_source\">printf(1,\"Police  Sanitation  Fire\\n\")<br/>printf(1,\"------  ----------  ----\\n\")<br/>integer solutions = 0<br/>for police=2 to 7 by 2 do<br/>    for sanitation=1 to 7 do<br/>        if sanitation!=police then<br/>            integer fire = 12-(police+sanitation)<br/>            if fire&gt;=1<br/>            and fire&lt;=7<br/>            and fire!=police<br/>            and fire!=sanitation then<br/>                printf(1,\" \u00a0%d        \u00a0%d        \u00a0%d\\n\", {police,sanitation,fire})<br/>                solutions += 1<br/>            end if<br/>        end if<br/>    end for<br/>end for<br/>printf(1,\"\\n%d solutions found\\n\", solutions)</pre>"}, {"lang": "Python", "loc": 13, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">itertools</span> <span class=\"kw1\">import</span> permutations<br/>\u00a0<br/><span class=\"kw1\">def</span> solve<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    c<span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> f<span class=\"sy0\">,</span> s <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es0\">\\\\</span>,Police,Fire,Sanitation\"</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span>f<span class=\"st0\">\"{c:&gt;3}  {p:^6} {f:^4} {s:^10}\"</span><span class=\"br0\">)</span><br/>    c <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">for</span> p<span class=\"sy0\">,</span> f<span class=\"sy0\">,</span> s <span class=\"kw1\">in</span> permutations<span class=\"br0\">(</span><span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> r<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> p + s + f <span class=\"sy0\">==</span> <span class=\"nu0\">12</span> <span class=\"kw1\">and</span> p\u00a0% <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>            <span class=\"kw1\">print</span><span class=\"br0\">(</span>f<span class=\"st0\">\"{c:&gt;3}: {p:^6} {f:^4} {s:^10}\"</span><span class=\"br0\">)</span><br/>            c +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    solve<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 7, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(cons '(police fire sanitation)<br/>      (filter (\u03bb (pfs) (and (not (check-duplicates pfs))<br/>                            (= 12 (apply + pfs))<br/>                            pfs))<br/>              (cartesian-product (range 2 8 2) (range 1 8) (range 1 8))))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 9, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program finds/displays all possible variants of (3) department numbering  puzzle.*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'police fire sanitation'</span>                     <span class=\"coMULTI\">/*display a crude title for the output.*/</span><br/>  <span class=\"kw1\">do</span>     p=<span class=\"nu0\">2</span>   <span class=\"kw2\">to</span> <span class=\"nu0\">7</span>  <span class=\"kw2\">by</span> <span class=\"nu0\">2</span>                        <span class=\"coMULTI\">/*try numbers for the police department*/</span><br/>    <span class=\"kw1\">do</span>   f=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"nu0\">7</span>                              <span class=\"coMULTI\">/* \"     \"     \"   \"  fire        \"    */</span><br/>      <span class=\"kw1\">do</span> s=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"nu0\">7</span>;             $=p+f+s         <span class=\"coMULTI\">/* \"     \"     \"   \"  sanitation  \"    */</span><br/>      <span class=\"kw1\">if</span> f<span class=\"sy0\">\\</span>==p <span class=\"sy0\">&amp;</span> s<span class=\"sy0\">\\</span>==p <span class=\"sy0\">&amp;</span> s<span class=\"sy0\">\\</span>==f <span class=\"sy0\">&amp;</span> $==<span class=\"nu0\">12</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span>  <span class=\"kw6\">center</span><span class=\"br0\">(</span>p,<span class=\"nu0\">6</span><span class=\"br0\">)</span>   <span class=\"kw6\">center</span><span class=\"br0\">(</span>f,<span class=\"nu0\">5</span><span class=\"br0\">)</span>   <span class=\"kw6\">center</span><span class=\"br0\">(</span>s,<span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*s*/</span><br/>    <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*f*/</span><br/>  <span class=\"kw3\">end</span>       <span class=\"coMULTI\">/*p*/</span>                                <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>sanitation= 0<br/>see \"police fire sanitation\" + nl<br/>\u00a0<br/>for police = 2 to 7 step 2<br/>    for fire = 1 to 7<br/>        if fire = police<br/>           loop<br/>        ok<br/>        sanitation = 12 - police - fire<br/>        if sanitation = fire or sanitation = police <br/>           loop<br/>        ok  <br/>        if sanitation &gt;= 1 and sanitation &lt;= 7 <br/>           see \"   \" + police + \"      \" + fire + \"       \" + sanitation + nl<br/>        ok<br/>    next<br/>next<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 3, "block": "<pre class=\"ruby highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">7</span><span class=\"br0\">)</span>.<span class=\"me1\">to_a</span>.<span class=\"me1\">permutation</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"sy0\">|</span><span class=\"kw3\">p</span><span class=\"sy0\">|</span> <span class=\"kw3\">puts</span> <span class=\"kw3\">p</span>.<span class=\"me1\">join</span> <span class=\"kw1\">if</span> <span class=\"kw3\">p</span>.<span class=\"me1\">first</span>.<span class=\"me1\">even</span>? <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">p</span>.<span class=\"me1\">sum</span> == <span class=\"nu0\">12</span> <span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Rust", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>extern crate num_iter;<br/>\u00a0<br/>fn main()<br/>{<br/>\tprintln!(\"Police Sanitation Fire\");<br/>\tprintln!(\"----------------------\");<br/>\u00a0<br/>\tfor police in num_iter::range_step(2,7,2){<br/>\t\tfor sanitation in 1..8 {<br/>\t\t\tfor fire in 1..8 {<br/>\t\t\t\tif police!=sanitation &amp;&amp; sanitation!=fire &amp;&amp; fire!=police &amp;&amp; police+fire+sanitation==12 {<br/>\t\t\t\t\tprintln!(\"{:6}{:11}{:4}\",police,sanitation,fire);<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>\u00a0<br/>}<br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 11, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> depts <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  <span class=\"br0\">(</span><span class=\"nu0\">1</span> to <span class=\"nu0\">7</span><span class=\"br0\">)</span>.<span class=\"me1\">permutations</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span> n <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>n<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>,n<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>,n<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">toList</span>.<span class=\"me1\">distinct</span>  <span class=\"co1\">// All permutations of possible department numbers</span><br/>  .<span class=\"me1\">filter</span><span class=\"br0\">{</span> n <span class=\"sy0\">=&gt;</span> n.<span class=\"sy0\">_</span>1 <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span>                                       <span class=\"co1\">// Keep only even numbers favored by Police Chief</span><br/>  .<span class=\"me1\">filter</span><span class=\"br0\">{</span> n <span class=\"sy0\">=&gt;</span> n.<span class=\"sy0\">_</span>1 + n.<span class=\"sy0\">_</span>2 + n.<span class=\"sy0\">_</span>3 <span class=\"sy0\">==</span> <span class=\"nu0\">12</span> <span class=\"br0\">}</span>                            <span class=\"co1\">// Keep only numbers that add to 12</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">{</span><br/>println<span class=\"br0\">(</span> <span class=\"st0\">\"(Police, Sanitation, Fire)\"</span><span class=\"br0\">)</span><br/>println<span class=\"br0\">(</span> depts.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 7, "block": "<pre class=\"ruby highlighted_source\">@<span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span>combinations<span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"br0\">{</span><span class=\"sy0\">|*</span>a<span class=\"sy0\">|</span><br/>    a.<span class=\"me1\">sum</span> == <span class=\"nu0\">12</span> <span class=\"sy0\">||</span> <span class=\"kw1\">next</span><br/>    a.<span class=\"me1\">permutations</span> <span class=\"br0\">{</span><span class=\"sy0\">|*</span>b<span class=\"sy0\">|</span><br/>        b<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">is_even</span> <span class=\"sy0\">||</span> <span class=\"kw1\">next</span><br/>        say <span class=\"br0\">(</span><span class=\"sy0\">%</span>w<span class=\"br0\">(</span>police fire sanitation<span class=\"br0\">)</span> ~Z b <span class=\"sy0\">-&gt;</span> join<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"br0\">)</span></pre>"}, {"lang": "zkl", "loc": 3, "block": "<pre class=\"text highlighted_source\">Utils.Helpers.pickNFrom(3,[1..7].walk())    // 35 combos<br/>.filter(fcn(numbers){ numbers.sum(0)==12 }) // which all sum to 12 (==5)<br/>.println();</pre>"}]}