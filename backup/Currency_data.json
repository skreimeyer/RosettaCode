{"task": "Currency", "blocks": [{"lang": "AWK", "loc": 22, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -M -f CURRENCY.AWK</span><br/><span class=\"co1\"># using GNU Awk 4.1.1, API: 1.1 (GNU MPFR 3.1.2, GNU MP 5.1.2)</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    PREC = <span class=\"nu0\">100</span><br/>    hamburger_p = <span class=\"nu0\">5.50</span><br/>    hamburger_q = <span class=\"nu0\">4000000000000000</span><br/>    hamburger_v = hamburger_p <span class=\"sy3\">*</span> hamburger_q<br/>    milkshake_p = <span class=\"nu0\">2.86</span><br/>    milkshake_q = <span class=\"nu0\">2</span><br/>    milkshake_v = milkshake_p <span class=\"sy3\">*</span> milkshake_q<br/>    subtotal = hamburger_v <span class=\"sy3\">+</span> milkshake_v<br/>    tax = subtotal <span class=\"sy3\">*</span> .0765<br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%-9s\u00a0%8s\u00a0%18s\u00a0%22s<span class=\"es0\">\\n</span>\"</span>,<span class=\"st0\">\"item\"</span>,<span class=\"st0\">\"price\"</span>,<span class=\"st0\">\"quantity\"</span>,<span class=\"st0\">\"value\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"hamburger\u00a0%8.2f\u00a0%18d\u00a0%22.2f<span class=\"es0\">\\n</span>\"</span>,hamburger_p,hamburger_q,hamburger_v<span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"milkshake\u00a0%8.2f\u00a0%18d\u00a0%22.2f<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span>,milkshake_p,milkshake_q,milkshake_v<span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%37s\u00a0%22.2f<span class=\"es0\">\\n</span>\"</span>,<span class=\"st0\">\"subtotal\"</span>,subtotal<span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%37s\u00a0%22.2f<span class=\"es0\">\\n</span>\"</span>,<span class=\"st0\">\"tax\"</span>,tax<span class=\"br0\">)</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%37s\u00a0%22.2f<span class=\"es0\">\\n</span>\"</span>,<span class=\"st0\">\"total\"</span>,subtotal<span class=\"sy3\">+</span>tax<span class=\"br0\">)</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C", "loc": 1, "block": "<pre>Floating point number or Float for short, is an arbitrary precision mantissa with a limited precision exponent. The C data type for such objects is mpf_t. For example:\n\nmpf_t fp;\n</pre>"}, {"lang": "C#", "loc": 55, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> Currency<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            MenuItem hamburger <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> MenuItem<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Name <span class=\"sy0\">=</span> <span class=\"st0\">\"Hamburger\"</span>, Price <span class=\"sy0\">=</span> 5<span class=\"sy0\">.</span>5M <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>            MenuItem milkshake <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> MenuItem<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Name <span class=\"sy0\">=</span> <span class=\"st0\">\"Milkshake\"</span>, Price <span class=\"sy0\">=</span> 2<span class=\"sy0\">.</span>86M <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            IList<span class=\"sy0\">&lt;</span>CartItem<span class=\"sy0\">&gt;</span> cart <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span>CartItem<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            cart<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> CartItem<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> item <span class=\"sy0\">=</span> hamburger, quantity <span class=\"sy0\">=</span> <span class=\"nu0\">4000000000000000</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            cart<span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> CartItem<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> item <span class=\"sy0\">=</span> milkshake, quantity <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">decimal</span> total <span class=\"sy0\">=</span> CalculateTotal<span class=\"br0\">(</span>cart<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Format</span><span class=\"br0\">(</span><span class=\"st0\">\"Total before tax: {0:C}\"</span>, total<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"co1\">// Add Tax</span><br/>            <span class=\"kw4\">decimal</span> tax <span class=\"sy0\">=</span> total <span class=\"sy0\">*</span> 0<span class=\"sy0\">.</span>0765M<span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Format</span><span class=\"br0\">(</span><span class=\"st0\">\"Tax: {0:C}\"</span>, tax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            total <span class=\"sy0\">+=</span> tax<span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Format</span><span class=\"br0\">(</span><span class=\"st0\">\"Total with tax: {0:C}\"</span>, total<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">decimal</span> CalculateTotal<span class=\"br0\">(</span>IList<span class=\"sy0\">&lt;</span>CartItem<span class=\"sy0\">&gt;</span> cart<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">decimal</span> total <span class=\"sy0\">=</span> 0M<span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>CartItem item <span class=\"kw1\">in</span> cart<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                total <span class=\"sy0\">+=</span> item<span class=\"sy0\">.</span><span class=\"me1\">quantity</span> <span class=\"sy0\">*</span> item<span class=\"sy0\">.</span><span class=\"me1\">item</span><span class=\"sy0\">.</span><span class=\"me1\">Price</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">return</span> total<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw4\">struct</span> MenuItem<br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">string</span> Name <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">decimal</span> Price <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw4\">struct</span> CartItem<br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">public</span> MenuItem item <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">decimal</span> quantity <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 11, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span>require '<span class=\"br0\">[</span>clojurewerkz<span class=\"sy0\">.</span>money<span class=\"sy0\">.</span>amounts   \u00a0:<span class=\"me1\">as</span> ma<span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>require '<span class=\"br0\">[</span>clojurewerkz<span class=\"sy0\">.</span>money<span class=\"sy0\">.</span>currencies\u00a0:<span class=\"me1\">as</span> mc<span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>require '<span class=\"br0\">[</span>clojurewerkz<span class=\"sy0\">.</span>money<span class=\"sy0\">.</span><span class=\"kw1\">format</span>    \u00a0:<span class=\"me1\">as</span> mf<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>burgers <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>multiply <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>amount<span class=\"sy0\">-</span>of mc<span class=\"sy0\">/</span>USD <span class=\"nu0\">5.50</span><span class=\"br0\">)</span> <span class=\"nu0\">4000000000000000</span><span class=\"br0\">)</span> <br/>      milkshakes <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>multiply <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>amount<span class=\"sy0\">-</span>of mc<span class=\"sy0\">/</span>USD <span class=\"nu0\">2.86</span><span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>      pre<span class=\"sy0\">-</span>tax <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>plus burgers milkshakes<span class=\"br0\">)</span><br/>      tax <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>multiply pre<span class=\"sy0\">-</span>tax <span class=\"nu0\">0.0765</span>\u00a0:<span class=\"me1\">up</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>println <span class=\"st0\">\"Total before tax: \"</span> <span class=\"br0\">(</span>mf<span class=\"sy0\">/</span><span class=\"kw1\">format</span> pre<span class=\"sy0\">-</span>tax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>println <span class=\"st0\">\"             Tax: \"</span> <span class=\"br0\">(</span>mf<span class=\"sy0\">/</span><span class=\"kw1\">format</span> tax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>println <span class=\"st0\">\"  Total with tax: \"</span> <span class=\"br0\">(</span>mf<span class=\"sy0\">/</span><span class=\"kw1\">format</span> <span class=\"br0\">(</span>ma<span class=\"sy0\">/</span>plus pre<span class=\"sy0\">-</span>tax tax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 28, "block": "<pre class=\"cobol highlighted_source\">       &gt;&gt;<span class=\"kw1\">SOURCE</span> FREE<br/><span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> currency-example<span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  Burger-Price                        CONSTANT <span class=\"nu0\">5.50</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  Milkshake-Price                     CONSTANT <span class=\"nu0\">2.86</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  num-burgers                         <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">4000000000000000</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  num-milkshakes                      <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  tax                                 <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span>V99<span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  tax-edited                          <span class=\"kw3\">PIC</span> $<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"br0\">)</span><span class=\"nu0\">9.99</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  Tax-Rate                            CONSTANT <span class=\"nu0\">7.65</span><span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  total                               <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span>V99<span class=\"sy0\">.</span><br/><span class=\"nu0\">01</span>  total-edited                        <span class=\"kw3\">PIC</span> $<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"br0\">)</span><span class=\"nu0\">9.99</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>    <span class=\"kw2\">COMPUTE</span> total<span class=\"sy0\">,</span> total-edited <span class=\"sy0\">=</span><br/>        num-burgers<span class=\"sy0\"> * </span>Burger-Price<span class=\"sy0\"> + </span>num-milkshakes<span class=\"sy0\"> * </span>Milkshake-Price<br/>    <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Total before tax: \"</span> total-edited<br/>\u00a0<br/>    <span class=\"kw2\">COMPUTE</span> tax<span class=\"sy0\">,</span> tax-edited <span class=\"sy0\">=</span> total<span class=\"sy0\"> * </span><span class=\"br0\">(</span>Tax-Rate<span class=\"sy0\"> / </span><span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"             Tax: \"</span> tax-edited<br/>\u00a0<br/>    <span class=\"kw2\">ADD</span> tax <span class=\"kw2\">TO</span> total <span class=\"kw2\">GIVING</span> total-edited<br/>    <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  Total with tax: \"</span> total-edited<br/>    <span class=\"sy0\">.</span><br/><span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> currency-example<span class=\"sy0\">.</span></pre>"}, {"lang": "Factor", "loc": 11, "block": "<pre class=\"text highlighted_source\">USING: combinators.smart io kernel math math.functions money\u00a0;<br/>\u00a0<br/>10 15 ^ 4 * 5+50/100 *\u00a0! hamburger subtotal<br/>2 2+86/100 *          \u00a0! milkshake subtotal<br/>+                     \u00a0! subtotal<br/>dup DECIMAL: 0.0765 * \u00a0! tax<br/>[ + ] preserving      \u00a0! total<br/>\u00a0<br/>\"Total before tax: \" write [ money. ] 2dip<br/>\"Tax: \" write [ money. ] dip<br/>\"Total with tax: \" write money.</pre>"}, {"lang": "Go", "loc": 88, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"log\"</span><br/>    <span class=\"st0\">\"math/big\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// DC for dollars and cents.  Value is an integer number of cents.</span><br/><span class=\"kw1\">type</span> DC <span class=\"kw4\">int64</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>dc DC<span class=\"sy1\">)</span> String<span class=\"sy1\">()</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>    d <span class=\"sy2\">:=</span> dc <span class=\"sy3\">/</span> <span class=\"nu0\">100</span><br/>    <span class=\"kw1\">if</span> dc &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        dc <span class=\"sy2\">=</span> <span class=\"sy3\">-</span>dc<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> fmt<span class=\"sy3\">.</span>Sprintf<span class=\"sy1\">(</span><span class=\"st0\">\"%d.%02d\"</span><span class=\"sy1\">,</span> d<span class=\"sy1\">,</span> dc<span class=\"sy3\">%</span><span class=\"nu0\">100</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Extend returns extended price of a unit price.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>dc DC<span class=\"sy1\">)</span> Extend<span class=\"sy1\">(</span>n <span class=\"kw4\">int</span><span class=\"sy1\">)</span> DC <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> dc <span class=\"sy3\">*</span> DC<span class=\"sy1\">(</span>n<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> one <span class=\"sy2\">=</span> big<span class=\"sy3\">.</span>NewInt<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/><span class=\"kw1\">var</span> hundred <span class=\"sy2\">=</span> big<span class=\"sy3\">.</span>NewRat<span class=\"sy1\">(</span><span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// ParseDC parses dollars and cents as a string into a DC.</span><br/><span class=\"kw4\">func</span> ParseDC<span class=\"sy1\">(</span>s <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>DC<span class=\"sy1\">,</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    r<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> <span class=\"kw3\">new</span><span class=\"sy1\">(</span>big<span class=\"sy3\">.</span>Rat<span class=\"sy1\">)</span><span class=\"sy3\">.</span>SetString<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span><br/>    <span class=\"sy1\">}</span><br/>    r<span class=\"sy3\">.</span>Mul<span class=\"sy1\">(</span>r<span class=\"sy1\">,</span> hundred<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> r<span class=\"sy3\">.</span>Denom<span class=\"sy1\">()</span><span class=\"sy3\">.</span>Cmp<span class=\"sy1\">(</span>one<span class=\"sy1\">)</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> DC<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>Num<span class=\"sy1\">()</span><span class=\"sy3\">.</span>Int64<span class=\"sy1\">()),</span> <span class=\"kw2\">true</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// TR for tax rate.  Value is an an exact rational.</span><br/><span class=\"kw1\">type</span> TR <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    <span class=\"sy3\">*</span>big<span class=\"sy3\">.</span>Rat<br/><span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> NewTR<span class=\"sy1\">()</span> TR <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> TR<span class=\"sy1\">{</span><span class=\"kw3\">new</span><span class=\"sy1\">(</span>big<span class=\"sy3\">.</span>Rat<span class=\"sy1\">)}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// SetString overrides Rat.SetString to return the TR type.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>tr TR<span class=\"sy1\">)</span> SetString<span class=\"sy1\">(</span>s <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>TR<span class=\"sy1\">,</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> _<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> tr<span class=\"sy3\">.</span>Rat<span class=\"sy3\">.</span>SetString<span class=\"sy1\">(</span>s<span class=\"sy1\">);</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> TR<span class=\"sy1\">{},</span> <span class=\"kw2\">false</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> tr<span class=\"sy1\">,</span> <span class=\"kw2\">true</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> half <span class=\"sy2\">=</span> big<span class=\"sy3\">.</span>NewRat<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// Tax computes a tax amount, rounding to the nearest cent.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>tr TR<span class=\"sy1\">)</span> Tax<span class=\"sy1\">(</span>dc DC<span class=\"sy1\">)</span> DC <span class=\"sy1\">{</span><br/>    r <span class=\"sy2\">:=</span> big<span class=\"sy3\">.</span>NewRat<span class=\"sy1\">(</span><span class=\"kw4\">int64</span><span class=\"sy1\">(</span>dc<span class=\"sy1\">),</span> <span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>    r<span class=\"sy3\">.</span>Add<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>Mul<span class=\"sy1\">(</span>r<span class=\"sy1\">,</span> tr<span class=\"sy3\">.</span>Rat<span class=\"sy1\">),</span> half<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">return</span> DC<span class=\"sy1\">(</span><span class=\"kw3\">new</span><span class=\"sy1\">(</span><a href=\"http://golang.org/search?q=big.Int\"><span class=\"kw5\">big.<span class=\"me1\">Int</span></span></a><span class=\"sy1\">)</span><span class=\"sy3\">.</span>Div<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>Num<span class=\"sy1\">(),</span> r<span class=\"sy3\">.</span>Denom<span class=\"sy1\">())</span><span class=\"sy3\">.</span>Int64<span class=\"sy1\">())</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    hamburgerPrice<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> ParseDC<span class=\"sy1\">(</span><span class=\"st0\">\"5.50\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        log<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span><span class=\"st0\">\"Invalid hamburger price\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    milkshakePrice<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> ParseDC<span class=\"sy1\">(</span><span class=\"st0\">\"2.86\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        log<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span><span class=\"st0\">\"Invalid milkshake price\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    taxRate<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> NewTR<span class=\"sy1\">()</span><span class=\"sy3\">.</span><span class=\"me1\">SetString</span><span class=\"sy1\">(</span><span class=\"st0\">\"0.0765\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        log<span class=\"sy3\">.</span>Fatal<span class=\"sy1\">(</span><span class=\"st0\">\"Invalid tax rate\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    totalBeforeTax <span class=\"sy2\">:=</span> hamburgerPrice<span class=\"sy3\">.</span>Extend<span class=\"sy1\">(</span><span class=\"nu0\">4000000000000000</span><span class=\"sy1\">)</span> <span class=\"sy3\">+</span><br/>        milkshakePrice<span class=\"sy3\">.</span>Extend<span class=\"sy1\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span><br/>    tax <span class=\"sy2\">:=</span> taxRate<span class=\"sy3\">.</span>Tax<span class=\"sy1\">(</span>totalBeforeTax<span class=\"sy1\">)</span><br/>    total <span class=\"sy2\">:=</span> totalBeforeTax <span class=\"sy3\">+</span> tax<br/>\u00a0<br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Total before tax:\u00a0%22s<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> totalBeforeTax<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"             Tax:\u00a0%22s<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> tax<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"           Total:\u00a0%22s<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> total<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 20, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Fixed<br/><span class=\"kw1\">import</span> Text<span class=\"sy0\">.</span>Printf<br/>\u00a0<br/><span class=\"kw1\">type</span> Percent <span class=\"sy0\">=</span> Centi<br/><span class=\"kw1\">type</span> Dollars <span class=\"sy0\">=</span> Centi<br/>\u00a0<br/>tax <span class=\"sy0\">::</span> Percent <span class=\"sy0\">-&gt;</span> Dollars <span class=\"sy0\">-&gt;</span> Dollars<br/>tax rate <span class=\"sy0\">=</span> MkFixed <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:round\"><span class=\"kw3\">round</span></a> <span class=\"sy0\">.</span> <span class=\"br0\">(</span>rate <span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>\u00a0<br/>printAmount <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> Dollars <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>printAmount name <span class=\"sy0\">=</span> printf <span class=\"st0\">\"%-10s\u00a0%20s<span class=\"es0\">\\n</span>\"</span> name <span class=\"sy0\">.</span> showFixed False<br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">let</span> subtotal <span class=\"sy0\">=</span> <span class=\"nu0\">4000000000000000</span> <span class=\"sy0\">*</span> <span class=\"nu0\">5.50</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2.86</span><br/>      tx       <span class=\"sy0\">=</span> tax <span class=\"nu0\">7.65</span> subtotal<br/>      total    <span class=\"sy0\">=</span> subtotal <span class=\"sy0\">+</span> tx<br/>  printAmount <span class=\"st0\">\"Subtotal\"</span> subtotal<br/>  printAmount <span class=\"st0\">\"Tax\"</span>      tx<br/>  printAmount <span class=\"st0\">\"Total\"</span>    total</pre>"}, {"lang": "J", "loc": 24, "block": "<pre class=\"j highlighted_source\">require <span class=\"st_h\">'format/printf'</span><br/>fmtD=: <span class=\"nu0\">0j2</span>&amp;\":     <span class=\"co1\">NB. format rational as decimal</span><br/>\u00a0<br/>Items=:  \u00a0;:          <span class=\"st_h\">'Hamburger     Milkshake'</span><br/>Quantities=: x:   <span class=\"nu0\">4000000000000000</span>      <span class=\"nu0\">2</span><br/>Prices=:   x:           <span class=\"nu0\">5.50</span>          <span class=\"nu0\">2.86</span><br/>Tax_rate=: x:  <span class=\"nu0\">0.0765</span><br/>Values=: Quantities * Prices<br/>Subtotal=: +/ Values<br/>Tax=: Tax_rate * Subtotal<br/>Total=: Subtotal + Tax<br/>\u00a0<br/>OutputTemplate=: noun define<br/>Item          Price            Quantity          Value<br/>%9s\u00a0%8s\u00a0%20d\u00a0%22s<br/>%9s\u00a0%8s\u00a0%20d\u00a0%22s<br/>                               -------------------------------<br/>                               Subtotal: \u00a0%20s<br/>                                    Tax: \u00a0%20s<br/>                                  Total: \u00a0%20s<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>Vals=: <span class=\"sy0\">(</span>,Items ,. <span class=\"sy0\">(</span>fmtD&amp;.&gt; Prices<span class=\"sy0\">)</span> ,. <span class=\"sy0\">(</span>&lt;\"<span class=\"nu0\">0</span> Quantities<span class=\"sy0\">)</span> ,. <span class=\"sy0\">(</span>fmtD&amp;.&gt; Values<span class=\"sy0\">))</span> , fmtD&amp;.&gt; Subtotal,Tax,Total<br/>OutputTemplate printf Vals</pre>"}, {"lang": "Java", "loc": 39, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.math.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Currency <span class=\"br0\">{</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> taxrate <span class=\"sy0\">=</span> <span class=\"st0\">\"7.65\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">enum</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amenuitem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MenuItem</span></a> <span class=\"br0\">{</span><br/>\u00a0<br/>        Hamburger<span class=\"br0\">(</span><span class=\"st0\">\"5.50\"</span><span class=\"br0\">)</span>, Milkshake<span class=\"br0\">(</span><span class=\"st0\">\"2.86\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amenuitem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MenuItem</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> p<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            price <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">public</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a> price<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Alocale+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Locale</span></a>.<span class=\"me1\">setDefault</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Alocale+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Locale</span></a>.<span class=\"me1\">ENGLISH</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        MathContext mc <span class=\"sy0\">=</span> MathContext.<span class=\"me1\">DECIMAL128</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        Map<span class=\"sy0\">&lt;</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amenuitem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MenuItem</span></a>, BigDecimal<span class=\"sy0\">&gt;</span> order <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> HashMap<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        order.<span class=\"me1\">put</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amenuitem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MenuItem</span></a>.<span class=\"me1\">Hamburger</span>, <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a><span class=\"br0\">(</span><span class=\"st0\">\"4000000000000000\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        order.<span class=\"me1\">put</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amenuitem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MenuItem</span></a>.<span class=\"me1\">Milkshake</span>, <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a><span class=\"br0\">(</span><span class=\"st0\">\"2\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a> subtotal <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a>.<span class=\"me1\">ZERO</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amenuitem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MenuItem</span></a> it <span class=\"sy0\">:</span> order.<span class=\"me1\">keySet</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            subtotal <span class=\"sy0\">=</span> subtotal.<span class=\"me1\">add</span><span class=\"br0\">(</span>it.<span class=\"me1\">price</span>.<span class=\"me1\">multiply</span><span class=\"br0\">(</span>order.<span class=\"me1\">get</span><span class=\"br0\">(</span>it<span class=\"br0\">)</span>, mc<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a> tax <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a><span class=\"br0\">(</span>taxrate, mc<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        tax <span class=\"sy0\">=</span> tax.<span class=\"me1\">divide</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abigdecimal+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigDecimal</span></a><span class=\"br0\">(</span><span class=\"st0\">\"100\"</span><span class=\"br0\">)</span>, mc<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        tax <span class=\"sy0\">=</span> subtotal.<span class=\"me1\">multiply</span><span class=\"br0\">(</span>tax, mc<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Subtotal:\u00a0%20.2f%n\"</span>, subtotal<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"     Tax:\u00a0%20.2f%n\"</span>, tax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"   Total:\u00a0%20.2f%n\"</span>, subtotal.<span class=\"me1\">add</span><span class=\"br0\">(</span>tax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 25, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">const</span> money <span class=\"sy0\">=</span> require<span class=\"br0\">(</span><span class=\"st0\">'money-math'</span><span class=\"br0\">)</span>                                            <br/>\u00a0<br/>let hamburgers <span class=\"sy0\">=</span> <span class=\"nu0\">4000000000000000</span>                                              <br/>let hamburgerPrice <span class=\"sy0\">=</span> <span class=\"nu0\">5.50</span>                                                      <br/>\u00a0<br/>let shakes <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>                                                                 <br/>let shakePrice <span class=\"sy0\">=</span> <span class=\"nu0\">2.86</span>                                                          <br/>\u00a0<br/>let tax <span class=\"sy0\">=</span> <span class=\"nu0\">7.65</span>                                                                 <br/>\u00a0<br/>let hamburgerTotal <span class=\"sy0\">=</span> money.<span class=\"me1\">mul</span><span class=\"br0\">(</span>hamburgers.<span class=\"me1\">toFixed</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> money.<span class=\"me1\">floatToAmount</span><span class=\"br0\">(</span>hamburgerPrice<span class=\"br0\">)</span><span class=\"br0\">)</span>                                                                     <br/>let shakeTotal <span class=\"sy0\">=</span> money.<span class=\"me1\">mul</span><span class=\"br0\">(</span>shakes.<span class=\"me1\">toFixed</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> money.<span class=\"me1\">floatToAmount</span><span class=\"br0\">(</span>shakePrice<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0<br/>let subTotal <span class=\"sy0\">=</span> money.<span class=\"me1\">add</span><span class=\"br0\">(</span>hamburgerTotal<span class=\"sy0\">,</span> shakeTotal<span class=\"br0\">)</span>                           <br/>\u00a0<br/>let taxTotal <span class=\"sy0\">=</span> money.<span class=\"me1\">percent</span><span class=\"br0\">(</span>subTotal<span class=\"sy0\">,</span> tax<span class=\"br0\">)</span>                                    <br/>\u00a0<br/>let total <span class=\"sy0\">=</span> money.<span class=\"me1\">add</span><span class=\"br0\">(</span>subTotal<span class=\"sy0\">,</span> taxTotal<span class=\"br0\">)</span>                                      <br/>\u00a0<br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">'Hamburger Total:'</span><span class=\"sy0\">,</span> hamburgerTotal<span class=\"br0\">)</span>                                <br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">'Shake Total:'</span><span class=\"sy0\">,</span> shakeTotal<span class=\"br0\">)</span>                                        <br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">'Sub Total:'</span><span class=\"sy0\">,</span> subTotal<span class=\"br0\">)</span>                                            <br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">'Tax:'</span><span class=\"sy0\">,</span> taxTotal<span class=\"br0\">)</span>                                                  <br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">'Total:'</span><span class=\"sy0\">,</span> total<span class=\"br0\">)</span>          <br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 11, "block": "<pre class=\"text highlighted_source\">p  = [big\"5.50\", big\"2.86\"]<br/>q  = [4000000000000000, 2]<br/>tr = big\"0.0765\"<br/>\u00a0<br/>beftax = p' * q<br/>tax    = beftax * tr<br/>afttax = beftax + tax<br/>\u00a0<br/>@printf \" - tot. before tax:\u00a0%20.2f \\$\\n\" beftax<br/>@printf \" -             tax:\u00a0%20.2f \\$\\n\" tax<br/>@printf \" - tot. after  tax:\u00a0%20.2f \\$\\n\" afttax</pre>"}, {"lang": "Kotlin", "loc": 19, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">math</span>.<span class=\"me1\">BigDecimal</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">math</span>.<span class=\"me1\">MathContext</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> mc <span class=\"sy0\">=</span> MathContext.<span class=\"me1\">DECIMAL128</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> nHamburger  <span class=\"sy0\">=</span> BigDecimal<span class=\"br0\">(</span><span class=\"st0\">\"4000000000000000\"</span>, mc<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pHamburger  <span class=\"sy0\">=</span> BigDecimal<span class=\"br0\">(</span><span class=\"st0\">\"5.50\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> nMilkshakes <span class=\"sy0\">=</span> BigDecimal<span class=\"br0\">(</span><span class=\"st0\">\"2\"</span>, mc<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pMilkshakes <span class=\"sy0\">=</span> BigDecimal<span class=\"br0\">(</span><span class=\"st0\">\"2.86\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> taxRate     <span class=\"sy0\">=</span> BigDecimal<span class=\"br0\">(</span><span class=\"st0\">\"0.0765\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> price <span class=\"sy0\">=</span> nHamburger <span class=\"sy0\">*</span> pHamburger + nMilkshakes <span class=\"sy0\">*</span> pMilkshakes<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tax <span class=\"sy0\">=</span> price <span class=\"sy0\">*</span> taxRate<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> fmt <span class=\"sy0\">=</span> <span class=\"st0\">\"%20.2f\"</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Total price before tax\u00a0: ${fmt.format(price)}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Tax thereon @ 7.65%   \u00a0: ${fmt.format(tax)}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Total price after tax \u00a0: ${fmt.format(price + tax)}\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 67, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module Currency_Task {<br/>      Locale 1033<br/>      Font \"Courier New\"<br/>      Form 80,32<br/>      \\\\Decimal type<br/>      <a class=\"__cf_email__\" data-cfemail=\"fd959c909f888f9a988f8ec0c9cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdbd\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>      \\\\ Currency type<br/>      hamburger_price=5.5#<br/>      milkshakes=2#<br/>      milkshake_price=2.86#<br/>      tax_rate=0.0765#<br/>      \\\\ Using Columns with variable width in console<br/>      PrHeadLine(\"Item\",\"price\",\"quantity\", \"value\")<br/>      PrLine(\"hamburger\",hamburger_price,hamburgers,hamburgers*hamburger_price)<br/>      PrLine(\"milkshake\", milkshake_price,milkshakes,milkshakes*milkshake_price)<br/>      PrResults( \"subtotal\", hamburgers*hamburger_price+milkshakes*milkshake_price)<br/>      PrResults(\"tax\", (hamburgers*hamburger_price+milkshakes*milkshake_price)*tax_rate)<br/>      \\\\ 1 is double by default we can use 1# or <a class=\"__cf_email__\" data-cfemail=\"132253\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>      PrResults(\"total\", (hamburgers*hamburger_price+milkshakes*milkshake_price)*(tax_rate+1))<br/>\u00a0<br/>      \\\\ Using variables for partial calculations. They get type from expression result<br/>      h_p_q=hamburgers*hamburger_price<br/>      m_p_q=milkshakes*milkshake_price<br/>\u00a0<br/>      \\\\ Using format$ to prepare final strings<br/>      Print format$(\"{0:15}{1:-8}{2:-25}{3:-25}\",\"Item\", \"price\", \"quantity\", \"value\")<br/>      Print format$(\"{0:15}{1:2:-8}{2:0:-25}{3:2:-25}\",\"hamburger\",hamburger_price,hamburgers, h_p_q)<br/>      Print format$(\"{0:15}{1:2:-8}{2:0:-25}{3:2:-25}\",\"milkshake\", milkshake_price,milkshakes,m_p_q)<br/>      Print format$(\"{0:-48}{1:2:-25}\",\"subtotal\", h_p_q+m_p_q)<br/>      Print format$(\"{0:-48}{1:2:-25}\",\"tax\", (h_p_q+m_p_q)*tax_rate)<br/>      Print format$(\"{0:-48}{1:2:-25}\",\"total\", (h_p_q+m_p_q)*(tax_rate+1))<br/>      \\\\ Another time to feed Document to export to clipboard<br/>      Document Doc$=format$(\"{0:15}{1:-8}{2:-25}{3:-25}\",\"Item\", \"price\", \"quantity\", \"value\")+{<br/>      }+format$(\"{0:15}{1:2:-8}{2:0:-25}{3:2:-25}\",\"hamburger\",hamburger_price,hamburgers, h_p_q)+{<br/>      }+format$(\"{0:15}{1:2:-8}{2:0:-25}{3:2:-25}\",\"milkshake\", milkshake_price,milkshakes,m_p_q)+{<br/>      }+format$(\"{0:-48}{1:2:-25}\",\"subtotal\", h_p_q+m_p_q)+{<br/>      }+format$(\"{0:-48}{1:2:-25}\",\"tax\", (h_p_q+m_p_q)*tax_rate)+{<br/>      }+format$(\"{0:-48}{1:2:-25}\",\"total\", (h_p_q+m_p_q)*(tax_rate+1))+{<br/>      }<br/>      clipboard Doc$<br/>      \\\\ one line user function definition<br/>      \\\\ x get type from passed value<br/>      Def ExpressionType$(x)=Type$(X)<br/>      \\\\ Check Expression final type<br/>      Print ExpressionType$(hamburgers)=\"Decimal\"<br/>      Print ExpressionType$(milkshakes)=\"Currency\"<br/>      Print ExpressionType$(h_p_q)=\"Decimal\"<br/>      Print ExpressionType$(m_p_q)=\"Currency\"<br/>      Print ExpressionType$((h_p_q+m_p_q)*tax_rate)=\"Decimal\"<br/>      Print ExpressionType$((h_p_q+m_p_q)*(tax_rate+1))=\"Decimal\"<br/>\u00a0<br/>      Sub PrHeadLine(a$,b$,c$,d$)<br/>            Print Part  $(1,15),a$,$(3,8),b$, $(3,25),c$, $(3,25),d$<br/>            Print<br/>      End Sub<br/>      Sub PrLine(a$,b,c,d)<br/>            Print Part  $(1,15),a$,$(\"0.00\"),$(3,8),b, $(\"0\"),$(3,25),c,$(\"0.00\"), $(3,25),d<br/>            Print<br/>      End Sub<br/>      Sub PrResults(a$,b)<br/>            Print Part  $(3,48),a$,$(\"0.00\"),$(3,25),b<br/>            Print<br/>      End Sub<br/>}<br/>Currency_Task<br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 32, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Math<span class=\"sy0\">::</span><span class=\"me2\">Decimal</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>dec_canonise dec_add dec_mul dec_rndiv_and_rem<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">@check</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>    <span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Hamburger <span class=\"nu0\">5.50</span> <span class=\"nu0\">4000000000000000</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Milkshake <span class=\"nu0\">2.86</span>                <span class=\"nu0\">2</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$fmt</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"%-10s\u00a0%8s\u00a0%18s\u00a0%22s<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"sy0\">&lt;</span>Item Price Quantity Extension<span class=\"sy0\">&gt;;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$subtotal</span> <span class=\"sy0\">=</span> dec_canonise<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"re0\">$line</span> <span class=\"br0\">(</span><span class=\"re0\">@check</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$item</span><span class=\"sy0\">,</span><span class=\"re0\">$price</span><span class=\"sy0\">,</span><span class=\"re0\">$quant</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$line</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$dp</span> <span class=\"sy0\">=</span> dec_canonise<span class=\"br0\">(</span><span class=\"re0\">$price</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$dq</span> <span class=\"sy0\">=</span> dec_canonise<span class=\"br0\">(</span><span class=\"re0\">$quant</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$extension</span> <span class=\"sy0\">=</span> dec_mul<span class=\"br0\">(</span><span class=\"re0\">$dp</span><span class=\"sy0\">,</span><span class=\"re0\">$dq</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$subtotal</span> <span class=\"sy0\">=</span> dec_add<span class=\"br0\">(</span><span class=\"re0\">$subtotal</span><span class=\"sy0\">,</span> <span class=\"re0\">$extension</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"re0\">$item</span><span class=\"sy0\">,</span> <span class=\"re0\">$price</span><span class=\"sy0\">,</span> <span class=\"re0\">$quant</span><span class=\"sy0\">,</span> rnd<span class=\"br0\">(</span><span class=\"re0\">$extension</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$rate</span>  <span class=\"sy0\">=</span> dec_canonise<span class=\"br0\">(</span><span class=\"nu0\">0.0765</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$tax</span>   <span class=\"sy0\">=</span> dec_mul<span class=\"br0\">(</span><span class=\"re0\">$subtotal</span><span class=\"sy0\">,</span><span class=\"re0\">$rate</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> dec_add<span class=\"br0\">(</span><span class=\"re0\">$subtotal</span><span class=\"sy0\">,</span><span class=\"re0\">$tax</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span>          <span class=\"st_h\">'-----------------'</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Subtotal '</span><span class=\"sy0\">,</span> rnd<span class=\"br0\">(</span><span class=\"re0\">$subtotal</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Tax '</span><span class=\"sy0\">,</span>      rnd<span class=\"br0\">(</span><span class=\"re0\">$tax</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Total '</span><span class=\"sy0\">,</span>    rnd<span class=\"br0\">(</span><span class=\"re0\">$total</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> rnd <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$q</span><span class=\"sy0\">,</span> <span class=\"re0\">$r</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> dec_rndiv_and_rem<span class=\"br0\">(</span><span class=\"st0\">\"FLR\"</span><span class=\"sy0\">,</span> <span class=\"co5\">@_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$q</span> <span class=\"sy0\">.</span> <a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/sprintf.html\"><span class=\"kw3\">sprintf</span></a> <span class=\"st0\">\"%.2f\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$r</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 28, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">@check</span> <span class=\"sy0\">=</span> q<span class=\"sy0\">:</span>to<span class=\"sy0\">/</span><span class=\"kw2\">END</span><span class=\"sy0\">/.</span><span class=\"me1\">lines</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"sy0\">.</span><span class=\"kw3\">split</span><span class=\"br0\">(</span><span class=\"co2\">/\\s+/</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    Hamburger   <span class=\"nu0\">5.50</span>    <span class=\"nu0\">4000000000000000</span><br/>    Milkshake   <span class=\"nu0\">2.86</span>    <span class=\"nu0\">2</span><br/>    <span class=\"kw2\">END</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$tax</span><span class=\"sy0\">-</span>rate <span class=\"sy0\">=</span> <span class=\"nu0\">0.0765</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$fmt</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"%-10s\u00a0%8s\u00a0%18s\u00a0%22s<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">printf</span> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"sy0\">&lt;</span>Item Price Quantity Extension<span class=\"sy0\">&gt;;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$subtotal</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@check</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"re0\">$item</span><span class=\"sy0\">,</span><span class=\"re0\">$price</span><span class=\"sy0\">,</span><span class=\"re0\">$quant</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$extension</span> <span class=\"sy0\">=</span> <span class=\"re0\">$price</span> <span class=\"sy0\">*</span> <span class=\"re0\">$quant</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">printf</span> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"re0\">$item</span><span class=\"sy0\">,</span> <span class=\"re0\">$price</span><span class=\"sy0\">,</span> <span class=\"re0\">$quant</span><span class=\"sy0\">,</span> fix2<span class=\"br0\">(</span><span class=\"re0\">$extension</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$extension</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">printf</span> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'-----------------'</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">printf</span> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Subtotal '</span><span class=\"sy0\">,</span> <span class=\"re0\">$subtotal</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$tax</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$subtotal</span> <span class=\"sy0\">*</span> <span class=\"re0\">$tax</span><span class=\"sy0\">-</span>rate<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">round</span><span class=\"br0\">(</span><span class=\"nu0\">0.01</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">printf</span> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Tax '</span><span class=\"sy0\">,</span> <span class=\"re0\">$tax</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$subtotal</span> <span class=\"sy0\">+</span> <span class=\"re0\">$tax</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">printf</span> <span class=\"re0\">$fmt</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Total '</span><span class=\"sy0\">,</span> <span class=\"re0\">$total</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># make up for lack of a Rat fixed-point printf format</span><br/><span class=\"kw2\">sub</span> fix2<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"nu0\">0.001</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">subst</span><span class=\"br0\">(</span><span class=\"co2\">/ &lt;?after \\.\\d\\d&gt; .* $ /</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"br0\">)</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 7, "block": "<pre class=\"text highlighted_source\">include builtins\\bigatom.e<br/>bigatom total_price = ba_add(ba_multiply(ba_new(\"4000000000000000\"),5.5),ba_multiply(2,ba_new(\"2.86\"))),<br/>        tax = ba_multiply(total_price,ba_new(\"0.0765\")),<br/>        total = ba_add(total_price,tax)<br/>ba_printf(1,\"Total before tax:%21.2B\\n\",total_price)<br/>ba_printf(1,\"             Tax:%21.2B\\n\",tax)<br/>ba_printf(1,\"           Total:%21.2B\\n\",total)</pre>"}, {"lang": "Python", "loc": 26, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">decimal</span> <span class=\"kw1\">import</span> Decimal <span class=\"kw1\">as</span> D<br/><span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> namedtuple<br/>\u00a0<br/>Item <span class=\"sy0\">=</span> namedtuple<span class=\"br0\">(</span><span class=\"st0\">'Item'</span><span class=\"sy0\">,</span> <span class=\"st0\">'price, quant'</span><span class=\"br0\">)</span><br/>\u00a0<br/>items <span class=\"sy0\">=</span> <span class=\"kw2\">dict</span><span class=\"br0\">(</span> hamburger<span class=\"sy0\">=</span>Item<span class=\"br0\">(</span>D<span class=\"br0\">(</span><span class=\"st0\">'5.50'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> D<span class=\"br0\">(</span><span class=\"st0\">'4000000000000000'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>              milkshake<span class=\"sy0\">=</span>Item<span class=\"br0\">(</span>D<span class=\"br0\">(</span><span class=\"st0\">'2.86'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> D<span class=\"br0\">(</span><span class=\"st0\">'2'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>tax_rate <span class=\"sy0\">=</span> D<span class=\"br0\">(</span><span class=\"st0\">'0.0765'</span><span class=\"br0\">)</span><br/>\u00a0<br/>fmt <span class=\"sy0\">=</span> <span class=\"st0\">\"%-10s\u00a0%8s\u00a0%18s\u00a0%22s\"</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"kw2\">tuple</span><span class=\"br0\">(</span><span class=\"st0\">'Item Price Quantity Extension'</span>.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>total_before_tax <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">for</span> item<span class=\"sy0\">,</span> <span class=\"br0\">(</span>price<span class=\"sy0\">,</span> quant<span class=\"br0\">)</span> <span class=\"kw1\">in</span> <span class=\"kw2\">sorted</span><span class=\"br0\">(</span>items.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>    ext <span class=\"sy0\">=</span> price * quant<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"br0\">(</span>item<span class=\"sy0\">,</span> price<span class=\"sy0\">,</span> quant<span class=\"sy0\">,</span> ext<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    total_before_tax +<span class=\"sy0\">=</span> ext<br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">'--------------------'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">'subtotal'</span><span class=\"sy0\">,</span> total_before_tax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>tax <span class=\"sy0\">=</span> <span class=\"br0\">(</span>tax_rate * total_before_tax<span class=\"br0\">)</span>.<span class=\"me1\">quantize</span><span class=\"br0\">(</span>D<span class=\"br0\">(</span><span class=\"st0\">'0.00'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">'Tax'</span><span class=\"sy0\">,</span> tax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>total <span class=\"sy0\">=</span> total_before_tax + tax<br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">'--------------------'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>fmt\u00a0% <span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">'Total'</span><span class=\"sy0\">,</span> total<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 45, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(define (cents-* x y)<br/>  (/ (round (* 100 x y)) 100))<br/>\u00a0<br/>(struct item (name count price))<br/>\u00a0<br/>(define (string-pad-right len . strs)<br/>  (define all (apply string-append strs))<br/>  (string-append  all (make-string (- len (string-length all)) #\\space)))<br/>\u00a0<br/>(define (string-pad-left len . strs)<br/>  (define all (apply string-append strs))<br/>  (string-append  (make-string (- len (string-length all)) #\\space) all))<br/>\u00a0<br/>(define (show-formated name count price total)<br/>  (printf \"~a ~a ~a -&gt; ~a\\n\"<br/>          (string-pad-right 10 name)<br/>          (string-pad-left 18 count)<br/>          (string-pad-left 8 price)<br/>          (string-pad-left 23 total)<br/>          ))<br/>\u00a0<br/>(define (show-item it)<br/>  (show-formated (item-name it)<br/>                 (~r (item-count it))<br/>                 (string-append \"$\" (~r (item-price it) #:precision '(= 2)))<br/>                 (string-append \"$\" (~r (cents-* (item-count it) (item-price it)) #:precision '(= 2)))<br/>          ))<br/>\u00a0<br/>(define (show-total all tax-rate)<br/>  (define net (for/sum ([it (in-list all)])<br/>                       (cents-* (item-count it) (item-price it))))<br/>  (define tax (cents-* net tax-rate))<br/>  (show-formated \"\" \"\" \"net\" (string-append \"$\" (~r net #:precision '(= 2))))<br/>  (show-formated \"\" \"\" \"tax\" (string-append \"$\" (~r tax #:precision '(= 2))))<br/>  (show-formated \"\" \"\" \"total\" (string-append \"$\" (~r (+ net tax) #:precision '(= 2))))<br/>  )<br/>\u00a0<br/>(define hamburger (item \"hamburger\" 4000000000000000 #e5.50))<br/>(define milkshake (item \"milkshake\" 2 #e2.86))<br/>(define all (list hamburger milkshake))<br/>\u00a0<br/>(for-each show-item all)<br/>(newline)<br/>(show-total all (/ #e7.65 100))</pre>"}, {"lang": "REXX", "loc": 29, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program shows a method of computing the total price and tax  for purchased items.*/</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> <span class=\"nu0\">200</span>                                        <span class=\"coMULTI\">/*support for gihugic numbers.*/</span><br/>taxRate= <span class=\"nu0\">7.65</span>                                             <span class=\"coMULTI\">/*number is:   nn   or   nn%  */</span><br/><span class=\"kw1\">if</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>taxRate, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"st0\">'%'</span>  <span class=\"kw3\">then</span> taxRate=taxRate <span class=\"sy0\">/</span> <span class=\"nu0\">100</span>    <span class=\"coMULTI\">/*handle plain tax rate number*/</span><br/>taxRate=<span class=\"kw6\">strip</span><span class=\"br0\">(</span>taxRate, , <span class=\"st0\">'%'</span><span class=\"br0\">)</span>                             <span class=\"coMULTI\">/*strip the \u00a0%   (if present).*/</span><br/>item<span class=\"sy0\">.</span>  =;                          items=<span class=\"nu0\">0</span>                <span class=\"coMULTI\">/*zero out the register.      */</span><br/>item<span class=\"sy0\">.</span>1 = <span class=\"st0\">'4000000000000000  $5.50  hamburger'</span>             <span class=\"coMULTI\">/*the  first  item purchased. */</span><br/>item<span class=\"sy0\">.</span>2 = <span class=\"st0\">'               2  $2.86  milkshake'</span>             <span class=\"coMULTI\">/* \"  second    \"      \"      */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">'quantity'</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>       <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">\"item\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>       <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">'price'</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span><br/>hdr=<span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">''</span>,        <span class=\"nu0\">27</span>,<span class=\"st0\">\"\u2500\"</span><span class=\"br0\">)</span>   <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">''</span>,    <span class=\"nu0\">20</span>,<span class=\"st0\">\"\u2500\"</span><span class=\"br0\">)</span>   <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">''</span>,     <span class=\"nu0\">27</span>,<span class=\"st0\">\"\u2500\"</span><span class=\"br0\">)</span>;    <span class=\"kw1\">say</span> hdr<br/>total=<span class=\"nu0\">0</span><br/>         <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">while</span> item<span class=\"sy0\">.</span>j<span class=\"sy0\">\\</span>==<span class=\"st0\">''</span>                        <span class=\"coMULTI\">/*calculate the total and tax.*/</span><br/>         <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> item<span class=\"sy0\">.</span>j   quantity price thing          <span class=\"coMULTI\">/*ring up an item on register.*/</span><br/>         items    = items + quantity                      <span class=\"coMULTI\">/*tally the number of items.  */</span><br/>         price    = <span class=\"kw6\">translate</span><span class=\"br0\">(</span>price, , <span class=\"st0\">'$'</span><span class=\"br0\">)</span>               <span class=\"coMULTI\">/*maybe scrub out the $ symbol*/</span><br/>         subtotal = quantity <span class=\"sy0\">*</span> price                      <span class=\"coMULTI\">/*calculate the     sub-total.*/</span><br/>         total    = total + subtotal                      <span class=\"coMULTI\">/*    \"      \"  running total.*/</span><br/>         <span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>quantity, <span class=\"nu0\">27</span><span class=\"br0\">)</span>    <span class=\"kw6\">left</span><span class=\"br0\">(</span>thing, <span class=\"nu0\">20</span><span class=\"br0\">)</span>     show$<span class=\"br0\">(</span>subtotal<span class=\"br0\">)</span><br/>         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/><span class=\"kw1\">say</span>                                              <span class=\"coMULTI\">/*display a blank line for separator.  */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">translate</span><span class=\"br0\">(</span>hdr, <span class=\"st0\">'\u2550'</span>, <span class=\"st0\">\"\u2500\"</span><span class=\"br0\">)</span>                     <span class=\"coMULTI\">/*display the separator part of the hdr*/</span><br/>tax=<span class=\"kw6\">format</span><span class=\"br0\">(</span>total <span class=\"sy0\">*</span> taxRate, , <span class=\"nu0\">2</span><span class=\"br0\">)</span>                 <span class=\"coMULTI\">/*round the total tax for all the items*/</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>items  <span class=\"st0\">\"(items)\"</span>, <span class=\"nu0\">35</span><span class=\"br0\">)</span>     <span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"st0\">'total='</span>, <span class=\"nu0\">12</span><span class=\"br0\">)</span>            show$<span class=\"br0\">(</span>total<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"st0\">'tax at'</span>  <span class=\"br0\">(</span>taxRate <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">/</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\"%=\"</span>, <span class=\"nu0\">48</span><span class=\"br0\">)</span>                   show$<span class=\"br0\">(</span>tax<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"st0\">'grand total='</span>, <span class=\"nu0\">48</span><span class=\"br0\">)</span>                                   show$<span class=\"br0\">(</span>total+tax<span class=\"br0\">)</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>show$:  <span class=\"kw1\">return</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"st0\">'$'</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span>              <span class=\"coMULTI\">/*right\u2500justify and format a number.   */</span></pre>"}, {"lang": "Ring", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project \u00a0: Currency<br/>\u00a0<br/>nhamburger  = \"4000000000\"<br/>phamburger  = \"5.50\"<br/>nmilkshakes = \"2\"<br/>pmilkshakes = \"2.86\"<br/>taxrate = \"0.0765\"<br/>price = nhamburger * phamburger + nmilkshakes * pmilkshakes<br/>tax = price * taxrate<br/>see \"total price before tax\u00a0: \" + price + nl<br/>see \"tax thereon @ 7.65\u00a0: \" + tax + nl<br/>see \"total price after tax \u00a0: \" + (price + tax) + nl<br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 30, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">NumberFormat</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Locale</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> SizeMeUp <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> menu<span class=\"sy0\">:</span> Map<span class=\"br0\">[</span>String, <span class=\"br0\">(</span>String, Double<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Map<span class=\"br0\">(</span><span class=\"st0\">\"burg\"</span> -<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"st0\">\"Hamburger XL\"</span>, <span class=\"nu0\">5.50</span><span class=\"br0\">)</span>, <span class=\"st0\">\"milk\"</span> -<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"st0\">\"Milkshake\"</span>, <span class=\"nu0\">2.86</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> order <span class=\"sy0\">=</span> List<span class=\"br0\">(</span><span class=\"br0\">(</span>4000000000000000L, <span class=\"st0\">\"burg\"</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span>2L, <span class=\"st0\">\"milk\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  Locale.<span class=\"me1\">setDefault</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Locale<span class=\"br0\">(</span><span class=\"st0\">\"ru\"</span>, <span class=\"st0\">\"RU\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>currSymbol, tax<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>NumberFormat.<span class=\"me1\">getInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">getCurrency</span>.<span class=\"me1\">getSymbol</span>, <span class=\"nu0\">0.0765</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> placeOrder<span class=\"br0\">(</span>order<span class=\"sy0\">:</span> List<span class=\"br0\">[</span><span class=\"br0\">(</span>Long, String<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> totals <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>qty, article<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span>- order<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">yield</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>desc, itemPrize<span class=\"br0\">)</span> <span class=\"sy0\">=</span> menu<span class=\"br0\">(</span>article<span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>items, post<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>qty, qty <span class=\"sy0\">*</span> BigDecimal<span class=\"br0\">(</span>itemPrize<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      println<span class=\"br0\">(</span>f<span class=\"st0\">\"$qty%16d<span class=\"es1\">\\t</span>$desc%-16s<span class=\"es1\">\\t</span>$currSymbol%4s$itemPrize%6.2f<span class=\"es1\">\\t</span>$post%,25.2f\"</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>items, post<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    totals.<span class=\"me1\">foldLeft</span><span class=\"br0\">(</span><span class=\"br0\">(</span>0L, BigDecimal<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span>acc, n<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>acc.<span class=\"sy0\">_</span>1 + n.<span class=\"sy0\">_</span>1, acc.<span class=\"sy0\">_</span>2 + n.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>items, beforeTax<span class=\"br0\">)</span> <span class=\"sy0\">=</span> placeOrder<span class=\"br0\">(</span>order<span class=\"br0\">)</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\"$items%16d<span class=\"es1\">\\t</span>${\"</span>ordered items<span class=\"st0\">\"}%-16s${'<span class=\"es1\">\\t</span>' + \"</span>  Subtotal<span class=\"st0\">\" + '<span class=\"es1\">\\t</span>'}$beforeTax%,25.2f\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> taxation <span class=\"sy0\">=</span> beforeTax <span class=\"sy0\">*</span> tax<br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\"${\"</span> <span class=\"st0\">\" * 16 + '<span class=\"es1\">\\t</span>' + \"</span> <span class=\"st0\">\" * 16 + '<span class=\"es1\">\\t</span>' + f\"</span>$<span class=\"br0\">{</span>tax <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">}</span><span class=\"sy0\">%</span>5.2f<span class=\"sy0\">%%</span> tax<span class=\"st0\">\" + '<span class=\"es1\">\\t</span>'}$taxation%,25.2f\"</span><span class=\"br0\">)</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\"${\"</span> <span class=\"st0\">\" * 16 + '<span class=\"es1\">\\t</span>' + \"</span> <span class=\"st0\">\" * 16 + '<span class=\"es1\">\\t</span>' + \"</span>Amount due<span class=\"st0\">\" + '<span class=\"es1\">\\t</span>'}${beforeTax + taxation}%,25.2f\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Sidef", "loc": 28, "block": "<pre class=\"ruby highlighted_source\">struct Item <span class=\"br0\">{</span><br/>    name, price, quant<br/><span class=\"br0\">}</span><br/>\u00a0<br/>var check = <span class=\"sy0\">%</span>q<span class=\"br0\">{</span><br/>    Hamburger   <span class=\"nu0\">5.50</span>    <span class=\"nu0\">4000000000000000</span><br/>    Milkshake   <span class=\"nu0\">2.86</span>    <span class=\"nu0\">2</span><br/><span class=\"br0\">}</span>.<span class=\"me1\">lines</span>.<span class=\"me1\">grep</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>\\S<span class=\"sy0\">/</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> Item<span class=\"br0\">(</span>.<span class=\"me1\">words</span>...<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>var tax_rate = <span class=\"nu0\">0.0765</span><br/>var fmt = <span class=\"st0\">\"%-10s\u00a0%8s\u00a0%18s\u00a0%22s<span class=\"es0\">\\n</span>\"</span><br/>\u00a0<br/><span class=\"kw3\">printf</span><span class=\"br0\">(</span>fmt, <span class=\"sy0\">%</span>w<span class=\"br0\">(</span>Item Price Quantity Extension<span class=\"br0\">)</span>...<span class=\"br0\">)</span><br/>\u00a0<br/>var subtotal = check.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>item<span class=\"sy0\">|</span><br/>    var extension = Num<span class=\"br0\">(</span>item.<span class=\"me1\">price</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>Num<span class=\"br0\">(</span>item.<span class=\"me1\">quant</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">printf</span><span class=\"br0\">(</span>fmt, item.<span class=\"me1\">name</span>, item.<span class=\"me1\">price</span>, item.<span class=\"me1\">quant</span>, extension.<span class=\"me1\">round</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    extension<br/><span class=\"br0\">}</span>.<span class=\"me1\">sum</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw3\">printf</span><span class=\"br0\">(</span>fmt, <span class=\"st0\">''</span>, <span class=\"st0\">''</span>, <span class=\"st0\">''</span>, <span class=\"st0\">'-----------------'</span><span class=\"br0\">)</span><br/><span class=\"kw3\">printf</span><span class=\"br0\">(</span>fmt, <span class=\"st0\">''</span>, <span class=\"st0\">''</span>, <span class=\"st0\">'Subtotal '</span>, subtotal<span class=\"br0\">)</span><br/>\u00a0<br/>var tax = <span class=\"br0\">(</span>subtotal <span class=\"sy0\">*</span> tax_rate <span class=\"sy0\">-&gt;</span> round<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw3\">printf</span><span class=\"br0\">(</span>fmt, <span class=\"st0\">''</span>, <span class=\"st0\">''</span>, <span class=\"st0\">'Tax '</span>, tax<span class=\"br0\">)</span><br/>\u00a0<br/>var total = subtotal<span class=\"sy0\">+</span>tax<br/><span class=\"kw3\">printf</span><span class=\"br0\">(</span>fmt, <span class=\"st0\">''</span>, <span class=\"st0\">''</span>, <span class=\"st0\">'Total '</span>, total<span class=\"br0\">)</span></pre>"}, {"lang": "Tcl", "loc": 14, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require math::<span class=\"me1\">decimal</span><br/><span class=\"kw1\">namespace</span> import math::<span class=\"me1\">decimal</span>::<span class=\"sy0\">*</span><br/>\u00a0<br/><span class=\"kw1\">set</span> hamburgerPrice <span class=\"br0\">[</span>fromstr <span class=\"nu0\">5.50</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> milkshakePrice <span class=\"br0\">[</span>fromstr <span class=\"nu0\">2.86</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> taxRate <span class=\"br0\">[</span>/ <span class=\"br0\">[</span>fromstr <span class=\"nu0\">7.65</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>fromstr <span class=\"nu0\">100</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">set</span> burgers <span class=\"nu0\">4000000000000000</span><br/><span class=\"kw1\">set</span> shakes <span class=\"nu0\">2</span><br/><span class=\"kw1\">set</span> net <span class=\"br0\">[</span>+ <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"br0\">[</span>fromstr <span class=\"re0\">$burgers</span><span class=\"br0\">]</span> <span class=\"re0\">$hamburgerPrice</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"br0\">[</span>fromstr <span class=\"re0\">$shakes</span><span class=\"br0\">]</span> <span class=\"re0\">$milkshakePrice</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> tax <span class=\"br0\">[</span>round_up <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$net</span> <span class=\"re0\">$taxRate</span><span class=\"br0\">]</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> total <span class=\"br0\">[</span>+ <span class=\"re0\">$net</span> <span class=\"re0\">$tax</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"net=[tostr $net], tax=[tostr $tax], total=[tostr $total]\"</span></pre>"}, {"lang": "zkl", "loc": 26, "block": "<pre class=\"text highlighted_source\">var priceList=Dictionary(\"hamburger\",550, \"milkshake\",286);<br/>var taxRate=765;  // percent*M<br/>const M=0d10_000;<br/>\u00a0<br/>fcn toBucks(n){ \"$%,d.%02d\".fmt(n.divr(100).xplode()) }<br/>fcn taxIt(n)  { d,c:=n.divr(M).apply('*(taxRate)); d + (c+5000)/M; }<br/>fcn calcTab(items){ // (hamburger,15), (milkshake,100) ...<br/>   items=vm.arglist;<br/>   fmt:=\"%-10s\u00a0%8s\u00a0%18s\u00a0%26s\";<br/>   fmt.fmt(\"Item Price Quantity Extension\".split().xplode()).println();<br/>\u00a0<br/>   totalBeforeTax:=0;<br/>   foreach item,n in (items.sort(fcn(a,b){ a[0]&lt;b[0] })){<br/>      price:=priceList[item]; t:=price*n;<br/>      fmt.fmt(item,toBucks(price),n,toBucks(t)).println();<br/>      totalBeforeTax+=t;<br/>   }<br/>   fmt.fmt(\"\",\"\",\"\",\"--------------------\").println();<br/>   fmt.fmt(\"\",\"\",\"subtotal\",toBucks(totalBeforeTax)).println();<br/>\u00a0<br/>   tax:=taxIt(totalBeforeTax);<br/>   fmt.fmt(\"\",\"\",\"Tax\",toBucks(tax)).println();<br/>\u00a0<br/>   fmt.fmt(\"\",\"\",\"\",\"--------------------\").println();<br/>   fmt.fmt(\"\",\"\",\"Total\",toBucks(totalBeforeTax + tax)).println();<br/>}</pre>"}]}