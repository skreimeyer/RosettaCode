{"task": "Bulls_and_cows", "blocks": [{"lang": "Ada", "loc": 53, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;  <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Bulls_And_Cows <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">package</span> Random_Natural <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span> <span class=\"br0\">(</span>Natural<span class=\"br0\">)</span>;<br/>   Number\u00a0: String <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">4</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">declare</span> <span class=\"co1\">-- Generation of number</span><br/>      <span class=\"kw3\">use</span> Random_Natural;<br/>      Digit   \u00a0: String  \u00a0:= <span class=\"st0\">\"123456789\"</span>;<br/>      Size    \u00a0: Positive\u00a0:= <span class=\"nu0\">9</span>;<br/>      Dice    \u00a0: Generator;<br/>      Position\u00a0: Natural;<br/>   <span class=\"kw1\">begin</span><br/>      Reset <span class=\"br0\">(</span>Dice<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Number'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Position\u00a0:= Random <span class=\"br0\">(</span>Dice<span class=\"br0\">)</span> <span class=\"kw2\">mod</span> Size + <span class=\"nu0\">1</span>;<br/>         Number <span class=\"br0\">(</span>I<span class=\"br0\">)</span>\u00a0:= Digit <span class=\"br0\">(</span>Position<span class=\"br0\">)</span>;<br/>         Digit <span class=\"br0\">(</span>Position..<span class=\"me1\">Size</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span>\u00a0:= Digit <span class=\"br0\">(</span>Position + <span class=\"nu0\">1</span>..<span class=\"me1\">Size</span><span class=\"br0\">)</span>;<br/>         Size\u00a0:= Size - <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span>;<br/>   <span class=\"kw1\">loop</span> <span class=\"co1\">-- Guessing loop</span><br/>      Put <span class=\"br0\">(</span><span class=\"st0\">\"Enter four digits:\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">declare</span><br/>         Guess\u00a0: String \u00a0:= Get_Line;<br/>         Bulls\u00a0: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/>         Cows \u00a0: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">if</span> Guess'Length /= <span class=\"nu0\">4</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw3\">raise</span> Data_Error;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Guess'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">for</span> J <span class=\"kw3\">in</span> Number'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span>                  <br/>               <span class=\"kw1\">if</span> Guess <span class=\"br0\">(</span>I<span class=\"br0\">)</span> <span class=\"kw2\">not</span> <span class=\"kw3\">in</span> '<span class=\"nu0\">1</span>'..'<span class=\"nu0\">9</span>' <span class=\"kw2\">or</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span>I &lt; J <span class=\"kw2\">and</span> <span class=\"kw1\">then</span> Guess <span class=\"br0\">(</span>I<span class=\"br0\">)</span> = Guess <span class=\"br0\">(</span>J<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                  <span class=\"kw3\">raise</span> Data_Error;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">if</span> Number <span class=\"br0\">(</span>I<span class=\"br0\">)</span> = Guess <span class=\"br0\">(</span>J<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">if</span> I = J <span class=\"kw1\">then</span><br/>                     Bulls\u00a0:= Bulls + <span class=\"nu0\">1</span>;<br/>                  <span class=\"kw1\">else</span><br/>                     Cows\u00a0:= Cows + <span class=\"nu0\">1</span>;<br/>                  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>               <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         <span class=\"kw3\">exit</span> <span class=\"kw3\">when</span> Bulls = <span class=\"nu0\">4</span>;<br/>         Put_Line <span class=\"br0\">(</span>Integer'Image <span class=\"br0\">(</span>Bulls<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" bulls,\"</span> &amp; Integer'Image <span class=\"br0\">(</span>Cows<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" cows\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">exception</span><br/>         <span class=\"kw3\">when</span> Data_Error =&gt; Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"You should enter four different digits 1..9\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">end</span> Bulls_And_Cows;</pre>"}, {"lang": "ALGOL 68", "loc": 55, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw3\">STRING</span> digits <span class=\"sy1\">=</span> <span class=\"st0\">\"123456789\"</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"br0\">[</span>4<span class=\"br0\">]</span><span class=\"kw3\">CHAR</span> chosen<span class=\"sy1\">;</span><br/><span class=\"kw3\">STRING</span> available <span class=\"sy1\">:=</span> digits<span class=\"sy1\">;</span><br/><span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> chosen <span class=\"kw2\">DO</span> <br/>    <span class=\"kw3\">INT</span> c <span class=\"sy1\">=</span> <span class=\"kw8\">ENTIER</span><span class=\"br0\">(</span>random<span class=\"sy1\">*</span><span class=\"kw8\">UPB</span> available<span class=\"br0\">)</span><span class=\"sy1\">+</span>1<span class=\"sy1\">;</span> <br/>    chosen<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> available<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"sy1\">;</span> <br/>    available <span class=\"sy1\">:=</span> available<span class=\"br0\">[</span><span class=\"sy1\">:</span>c<span class=\"sy1\">-</span>1<span class=\"br0\">]</span><span class=\"sy1\">+</span>available<span class=\"br0\">[</span>c<span class=\"sy1\">+</span>1<span class=\"sy1\">:</span><span class=\"br0\">]</span><br/><span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co1\">COMMENT print((chosen, new line)); # Debug # END COMMENT</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> D <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> d<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span>d<span class=\"sy1\">,</span>0<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># for formatting an integer #</span><br/>\u00a0<br/><span class=\"kw22\">print</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"I have chosen a number from \"</span><span class=\"sy1\">,</span>D <span class=\"kw8\">UPB</span> chosen<span class=\"sy1\">,</span><span class=\"st0\">\" unique digits from 1 to 9 arranged in a random order.\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span><span class=\"sy1\">,</span><br/><span class=\"st0\">\"You need to input a \"</span><span class=\"sy1\">,</span>D <span class=\"kw8\">UPB</span> chosen<span class=\"sy1\">,</span><span class=\"st0\">\" digit, unique digit number as a guess at what I have chosen\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PRIO</span> WITHIN <span class=\"sy1\">=</span> 5<span class=\"sy1\">,</span> NOTWITHIN <span class=\"sy1\">=</span> 5<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> WITHIN <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">CHAR</span> c<span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">CHAR</span> s<span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span> <span class=\"kw26\">char in string</span><span class=\"br0\">(</span>c<span class=\"sy1\">,</span><span class=\"kw4\">LOC</span> <span class=\"kw3\">INT</span><span class=\"sy1\">,</span>s<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> NOTWITHIN <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">CHAR</span> c<span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">CHAR</span> s<span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span> <span class=\"kw8\">NOT</span> <span class=\"br0\">(</span> c WITHIN s <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw3\">INT</span> guesses <span class=\"sy1\">:=</span> 0<span class=\"sy1\">,</span> bulls<span class=\"sy1\">,</span> cows<span class=\"sy1\">;</span><br/><span class=\"kw2\">WHILE</span><br/>    <span class=\"kw3\">STRING</span> guess<span class=\"sy1\">;</span><br/>    guesses <span class=\"sy1\">+:=</span> 1<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">WHILE</span> <br/>        <span class=\"coMULTI\"># get a good guess #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw22\">new line</span><span class=\"sy1\">,</span><span class=\"st0\">\"Next guess [\"</span><span class=\"sy1\">,</span>D guesses<span class=\"sy1\">,</span><span class=\"st0\">\"]: \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        read<span class=\"br0\">(</span><span class=\"br0\">(</span>guess<span class=\"sy1\">,</span> <span class=\"kw22\">new line</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span> <span class=\"kw8\">UPB</span> guess <span class=\"kw15\">NE</span> <span class=\"kw8\">UPB</span> chosen <span class=\"kw2\">THEN</span><br/>            <span class=\"kw7\">FALSE</span><br/>        <span class=\"kw2\">ELSE</span><br/>            <span class=\"kw3\">BOOL</span> ok<span class=\"sy1\">;</span><br/>            <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> guess <span class=\"kw2\">WHILE</span><br/>                ok <span class=\"sy1\">:=</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> WITHIN digits <span class=\"kw16\">AND</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> NOTWITHIN guess<span class=\"br0\">[</span>i<span class=\"sy1\">+</span>1<span class=\"sy1\">:</span><span class=\"br0\">]</span><br/>            <span class=\"kw2\">DO</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            <span class=\"kw8\">NOT</span> ok <br/>        <span class=\"kw2\">FI</span><br/>    <span class=\"kw2\">DO</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"Problem, try again. You need to enter \"</span><span class=\"sy1\">,</span>D <span class=\"kw8\">UPB</span> chosen<span class=\"sy1\">,</span><span class=\"st0\">\" unique digits from 1 to 9\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># WHILE #</span><br/>    guess <span class=\"kw15\">NE</span> chosen<br/><span class=\"kw2\">DO</span><br/>    bulls <span class=\"sy1\">:=</span> cows <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> chosen <span class=\"kw2\">DO</span><br/>        <span class=\"kw2\">IF</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> chosen<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw2\">THEN</span><br/>            bulls <span class=\"sy1\">+:=</span> 1<br/>        <span class=\"kw2\">ELIF</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> WITHIN chosen <span class=\"kw2\">THEN</span><br/>            cows <span class=\"sy1\">+:=</span> 1<br/>        <span class=\"kw2\">FI</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"  \"</span><span class=\"sy1\">,</span>D bulls<span class=\"sy1\">,</span><span class=\"st0\">\" Bulls\"</span><span class=\"sy1\">,</span><span class=\"kw22\">new line</span><span class=\"sy1\">,</span><span class=\"st0\">\"  \"</span><span class=\"sy1\">,</span>D cows<span class=\"sy1\">,</span><span class=\"st0\">\" Cows\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw22\">new line</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Congratulations you guessed correctly in \"</span><span class=\"sy1\">,</span>D guesses<span class=\"sy1\">,</span><span class=\"st0\">\" attempts.\"</span><span class=\"sy1\">,</span><span class=\"kw22\">new line</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "AppleScript", "loc": 58, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">on</span> pickNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"kw3\">set</span> theNumber <span class=\"kw3\">to</span> <span class=\"st0\">\"\"</span><br/>\t<span class=\"kw3\">repeat</span> <span class=\"nu0\">4</span> <span class=\"kw3\">times</span><br/>\t\t<span class=\"kw3\">set</span> theDigit <span class=\"kw3\">to</span> <span class=\"br0\">(</span>random <span class=\"kw1\">number</span> <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><br/>\t\t<span class=\"kw3\">repeat</span> <span class=\"kw3\">while</span> <span class=\"br0\">(</span><span class=\"kw1\">offset of</span> theDigit <span class=\"kw3\">in</span> theNumber<span class=\"br0\">)</span> &gt; <span class=\"nu0\">0</span><br/>\t\t\t<span class=\"kw3\">set</span> theDigit <span class=\"kw3\">to</span> <span class=\"br0\">(</span>random <span class=\"kw1\">number</span> <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><br/>\t\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>\t\t<span class=\"kw3\">set</span> theNumber <span class=\"kw3\">to</span> theNumber <span class=\"sy0\">&amp;</span> theDigit<br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/><span class=\"kw3\">end</span> pickNumber<br/>\u00a0<br/><span class=\"kw3\">to</span> bulls <span class=\"kw3\">of</span> theGuess <span class=\"kw3\">given</span> key:theKey<br/>\t<span class=\"kw3\">set</span> bullCount <span class=\"kw3\">to</span> <span class=\"nu0\">0</span><br/>\t<span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> theIndex <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> <span class=\"nu0\">4</span><br/>\t\t<span class=\"kw3\">if</span> <span class=\"kw1\">text</span> theIndex <span class=\"kw3\">of</span> theGuess <span class=\"sy0\">=</span> <span class=\"kw1\">text</span> theIndex <span class=\"kw3\">of</span> theKey <span class=\"kw3\">then</span><br/>\t\t\t<span class=\"kw3\">set</span> bullCount <span class=\"kw3\">to</span> bullCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t<span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>\t<span class=\"kw3\">return</span> bullCount<br/><span class=\"kw3\">end</span> bulls<br/>\u00a0<br/><span class=\"kw3\">to</span> cows <span class=\"kw3\">of</span> theGuess <span class=\"kw3\">given</span> key:theKey, bulls:bullCount<br/>\t<span class=\"kw3\">set</span> cowCount <span class=\"kw3\">to</span> <span class=\"sy0\">-</span>bullCount<br/>\t<span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> theIndex <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> <span class=\"nu0\">4</span><br/>\t\t<span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">offset of</span> <span class=\"br0\">(</span><span class=\"kw1\">text</span> theIndex <span class=\"kw3\">of</span> theKey<span class=\"br0\">)</span> <span class=\"kw3\">in</span> theGuess<span class=\"br0\">)</span> &gt; <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>\t\t\t<span class=\"kw3\">set</span> cowCount <span class=\"kw3\">to</span> cowCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t<span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>\u00a0<br/>\t<span class=\"kw3\">return</span> cowCount<br/><span class=\"kw3\">end</span> cows<br/>\u00a0<br/><span class=\"kw3\">to</span> score <span class=\"kw3\">of</span> theGuess <span class=\"kw3\">given</span> key:theKey<br/>\t<span class=\"kw3\">set</span> bullCount <span class=\"kw3\">to</span> bulls <span class=\"kw3\">of</span> theGuess <span class=\"kw3\">given</span> key:theKey<br/>\t<span class=\"kw3\">set</span> cowCount <span class=\"kw3\">to</span> cows <span class=\"kw3\">of</span> theGuess <span class=\"kw3\">given</span> key:theKey, bulls:bullCount<br/>\t<span class=\"kw3\">return</span> <span class=\"br0\">{</span>bulls:bullCount, cows:cowCount<span class=\"br0\">}</span><br/><span class=\"kw3\">end</span> score<br/>\u00a0<br/><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>\t<span class=\"kw3\">set</span> theNumber <span class=\"kw3\">to</span> pickNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"kw3\">set</span> pastGuesses <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\t<span class=\"kw3\">repeat</span><br/>\t\t<span class=\"kw3\">set</span> theMessage <span class=\"kw3\">to</span> <span class=\"st0\">\"\"</span><br/>\t\t<span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> aGuess <span class=\"kw3\">in</span> pastGuesses<br/>\t\t\t<span class=\"kw3\">set</span> <span class=\"br0\">{</span>theGuess, theResult<span class=\"br0\">}</span> <span class=\"kw3\">to</span> aGuess<br/>\t\t\t<span class=\"kw3\">set</span> theMessage <span class=\"kw3\">to</span> theMessage <span class=\"sy0\">&amp;</span> theGuess <span class=\"sy0\">&amp;</span> <span class=\"st0\">\":\"</span> <span class=\"sy0\">&amp;</span> bulls <span class=\"kw3\">of</span> theResult <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"B, \"</span> <span class=\"sy0\">&amp;</span> cows <span class=\"kw3\">of</span> theResult <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"C\"</span> <span class=\"sy0\">&amp;</span> linefeed<br/>\t\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>\t\t<span class=\"kw3\">set</span> theMessage <span class=\"kw3\">to</span> theMessage <span class=\"sy0\">&amp;</span> linefeed <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"Enter guess:\"</span><br/>\t\t<span class=\"kw3\">set</span> theGuess <span class=\"kw3\">to</span> <span class=\"kw1\">text</span> returned <span class=\"kw3\">of</span> <span class=\"br0\">(</span><span class=\"kw1\">display dialog</span> theMessage <span class=\"kw3\">with</span> title <span class=\"st0\">\"Bulls and Cows\"</span> <span class=\"kw1\">default answer</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw3\">set</span> theScore <span class=\"kw3\">to</span> score <span class=\"kw3\">of</span> theGuess <span class=\"kw3\">given</span> key:theNumber<br/>\t\t<span class=\"kw3\">if</span> bulls <span class=\"kw3\">of</span> theScore <span class=\"kw3\">is</span> <span class=\"nu0\">4</span> <span class=\"kw3\">then</span><br/>\t\t\t<span class=\"kw1\">display dialog</span> <span class=\"st0\">\"Correct!  Found the secret in \"</span> <span class=\"sy0\">&amp;</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>length <span class=\"kw3\">of</span> pastGuesses<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" guesses!\"</span><br/>\t\t\t<span class=\"kw3\">exit</span> <span class=\"kw3\">repeat</span><br/>\t\t<span class=\"kw3\">else</span><br/>\t\t\t<span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> pastGuesses <span class=\"kw3\">to</span> <span class=\"br0\">{</span>theGuess, theScore<span class=\"br0\">}</span><br/>\t\t<span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span></pre>"}, {"lang": "AutoHotkey", "loc": 52, "block": "<pre class=\"autohotkey highlighted_source\">length<span class=\"sy0\">:=</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> Code<span class=\"sy0\">:=</span><span class=\"st0\">\"\"</span> <span class=\"co1\">; settings</span><br/>\u00a0<br/><span class=\"kw1\">While</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">StrLen</span></a><span class=\"br0\">(</span>Code<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> length <span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> num<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><br/>\t<span class=\"kw1\">If</span>\u00a0!<a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>Code<span class=\"sy0\">,</span> num<span class=\"br0\">)</span><br/>\t\tCode <span class=\"sy0\">.=</span> num<br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Text\"><span class=\"kw8\">Text</span></a><span class=\"sy0\">,</span> w83 vInfo<span class=\"sy0\">,</span> I'm thinking of a <span class=\"re0\">%length%</span><span class=\"sy0\">-</span>digit number with no duplicate digits<span class=\"sy0\">.</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span> wp vGuess<span class=\"sy0\">,</span> <span class=\"kw6\">Enter</span> a guess<span class=\"sy0\">...</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> wp <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a> vDefault<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Submit\"><span class=\"kw7\">Submit</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span> ym w130 r8 vHistory ReadOnly<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ButtonSubmit:<br/></span>\t<span class=\"kw1\">If</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a> <span class=\"sy0\">=</span> Restart<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Reload.htm\"><span class=\"kw3\">Reload</span></a><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Submit\"><span class=\"kw7\">Submit</span></a><span class=\"sy0\">,</span> NoHide<br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">StrLen</span></a><span class=\"br0\">(</span>Guess<span class=\"br0\">)</span>\u00a0!<span class=\"sy0\">=</span> length<span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> Info<span class=\"sy0\">,</span> <span class=\"kw6\">Enter</span> a <span class=\"re0\">%length%</span><span class=\"sy0\">-</span>digit number<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> Guess is not digit<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> Info<span class=\"sy0\">,</span> <span class=\"kw6\">Enter</span> a <span class=\"re0\">%length%</span><span class=\"sy0\">-</span>digit number<span class=\"sy0\">.</span><br/>\t<span class=\"kw1\">Else</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> Info<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> Guess<br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span>Guess <span class=\"sy0\">=</span> Code<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> Info<span class=\"sy0\">,</span> Correct!<br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a><span class=\"sy0\">,</span> Restart<br/>\t\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Default\"><span class=\"kw7\">Default</span></a> <span class=\"sy0\">=</span> Restart<br/>\t\t<span class=\"br0\">}</span><br/>\t\tresponse <span class=\"sy0\">:=</span> Response<span class=\"br0\">(</span>Guess<span class=\"sy0\">,</span> Code<span class=\"br0\">)</span><br/>\t\tBulls <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>response<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>response<span class=\"sy0\">,</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\tCows <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>response<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>response<span class=\"sy0\">,</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> History<span class=\"sy0\">,</span>\u00a0% History <span class=\"sy0\">.</span> Guess <span class=\"st0\">\": \"</span> Bulls <span class=\"st0\">\" Bulls \"</span> Cows <span class=\"st0\">\" Cows`n\"</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiEscape\"><span class=\"kw7\">GuiEscape</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>\u00a0<br/>Response<span class=\"br0\">(</span>Guess<span class=\"sy0\">,</span>Code<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tBulls <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> Cows <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>\u00a0% <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">StrLen</span></a><span class=\"br0\">(</span>Code<span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>Guess<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>Code<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\tBulls<span class=\"sy0\">++</span><br/>\t\t<span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span>Code<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>Guess<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\tCows<span class=\"sy0\">++</span><br/>\t<span class=\"kw1\">Return</span> Bulls <span class=\"st0\">\",\"</span> Cows<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BASIC", "loc": 41, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckdefint.shtml\"><span class=\"kw3\">DEFINT</span></a> A<span class=\"sy0\">-</span>Z<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> secret <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> guess  <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> c      <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> bulls<span class=\"sy0\">,</span> cows<span class=\"sy0\">,</span> guesses<span class=\"sy0\">,</span> i<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckrandomize.shtml\"><span class=\"kw3\">RANDOMIZE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcktimer.shtml\"><span class=\"kw3\">TIMER</span></a><br/><span class=\"kw1\">DO</span> <span class=\"kw1\">WHILE</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>secret<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><br/>    c <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckchr%24.shtml\"><span class=\"kw3\">CHR$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckint.shtml\"><span class=\"kw3\">INT</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrnd.shtml\"><span class=\"kw3\">RND</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">48</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>secret<span class=\"sy0\">,</span> c<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> secret <span class=\"sy0\">=</span> secret <span class=\"sy0\">+</span> c<br/><span class=\"kw1\">LOOP</span><br/>\u00a0<br/>guesses <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">DO</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <span class=\"st0\">\"Guess a 4-digit number with no duplicate digits: \"</span>; guess<br/>    guess <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <a href=\"http://www.qbasicnews.com/qboho/qckexit.shtml\"><span class=\"kw3\">EXIT</span></a> <span class=\"kw1\">DO</span><br/>\u00a0<br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">4</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckval.shtml\"><span class=\"kw3\">VAL</span></a><span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"** You should enter 4 numeric digits!\"</span><br/>        <span class=\"kw1\">GOTO</span> looper<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>    bulls <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: cows <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: guesses <span class=\"sy0\">=</span> guesses <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">FOR</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">4</span><br/>        c <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>secret<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>guess<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> c <span class=\"kw1\">THEN</span><br/>            bulls <span class=\"sy0\">=</span> bulls <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">ELSEIF</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>guess<span class=\"sy0\">,</span> c<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>            cows <span class=\"sy0\">=</span> cows <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <span class=\"kw1\">NEXT</span> i<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> bulls; <span class=\"st0\">\" bulls, \"</span>; cows; <span class=\"st0\">\" cows\"</span><br/>\u00a0<br/>    <span class=\"kw1\">IF</span> guess <span class=\"sy0\">=</span> secret <span class=\"kw1\">THEN</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"You won after \"</span>; guesses; <span class=\"st0\">\" guesses!\"</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckexit.shtml\"><span class=\"kw3\">EXIT</span></a> <span class=\"kw1\">DO</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>looper:<br/><span class=\"kw1\">LOOP</span></pre>"}, {"lang": "Batch File", "loc": 121, "block": "<pre class=\"dos highlighted_source\"><span class=\"co2\"><br/>::</span><br/><span class=\"co2\">::Bulls and Cows Task from Rosetta Code Wiki</span><br/><span class=\"co2\">::Batch File Implementation</span><br/><span class=\"co2\">::</span><br/><span class=\"co2\">::Directly OPEN the Batch File to play...</span><br/><span class=\"co2\">::</span><br/>\u00a0<br/><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off<br/><a href=\"http://www.ss64.com/nt/title.html\"><span class=\"kw3\">title</span></a> Bulls and Cows Game<br/><a href=\"http://www.ss64.com/nt/setlocal.html\"><span class=\"kw3\">setlocal</span></a> enabledelayedexpansion<br/><span class=\"co2\"><br/>::GENERATING THE CODE TO BE GUESSED BY PLAYER...</span><br/>:<span class=\"re0\">begin</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> list=123456789<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> cnt=1<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> code=<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> tries=0<br/>:<span class=\"re0\">gen</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a mod=10-<span class=\"sy0\">%</span><span class=\"re3\">cnt</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a rnd=<span class=\"sy0\">%</span><span class=\"re3\">random</span><span class=\"sy0\">%%</span><span class=\"sy0\">%%</span><span class=\"re3\">mod</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> pick=<span class=\"sy0\">!</span><span class=\"re2\">list:~%<span class=\"re3\">rnd</span>%,1</span><span class=\"sy0\">!</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> code=<span class=\"sy0\">%</span><span class=\"re3\">code</span><span class=\"sy0\">%%</span><span class=\"re3\">pick</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> list=<span class=\"sy0\">!</span><span class=\"re2\">list:%<span class=\"re3\">pick</span>%=</span><span class=\"sy0\">!</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">cnt</span><span class=\"sy0\">%</span>==4 <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> c1=<span class=\"sy0\">%</span><span class=\"re3\">code:~0,1</span><span class=\"sy0\">%&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> c2=<span class=\"sy0\">%</span><span class=\"re3\">code:~1,1</span><span class=\"sy0\">%&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> c3=<span class=\"sy0\">%</span><span class=\"re3\">code:~2,1</span><span class=\"sy0\">%&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> c4=<span class=\"sy0\">%</span><span class=\"re3\">code:~3,1</span><span class=\"sy0\">%</span><br/>\t<a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">start</span><br/><span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a cnt+=1<br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">gen</span><br/><span class=\"co2\">::/GENERATING THE CODE TO BE GUESSED BY PLAYER...</span><br/><span class=\"co2\"><br/>::GAME DISPLAY</span><br/>:<span class=\"re0\">start</span><br/>cls<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Bulls and Cows Game<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Batch File Implementation<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> NOTE: Please MAXIMIZE this command window.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Gameplay:<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> I have generated a 4-digit code from digit 1-9 WITHOUT duplication.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Your objective is to guess it. <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">If</span></a> your guess is equal to my code,<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> then you WIN. <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">If</span></a> <a href=\"http://www.ss64.com/nt/not.html\"><span class=\"kw2\">not</span></a>, I will score your guess:<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> ** A score of one BULL is accumulated <a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> each digit that equals<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> the CORRESPONDING digit <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> my code.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> ** A score of one COW is accumulated <a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> each digit that appears<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> your guess, but <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> the WRONG position.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Now, start guessing<span class=\"co3\">^^</span><span class=\"sy0\">!</span><br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/>:<span class=\"re0\">game</span><br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /p guess=Your Guess:<br/><span class=\"co2\">::/GAME DISPLAY</span><br/><span class=\"co2\"><br/>::INPUT VALIDATION</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">guess</span><span class=\"sy0\">!</span> <a href=\"http://www.ss64.com/nt/gtr.html\"><span class=\"kw2\">gtr</span></a> 9876 <span class=\"sy0\">(</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Please input a valid guess.<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">game)</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">guess</span><span class=\"sy0\">!</span> <a href=\"http://www.ss64.com/nt/lss.html\"><span class=\"kw2\">lss</span></a> 1234 <span class=\"sy0\">(</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Please input a valid guess.<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">game)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> i1=<span class=\"sy0\">%</span><span class=\"re3\">guess:~0,1</span><span class=\"sy0\">%&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> i2=<span class=\"sy0\">%</span><span class=\"re3\">guess:~1,1</span><span class=\"sy0\">%&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> i3=<span class=\"sy0\">%</span><span class=\"re3\">guess:~2,1</span><span class=\"sy0\">%&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> i4=<span class=\"sy0\">%</span><span class=\"re3\">guess:~3,1</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> chk=1<br/>:<span class=\"re0\">cycle</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a tmp1=<span class=\"sy0\">%</span><span class=\"re3\">chk</span><span class=\"sy0\">%</span>+1<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /l <span class=\"sy0\">%%</span><span class=\"re3\">a</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(%</span><span class=\"re3\">tmp1</span><span class=\"sy0\">%</span>,1,4<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">i</span><span class=\"sy0\">%</span><span class=\"re3\">chk</span><span class=\"sy0\">%!</span><span class=\"re2\">==</span><span class=\"sy0\">!</span><span class=\"re2\">i</span><span class=\"sy0\">%%</span><span class=\"re3\">a</span><span class=\"sy0\">!</span> <span class=\"sy0\">(</span><br/>\t\t<a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Please input a valid guess.<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">game</span><br/>\t<span class=\"sy0\">)</span><br/><span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">chk</span><span class=\"sy0\">%</span>==3 <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">score</span><br/><span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a chk+=1<br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">cycle</span><br/><span class=\"co2\">::/INPUT VALIDATION</span><br/><span class=\"co2\"><br/>::SCORING</span><br/>:<span class=\"re0\">score</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a tries+=1<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">guess</span><span class=\"sy0\">%</span>==<span class=\"sy0\">%</span><span class=\"re3\">code</span><span class=\"sy0\">%</span> <span class=\"sy0\">(</span><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">won)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> cow=0<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> bull=0<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /l <span class=\"sy0\">%%</span><span class=\"re3\">a</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,4<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">i</span><span class=\"sy0\">%%</span><span class=\"re3\">a</span><span class=\"sy0\">!</span><span class=\"re2\">==</span><span class=\"sy0\">!</span><span class=\"re2\">c</span><span class=\"sy0\">%%</span><span class=\"re3\">a</span><span class=\"sy0\">!</span> <span class=\"sy0\">(</span><br/>\t\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a bull+=1<br/>\t<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/else.html\"><span class=\"kw1\">else</span></a> <span class=\"sy0\">(</span><br/>\t\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> \"entrycow=<span class=\"sy0\">%%</span><span class=\"re3\">a</span>\"<br/>\t\t<a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">scorecow</span><br/>\t<span class=\"sy0\">)</span><br/><span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> guess=<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> BULLS=<span class=\"sy0\">%</span><span class=\"re3\">bull</span><span class=\"sy0\">%</span> COWS=<span class=\"sy0\">%</span><span class=\"re3\">cow</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">game</span><br/>\u00a0<br/>:<span class=\"re0\">scorecow</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> nums=1 2 3 4<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> put=<span class=\"sy0\">!</span><span class=\"re2\">nums:%<span class=\"re3\">entrycow</span>%=</span><span class=\"sy0\">!</span><br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> <span class=\"sy0\">%%</span><span class=\"re3\">b</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(%</span><span class=\"re3\">put</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">!</span><span class=\"re2\">c</span><span class=\"sy0\">%%</span><span class=\"re3\">b</span><span class=\"sy0\">!</span><span class=\"re2\">==</span><span class=\"sy0\">!</span><span class=\"re2\">i</span><span class=\"sy0\">%</span><span class=\"re3\">entrycow</span><span class=\"sy0\">%!</span> <span class=\"sy0\">(</span><br/>\t\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a cow+=1<br/>\t\t<a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">EOF</span><br/>\t<span class=\"sy0\">)</span><br/><span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">EOF</span><br/><span class=\"co2\">::/SCORING</span><br/><span class=\"co2\"><br/>::ALREADY WON!</span><br/>:<span class=\"re0\">won</span><br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> After <span class=\"sy0\">%</span><span class=\"re3\">tries</span><span class=\"sy0\">%</span> Tries, YOU CRACKED IT<span class=\"co3\">^^</span><span class=\"sy0\">!</span> My code is <span class=\"sy0\">%</span><span class=\"re3\">code</span><span class=\"sy0\">%</span>.<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /p opt=Play again?<span class=\"sy0\">(</span>Y/N<span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> /i \"<span class=\"sy0\">!</span><span class=\"re2\">opt</span><span class=\"sy0\">!</span>\"==\"y\" <span class=\"sy0\">(</span><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">begin)</span><br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> /i \"<span class=\"sy0\">!</span><span class=\"re2\">opt</span><span class=\"sy0\">!</span>\"==\"n\" <span class=\"sy0\">(</span><a href=\"http://www.ss64.com/nt/exit.html\"><span class=\"kw1\">exit</span></a>/b<span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">won</span><br/><span class=\"co2\">::/ALREADY WON!</span><br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 33, "block": "<pre class=\"text highlighted_source\">      secret$ = \"\"<br/>      REPEAT<br/>        c$ = CHR$(&amp;30 + RND(9))<br/>        IF INSTR(secret$, c$) = 0 secret$ += c$<br/>      UNTIL LEN(secret$) = 4<br/>\u00a0<br/>      PRINT \"Guess a four-digit number with no digit used twice.\"'<br/>      guesses% = 0<br/>      REPEAT<br/>\u00a0<br/>        REPEAT<br/>          INPUT \"Enter your guess: \" guess$<br/>          IF LEN(guess$) &lt;&gt; 4 PRINT \"Must be a four-digit number\"<br/>        UNTIL LEN(guess$) = 4<br/>        guesses% += 1<br/>\u00a0<br/>        IF guess$ = secret$ PRINT \"You won after \"; guesses% \" guesses!\"\u00a0: END<br/>\u00a0<br/>        bulls% = 0<br/>        cows% = 0<br/>        FOR i% = 1 TO 4<br/>          c$ = MID$(secret$, i%, 1)<br/>          IF MID$(guess$, i%, 1) = c$ THEN<br/>            bulls% += 1<br/>          ELSE IF INSTR(guess$, c$) THEN<br/>              cows% += 1<br/>            ENDIF<br/>          ENDIF<br/>        NEXT i%<br/>        PRINT \"You got \"\u00a0;bulls% \" bull(s) and \"\u00a0;cows% \" cow(s).\"<br/>\u00a0<br/>      UNTIL FALSE<br/>\u00a0</pre>"}, {"lang": "Brat", "loc": 39, "block": "<pre class=\"text highlighted_source\">secret_length = 4<br/>\u00a0<br/>secret = [1 2 3 4 5 6 7 8 9].shuffle.pop secret_length<br/>\u00a0<br/>score = { guess |<br/>  cows = 0<br/>  bulls = 0 <br/>\u00a0<br/>  guess.each_with_index { digit, index | <br/>    true? digit == secret[index]<br/>      { bulls = bulls + 1 }<br/>      { true? secret.include?(digit)<br/>        { cows = cows + 1 }<br/>      }<br/>  } <br/>\u00a0<br/>  [cows: cows, bulls: bulls]<br/>}<br/>\u00a0<br/>won = false<br/>guesses = 1<br/>\u00a0<br/>p \"I have chosen a number with four unique digits from 1 through 9. Can you guess it?\"<br/>\u00a0<br/>while { not won }<br/>  {<br/>    print \"Guess #{guesses}: \"<br/>    guess = g.strip.dice.map { d | d.to_i }<br/>\u00a0<br/>    when { guess == secret }  { p \"You won in #{guesses} guesses!\"; won = true }<br/>      { guess.include?(0) || guess.include?(null) } { p \"Your guess should only include digits 1 through 9.\" }<br/>      { guess.length\u00a0!= secret.length } { p \"Your guess was not the correct length. The number has exactly #{secret.length} digits.\" }<br/>      { guess.unique.length\u00a0!= secret.length } { p \"Each digit should only appear once in your guess.\" }<br/>      { true } {<br/>        result = score guess<br/>        p \"Score: #{result[:bulls]} bulls, #{result[:cows]} cows.\"<br/>        guesses = guesses + 1<br/>      }    <br/>  }</pre>"}, {"lang": "C", "loc": 60, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdarg.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;stdbool.h&gt;</span><br/><span class=\"co2\">#include &lt;curses.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define MAX_NUM_TRIES 72</span><br/><span class=\"co2\">#define LINE_BEGIN 7</span><br/><span class=\"co2\">#define LAST_LINE 18</span><br/>\u00a0<br/><span class=\"kw4\">int</span> yp<span class=\"sy0\">=</span>LINE_BEGIN<span class=\"sy0\">,</span> xp<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">char</span> number<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">char</span> guess<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">#define MAX_STR 256</span><br/><span class=\"kw4\">void</span> mvaddstrf<span class=\"br0\">(</span><span class=\"kw4\">int</span> y<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>fmt<span class=\"sy0\">,</span> ...<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  va_list args<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">char</span> buf<span class=\"br0\">[</span>MAX_STR<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_start.html\"><span class=\"kw3\">va_start</span></a><span class=\"br0\">(</span>args<span class=\"sy0\">,</span> fmt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/vsprintf.html\"><span class=\"kw3\">vsprintf</span></a><span class=\"br0\">(</span>buf<span class=\"sy0\">,</span> fmt<span class=\"sy0\">,</span> args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  move<span class=\"br0\">(</span>y<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  clrtoeol<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  addstr<span class=\"br0\">(</span>buf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_end.html\"><span class=\"kw3\">va_end</span></a><span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> ask_for_a_number<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">char</span> symbols<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"123456789\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  move<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> clrtoeol<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  addstr<span class=\"br0\">(</span><span class=\"st0\">\"Enter four digits: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>i<span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getch.html\"><span class=\"kw3\">getch</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&gt;=</span> <span class=\"st0\">'1'</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;=</span> <span class=\"st0\">'9'</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>symbols<span class=\"br0\">[</span>c<span class=\"sy0\">-</span><span class=\"st0\">'1'</span><span class=\"br0\">]</span><span class=\"sy0\">!=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      addch<span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      symbols<span class=\"br0\">[</span>c<span class=\"sy0\">-</span><span class=\"st0\">'1'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>      guess<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> choose_the_number<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">char</span> symbols<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"123456789\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>i<span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    j <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> symbols<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      number<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> symbols<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      symbols<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 78, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;algorithm&gt;</span><br/><span class=\"co2\">#include &lt;cstdlib&gt;</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> contains_duplicates<span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span> s<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">sort</span><span class=\"br0\">(</span>s.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, s.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> std<span class=\"sy4\">::</span><span class=\"me2\">adjacent_find</span><span class=\"br0\">(</span>s.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, s.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> s.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> game<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">typedef</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy4\">::</span><span class=\"me2\">size_type</span> index<span class=\"sy4\">;</span><br/>\u00a0<br/>  std<span class=\"sy4\">::</span><span class=\"me2\">string</span> symbols <span class=\"sy1\">=</span> <span class=\"st0\">\"0123456789\"</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> <span class=\"kw4\">const</span> selection_length <span class=\"sy1\">=</span> <span class=\"nu0\">4</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  std<span class=\"sy4\">::</span><span class=\"me2\">random_shuffle</span><span class=\"br0\">(</span>symbols.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, symbols.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">string</span> selection <span class=\"sy1\">=</span> symbols.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, selection_length<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">string</span> guess<span class=\"sy4\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Your guess? \"</span>, std<span class=\"sy4\">::</span><span class=\"me2\">getline</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cin</span>, guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>guess.<span class=\"me1\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> selection_length<br/>        <span class=\"sy3\">||</span> guess.<span class=\"me1\">find_first_not_of</span><span class=\"br0\">(</span>symbols<span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy4\">::</span><span class=\"me2\">npos</span><br/>        <span class=\"sy3\">||</span> contains_duplicates<span class=\"br0\">(</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> guess <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" is not a valid guess!\"</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">continue</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> bulls <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> cows <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>index i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy3\">!</span><span class=\"sy1\">=</span> selection_length<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>i<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      index pos <span class=\"sy1\">=</span> selection.<span class=\"me1\">find</span><span class=\"br0\">(</span>guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pos <span class=\"sy1\">==</span> i<span class=\"br0\">)</span><br/>        <span class=\"sy2\">++</span>bulls<span class=\"sy4\">;</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pos <span class=\"sy3\">!</span><span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy4\">::</span><span class=\"me2\">npos</span><span class=\"br0\">)</span><br/>        <span class=\"sy2\">++</span>cows<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> bulls <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" bulls, \"</span> <span class=\"sy1\">&lt;&lt;</span> cows <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" cows.<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>bulls <span class=\"sy1\">==</span> selection_length<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Congratulations! You have won!<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cerr</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Oops! Something went wrong with input, or you've entered end-of-file!<span class=\"es1\">\\n</span>Exiting ...<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"kw2\">EXIT_FAILURE</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Welcome to bulls and cows!<span class=\"es1\">\\n</span>Do you want to play? \"</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">string</span> answer<span class=\"sy4\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy3\">!</span>std<span class=\"sy4\">::</span><span class=\"me2\">getline</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cin</span>, answer<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span><br/>        std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"I can't get an answer. Exiting.<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">EXIT_FAILURE</span><span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer <span class=\"sy1\">==</span> <span class=\"st0\">\"yes\"</span> <span class=\"sy3\">||</span> answer <span class=\"sy1\">==</span> <span class=\"st0\">\"Yes\"</span> <span class=\"sy3\">||</span> answer <span class=\"sy1\">==</span> <span class=\"st0\">\"y\"</span> <span class=\"sy3\">||</span> answer <span class=\"sy1\">==</span> <span class=\"st0\">\"Y\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer <span class=\"sy1\">==</span> <span class=\"st0\">\"no\"</span> <span class=\"sy3\">||</span> answer <span class=\"sy1\">==</span> <span class=\"st0\">\"No\"</span> <span class=\"sy3\">||</span> answer <span class=\"sy1\">==</span> <span class=\"st0\">\"n\"</span> <span class=\"sy3\">||</span> answer <span class=\"sy1\">==</span> <span class=\"st0\">\"N\"</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span><br/>        std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Ok. Goodbye.<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">EXIT_SUCCESS</span><span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Please answer yes or no: \"</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    game<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Another game? \"</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 80, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> BullsnCows<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>            KnuthShuffle<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"kw1\">ref</span> nums<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> chosenNum <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            Array<span class=\"sy0\">.</span><span class=\"me1\">Copy</span><span class=\"br0\">(</span>nums, chosenNum, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Your Guess\u00a0?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>game<span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, chosenNum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Your next Guess\u00a0?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadKey</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> KnuthShuffle<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"kw1\">ref</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span> array<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw5\">System</span><span class=\"sy0\">.</span><span class=\"me1\">Random</span> random <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw5\">System</span><span class=\"sy0\">.</span><span class=\"me1\">Random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> array<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> random<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span>array<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                T temp <span class=\"sy0\">=</span> array<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span> array<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> array<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span> array<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> temp<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">bool</span> game<span class=\"br0\">(</span><span class=\"kw4\">string</span> guess, <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> num<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> guessed <span class=\"sy0\">=</span> guess<span class=\"sy0\">.</span><span class=\"me1\">ToCharArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> bullsCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, cowsCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>guessed<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Not a valid guess.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw4\">int</span> curguess <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"kw4\">char</span><span class=\"sy0\">.</span><span class=\"me1\">GetNumericValue</span><span class=\"br0\">(</span>guessed<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>curguess <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> curguess <span class=\"sy0\">&gt;</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Digit must be ge greater 0 and lower 10.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">return</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>curguess <span class=\"sy0\">==</span> num<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    bullsCount<span class=\"sy0\">++;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>curguess <span class=\"sy0\">==</span> num<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                            cowsCount<span class=\"sy0\">++;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>bullsCount <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Congratulations! You have won!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span><br/>            <span class=\"br0\">{</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Your Score is {0} bulls and {1} cows\"</span>, bullsCount, cowsCount<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Ceylon", "loc": 70, "block": "<pre class=\"text highlighted_source\">import ceylon.random {<br/>    DefaultRandom<br/>}<br/>\u00a0<br/>shared void run() {<br/>\u00a0<br/>    value random = DefaultRandom();<br/>\u00a0<br/>    function generateDigits() =&gt;<br/>            random.elements(1..9).distinct.take(4).sequence();<br/>\u00a0<br/>    function validate(String guess) {<br/>        variable value ok = true;<br/>        if (!guess.every((Character element) =&gt; element.digit)) {<br/>            print(\"numbers only, please\");<br/>            ok = false;<br/>        }<br/>        if ('0' in guess) {<br/>            print(\"only 1 to 9, please\");<br/>            ok = false;<br/>        }<br/>        if (guess.distinct.shorterThan(guess.size)) {<br/>            print(\"no duplicates, please\");<br/>            ok = false;<br/>        }<br/>        if (guess.size\u00a0!= 4) {<br/>            print(\"4 digits please\");<br/>            ok = false;<br/>        }<br/>        return ok;<br/>    }<br/>\u00a0<br/>    function score({Integer*} target, {Integer*} guess) {<br/>        variable value bulls = 0;<br/>        variable value cows = 0;<br/>        for ([a, b] in zipPairs(target, guess)) {<br/>            if (a == b) {<br/>                bulls++;<br/>            } else if (target.contains(b)) {<br/>                cows++;<br/>            }<br/>        }<br/>        return [bulls, cows];<br/>    }<br/>\u00a0<br/>    while (true) {<br/>        value digits = generateDigits();<br/>        print(\"I have chosen my four digits, please guess what they are.<br/>               Use only the digits 1 to 9 with no duplicates and enter them with no spaces. eg 1234<br/>               Enter q or Q to quit.\");<br/>        while (true) {<br/>            if (exists line = process.readLine()) {<br/>                if (line.uppercased == \"Q\") {<br/>                    return;<br/>                }<br/>                if (validate(line)) {<br/>                    value guessDigits = line.map((Character element) =&gt; Integer.parse(element.string)).narrow&lt;Integer&gt;();<br/>                    value [bulls, cows] = score(digits, guessDigits);<br/>                    if (bulls == 4) {<br/>                        print(\"You win!\");<br/>                        break;<br/>                    }<br/>                    else {<br/>                        print(\"Bulls: ``bulls``, Cows:  ``cows``\");<br/>                    }<br/>                }<br/>            }<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "Clojure", "loc": 40, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">ns</span> bulls<span class=\"sy0\">-</span>and<span class=\"sy0\">-</span>cows<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> bulls <span class=\"br0\">[</span>guess solution<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">count</span> <span class=\"br0\">(</span><span class=\"kw1\">filter</span> true? <span class=\"br0\">(</span><span class=\"kw1\">map</span> <span class=\"sy0\">=</span> guess solution<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> cows <span class=\"br0\">[</span>guess solution<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">-</span><br/>   <span class=\"br0\">(</span><span class=\"kw1\">count</span> <span class=\"br0\">(</span><span class=\"kw1\">filter</span> <span class=\"br0\">(</span><span class=\"kw1\">set</span> solution<span class=\"br0\">)</span> guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>bulls guess solution<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> valid<span class=\"sy0\">-</span>input?<br/>  <span class=\"st0\">\"checks whether the string is a 4 digit number with unique digits\"</span><br/>  <span class=\"br0\">[</span>user<span class=\"sy0\">-</span>input<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">re-seq</span> #<span class=\"st0\">\"^(?!.*(<span class=\"es0\">\\d</span>).*<span class=\"es0\">\\1</span>)<span class=\"es0\">\\d</span>{4}$\"</span> user<span class=\"sy0\">-</span>input<span class=\"br0\">)</span><br/>    true<br/>    false<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> enter<span class=\"sy0\">-</span>guess <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"st0\">\"Let the user enter a guess. Verify the input. Repeat until valid.<br/>returns a list of digits enters by the user (# # # #)\"</span><br/>    <span class=\"br0\">(</span>println <span class=\"st0\">\"Enter your guess: \"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>guess <span class=\"br0\">(</span>read<span class=\"sy0\">-</span>line<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>valid<span class=\"sy0\">-</span>input? guess<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span>Character<span class=\"sy0\">/</span>digit <span class=\"sy0\">%</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> guess<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">recur</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> bulls<span class=\"sy0\">-</span>and<span class=\"sy0\">-</span>cows <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"st0\">\"generate a random 4 digit number from the list of (1 ... 9): no repeating digits<br/>player tries to guess the number with bull and cows rules gameplay\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>solution <span class=\"br0\">(</span> <span class=\"kw1\">take</span> <span class=\"nu0\">4</span> <span class=\"br0\">(</span>shuffle <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>println <span class=\"st0\">\"lets play some bulls and cows!\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">loop</span> <span class=\"br0\">[</span>guess <span class=\"br0\">(</span>enter<span class=\"sy0\">-</span>guess<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span>println <span class=\"br0\">(</span>bulls guess solution<span class=\"br0\">)</span> <span class=\"st0\">\" bulls and \"</span> <span class=\"br0\">(</span>cows guess solution<span class=\"br0\">)</span> <span class=\"st0\">\" cows.\"</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span><span class=\"sy0\">=</span> guess solution<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">recur</span> <span class=\"br0\">(</span>enter<span class=\"sy0\">-</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>println <span class=\"st0\">\"You have won!\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>bulls<span class=\"sy0\">-</span>and<span class=\"sy0\">-</span>cows<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Coco", "loc": 4, "block": "<pre class=\"text highlighted_source\">say = print<br/>prompt = (str) -&gt;<br/>    putstr str<br/>    readline!\u00a0? quit!</pre>"}, {"lang": "Common Lisp", "loc": 42, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> get-number <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>digits '<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> digits<span class=\"br0\">)</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> digits<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>pushnew <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span> digits<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> compute-score <span class=\"br0\">(</span>guess number<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>cows  <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>bulls <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>map <span class=\"kw1\">nil</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>guess-digit number-digit<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> guess-digit number-digit<span class=\"br0\">)</span> <span class=\"br0\">(</span>incf bulls<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">member</span> guess-digit number<span class=\"br0\">)</span>  <span class=\"br0\">(</span>incf cows<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         guess number<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>values cows bulls<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> number-<span class=\"sy0\">&gt;</span>guess <span class=\"br0\">(</span>number<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span>integerp number<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>digits '<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">zerop</span> number<span class=\"br0\">)</span> digits<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>multiple-value-bind <span class=\"br0\">(</span>quotient remainder<span class=\"br0\">)</span> <span class=\"br0\">(</span>floor number <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>push remainder digits<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">setf</span> number quotient<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> valid-guess-p <span class=\"br0\">(</span>guess<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>every <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>digit<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span> digit <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span> guess<span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">equal</span> guess <span class=\"br0\">(</span>remove-duplicates guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> play-game <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>stream *query-io*<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>number <span class=\"br0\">(</span>get-number<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>cows   <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>bulls  <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">4</span> bulls<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>format stream <span class=\"st0\">\"~&amp;Guess a 4-digit number: \"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>guess <span class=\"br0\">(</span>number-<span class=\"sy0\">&gt;</span>guess <span class=\"br0\">(</span>read stream<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>valid-guess-p guess<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>format stream <span class=\"st0\">\"~&amp;Malformed guess.\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>t<br/>             <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>values cows bulls<span class=\"br0\">)</span> <span class=\"br0\">(</span>compute-score guess number<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">4</span> bulls<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>format stream <span class=\"st0\">\"~&amp;Correct, you win!\"</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>format stream <span class=\"st0\">\"~&amp;Score: ~a cows, ~a bulls.\"</span><br/>                       cows bulls<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 18, "block": "<pre class=\"d highlighted_source\"><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">random</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span><br/>           std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">ascii</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> hidden <span class=\"sy0\">=</span> <span class=\"st0\">\"123456789\"</span>d.<span class=\"me1\">randomCover</span>.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"Next guess: \"</span>.<span class=\"me1\">write</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">const</span> d <span class=\"sy0\">=</span> readln.<span class=\"me1\">strip</span>.<span class=\"me1\">array</span>.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">release</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>d.<span class=\"me1\">count</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span> <span class=\"sy0\">&amp;&amp;</span> d.<span class=\"me1\">all</span><span class=\"sy0\">!</span>isDigit <span class=\"sy0\">&amp;&amp;</span> d.<span class=\"me1\">uniq</span>.<span class=\"me1\">count</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">immutable</span> bulls <span class=\"sy0\">=</span> d.<span class=\"me1\">zip</span><span class=\"br0\">(</span>hidden<span class=\"br0\">)</span>.<span class=\"me1\">count</span><span class=\"sy0\">!</span>q<span class=\"br0\">{</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>                      cows <span class=\"sy0\">=</span> d.<span class=\"me1\">count</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>g <span class=\"sy0\">=&gt;</span> hidden.<span class=\"me1\">canFind</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> bulls<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>bulls <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> <span class=\"st0\">\" You guessed it!\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>            writefln<span class=\"br0\">(</span><span class=\"st0\">\"bulls\u00a0%d, cows\u00a0%d\"</span><span class=\"sy0\">,</span> bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"st0\">\" Bad guess! (4 unique digits, 1-9)\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "E", "loc": 82, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> Digit <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">9</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> Number <span class=\"sy0\">:=</span> <a href=\"http://wiki.erights.org/wiki/Tuple\"><span class=\"kw6\">Tuple</span></a><span class=\"br0\">[</span>Digit<span class=\"sy0\">,</span>Digit<span class=\"sy0\">,</span>Digit<span class=\"sy0\">,</span>Digit<span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"coMULTI\">/** Choose a random number to be guessed. */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> pick4<span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/entropy\"><span class=\"kw7\">entropy</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> digits <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"br0\">]</span>.<span class=\"me1\">diverge</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># Partial Fisher-Yates shuffle</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> i <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">0</span>..<span class=\"sy0\">!</span><span class=\"nu0\">4</span> <span class=\"br0\">{</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> other <span class=\"sy0\">:=</span> <a href=\"http://wiki.erights.org/wiki/entropy\"><span class=\"kw7\">entropy</span></a>.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span>digits.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> i<br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> t <span class=\"sy0\">:=</span> digits<span class=\"br0\">[</span>other<span class=\"br0\">]</span><br/>        digits<span class=\"br0\">[</span>other<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> digits<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>        digits<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> t<br/>    <span class=\"br0\">}</span><br/>    return digits<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/** Compute the score of a guess. */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> scoreGuess<span class=\"br0\">(</span>actual <span class=\"sy0\">:</span>Number<span class=\"sy0\">,</span> guess <span class=\"sy0\">:</span>Number<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> bulls <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> cows <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> i <span class=\"sy0\">=&gt;</span> digit <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> guess <span class=\"br0\">{</span><br/>        <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>digit <span class=\"sy0\">==</span> actual<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            bulls <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>        <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>actual.<span class=\"me1\">indexOf1</span><span class=\"br0\">(</span>digit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            cows <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    return <span class=\"br0\">[</span>bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/** Parse a guess string into a list of digits (Number). */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> parseGuess<span class=\"br0\">(</span>guessString<span class=\"sy0\">,</span> fail<span class=\"br0\">)</span> <span class=\"sy0\">:</span>Number <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>guessString.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        return fail<span class=\"br0\">(</span><span class=\"st0\">`I need four digits, not ${guessString.size()} digits.`</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> digits <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> c <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> guessString <span class=\"br0\">{</span><br/>            <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">'1'</span>..<span class=\"st0\">'9'</span><span class=\"br0\">)</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                digits with<span class=\"sy0\">=</span> c <span class=\"sy0\">-</span> <span class=\"st0\">'0'</span><br/>            <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span><br/>                return fail<span class=\"br0\">(</span><span class=\"st0\">`I need a digit from 1 to 9, not \"$c\".`</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        return digits<br/>    <span class=\"br0\">}</span>  <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/** The game loop: asking for guesses and reporting scores and win conditions.<br/>    The return value is null or a broken reference if there was a problem. */</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> bullsAndCows<span class=\"br0\">(</span>askUserForGuess<span class=\"sy0\">,</span> tellUser<span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/entropy\"><span class=\"kw7\">entropy</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> actual <span class=\"sy0\">:=</span> pick4<span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/entropy\"><span class=\"kw7\">entropy</span></a><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> gameTurn<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        return when <span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> guessString <span class=\"sy0\">:=</span> askUserForGuess <span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>            escape tellAndContinue <span class=\"br0\">{</span><br/>\u00a0<br/>                <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> guess <span class=\"sy0\">:=</span> parseGuess<span class=\"br0\">(</span>guessString<span class=\"sy0\">,</span> tellAndContinue<span class=\"br0\">)</span>                <br/>                <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> <span class=\"br0\">[</span>bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> scoreGuess<span class=\"br0\">(</span>actual<span class=\"sy0\">,</span> guess<span class=\"br0\">)</span><br/>\u00a0<br/>                <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>bulls <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    tellUser <span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span><span class=\"st0\">`You got it! The number is $actual!`</span><span class=\"br0\">)</span><br/>                    <a href=\"http://wiki.erights.org/wiki/null\"><span class=\"kw6\">null</span></a><br/>                <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/else\"><span class=\"kw2\">else</span></a> <span class=\"br0\">{</span><br/>                    tellAndContinue<span class=\"br0\">(</span><span class=\"st0\">`Your score for $guessString is $bulls bulls and $cows cows.`</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/catch\"><span class=\"kw2\">catch</span></a> message <span class=\"br0\">{</span><br/>                <span class=\"co1\"># The parser or scorer has something to say, and the game continues afterward</span><br/>                when <span class=\"br0\">(</span>tellUser <span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span>message<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>                    gameTurn<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/catch\"><span class=\"kw2\">catch</span></a> p <span class=\"br0\">{</span><br/>            <span class=\"co1\"># Unexpected problem of some sort</span><br/>            tellUser <span class=\"sy0\">&lt;-</span> <span class=\"br0\">(</span><span class=\"st0\">\"Sorry, game crashed.\"</span><span class=\"br0\">)</span><br/>            <a href=\"http://wiki.erights.org/wiki/throw\"><span class=\"kw6\">throw</span></a><span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    return gameTurn<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Eiffel", "loc": 114, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span><br/>\tBULLS_AND_COWS<br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\texecute<br/>\u00a0<br/><span class=\"kw1\">feature</span><br/>\u00a0<br/>\texecute<br/>\t\t\t<span class=\"co1\">-- Initiate game.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Let's play bulls and cows.<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">create</span> answer.<span class=\"me1\">make_empty</span><br/>\t\t\tplay<br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span><br/>\u00a0<br/>\tplay<br/>\t\t\t<span class=\"co1\">-- Plays bulls ans cows.</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\tcount, seed<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t\tguess<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">from</span><br/>\t\t\t<span class=\"kw2\">until</span><br/>\t\t\t\tseed <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Enter a positive integer.<span class=\"es0\">%N</span>Your play will be generated from it.<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t\tio.<span class=\"me1\">read_integer</span><br/>\t\t\t\tseed <span class=\"sy0\">:=</span> io.<span class=\"me1\">last_integer</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\tgenerate_answer <span class=\"br0\">(</span>seed<span class=\"br0\">)</span><br/>\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Your game has been created.<span class=\"es0\">%N</span> Try to guess the four digit number.<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">create</span> guess.<span class=\"me1\">make_empty</span><br/>\t\t\t<span class=\"kw2\">from</span><br/>\t\t\t<span class=\"kw2\">until</span><br/>\t\t\t\tguess ~ answer<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Guess: \"</span><span class=\"br0\">)</span><br/>\t\t\t\tio.<span class=\"me1\">read_line</span><br/>\t\t\t\tguess <span class=\"sy0\">:=</span> io.<span class=\"me1\">last_string</span><br/>\t\t\t\t<span class=\"kw2\">if</span> guess.<span class=\"me1\">count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"kw2\">and</span> guess.<span class=\"me1\">is_natural</span> <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> guess.<span class=\"me1\">has</span> <span class=\"br0\">(</span><span class=\"st0\">'0'</span><span class=\"br0\">)</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span>score <span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t\t\tcount <span class=\"sy0\">:=</span> count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Your input does not have the correct format.\"</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Congratulations! You won with \"</span> <span class=\"sy0\">+</span> count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" guesses.\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tanswer<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\u00a0<br/>\tgenerate_answer <span class=\"br0\">(</span>s<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><span class=\"br0\">)</span><br/>\t\t\t<span class=\"co1\">-- Answer with 4-digits between 1 and 9 stored in 'answer'.</span><br/>\t\t<span class=\"kw2\">require</span><br/>\t\t\tpositive_seed<span class=\"sy0\">:</span> s <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\trandom<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+random&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">RANDOM</span></a><br/>\t\t\tran<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">create</span> random.<span class=\"me1\">set_seed</span> <span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">from</span><br/>\t\t\t<span class=\"kw2\">until</span><br/>\t\t\t\tanswer.<span class=\"me1\">count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tran <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>random.<span class=\"me1\">double_item</span> <span class=\"sy0\">*</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span>.<span class=\"me1\">floor</span><br/>\t\t\t\t<span class=\"kw2\">if</span> ran <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> answer.<span class=\"me1\">has_substring</span> <span class=\"br0\">(</span>ran.<span class=\"me1\">out</span><span class=\"br0\">)</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tanswer.<span class=\"me1\">append</span> <span class=\"br0\">(</span>ran.<span class=\"me1\">out</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\trandom.<span class=\"me1\">forth</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tanswer_not_void<span class=\"sy0\">:</span> answer <span class=\"sy0\">/=</span> <span class=\"kw3\">Void</span><br/>\t\t\tcorrect_length<span class=\"sy0\">:</span> answer.<span class=\"me1\">count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tscore <span class=\"br0\">(</span>g<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><span class=\"br0\">)</span><span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\t\t\t<span class=\"co1\">-- Score for the guess 'g' depending on 'answer'.</span><br/>\t\t<span class=\"kw2\">require</span><br/>\t\t\tsame_length<span class=\"sy0\">:</span> answer.<span class=\"me1\">count</span> <span class=\"sy0\">=</span> g.<span class=\"me1\">count</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\tk<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t\ta, ge<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><br/>\t\t\ta <span class=\"sy0\">:=</span> answer.<span class=\"me1\">twin</span><br/>\t\t\tge <span class=\"sy0\">:=</span> g.<span class=\"me1\">twin</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">1</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> a.<span class=\"me1\">count</span> <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\t<span class=\"kw2\">if</span> a <span class=\"br0\">[</span>c.<span class=\"me1\">item</span><span class=\"br0\">]</span> ~ ge <span class=\"br0\">[</span>c.<span class=\"me1\">item</span><span class=\"br0\">]</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"kw3\">Result</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"BULL \"</span><br/>\t\t\t\t\ta <span class=\"br0\">[</span>c.<span class=\"me1\">item</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"st0\">' '</span><br/>\t\t\t\t\tge <span class=\"br0\">[</span>c.<span class=\"me1\">item</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"st0\">' '</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">1</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> a.<span class=\"me1\">count</span> <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\t<span class=\"kw2\">if</span> a <span class=\"br0\">[</span>c.<span class=\"me1\">item</span><span class=\"br0\">]</span> <span class=\"sy0\">/=</span> <span class=\"st0\">' '</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tk <span class=\"sy0\">:=</span> ge.<span class=\"me1\">index_of</span> <span class=\"br0\">(</span>a <span class=\"br0\">[</span>c.<span class=\"me1\">item</span><span class=\"br0\">]</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"kw2\">if</span> k <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"kw3\">Result</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"COW \"</span><br/>\t\t\t\t\t\tge <span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"st0\">' '</span><br/>\t\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw2\">end</span><br/>\u00a0</pre>"}, {"lang": "Elena", "loc": 84, "block": "<pre class=\"text highlighted_source\">import system'routines.<br/>import extensions.<br/>\u00a0<br/>class GameMaster<br/>{<br/>    object theNumbers.<br/>    object theAttempt.<br/>\u00a0<br/>    constructor new<br/>    [<br/>        // generate secret number<br/>        var aRandomNumbers\u00a0:= (1,2,3,4,5,6,7,8,9) randomize:9.<br/>\u00a0<br/>        theNumbers\u00a0:= aRandomNumbers Subarray:4 at:0.<br/>        theAttempt\u00a0:= Integer new:1.<br/>    ]<br/>\u00a0<br/>    ask<br/>    [<br/>        var aRow\u00a0:= console print(\"Your Guess #\",theAttempt,\"\u00a0?\"); readLine.<br/>\u00a0<br/>        ^ aRow toArray.<br/>    ]<br/>\u00a0<br/>    proceed\u00a0: aGuess<br/>    [<br/>        var aCows\u00a0:= Integer new:0.<br/>        var aBulls\u00a0:= Integer new:0.<br/>\u00a0<br/>        if (aGuess length\u00a0!= 4)<br/>            [ aBulls append(-1). ];<br/>            [<br/>                try(0 to:3 do(:i)<br/>                [<br/>                    var ch\u00a0:= aGuess[i].<br/>                    var aNumber\u00a0:= ch literal; toInt.<br/>\u00a0<br/>                    // check range<br/>                    ifnot ((aNumber &gt; 0) &amp;&amp; (aNumber &lt; 10))<br/>                        [ InvalidArgumentException new; raise. ].<br/>\u00a0<br/>                    // check duplicates<br/>                    var duplicate\u00a0:= aGuess seekEach(:x)((x == ch)&amp;&amp;(x equalReference:ch; inverted)).<br/>                    if (nil\u00a0!= duplicate)<br/>                    [<br/>                        InvalidArgumentException new; raise.<br/>                    ].<br/>\u00a0<br/>                    if (aNumber == theNumbers[i])<br/>                        [ aBulls append(1) ];<br/>                        [<br/>                            (theNumbers ifExists:aNumber)<br/>                               \u00a0? [ aCows append(1) ].<br/>                        ].<br/>                ])<br/>                {<br/>                    on(Exception e)<br/>                    [<br/>                        aBulls int\u00a0:= -1<br/>                    ]<br/>                }.<br/>            ].<br/>\u00a0<br/>        aBulls =&gt;<br/>            -1 [ console printLine:\"Not a valid guess.\". ^ true ];<br/>             4 [ console printLine:\"Congratulations! You have won!\". ^ false ];<br/>            \u00a0! [<br/>                 theAttempt append(1).<br/>\u00a0<br/>                 console printLine(\"Your Score is \",aBulls,\" bulls and \",aCows,\" cows\").<br/>\u00a0<br/>                 ^ true<br/>             ].<br/>    ]<br/>}<br/>\u00a0<br/>public program =<br/>[<br/>    var aGameMaster\u00a0:= GameMaster new.<br/>\u00a0<br/>    $(aGameMaster proceed:(aGameMaster ask)) doWhile.<br/>\u00a0<br/>    console readChar.<br/>].</pre>"}, {"lang": "Elixir", "loc": 42, "block": "<pre class=\"text highlighted_source\">defmodule Bulls_and_cows do<br/>  def play(size \\\\ 4) do<br/>    secret = Enum.take_random(1..9, size) |&gt; Enum.map(&amp;to_string/1)<br/>    play(size, secret)<br/>  end<br/>\u00a0<br/>  defp play(size, secret) do<br/>    guess = input(size)<br/>    if guess == secret do<br/>      IO.puts \"You win!\"<br/>    else<br/>      {bulls, cows} = count(guess, secret)<br/>      IO.puts \"  Bulls: #{bulls}; Cows: #{cows}\"<br/>      play(size, secret)<br/>    end<br/>  end<br/>\u00a0<br/>  defp input(size) do<br/>    guess = IO.gets(\"Enter your #{size}-digit guess: \") |&gt; String.strip<br/>    cond do<br/>      guess == \"\" -&gt;<br/>        IO.puts \"Give up\"<br/>        exit(:normal)<br/>      String.length(guess)==size and String.match?(guess, ~r/^[1-9]+$/) -&gt;<br/>        String.codepoints(guess)<br/>      true -&gt; input(size)<br/>    end<br/>  end<br/>\u00a0<br/>  defp count(guess, secret) do<br/>    Enum.zip(guess, secret) |&gt;<br/>    Enum.reduce({0,0}, fn {g,s},{bulls,cows} -&gt;<br/>      cond do<br/>        g == s      -&gt; {bulls + 1, cows}<br/>        g in secret -&gt; {bulls, cows + 1}<br/>        true        -&gt; {bulls, cows}<br/>      end<br/>    end)<br/>  end<br/>end<br/>\u00a0<br/>Bulls_and_cows.play</pre>"}, {"lang": "Erlang", "loc": 45, "block": "<pre class=\"erlang highlighted_source\"><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>bulls_and_cows<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>generate_secret<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> score_guess<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> play<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% generate the secret code</span><br/><span class=\"re3\">generate_secret</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">generate_secret</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"re3\">generate_secret</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"re5\">_</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">Secret</span><span class=\"sy1\">;</span><br/><span class=\"re3\">generate_secret</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">Digits</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re5\">Next</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">nth</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/random.html\"><span class=\"kw5\">random</span></a>:<span class=\"re3\">uniform</span><span class=\"br0\">(</span><span class=\"kw3\">length</span><span class=\"br0\">(</span><span class=\"re5\">Digits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Digits</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">generate_secret</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span> <span class=\"sy3\">++</span> <span class=\"br0\">[</span><span class=\"re5\">Next</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">Digits</span> <span class=\"sy3\">--</span> <span class=\"br0\">[</span><span class=\"re5\">Next</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% evaluate a guess </span><br/><span class=\"re3\">score_guess</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">when</span> <span class=\"kw3\">length</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"br0\">)</span> <span class=\"sy3\">=/=</span> <span class=\"kw3\">length</span><span class=\"br0\">(</span><span class=\"re5\">Guess</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"kw3\">throw</span><span class=\"br0\">(</span>badguess<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">score_guess</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re5\">Bulls</span> <span class=\"sy3\">=</span> <span class=\"re3\">count_bulls</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span><span class=\"re5\">Guess</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re5\">Cows</span> <span class=\"sy3\">=</span> <span class=\"re3\">count_cows</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"sy1\">,</span> <span class=\"re5\">Bulls</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"br0\">[</span><span class=\"re5\">Bulls</span><span class=\"sy1\">,</span> <span class=\"re5\">Cows</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% count bulls (exact matches)</span><br/><span class=\"re3\">count_bulls</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"kw3\">length</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">filter</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"re5\">I</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">nth</span><span class=\"br0\">(</span><span class=\"re5\">I</span><span class=\"sy1\">,</span><span class=\"re5\">Secret</span><span class=\"br0\">)</span> <span class=\"sy3\">==</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">nth</span><span class=\"br0\">(</span><span class=\"re5\">I</span><span class=\"sy1\">,</span><span class=\"re5\">Guess</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"sy1\">,</span><br/>                      <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"kw3\">length</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% count cows (digits present but out of place)</span><br/><span class=\"re3\">count_cows</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"sy1\">,</span> <span class=\"re5\">Bulls</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>   <span class=\"kw3\">length</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">filter</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"re5\">I</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">member</span><span class=\"br0\">(</span><span class=\"re5\">I</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"sy1\">,</span> <span class=\"re5\">Secret</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"re5\">Bulls</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">% play a game</span><br/><span class=\"re3\">play</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re3\">generate_secret</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re3\">read_guess</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">Guess</span><span class=\"sy1\">,</span> <span class=\"re3\">score_guess</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span><span class=\"re5\">Guess</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">_</span><span class=\"sy1\">,</span> <span class=\"re5\">_</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"kw3\">put</span>_<span class=\"re3\">chars</span><span class=\"br0\">(</span><span class=\"st0\">\"Correct!<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"sy1\">,</span> <span class=\"re5\">_</span><span class=\"sy1\">,</span> <span class=\"re5\">Score</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"kw3\">put</span>_<span class=\"re3\">chars</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>bulls:\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">write</span><span class=\"br0\">(</span><span class=\"kw3\">hd</span><span class=\"br0\">(</span><span class=\"re5\">Score</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"kw3\">put</span>_<span class=\"re3\">chars</span><span class=\"br0\">(</span><span class=\"st0\">\", cows:\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">write</span><span class=\"br0\">(</span><span class=\"kw3\">hd</span><span class=\"br0\">(</span><span class=\"kw3\">tl</span><span class=\"br0\">(</span><span class=\"re5\">Score</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"kw3\">put</span>_<span class=\"re3\">chars</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re3\">play_round</span><span class=\"br0\">(</span><span class=\"re5\">Secret</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">read_guess</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">map</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"re5\">D</span><span class=\"br0\">)</span><span class=\"sy1\">-&gt;</span><span class=\"me1\">D</span><span class=\"sy3\">-</span><span class=\"nu0\">48</span> <span class=\"kw1\">end</span><span class=\"sy1\">,</span><br/>    <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">sublist</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"kw3\">get</span>_<span class=\"re3\">line</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter your 4-digit guess: \"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Euphoria", "loc": 106, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">include</span> std\\text.e<br/><span class=\"kw1\">include</span> std\\os.e<br/><span class=\"kw1\">include</span> std\\<span class=\"kw2\">sequence</span>.e<br/><span class=\"kw1\">include</span> std\\console.e<br/>\u00a0<br/><span class=\"kw2\">sequence</span> bcData <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"co1\">--bull,cow score for the player</span><br/><span class=\"kw2\">sequence</span> goalNum <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy2\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"co1\">--computer's secret number digits (element 1), marked as bull/cow</span><br/><span class=\"co1\">--indexes in element 2, integer value of it in element 3</span><br/><span class=\"kw2\">sequence</span> currentGuess <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy2\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"co1\">--player's guess, same format as goalNum</span><br/><span class=\"kw2\">sequence</span> removeChars <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&amp;</span> <span class=\"st0\">\" 0<span class=\"es0\">\\r</span><span class=\"es0\">\\t</span><span class=\"es0\">\\n</span>\"</span> <span class=\"co1\">--characters to trim (remove) from user's input. \\r, \\t are single escaped characters,</span><br/><span class=\"co1\">--0 is ascii 0x0 and number zero is ascii 48, or 0x30. The rest are wysiwyg</span><br/><span class=\"kw2\">integer</span> tries <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">--track number of tries to guess the number</span><br/><span class=\"kw2\">sequence</span> bcStrings <span class=\"sy1\">=</span><span class=\"br0\">{</span><span class=\"st0\">\"bull\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"cow\"</span><span class=\"br0\">}</span> <span class=\"co1\">--stores singular and/or plural strings depending on score in bcData</span><br/>\u00a0<br/>goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"kw2\">rand</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"nu0\">9</span><span class=\"sy2\">,</span><span class=\"nu0\">9</span><span class=\"sy2\">,</span><span class=\"nu0\">9</span><span class=\"sy2\">,</span><span class=\"nu0\">9</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"co1\">--rand function works on objects. here it outputs into each sequence element.</span><br/>goalNum<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">*</span> <span class=\"nu0\">1000</span> <span class=\"sy1\">+</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">*</span> <span class=\"nu0\">100</span> <span class=\"sy1\">+</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">*</span> <span class=\"nu0\">10</span> <span class=\"sy1\">+</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"co1\">--convert digits to an integer</span><br/><span class=\"co1\">--and store it</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> getInputAndProcess<span class=\"br0\">(</span><span class=\"kw2\">integer</span> stage <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"co1\">--object = 1 sets default value for the parameter if it isn't specified</span><br/>\u00a0<br/>    goalNum<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">--{0,0,0,0} --set these to unscaned (0) since the scanning will start over. </span><br/>    currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">--{0,0,0,0} --these too, or they will contain old marks</span><br/>    currentGuess<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>    tries <span class=\"sy1\">+=</span> <span class=\"nu0\">1</span> <span class=\"co1\">--equivalent to tries = tries + 1, but faster and shorter to write</span><br/>    bcData<span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">-- {0,0}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> stage &lt;<span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if this process was run for the first time or with no parameters, then..</span><br/>        <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"The program has thought of a four digit number using only digits 1 to 9.<span class=\"es0\">\\n</span>Type your guess and press enter.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span> label <span class=\"st0\">\"guesscheck\"</span> <span class=\"kw1\">do</span> <span class=\"co1\">--labels can be used to specify a jump point from exit or retry, and help readability</span><br/>        currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> trim<span class=\"br0\">(</span><span class=\"kw2\">gets</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy2\">,</span> removeChars<span class=\"br0\">)</span> <span class=\"co1\">--get user input, trim unwanted characters from it, store it in currentGuess[1]</span><br/>        currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> mapping<span class=\"br0\">(</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">49</span><span class=\"sy2\">,</span><span class=\"nu0\">50</span><span class=\"sy2\">,</span><span class=\"nu0\">51</span><span class=\"sy2\">,</span><span class=\"nu0\">52</span><span class=\"sy2\">,</span><span class=\"nu0\">53</span><span class=\"sy2\">,</span><span class=\"nu0\">54</span><span class=\"sy2\">,</span><span class=\"nu0\">55</span><span class=\"sy2\">,</span><span class=\"nu0\">56</span><span class=\"sy2\">,</span><span class=\"nu0\">57</span><span class=\"br0\">}</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"nu0\">2</span><span class=\"sy2\">,</span><span class=\"nu0\">3</span><span class=\"sy2\">,</span><span class=\"nu0\">4</span><span class=\"sy2\">,</span><span class=\"nu0\">5</span><span class=\"sy2\">,</span><span class=\"nu0\">6</span><span class=\"sy2\">,</span><span class=\"nu0\">7</span><span class=\"sy2\">,</span><span class=\"nu0\">8</span><span class=\"sy2\">,</span><span class=\"nu0\">9</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"co1\">--convert ascii codes to</span><br/>        <span class=\"co1\">-- integer digits they represent</span><br/>        <span class=\"kw2\">integer</span> tempF <span class=\"sy1\">=</span> <span class=\"kw2\">find</span><span class=\"br0\">(</span><span class=\"st0\">'0'</span><span class=\"sy2\">,</span>currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\u00a0!<span class=\"sy1\">=</span> <span class=\"nu0\">4</span> <span class=\"kw1\">or</span> tempF\u00a0!<span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if the input string is now more than 4 characters/integers,</span><br/>            <span class=\"co1\">--the input won't be used.</span><br/>            <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"You probably typed too many digits or a 0. Try typing a new 4 digit number with only numbers 1 through 9.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>            retry <span class=\"st0\">\"guesscheck\"</span><br/>            <span class=\"kw1\">else</span><br/>                <span class=\"kw1\">exit</span> <span class=\"st0\">\"guesscheck\"</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">while</span><br/>    <span class=\"co1\">--convert separate digits to the one integer they represent and store it, like with goalNum[3]</span><br/>    currentGuess<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">*</span> <span class=\"nu0\">1000</span> <span class=\"sy1\">+</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">*</span> <span class=\"nu0\">100</span> <span class=\"sy1\">+</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">*</span> <span class=\"nu0\">10</span> <span class=\"sy1\">+</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <br/><span class=\"co1\">--convert digits to the integer they represent, to print to a string later</span><br/>\u00a0<br/>    <span class=\"co1\">--check for bulls</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>            goalNum<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><br/>            currentGuess<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><br/>            bcData<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">+=</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/>    <span class=\"co1\">--check for cows, but not slots marked as bulls or cows already.</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> label <span class=\"st0\">\"iGuessElem\"</span><span class=\"kw1\">do</span> <span class=\"co1\">--loop through each guessed digit</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> label <span class=\"st0\">\"jGoalElem\"</span> <span class=\"kw1\">do</span> <span class=\"co1\">--but first go through each goal digit, comparing the first guessed digit,</span><br/>            <span class=\"co1\">--and then the other guessed digits 2 through 4</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if the guessed digit we're comparing right now has been marked as bull or cow already</span><br/>                continue <span class=\"st0\">\"iGuessElem\"</span> <span class=\"co1\">--skip to the next guess digit without comparing this guess digit to the other goal digits</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if the goal digit we're comparing to right now has been marked as a bull or cow already</span><br/>                continue <span class=\"st0\">\"jGoalElem\"</span> <span class=\"co1\">--skip to the next goal digit</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">=</span> goalNum<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if the guessed digit is the same as the goal one, </span><br/>                <span class=\"co1\">--it won't be a bull, so it's a cow</span><br/>                bcData<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">+=</span> <span class=\"nu0\">1</span> <span class=\"co1\">--score one more cow</span><br/>                goalNum<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"co1\">--mark this digit as a found cow in the subsequence that stores 0's or 1's as flags</span><br/>                continue <span class=\"st0\">\"iGuessElem\"</span> <span class=\"co1\">--skip to the next guess digit, so that this digit won't try to check for</span><br/>                <span class=\"co1\">--matches(cow) with other goal digits</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">for</span> <span class=\"co1\">--this guess digit was compared to one goal digit , try comparing this guess digit with the next goal digit</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span> <span class=\"co1\">--this guess digit was compared with all goal digits, compare the next guess digit to all the goal digits</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> bcData<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"co1\">--uses singular noun when there is score of 1, else plural</span><br/>        bcStrings<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"bull\"</span><br/>        <span class=\"kw1\">else</span><br/>            bcStrings<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"bulls\"</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> bcData<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"co1\">--the same kind of thing as above block</span><br/>        bcStrings<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"cow\"</span><br/>        <span class=\"kw1\">else</span><br/>            bcStrings<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"cows\"</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> bcData<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> &lt; <span class=\"nu0\">4</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if less than 4 bulls were found, the player hasn't won, else they have...</span><br/>        <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Guess #%d\u00a0: You guessed\u00a0%d . You found\u00a0%d\u00a0%s,\u00a0%d\u00a0%s. Type new guess.<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>tries<span class=\"sy2\">,</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> bcData<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> bcStrings<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> bcData<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> bcStrings<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">)</span><br/>        getInputAndProcess<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> <span class=\"co1\">--else they have won and the procedure ends</span><br/>        <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"The number was\u00a0%d. You guessed\u00a0%d in\u00a0%d tries.<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>goalNum<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> currentGuess<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy2\">,</span> tries<span class=\"br0\">}</span> <span class=\"br0\">)</span><br/>        any_key<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"co1\">--wait for keypress before closing console window. </span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">procedure</span><br/><span class=\"co1\">--run the procedure</span><br/>getInputAndProcess<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 64, "block": "<pre class=\"text highlighted_source\">USING: accessors assocs combinators fry grouping hashtables kernel<br/>       locals math math.parser math.ranges random sequences strings<br/>       io ascii\u00a0;<br/>\u00a0<br/>IN: bullsncows<br/>\u00a0<br/>TUPLE: score bulls cows\u00a0;<br/>: &lt;score&gt; ( -- score ) 0 0 score boa\u00a0;<br/>\u00a0<br/>TUPLE: cow\u00a0;<br/>: &lt;cow&gt; ( -- cow ) cow new\u00a0;<br/>\u00a0<br/>TUPLE: bull\u00a0;<br/>: &lt;bull&gt; ( -- bull ) bull new\u00a0;<br/>\u00a0<br/>: inc-bulls ( score -- score ) dup bulls&gt;&gt; 1 + &gt;&gt;bulls\u00a0;<br/>: inc-cows ( score -- score ) dup cows&gt;&gt; 1 + &gt;&gt;cows\u00a0;<br/>\u00a0<br/>: random-nums ( -- seq ) 9 [1,b] 4 sample\u00a0;<br/>\u00a0<br/>: add-digits ( seq -- n ) 0 [ swap 10 * + ] reduce number&gt;string\u00a0;<br/>\u00a0<br/>: new-number ( -- n narr ) random-nums dup add-digits\u00a0;<br/>\u00a0<br/>: narr&gt;nhash ( narr -- nhash ) { 1 2 3 4 } swap zip\u00a0;<br/>\u00a0<br/>: num&gt;hash ( n -- hash )<br/>    [ 1string string&gt;number ] { } map-as narr&gt;nhash\u00a0;<br/>\u00a0<br/>:: cow-or-bull ( n g -- arr )<br/>    {<br/>        { [ n first g at n second = ] [ &lt;bull&gt; ] }<br/>        { [ n second g value? ] [ &lt;cow&gt; ] }<br/>        [ f ]<br/>    } cond\u00a0;<br/>\u00a0<br/>: add-to-score ( arr -- score )<br/>   &lt;score&gt; [ bull? [ inc-bulls ] [ inc-cows ] if ] reduce\u00a0;<br/>\u00a0<br/>: check-win ( score --\u00a0? ) bulls&gt;&gt; 4 =\u00a0;<br/>\u00a0<br/>: sum-score ( n g -- score\u00a0? )<br/>    '[ _ cow-or-bull ] map sift add-to-score dup check-win\u00a0;<br/>\u00a0<br/>: print-sum ( score -- str )<br/>    dup bulls&gt;&gt; number&gt;string \"Bulls: \" swap append swap cows&gt;&gt; number&gt;string<br/>    \" Cows: \" swap 3append \"\\n\" append\u00a0;<br/>\u00a0<br/>: (validate-readln) ( str --\u00a0? ) dup length 4 = not swap [ letter? ] all? or\u00a0;<br/>\u00a0<br/>: validate-readln ( -- str )<br/>    readln dup (validate-readln)<br/>    [ \"Invalid input.\\nPlease enter a valid 4 digit number: \"<br/>      write flush drop validate-readln ]<br/>    when\u00a0;<br/>\u00a0<br/>: win ( -- ) \"\\nYou've won! Good job. You're so smart.\" print flush\u00a0; <br/>\u00a0<br/>: main-loop ( x -- )<br/>    \"Enter a 4 digit number: \" write flush validate-readln num&gt;hash swap<br/>    [ sum-score swap print-sum print flush ] keep swap not<br/>    [ main-loop ] [ drop win ] if\u00a0;<br/>\u00a0<br/>: main ( -- ) new-number drop narr&gt;nhash main-loop\u00a0;</pre>"}, {"lang": "Fan", "loc": 50, "block": "<pre class=\"text highlighted_source\">**<br/>** Bulls and cows. A game pre-dating, and similar to, Mastermind.<br/>**<br/>class BullsAndCows<br/>{<br/>\u00a0<br/>  Void main()<br/>  {<br/>    digits\u00a0:= [1,2,3,4,5,6,7,8,9]<br/>    size\u00a0:= 4<br/>    chosen\u00a0:= [,]<br/>    size.times { chosen.add(digits.removeAt(Int.random(0..&lt;digits.size))) }<br/>\u00a0<br/>    echo(\"I've chosen $size unique digits from 1 to 9 at random.<br/>          Try to guess my number!\")<br/>    guesses\u00a0:= 0<br/>    while (true) // game loop<br/>    {<br/>      guesses += 1<br/>      guess\u00a0:= Int[,]<br/>      while (true) // input loop<br/>      {<br/>        // get a good guess<br/>        Sys.out.print(\"\\nNext guess [$guesses]: \")<br/>        Sys.out.flush<br/>        inString\u00a0:= Sys.in.readLine?.trim\u00a0?: \"\"<br/>        inString.each |ch|<br/>        { if (ch &gt;= '1' &amp;&amp; ch &lt;= '9' &amp;&amp;\u00a0!guess.contains(ch)) guess.add(ch-'0') }<br/>        if (guess.size == 4)<br/>          break // input loop<br/>        echo(\"Oops, try again. You need to enter $size unique digits from 1 to 9\")<br/>      }<br/>      if (guess.all |v, i-&gt;Bool| { return v == chosen[i] })<br/>      {<br/>        echo(\"\\nCongratulations! You guessed correctly in $guesses guesses\")<br/>        break // game loop<br/>      }<br/>      bulls\u00a0:= 0<br/>      cows \u00a0:= 0<br/>      (0 ..&lt; size).each |i|<br/>      {<br/>        if (guess[i] == chosen[i])<br/>          bulls += 1<br/>        else if (chosen.contains(guess[i]))<br/>          cows += 1<br/>      }<br/>      echo(\"\\n  $bulls Bulls\\n  $cows Cows\")<br/>    }<br/>  }<br/>}</pre>"}, {"lang": "Forth", "loc": 37, "block": "<pre class=\"text highlighted_source\">include random.fs<br/>\u00a0<br/>create hidden 4 allot<br/>\u00a0<br/>: ok? ( str --\u00a0? )<br/>  dup 4 &lt;&gt; if 2drop false exit then<br/>  1 9 lshift 1- -rot<br/>  bounds do<br/>    i <a class=\"__cf_email__\" data-cfemail=\"0d6e4d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> '1 -<br/>    dup 0 9 within 0= if 2drop false leave then<br/>    1 swap lshift over and<br/>    dup 0= if nip leave then<br/>    xor<br/>  loop 0&lt;&gt;\u00a0;<br/>\u00a0<br/>: init<br/>  begin<br/>    hidden 4 bounds do 9 random '1 + i c! loop<br/>    hidden 4 ok?<br/>  until\u00a0;<br/>\u00a0<br/>: check? ( addr -- solved? )<br/>  0<br/>  4 0 do<br/>    over i + <a class=\"__cf_email__\" data-cfemail=\"086b48\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>    4 0 do<br/>      dup hidden i + <a class=\"__cf_email__\" data-cfemail=\"593a19\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = if     swap<br/>        i j = if 8 else 1 then + swap<br/>      then<br/>    loop drop<br/>  loop nip<br/>  8 /mod tuck . .\" bulls, \" . .\" cows\"<br/>  4 =\u00a0;<br/>\u00a0<br/>: guess: ( \"1234\" -- )<br/>  bl parse 2dup ok? 0= if 2drop .\" Bad guess! (4 unique digits, 1-9)\" exit then<br/>  drop check? if cr .\" You guessed it!\" then\u00a0;</pre>"}, {"lang": "Fortran", "loc": 84, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">module</span> bac<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/>  <span class=\"kw1\">subroutine</span> Gennum<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">out</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">n</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, j<br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span><br/>\u00a0<br/>    <span class=\"kw1\">call</span> <span class=\"kw4\">random_number</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    n<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span>r <span class=\"sy0\">*</span> <span class=\"nu0\">9.0</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>\u00a0<br/>outer<span class=\"sy0\">:</span> <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">call</span> <span class=\"kw4\">random_number</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>         n<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span>r <span class=\"sy0\">*</span> <span class=\"nu0\">9.0</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>inner<span class=\"sy0\">:</span>   <span class=\"kw1\">do</span> j <span class=\"sy0\">=</span> i<span class=\"sy0\">-</span><span class=\"nu0\">1</span> , <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>           <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n<span class=\"br0\">(</span>j<span class=\"br0\">)</span> <span class=\"sy0\">==</span> n<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">cycle</span> outer<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">do</span> inner<br/>         i <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>       <span class=\"kw1\">end</span> <span class=\"kw1\">do</span> outer<br/>\u00a0<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span> Gennum<br/>\u00a0<br/>  <span class=\"kw1\">subroutine</span> Score<span class=\"br0\">(</span>n, guess, b, c<span class=\"br0\">)</span> <br/>    <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">guess</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">n</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">out</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">b</span>, c<br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">digit</span>, i, j, ind<br/>\u00a0<br/>    b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; c <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">4</span><br/>      read<span class=\"br0\">(</span>guess<span class=\"br0\">(</span>i<span class=\"sy0\">:</span>i<span class=\"br0\">)</span>, <span class=\"st0\">\"(i1)\"</span><span class=\"br0\">)</span> digit<br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>digit <span class=\"sy0\">==</span> n<span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        b <span class=\"sy0\">=</span> b <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">do</span> j <span class=\"sy0\">=</span> i, i<span class=\"sy0\">+</span><span class=\"nu0\">2</span><br/>          ind <span class=\"sy0\">=</span> <span class=\"kw4\">mod</span><span class=\"br0\">(</span>j, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span>digit <span class=\"sy0\">==</span> n<span class=\"br0\">(</span>ind<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            c <span class=\"sy0\">=</span> c <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">exit</span><br/>          <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span>    <br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">do</span>  <br/>\u00a0<br/> <span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span> Score  <br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">module</span> bac<br/>\u00a0<br/><span class=\"kw1\">program</span> Bulls_and_Cows<br/>   <span class=\"kw3\">use</span> bac<br/>   <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>   <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">n</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>   <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">bulls</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span>, cows<span class=\"sy0\">=</span><span class=\"nu0\">0</span>, tries<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>   <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">guess</span><br/>\u00a0<br/>   <span class=\"kw1\">call</span> <span class=\"kw4\">random_seed</span><br/>   <span class=\"kw1\">call</span> Gennum<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>\u00a0<br/>   write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"I have selected a number made up of 4 digits (1-9) without repetitions.\"</span><br/>   write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"You attempt to guess this number.\"</span><br/>   write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"Every digit in your guess that is in the correct position scores 1 Bull\"</span><br/>   write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"Every digit in your guess that is in an incorrect position scores 1 Cow\"</span><br/>   write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>\u00a0<br/>   <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>bulls <span class=\"sy0\">/=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>     write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"Enter a 4 digit number\"</span><br/>     read<span class=\"sy0\">*</span>, guess<br/>     <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">verify</span><span class=\"br0\">(</span>guess, <span class=\"st0\">\"123456789\"</span><span class=\"br0\">)</span> <span class=\"sy0\">/=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>       write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"That is an invalid entry. Please try again.\"</span><br/>       <span class=\"kw1\">cycle</span><br/>     <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>     tries <span class=\"sy0\">=</span> tries <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>     <span class=\"kw1\">call</span> Score <span class=\"br0\">(</span>n, guess, bulls, cows<span class=\"br0\">)</span><br/>     write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, i1, a, i1, a)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"You scored \"</span>, bulls, <span class=\"st0\">\" bulls and \"</span>, cows, <span class=\"st0\">\" cows\"</span><br/>     write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>   write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">\"(a,i0,a)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"Congratulations! You correctly guessed the correct number in \"</span>, tries, <span class=\"st0\">\" attempts\"</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> Bulls_and_Cows</pre>"}, {"lang": "Go", "loc": 68, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"bufio\"</span><br/>    <span class=\"st0\">\"bytes\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math/rand\"</span><br/>    <span class=\"st0\">\"os\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/>    <span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"co2\">`Cows and Bulls<br/>Guess four digit number of unique digits in the range 1 to 9.<br/>A correct digit but not in the correct place is a cow.<br/>A correct digit in the correct place is a bull.`</span><span class=\"sy1\">)</span><br/>    <span class=\"co1\">// generate pattern</span><br/>    pat <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">byte</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">)</span><br/>    rand<span class=\"sy3\">.</span>Seed<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>Unix<span class=\"sy1\">())</span><br/>    r <span class=\"sy2\">:=</span> rand<span class=\"sy3\">.</span>Perm<span class=\"sy1\">(</span><span class=\"nu0\">9</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> pat <span class=\"sy1\">{</span><br/>        pat<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"st0\">'1'</span> <span class=\"sy3\">+</span> <span class=\"kw4\">byte</span><span class=\"sy1\">(</span>r<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">])</span><br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// accept and score guesses</span><br/>    valid <span class=\"sy2\">:=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">byte</span><span class=\"sy1\">(</span><span class=\"st0\">\"123456789\"</span><span class=\"sy1\">)</span><br/>guess<span class=\"sy1\">:</span><br/>    <span class=\"kw1\">for</span> in <span class=\"sy2\">:=</span> bufio<span class=\"sy3\">.</span>NewReader<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Stdin<span class=\"sy1\">);</span> <span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Print<span class=\"sy1\">(</span><span class=\"st0\">\"Guess: \"</span><span class=\"sy1\">)</span><br/>        guess<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> in<span class=\"sy3\">.</span><span class=\"me1\">ReadString</span><span class=\"sy1\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>So, bye.\"</span><span class=\"sy1\">)</span><br/>            <span class=\"kw1\">return</span><br/>        <span class=\"sy1\">}</span><br/>        guess <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>TrimSpace<span class=\"sy1\">(</span>guess<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>guess<span class=\"sy1\">)</span> <span class=\"sy2\">!=</span> <span class=\"nu0\">4</span> <span class=\"sy1\">{</span><br/>            <span class=\"co1\">// malformed:  not four characters</span><br/>            fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Please guess a four digit number.\"</span><span class=\"sy1\">)</span><br/>            <span class=\"kw1\">continue</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">var</span> cows<span class=\"sy1\">,</span> bulls <span class=\"kw4\">int</span><br/>        <span class=\"kw1\">for</span> ig<span class=\"sy1\">,</span> cg <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> guess <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">if</span> strings<span class=\"sy3\">.</span>IndexRune<span class=\"sy1\">(</span>guess<span class=\"sy1\">[:</span>ig<span class=\"sy1\">],</span> cg<span class=\"sy1\">)</span> &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>                <span class=\"co1\">// malformed:  repeated digit</span><br/>                fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"Repeated digit:\u00a0%c<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> cg<span class=\"sy1\">)</span><br/>                <span class=\"kw1\">continue</span> guess<br/>            <span class=\"sy1\">}</span><br/>            <span class=\"kw1\">switch</span> bytes<span class=\"sy3\">.</span>IndexByte<span class=\"sy1\">(</span>pat<span class=\"sy1\">,</span> <span class=\"kw4\">byte</span><span class=\"sy1\">(</span>cg<span class=\"sy1\">))</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">:</span><br/>                <span class=\"kw1\">if</span> bytes<span class=\"sy3\">.</span>IndexByte<span class=\"sy1\">(</span>valid<span class=\"sy1\">,</span> <span class=\"kw4\">byte</span><span class=\"sy1\">(</span>cg<span class=\"sy1\">))</span> <span class=\"sy3\">==</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>                    <span class=\"co1\">// malformed:  not a digit</span><br/>                    fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"Invalid digit:\u00a0%c<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> cg<span class=\"sy1\">)</span><br/>                    <span class=\"kw1\">continue</span> guess<br/>                <span class=\"sy1\">}</span><br/>            <span class=\"kw1\">default</span><span class=\"sy1\">:</span> <span class=\"co1\">// I just think cows should go first</span><br/>                cows<span class=\"sy2\">++</span><br/>            <span class=\"kw1\">case</span> ig<span class=\"sy1\">:</span><br/>                bulls<span class=\"sy2\">++</span><br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Cows:\u00a0%d, bulls:\u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> cows<span class=\"sy1\">,</span> bulls<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> bulls <span class=\"sy3\">==</span> <span class=\"nu0\">4</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"You got it.\"</span><span class=\"sy1\">)</span><br/>            <span class=\"kw1\">return</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 50, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span>partition<span class=\"sy0\">,</span> intersect<span class=\"sy0\">,</span> nub<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Random <span class=\"br0\">(</span>StdGen<span class=\"sy0\">,</span> getStdRandom<span class=\"sy0\">,</span> randomR<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Text<span class=\"sy0\">.</span>Printf<br/>\u00a0<br/>numberOfDigits <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>\u00a0<br/>main <span class=\"sy0\">=</span> bullsAndCows<br/>\u00a0<br/>bullsAndCows <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>bullsAndCows <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    digits <span class=\"sy0\">&lt;-</span> getStdRandom <span class=\"sy0\">$</span> pick numberOfDigits <span class=\"br0\">[</span><span class=\"st0\">'1'</span> <span class=\"sy0\">..</span> <span class=\"st0\">'9'</span><span class=\"br0\">]</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Guess away!\"</span><br/>    loop digits<br/>\u00a0<br/>  <span class=\"kw1\">where</span> loop digits <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>            input <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:getLine\"><span class=\"kw3\">getLine</span></a><br/>            <span class=\"kw1\">if</span> okay input<br/>              <span class=\"kw1\">then</span><br/>                  <span class=\"kw1\">let</span> <span class=\"br0\">(</span>bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">)</span> <span class=\"sy0\">=</span> score digits input <span class=\"kw1\">in</span><br/>                  <span class=\"kw1\">if</span> bulls <span class=\"sy0\">==</span> numberOfDigits <span class=\"kw1\">then</span><br/>                      <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"You win!\"</span><br/>                  <span class=\"kw1\">else</span> <span class=\"kw1\">do</span><br/>                      printf <span class=\"st0\">\"%d bulls,\u00a0%d cows.<span class=\"es0\">\\n</span>\"</span> bulls cows<br/>                      loop digits<br/>              <span class=\"kw1\">else</span> <span class=\"kw1\">do</span><br/>                  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Malformed guess; try again.\"</span><br/>                  loop digits<br/>\u00a0<br/>        okay <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/>        okay input <span class=\"sy0\">=</span><br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> input <span class=\"sy0\">==</span> numberOfDigits <span class=\"sy0\">&amp;&amp;</span> <br/>            input <span class=\"sy0\">==</span> nub input <span class=\"sy0\">&amp;&amp;</span><br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:all\"><span class=\"kw3\">all</span></a> legalchar input<br/>          <span class=\"kw1\">where</span> legalchar c <span class=\"sy0\">=</span> <span class=\"st0\">'1'</span> <span class=\"sy0\">&lt;=</span> c <span class=\"sy0\">&amp;&amp;</span> c <span class=\"sy0\">&lt;=</span> <span class=\"st0\">'9'</span><br/>\u00a0<br/>        score <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span><br/>        score secret guess <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">)</span><br/>          <span class=\"kw1\">where</span> <span class=\"br0\">(</span>bulls<span class=\"sy0\">,</span> nonbulls<span class=\"br0\">)</span> <span class=\"sy0\">=</span> partition <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:uncurry\"><span class=\"kw3\">uncurry</span></a> <span class=\"br0\">(</span><span class=\"sy0\">==</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">$</span><br/>                    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> secret guess<br/>                cows <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:uncurry\"><span class=\"kw3\">uncurry</span></a> intersect <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unzip\"><span class=\"kw3\">unzip</span></a> nonbulls<br/>\u00a0<br/>pick <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> StdGen <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"sy0\">,</span> StdGen<span class=\"br0\">)</span><br/><span class=\"coMULTI\">{- Randomly selects items from a list without replacement. -}</span><br/>pick n l g <span class=\"sy0\">=</span> f n l g <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> l <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">where</span>  f <span class=\"nu0\">0</span> <span class=\"sy0\">_</span> g <span class=\"sy0\">_</span>   ps <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ps<span class=\"sy0\">,</span> g<span class=\"br0\">)</span><br/>         f n l g <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:max\"><span class=\"kw3\">max</span></a> ps <span class=\"sy0\">=</span><br/>             f <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>left <span class=\"sy0\">++</span> right<span class=\"br0\">)</span> g<span class=\"st0\">' (max - 1) (picked\u00a0: ps)<br/>          where (i, g'</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> randomR <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:max\"><span class=\"kw3\">max</span></a><span class=\"br0\">)</span> g<br/>                <span class=\"br0\">(</span>left<span class=\"sy0\">,</span> picked\u00a0: right<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:splitAt\"><span class=\"kw3\">splitAt</span></a> i l</pre>"}, {"lang": "Hy", "loc": 26, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>import <span class=\"kw1\">random</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>def +size+ <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>def +digits+ <span class=\"st0\">\"123456789\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>def +secret+ <span class=\"br0\">(</span><span class=\"kw1\">random</span><span class=\"sy0\">.</span>sample +digits+ +size+<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>while True<br/>  <span class=\"br0\">(</span>while True<br/>    <span class=\"br0\">(</span>setv guess <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>distinct <span class=\"br0\">(</span>raw-input <span class=\"st0\">\"Enter a guess: \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>len guess<span class=\"br0\">)</span> +size+<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>all <span class=\"br0\">(</span>map <span class=\"br0\">(</span>fn <span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"br0\">(</span>in c +digits+<span class=\"br0\">)</span><span class=\"br0\">)</span> guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">break</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"Malformed guess; try again\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>setv bulls <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>setv cows <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>for <span class=\"br0\">[</span>i <span class=\"br0\">(</span>range +size+<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>    <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">get</span> guess i<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">get</span> +secret+ i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>setv bulls <span class=\"br0\">(</span>inc bulls<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">[</span><span class=\"br0\">(</span>in <span class=\"br0\">(</span><span class=\"kw1\">get</span> guess i<span class=\"br0\">)</span> +secret+<span class=\"br0\">)</span> <span class=\"br0\">(</span>setv cows <span class=\"br0\">(</span>inc cows<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> bulls +size+<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">break</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>format <span class=\"st0\">\"{} bull{}, {} cows\"</span><br/>    bulls <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> bulls <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"st0\">\"\"</span> <span class=\"st0\">\"s\"</span><span class=\"br0\">)</span><br/>    cows <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> cows <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"st0\">\"\"</span> <span class=\"st0\">\"s\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"A winner is you!\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 24, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    digits <span class=\"sy0\">:=</span> <span class=\"st0\">\"123456789\"</span><br/>    <span class=\"kw1\">every</span> <span class=\"sy0\">!</span>digits <span class=\"sy0\">:=:</span> <span class=\"sy0\">?</span>digits<br/>    num <span class=\"sy0\">:=</span> digits<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">+:</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">repeat</span> <span class=\"kw1\">if</span> score<span class=\"br0\">(</span>num<span class=\"sy0\">,</span> getGuess<span class=\"br0\">(</span>num<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">break</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Good job.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> getGuess<span class=\"br0\">(</span>num<span class=\"br0\">)</span><br/>    <span class=\"kw1\">repeat</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter a guess: \"</span><span class=\"br0\">)</span><br/>        guess <span class=\"sy0\">:=</span> <span class=\"kw4\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Quitter!\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>guess <span class=\"sy0\">**</span> <span class=\"st0\">'123456789'</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">*</span>num <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> guess<br/>        <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Malformed guess: \"</span><span class=\"sy0\">,</span>guess<span class=\"sy0\">,</span><span class=\"st0\">\". Try again.\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> score<span class=\"br0\">(</span>num<span class=\"sy0\">,</span> guess<span class=\"br0\">)</span><br/>    bulls <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    cows <span class=\"sy0\">:=</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>num <span class=\"sy0\">**</span> guess<span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> <span class=\"br0\">(</span>num<span class=\"br0\">[</span>i <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy0\">*</span>num<span class=\"br0\">]</span> <span class=\"sy0\">==</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> bulls <span class=\"sy0\">+:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> cows <span class=\"sy0\">-:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span>bulls<span class=\"sy0\">,</span><span class=\"st0\">\" bulls and \"</span><span class=\"sy0\">,</span>cows<span class=\"sy0\">,</span><span class=\"st0\">\" cows\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>bulls <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>num<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 24, "block": "<pre class=\"j highlighted_source\">require <span class=\"st_h\">'misc'</span><br/>\u00a0<br/>plural=: conjunction define<br/> <span class=\"sy0\">(</span>\":<span class=\"kw2\">m</span><span class=\"sy0\">)</span>,<span class=\"st_h\">' '</span>,<span class=\"kw2\">n</span>,<span class=\"st_h\">'s'</span>#~<span class=\"nu0\">1</span>~:<span class=\"kw2\">m</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>bullcow=:monad define<br/>  number=. <span class=\"nu0\">1</span>+<span class=\"nu0\">4</span>?<span class=\"nu0\">9</span><br/>  <span class=\"kw1\">whilst.</span> -.guess-:number <span class=\"kw1\">do.</span><br/>    guess=. <span class=\"nu0\">0</span> \".\"<span class=\"nu0\">0</span> prompt <span class=\"st_h\">'Guess my number: '</span><br/>    <span class=\"kw1\">if.</span> <span class=\"sy0\">(</span><span class=\"nu0\">4</span>~:#guess<span class=\"sy0\">)</span>+.<span class=\"sy0\">(</span><span class=\"nu0\">4</span>~:#~.guess<span class=\"sy0\">)</span>+.<span class=\"nu0\">0</span> e.guess e.<span class=\"nu0\">1</span>+i.<span class=\"nu0\">9</span> <span class=\"kw1\">do.</span><br/>      <span class=\"kw1\">if.</span> <span class=\"nu0\">0</span>=#guess <span class=\"kw1\">do.</span><br/>        smoutput <span class=\"st_h\">'Giving up.'</span><br/>        <span class=\"kw1\">return.</span><br/>      <span class=\"kw1\">end.</span><br/>      smoutput <span class=\"st_h\">'Guesses must be four different non-zero digits'</span><br/>      <span class=\"kw1\">continue.</span><br/>    <span class=\"kw1\">end.</span><br/>    bulls=. +/guess=number<br/>    cows=. <span class=\"sy0\">(</span>+/guess e.number<span class=\"sy0\">)</span>-bulls<br/>    smoutput bulls plural <span class=\"st_h\">'bull'</span>,<span class=\"st_h\">' and '</span>,cows plural <span class=\"st_h\">'cow'</span>,<span class=\"st_h\">'.'</span><br/>  <span class=\"kw1\">end.</span><br/>  smoutput <span class=\"st_h\">'you win'</span><br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 52, "block": "<pre class=\"java5 highlighted_source\"><span class=\"kw2\">import</span> <span class=\"co2\">java.util.InputMismatchException</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Scanner</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">public</span> <span class=\"kw2\">class</span> BullsAndCows<span class=\"br0\">{</span><br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">void</span> main<span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Random.html\"><span class=\"kw46\">Random</span></a> gen= <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Random.html\"><span class=\"kw46\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw3\">int</span> target= <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span>hasDupes<span class=\"br0\">(</span>target= <span class=\"br0\">(</span>gen.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">9000</span><span class=\"br0\">)</span> + <span class=\"nu0\">1000</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a> targetStr = target +<span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw3\">boolean</span> guessed = <span class=\"kw4\">false</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Scanner.html\"><span class=\"kw46\">Scanner</span></a> input = <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Scanner.html\"><span class=\"kw46\">Scanner</span></a><span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw3\">int</span> guesses = <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">do</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw3\">int</span> bulls = <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw3\">int</span> cows = <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Guess a 4-digit number with no duplicate digits: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw3\">int</span> guess<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw2\">try</span><span class=\"br0\">{</span><br/>\t\t\t\tguess = input.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>hasDupes<span class=\"br0\">(</span>guess<span class=\"br0\">)</span> || guess <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"kw2\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw2\">catch</span><span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/InputMismatchException.html\"><span class=\"kw46\">InputMismatchException</span></a> e<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw2\">continue</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\tguesses++<span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a> guessStr = guess + <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw3\">int</span> i= <span class=\"nu0\">0</span><span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span>i++<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>guessStr.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> == targetStr.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t\tbulls++<span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>targetStr.<span class=\"me1\">contains</span><span class=\"br0\">(</span>guessStr.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>+<span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t\tcows++<span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>bulls == <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tguessed = <span class=\"kw4\">true</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>cows+<span class=\"st0\">\" Cows and \"</span>+bulls+<span class=\"st0\">\" Bulls.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>guessed<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"You won after \"</span>+guesses+<span class=\"st0\">\" guesses!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">boolean</span> hasDupes<span class=\"br0\">(</span><span class=\"kw3\">int</span> num<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw3\">boolean</span><span class=\"br0\">[</span><span class=\"br0\">]</span> digs = <span class=\"kw2\">new</span> <span class=\"kw3\">boolean</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span>num <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>digs<span class=\"br0\">[</span>num<span class=\"sy0\">%</span>10<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw2\">return</span> <span class=\"kw4\">true</span><span class=\"sy0\">;</span><br/>\t\t\tdigs<span class=\"br0\">[</span>num<span class=\"sy0\">%</span>10<span class=\"br0\">]</span> = <span class=\"kw4\">true</span><span class=\"sy0\">;</span><br/>\t\t\tnum/= <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw2\">return</span> <span class=\"kw4\">false</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 89, "block": "<pre class=\"javascript highlighted_source\">#<span class=\"sy0\">!/</span>usr<span class=\"sy0\">/</span>bin<span class=\"sy0\">/</span>env js<br/>\u00a0<br/><span class=\"kw1\">function</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> len <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>    playBullsAndCows<span class=\"br0\">(</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> playBullsAndCows<span class=\"br0\">(</span>len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> num <span class=\"sy0\">=</span> pickNum<span class=\"br0\">(</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">// print('The secret number is:\\n  ' + num.join('\\n  '));</span><br/>    showInstructions<span class=\"br0\">(</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> nGuesses <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    while <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        nGuesses<span class=\"sy0\">++;</span><br/>        <span class=\"kw1\">var</span> guess <span class=\"sy0\">=</span> getGuess<span class=\"br0\">(</span>nGuesses<span class=\"sy0\">,</span> len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> census <span class=\"sy0\">=</span> countBovine<span class=\"br0\">(</span>num<span class=\"sy0\">,</span> guess<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        showScore<span class=\"br0\">(</span>census.<span class=\"me1\">bulls</span><span class=\"sy0\">,</span> census.<span class=\"me1\">cows</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>census.<span class=\"me1\">bulls</span> <span class=\"sy0\">==</span> len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            showFinalResult<span class=\"br0\">(</span>nGuesses<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> showScore<span class=\"br0\">(</span>nBulls<span class=\"sy0\">,</span> nCows<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'    Bulls: '</span> <span class=\"sy0\">+</span> nBulls <span class=\"sy0\">+</span> <span class=\"st0\">', cows: '</span> <span class=\"sy0\">+</span> nCows<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> showFinalResult<span class=\"br0\">(</span>guesses<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'You win!!! Guesses needed: '</span> <span class=\"sy0\">+</span> guesses<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> countBovine<span class=\"br0\">(</span>num<span class=\"sy0\">,</span> guess<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> count <span class=\"sy0\">=</span> <span class=\"br0\">{</span>bulls<span class=\"sy0\">:</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> cows<span class=\"sy0\">:</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> g <span class=\"sy0\">=</span> guess.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> num.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> digPresent <span class=\"sy0\">=</span> g.<span class=\"me1\">search</span><span class=\"br0\">(</span>num<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>num<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> count.<span class=\"me1\">bulls</span><span class=\"sy0\">++;</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>digPresent<span class=\"br0\">)</span> count.<span class=\"me1\">cows</span><span class=\"sy0\">++;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> count<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> getGuess<span class=\"br0\">(</span>nGuesses<span class=\"sy0\">,</span> len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    while <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        putstr<span class=\"br0\">(</span><span class=\"st0\">'Your guess #'</span> <span class=\"sy0\">+</span> nGuesses <span class=\"sy0\">+</span> <span class=\"st0\">': '</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> guess <span class=\"sy0\">=</span> readline<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        guess <span class=\"sy0\">=</span> <span class=\"kw4\">String</span><span class=\"br0\">(</span>parseInt<span class=\"br0\">(</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>guess.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            print<span class=\"br0\">(</span><span class=\"st0\">'  You must enter a '</span> <span class=\"sy0\">+</span> len <span class=\"sy0\">+</span> <span class=\"st0\">' digit number.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>hasDups<span class=\"br0\">(</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            print<span class=\"br0\">(</span><span class=\"st0\">'  No digits can be duplicated.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span>    <br/>        <span class=\"kw1\">return</span> guess<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> hasDups<span class=\"br0\">(</span>ary<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> t <span class=\"sy0\">=</span> ary.<span class=\"me1\">concat</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> t.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>t<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> t<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> showInstructions<span class=\"br0\">(</span>len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    print<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'Bulls and Cows Game'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'-------------------'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'  You must guess the '</span> <span class=\"sy0\">+</span> len <span class=\"sy0\">+</span> <span class=\"st0\">' digit number I am thinking of.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'  The number is composed of the digits 1-9.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'  No digit appears more than once.'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'  After each of your guesses, I will tell you:'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'    The number of bulls (digits in right place)'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">'    The number of cows (correct digits, but in the wrong place)'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    print<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> pickNum<span class=\"br0\">(</span>len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    nums.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">0.5</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> nums.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 32, "block": "<pre class=\"text highlighted_source\">function cowsbulls()<br/>\tprint(\"Welcome to Cows &amp; Bulls! I've picked a number with unique digits between 1 and 9, go ahead and type your guess.\\n<br/>\t\tYou get one bull for every right number in the right position.\\n<br/>\t\tYou get one cow for every right number, but in the wrong position.\\n<br/>\t\tEnter 'n' to pick a new number and 'q' to quit.\\n&gt;\")<br/>\tfunction new_number() <br/>\t\ts = [1:9]<br/>\t\tn = \"\"<br/>\t\tfor i = 9:-1:6<br/>\t\t\tn *= string(delete!(s,rand(1:i)))<br/>\t\tend<br/>\t\treturn n<br/>\tend<br/>\tanswer = new_number()<br/>\twhile true<br/>\t\tinput = chomp(readline(STDIN))<br/>\t\tinput == \"q\" &amp;&amp; break<br/>\t\tif input == \"n\" <br/>\t\t\tanswer = new_number()<br/>\t\t\tprint(\"\\nI've picked a new number, go ahead and guess\\n&gt;\")<br/>\t\t\tcontinue<br/>\t\tend<br/>\t\t!ismatch(r\"^[1-9]{4}$\",input) &amp;&amp; (print(\"Invalid guess: Please enter a 4-digit number\\n&gt;\"); continue)<br/>\t\tif input == answer <br/>\t\t\tprint(\"\\nYou're right! Good guessing!\\nEnter 'n' for a new number or 'q' to quit\\n&gt;\")<br/>\t\telse<br/>\t\t\tbulls = sum(answer.data .== input.data)<br/>\t\t\tcows = sum([answer[x]\u00a0!= input[x] &amp;&amp; contains(input.data,answer[x]) for x = 1:4])<br/>\t\t\tprint(\"\\nNot quite! Your guess is worth:\\n$bulls Bulls\\n$cows Cows\\nPlease guess again\\n\\n&gt;\")<br/>\t\tend<br/>\tend<br/>end</pre>"}, {"lang": "Kotlin", "loc": 49, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> MAX<span class=\"sy0\">_</span>GUESSES <span class=\"sy0\">=</span> <span class=\"nu0\">20</span>  <span class=\"co1\">// say</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> num<span class=\"sy0\">:</span> String<br/>    <span class=\"co1\">// generate a 4 digit random number from 1234 to 9876 with no zeros or repeated digits</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">do</span></a> <span class=\"br0\">{</span><br/>        num <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1234</span> + r.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">8643</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><span class=\"st0\">'0'</span> in num || num.<span class=\"me1\">toSet</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">size</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"All guesses should have exactly 4 distinct digits excluding zero.\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Keep guessing until you guess the chosen number (maximum $MAX_GUESSES valid guesses).<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> guesses <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        print<span class=\"br0\">(</span><span class=\"st0\">\"Enter your guess\u00a0: \"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> guess <span class=\"sy0\">=</span> readLine<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!!</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>guess <span class=\"sy0\">==</span> num<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"You've won with ${++guesses} valid guesses!\"</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>        <span class=\"br0\">}</span> <br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> n <span class=\"sy0\">=</span> guess.<span class=\"me1\">toIntOrNull</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span> <br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Not a valid number\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"st0\">'-'</span> in guess || <span class=\"st0\">'+'</span> in guess<span class=\"br0\">)</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Can't contain a sign\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"st0\">'0'</span> in guess<span class=\"br0\">)</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Can't contain zero\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>guess.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Must have exactly 4 digits\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>guess.<span class=\"me1\">toSet</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">size</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"All digits must be distinct\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"br0\">{</span>            <br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> bulls <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> cows  <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>i, c<span class=\"br0\">)</span> in guess.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>num<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> c<span class=\"br0\">)</span> bulls++<br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>c in num<span class=\"br0\">)</span> cows++<br/>            <span class=\"br0\">}</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"Your score for this guess:  Bulls = $bulls  Cows = $cows\"</span><span class=\"br0\">)</span><br/>            guesses++<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>guesses <span class=\"sy0\">==</span> MAX<span class=\"sy0\">_</span>GUESSES<span class=\"br0\">)</span> <br/>                println<span class=\"br0\">(</span><span class=\"st0\">\"You've now had $guesses valid guesses, the maximum allowed\"</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 71, "block": "<pre class=\"text highlighted_source\">[<br/>define randomizer() =&gt; {<br/>\tlocal(n = string)<br/>\twhile(#n-&gt;size &lt; 4) =&gt; {<br/>\t\tlocal(r = integer_random(1,9)-&gt;asString)<br/>\t\t#n\u00a0!&gt;&gt; #r\u00a0? #n-&gt;append(#r)<br/>\t}<br/>\treturn #n<br/>}<br/>define cowbullchecker(n::string,a::string) =&gt; {<br/>\tinteger(#n) == integer(#a)\u00a0? return (:true,map('cows'=0,'bulls'=4,'choice'=#a))<br/>\tlocal(cowbull = map('cows'=0,'bulls'=0,'choice'=#a),'checked' = array)<br/>\tloop(4) =&gt; {<br/>\t\tif(#checked\u00a0!&gt;&gt; integer(#a-&gt;values-&gt;get(loop_count))) =&gt; {<br/>\t\t\t#checked-&gt;insert(integer(#a-&gt;values-&gt;get(loop_count)))<br/>\t\t\tif(integer(#n-&gt;values-&gt;get(loop_count)) == integer(#a-&gt;values-&gt;get(loop_count))) =&gt; {<br/>\t\t\t\t#cowbull-&gt;find('bulls') += 1<br/>\t\t\telse(#n-&gt;values &gt;&gt; #a-&gt;values-&gt;get(loop_count))<br/>\t\t\t\t#cowbull-&gt;find('cows') += 1<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>\t#cowbull-&gt;find('bulls') == 4\u00a0? return (:true,map('cows'=0,'bulls'=4,'choice'=#a)) <br/>\treturn (:true,#cowbull) <br/>}<br/>session_start('user')<br/>session_addvar('user', 'num')<br/>session_addvar('user', 'historic_choices')<br/>// set up rand<br/>var(num)-&gt;isNotA(::string)\u00a0? var(num = randomizer)<br/>var(historic_choices)-&gt;isNotA(::array)\u00a0? var(historic_choices = array)<br/>local(success = false)<br/>// check answer<br/>if(web_request-&gt;param('a')-&gt;asString-&gt;size) =&gt; {<br/>\tlocal(success,result) = cowbullchecker($num,web_request-&gt;param('a')-&gt;asString)<br/>\t$historic_choices-&gt;insert(#result)<br/>}<br/>if(web_request-&gt;params-&gt;asStaticArray &gt;&gt; 'restart') =&gt; {<br/>\t$num = randomizer<br/>\t$historic_choices = array<br/>}<br/>]<br/>&lt;h1&gt;Bulls and Cows&lt;/h1&gt;<br/>&lt;p&gt;Guess the 4-digit number...&lt;/p&gt;<br/>&lt;p&gt;Your win if the guess is the same as the randomly chosen number.&lt;br&gt;<br/>- A score of one bull is accumulated for each digit in your guess that equals the corresponding digit in the randomly chosen initial number.&lt;br&gt;<br/>- A score of one cow is accumulated for each digit in your guess that also appears in the randomly chosen number, but in the wrong position.<br/>&lt;/p&gt;<br/>[<br/>local(win = false)<br/>if($historic_choices-&gt;size) =&gt; {<br/>\twith c in $historic_choices do =&gt; {^<br/>\t\t'&lt;p&gt;'+#c-&gt;find('choice')+': Bulls: '+#c-&gt;find('bulls')+', Cows: '+#c-&gt;find('cows')<br/>\t\tif(#c-&gt;find('bulls') == 4) =&gt; {^<br/>\t\t\t' - YOU WIN!'<br/>\t\t\t#win = true<br/>\t\t^}<br/>\t\t'&lt;/p&gt;'<br/>\t^}<br/>}<br/>if(not #win) =&gt; {^<br/>]<br/>&lt;form action=\"?\" method=\"post\"&gt;<br/>\t&lt;input name=\"a\" value=\"[web_request-&gt;param('a')-&gt;asString]\" size=\"5\"&gt;<br/>\t&lt;input type=\"submit\" name=\"guess\"&gt;<br/>\t&lt;a href=\"?restart\"&gt;Restart&lt;/a&gt;<br/>&lt;/form&gt;<br/>[else<br/>\t'&lt;a href=\"?restart\"&gt;Restart&lt;/a&gt;'<br/>^}]<br/>\u00a0</pre>"}, {"lang": "Liberty BASIC", "loc": 64, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/>\u00a0<br/>    <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span> secret$<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><br/>        c$ <span class=\"sy0\">=</span><span class=\"kw2\">chr$</span><span class=\"br0\">(</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span><span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"nu0\">49</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">not</span><span class=\"br0\">(</span> <span class=\"kw2\">instr</span><span class=\"br0\">(</span> secret$<span class=\"sy0\">,</span> c$<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> secret$ <span class=\"sy0\">=</span>secret$ <span class=\"sy0\">+</span>c$<br/>    <span class=\"kw1\">loop</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\" Secret number has been guessed....                                                                                 \"</span>; secret$<br/>\u00a0<br/>    guesses  <span class=\"sy0\">=</span>   <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"kw1\">loop</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\" Your guess \"</span>;<br/>    <span class=\"kw1\">input</span> <span class=\"st0\">\" \"</span>; guess$<br/>\u00a0<br/>    guesses  <span class=\"sy0\">=</span> guesses <span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>\u00a0<br/>    r$       <span class=\"sy0\">=</span>score$<span class=\"br0\">(</span> guess$<span class=\"sy0\">,</span> secret$<span class=\"br0\">)</span><br/>\u00a0<br/>    bulls    <span class=\"sy0\">=</span><span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> r$<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    cows     <span class=\"sy0\">=</span><span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> r$<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"   Result: \"</span>; bulls; <span class=\"st0\">\" bulls, and \"</span>; cows; <span class=\"st0\">\" cows\"</span><br/>    <span class=\"kw1\">print</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> guess$ <span class=\"sy0\">=</span>secret$ <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"  You won after \"</span>; guesses; <span class=\"st0\">\" guesses!\"</span><br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"  You guessed it in \"</span>; guesses<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"  Thanks for playing!\"</span><br/>        <span class=\"kw1\">wait</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"kw1\">goto</span> <span class=\"br0\">[</span><span class=\"kw1\">loop</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"co1\">'   _____________________________________________________________</span><br/>\u00a0<br/><span class=\"kw1\">function</span> check<span class=\"br0\">(</span> i$<span class=\"br0\">)</span> <span class=\"co1\">'   check =0 if no digit repeats, else =1</span><br/>    check <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">3</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span>i <span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw2\">mid$</span><span class=\"br0\">(</span> i$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"kw2\">mid$</span><span class=\"br0\">(</span> i$<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> check <span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>        <span class=\"kw1\">next</span> j<br/>    <span class=\"kw1\">next</span> i<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> score$<span class=\"br0\">(</span> a$<span class=\"sy0\">,</span> b$<span class=\"br0\">)</span>    <span class=\"co1\">'   return as a csv string the number of bulls &amp; cows.</span><br/>    bulls    <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span>  cows     <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span><br/>        c$ <span class=\"sy0\">=</span> <span class=\"kw2\">mid$</span><span class=\"br0\">(</span> a$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">mid$</span><span class=\"br0\">(</span> b$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> c$ <span class=\"kw1\">then</span><br/>            bulls <span class=\"sy0\">=</span> bulls <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw2\">instr</span><span class=\"br0\">(</span> b$<span class=\"sy0\">,</span> c$<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span><span class=\"nu0\">0</span> <span class=\"kw1\">and</span> <span class=\"kw2\">instr</span><span class=\"br0\">(</span> b$<span class=\"sy0\">,</span> c$<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span>i <span class=\"kw1\">then</span><br/>                cows <span class=\"sy0\">=</span> cows <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">next</span> i<br/>    score$ <span class=\"sy0\">=</span><span class=\"kw2\">str$</span><span class=\"br0\">(</span> bulls<span class=\"br0\">)</span>; <span class=\"st0\">\",\"</span>; <span class=\"kw2\">str$</span><span class=\"br0\">(</span> cows<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"br0\">[</span>quit<span class=\"br0\">]</span><br/><span class=\"kw1\">close</span> <span class=\"sy0\">#</span>w<br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Logo", "loc": 19, "block": "<pre class=\"text highlighted_source\">to ok?\u00a0:n<br/>  output (and [number?\u00a0:n] [4 = count\u00a0:n] [4 = count remdup\u00a0:n] [not member? 0\u00a0:n])<br/>end<br/>\u00a0<br/>to init<br/>  do.until [make \"hidden random 10000] [ok?\u00a0:hidden]<br/>end<br/>\u00a0<br/>to guess\u00a0:n<br/>  if not ok?\u00a0:n [print [Bad guess! (4 unique digits, 1-9)]  stop]<br/>  localmake \"bulls 0<br/>  localmake \"cows  0<br/>  foreach\u00a0:n [cond [<br/>    [[? = item #\u00a0:hidden] make \"bulls 1 +\u00a0:bulls]<br/>    [[member? \u00a0?\u00a0:hidden] make \"cows  1 +\u00a0:cows ]<br/>  ]]<br/>  (print\u00a0:bulls \"bulls,\u00a0:cows \"cows)<br/>  if\u00a0:bulls = 4 [print [You guessed it!]]<br/>end</pre>"}, {"lang": "Lua", "loc": 101, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> ShuffleArray<span class=\"br0\">(</span>array<span class=\"br0\">)</span><br/>   <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,#</span>array<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">local</span> t <span class=\"sy0\">=</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">#</span>array<span class=\"br0\">)</span><br/>      array<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> array<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"sy0\">=</span> array<span class=\"br0\">[</span>t<span class=\"br0\">]</span><span class=\"sy0\">,</span> array<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>   <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> GenerateNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">local</span> digits <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"br0\">}</span><br/>\u00a0<br/>   ShuffleArray<span class=\"br0\">(</span>digits<span class=\"br0\">)</span><br/>\u00a0<br/>   <span class=\"kw1\">return</span> digits<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span> <span class=\"sy0\">+</span><br/>          digits<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span>  <span class=\"nu0\">100</span> <span class=\"sy0\">+</span><br/>          digits<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span>   <span class=\"nu0\">10</span> <span class=\"sy0\">+</span><br/>          digits<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> IsMalformed<span class=\"br0\">(</span>input<span class=\"br0\">)</span><br/>   <span class=\"kw1\">local</span> malformed <span class=\"sy0\">=</span> <span class=\"kw4\">false</span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"sy0\">#</span>input <span class=\"sy0\">==</span> <span class=\"nu0\">4</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">local</span> already_used <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>      <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>         <span class=\"kw1\">local</span> digit <span class=\"sy0\">=</span> input<span class=\"sy0\">:</span>byte<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"kw3\">string.byte</span><span class=\"br0\">(</span><span class=\"st0\">'0'</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">if</span> digit <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"kw2\">or</span> digit <span class=\"sy0\">&gt;</span> <span class=\"nu0\">9</span> <span class=\"kw2\">or</span> already_used<span class=\"br0\">[</span>digit<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>            malformed <span class=\"sy0\">=</span> <span class=\"kw4\">true</span><br/>            <span class=\"kw1\">break</span><br/>         <span class=\"kw1\">end</span><br/>         already_used<span class=\"br0\">[</span>digit<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw4\">true</span><br/>      <span class=\"kw1\">end</span><br/>   <span class=\"kw1\">else</span><br/>      malformed <span class=\"sy0\">=</span> <span class=\"kw4\">true</span><br/>   <span class=\"kw1\">end</span><br/>\u00a0<br/>   <span class=\"kw1\">return</span> malformed<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">math.randomseed</span><span class=\"br0\">(</span><span class=\"kw3\">os.time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw3\">math.randomseed</span><span class=\"br0\">(</span><span class=\"kw3\">math.random</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">^</span><span class=\"nu0\">31</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">-- since os.time() only returns seconds</span><br/>\u00a0<br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Welcome to Bulls and Cows!\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"The object of this game is to guess the random 4-digit number that the\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"computer has chosen. The number is generated using only the digits 1-9,\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"with no repeated digits. Each time you enter a guess, you will score one\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\\"</span>bull<span class=\"es1\">\\\"</span> for each digit in your guess that matches the corresponding digit\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"in the computer-generated number, and you will score one <span class=\"es1\">\\\"</span>cow<span class=\"es1\">\\\"</span> for each\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"digit in your guess that appears in the computer-generated number, but is\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"in the wrong position. Use this information to refine your guesses. When\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"you guess the correct number, you win.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>quit <span class=\"sy0\">=</span> <span class=\"kw4\">false</span><br/>\u00a0<br/><span class=\"kw1\">repeat</span><br/>   magic_number <span class=\"sy0\">=</span> GenerateNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>   magic_string <span class=\"sy0\">=</span> <span class=\"kw3\">tostring</span><span class=\"br0\">(</span>magic_number<span class=\"br0\">)</span> <span class=\"co1\">-- Easier to do scoring with a string</span><br/>   <span class=\"kw1\">repeat</span><br/>      <span class=\"kw3\">io.write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Enter your guess (or 'Q' to quit): \"</span><span class=\"br0\">)</span><br/>      user_input <span class=\"sy0\">=</span> <span class=\"kw3\">io.read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">if</span> user_input <span class=\"sy0\">==</span> <span class=\"st0\">'Q'</span> <span class=\"kw2\">or</span> user_input <span class=\"sy0\">==</span> <span class=\"st0\">'q'</span> <span class=\"kw1\">then</span><br/>         quit <span class=\"sy0\">=</span> <span class=\"kw4\">true</span><br/>         <span class=\"kw1\">break</span><br/>      <span class=\"kw1\">end</span><br/>\u00a0<br/>      <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> IsMalformed<span class=\"br0\">(</span>user_input<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">if</span> user_input <span class=\"sy0\">==</span> magic_string <span class=\"kw1\">then</span><br/>            <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"YOU WIN!!!\"</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">local</span> bulls<span class=\"sy0\">,</span> cows <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><br/>            <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,#</span>user_input <span class=\"kw1\">do</span><br/>               <span class=\"kw1\">local</span> find_result <span class=\"sy0\">=</span> magic_string<span class=\"sy0\">:</span>find<span class=\"br0\">(</span>user_input<span class=\"sy0\">:</span>sub<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>               <span class=\"kw1\">if</span> find_result <span class=\"kw2\">and</span> find_result <span class=\"sy0\">==</span> i <span class=\"kw1\">then</span><br/>                  bulls <span class=\"sy0\">=</span> bulls <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>               <span class=\"kw1\">elseif</span> find_result <span class=\"kw1\">then</span><br/>                  cows <span class=\"sy0\">=</span> cows <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>               <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">end</span><br/>            <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">string.format</span><span class=\"br0\">(</span><span class=\"st0\">\"You scored\u00a0%d bulls,\u00a0%d cows\"</span><span class=\"sy0\">,</span> bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">end</span><br/>      <span class=\"kw1\">else</span><br/>         <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Malformed input. You must enter a 4-digit number with\"</span><span class=\"br0\">)</span><br/>         <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"no repeated digits, using only the digits 1-9.\"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span><br/>\u00a0<br/>   <span class=\"kw1\">until</span> user_input <span class=\"sy0\">==</span> magic_string<br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> quit <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">io.write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Press &lt;Enter&gt; to play again or 'Q' to quit: \"</span><span class=\"br0\">)</span><br/>      user_input <span class=\"sy0\">=</span> <span class=\"kw3\">io.read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">if</span> user_input <span class=\"sy0\">==</span> <span class=\"st0\">'Q'</span> <span class=\"kw2\">or</span> user_input <span class=\"sy0\">==</span> <span class=\"st0\">'q'</span> <span class=\"kw1\">then</span><br/>         quit <span class=\"sy0\">=</span> <span class=\"kw4\">true</span><br/>      <span class=\"kw1\">end</span><br/>   <span class=\"kw1\">end</span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> quit <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Goodbye!\"</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">end</span><br/><span class=\"kw1\">until</span> quit</pre>"}, {"lang": "Maple", "loc": 55, "block": "<pre class=\"text highlighted_source\">BC\u00a0:= proc(n) #where n is the number of turns the user wishes to play before they quit<br/>\tlocal target, win, numGuesses, guess, bulls, cows, i, err;<br/>    \ttarget\u00a0:= [0, 0, 0, 0]:<br/>    \trandomize(); #This is a command that makes sure that the numbers are truly randomized each time, otherwise your first time will always give the same result.<br/>\twhile member(0, target) or numelems({op(target)}) &lt; 4 do #loop continues to generate random numbers until you get one with no repeating digits or 0s<br/>\t\ttarget\u00a0:= [seq(parse(i), i in convert(rand(1234..9876)(), string))]: #a list of random numbers<br/>\tend do:<br/>\u00a0<br/>\twin\u00a0:= false:<br/>\tnumGuesses\u00a0:= 0:<br/>\twhile win = false and numGuesses &lt; n do #loop allows the user to play until they win or until a set amount of turns have passed<br/>\t\terr\u00a0:= true;<br/>\t\twhile err do #loop asks for values until user enters a valid number<br/>\t\t\tprintf(\"Please enter a 4 digit integer with no repeating digits\\n\");<br/>\t\t\ttry#catches any errors in user input<br/>\t\t\t\tguess\u00a0:= [seq(parse(i), i in readline())];<br/>\t\t\t\tif hastype(guess, 'Not(numeric)', 'exclude_container') then<br/>\t\t\t\t\tprintf(\"Postive integers only! Please guess again.\\n\\n\");<br/>\t\t\t\telif numelems(guess) &lt;&gt; 4 then<br/>\t\t\t\t\tprintf(\"4 digit numbers only! Please guess again.\\n\\n\");<br/>\t\t\t\telif numelems({op(guess)}) &lt; 4 then<br/>\t\t\t\t\tprintf(\"No repeating digits! Please guess again.\\n\\n\");<br/>\t\t\t\telif member(0, guess) then<br/>\t\t\t\t\tprintf(\"No 0s! Please guess again.\\n\\n\");<br/>\t\t\t\telse <br/>\t\t\t\t\terr\u00a0:= false;<br/>\t\t\t\tend if;<br/>\t\t\tcatch:<br/>\t\t\t\tprintf(\"Invalid input. Please guess again.\\n\\n\");<br/>\t\t\tend try;<br/>\t\tend do:<br/>\t\tnumGuesses\u00a0:= numGuesses + 1;<br/>\t\tprintf(\"Guess\u00a0%a:\u00a0%a\\n\", numGuesses, guess);<br/>\t\tbulls\u00a0:= 0;<br/>\t\tcows\u00a0:= 0;<br/>\t\tfor i to 4 do #loop checks for bulls and cows in the user's guess<br/>\t\t\tif target[i] = guess[i] then<br/>\t\t\t\tbulls\u00a0:= bulls + 1;<br/>\t\t\telif member(target[i], guess) then<br/>\t\t\t\tcows\u00a0:= cows + 1;<br/>\t\t\tend if;<br/>\t\tend do;<br/>\t\tif bulls = 4 then<br/>\t\t\twin\u00a0:= true;<br/>\t\t\tprintf(\"The number was\u00a0%a.\\n\", target);<br/>\t\t\tprintf(StringTools[FormatMessage](\"You won with\u00a0%1\u00a0%{1|guesses|guess|guesses}.\", numGuesses));<br/>\t\telse<br/>\t\t\tprintf(StringTools[FormatMessage](\"%1\u00a0%{1|Cows|Cow|Cows},\u00a0%2\u00a0%{2|Bulls|Bull|Bulls}.\\n\\n\", cows, bulls));<br/>\t\tend if;<br/>\tend do:<br/>\tif win = false and numGuesses &gt;= n then<br/>        printf(\"You lost! The number was\u00a0%a.\\n\", target);<br/>     end if;<br/>\treturn NULL;<br/>end proc:</pre>"}, {"lang": "Mathematica", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/><a class=\"__cf_email__\" data-cfemail=\"a7c3cec0ced3d49aebc6d4d3e7e1cedfc2c3f7c8cec9d3ebced4d3\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[If[<a class=\"__cf_email__\" data-cfemail=\"c18da4afa6b5a98194afa8aeaf\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>@#==4,#,Table[Random[Integer,{1,9}],{4}]]&amp;,{}]<br/>codes=ToCharacterCode[StringJoin[ToString/@digits]];<br/>Module[{r,bulls,cows},<br/>\tWhile[True,<br/>\tr=InputString[];<br/>\tIf[r===$Canceled,Break[],<br/>\t\tWith[{<a class=\"__cf_email__\" data-cfemail=\"b4c1c7d1c6f7dbd0d1c789e0dbf7dcd5c6d5d7c0d1c6f7dbd0d1f4c6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>},<br/>\t\tIf[userCodes===codes,Print[r&lt;&gt;\": You got it!\"];Break[],<br/>\t\t\tIf[<a class=\"__cf_email__\" data-cfemail=\"165a737871627e566365\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><a class=\"__cf_email__\" data-cfemail=\"6c091e2f0308091f51512009020b18042c0f0308091f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>,<br/>\t\t\t\tbulls=Count[userCodes-codes,0];<a class=\"__cf_email__\" data-cfemail=\"94f7fbe3e7a9d8f1faf3e0fcd4ddfae0f1e6e7f1f7e0fdfbfa\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[codes,userCodes]-bulls;<br/>\t\t\t\tPrint[r&lt;&gt;\": \"&lt;&gt;ToString[bulls]&lt;&gt;\"bull(s), \"&lt;&gt;<a class=\"__cf_email__\" data-cfemail=\"1743784463657e79705774786064\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>&lt;&gt;\"cow(s).\"],<br/>\t\t\t\tPrint[\"Guess four digits.\"]]]]]]]<br/>\u00a0</pre>"}, {"lang": "MATLAB", "loc": 62, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> BullsAndCows<br/><span class=\"co1\">% Plays the game Bulls and Cows as the \"game master\"</span><br/>\u00a0<br/>    <span class=\"co1\">% Create a secret number</span><br/>    nDigits = <span class=\"nu0\">4</span>;<br/>    lowVal = <span class=\"nu0\">1</span>;<br/>    highVal = <span class=\"nu0\">9</span>;<br/>    digitList = lowVal:highVal;<br/>    secret = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/zeros.html\"><span class=\"kw2\">zeros</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">for</span> k = <span class=\"nu0\">1</span>:nDigits<br/>        idx = randi<span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>digitList<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>        secret<span class=\"br0\">(</span>k<span class=\"br0\">)</span> = digitList<span class=\"br0\">(</span>idx<span class=\"br0\">)</span>;<br/>        digitList<span class=\"br0\">(</span>idx<span class=\"br0\">)</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"co1\">% Give game information</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Welcome to Bulls and Cows!\\n'</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Try to guess the\u00a0%d-digit number (no repeated digits).\\n'</span>, nDigits<span class=\"br0\">)</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Digits are between\u00a0%d and\u00a0%d (inclusive).\\n'</span>, lowVal, highVal<span class=\"br0\">)</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Score: 1 Bull per correct digit in correct place.\\n'</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'       1 Cow per correct digit in incorrect place.\\n'</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'The number has been chosen. Now it'</span><span class=\"co2\">'s your moooooove!\\n'</span><span class=\"br0\">)</span><br/>    gs = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/input.html\"><span class=\"kw2\">input</span></a><span class=\"br0\">(</span><span class=\"co2\">'Guess: '</span>, <span class=\"co2\">'s'</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>    <span class=\"co1\">% Loop until user guesses right or quits (no guess)</span><br/>    nGuesses = <span class=\"nu0\">1</span>;<br/>    <span class=\"kw1\">while</span> gs<br/>        gn = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/str2double.html\"><span class=\"kw2\">str2double</span></a><span class=\"br0\">(</span>gs<span class=\"br0\">)</span>;<br/>        <span class=\"kw1\">if</span> isnan<span class=\"br0\">(</span>gn<span class=\"br0\">)</span> || <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>gn<span class=\"br0\">)</span> &gt; <span class=\"nu0\">1</span>  <span class=\"co1\">% Not a scalar</span><br/>            <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Malformed guess. Keep to valid scalars.\\n'</span><span class=\"br0\">)</span><br/>            gs = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/input.html\"><span class=\"kw2\">input</span></a><span class=\"br0\">(</span><span class=\"co2\">'Try again: '</span>, <span class=\"co2\">'s'</span><span class=\"br0\">)</span>;<br/>        <span class=\"kw1\">else</span><br/>            g = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%d'</span>, gn<span class=\"br0\">)</span> - <span class=\"co2\">'0'</span>;<br/>            <span class=\"kw1\">if</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>g<span class=\"br0\">)</span> ~= nDigits || <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/any.html\"><span class=\"kw2\">any</span></a><span class=\"br0\">(</span>g &lt; lowVal<span class=\"br0\">)</span> || <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/any.html\"><span class=\"kw2\">any</span></a><span class=\"br0\">(</span>g &gt; highVal<span class=\"br0\">)</span> || <span class=\"sy0\">...</span><br/>                    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/unique.html\"><span class=\"kw2\">unique</span></a><span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"br0\">)</span> ~= nDigits    <span class=\"co1\">% Invalid number for game</span><br/>                <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Malformed guess. Remember:\\n'</span><span class=\"br0\">)</span><br/>                <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">' \u00a0%d digits\\n'</span>, nDigits<span class=\"br0\">)</span><br/>                <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'  Between\u00a0%d and\u00a0%d inclusive\\n'</span>, lowVal, highVal<span class=\"br0\">)</span><br/>                <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'  No repeated digits\\n'</span><span class=\"br0\">)</span><br/>                gs = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/input.html\"><span class=\"kw2\">input</span></a><span class=\"br0\">(</span><span class=\"co2\">'Try again: '</span>, <span class=\"co2\">'s'</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">else</span><br/>                score = CountBullsCows<span class=\"br0\">(</span>g, secret<span class=\"br0\">)</span>;<br/>                <span class=\"kw1\">if</span> score<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> == nDigits<br/>                    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'You win! Bully for you! Only\u00a0%d guesses.\\n'</span>, nGuesses<span class=\"br0\">)</span><br/>                    gs = <span class=\"co2\">''</span>;<br/>                <span class=\"kw1\">else</span><br/>                    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Score:\u00a0%d Bulls,\u00a0%d Cows\\n'</span>, score<span class=\"br0\">)</span><br/>                    gs = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/input.html\"><span class=\"kw2\">input</span></a><span class=\"br0\">(</span><span class=\"co2\">'Guess: '</span>, <span class=\"co2\">'s'</span><span class=\"br0\">)</span>;<br/>                <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>        nGuesses = nGuesses+<span class=\"nu0\">1</span>;  <span class=\"co1\">% Counts malformed guesses</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> score = CountBullsCows<span class=\"br0\">(</span>guess, correct<span class=\"br0\">)</span><br/><span class=\"co1\">% Checks the guessed array of digits against the correct array to find the score</span><br/><span class=\"co1\">% Assumes arrays of same length and valid numbers</span><br/>    bulls = guess == correct;<br/>    cows = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/ismember.html\"><span class=\"kw2\">ismember</span></a><span class=\"br0\">(</span>guess<span class=\"br0\">(</span>~bulls<span class=\"br0\">)</span>, correct<span class=\"br0\">)</span>;<br/>    score = <span class=\"br0\">[</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sum.html\"><span class=\"kw2\">sum</span></a><span class=\"br0\">(</span>bulls<span class=\"br0\">)</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sum.html\"><span class=\"kw2\">sum</span></a><span class=\"br0\">(</span>cows<span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "MAXScript", "loc": 70, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>numCount = 4 -- number of digits to use<br/>\u00a0<br/>digits = #(1, 2, 3, 4, 5, 6, 7, 8, 9)<br/>num = \"\"<br/>while num.count &lt; numCount and digits.count &gt; 0 do<br/>(<br/>\tlocal r = random 1 digits.count<br/>\tappend num (digits[r] as string)<br/>\tdeleteitem digits r<br/>)<br/>digits = undefined<br/>numGuesses = 0<br/>inf = \"Rules: \\n1. Choose only\u00a0% unique digits in any combination\"+\\<br/>\t\t\" (0 can't be used).\\n2. Only positive integers are allowed.\"+\\<br/>\t\t\"\\n3. For each digit that is in it's place, you get a bull,\\n\"+\\<br/>\t\t\"\\tand for each digit that is not in it's place, you get a cow.\"+\\<br/>\t\t\"\\n4. The game is won when your number matches the number I chose.\"+\\<br/>\t\t\"\\n\\nPress [esc] to quit the game.\\n\\n\"<br/>clearlistener()<br/>format inf num.count<br/>while not keyboard.escpressed do<br/>(<br/>\tlocal userVal = getkbvalue prompt:\"\\nEnter your number: \"<br/>\tif (userVal as string) == num do<br/>\t(<br/>\t\tformat \"\\nCorrect! The number is\u00a0%. It took you\u00a0% moves.\\n\" num numGuesses<br/>\t\texit with OK<br/>\t)<br/>\tlocal bulls = 0<br/>\tlocal cows = 0<br/>\tlocal badInput = false<br/>\tcase of<br/>\t(<br/>\t\t(classof userVal\u00a0!= integer): <br/>\t\t\t(<br/>\t\t\tformat \"\\nThe number must be a positive integer.\\n\"<br/>\t\t\tbadInput = true<br/>\t\t\t)<br/>\t\t((userVal as string).count\u00a0!= num.count): <br/>\t\t\t(<br/>\t\t\tformat \"\\nThe number must have\u00a0% digits.\\n\" num.count<br/>\t\t\tbadInput = true<br/>\t\t\t)<br/>\t\t((makeuniquearray (for i in 1 to (userVal as string).count \\<br/>\t\t\tcollect (userVal as string)[i])).count\u00a0!= (userVal as string).count):<br/>\t\t\t(<br/>\t\t\t\tformat \"\\nThe number can only have unique digits.\\n\"<br/>\t\t\t\tbadInput = true<br/>\t\t\t)<br/>\t)<br/>\tif not badInput do<br/>\t(<br/>\t\tuserVal = userVal as string<br/>\t\ti = 1<br/>\t\twhile i &lt;= userVal.count do<br/>\t\t(<br/>\t\t\tfor j = 1 to num.count do<br/>\t\t\t(<br/>\t\t\t\tif userVal[i] == num[j] do<br/>\t\t\t\t(<br/>\t\t\t\t\tif i == j then bulls += 1 else cows += 1<br/>\t\t\t\t)<br/>\t\t\t)<br/>\t\t\ti += 1<br/>\t\t)<br/>\t\tnumGuesses += 1<br/>\t\tformat \"\\nBulls:\u00a0% Cows:\u00a0%\\n\" bulls cows<br/>\t)<br/>)</pre>"}, {"lang": "MUMPS", "loc": 65, "block": "<pre class=\"text highlighted_source\">BullCow\tNew bull,cow,guess,guessed,ii,number,pos,x<br/>\tSet number=\"\",x=1234567890<br/>\tFor ii=1:1:4 Do<br/>\t. Set pos=$Random($Length(x))+1<br/>\t. Set number=number_$Extract(x,pos)<br/>\t. Set $Extract(x,pos)=\"\"<br/>\t. Quit<br/>\tWrite\u00a0!,\"The computer has selected a number that consists\"<br/>\tWrite\u00a0!,\"of four different digits.\"<br/>\tWrite\u00a0!!,\"As you are guessing the number, \"\"bulls\"\" and \"\"cows\"\"\"<br/>\tWrite\u00a0!,\"will be awarded: a \"\"bull\"\" for each digit that is\"<br/>\tWrite\u00a0!,\"placed in the correct position, and a \"\"cow\"\" for each\"<br/>\tWrite\u00a0!,\"digit that occurs in the number, but in a different place.\",!<br/>\tWrite\u00a0!,\"For a guess, enter 4 digits.\"<br/>\tWrite\u00a0!,\"Any other input is interpreted as \"\"I give up\"\".\",!<br/>\tSet guessed=0 For  Do  Quit:guessed<br/>\t. Write\u00a0!,\"Your guess: \" Read guess If guess'?4n Set guessed=-1 Quit<br/>\t. Set (bull,cow)=0,x=guess<br/>\t. For ii=4:-1:1 If $Extract(x,ii)=$Extract(number,ii) Do<br/>\t. . Set bull=bull+1,$Extract(x,ii)=\"\"<br/>\t. . Quit<br/>\t. For ii=1:1:$Length(x) Set:number[$Extract(x,ii) cow=cow+1<br/>\t. Write\u00a0!,\"You guessed \",guess,\". That earns you \"<br/>\t. If 'bull,'cow Write \"neither bulls nor cows...\" Quit<br/>\t. If bull Write bull,\" bull\" Write:bull&gt;1 \"s\"<br/>\t. If cow Write:bull \" and \" Write cow,\" cow\" Write:cow&gt;1 \"s\"<br/>\t. Write \".\"<br/>\t. If bull=4 Set guessed=1 Write\u00a0!,\"That's a perfect score.\"<br/>\t. Quit<br/>\tIf guessed&lt;0 Write\u00a0!!,\"The number was \",number,\".\",!<br/>\tQuit<br/>Do BullCow<br/>\u00a0<br/>The computer has selected a number that consists<br/>of four different digits.<br/>\u00a0<br/>As you are guessing the number, \"bulls\" and \"cows\"<br/>will be awarded: a \"bull\" for each digit that is<br/>placed in the correct position, and a \"cow\" for each<br/>digit that occurs in the number, but in a different place.<br/>\u00a0<br/>For a guess, enter 4 digits.<br/>Any other input is interpreted as \"I give up\".<br/>\u00a0<br/>Your guess: 1234<br/>You guessed 1234. That earns you 1 cow.<br/>Your guess: 5678<br/>You guessed 5678. That earns you 1 cow.<br/>Your guess: 9815<br/>You guessed 9815. That earns you 1 cow.<br/>Your guess: 9824<br/>You guessed 9824. That earns you 2 cows.<br/>Your guess: 9037<br/>You guessed 9037. That earns you 1 bull and 2 cows.<br/>Your guess: 9048<br/>You guessed 2789. That earns you 1 bull and 2 cows.<br/>Your guess: 2079<br/>You guessed 2079. That earns you 1 bull and 3 cows.<br/>Your guess: 2709<br/>You guessed 2709. That earns you 2 bulls and 2 cows.<br/>Your guess: 0729<br/>You guessed 0729. That earns you 4 cows.<br/>Your guess: 2907<br/>You guessed 2907. That earns you 4 bulls.<br/>That's a perfect score.</pre>"}, {"lang": "Nim", "loc": 35, "block": "<pre class=\"text highlighted_source\">import random, strutils, rdstdin<br/>randomize()<br/>\u00a0<br/>proc random(a: string): char = a[random(0..a.len)]<br/>\u00a0<br/>const<br/>  digits = \"123456789\"<br/>  size = 4<br/>\u00a0<br/>var digitsSet: set[char] = {}<br/>for d in digits: digitsSet.incl d<br/>\u00a0<br/>var chosen = newString(size)<br/>for i in 0..chosen.high: chosen[i] = random(digits)<br/>\u00a0<br/>echo \"\"\"I have chosen a number from $# unique digits from 1 to 9 arranged in a random order.<br/>You need to input a $# digit, unique digit number as a guess at what I have chosen\"\"\".format(size, size)<br/>\u00a0<br/>var guesses = 0<br/>while true:<br/>  inc guesses<br/>  var guess = \"\"<br/>  while true:<br/>    guess = readLineFromStdin(\"\\nNext guess [$#]: \".format(guesses)).strip()<br/>    if guess.len == size and allCharsInSet(guess, digitsSet):<br/>      break<br/>    echo \"Problem, try again. You need to enter $# unique digits from 1 to 9\".format(size)<br/>  if guess == chosen:<br/>    echo \"\\nCongratulations you guessed correctly in \",guesses,\" attempts\"<br/>    break<br/>  var bulls, cows = 0<br/>  for i in 0 .. &lt;size:<br/>    if guess[i] == chosen[i]: inc bulls<br/>    if guess[i] in chosen: inc cows<br/>  echo \"  $# Bulls\\n  $# Cows\".format(bulls, cows)</pre>"}, {"lang": "OCaml", "loc": 50, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput\"><span class=\"kw3\">input</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> s <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALread_line\"><span class=\"kw3\">read_line</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">try</span><br/>    <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length s <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">4</span> <span class=\"kw1\">then</span> <span class=\"kw1\">raise</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#EXCEPTIONExit\"><span class=\"kw5\">Exit</span></a><span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">function</span><br/>      <span class=\"sy0\">|</span> <span class=\"sy0\">'</span><span class=\"nu0\">1</span><span class=\"sy0\">'..'</span><span class=\"nu0\">9</span><span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">raise</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#EXCEPTIONExit\"><span class=\"kw5\">Exit</span></a><br/>    <span class=\"br0\">)</span> s<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">let</span> t <span class=\"sy0\">=</span> <span class=\"br0\">[</span> s<span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> s<span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> s<span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> s<span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"br0\">]</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>fold_left  <span class=\"co1\">(* reject entry with duplication *)</span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">fun</span> ac b <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>mem b ac <span class=\"kw1\">then</span> <span class=\"kw1\">raise</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#EXCEPTIONExit\"><span class=\"kw5\">Exit</span></a><span class=\"sy0\">;</span> <span class=\"br0\">(</span>b<span class=\"sy0\">::</span>ac<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">[</span><span class=\"br0\">]</span> t <span class=\"kw1\">in</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map <span class=\"br0\">(</span><span class=\"kw1\">fun</span> c <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_string\"><span class=\"kw3\">int_of_string</span></a> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>make <span class=\"nu0\">1</span> c<span class=\"br0\">)</span><span class=\"br0\">)</span> t<br/>  <span class=\"kw1\">with</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#EXCEPTIONExit\"><span class=\"kw5\">Exit</span></a> <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprerr_endline\"><span class=\"kw3\">prerr_endline</span></a> <span class=\"st0\">\"That is an invalid entry. Please try again.\"</span><span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput\"><span class=\"kw3\">input</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> print_score g t <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> bull <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter2 <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x y <span class=\"sy0\">-&gt;</span><br/>    <span class=\"kw1\">if</span> x <span class=\"sy0\">=</span> y <span class=\"kw1\">then</span> <span class=\"kw1\">incr</span> bull<br/>  <span class=\"br0\">)</span> g t<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> cow <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x <span class=\"sy0\">-&gt;</span><br/>    <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>mem x t <span class=\"kw1\">then</span> <span class=\"kw1\">incr</span> cow<br/>  <span class=\"br0\">)</span> g<span class=\"sy0\">;</span><br/>  cow <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span>cow <span class=\"sy0\">-</span> <span class=\"sy0\">!</span>bull<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%d bulls,\u00a0%d cows\\n%!\"</span> <span class=\"sy0\">!</span>bull <span class=\"sy0\">!</span>cow<br/><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span>self_init <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> mkgoal acc <span class=\"sy0\">=</span> <span class=\"kw1\">function</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-&gt;</span> acc<br/>  <span class=\"sy0\">|</span> i <span class=\"sy0\">-&gt;</span><br/>      <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a><span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> <span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>      <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>mem n acc<br/>      <span class=\"kw1\">then</span> mkgoal acc i<br/>      <span class=\"kw1\">else</span> mkgoal <span class=\"br0\">(</span>n<span class=\"sy0\">::</span>acc<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> g <span class=\"sy0\">=</span> mkgoal <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> found <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"kw1\">false</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">while</span> <span class=\"kw1\">not</span> <span class=\"sy0\">!</span>found <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">let</span> t <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput\"><span class=\"kw3\">input</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">if</span> t <span class=\"sy0\">=</span> g<br/>    <span class=\"kw1\">then</span> found <span class=\"sy0\">:=</span> <span class=\"kw1\">true</span><br/>    <span class=\"kw1\">else</span> print_score g t<br/>  <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> <span class=\"st0\">\"Congratulations you guessed correctly\"</span><span class=\"sy0\">;</span><br/><span class=\"sy0\">;;</span></pre>"}, {"lang": "Oforth", "loc": 18, "block": "<pre class=\"text highlighted_source\">: bullsAndCows<br/>| numbers guess digits bulls cows |<br/>\u00a0<br/>   ListBuffer new -&gt;numbers<br/>   while(numbers size 4 &lt;&gt;) [ 9 rand dup numbers include ifFalse: [ numbers add ] else: [ drop ] ]<br/>\u00a0<br/>   while(true) [<br/>      \"Enter a number of 4 different digits between 1 and 9\u00a0: \" print<br/>      System.Console askln -&gt;digits<br/>      digits asInteger isNull digits size 4 &lt;&gt; or ifTrue: [ \"Number of four digits needed\" println continue ]<br/>      digits map(#asDigit) -&gt;guess<br/>\u00a0<br/>      guess numbers zipWith(#==) occurrences(true) -&gt;bulls<br/>      bulls 4 == ifTrue: [ \"You won\u00a0!\" println return ]<br/>\u00a0<br/>      guess filter(#[numbers include]) size bulls - -&gt;cows<br/>      System.Out \"Bulls = \" &lt;&lt; bulls &lt;&lt; \", cows = \" &lt;&lt; cows &lt;&lt; cr<br/>      ]\u00a0;</pre>"}, {"lang": "ooRexx", "loc": 69, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">proc</span> <span class=\"br0\">{</span><span class=\"re1\">Main</span><span class=\"br0\">}</span><br/>     Solution = <span class=\"br0\">{</span>PickNUnique 4 <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>number 1 9 1<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/>     <span class=\"kw1\">proc</span> <span class=\"br0\">{</span><span class=\"re1\">Loop</span><span class=\"br0\">}</span><br/>        Guess = <span class=\"br0\">{</span>EnterGuess<span class=\"br0\">}</span><br/>     <span class=\"kw1\">in</span><br/>        <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo<br/>         <span class=\"br0\">{</span>Bulls Guess Solution<span class=\"br0\">}</span><span class=\"sy0\">#</span><span class=\"st0\">\" bulls and \"</span><span class=\"sy0\">#</span><br/>         <span class=\"br0\">{</span>Cows Guess Solution<span class=\"br0\">}</span><span class=\"sy0\">#</span><span class=\"st0\">\" cows\"</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> Guess <span class=\"sy0\">\\=</span> Solution <span class=\"kw1\">then</span> <span class=\"br0\">{</span>Loop<span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>Loop<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"st0\">\"You have won!\"</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Bulls</span> Xs Sol<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Length <span class=\"br0\">{</span>Filter <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>zip Xs Sol Value<span class=\"sy0\">.</span><span class=\"st0\">'=='</span><span class=\"br0\">}</span> Id<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Cows</span> Xs Sol<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Length <span class=\"br0\">{</span>Intersection Xs Sol<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">local</span><br/>     <span class=\"kw1\">class</span> <span class=\"re2\">TextFile</span> <span class=\"kw1\">from</span> Open<span class=\"sy0\">.</span>file Open<span class=\"sy0\">.</span>text <span class=\"kw1\">end</span><br/>     StdIn = <span class=\"br0\">{</span>New TextFile init<span class=\"br0\">(</span>name:stdin<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">EnterGuess</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">try</span><br/>           <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>printInfo <span class=\"st0\">\"Enter your guess (e.g. <span class=\"es0\">\\\"</span>1234<span class=\"es0\">\\\"</span>): \"</span><span class=\"br0\">}</span><br/>           S = <span class=\"br0\">{</span>StdIn getS<span class=\"br0\">(</span>$<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">in</span><br/>           <span class=\"co1\">%% verify</span><br/>           <span class=\"br0\">{</span>Length S<span class=\"br0\">}</span> = 4<br/>           <span class=\"br0\">{</span>All S Char<span class=\"sy0\">.</span>isDigit<span class=\"br0\">}</span> = <span class=\"kw1\">true</span><br/>           <span class=\"br0\">{</span>FD<span class=\"sy0\">.</span>distinct S<span class=\"br0\">}</span> <span class=\"co1\">%% assert there is no duplicate digit</span><br/>           <span class=\"co1\">%% convert from digits to numbers</span><br/>           <span class=\"br0\">{</span>Map S <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> D<span class=\"br0\">}</span> D<span class=\"sy0\">-</span><span class=\"re3\">&amp;0</span> <span class=\"kw1\">end</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">catch</span> _ <span class=\"kw1\">then</span><br/>           <span class=\"br0\">{</span>EnterGuess<span class=\"br0\">}</span><br/>        <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">PickNUnique</span> N Xs<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>FoldL <span class=\"br0\">{</span>MakeList N<span class=\"br0\">}</span><br/>      <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> Z _<span class=\"br0\">}</span><br/>         <span class=\"br0\">{</span>Pick <span class=\"br0\">{</span>Diff Xs Z<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">|</span>Z<br/>      <span class=\"kw1\">end</span><br/>      nil<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Pick</span> Xs<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Nth Xs <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>rand<span class=\"br0\">}</span> <span class=\"kw1\">mod</span> <span class=\"br0\">{</span>Length Xs<span class=\"br0\">}</span> <span class=\"sy0\">+</span> 1<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Diff</span> Xs Ys<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>FoldL Ys List<span class=\"sy0\">.</span>subtract Xs<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Intersection</span> Xs Ys<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Filter Xs <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> X<span class=\"br0\">}</span> <span class=\"br0\">{</span>Member X Ys<span class=\"br0\">}</span> <span class=\"kw1\">end</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Id</span> X<span class=\"br0\">}</span> X <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Main<span class=\"br0\">}</span></pre>"}, {"lang": "Oz", "loc": 69, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">proc</span> <span class=\"br0\">{</span><span class=\"re1\">Main</span><span class=\"br0\">}</span><br/>     Solution = <span class=\"br0\">{</span>PickNUnique 4 <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>number 1 9 1<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/>     <span class=\"kw1\">proc</span> <span class=\"br0\">{</span><span class=\"re1\">Loop</span><span class=\"br0\">}</span><br/>        Guess = <span class=\"br0\">{</span>EnterGuess<span class=\"br0\">}</span><br/>     <span class=\"kw1\">in</span><br/>        <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo<br/>         <span class=\"br0\">{</span>Bulls Guess Solution<span class=\"br0\">}</span><span class=\"sy0\">#</span><span class=\"st0\">\" bulls and \"</span><span class=\"sy0\">#</span><br/>         <span class=\"br0\">{</span>Cows Guess Solution<span class=\"br0\">}</span><span class=\"sy0\">#</span><span class=\"st0\">\" cows\"</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> Guess <span class=\"sy0\">\\=</span> Solution <span class=\"kw1\">then</span> <span class=\"br0\">{</span>Loop<span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>Loop<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"st0\">\"You have won!\"</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Bulls</span> Xs Sol<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Length <span class=\"br0\">{</span>Filter <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>zip Xs Sol Value<span class=\"sy0\">.</span><span class=\"st0\">'=='</span><span class=\"br0\">}</span> Id<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Cows</span> Xs Sol<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Length <span class=\"br0\">{</span>Intersection Xs Sol<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">local</span><br/>     <span class=\"kw1\">class</span> <span class=\"re2\">TextFile</span> <span class=\"kw1\">from</span> Open<span class=\"sy0\">.</span>file Open<span class=\"sy0\">.</span>text <span class=\"kw1\">end</span><br/>     StdIn = <span class=\"br0\">{</span>New TextFile init<span class=\"br0\">(</span>name:stdin<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">EnterGuess</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">try</span><br/>           <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>printInfo <span class=\"st0\">\"Enter your guess (e.g. <span class=\"es0\">\\\"</span>1234<span class=\"es0\">\\\"</span>): \"</span><span class=\"br0\">}</span><br/>           S = <span class=\"br0\">{</span>StdIn getS<span class=\"br0\">(</span>$<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">in</span><br/>           <span class=\"co1\">%% verify</span><br/>           <span class=\"br0\">{</span>Length S<span class=\"br0\">}</span> = 4<br/>           <span class=\"br0\">{</span>All S Char<span class=\"sy0\">.</span>isDigit<span class=\"br0\">}</span> = <span class=\"kw1\">true</span><br/>           <span class=\"br0\">{</span>FD<span class=\"sy0\">.</span>distinct S<span class=\"br0\">}</span> <span class=\"co1\">%% assert there is no duplicate digit</span><br/>           <span class=\"co1\">%% convert from digits to numbers</span><br/>           <span class=\"br0\">{</span>Map S <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> D<span class=\"br0\">}</span> D<span class=\"sy0\">-</span><span class=\"re3\">&amp;0</span> <span class=\"kw1\">end</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">catch</span> _ <span class=\"kw1\">then</span><br/>           <span class=\"br0\">{</span>EnterGuess<span class=\"br0\">}</span><br/>        <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">PickNUnique</span> N Xs<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>FoldL <span class=\"br0\">{</span>MakeList N<span class=\"br0\">}</span><br/>      <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> Z _<span class=\"br0\">}</span><br/>         <span class=\"br0\">{</span>Pick <span class=\"br0\">{</span>Diff Xs Z<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">|</span>Z<br/>      <span class=\"kw1\">end</span><br/>      nil<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Pick</span> Xs<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Nth Xs <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>rand<span class=\"br0\">}</span> <span class=\"kw1\">mod</span> <span class=\"br0\">{</span>Length Xs<span class=\"br0\">}</span> <span class=\"sy0\">+</span> 1<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Diff</span> Xs Ys<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>FoldL Ys List<span class=\"sy0\">.</span>subtract Xs<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Intersection</span> Xs Ys<span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Filter Xs <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> X<span class=\"br0\">}</span> <span class=\"br0\">{</span>Member X Ys<span class=\"br0\">}</span> <span class=\"kw1\">end</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Id</span> X<span class=\"br0\">}</span> X <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Main<span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 11, "block": "<pre class=\"parigp highlighted_source\">bc<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  my<span class=\"br0\">(</span>u<span class=\"sy0\">,</span>v<span class=\"sy0\">,</span>bulls<span class=\"sy0\">,</span>cows<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>#vecsort<span class=\"br0\">(</span>v<span class=\"sy0\">=</span><span class=\"kw1\">vector</span><span class=\"br0\">(</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span>i<span class=\"sy0\">,</span><span class=\"kw1\">random</span><span class=\"br0\">(</span><span class=\"nu1\">9</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu1\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,,</span><span class=\"nu1\">8</span><span class=\"br0\">)</span><span class=\"sy0\">&lt;</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>bulls<span class=\"sy0\">&lt;</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span><br/>    u<span class=\"sy0\">=</span><span class=\"kw1\">input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>u<span class=\"br0\">)</span><span class=\"sy0\">!=</span><span class=\"st0\">\"t_VEC\"</span><span class=\"sy0\">|</span>#u<span class=\"sy0\">!=</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span><span class=\"kw1\">next</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    bulls<span class=\"sy0\">=</span><span class=\"kw1\">sum</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span>u<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">==</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    cows<span class=\"sy0\">=</span><span class=\"kw1\">sum</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span><span class=\"kw1\">sum</span><span class=\"br0\">(</span>j<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">4</span><span class=\"sy0\">,</span>i<span class=\"sy0\">!=</span>j<span class=\"sy0\">&amp;</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">==</span>u<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"You have \"</span>bulls<span class=\"st0\">\" bulls and \"</span>cows<span class=\"st0\">\" cows\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 189, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> BullCow<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$mode objFPC}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> Math<span class=\"sy1\">,</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">type</span><br/>   TFourDigit <span class=\"sy3\">=</span> <span class=\"kw4\">array</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">..</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> WriteFourDigit<span class=\"br0\">(</span>fd<span class=\"sy1\">:</span> TFourDigit<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Write out a TFourDigit with no line break following. }</span><br/><span class=\"kw1\">var</span><br/>   i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw3\">Write</span><span class=\"br0\">(</span>fd<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> WellFormed<span class=\"br0\">(</span>Tentative<span class=\"sy1\">:</span> TFourDigit<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Does the TFourDigit avoid repeating digits? }</span><br/><span class=\"kw1\">var</span><br/>   current<span class=\"sy1\">,</span> check<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>   Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw2\">True</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">for</span> current <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> check <span class=\"sy1\">:</span><span class=\"sy3\">=</span> current <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">if</span> Tentative<span class=\"br0\">[</span>check<span class=\"br0\">]</span> <span class=\"sy3\">=</span> Tentative<span class=\"br0\">[</span>current<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">begin</span><br/>            Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw2\">False</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> MakeNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TFourDigit<span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Make a random TFourDigit, keeping trying until it is well-formed. }</span><br/><span class=\"kw1\">var</span><br/>   i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>      Result<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> RandomRange<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> WellFormed<span class=\"br0\">(</span>Result<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>   <span class=\"kw1\">begin</span><br/>      Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> MakeNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> StrToFourDigit<span class=\"br0\">(</span>s<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TFourDigit<span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Convert an (input) string to a TFourDigit. }</span><br/><span class=\"kw1\">var</span><br/>   i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> Length<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>      StrToFourDigit<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> StrToInt<span class=\"br0\">(</span>s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> Wins<span class=\"br0\">(</span>Num<span class=\"sy1\">,</span> Guess<span class=\"sy1\">:</span> TFourDigit<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Does the guess win? }</span><br/><span class=\"kw1\">var</span><br/>   i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw2\">True</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> Num<span class=\"br0\">[</span>i<span class=\"br0\">]</span> &lt;&gt; Guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">begin</span><br/>         Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw2\">False</span><span class=\"sy1\">;</span><br/>         Exit<span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> GuessScore<span class=\"br0\">(</span>Num<span class=\"sy1\">,</span> Guess<span class=\"sy1\">:</span> TFourDigit<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Represent the score of the current guess as a string. }</span><br/><span class=\"kw1\">var</span><br/>   i<span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> bulls<span class=\"sy1\">,</span> cows<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>   bulls <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>   cows <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">{ Count the cows and bulls. }</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> j <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">4</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">if</span>  <span class=\"br0\">(</span>Num<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy3\">=</span> Guess<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">begin</span><br/>            <span class=\"coMULTI\">{ If the indices are the same, that would be a bull. }</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy3\">=</span> j<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">begin</span><br/>               bulls <span class=\"sy1\">:</span><span class=\"sy3\">=</span> bulls <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">begin</span><br/>               cows <span class=\"sy1\">:</span><span class=\"sy3\">=</span> cows <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>         <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">{ Format the result as a sentence. }</span><br/>   Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> IntToStr<span class=\"br0\">(</span>bulls<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">' bulls, '</span> <span class=\"sy3\">+</span> IntToStr<span class=\"br0\">(</span>cows<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">' cows.'</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> GetGuess<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TFourDigit<span class=\"sy1\">;</span><br/><span class=\"coMULTI\">{ Get a well-formed user-supplied TFourDigit guess. }</span><br/><span class=\"kw1\">var</span><br/>   input<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>   <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Enter a guess:'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw3\">ReadLn</span><span class=\"br0\">(</span>input<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">{ Must be 4 digits. }</span><br/>   <span class=\"kw1\">if</span> Length<span class=\"br0\">(</span>input<span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"nu0\">4</span> <span class=\"kw1\">then</span><br/>   <span class=\"kw1\">begin</span><br/>\u00a0<br/>      Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> StrToFourDigit<span class=\"br0\">(</span>input<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> WellFormed<span class=\"br0\">(</span>Result<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Four unique digits, please.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> GetGuess<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">end</span><br/>   <span class=\"kw1\">else</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Please guess a four-digit number.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> GetGuess<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>   Num<span class=\"sy1\">,</span> Guess<span class=\"sy1\">:</span> TFourDigit<span class=\"sy1\">;</span><br/>   Turns<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>   <span class=\"coMULTI\">{ Initialize the randymnity. }</span><br/>   Randomize<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">{ Make the secred number. }</span><br/>   Num <span class=\"sy1\">:</span><span class=\"sy3\">=</span> MakeNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'I have a secret number. Guess it!'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   Turns <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">{ Guess until the user gets it. }</span><br/>   <span class=\"kw1\">While</span> <span class=\"kw2\">True</span> <span class=\"kw1\">do</span><br/>   <span class=\"kw1\">begin</span><br/>\u00a0<br/>      Guess <span class=\"sy1\">:</span><span class=\"sy3\">=</span> GetGuess<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      <span class=\"coMULTI\">{ Count each guess as a turn. }</span><br/>      Turns <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Turns <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      <span class=\"coMULTI\">{ If the user won, tell them and ditch. }</span><br/>      <span class=\"kw1\">if</span> Wins<span class=\"br0\">(</span>Num<span class=\"sy1\">,</span> Guess<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'You won in '</span> <span class=\"sy3\">+</span> IntToStr<span class=\"br0\">(</span>Turns<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">' tries.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         <span class=\"kw3\">Write</span><span class=\"br0\">(</span><span class=\"st0\">'The number was '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         WriteFourDigit<span class=\"br0\">(</span>Num<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'!'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>         Exit<span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><br/>      <span class=\"kw1\">else</span> <span class=\"coMULTI\">{ Otherwise, score it and get a new guess. }</span><br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span>GuessScore<span class=\"br0\">(</span>Num<span class=\"sy1\">,</span> Guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 39, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Data<span class=\"sy0\">::</span><span class=\"me2\">Random</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>rand_set<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">MoreUtils</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>uniq<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$size</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$chosen</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a> <span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> rand_set set <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"st0\">\"1\"</span><span class=\"sy0\">..</span><span class=\"st0\">\"9\"</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> size <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$size</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"I've chosen a number from $size unique digits from 1 to 9; you need<br/>to input $size unique digits to guess my number<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw1\">my</span> <span class=\"re0\">$guesses</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"sy0\">;</span> <span class=\"re0\">$guesses</span><span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$guess</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Next guess [$guesses]: \"</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$guess</span> <span class=\"sy0\">=</span> <span class=\"re4\">&lt;STDIN&gt;</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/chomp.html\"><span class=\"kw3\">chomp</span></a> <span class=\"re0\">$guess</span><span class=\"sy0\">;</span><br/>        checkguess<span class=\"br0\">(</span><span class=\"re0\">$guess</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"kw1\">last</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"$size digits, no repetition, no 0... retry<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$guess</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$chosen</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"You did it in $guesses attempts!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">last</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$bulls</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$cows</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$size</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$guess</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">eq</span> <a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$chosen</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$bulls</span><span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span> <a href=\"http://perldoc.perl.org/functions/index.html\"><span class=\"kw3\">index</span></a><span class=\"br0\">(</span><span class=\"re0\">$chosen</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$guess</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$cows</span><span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"$cows cows, $bulls bulls<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> checkguess<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$g</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> uniq<span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/split.html\"><span class=\"kw3\">split</span></a> <span class=\"sy0\">//,</span> <span class=\"re0\">$g</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"re0\">$size</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$g</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^[1-9]{$size}$/</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 21, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$size</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@secret</span> <span class=\"sy0\">=</span> <span class=\"kw3\">pick</span> <span class=\"re0\">$size</span><span class=\"sy0\">,</span> <span class=\"st_h\">'1'</span> <span class=\"sy0\">..</span> <span class=\"st_h\">'9'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..*</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$guesses</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@guess</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">loop</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">@guess</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>prompt<span class=\"br0\">(</span><span class=\"st0\">\"Guess $guesses: \"</span><span class=\"br0\">)</span> <span class=\"sy0\">//</span> exit<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">comb</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"re0\">@guess</span> <span class=\"sy0\">==</span> <span class=\"re0\">$size</span> <span class=\"kw1\">and</span><br/>            <span class=\"kw3\">all</span><span class=\"br0\">(</span><span class=\"re0\">@guess</span><span class=\"br0\">)</span> <span class=\"kw1\">eq</span> <span class=\"kw3\">one</span><span class=\"br0\">(</span><span class=\"re0\">@guess</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"kw3\">any</span><span class=\"br0\">(</span><span class=\"st_h\">'1'</span> <span class=\"sy0\">..</span> <span class=\"st_h\">'9'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw3\">say</span> <span class=\"st_h\">'Malformed guess; try again.'</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$bulls</span><span class=\"sy0\">,</span> <span class=\"re0\">$cows</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">$size</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">when</span> <span class=\"re0\">@guess</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"kw1\">eq</span> <span class=\"re0\">@secret</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"sy0\">++</span><span class=\"re0\">$bulls</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">when</span> <span class=\"re0\">@guess</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"kw1\">eq</span> <span class=\"kw3\">any</span> <span class=\"re0\">@secret</span> <span class=\"br0\">{</span> <span class=\"sy0\">++</span><span class=\"re0\">$cows</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"re0\">$bulls</span> <span class=\"sy0\">==</span> <span class=\"re0\">$size</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"$bulls bulls, $cows cows.\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st_h\">'A winner is you!'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 50, "block": "<pre class=\"text highlighted_source\">constant N = 4<br/>\u00a0<br/>function mask(integer ch)<br/>    return power(2,ch-'1')<br/>end function<br/>\u00a0<br/>function score(sequence guess, sequence goal)<br/>integer bits = 0, bulls = 0, cows = 0, b<br/>    for i=1 to N do<br/>        b = goal[i]<br/>        if guess[i]=b then<br/>            bulls += 1<br/>        else<br/>            bits += mask(b)<br/>        end if<br/>    end for<br/>    for i=1 to N do<br/>        b = mask(guess[i])<br/>        if and_bits(bits,b)!=0 then<br/>            cows += 1<br/>            bits -= b<br/>        end if<br/>    end for<br/>    return {bulls, cows}<br/>end function<br/>\u00a0<br/>procedure game()<br/>sequence tgt = shuffle(\"123456789\")[1..N]<br/>integer attempt = 1, bulls = 0, cows <br/>sequence guess<br/>    while bulls&lt;N do<br/>        while 1 do<br/>            printf(1,\"Enter a\u00a0%d digit number using only the digits 1 to 9:\",N)<br/>            guess = trim(gets(0))<br/>            if length(guess)=N then exit end if<br/>            if length(guess)=1 and lower(guess)=\"q\" then<br/>                puts(1,\"\\nthe secret number was:\"&amp;tgt)<br/>                {} = wait_key()<br/>                abort(0)<br/>            end if<br/>            printf(1,\" - length is not\u00a0%d  (enter q to give up)\\n\",N)<br/>        end while<br/>        {bulls, cows} = score(guess,tgt)<br/>        printf(1,\"   Guess\u00a0%-2d  (%s)  bulls:%d  cows:%d\\n\",{attempt,guess,bulls,cows})<br/>        attempt += 1<br/>    end while<br/>    puts(1,\"Well done!\\n\")<br/>end procedure<br/>\u00a0<br/>game()</pre>"}, {"lang": "PHP", "loc": 40, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"re0\">$size</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$chosen</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/implode\"><span class=\"kw3\">implode</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/array_rand\"><span class=\"kw3\">array_rand</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/array_flip\"><span class=\"kw3\">array_flip</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/range\"><span class=\"kw3\">range</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"re0\">$size</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"I've chosen a number from <span class=\"es4\">$size</span> unique digits from 1 to 9; you need<br/>to input <span class=\"es4\">$size</span> unique digits to guess my number<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$guesses</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"sy0\">;</span> <span class=\"re0\">$guesses</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw4\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>Next guess [<span class=\"es4\">$guesses</span>]: \"</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$guess</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/rtrim\"><span class=\"kw3\">rtrim</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/fgets\"><span class=\"kw3\">fgets</span></a><span class=\"br0\">(</span>STDIN<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>checkguess<span class=\"br0\">(</span><span class=\"re0\">$guess</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$size</span> digits, no repetition, no 0... retry<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span> <span class=\"sy0\">==</span> <span class=\"re0\">$chosen</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"You did it in <span class=\"es4\">$guesses</span> attempts!<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$bulls</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$cows</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/range\"><span class=\"kw3\">range</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$size</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> <span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"re0\">$chosen</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                <span class=\"re0\">$bulls</span><span class=\"sy0\">++;</span><br/>            <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/strpos\"><span class=\"kw3\">strpos</span></a><span class=\"br0\">(</span><span class=\"re0\">$chosen</span><span class=\"sy0\">,</span> <span class=\"re0\">$guess</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">!==</span> <span class=\"kw4\">FALSE</span><span class=\"br0\">)</span><br/>                <span class=\"re0\">$cows</span><span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$cows</span> cows, <span class=\"es4\">$bulls</span> bulls<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">function</span> checkguess<span class=\"br0\">(</span><span class=\"re0\">$g</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw2\">global</span> <span class=\"re0\">$size</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <a href=\"http://www.php.net/count\"><span class=\"kw3\">count</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/array_unique\"><span class=\"kw3\">array_unique</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/str_split\"><span class=\"kw3\">str_split</span></a><span class=\"br0\">(</span><span class=\"re0\">$g</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"re0\">$size</span> <span class=\"sy0\">&amp;&amp;</span><br/>    <a href=\"http://www.php.net/preg_match\"><span class=\"kw3\">preg_match</span></a><span class=\"br0\">(</span><span class=\"st0\">\"/^[1-9]{<span class=\"es4\">{$size}</span>}$/\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$g</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 21, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>de ok? <span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span><span class=\"kw1\">let</span> D <span class=\"br0\">(</span><span class=\"kw1\">mapcar</span> 'format <span class=\"br0\">(</span>chop N<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>num? N<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"kw1\">member</span> <span class=\"nu0\">0</span> D<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> D<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"sy0\">=</span> D <span class=\"br0\">(</span>uniq D<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           D <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>de init-cows <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>until <span class=\"br0\">(</span><span class=\"kw1\">setq</span> *Hidden <span class=\"br0\">(</span>ok? <span class=\"br0\">(</span>rand <span class=\"nu0\">1234</span> <span class=\"nu0\">9876</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>de guess <span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span><span class=\"kw1\">let</span> D <span class=\"br0\">(</span>ok? N<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> D<br/>         <span class=\"br0\">(</span><span class=\"kw1\">let</span> Bulls <span class=\"br0\">(</span>cnt '<span class=\"sy0\">=</span> D *Hidden<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">4</span> Bulls<span class=\"br0\">)</span><br/>               <span class=\"st0\">\" You guessed it!\"</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">let</span> Cows <span class=\"br0\">(</span>- <span class=\"br0\">(</span>cnt '<span class=\"br0\">(</span><span class=\"br0\">(</span>N<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">member</span> N *Hidden<span class=\"br0\">)</span><span class=\"br0\">)</span> D<span class=\"br0\">)</span> Bulls<span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span>pack Bulls <span class=\"st0\">\" bulls, \"</span> Cows <span class=\"st0\">\" cows\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>         <span class=\"st0\">\" Bad guess! (4 unique digits, 1-9)\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "PowerShell", "loc": 49, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"br0\">[</span><span class=\"re3\">int</span><span class=\"br0\">]</span><span class=\"re0\">$guesses</span> <span class=\"sy0\">=</span> <span class=\"re0\">$bulls</span> <span class=\"sy0\">=</span> <span class=\"re0\">$cows</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><span class=\"re0\">$guess</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"none\"</span><br/><span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><span class=\"re0\">$digits</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>\u00a0<br/><span class=\"kw3\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$digits</span>.Length <span class=\"kw4\">-lt</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"re0\">$character</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"re3\">char</span><span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"nu0\">49</span>..<span class=\"nu0\">57</span> <span class=\"sy0\">|</span> Get<span class=\"sy0\">-</span>Random<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$digits</span>.IndexOf<span class=\"br0\">(</span><span class=\"re0\">$character</span><span class=\"br0\">)</span> <span class=\"kw4\">-eq</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"re0\">$digits</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$character</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"<span class=\"es0\">`n</span>Guess four digits (1-9) using no digit twice.<span class=\"es0\">`n</span>\"</span> <span class=\"kw5\">-ForegroundColor</span> Cyan<br/>\u00a0<br/><span class=\"kw3\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$bulls</span> <span class=\"kw4\">-lt</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">do</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"re0\">$prompt</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Guesses={0:0#}, Last='{1,4}', Bulls={2}, Cows={3}; Enter your guess\"</span> <span class=\"kw4\">-f</span> <span class=\"re0\">$guesses</span><span class=\"sy0\">,</span> <span class=\"re0\">$guess</span><span class=\"sy0\">,</span> <span class=\"re0\">$bulls</span><span class=\"sy0\">,</span> <span class=\"re0\">$cows</span><br/>        <span class=\"re0\">$guess</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Read-Host</span> <span class=\"re0\">$prompt</span><br/>\u00a0<br/>        <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span>.Length <span class=\"kw4\">-ne</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>                     <span class=\"br0\">{</span><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"<span class=\"es0\">`n</span>Must be a four-digit number<span class=\"es0\">`n</span>\"</span> <span class=\"kw5\">-ForegroundColor</span> Red<span class=\"br0\">}</span><br/>        <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span> <span class=\"kw4\">-notmatch</span> <span class=\"st0\">\"[1-9][1-9][1-9][1-9]\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"<span class=\"es0\">`n</span>Must be numbers 1-9<span class=\"es0\">`n</span>\"</span>         <span class=\"kw5\">-ForegroundColor</span> Red<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw3\">until</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span>.Length <span class=\"kw4\">-eq</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"re0\">$guesses</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>    <span class=\"re0\">$bulls</span> <span class=\"sy0\">=</span> <span class=\"re0\">$cows</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; <span class=\"re0\">$i</span> <span class=\"kw4\">-lt</span> <span class=\"nu0\">4</span>; <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span> <br/>        <span class=\"re0\">$character</span> <span class=\"sy0\">=</span> <span class=\"re0\">$digits</span>.Substring<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span>.Substring<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw4\">-eq</span> <span class=\"re0\">$character</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"re0\">$bulls</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">else</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$guess</span>.IndexOf<span class=\"br0\">(</span><span class=\"re0\">$character</span><span class=\"br0\">)</span> <span class=\"kw4\">-ge</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"re0\">$cows</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"<span class=\"es0\">`n</span>You won after $($guesses - 1) guesses.\"</span> <span class=\"kw5\">-ForegroundColor</span> Cyan<br/>\u00a0</pre>"}, {"lang": "Prolog", "loc": 57, "block": "<pre class=\"prolog highlighted_source\"><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>lambda<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>clpfd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% Parameters of the server</span><br/>\u00a0<br/><span class=\"co1\">% length of the guess</span><br/>proposition<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% Numbers of digits</span><br/><span class=\"co1\">% 0 -&gt; 8</span><br/>digits<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>bulls_and_cows_server <span class=\"sy1\">:-</span><br/>\tproposition<span class=\"br0\">(</span>LenGuess<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tlength<span class=\"br0\">(</span>Solution<span class=\"sy4\">,</span> LenGuess<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tchoose<span class=\"br0\">(</span>Solution<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">repeat</span></a><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">write</span></a><span class=\"br0\">(</span><span class=\"st_h\">'Your guess\u00a0: '</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">read</span></a><span class=\"br0\">(</span>Guess<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span>   study<span class=\"br0\">(</span>Solution<span class=\"sy4\">,</span> Guess<span class=\"sy4\">,</span> Bulls<span class=\"sy4\">,</span> Cows<span class=\"br0\">)</span><br/>\t<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>  format<span class=\"br0\">(</span><span class=\"st_h\">'Bulls\u00a0: ~w Cows\u00a0: ~w~n'</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>Bulls<span class=\"sy4\">,</span> Cows<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t    Bulls <span class=\"sy6\">=</span> LenGuess<br/>\t<span class=\"sy4\">;</span>   digits<span class=\"br0\">(</span>Digits<span class=\"br0\">)</span><span class=\"sy4\">,</span> Max <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Digits <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\t    format<span class=\"br0\">(</span><span class=\"st_h\">'Guess must be of ~w digits between 1 and ~w~n'</span><span class=\"sy4\">,</span><br/>\t\t   <span class=\"br0\">[</span>LenGuess<span class=\"sy4\">,</span> Max<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t    <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">fail</span></a><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>choose<span class=\"br0\">(</span>Solution<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tdigits<span class=\"br0\">(</span>Digits<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tMax <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Digits <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">repeat</span></a><span class=\"sy4\">,</span><br/>\tmaplist<span class=\"br0\">(</span>\\X^<span class=\"br0\">(</span>X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> random<span class=\"br0\">(</span>Max<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> Solution<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tall_distinct<span class=\"br0\">(</span>Solution<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"sy5\">!</span><span class=\"sy4\">.</span><br/>\u00a0<br/>study<span class=\"br0\">(</span>Solution<span class=\"sy4\">,</span> Guess<span class=\"sy4\">,</span> Bulls<span class=\"sy4\">,</span> Cows<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tproposition<span class=\"br0\">(</span>LenGuess<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tdigits<span class=\"br0\">(</span>Digits<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\t<span class=\"co1\">% compute the transformation 1234 =&gt; [1,2,3,4]</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">atom_chars</span></a><span class=\"br0\">(</span>Guess<span class=\"sy4\">,</span> Chars<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tmaplist<span class=\"br0\">(</span>\\X^Y^<span class=\"br0\">(</span>atom_number<span class=\"br0\">(</span>X<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> Chars<span class=\"sy4\">,</span> Ms<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\t<span class=\"co1\">% check that the guess is well formed</span><br/>\tlength<span class=\"br0\">(</span>Ms<span class=\"sy4\">,</span> LenGuess<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tmaplist<span class=\"br0\">(</span>\\X^<span class=\"br0\">(</span>X <span class=\"sy6\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> X <span class=\"sy6\">=&lt;</span> Digits<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> Ms<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\t<span class=\"co1\">% compute the digit in good place</span><br/>\tfoldl<span class=\"br0\">(</span>\\X^Y^V0^V1^<span class=\"br0\">(</span><span class=\"br0\">(</span>X <span class=\"sy6\">=</span> Y<span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span>V1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> V0<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> V1 <span class=\"sy6\">=</span> V0<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span>Solution<span class=\"sy4\">,</span> Ms<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> Bulls<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\u00a0<br/>\t<span class=\"co1\">% compute the digits in bad place</span><br/>\tfoldl<span class=\"br0\">(</span>\\Y1^V2^V3^<span class=\"br0\">(</span>foldl<span class=\"br0\">(</span>\\X2^Z2^Z3^<span class=\"br0\">(</span>X2 <span class=\"sy6\">=</span> Y1 <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> Z3 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Z2<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">;</span> Z3 <span class=\"sy6\">=</span> Z2<span class=\"br0\">)</span><span class=\"sy4\">,</span> Ms<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> TT1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t V3 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> V2<span class=\"sy3\">+</span> TT1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t      Solution<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> TT<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tCows <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> TT <span class=\"sy3\">-</span> Bulls<span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 70, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Define</span>.s secret, guess, c<br/><span class=\"kw1\">Define</span>.i bulls, cows, guesses, i<br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">While</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>secret<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><br/>    c <span class=\"sy0\">=</span> <span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">49</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">FindString</span><span class=\"br0\">(</span>secret, c, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>      secret <span class=\"sy0\">+</span> c<br/>    <span class=\"kw1\">EndIf</span> <br/>  <span class=\"kw1\">Wend</span><br/>\u00a0<br/>  <span class=\"kw1\">Repeat</span><br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"Guess a 4-digit number with no duplicate digits: \"</span><span class=\"br0\">)</span><br/>    guess <span class=\"sy0\">=</span> <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <br/>      <span class=\"kw1\">Break</span>   <span class=\"co1\">;break from loop</span><br/>    <span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>    isMalformedGuess <span class=\"sy0\">=</span> #False<br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">4</span><br/>      <span class=\"co1\">;guess is too short</span><br/>      isMalformedGuess <span class=\"sy0\">=</span> #True <br/>    <span class=\"kw1\">Else</span><br/>      <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><br/>        c <span class=\"sy0\">=</span> <span class=\"kw2\">Mid</span><span class=\"br0\">(</span>guess, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">FindString</span><span class=\"br0\">(</span><span class=\"st0\">\"123456789\"</span>, c, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"kw2\">CountString</span><span class=\"br0\">(</span>guess, c<span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">1</span><br/>          <span class=\"co1\">;guess contains either non-digits or duplicate digits</span><br/>          isMalformedGuess <span class=\"sy0\">=</span> #True<br/>          <span class=\"kw1\">Break</span> <span class=\"co1\">;break from For/Next loop</span><br/>        <span class=\"kw1\">EndIf</span> <br/>      <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>    <span class=\"kw1\">If</span> isMalformedGuess<br/>      <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"** You should enter 4 different numeric digits that are each from 1 to 9!\"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Continue</span> <span class=\"co1\">;continue loop</span><br/>    <span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>    bulls <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: cows <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: guesses <span class=\"sy0\">=</span> guesses <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><br/>      c <span class=\"sy0\">=</span> <span class=\"kw2\">Mid</span><span class=\"br0\">(</span>secret, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">If</span> <span class=\"kw2\">Mid</span><span class=\"br0\">(</span>guess, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> c<br/>        bulls <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">ElseIf</span> <span class=\"kw2\">FindString</span><span class=\"br0\">(</span>guess, c, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        cows <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">EndIf</span> <br/>    <span class=\"kw1\">Next</span><br/>\u00a0<br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>bulls<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bull\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> bulls <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw2\">Print</span><span class=\"br0\">(</span> <span class=\"st0\">\"s\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndIf</span> <br/>    <span class=\"kw2\">Print</span><span class=\"br0\">(</span> <span class=\"st0\">\", \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>cows<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" cow\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> cows <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span> <span class=\"st0\">\"s\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Else</span><br/>      <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>    <span class=\"kw1\">If</span> guess <span class=\"sy0\">=</span> secret<br/>      <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"You won after \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>guesses<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" guesses!\"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Break</span>    <span class=\"co1\">;break from loop</span><br/>    <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ForEver</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 33, "block": "<pre class=\"python highlighted_source\"><span class=\"st0\">'''<br/> Bulls and cows. A game pre-dating, and similar to, Mastermind.<br/>'''</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">random</span><br/>\u00a0<br/>digits <span class=\"sy0\">=</span> <span class=\"st0\">'123456789'</span><br/>size <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>chosen <span class=\"sy0\">=</span> <span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw3\">random</span>.<span class=\"me1\">sample</span><span class=\"br0\">(</span>digits<span class=\"sy0\">,</span>size<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">#print chosen # Debug</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">'''I have chosen a number from\u00a0%s unique digits from 1 to 9 arranged in a random order.<br/>You need to input a\u00a0%i digit, unique digit number as a guess at what I have chosen'''</span>\u00a0% <span class=\"br0\">(</span>size<span class=\"sy0\">,</span> size<span class=\"br0\">)</span><br/>guesses <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>    guesses +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>        <span class=\"co1\"># get a good guess</span><br/>        guess <span class=\"sy0\">=</span> <span class=\"kw2\">raw_input</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>Next guess [%i]: '</span>\u00a0% guesses<span class=\"br0\">)</span>.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"sy0\">==</span> size <span class=\"kw1\">and</span> \\<br/>           <span class=\"kw2\">all</span><span class=\"br0\">(</span>char <span class=\"kw1\">in</span> digits <span class=\"kw1\">for</span> char <span class=\"kw1\">in</span> guess<span class=\"br0\">)</span> \\<br/>           <span class=\"kw1\">and</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">set</span><span class=\"br0\">(</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> size:<br/>            <span class=\"kw1\">break</span><br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"Problem, try again. You need to enter\u00a0%i unique digits from 1 to 9\"</span>\u00a0% size<br/>    <span class=\"kw1\">if</span> guess <span class=\"sy0\">==</span> chosen:<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>Congratulations you guessed correctly in'</span><span class=\"sy0\">,</span>guesses<span class=\"sy0\">,</span><span class=\"st0\">'attempts'</span><br/>        <span class=\"kw1\">break</span><br/>    bulls <span class=\"sy0\">=</span> cows <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>size<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> chosen<span class=\"br0\">[</span>i<span class=\"br0\">]</span>:<br/>            bulls +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">elif</span> guess<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">in</span> chosen:<br/>            cows +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">' \u00a0%i Bulls<span class=\"es0\">\\n</span> \u00a0%i Cows'</span>\u00a0% <span class=\"br0\">(</span>bulls<span class=\"sy0\">,</span> cows<span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 19, "block": "<pre class=\"text highlighted_source\">target &lt;- sample(1:9,4)<br/>bulls &lt;- 0<br/>cows &lt;- 0<br/>attempts &lt;- 0<br/>while (bulls\u00a0!= 4)<br/>  {<br/>  input &lt;- readline(\"Guess a 4-digit number with no duplicate digits or 0s: \")<br/>  if (nchar(input) == 4)<br/>    {<br/>    input &lt;- as.integer(strsplit(input,\"\")[[1]])<br/>    if ((sum(is.na(input)+sum(input==0))&gt;=1) | (length(table(input))\u00a0!= 4)) {print(\"Malformed input!\")} else {<br/>      bulls &lt;- sum(input == target)<br/>      cows &lt;- sum(input\u00a0%in% target)-bulls<br/>      cat(\"\\n\",bulls,\" Bull(s) and \",cows, \" Cow(s)\\n\")<br/>      attempts &lt;- attempts + 1<br/>      }<br/>    } else {print(\"Malformed input!\")}<br/>  }<br/>print(paste(\"You won in\",attempts,\"attempt(s)!\"))</pre>"}, {"lang": "Racket", "loc": 59, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>; secret\u00a0: (listof exact-nonnegative-integer?)<br/>(define secret<br/>  (foldr (\u03bb (n result) <br/>           (cons n (map (\u03bb (y) (if (&gt;= y n) (add1 y) y)) <br/>                        result)))<br/>         '()<br/>         (map random '(10 9 8 7))))<br/>\u00a0<br/>; (count-bulls/cows guess) -&gt; (values exact-nonnegative-integer? <br/>;                                     exact-nonnegative-integer?) <br/>; guess\u00a0: (listof exact-nonnegative-integer?)<br/>(define (count-bulls/cows guess)<br/>  (let* ([bulls (map = guess secret)]<br/>         [cow-candidates (filter-map (\u03bb (x y) (if (false? x) y #f))<br/>                                      bulls<br/>                                      secret)]<br/>         [cows (filter (curryr member cow-candidates) guess)])<br/>    (values (length (filter ((curry equal?) #t) bulls))<br/>            (length cows))))<br/>\u00a0<br/>; (valid-guess guess-str) -&gt; (or/c (listof exact-nonnegative-integer?) #f)<br/>; guess-str\u00a0: string?<br/>(define (valid-guess guess-str)<br/>  (define (char-&gt;digit c)<br/>    (- (char-&gt;integer c) (char-&gt;integer #\\0)))<br/>  (if (regexp-match-exact? #px\"[0-9]{4}\" guess-str)<br/>      (let ([guess (map char-&gt;digit (string-&gt;list guess-str))])<br/>        (if (andmap (\u03bb (x) (equal? (count ((curry equal?) x) guess) 1)) <br/>                    guess)<br/>            guess<br/>            #f))<br/>      #f))<br/>\u00a0<br/>; Game states<br/>(define win #t)<br/>(define game #f)      <br/>\u00a0<br/>; (main-loop state step) -&gt; void?<br/>; state\u00a0: boolean?<br/>; step \u00a0: exact-nonnegative-integer? <br/>(define (main-loop state step)<br/>  (if (equal? state win)<br/>      (printf \"You won after ~a guesses.\" step)<br/>      (begin <br/>        (let* ([guess-str (read-line)]<br/>               [guess (valid-guess guess-str)])<br/>          (if (false? guess) <br/>              (begin (displayln \"Guess should include exactly four different digits\")<br/>                     (main-loop state step))<br/>              (let-values ([(bulls cows) (count-bulls/cows guess)])<br/>                (if (= bulls 4)<br/>                    (main-loop win (add1 step))<br/>                    (begin (printf \"Bulls: ~a Cows: ~a\\n\" bulls cows)<br/>                           (main-loop state (add1 step))))))))))<br/>\u00a0<br/>(main-loop game 0)</pre>"}, {"lang": "REXX", "loc": 30, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program scores the   Bulls &amp; Cows   game with  CBLFs  (Carbon Based Life Forms). */</span><br/>?=;     <span class=\"kw1\">do</span>  <span class=\"kw2\">until</span> <span class=\"kw6\">length</span><span class=\"br0\">(</span>?<span class=\"br0\">)</span>==<span class=\"nu0\">4</span>;   r=<span class=\"kw6\">random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/*generate a unique four-digit number. */</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw6\">pos</span><span class=\"br0\">(</span>r,\u00a0?<span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>           <span class=\"coMULTI\">/*don't allow a repeated digit/numeral.*/</span><br/>       \u00a0?=? <span class=\"sy0\">||</span> r                                 <span class=\"coMULTI\">/*add random digit by concatenation.   */</span><br/>        <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*until length \u00b7\u00b7\u00b7*/</span>               <span class=\"coMULTI\">/* [\u2191]  builds a unique four-digit num.*/</span><br/>$= <span class=\"st0\">'\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 [Bulls &amp; Cows]  '</span><br/>        <span class=\"kw1\">do</span>  <span class=\"kw2\">until</span>  bulls==<span class=\"nu0\">4</span>;      <span class=\"kw1\">say</span>            <span class=\"coMULTI\">/*play until guessed  or enters \"QUIT\".*/</span><br/>        <span class=\"kw1\">say</span> $  <span class=\"st0\">'Please enter a 4-digit guess (with no zeroes)   [or Quit]:'</span><br/>        <span class=\"kw1\">pull</span> n;  n=<span class=\"kw6\">space</span><span class=\"br0\">(</span>n, <span class=\"nu0\">0</span><span class=\"br0\">)</span>;   <span class=\"kw1\">if</span> <span class=\"kw6\">abbrev</span><span class=\"br0\">(</span><span class=\"st0\">'QUIT'</span>, n, <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">exit</span>   <span class=\"coMULTI\">/*wants to quit\u00a0?*/</span><br/>        q=?;    L=<span class=\"kw6\">length</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>;  bulls=<span class=\"nu0\">0</span>;   cows=<span class=\"nu0\">0</span>  <span class=\"coMULTI\">/*initialize some REXX variables.      */</span><br/>\u00a0<br/>             <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> L;   <span class=\"kw1\">if</span> <span class=\"kw6\">substr</span><span class=\"br0\">(</span>n, j, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"kw6\">substr</span><span class=\"br0\">(</span>q, j, <span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span> <span class=\"coMULTI\">/*bull?*/</span><br/>             bulls=bulls +<span class=\"nu0\">1</span>;  q=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span><span class=\"sy0\">.</span>, q, j<span class=\"br0\">)</span>    <span class=\"coMULTI\">/*bump bull count; disallow for cow.*/</span><br/>             <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                            <span class=\"coMULTI\">/* [\u2191]  bull count\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>                                                                                 <span class=\"coMULTI\">/*cow\u00a0?*/</span><br/>             <span class=\"kw1\">do</span> k=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> L;   _=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>n, k, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;        <span class=\"kw1\">if</span> <span class=\"kw6\">pos</span><span class=\"br0\">(</span>_, q<span class=\"br0\">)</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span><br/>             cows=cows + <span class=\"nu0\">1</span>;   q=<span class=\"kw6\">translate</span><span class=\"br0\">(</span>q, , _<span class=\"br0\">)</span>   <span class=\"coMULTI\">/*bump cow count; allow mult digits.*/</span><br/>             <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span>                            <span class=\"coMULTI\">/* [\u2191]  cow  count\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500~\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>        <span class=\"kw1\">say</span>;                  @= <span class=\"st0\">'You got'</span>  bulls<br/>        <span class=\"kw1\">if</span> L<span class=\"sy0\">\\</span>==<span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> bulls<span class=\"sy0\">\\</span>==<span class=\"nu0\">4</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> $  @  <span class=\"st0\">'bull'</span>s<span class=\"br0\">(</span>bulls<span class=\"br0\">)</span>   <span class=\"st0\">\"and\"</span>   cows   <span class=\"st0\">'cow'</span>s<span class=\"br0\">(</span>cows<span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*until bulls==4*/</span><br/><span class=\"kw1\">say</span><br/>                      <span class=\"kw1\">say</span> <span class=\"st0\">\"          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\"</span><br/>                      <span class=\"kw1\">say</span> <span class=\"st0\">\"          \u2502                                         \u2502\"</span><br/>                      <span class=\"kw1\">say</span> <span class=\"st0\">\"          \u2502  Congratulations, you've guessed it\u00a0!!  \u2502\"</span><br/>                      <span class=\"kw1\">say</span> <span class=\"st0\">\"          \u2502                                         \u2502\"</span><br/>                      <span class=\"kw1\">say</span> <span class=\"st0\">\"          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\"</span>;     <span class=\"kw1\">say</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>s:  <span class=\"kw1\">if</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">''</span>;   <span class=\"kw1\">return</span> <span class=\"st0\">\"s\"</span>   <span class=\"coMULTI\">/*this function handles pluralization. */</span></pre>"}, {"lang": "Ring", "loc": 41, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Bulls and cows<br/>\u00a0<br/>secret = \"\"<br/>while len(secret)\u00a0!= 4<br/>        c = char(48 + random(9))<br/>        if substr(secret, c) = 0<br/>           secret = secret + c<br/>        ok<br/>end<br/>\u00a0<br/>see \"guess a four-digit number with no digit used twice.\"<br/>guesses = 0<br/>guess = \"\"<br/>while true<br/>        guess = \"\"<br/>        while len(guess)\u00a0!= 4<br/>                see \"enter your guess: \"<br/>                give guess<br/>                if len(guess)\u00a0!= 4<br/>                   see \"must be a four-digit number\" + nl<br/>                ok<br/>        end <br/>        guesses = guesses + 1 <br/>        if guess = secret<br/>           see \"you won after \" + guesses + \" guesses!\"<br/>           exit             <br/>        ok <br/>        bulls = 0<br/>        cows = 0<br/>        for i = 1 to 4<br/>             c = secret[i]<br/>             if guess[i] = c<br/>                bulls = bulls + 1<br/>             but substr(guess, c) &gt; 0<br/>                 cows = cows + 1<br/>             ok<br/>        next<br/>        see \"you got \" + bulls + \" bull(s) and \" + cows + \" cow(s).\" + nl<br/>end<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 41, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> generate_word<span class=\"br0\">(</span>len<span class=\"br0\">)</span><br/>  <span class=\"br0\">[</span><span class=\"sy0\">*</span><span class=\"st0\">\"1\"</span>..<span class=\"st0\">\"9\"</span><span class=\"br0\">]</span>.<span class=\"me1\">shuffle</span>.<span class=\"me1\">first</span><span class=\"br0\">(</span>len<span class=\"br0\">)</span>        <span class=\"co1\"># [*\"1\"..\"9\"].sample(len)  ver 1.9+</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> get_guess<span class=\"br0\">(</span>len<span class=\"br0\">)</span><br/>  <span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">print</span> <span class=\"st0\">\"Enter a guess: \"</span><br/>    guess = <span class=\"kw3\">gets</span>.<span class=\"me1\">strip</span><br/>    err = <span class=\"kw1\">case</span><br/>          <span class=\"kw1\">when</span> guess.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"br0\">[</span>^<span class=\"nu0\">1</span><span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">/</span><span class=\"br0\">)</span>            \u00a0; <span class=\"st0\">\"digits only\"</span><br/>          <span class=\"kw1\">when</span> guess.<span class=\"me1\">length</span>\u00a0!= len              \u00a0; <span class=\"st0\">\"exactly #{len} digits\"</span><br/>          <span class=\"kw1\">when</span> guess.<span class=\"kw3\">split</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>.<span class=\"me1\">uniq</span>.<span class=\"me1\">length</span>\u00a0!= len; <span class=\"st0\">\"digits must be unique\"</span><br/>          <span class=\"kw1\">else</span> <span class=\"kw2\">return</span> guess.<span class=\"kw3\">split</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">end</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"the word must be #{len} unique digits between 1 and 9 (#{err}). Try again.\"</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> score<span class=\"br0\">(</span>word, guess<span class=\"br0\">)</span><br/>  bulls = cows = <span class=\"nu0\">0</span><br/>  guess.<span class=\"me1\">each_with_index</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>num, idx<span class=\"sy0\">|</span><br/>    <span class=\"kw1\">if</span> word<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> == num<br/>      bulls <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">elsif</span> word.<span class=\"kw1\">include</span>? num<br/>      cows <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span> <br/>  <span class=\"br0\">[</span>bulls, cows<span class=\"br0\">]</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>word_length = <span class=\"nu0\">4</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"I have chosen a number with #{word_length} unique digits from 1 to 9.\"</span><br/>word = generate_word<span class=\"br0\">(</span>word_length<span class=\"br0\">)</span><br/>count = <span class=\"nu0\">0</span><br/><span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>  guess = get_guess<span class=\"br0\">(</span>word_length<span class=\"br0\">)</span><br/>  count <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">break</span> <span class=\"kw1\">if</span> word == guess<br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"that guess has\u00a0%d bulls and\u00a0%d cows\"</span> <span class=\"sy0\">%</span> score<span class=\"br0\">(</span>word, guess<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"you guessed correctly in #{count} tries.\"</span></pre>"}, {"lang": "Rust", "loc": 82, "block": "<pre class=\"text highlighted_source\">use std::io;<br/>use rand::{Rng,thread_rng};<br/>\u00a0<br/>extern crate rand;<br/>\u00a0<br/>const NUMBER_OF_DIGITS: usize = 4;<br/>\u00a0<br/>static DIGITS: [char; 9] = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];<br/>\u00a0<br/>fn generate_digits() -&gt; Vec&lt;char&gt; {<br/>    let mut temp_digits: Vec&lt;_&gt; = (&amp;DIGITS[..]).into();<br/>    thread_rng().shuffle(&amp;mut temp_digits);<br/>    return temp_digits.iter().take(NUMBER_OF_DIGITS).map(|&amp;a| a).collect();<br/>}<br/>\u00a0<br/>fn parse_guess_string(guess: &amp;str) -&gt; Result&lt;Vec&lt;char&gt;, String&gt; {<br/>    let chars: Vec&lt;char&gt; = (&amp;guess).chars().collect();<br/>\u00a0<br/>    if\u00a0!chars.iter().all(|c| DIGITS.contains(c)) {<br/>        return Err(\"only digits, please\".to_string());<br/>    }<br/>\u00a0<br/>    if chars.len()\u00a0!= NUMBER_OF_DIGITS {<br/>        return Err(format!(\"you need to guess with {} digits\", NUMBER_OF_DIGITS));<br/>    }<br/>\u00a0<br/>    let mut uniques: Vec&lt;char&gt; = chars.clone();<br/>    uniques.dedup();<br/>    if uniques.len()\u00a0!= chars.len() {<br/>        return Err(\"no duplicates, please\".to_string());<br/>    }<br/>\u00a0<br/>    return Ok(chars);<br/>}<br/>\u00a0<br/>fn calculate_score(given_digits: &amp;[char], guessed_digits: &amp;[char]) -&gt; (usize, usize) {<br/>    let mut bulls = 0;<br/>    let mut cows = 0;<br/>    for i in 0..NUMBER_OF_DIGITS {<br/>        let pos: Option&lt;usize&gt; = guessed_digits.iter().position(|&amp;a| -&gt; bool {a == given_digits[i]});<br/>        match pos {<br/>            None              =&gt; (),<br/>            Some(p) if p == i =&gt; bulls += 1,<br/>            Some(_)           =&gt; cows += 1<br/>        }<br/>    }<br/>    return (bulls, cows);<br/>}<br/>\u00a0<br/>fn main() {<br/>    let reader = io::stdin();<br/>\u00a0<br/>    loop {<br/>        let given_digits = generate_digits();<br/>        println!(\"I have chosen my {} digits. Please guess what they are\", NUMBER_OF_DIGITS);<br/>\u00a0<br/>        loop {<br/>            let guess_string: String = {<br/>                let mut buf = String::new();<br/>                reader.read_line(&amp;mut buf).unwrap();<br/>                buf.trim().into()<br/>            };<br/>\u00a0<br/>            let digits_maybe = parse_guess_string(&amp;guess_string);<br/>            match digits_maybe {<br/>                Err(msg) =&gt; {<br/>                    println!(\"{}\", msg);<br/>                    continue;<br/>                },<br/>                Ok(guess_digits) =&gt; {<br/>                    match calculate_score(&amp;given_digits, &amp;guess_digits) {<br/>                        (NUMBER_OF_DIGITS, _) =&gt; {<br/>                            println!(\"you win!\");<br/>                            break;<br/>                        },<br/>                        (bulls, cows) =&gt; println!(\"bulls: {}, cows: {}\", bulls, cows)<br/>                    }<br/>                }<br/>            }<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "Scala", "loc": 42, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> BullCow <span class=\"br0\">{</span><br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> number<span class=\"sy0\">=</span>chooseNumber<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> guessed<span class=\"sy0\">=</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> guesses<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>\u00a0<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a><span class=\"br0\">(</span><span class=\"sy0\">!</span>guessed<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>         Console.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Guess a 4-digit number with no duplicate digits: \"</span><span class=\"br0\">)</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> input<span class=\"sy0\">=</span>Console.<span class=\"me1\">readInt</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> digits<span class=\"sy0\">=</span>input.<span class=\"me1\">toString</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">asDigit</span><span class=\"br0\">)</span>.<span class=\"me1\">toList</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>input<span class=\"sy0\">&gt;=</span><span class=\"nu0\">1111</span> <span class=\"sy0\">&amp;&amp;</span> input<span class=\"sy0\">&lt;=</span><span class=\"nu0\">9999</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>hasDups<span class=\"br0\">(</span>digits<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            guesses+<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> bulls, cows<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a><span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> to <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>               <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>number<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">==</span>digits<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                  bulls+<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>               <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>number.<span class=\"me1\">contains</span><span class=\"br0\">(</span>digits<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                  cows+<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>bulls<span class=\"sy0\">==</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>               guessed<span class=\"sy0\">=</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>               println<span class=\"br0\">(</span><span class=\"st0\">\"%d Cows and\u00a0%d Bulls.\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>cows, bulls<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>      println<span class=\"br0\">(</span><span class=\"st0\">\"You won after \"</span>+guesses+<span class=\"st0\">\" guesses!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/>\u00a0<br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> chooseNumber<span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> digits<span class=\"sy0\">=</span>List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a><span class=\"br0\">(</span>digits.<span class=\"me1\">size</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d<span class=\"sy0\">=</span>Random.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>+<span class=\"nu0\">1</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>digits.<span class=\"me1\">contains</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            digits<span class=\"sy0\">=</span>digits<span class=\"sy0\">:</span>+d<br/>      <span class=\"br0\">}</span><br/>      digits<br/>   <span class=\"br0\">}</span><br/>\u00a0<br/>   <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> hasDups<span class=\"br0\">(</span>input<span class=\"sy0\">:</span>List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>input.<span class=\"me1\">size</span><span class=\"sy0\">!=</span>input.<span class=\"me1\">distinct</span>.<span class=\"me1\">size</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 68, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"co1\">;generate a random non-repeating list of 4 digits, 1-9 inclusive</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>num<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>gen lst<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> lst<span class=\"br0\">)</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> lst<br/>        <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>digit <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>random <span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">member</span> digit lst<span class=\"br0\">)</span> <span class=\"co1\">;make sure the new digit isn't in the</span><br/>                                 <span class=\"co1\">;list</span><br/>              <span class=\"br0\">(</span>gen lst<span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span>gen <span class=\"br0\">(</span><span class=\"kw1\">cons</span> digit lst<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>apply <span class=\"kw1\">string-append</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>gen '<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;is g a valid guess (that is, non-repeating, four digits 1-9</span><br/><span class=\"co1\">;inclusive?)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>valid<span class=\"sy0\">-</span>guess? g<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>g<span class=\"sy0\">-</span>num <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span>number <span class=\"br0\">(</span>apply <span class=\"kw1\">string</span> g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">;does the same digit appear twice in lst?</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>repeats? lst<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> lst<span class=\"br0\">)</span> #f<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> lst<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> lst<span class=\"br0\">)</span><span class=\"br0\">)</span> #t<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span>repeats? <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> lst<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">and</span> g<span class=\"sy0\">-</span>num<br/>         <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> g<span class=\"sy0\">-</span>num <span class=\"nu0\">1233</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> g<span class=\"sy0\">-</span>num <span class=\"nu0\">9877</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>repeats? g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;return '(cows bulls) for the given guess</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>score answer guess<span class=\"br0\">)</span><br/>  <span class=\"co1\">;total cows + bulls</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>cows<span class=\"sy0\">&amp;</span>bulls a g<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> a<span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> g<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span>cows<span class=\"sy0\">&amp;</span>bulls <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span> g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span>cows<span class=\"sy0\">&amp;</span>bulls <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span> g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;bulls only</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>bulls a g<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> a<span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal?</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> g<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span>bulls <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"br0\">(</span>bulls <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span>cows<span class=\"sy0\">&amp;</span>bulls answer guess<span class=\"br0\">)</span> <span class=\"br0\">(</span>bulls answer guess<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>bulls answer guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;play the game</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>bull<span class=\"sy0\">-</span>cow answer<span class=\"br0\">)</span><br/>  <span class=\"co1\">;get the user's guess as a list</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>guess<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">e</span> <span class=\"br0\">(</span><span class=\"kw1\">read</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">number?</span> <span class=\"kw1\">e</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"kw1\">e</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>symbol<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"kw1\">e</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"Enter a guess: \"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>guess <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>valid<span class=\"sy0\">-</span>guess? guess<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>bulls <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> <span class=\"br0\">(</span>score answer guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span>cows <span class=\"br0\">(</span><span class=\"kw1\">car</span> <span class=\"br0\">(</span>score answer guess<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> bulls <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"You win!<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">begin</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">display</span> bulls<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\" bulls, \"</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">display</span> cows<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\" cows.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span>bull<span class=\"sy0\">-</span>cow answer<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">begin</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"Invalid guess.<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>bull<span class=\"sy0\">-</span>cow answer<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>bull<span class=\"sy0\">-</span>cow <span class=\"br0\">(</span>get<span class=\"sy0\">-</span>num<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 49, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    const integer: size is 4;<br/>    var set of char: digits is {'1' .. '9'};<br/>    var string: chosen is \" \" mult size;<br/>    var integer: guesses is 0;<br/>    var string: guess is \"\";<br/>    var integer: pos is 0;<br/>    var integer: bulls is 0;<br/>    var integer: cows is 0;<br/>    var boolean: okay is FALSE;<br/>  begin<br/>    for pos range 1 to 4 do<br/>      chosen @:= [pos] rand(digits);<br/>      excl(digits, chosen[pos]);<br/>    end for;<br/>    writeln(\"I have chosen a number from \" &lt;&amp; size &lt;&amp; \" unique digits from 1 to 9 arranged in a random order.\");<br/>    writeln(\"You need to input a \" &lt;&amp; size &lt;&amp; \" digit, unique digit number as a guess at what I have chosen\");<br/>    repeat<br/>      incr(guesses);<br/>      repeat<br/>        write(\"Next guess [\" &lt;&amp; guesses &lt;&amp; \"]: \");<br/>        readln(guess);<br/>        okay\u00a0:= length(guess) = size;<br/>        for key pos range guess do<br/>          okay\u00a0:= okay and guess[pos] in {'1' .. '9'} and pos(guess[succ(pos) ..], guess[pos]) = 0;<br/>        end for;<br/>        if not okay then<br/>          writeln(\"Problem, try again. You need to enter \" &lt;&amp; size &lt;&amp; \" unique digits from 1 to 9\");<br/>        end if;<br/>      until okay;<br/>      if guess &lt;&gt; chosen then<br/>        bulls\u00a0:= 0;<br/>        cows\u00a0:= 0;<br/>        for key pos range chosen do<br/>          if guess[pos] = chosen[pos] then<br/>            incr(bulls);<br/>          elsif pos(chosen, guess[pos]) &lt;&gt; 0 then<br/>            incr(cows);<br/>          end if;<br/>        end for;<br/>        writeln(\"  \" &lt;&amp; bulls &lt;&amp; \" Bulls\");<br/>        writeln(\"  \" &lt;&amp; cows &lt;&amp; \" Cows\");<br/>      end if;<br/>    until guess = chosen;<br/>    writeln(\"Congratulations you guessed correctly in \" &lt;&amp; guesses &lt;&amp; \" attempts\");<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 36, "block": "<pre class=\"ruby highlighted_source\">var size = <span class=\"nu0\">4</span><br/>var num = @<span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">9</span><span class=\"br0\">)</span>.<span class=\"me1\">shuffle</span>.<span class=\"me1\">first</span><span class=\"br0\">(</span>size<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span>var guesses = <span class=\"nu0\">1</span>; <span class=\"kw2\">true</span>; guesses<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    var bulls = <span class=\"nu0\">0</span><br/>    var cows  = <span class=\"nu0\">0</span><br/>\u00a0<br/>    var input =<br/>        read<span class=\"br0\">(</span><span class=\"st0\">\"Input: \"</span>, <span class=\"kw3\">String</span><span class=\"br0\">)</span>.<span class=\"me1\">chars</span>           \\<br/>                               .<span class=\"me1\">uniq</span>            \\<br/>                               .<span class=\"me1\">grep</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"br0\">]</span>$<span class=\"sy0\">/</span><span class=\"br0\">)</span> \\<br/>                               .<span class=\"me1\">map</span><span class=\"br0\">{</span>.<span class=\"me1\">to_n</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>input.<span class=\"me1\">len</span>\u00a0!= size<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        warn <span class=\"st0\">\"Invalid input!<span class=\"es0\">\\n</span>\"</span><br/>        guesses<span class=\"sy0\">--</span><br/>        <span class=\"kw1\">next</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>input == num<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"You did it in\u00a0%d attempts!<span class=\"es0\">\\n</span>\"</span>, guesses<span class=\"br0\">)</span><br/>        <span class=\"kw1\">break</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"br0\">(</span>^num<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>num<span class=\"br0\">[</span>i<span class=\"br0\">]</span> == input<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            bulls<span class=\"sy0\">++</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span>num.<span class=\"me1\">contains</span><span class=\"br0\">(</span>input<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            cows<span class=\"sy0\">++</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"st0\">\"Bulls:\u00a0%d; Cows:\u00a0%d<span class=\"es0\">\\n</span>\"</span>.<span class=\"kw3\">printf</span><span class=\"br0\">(</span>bulls, cows<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Smalltalk", "loc": 58, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">Object</span> subclass: <span class=\"re0\">BullsCows</span> <span class=\"br0\">[</span><br/>  |<span class=\"re3\">number</span>|<br/>  <span class=\"re0\">BullsCows</span> class &gt;&gt; new: <span class=\"re5\">secretNum</span> <span class=\"br0\">[</span> |<span class=\"re3\">i</span>|<br/>    <span class=\"re6\">i</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">self</span> basicNew.<br/>    <span class=\"br0\">(</span><span class=\"kw1\">self</span> isValid: <span class=\"re5\">secretNum</span><span class=\"br0\">)</span><br/>       ifFalse: <span class=\"br0\">[</span> <span class=\"re0\">SystemExceptions</span>.<span class=\"re0\">InvalidArgument</span><br/>                    signalOn: <span class=\"re5\">secretNum</span><br/>                    reason: <span class=\"st0\">'You need 4 unique digits from 1 to 9'</span> <span class=\"br0\">]</span>.<br/>    <span class=\"re5\">i</span> setNumber: <span class=\"re5\">secretNum</span>.<br/>    ^ i<br/>  <span class=\"br0\">]</span><br/>  <span class=\"re0\">BullsCows</span> class &gt;&gt; new <span class=\"br0\">[</span> |<span class=\"re3\">b</span>| <span class=\"re6\">b</span> <span class=\"sy0\">:=</span> <span class=\"re0\">Set</span> new.<br/>     <span class=\"br0\">[</span> <span class=\"re5\">b</span> size &lt; <span class=\"nu0\">4</span> <span class=\"br0\">]</span><br/>       whileTrue: <span class=\"br0\">[</span> <span class=\"re5\">b</span> add: <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">Random</span> between: <span class=\"re5\">1</span> and: <span class=\"re5\">9</span><span class=\"br0\">)</span> displayString first<span class=\"br0\">)</span> <span class=\"br0\">]</span>.<br/>     ^ <span class=\"kw1\">self</span> new: <span class=\"br0\">(</span><span class=\"re5\">b</span> asString<span class=\"br0\">)</span><br/>  <span class=\"br0\">]</span><br/>  <span class=\"re0\">BullsCows</span> class &gt;&gt; isValid: <span class=\"re5\">num</span> <span class=\"br0\">[</span><br/>    ^ <span class=\"br0\">(</span><span class=\"re5\">num</span> asSet size <span class=\"sy0\">=</span> <span class=\"re5\">4</span><span class=\"br0\">)</span> &amp; <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re5\">num</span> asSet includes: $0<span class=\"br0\">)</span> not<span class=\"br0\">)</span><br/>  <span class=\"br0\">]</span><br/>  setNumber: <span class=\"re5\">num</span> <span class=\"br0\">[</span> <span class=\"re5\">number</span> <span class=\"sy0\">:=</span> <span class=\"re5\">num</span> <span class=\"br0\">]</span><br/>  check: <span class=\"re5\">guess</span> <span class=\"br0\">[</span> |<span class=\"re3\">bc</span>| <span class=\"re6\">bc</span> <span class=\"sy0\">:=</span> <span class=\"re0\">Bag</span> new.<br/>     <span class=\"re5\">1</span> to: <span class=\"re5\">4</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">i</span> |<br/>       <span class=\"br0\">(</span><span class=\"re5\">number</span> at: <span class=\"re5\">i</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re5\">guess</span> at: <span class=\"re5\">i</span><span class=\"br0\">)</span><br/>         ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">bc</span> add: <span class=\"st0\">'bulls'</span> <span class=\"br0\">]</span><br/>         ifFalse: <span class=\"br0\">[</span><br/>             <span class=\"br0\">(</span><span class=\"re5\">number</span> includes: <span class=\"br0\">(</span><span class=\"re5\">guess</span> at: <span class=\"re5\">i</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               ifTrue: <span class=\"br0\">[</span> <span class=\"re5\">bc</span> add: <span class=\"st0\">'cows'</span> <span class=\"br0\">]</span><br/>         <span class=\"br0\">]</span><br/>     <span class=\"br0\">]</span>.<br/>     ^ bc<br/>  <span class=\"br0\">]</span><br/><span class=\"br0\">]</span>.<br/>\u00a0<br/><span class=\"st0\">'Guess the 4-digits number (digits from 1 to 9, no repetition)'</span> displayNl.<br/>\u00a0<br/>|<span class=\"re3\">guessMe d r tries</span>|<br/><span class=\"br0\">[</span><br/>  <span class=\"re5\">tries</span> <span class=\"sy0\">:=</span> <span class=\"re5\">0</span>.<br/>  <span class=\"re5\">guessMe</span> <span class=\"sy0\">:=</span> <span class=\"re0\">BullsCows</span> new.<br/>  <span class=\"br0\">[</span><br/>    <span class=\"br0\">[</span><br/>      <span class=\"st0\">'Write 4 digits: '</span> display.<br/>      <span class=\"re5\">d</span> <span class=\"sy0\">:=</span> <span class=\"re5\">stdin</span> nextLine.<br/>      <span class=\"br0\">(</span><span class=\"re0\">BullsCows</span> isValid: <span class=\"re5\">d</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">]</span> whileFalse: <span class=\"br0\">[</span><br/>         <span class=\"st0\">'Insert 4 digits, no repetition, exclude the digit 0'</span> displayNl<br/>    <span class=\"br0\">]</span>.<br/>    <span class=\"re5\">r</span> <span class=\"sy0\">:=</span> <span class=\"re5\">guessMe</span> check: <span class=\"re5\">d</span>.<br/>    <span class=\"re5\">tries</span> <span class=\"sy0\">:=</span> <span class=\"re5\">tries</span> + <span class=\"re5\">1</span>.<br/>    <span class=\"br0\">(</span><span class=\"re5\">r</span> occurrencesOf: <span class=\"st0\">'bulls'</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re5\">4</span><br/>  <span class=\"br0\">]</span> whileFalse: <span class=\"br0\">[</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">'%1 cows,\u00a0%2 bulls'</span>\u00a0% <span class=\"br0\">{</span> r occurrencesOf: <span class=\"st0\">'cows'</span>. <span class=\"re5\">r</span> occurrencesOf: <span class=\"st0\">'bulls'</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>      displayNl.<br/>  <span class=\"br0\">]</span>.<br/>  <span class=\"br0\">(</span><span class=\"st0\">'Good, you guessed it in\u00a0%1 tries!'</span>\u00a0% <span class=\"br0\">{</span> tries <span class=\"br0\">}</span><span class=\"br0\">)</span> displayNl.<br/>  <span class=\"st0\">'Do you want to play again? [y/n]'</span> display.<br/>  <span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"re5\">stdin</span> nextLine<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">'y'</span> <span class=\"br0\">)</span><br/><span class=\"br0\">]</span> whileTrue: <span class=\"br0\">[</span> <span class=\"re0\">Character</span> nl displayNl <span class=\"br0\">]</span>.</pre>"}, {"lang": "Smart BASIC", "loc": 89, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>'by rbytes, January 2017<br/>OPTION BASE 1<br/>P(\"  B U L L S   A N D    C O W S\")!l<br/>P(\"A secret 4-digit number has been created, with\")<br/>P(\"no repeats and no zeros. You must guess the number.\")<br/>P(\"After each guess, you will be shown how many of your\")<br/>P(\"digits are correct and in the matching location (bulls),\")<br/>P(\"and how many are correct but in a different location (cows).\")<br/>p(\"See how many tries it takes you to get the right answer.\")<br/>' generate a 4-digit number with no repeats<br/>guesses  =   0<br/>1 WHILE LEN(sec$) &lt;4<br/>  c$ =CHR$( INTEG(RND(1) *9) +49)<br/>  IF INSTR(sec$, c$)=-1 THEN sec$&amp;=c$<br/>ENDWHILE!l<br/>2 PRINT \"Your guess: \"<br/>INPUT \"FOUR DIGITS\": guess$!l<br/>IF guess$=\"\" THEN       ' check if entry is null<br/>  P(\"Please enter something!\")!l<br/>  GOTO 2<br/>ENDIF<br/>P(guess$)!l<br/>IF LEN(guess$)&lt;&gt;4 THEN  ' check if entry is exactly 4 characters<br/>  P(\"Please enter exactly 4 digits.\")!l<br/>  GOTO 2<br/>ENDIF<br/>FOR t=1 TO 4            ' check if all characters are digits 1 - 9<br/>  IF INSTR(\"123456789\",MID$(guess$,t,1))=-1 THEN<br/>    P(\"You have entered at least one illegal character\")!l<br/>    GOTO 2<br/>  ENDIF<br/>NEXT t<br/>rep = check(guess$)     ' check if any digits are repeated<br/>IF check.chk THEN<br/>  P(\"Please enter a number with no repeated digits.\")!l<br/>  GOTO 2<br/>ENDIF<br/>\u00a0<br/>guesses+=1<br/>r$=score$(guess$,sec$)<br/>P(r$)!l<br/>\u00a0<br/>IF guess$=sec$ THEN<br/>  P(\"W I N N E R\u00a0!\u00a0!\u00a0!\")!l<br/>  IF guesses&gt;1 THEN gs$=\"guesses!\" ELSE gs$=\"guess!\"<br/>  P(\"You won after \"&amp;guesses&amp;\" \"&amp;gs$)<br/>  P(\"Thanks for playing!\")!l<br/>  PAUSE 2<br/>  P(\"A G A I N  with a new secret number\")!l<br/>  guesses=0<br/>END IF<br/>GOTO 1<br/>END '   _____________________________________________________________<br/>\u00a0<br/>DEF P(p$)              ' function to print a string<br/>  PRINT p$<br/>END DEF<br/>\u00a0<br/>DEF L()                ' function to print an empty line<br/>  PRINT<br/>END DEF<br/>\u00a0<br/>DEF check(i$)          ' check=0 if digit is not repeated, else=1<br/>  chk=0<br/>  FOR i =1 TO 3<br/>    FOR j =i +1 TO 4<br/>      IF MID$( i$, i, 1)=MID$( i$, j, 1) THEN chk =1<br/>    NEXT j<br/>  NEXT i<br/>END DEF<br/>\u00a0<br/>DEF score$(a$,b$)      ' calculate the numbers of bulls &amp; cows.<br/>  bulls=0!cows=0<br/>  FOR i = 1 TO 4<br/>    c$ = MID$( a$, i, 1)<br/>    IF MID$( b$, i, 1)=c$ THEN<br/>      bulls+=1<br/>    ELSE<br/>      IF INSTR( b$, c$) &lt;&gt;-1 AND INSTR( b$, c$) &lt;&gt;i THEN<br/>        cows+=1<br/>      END IF<br/>    END IF<br/>  NEXT i<br/>  r$ =\"Bulls: \"&amp;STR$( bulls)&amp; \", \"&amp; \"Cows: \" &amp;STR$( cows)<br/>  RETURN r$<br/>END DEF<br/>END<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 85, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> main <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">fconfigure</span> stdout -buffering none<br/>    <span class=\"kw1\">set</span> length <span class=\"nu0\">4</span><br/>\u00a0<br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"I have chosen a number from $length unique digits from 1 to 9 arranged in a random order.<br/>You need to input a $length digit, unique digit number as a guess at what I have chosen<br/>    \"</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> true <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> word <span class=\"br0\">[</span>generateWord <span class=\"re0\">$length</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> count <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">set</span> guess <span class=\"br0\">[</span>getGuess <span class=\"re0\">$length</span><span class=\"br0\">]</span><span class=\"br0\">]</span> ne <span class=\"re0\">$word</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            printScore <span class=\"re0\">$length</span> <span class=\"re0\">$word</span> <span class=\"re0\">$guess</span><br/>            <span class=\"kw2\">incr</span> count<br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw2\">puts</span> <span class=\"st0\">\"You guessed correctly in $count tries.\"</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>yn <span class=\"st0\">\"Play again?\"</span><span class=\"br0\">]</span> eq <span class=\"st0\">\"n\"</span><span class=\"br0\">}</span> <span class=\"kw1\">break</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> generateWord <span class=\"br0\">{</span>length<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> chars <span class=\"nu0\">123456789</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$length</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> idx <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> length <span class=\"re0\">$chars</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>        <span class=\"kw2\">append</span> word <span class=\"br0\">[</span><span class=\"kw2\">string</span> index <span class=\"re0\">$chars</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> chars <span class=\"br0\">[</span><span class=\"kw2\">string</span> replace <span class=\"re0\">$chars</span> <span class=\"re0\">$idx</span> <span class=\"re0\">$idx</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$word</span><br/>\u00a0<br/>    <span class=\"co1\"># here's another way to generate word with no duplications</span><br/>    <span class=\"kw1\">set</span> word <span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> length <span class=\"re0\">$word</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$length</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> char <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span><span class=\"nu0\">1</span> + <span class=\"nu0\">9</span><span class=\"sy0\">*</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> first <span class=\"re0\">$char</span> <span class=\"re0\">$word</span><span class=\"br0\">]</span> == -<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">append</span> word <span class=\"re0\">$char</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> getGuess <span class=\"br0\">{</span>length<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"Enter your guess: \"</span><br/>    <span class=\"kw1\">while</span> true <span class=\"br0\">{</span><br/>        <span class=\"kw2\">gets</span> stdin guess<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> match <span class=\"br0\">[</span><span class=\"kw2\">string</span> repeat <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>-<span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"re0\">$length</span><span class=\"br0\">]</span> <span class=\"re0\">$guess</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"re0\">$guess</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> tolower <span class=\"br0\">[</span><span class=\"kw2\">string</span> trim <span class=\"re0\">$guess</span><span class=\"br0\">]</span><span class=\"br0\">]</span> eq <span class=\"st0\">\"quit\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">puts</span> Bye<br/>            <span class=\"kw1\">exit</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw2\">puts</span> <span class=\"st0\">\"The word must be $length digits between 1 and 9 inclusive.  Try again.\"</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> printScore <span class=\"br0\">{</span>length word guess<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> bulls <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> cows <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$length</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> index <span class=\"re0\">$word</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span> eq <span class=\"br0\">[</span><span class=\"kw2\">string</span> index <span class=\"re0\">$guess</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">incr</span> bulls<br/>            <span class=\"kw1\">set</span> word <span class=\"br0\">[</span><span class=\"kw2\">string</span> replace <span class=\"re0\">$word</span> <span class=\"re0\">$i</span> <span class=\"re0\">$i</span> +<span class=\"br0\">]</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"  $bulls bulls\"</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$length</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">set</span> j <span class=\"br0\">[</span><span class=\"kw2\">string</span> first <span class=\"br0\">[</span><span class=\"kw2\">string</span> index <span class=\"re0\">$guess</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"re0\">$word</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">!</span>= -<span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">incr</span> cows<br/>            <span class=\"kw1\">set</span> word <span class=\"br0\">[</span><span class=\"kw2\">string</span> replace <span class=\"re0\">$word</span> <span class=\"re0\">$j</span> <span class=\"re0\">$j</span> -<span class=\"br0\">]</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"  $cows cows\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> yn <span class=\"br0\">{</span>msg<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> true <span class=\"br0\">{</span><br/>        <span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"$msg <span class=\"es0\">\\[</span>y/n] \"</span><br/>        <span class=\"kw2\">gets</span> stdin ans<br/>        <span class=\"kw1\">set</span> char <span class=\"br0\">[</span><span class=\"kw2\">string</span> tolower <span class=\"br0\">[</span><span class=\"kw2\">string</span> index <span class=\"br0\">[</span><span class=\"kw2\">string</span> trim <span class=\"re0\">$ans</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$char</span> eq <span class=\"st0\">\"y\"</span> || <span class=\"re0\">$char</span> eq <span class=\"st0\">\"n\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"re0\">$char</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>main</pre>"}, {"lang": "TUSCRIPT", "loc": 40, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE tuscript<br/>SET nr1=RANDOM_NUMBERS (1,9,1)<br/>LOOP<br/>  SET nr2=RANDOM_NUMBERS (1,9,1)<br/>  IF (nr2!=nr1) EXIT<br/>ENDLOOP<br/>LOOP<br/>  SET nr3=RANDOM_NUMBERS (1,9,1)<br/>  IF (nr3!=nr1,nr2) EXIT<br/>ENDLOOP<br/>LOOP<br/>  SET nr4=RANDOM_NUMBERS (1,9,1)<br/>  IF (nr4!=nr1,nr2,nr3) EXIT<br/>ENDLOOP<br/>SET nr=JOIN(nr1,\"'\",nr2,nr3,nr4), limit=10<br/>LOOP r=1,limit<br/>SET bulls=cows=0<br/>ASK \"round {r} insert a number\":guessnr=\"\"<br/>SET length=LENGTH(guessnr), checknr=STRINGS (guessnr,\":&gt;/:\")<br/> LOOP n=nr,y=checknr<br/>  IF (length!=4) THEN<br/>   PRINT \"4-letter digit required\"<br/>   EXIT<br/>  ELSEIF (n==y) THEN<br/>   SET bulls=bulls+1<br/>  ELSEIF (nr.ct.\":{y}:\") THEN<br/>   SET cows=cows+1<br/>  ENDIF<br/> ENDLOOP<br/>PRINT \"bulls=\",bulls,\" cows=\",cows<br/> IF (bulls==4) THEN<br/>  PRINT \"BINGO\"<br/>  EXIT<br/> ELSEIF (r==limit) THEN<br/>  PRINT \"BETTER NEXT TIME\"<br/>  EXIT<br/> ENDIF<br/>ENDLOOP<br/>\u00a0</pre>"}, {"lang": "uBasic/4tH", "loc": 78, "block": "<pre class=\"text highlighted_source\">Local(2)                               ' Let's use no globals<br/>\u00a0<br/>Proc _Initialize                       ' Get our secret number<br/>\u00a0<br/>Do                                     ' Repeat until it's guessed<br/>  Do<br/>    Input \"Enter your guess: \";<a class=\"__cf_email__\" data-cfemail=\"086948\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>      ' Enter your guess<br/>    While FUNC(_Invalid(<a class=\"__cf_email__\" data-cfemail=\"660726\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>))           ' but make sure it's a valid guess<br/>  Loop<br/>\u00a0<br/>  <a class=\"__cf_email__\" data-cfemail=\"b9d8f9\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = FUNC(_Bulls)                    ' Count the number of bulls<br/>  <a class=\"__cf_email__\" data-cfemail=\"6a082a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = FUNC(_Cows)                     ' Count the number of cows<br/>                                       ' Now give some feedback<br/>  Print\u00a0: Print \"\\tThere were \";<a class=\"__cf_email__\" data-cfemail=\"e283a2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>;\" bulls and \";<a class=\"__cf_email__\" data-cfemail=\"a1c3e1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>;\" cows.\"\u00a0: Print<br/>  Until <a class=\"__cf_email__\" data-cfemail=\"9dfcdd\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 4                         ' Until the secret is guessed<br/>Loop<br/>\u00a0<br/>Print \"You win!\"                       ' Yes, you guessed it<br/>\u00a0<br/>End<br/>\u00a0<br/>\u00a0<br/>_Initialize                            ' Make a secret<br/>  Local (1)<br/>\u00a0<br/>  Do<br/>    <a class=\"__cf_email__\" data-cfemail=\"482908\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 1234 + RND(8643)              ' Get a valid number<br/>    While FUNC(_Invalid(<a class=\"__cf_email__\" data-cfemail=\"046544\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>))           ' and accept it unless invalid<br/>  Loop<br/>\u00a0<br/>  For <a class=\"__cf_email__\" data-cfemail=\"d9b899\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 to 3                      ' Now save it at the proper place<br/>    @(<a class=\"__cf_email__\" data-cfemail=\"a8c9e8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+4) = @(<a class=\"__cf_email__\" data-cfemail=\"086948\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>)<br/>  Next<br/>Return<br/>\u00a0<br/>\u00a0<br/>_Invalid Param(1)                      ' Check whether a number is valid<br/>  Local(2)<br/>                                       ' Ok, these can't be right at all<br/>  If (<a class=\"__cf_email__\" data-cfemail=\"90f1d0\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> &lt; 1234) + (<a class=\"__cf_email__\" data-cfemail=\"6e0f2e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> &gt; 9876) Then Return (1)<br/>                                       ' Now break 'em up in different digits<br/>  For <a class=\"__cf_email__\" data-cfemail=\"b8daf8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 3 To 0 Step -1<br/>    @(<a class=\"__cf_email__\" data-cfemail=\"f290b2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = <a class=\"__cf_email__\" data-cfemail=\"1a7b5a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0% 10                    ' A digit of zero can't be right<br/>    If @(<a class=\"__cf_email__\" data-cfemail=\"2c4e6c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = 0 Then Unloop\u00a0: Return (1)<br/>    <a class=\"__cf_email__\" data-cfemail=\"bbdafb\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = <a class=\"__cf_email__\" data-cfemail=\"b3d2f3\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> / 10<br/>  Next<br/>\u00a0<br/>  For <a class=\"__cf_email__\" data-cfemail=\"395b79\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 To 2                      ' Now compare all digits<br/>    For <a class=\"__cf_email__\" data-cfemail=\"c4a784\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = <a class=\"__cf_email__\" data-cfemail=\"0d6f4d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> + 1 To 3               ' The others were already compared<br/>      If @(<a class=\"__cf_email__\" data-cfemail=\"c0a280\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = @(<a class=\"__cf_email__\" data-cfemail=\"6b082b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) Then Unloop\u00a0: Unloop\u00a0: Return (1)<br/>    Next                               ' Wrong, we found similar digits<br/>  Next<br/>Return (0)                             ' All digits are different<br/>\u00a0<br/>\u00a0<br/>_Bulls                                 ' Count the number of valid guesses<br/>  Local (2)<br/>\u00a0<br/>  <a class=\"__cf_email__\" data-cfemail=\"ceac8e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0                               ' Start with zero<br/>\u00a0<br/>  For <a class=\"__cf_email__\" data-cfemail=\"741534\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 to 3                      ' Increment with each valid guess<br/>    If @(<a class=\"__cf_email__\" data-cfemail=\"81e0c1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = @(<a class=\"__cf_email__\" data-cfemail=\"3a5b7a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+4) Then <a class=\"__cf_email__\" data-cfemail=\"086a48\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = <a class=\"__cf_email__\" data-cfemail=\"98fad8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> + 1<br/>  Next<br/>Return (<a class=\"__cf_email__\" data-cfemail=\"422002\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>)                            ' Return number of valid guesses<br/>\u00a0<br/>\u00a0<br/>_Cows<br/>  Local (3)                            ' Count the number of proper digits<br/>\u00a0<br/>  <a class=\"__cf_email__\" data-cfemail=\"6e0d2e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0                               ' Start with zero<br/>\u00a0<br/>  For <a class=\"__cf_email__\" data-cfemail=\"523312\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 0 To 3                      ' All the players guesses<br/>    For <a class=\"__cf_email__\" data-cfemail=\"acceec\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = 4 To 7                    ' All the computers secrets<br/>      If (<a class=\"__cf_email__\" data-cfemail=\"503110\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+4) = <a class=\"__cf_email__\" data-cfemail=\"f391b3\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> Then Continue     ' Skip the bulls<br/>      If @(<a class=\"__cf_email__\" data-cfemail=\"4a2b0a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) = @(<a class=\"__cf_email__\" data-cfemail=\"98fad8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>) Then <a class=\"__cf_email__\" data-cfemail=\"f794b7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> = <a class=\"__cf_email__\" data-cfemail=\"234063\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> + 1<br/>    Next                               ' Increment with valid digits<br/>  Next<br/>Return (<a class=\"__cf_email__\" data-cfemail=\"402300\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>)                            ' Return number of valid digits</pre>"}, {"lang": "UNIX Shell", "loc": 150, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/bash</span><br/>\u00a0<br/>rand<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">min</span>=<span class=\"co1\">${1:-0}</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">max</span>=<span class=\"co1\">${2:-32767}</span><br/>\u00a0<br/>  <span class=\"br0\">[</span> <span class=\"co1\">${min}</span> <span class=\"re5\">-gt</span> <span class=\"co1\">${max}</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span><br/>  <span class=\"re2\">min</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> min ^ max <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span><br/>  <span class=\"re2\">max</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> min ^ max <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span><br/>  <span class=\"re2\">min</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> min ^ max <span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> $<span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"re1\">$RANDOM</span> <span class=\"sy0\">%</span> <span class=\"re1\">$max</span> <span class=\"br0\">)</span> + <span class=\"re1\">$min</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>in_arr<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">quandry</span>=<span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span><br/>  <span class=\"kw3\">shift</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">arr</span>=<span class=\"br0\">(</span> $<span class=\"sy0\">@</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">i</span>=<span class=\"st_h\">''</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"co1\">${arr[*]}</span><br/>  <span class=\"kw1\">do</span><br/>    <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${quandry}</span>\"</span> == <span class=\"st0\">\"<span class=\"es3\">${i}</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">return</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">break</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">return</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>delete_at<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">idx</span>=<span class=\"st0\">\"<span class=\"es4\">$(( $1 + 1 )</span>)\"</span><br/>  <span class=\"kw3\">shift</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">arr</span>=<span class=\"br0\">(</span> <span class=\"st0\">\"sentinel\"</span> $<span class=\"sy0\">@</span> <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"<span class=\"es3\">${arr[@]:1:$(( idx - 1 ))}</span> <span class=\"es3\">${arr[@]:$((idx + 1)):$(( ${#arr[@]}</span> - idx - 1))}\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>delete_first<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">meanie</span>=<span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span><br/>  <span class=\"kw3\">shift</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">arr</span>=<span class=\"br0\">(</span> $<span class=\"sy0\">@</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">i</span>=<span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> i = <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> <span class=\"co1\">${#arr[@]}</span>\u00a0; i++ <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">do</span><br/>    <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${arr[${i}</span>]}\"</span> == <span class=\"st0\">\"<span class=\"es3\">${meanie}</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re2\">arr</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> delete_at <span class=\"co1\">${i}</span> <span class=\"co1\">${arr[*]}</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"<span class=\"es3\">${arr[*]}</span>\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>to_arr<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">string</span>=<span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">arr</span>=<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">while</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${#string}</span>\"</span> <span class=\"re5\">-gt</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span><br/>  <span class=\"kw1\">do</span><br/>    <span class=\"re2\">arr</span>=<span class=\"br0\">(</span> <span class=\"co1\">${arr[*]}</span> <span class=\"co1\">${string:0:1}</span> <span class=\"br0\">)</span><br/>    <span class=\"re2\">string</span>=<span class=\"st0\">\"<span class=\"es3\">${string:1}</span>\"</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"<span class=\"es3\">${arr[*]}</span>\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>choose_idx<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">arr</span>=<span class=\"br0\">(</span> $<span class=\"sy0\">@</span> <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"<span class=\"es4\">$( rand 0 $(( ${#arr[@]} - 1 )</span>) )\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>locate_bulls<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">secret</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> to_arr <span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">guess</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> to_arr <span class=\"st0\">\"<span class=\"es3\">${2}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">hits</span>=<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">i</span>=<span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"re2\">i</span>=<span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span>; i++ <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">do</span><br/>    <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${secret[${i}</span>]}\"</span> <span class=\"re5\">-eq</span> <span class=\"st0\">\"<span class=\"es3\">${guess[${i}</span>]}\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re2\">hits</span>=<span class=\"br0\">(</span> <span class=\"co1\">${hits[*]}</span> <span class=\"co1\">${i}</span> <span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"<span class=\"es3\">${hits[*]}</span>\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>bulls<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">secret</span>=<span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">guess</span>=<span class=\"st0\">\"<span class=\"es3\">${2}</span>\"</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">bulls</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> locate_bulls <span class=\"st0\">\"<span class=\"es3\">${secret}</span>\"</span> <span class=\"st0\">\"<span class=\"es3\">${guess}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"<span class=\"es3\">${#bulls[@]}</span>\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>cows<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">secret</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> to_arr <span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">guess</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> to_arr <span class=\"st0\">\"<span class=\"es3\">${2}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">bulls</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> locate_bulls <span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span> <span class=\"st0\">\"<span class=\"es3\">${2}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">hits</span>=<span class=\"nu0\">0</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">i</span>=<span class=\"st_h\">''</span><br/>\u00a0<br/>  <span class=\"co0\"># Avoid double-counting bulls</span><br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"co1\">${bulls[*]}</span><br/>  <span class=\"kw1\">do</span><br/>    <span class=\"re2\">secret</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> delete_at <span class=\"co1\">${i}</span> <span class=\"co1\">${secret[*]}</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"co0\"># Process the guess against what's left of the secret</span><br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"co1\">${guess[*]}</span><br/>  <span class=\"kw1\">do</span><br/>    in_arr <span class=\"st0\">\"<span class=\"es3\">${i}</span>\"</span> <span class=\"co1\">${secret[*]}</span> <span class=\"sy0\">&amp;&amp;</span> <br/>    <span class=\"re2\">secret</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> delete_first <span class=\"st0\">\"<span class=\"es3\">${i}</span>\"</span> <span class=\"co1\">${secret[*]}</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span> hits++ <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"co1\">${hits}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>malformed<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">guess</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span> to_arr <span class=\"st0\">\"<span class=\"es3\">${1}</span>\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  <span class=\"kw3\">local</span> <span class=\"re2\">i</span>=<span class=\"st_h\">''</span><br/>\u00a0<br/>  <span class=\"br0\">[</span> <span class=\"co1\">${#guess[@]}</span> <span class=\"re5\">-ne</span> <span class=\"nu0\">4</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <br/>  <span class=\"kw3\">return</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"co1\">${guess[*]}</span><br/>  <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy0\">!</span> in_arr <span class=\"co1\">${i}</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">9</span> <br/>    <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">return</span> <span class=\"nu0\">0</span><br/>      <span class=\"kw3\">break</span><br/>    <span class=\"kw1\">fi</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"kw3\">return</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re2\">candidates</span>=<span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">9</span> <span class=\"br0\">)</span><br/><span class=\"re2\">secret</span>=<span class=\"st_h\">''</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${#secret}</span>\"</span> <span class=\"re5\">-lt</span> <span class=\"nu0\">4</span> <span class=\"br0\">]</span><br/><span class=\"kw1\">do</span><br/>  <span class=\"re2\">cidx</span>=$<span class=\"br0\">(</span> choose_idx <span class=\"co1\">${candidates[*]}</span> <span class=\"br0\">)</span><br/>  <span class=\"re2\">secret</span>=<span class=\"st0\">\"<span class=\"es3\">${secret}</span><span class=\"es3\">${candidates[${cidx}</span>]}\"</span><br/>  <span class=\"re2\">candidates</span>=<span class=\"br0\">(</span> $<span class=\"br0\">(</span>delete_at <span class=\"co1\">${cidx}</span> <span class=\"co1\">${candidates[*]}</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">done</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"kw2\">read</span> <span class=\"re5\">-p</span> <span class=\"st0\">\"Enter a four-digit guess:  \"</span> guess<br/><span class=\"kw1\">do</span><br/>  malformed <span class=\"st0\">\"<span class=\"es3\">${guess}</span>\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"Malformed guess\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">continue</span><br/>  <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es3\">${guess}</span>\"</span> == <span class=\"st0\">\"<span class=\"es3\">${secret}</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"You win!\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">exit</span><br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"Score: <span class=\"es4\">$( bulls \"${secret}\" \"${guess}\" )</span> Bulls, <span class=\"es4\">$( cows \"${secret}\" \"${guess}\" )</span> Cows\"</span><br/><span class=\"kw1\">done</span></pre>"}, {"lang": "VBA", "loc": 75, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> Main_Bulls_and_cows()<br/><span class=\"kw4\">Dim</span> strNumber <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, strInput <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, strMsg <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, strTemp <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> boolEnd <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/><span class=\"kw4\">Dim</span> lngCpt <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span><br/><span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span>, bytCow <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span>, bytBull <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span><br/>Const NUMBER_OF_DIGITS <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span> = 4<br/>Const MAX_LOOPS <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span> = 25 <span class=\"co1\">'the max of lines supported by MsgBox<br/></span><br/>    strNumber = Create_Number(NUMBER_OF_DIGITS)<br/>    <span class=\"kw3\">Do</span><br/>        bytBull = 0: bytCow = 0: lngCpt = lngCpt + 1<br/>        <span class=\"kw3\">If</span> lngCpt &gt; MAX_LOOPS <span class=\"kw3\">Then</span> strMsg = <span class=\"st0\">\"Max of loops... Sorry you loose!\"</span>: <span class=\"kw2\">Exit</span> <span class=\"kw3\">Do</span><br/>        strInput = AskToUser(NUMBER_OF_DIGITS)<br/>        <span class=\"kw3\">If</span> strInput = <span class=\"st0\">\"Exit Game\"</span> <span class=\"kw3\">Then</span> strMsg = <span class=\"st0\">\"User abort\"</span>: <span class=\"kw2\">Exit</span> <span class=\"kw3\">Do</span><br/>        <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> Len(strNumber)<br/>            <span class=\"kw3\">If</span> Mid(strNumber, i, 1) = Mid(strInput, i, 1) <span class=\"kw3\">Then</span><br/>                bytBull = bytBull + 1<br/>            <span class=\"kw3\">ElseIf</span> InStr(strNumber, Mid(strInput, i, 1)) &gt; 0 <span class=\"kw3\">Then</span><br/>                bytCow = bytCow + 1<br/>            <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>        <span class=\"kw3\">Next</span> i<br/>        <span class=\"kw3\">If</span> bytBull = Len(strNumber) <span class=\"kw3\">Then</span><br/>            boolEnd = <span class=\"kw5\">True</span>: strMsg = <span class=\"st0\">\"You win in \"</span> &amp; lngCpt &amp; <span class=\"st0\">\" loops!\"</span><br/>        <span class=\"kw3\">Else</span><br/>            strTemp = strTemp &amp; vbCrLf &amp; <span class=\"st0\">\"With\u00a0: \"</span> &amp; strInput &amp; <span class=\"st0\">\" ,you have\u00a0: \"</span> &amp; bytBull &amp; <span class=\"st0\">\" bulls,\"</span> &amp; bytCow &amp; <span class=\"st0\">\" cows.\"</span><br/>            MsgBox strTemp<br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">Loop</span> <span class=\"kw3\">While</span> <span class=\"kw3\">Not</span> boolEnd<br/>    MsgBox strMsg<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> Create_Number(NbDigits <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> myColl <span class=\"kw4\">As</span> <span class=\"kw2\">New</span> Collection<br/><span class=\"kw4\">Dim</span> strTemp <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> bytAlea <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span><br/>\u00a0<br/>    Randomize<br/>    <span class=\"kw3\">Do</span><br/>        bytAlea = Int((Rnd * 9) + 1)<br/>        <span class=\"kw4\">On</span> <span class=\"kw4\">Error</span> <span class=\"kw4\">Resume</span> <span class=\"kw3\">Next</span><br/>        myColl.Add CStr(bytAlea), CStr(bytAlea)<br/>        <span class=\"kw3\">If</span> Err &lt;&gt; 0 <span class=\"kw3\">Then</span><br/>            <span class=\"kw4\">On</span> <span class=\"kw4\">Error</span> <span class=\"kw3\">GoTo</span> 0<br/>        <span class=\"kw3\">Else</span><br/>            strTemp = strTemp &amp; CStr(bytAlea)<br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">Loop</span> <span class=\"kw3\">While</span> Len(strTemp) &lt; NbDigits<br/>    Create_Number = strTemp<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> AskToUser(NbDigits <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> boolGood <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span>, strIn <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, i <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span>, NbDiff <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span><br/>\u00a0<br/>    <span class=\"kw3\">Do</span> <span class=\"kw3\">While</span> <span class=\"kw3\">Not</span> boolGood<br/>        strIn = InputBox(<span class=\"st0\">\"Enter your number (\"</span> &amp; NbDigits &amp; <span class=\"st0\">\" digits)\"</span>, <span class=\"st0\">\"Number\"</span>)<br/>        <span class=\"kw3\">If</span> StrPtr(strIn) = 0 <span class=\"kw3\">Then</span> strIn = <span class=\"st0\">\"Exit Game\"</span>: <span class=\"kw2\">Exit</span> <span class=\"kw3\">Do</span><br/>        <span class=\"kw3\">If</span> strIn &lt;&gt; <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>            <span class=\"kw3\">If</span> Len(strIn) = NbDigits <span class=\"kw3\">Then</span><br/>                NbDiff = 0<br/>                <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> Len(strIn)<br/>                    <span class=\"kw3\">If</span> Len(Replace(strIn, Mid(strIn, i, 1), <span class=\"st0\">\"\"</span>)) &lt; NbDigits - 1 <span class=\"kw3\">Then</span><br/>                        NbDiff = 1<br/>                        <span class=\"kw2\">Exit</span> <span class=\"kw3\">For</span><br/>                    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>                <span class=\"kw3\">Next</span> i<br/>                <span class=\"kw3\">If</span> NbDiff = 0 <span class=\"kw3\">Then</span> boolGood = <span class=\"kw5\">True</span><br/>            <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">Loop</span><br/>    AskToUser = strIn<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0</pre>"}, {"lang": "Vedit macro language", "loc": 47, "block": "<pre class=\"vedit highlighted_source\">Buf_Switch<span class=\"br0\">(</span>Buf_Free<span class=\"br0\">)</span><br/>#<span class=\"nu0\">90</span> <span class=\"sy0\">=</span> Time_Tick                     <span class=\"co1\">// seed for random number generator</span><br/>#<span class=\"nu0\">91</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>                            <span class=\"co1\">// random numbers in range 0 to 9</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span>EOB_pos <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>               <span class=\"co1\">// 4 digits needed</span><br/>    Call<span class=\"br0\">(</span><span class=\"st0\">\"RANDOM\"</span><span class=\"br0\">)</span><br/>    BOF Ins_Char<span class=\"br0\">(</span>Return_Value <span class=\"sy0\">+</span> <span class=\"st0\">'0'</span><span class=\"br0\">)</span><br/>    Replace<span class=\"br0\">(</span><span class=\"st0\">\"(.)(.*)\\1\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\\1\\2\"</span><span class=\"sy0\">,</span> REGEXP<span class=\"sy0\">+</span>BEGIN<span class=\"sy0\">+</span>NOERR<span class=\"br0\">)</span>  <span class=\"co1\">// remove any duplicate</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>#<span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">repeat</span> <span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    Get_Input<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Guess a 4-digit number with no duplicate digits: \"</span><span class=\"sy0\">,</span> NOCR<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Reg_Size<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">Break</span> <span class=\"br0\">}</span>                <span class=\"co1\">// empty string = exit</span><br/>    Num_Eval_Reg<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>                                <span class=\"co1\">// check for numeric digits</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Chars_Matched <span class=\"sy0\">!=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        M<span class=\"br0\">(</span><span class=\"st0\">\"You should enter 4 numeric digits\\n\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Continue</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Goto_Pos<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>                                     <span class=\"co1\">// count bulls</span><br/>    Reg_Ins<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> OVERWRITE<span class=\"br0\">)</span><br/>    #<span class=\"nu0\">1</span> <span class=\"sy0\">=</span> Search<span class=\"br0\">(</span><span class=\"st0\">\"(.)...\\1\"</span><span class=\"sy0\">,</span> REGEXP<span class=\"sy0\">+</span>BEGIN<span class=\"sy0\">+</span>ALL<span class=\"sy0\">+</span>NOERR<span class=\"br0\">)</span><br/>\u00a0<br/>    RS<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"st0\">\"[\"</span><span class=\"sy0\">,</span> INSERT<span class=\"br0\">)</span>                             <span class=\"co1\">// count cows</span><br/>    RS<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"st0\">\"]\"</span><span class=\"sy0\">,</span> APPEND<span class=\"br0\">)</span><br/>    #<span class=\"nu0\">2</span> <span class=\"sy0\">=</span> Search_Block<span class=\"br0\">(</span>@10<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> REGEXP<span class=\"sy0\">+</span>BEGIN<span class=\"sy0\">+</span>ALL<span class=\"sy0\">+</span>NOERR<span class=\"br0\">)</span> <span class=\"sy0\">-</span> #<span class=\"nu0\">1</span><br/>\u00a0<br/>    #<span class=\"nu0\">3</span><span class=\"sy0\">++</span><br/>    NT<span class=\"br0\">(</span>#<span class=\"nu0\">1</span><span class=\"sy0\">,</span> NOCR<span class=\"br0\">)</span> M<span class=\"br0\">(</span><span class=\"st0\">\" bulls,\"</span><span class=\"br0\">)</span> NT<span class=\"br0\">(</span>#<span class=\"nu0\">2</span><span class=\"sy0\">,</span> NOCR<span class=\"br0\">)</span> M<span class=\"br0\">(</span><span class=\"st0\">\" cows\\n\"</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>#<span class=\"nu0\">1</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        M<span class=\"br0\">(</span><span class=\"st0\">\"You won after\"</span><span class=\"br0\">)</span> NT<span class=\"br0\">(</span>#<span class=\"nu0\">3</span><span class=\"sy0\">,</span> NOCR<span class=\"br0\">)</span> M<span class=\"br0\">(</span><span class=\"st0\">\" guesses!\\n\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Break</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>Buf_Quit<span class=\"br0\">(</span>OK<span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------------------------------------</span><br/><span class=\"co1\">// Generate random numbers in range 0 &lt;= Return_Value &lt; #91</span><br/><span class=\"co1\">//  #90 = Seed    (0 to 0x7fffffff)</span><br/><span class=\"co1\">//  #91 = Scaling (0 to 0x10000)</span><br/>\u00a0<br/><span class=\"sy0\">:</span>RANDOM<span class=\"sy0\">:</span><br/>#<span class=\"nu0\">92</span> <span class=\"sy0\">=</span> 0x7fffffff <span class=\"sy0\">/</span> <span class=\"nu0\">48271</span><br/>#<span class=\"nu0\">93</span> <span class=\"sy0\">=</span> 0x7fffffff <span class=\"sy0\">%</span> <span class=\"nu0\">48271</span><br/>#<span class=\"nu0\">90</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">48271</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>#<span class=\"nu0\">90</span> <span class=\"sy0\">%</span> #<span class=\"nu0\">92</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> #<span class=\"nu0\">93</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>#<span class=\"nu0\">90</span> <span class=\"sy0\">/</span> #<span class=\"nu0\">92</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> 0x7fffffff<br/><span class=\"kw1\">Return</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>#<span class=\"nu0\">90</span> <span class=\"sy0\">&amp;</span> 0xffff<span class=\"br0\">)</span> <span class=\"sy0\">*</span> #<span class=\"nu0\">91</span> <span class=\"sy0\">/</span> 0x10000<span class=\"br0\">)</span></pre>"}, {"lang": "Visual Basic .NET", "loc": 56, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Imports</span> System<br/><span class=\"kw1\">Imports</span> System<span class=\"sy0\">.</span><span class=\"me1\">Text</span><span class=\"sy0\">.</span><span class=\"me1\">RegularExpressions</span><br/>\u00a0<br/><span class=\"kw1\">Module</span> Bulls_and_Cows<br/>    <span class=\"kw1\">Function</span> CreateNumber<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">String</span><br/>        <span class=\"kw1\">Dim</span> random <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> sequence <span class=\"kw1\">As</span> <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"1\"</span>c, <span class=\"st0\">\"2\"</span>c, <span class=\"st0\">\"3\"</span>c, <span class=\"st0\">\"4\"</span>c, <span class=\"st0\">\"5\"</span>c, <span class=\"st0\">\"6\"</span>c, <span class=\"st0\">\"7\"</span>c, <span class=\"st0\">\"8\"</span>c, <span class=\"st0\">\"9\"</span>c<span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> sequence<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">Dim</span> j <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> random<span class=\"sy0\">.</span><span class=\"kw1\">Next</span><span class=\"br0\">(</span>sequence<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Dim</span> temp <span class=\"kw1\">As</span> <span class=\"kw1\">Char</span> <span class=\"sy0\">=</span> sequence<span class=\"br0\">(</span>i<span class=\"br0\">)</span>\u00a0: sequence<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> sequence<span class=\"br0\">(</span>j<span class=\"br0\">)</span>\u00a0: sequence<span class=\"br0\">(</span>j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> temp<br/>        <span class=\"kw1\">Next</span><br/>\u00a0<br/>        <span class=\"kw1\">Return</span> <span class=\"kw1\">New</span> <span class=\"kw2\">String</span><span class=\"br0\">(</span>sequence, <span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/>    <span class=\"kw1\">Function</span> IsFourDigitNumber<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> number <span class=\"kw1\">As</span> <span class=\"kw2\">String</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span><br/>        <span class=\"kw1\">Return</span> Regex<span class=\"sy0\">.</span><span class=\"me1\">IsMatch</span><span class=\"br0\">(</span>number, <span class=\"st0\">\"^[1-9]{4}$\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/>    <span class=\"kw1\">Sub</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> chosenNumber <span class=\"kw1\">As</span> <span class=\"kw2\">String</span> <span class=\"sy0\">=</span> CreateNumber<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> attempt <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Number is chosen\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Dim</span> gameOver <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span> <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><br/>        <span class=\"kw1\">Do</span><br/>            attempt <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Attempt #{0}. Enter four digit number: \"</span>, attempt<span class=\"br0\">)</span><br/>            <span class=\"kw1\">Dim</span> number <span class=\"kw1\">As</span> <span class=\"kw2\">String</span> <span class=\"sy0\">=</span> Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Do</span> <span class=\"kw1\">While</span> <span class=\"kw1\">Not</span> IsFourDigitNumber<span class=\"br0\">(</span>number<span class=\"br0\">)</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid number: type four characters. Every character must digit be between '1' and '9'.\"</span><span class=\"br0\">)</span><br/>                number <span class=\"sy0\">=</span> Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Loop</span><br/>\u00a0<br/>            <span class=\"kw1\">Dim</span> bulls <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"kw1\">Dim</span> cows <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>            <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> number<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">Dim</span> j <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> chosenNumber<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span>number<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">If</span> i <span class=\"sy0\">=</span> j <span class=\"kw1\">Then</span><br/>                    bulls <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">ElseIf</span> j <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>                    cows <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>                <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>            <span class=\"kw1\">Next</span><br/>\u00a0<br/>            <span class=\"kw1\">If</span> bulls <span class=\"sy0\">&lt;</span> chosenNumber<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"kw1\">Then</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The number '{0}' has {1} bulls and {2} cows\"</span>, _<br/>                    number, bulls, cows<span class=\"br0\">)</span><br/>            <span class=\"kw1\">Else</span><br/>                gameOver <span class=\"sy0\">=</span> <span class=\"kw1\">True</span><br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>        <span class=\"kw1\">Loop</span> Until gameOver<br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The number was guessed in {0} attempts. Congratulations!\"</span>, attempt<span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Module</span></pre>"}, {"lang": "zkl", "loc": 12, "block": "<pre class=\"text highlighted_source\">d:=Dictionary(); do{ d[(1).random(10)]=True }while(d.len()&lt;4);<br/>abcd:=d.keys.shuffle();<br/>while(1){<br/>   guess:=ask(\"4 digits: \")-\" ,\";<br/>   if(guess.len()!=4 or guess.unique().len()!=4) continue;<br/>   bulls:=abcd.zipWith('==,guess).sum(0);<br/>   cows:=guess.split(\"\").enumerate()<br/>      .reduce('wrap(s,[(n,c)]){ s + (d.find(c,False) and abcd[n]!=c) },0);<br/>   if(bulls==4) { println(\"You got it!\"); break; }<br/>   \"%d bull%s and\u00a0%d cow%s\".fmt(bulls,s(bulls),cows,s(cows)).println();<br/>}<br/>fcn s(n){ (n!=1) and \"s\" or \"\" }</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 20, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">DIM</span> n<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>: <span class=\"kw1\">LET</span> c$=<span class=\"st0\">\"\"</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">4</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> d=<span class=\"kw3\">INT</span> <span class=\"br0\">(</span><span class=\"kw3\">RND</span>*<span class=\"nu0\">9</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">IF</span> n<span class=\"br0\">(</span>d<span class=\"br0\">)</span>=<span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">30</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">LET</span> n<span class=\"br0\">(</span>d<span class=\"br0\">)</span>=<span class=\"nu0\">1</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">LET</span> c$=c$+<span class=\"kw3\">STR</span>$ d<br/><span class=\"nu0\">70</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">80</span> <span class=\"kw1\">LET</span> guesses=<span class=\"nu0\">0</span><br/><span class=\"nu0\">90</span> INPUT <span class=\"st0\">\"Guess a 4-digit number (1 to 9) with no duplicate digits: \"</span>;guess<br/><span class=\"nu0\">100</span> <span class=\"kw1\">IF</span> guess=<span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> STOP <br/><span class=\"nu0\">110</span> <span class=\"kw1\">IF</span> guess&gt;<span class=\"nu0\">9999</span> <span class=\"kw4\">OR</span> guess&lt;<span class=\"nu0\">1000</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Only 4 numeric digits, please\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">90</span><br/><span class=\"nu0\">120</span> <span class=\"kw1\">LET</span> bulls=<span class=\"nu0\">0</span>: <span class=\"kw1\">LET</span> cows=<span class=\"nu0\">0</span>: <span class=\"kw1\">LET</span> guesses=guesses+<span class=\"nu0\">1</span>: <span class=\"kw1\">LET</span> g$=<span class=\"kw3\">STR</span>$ guess<br/><span class=\"nu0\">130</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">4</span><br/><span class=\"nu0\">140</span> <span class=\"kw1\">IF</span> g$<span class=\"br0\">(</span>i<span class=\"br0\">)</span>=c$<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> bulls=bulls+<span class=\"nu0\">1</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">160</span><br/><span class=\"nu0\">150</span> <span class=\"kw1\">IF</span> n<span class=\"br0\">(</span><span class=\"kw3\">VAL</span> g$<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span>=<span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> cows=cows+<span class=\"nu0\">1</span><br/><span class=\"nu0\">160</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">170</span> <span class=\"kw1\">PRINT</span> bulls;<span class=\"st0\">\" bulls, \"</span>;cows;<span class=\"st0\">\" cows\"</span><br/><span class=\"nu0\">180</span> <span class=\"kw1\">IF</span> c$=g$ <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"You won after \"</span>;guesses;<span class=\"st0\">\" guesses!\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">10</span><br/><span class=\"nu0\">190</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">90</span><br/>\u00a0</pre>"}]}