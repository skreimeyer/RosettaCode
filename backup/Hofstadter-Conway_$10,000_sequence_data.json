{"task": "Hofstadter-Conway_$10,000_sequence", "blocks": [{"lang": "360 Assembly", "loc": 85, "block": "<pre class=\"text highlighted_source\">*        Hofstadter-Conway $10,000 sequence    07/05/2016<br/>HOFSTADT START<br/>         B      72(R15)            skip savearea<br/>         DC     17F'0'             savearea<br/>         STM    R14,R12,12(R13)    save registers<br/>         ST     R13,4(R15)         link backward SA<br/>         ST     R15,8(R13)         link forward SA<br/>         LR     R13,R15            establish addressability<br/>         USING  HOFSTADT,R13       set base register<br/>         LA     R4,2               pow2=2<br/>         LA     R8,4               p2=2**pow2<br/>         MVC    A+0,=F'1'          a(1)=1<br/>         MVC    A+4,=F'1'          a(2)=1<br/>         LA     R6,3               n=3<br/>LOOPN    C      R6,UPRDIM          do n=3 to uprdim<br/>         BH     ELOOPN<br/>         LR     R1,R6              n<br/>         SLA    R1,2<br/>         L      R5,A-8(R1)         a(n-1)<br/>         LR     R1,R5<br/>         SLA    R1,2<br/>         L      R2,A-4(R1)         a(a(n-1))<br/>         LR     R1,R6              n<br/>         SR     R1,R5              n-a(n-1)<br/>         SLA    R1,2<br/>         L      R3,A-4(R1)         a(n-a(n-1)<br/>         AR     R2,R3              a(a(n-1))+a(n-a(n-1))<br/>         LR     R1,R6              n<br/>         SLA    R1,2<br/>         ST     R2,A-4(R1)         a(n)=a(a(n-1))+a(n-a(n-1))<br/>         LR     R1,R6              n<br/>         SLA    R1,2<br/>         L      R2,A-4(R1)         a(n)<br/>         MH     R2,=H'10000'       fixed point 4dec<br/>         SRDA   R2,32<br/>         DR     R2,R6              /n<br/>         LR     R7,R3              r=a(n)/n<br/>         C      R7,=F'5500'        if r&gt;=0.55<br/>         BL     EIF1<br/>         LR     R9,R6              mallows=n<br/>EIF1     C      R7,PEAK            if r&gt;peak<br/>         BNH    EIF2<br/>         ST     R7,PEAK            peak=r<br/>         ST     R6,PEAKPOS         peakpos=n<br/>EIF2     CR     R6,R8              if n=p2<br/>         BNE    EIF3<br/>         LR     R1,R4              pow2<br/>         BCTR   R1,0               pow2-1<br/>         XDECO  R1,XDEC            edit pow2-1<br/>         MVC    PG1+18(2),XDEC+10<br/>         XDECO  R4,XDEC            edit pow2<br/>         MVC    PG1+27(2),XDEC+10<br/>         L      R1,PEAK            peak<br/>         XDECO  R1,XDEC            edit peak<br/>         MVC    PG1+35(4),XDEC+8<br/>         L      R1,PEAKPOS         peakpos<br/>         XDECO  R1,XDEC            edit peakpos<br/>         MVC    PG1+45(5),XDEC+7<br/>         XPRNT  PG1,80             print buffer<br/>         LA     R4,1(R4)           pow2=pow2+1<br/>         SLA    R8,1               p2=2**pow2<br/>         MVC    PEAK,=F'5000'      peak=0.5<br/>EIF3     LA     R6,1(R6)           n=n+1<br/>         B      LOOPN<br/>ELOOPN   L      R1,L               l<br/>         XDECO  R1,XDEC            edit l<br/>         MVC    PG2+6(2),XDEC+10<br/>         XDECO  R9,XDEC            edit mallows<br/>         MVC    PG2+29(5),XDEC+7<br/>         XPRNT  PG2,80             print buffer<br/>RETURN   L      R13,4(0,R13)       restore savearea pointer<br/>         LM     R14,R12,12(R13)    restore registers<br/>         XR     R15,R15            return code = 0<br/>         BR     R14                return to caller<br/>         LTORG  <br/>L        DC     F'12'<br/>UPRDIM   DC     F'4096'            2^L<br/>PEAK     DC     F'5000'            0.5 fixed point 4dec<br/>PEAKPOS  DC     F'0'<br/>XDEC     DS     CL12<br/>PG1      DC CL80'maximum between 2^xx and 2^xx is 0.xxxx at n=xxxxx'<br/>PG2      DC CL80'for l=xx\u00a0: mallows number is xxxxx'<br/>A        DS     4096F              array a(uprdim)<br/>         REGEQU<br/>         END    HOFSTADT</pre>"}, {"lang": "Ada", "loc": 74, "block": "<pre class=\"ada highlighted_source\"><span class=\"co1\">-- Ada95 version</span><br/><span class=\"co1\">-- Allocation of arrays on the heap</span><br/>\u00a0<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Unchecked_Deallocation;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Conway <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">package</span> Real_io <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Float_IO <span class=\"br0\">(</span>Float<span class=\"br0\">)</span>;<br/>\u00a0<br/>   Maxrange\u00a0: <span class=\"kw3\">constant</span>\u00a0:= <span class=\"nu0\">2</span> ** <span class=\"nu0\">20</span>;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Sequence <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">Maxrange</span><span class=\"br0\">)</span> <span class=\"kw3\">of</span> Positive;<br/>   <span class=\"kw3\">type</span> Sequence_Ptr <span class=\"kw1\">is</span> <span class=\"kw3\">access</span> <span class=\"kw3\">all</span> Sequence;<br/>   <span class=\"kw3\">procedure</span> Free <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Unchecked_Deallocation <span class=\"br0\">(</span>Sequence, Sequence_Ptr<span class=\"br0\">)</span>;<br/>\u00a0<br/>   S\u00a0: Sequence_Ptr\u00a0:= <span class=\"kw3\">new</span> Sequence;<br/>\u00a0<br/>   <span class=\"kw3\">type</span> Ratio_Array <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">Maxrange</span><span class=\"br0\">)</span> <span class=\"kw3\">of</span> Float;<br/>   <span class=\"kw3\">type</span> Ratio_Ptr <span class=\"kw1\">is</span> <span class=\"kw3\">access</span> <span class=\"kw3\">all</span> Ratio_Array;<br/>   <span class=\"kw3\">procedure</span> Free <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Unchecked_Deallocation <span class=\"br0\">(</span>Ratio_Array, Ratio_Ptr<span class=\"br0\">)</span>;<br/>\u00a0<br/>   Ratio\u00a0: Ratio_Ptr\u00a0:= <span class=\"kw3\">new</span> Ratio_Array;<br/>\u00a0<br/>   Mallows\u00a0: Positive;<br/>   M      \u00a0: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/><span class=\"kw1\">begin</span><br/>   S <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\u00a0:= <span class=\"nu0\">1</span>;<br/>   S <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\u00a0:= <span class=\"nu0\">1</span>;<br/>   <span class=\"kw1\">for</span> K <span class=\"kw3\">in</span> <span class=\"nu0\">3</span> .. <span class=\"me1\">Maxrange</span> <span class=\"kw1\">loop</span><br/>      S <span class=\"br0\">(</span>K<span class=\"br0\">)</span>\u00a0:= S <span class=\"br0\">(</span>S <span class=\"br0\">(</span>K - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> + S <span class=\"br0\">(</span>K - S <span class=\"br0\">(</span>K - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>\u00a0<br/>   <span class=\"kw1\">for</span> k <span class=\"kw3\">in</span> <span class=\"nu0\">1</span> .. <span class=\"me1\">Maxrange</span> <span class=\"kw1\">loop</span><br/>      Ratio <span class=\"br0\">(</span>k<span class=\"br0\">)</span>\u00a0:= Float <span class=\"br0\">(</span>S <span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span> / Float <span class=\"br0\">(</span>k<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>\u00a0<br/>   <span class=\"kw1\">for</span> N <span class=\"kw3\">in</span> <span class=\"nu0\">1</span> .. <span class=\"nu0\">19</span> <span class=\"kw1\">loop</span><br/>      <span class=\"kw1\">declare</span><br/>         Max  \u00a0: Float\u00a0:= <span class=\"nu0\">0.0</span>;<br/>         Where\u00a0: Positive;<br/>      <span class=\"kw1\">begin</span><br/>         <span class=\"kw1\">for</span> K <span class=\"kw3\">in</span> <span class=\"nu0\">2</span> ** N .. <span class=\"nu0\">2</span> ** <span class=\"br0\">(</span>N + <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">if</span> Max &lt; Ratio <span class=\"br0\">(</span>K<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               Max  \u00a0:= Ratio <span class=\"br0\">(</span>K<span class=\"br0\">)</span>;<br/>               Where\u00a0:= K;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>M = <span class=\"nu0\">0</span> <span class=\"kw2\">and</span> Max &lt; <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            M\u00a0:= N - <span class=\"nu0\">1</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         Put<br/>           <span class=\"br0\">(</span><span class=\"st0\">\"Maximun of a(n)/n between 2^\"</span> &amp;<br/>            Integer'Image <span class=\"br0\">(</span>N<span class=\"br0\">)</span> &amp;<br/>            <span class=\"st0\">\" and 2^\"</span> &amp;<br/>            Integer'Image <span class=\"br0\">(</span>N + <span class=\"nu0\">1</span><span class=\"br0\">)</span> &amp;<br/>            <span class=\"st0\">\" was \"</span><span class=\"br0\">)</span>;<br/>         Real_io.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>Max, Fore =&gt; <span class=\"nu0\">1</span>, Aft =&gt; <span class=\"nu0\">8</span>, Exp =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>         Put_Line <span class=\"br0\">(</span><span class=\"st0\">\" at\"</span> &amp; Integer'Image <span class=\"br0\">(</span>Where<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"co1\">--  Calculate Mallows number</span><br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"kw3\">reverse</span> <span class=\"nu0\">2</span> ** M .. <span class=\"nu0\">2</span> ** <span class=\"br0\">(</span>M + <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Ratio <span class=\"br0\">(</span>I<span class=\"br0\">)</span> &gt; <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>         Mallows\u00a0:= I;<br/>         <span class=\"kw3\">exit</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"Mallows number\"</span> &amp; Integer'Image <span class=\"br0\">(</span>Mallows<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Free <span class=\"br0\">(</span>S<span class=\"br0\">)</span>;<br/>   Free <span class=\"br0\">(</span>Ratio<span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Conway;<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "ALGOL 68", "loc": 36, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw4\">PROC</span> do sqnc <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> max<span class=\"br0\">)</span><span class=\"kw3\">INT</span><span class=\"sy1\">:</span><br/><span class=\"kw2\">BEGIN</span><br/>    <span class=\"br0\">[</span>max<span class=\"br0\">]</span><span class=\"kw3\">INT</span> a list<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span> k1 <span class=\"sy1\">:=</span> 2<span class=\"sy1\">,</span><br/>        lg2 <span class=\"sy1\">:=</span> 1<span class=\"sy1\">,</span><br/>        v <span class=\"sy1\">:=</span> a list<span class=\"br0\">[</span>1<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> a list<span class=\"br0\">[</span>2<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> 1<span class=\"sy1\">;</span> <span class=\"coMULTI\"># Concurrent declaration and assignment in declarations are allowed #</span><br/>\u00a0<br/>    <span class=\"kw3\">INT</span> nmax<span class=\"sy1\">;</span><br/>    <span class=\"kw4\">LONG</span> <span class=\"kw3\">REAL</span> amax <span class=\"sy1\">:=</span> <span class=\"re1\">0.0</span><span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"kw3\">INT</span> mallows number<span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">FOR</span> n <span class=\"kw2\">FROM</span> 3 <span class=\"kw2\">TO</span> max <span class=\"kw2\">DO</span><br/>      v <span class=\"sy1\">:=</span> a list<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> a list<span class=\"br0\">[</span>v<span class=\"br0\">]</span> <span class=\"sy1\">+</span> a list<span class=\"br0\">[</span>n<span class=\"sy1\">-</span>v<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      <span class=\"br0\">(</span> amax <span class=\"sy1\">&lt;</span> v<span class=\"sy1\">/</span>n <span class=\"sy1\">|</span> amax <span class=\"sy1\">:=</span> v<span class=\"sy1\">/</span>n<span class=\"sy1\">;</span> nmax <span class=\"sy1\">:=</span> n <span class=\"br0\">)</span><span class=\"sy1\">;</span>  <span class=\"coMULTI\"># When given a Boolean as the 1st expression, ( | ) is the short form of IF...THEN...FI #</span><br/>\u00a0<br/>      <span class=\"kw2\">IF</span> v<span class=\"sy1\">/</span>n <span class=\"sy1\">&gt;=</span> <span class=\"re1\">0.55</span> <span class=\"kw2\">THEN</span>                       <span class=\"coMULTI\"># This is the equivalent full form of the above construct #</span><br/>          mallows number <span class=\"sy1\">:=</span> n<br/>      <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>\u00a0<br/>      <span class=\"kw2\">IF</span> <span class=\"kw8\">ABS</span><span class=\"br0\">(</span><span class=\"kw8\">BIN</span> k1 <span class=\"kw16\">AND</span> <span class=\"kw8\">BIN</span> n<span class=\"br0\">)</span> <span class=\"sy1\">=</span> 0 <span class=\"kw2\">THEN</span><br/>      <span class=\"coMULTI\"># 'BIN' converts an INT type to a BITS type; In this context, 'ABS' reverses that operation #</span><br/>        <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$<span class=\"st0\">\"Maximum between 2^\"</span>g<span class=\"br0\">(</span>0<span class=\"br0\">)</span><span class=\"st0\">\" and 2^\"</span>g<span class=\"br0\">(</span>0<span class=\"br0\">)</span><span class=\"st0\">\" is about \"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>10<span class=\"sy1\">,</span>8<span class=\"br0\">)</span><span class=\"st0\">\" at \"</span>g<span class=\"br0\">(</span>0<span class=\"br0\">)</span>l$<span class=\"sy1\">,</span> lg2<span class=\"sy1\">,</span>lg2<span class=\"sy1\">+</span>1<span class=\"sy1\">,</span> amax<span class=\"sy1\">,</span> nmax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        amax <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>        lg2 <span class=\"kw17\">PLUSAB</span> 1   <span class=\"coMULTI\"># 'PLUSAB' (plus-and-becomes) has the short form +:= #</span><br/>      <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>      k1 <span class=\"sy1\">:=</span> n<br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    mallows number   <span class=\"coMULTI\"># the result of the last expression evaluated is returned as the result of the PROC #</span><br/><span class=\"kw2\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw3\">INT</span> mallows number <span class=\"sy1\">=</span> do sqnc<span class=\"br0\">(</span>2<span class=\"sy1\">**</span>20<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># This definition of 'mallows number' does not clash with the variable<br/>                                       of the same name inside PROC do sqnc - they are in different scopes#</span><br/>\u00a0<br/><span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$<span class=\"st0\">\"You too might have won $1000 with an answer of n = \"</span>g<span class=\"br0\">(</span>0<span class=\"br0\">)</span>$<span class=\"sy1\">,</span> mallows number<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "AutoHotkey", "loc": 47, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/Progress.htm\"><span class=\"kw3\">Progress</span></a><span class=\"sy0\">,</span> b2 w150 zh0 fs9<span class=\"sy0\">,</span> CreateLists <span class=\"sy0\">...</span><br/>CreateLists<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">**</span> <span class=\"br0\">(</span>Max<span class=\"sy0\">:=</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Progress.htm\"><span class=\"kw3\">Progress</span></a><span class=\"sy0\">,,</span> Find Maxima <span class=\"sy0\">...</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>\u00a0% Max <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>    msg <span class=\"sy0\">.=</span> <span class=\"st0\">\"Maximum between 2^\"</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"st0\">\" and 2^\"</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"sy0\">.</span>  <span class=\"st0\">\" is \"</span> GetMax<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">**</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">**</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> n<span class=\"br0\">)</span><br/>        <span class=\"sy0\">.</span>  <span class=\"st0\">\" for n = \"</span> n <span class=\"st0\">\"`n\"</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Progress.htm\"><span class=\"kw3\">Progress</span></a><span class=\"sy0\">,,</span> Find Mallows Number <span class=\"sy0\">...</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span>\u00a0% <span class=\"nu0\">2</span> <span class=\"sy0\">**</span> Max<br/>    <span class=\"kw1\">If</span> <span class=\"br0\">(</span>n_<span class=\"re0\">%A_Index%</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span><br/>        MallowsNumber <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>msg <span class=\"sy0\">.=</span> <span class=\"st0\">\"Mallows Number = \"</span> MallowsNumber<br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Progress.htm\"><span class=\"kw3\">Progress</span></a><span class=\"sy0\">,</span> Off<br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%msg%</span><br/>\u00a0<br/><span class=\"co1\">;---------------------------------------------------------------------------</span><br/>GetMax<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> ByRef Item<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">; return max value of a(n)/n between a and b</span><br/><span class=\"co1\">;---------------------------------------------------------------------------</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/IfGreater.htm\"><span class=\"kw3\">IfGreater</span></a><span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> <span class=\"re0\">%b%</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Break.htm\"><span class=\"kw3\">Break</span></a><br/>        <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Maximum <span class=\"sy0\">&lt;</span> n_<span class=\"re0\">%a%</span><span class=\"br0\">)</span><br/>            Maximum <span class=\"sy0\">:=</span> n_<span class=\"re0\">%a%</span><span class=\"sy0\">,</span> Item <span class=\"sy0\">:=</span> a<br/>        a<span class=\"sy0\">++</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">Return</span><span class=\"sy0\">,</span> Maximum<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">;---------------------------------------------------------------------------</span><br/>CreateLists<span class=\"br0\">(</span>Lenght<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">; Hofstadter-Conway sequences (using lookups)</span><br/><span class=\"co1\">;---------------------------------------------------------------------------</span><br/>    <span class=\"co1\">; create the sequence  a_%A_Index%  [ a(n)   ]</span><br/>    <span class=\"co1\">;   and  the sequence  n_%A_Index%  [ a(n)/n ]</span><br/>    <span class=\"co1\">;-----------------------------------------------------------------------</span><br/>    global<br/>    a_1 <span class=\"sy0\">:=</span> a_2 <span class=\"sy0\">:=</span> n_1 <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> n_2 <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%Lenght%</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/IfLess.htm\"><span class=\"kw3\">IfLess</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Continue.htm\"><span class=\"kw3\">Continue</span></a><br/>        n1 <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>        an1 <span class=\"sy0\">:=</span> a_<span class=\"re0\">%n1%</span><br/>        nan1 <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">-</span> an1<br/>        a_<span class=\"re0\">%A_Index%</span> <span class=\"sy0\">:=</span> a_<span class=\"re0\">%an1%</span> <span class=\"sy0\">+</span> a_<span class=\"re0\">%nan1%</span><br/>        n_<span class=\"re0\">%A_Index%</span> <span class=\"sy0\">:=</span> a_<span class=\"re0\">%A_Index%</span> <span class=\"sy0\">/</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 22, "block": "<pre class=\"awk highlighted_source\"><span class=\"co1\">#!/usr/bin/awk -f</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span> <br/>  NN = <span class=\"nu0\">20</span>;<br/>  iterativeHCsequence<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy3\">^</span>NN<span class=\"sy3\">+</span><span class=\"nu0\">1</span>,Q<span class=\"br0\">)</span>; <br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>K=<span class=\"nu0\">1</span>; K<span class=\"sy2\">&lt;</span>NN; K<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    m = <span class=\"nu0\">0</span>; <br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>n=<span class=\"nu0\">2</span><span class=\"sy3\">^</span>K<span class=\"sy3\">+</span><span class=\"nu0\">1</span>; n<span class=\"sy2\">&lt;=</span><span class=\"nu0\">2</span><span class=\"sy3\">^</span><span class=\"br0\">(</span>K<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>; n<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        v = Q<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"sy3\">/</span>n; <br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>m <span class=\"sy2\">&lt;</span> v<span class=\"br0\">)</span> <span class=\"br0\">{</span>nn=n; m = v<span class=\"br0\">}</span>; <br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw5\">printf</span> <span class=\"st0\">\"Maximum a(n)/n between 2^%i and 2^%i is\u00a0%f at n=%i<span class=\"es0\">\\n</span>\"</span>,K,K<span class=\"sy3\">+</span><span class=\"nu0\">1</span>,m,nn;<br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw5\">print</span> <span class=\"st0\">\"number of Q(n)&lt;Q(n+1) for n&lt;=100000\u00a0: \"</span> NN;<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> iterativeHCsequence<span class=\"br0\">(</span>N,Q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  Q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"nu0\">1</span>;  <br/>  Q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> = <span class=\"nu0\">1</span>;  <br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>n=<span class=\"nu0\">3</span>; n<span class=\"sy2\">&lt;=</span>N; n<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    Q<span class=\"br0\">[</span>n<span class=\"br0\">]</span> = Q<span class=\"br0\">[</span>Q<span class=\"br0\">[</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy3\">+</span>Q<span class=\"br0\">[</span>n<span class=\"sy3\">-</span>Q<span class=\"br0\">[</span>n<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>;<br/>  <span class=\"br0\">}</span> <br/><span class=\"br0\">}</span> </pre>"}, {"lang": "BBC BASIC", "loc": 21, "block": "<pre class=\"text highlighted_source\">HIMEM=LOMEM+1E7\u00a0: REM Reserve enough memory for a 4 MB array, plus other code<br/>DIM a%(2^20)<br/>a%(1)=1<br/>a%(2)=1<br/>pow2%=2<br/>p2%=2^pow2%<br/>peak=0.5<br/>peakpos%=0<br/>FOR n%=3 TO 2^20<br/>   a%(n%)=a%(a%(n%-1))+a%(n%-a%(n%-1))<br/>   r=a%(n%)/n%<br/>   IF r&gt;=0.55 THEN Mallows%=n%<br/>   IF r&gt;peak THEN peak=r:peakpos%=n%<br/>   IF n%=p2% THEN<br/>      PRINT \"Maximum between 2^\";pow2%-1;\" and 2^\";pow2%;\" is \";peak;\" at n=\";peakpos%<br/>      pow2%+=1<br/>      p2%=2^pow2%<br/>      peak=0.5<br/>   ENDIF<br/>NEXT n%<br/>PRINT \"Mallows number is \";Mallows%</pre>"}, {"lang": "Bracmat", "loc": 56, "block": "<pre class=\"text highlighted_source\">( ( a<br/>  =   <br/>    .  \u00a0!arg:(1|2)&amp;1<br/>      | (as..find)$!arg:(?.?arg)&amp;!arg<br/>      |     (as..insert)<br/>          $ (\u00a0!arg<br/>            . a$(a$(!arg+-1))+a$(!arg+-1*a$(!arg+-1)):?arg<br/>            )<br/>        &amp;\u00a0!arg<br/>  )<br/>&amp; new$hash:?as<br/>&amp; 0:?n:?maxan/n<br/>&amp; 1:?pow<br/>&amp;   whl<br/>  ' ( 1+!n:?n<br/>    &amp;\u00a0!pow:~&gt;20<br/>    &amp; ( 2^!pow:~!n<br/>      |     out<br/>          $ ( str<br/>            $ ( \"Between 2^\"<br/>               \u00a0!pow+-1<br/>                \" and 2^\"<br/>               \u00a0!pow<br/>                \" the maximum value of a(n)/n is reached for n = \"<br/>               \u00a0!maxn<br/>                \" with the value \"<br/>               \u00a0!maxan/n<br/>              )<br/>            )<br/>        &amp; 0:?maxan/n<br/>        &amp; 1+!pow:?pow<br/>      )<br/>    &amp; a$!n*!n^-1:?an/n<br/>    &amp; (  \u00a0!an/n:&gt;!maxan/n:?maxan/n<br/>        &amp;\u00a0!n:?maxn<br/>      | <br/>      )<br/>    &amp; (\u00a0!an/n:~&lt;11/20:?Man/n&amp;!n:?Mallows<br/>      | <br/>      )<br/>    )<br/>&amp;   out<br/>  $ ( str<br/>    $ ( \"Mallows number is \"<br/>       \u00a0!Mallows<br/>        \", where a(\"<br/>       \u00a0!Mallows<br/>        \")/\"<br/>       \u00a0!Mallows<br/>        \" == \"<br/>       \u00a0!Man/n<br/>        \", which is greater than 0.55 by \"<br/>       \u00a0!Man/n+-11/20<br/>      )<br/>    )<br/>)</pre>"}, {"lang": "C", "loc": 29, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> a_list<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span><span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> doSqnc<span class=\"br0\">(</span> <span class=\"kw4\">int</span> m<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> max_df <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> p2_max <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> v<span class=\"sy0\">,</span> n<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> k1 <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> lg2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">double</span> amax <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    a_list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">50000</span><span class=\"sy0\">;</span><br/>    a_list<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    v <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>n<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span> n <span class=\"sy0\">&lt;=</span> m<span class=\"sy0\">;</span>  n<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        v <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span>v<span class=\"br0\">]</span> <span class=\"sy0\">+</span> a_list<span class=\"br0\">[</span>n<span class=\"sy0\">-</span>v<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span> amax <span class=\"sy0\">&lt;</span> v<span class=\"sy0\">*</span><span class=\"nu16\">1.0</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span> amax <span class=\"sy0\">=</span> v<span class=\"sy0\">*</span><span class=\"nu16\">1.0</span><span class=\"sy0\">/</span>n<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">==</span> <span class=\"br0\">(</span>k1<span class=\"sy0\">&amp;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Maximum between 2^%d and 2^%d was\u00a0%f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> lg2<span class=\"sy0\">,</span>lg2<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> amax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            amax <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            lg2<span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><br/>        k1 <span class=\"sy0\">=</span> n<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 35, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;deque&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> hcseq<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">static</span> std<span class=\"sy4\">::</span><span class=\"me2\">deque</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> seq<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>seq.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;</span> n<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> seq.<span class=\"me1\">back</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    seq.<span class=\"me1\">push_back</span><span class=\"br0\">(</span>seq<span class=\"br0\">[</span>x<span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy2\">+</span> seq<span class=\"br0\">[</span>seq.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy2\">-</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> seq<span class=\"br0\">[</span>n<span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> pow2 <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy4\">;</span> <span class=\"sy2\">++</span>i<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> pow2next <span class=\"sy1\">=</span> <span class=\"nu0\">2</span><span class=\"sy2\">*</span>pow2<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">double</span> max <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> n <span class=\"sy1\">=</span> pow2<span class=\"sy4\">;</span> n <span class=\"sy1\">&lt;</span> pow2next<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>n<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw4\">double</span> anon <span class=\"sy1\">=</span> hcseq<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">/</span><span class=\"kw4\">double</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>anon <span class=\"sy1\">&gt;</span> max<span class=\"br0\">)</span><br/>        max <span class=\"sy1\">=</span> anon<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"maximum of a(n)/n between 2^\"</span> <span class=\"sy1\">&lt;&lt;</span> i<br/>              <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" (\"</span> <span class=\"sy1\">&lt;&lt;</span> pow2 <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\") and 2^\"</span> <span class=\"sy1\">&lt;&lt;</span> i<span class=\"sy2\">+</span><span class=\"nu0\">1</span><br/>              <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" (\"</span> <span class=\"sy1\">&lt;&lt;</span> pow2next <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\") is \"</span> <span class=\"sy1\">&lt;&lt;</span> max <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    pow2 <span class=\"sy1\">=</span> pow2next<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 45, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> HofstadterConway<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> GenHofstadterConway<span class=\"br0\">(</span><span class=\"kw4\">int</span> max<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> result <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">int</span><span class=\"br0\">[</span>max<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            result<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>result<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> ix <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> ix <span class=\"sy0\">&lt;</span> max<span class=\"sy0\">;</span> ix<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                result<span class=\"br0\">[</span>ix<span class=\"br0\">]</span> <span class=\"sy0\">=</span> result<span class=\"br0\">[</span>result<span class=\"br0\">[</span>ix <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> result<span class=\"br0\">[</span>ix <span class=\"sy0\">-</span> result<span class=\"br0\">[</span>ix <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> adiv <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> GenHofstadterConway<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                    adiv<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> p <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> p<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">var</span> max <span class=\"sy0\">=</span> Enumerable<span class=\"sy0\">.</span><span class=\"me1\">Range</span><span class=\"br0\">(</span><br/>                     <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">(</span>p <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>,<br/>                     <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> p<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">(</span>p <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">)</span><br/>                     <span class=\"sy0\">.</span><span class=\"kw1\">Select</span><span class=\"br0\">(</span>ix <span class=\"sy0\">=&gt;</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"br0\">{</span> I <span class=\"sy0\">=</span> ix <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, A <span class=\"sy0\">=</span> adiv<span class=\"br0\">[</span>ix<span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>                     <span class=\"sy0\">.</span><span class=\"me1\">OrderByDescending</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> x<span class=\"sy0\">.</span><span class=\"me1\">A</span><span class=\"br0\">)</span><br/>                     <span class=\"sy0\">.</span><span class=\"me1\">First</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Maximum from 2^{0} to 2^{1} is {2} at {3}\"</span>,<br/>                    p <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, p, max<span class=\"sy0\">.</span><span class=\"me1\">A</span>, max<span class=\"sy0\">.</span><span class=\"me1\">I</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The winning number is {0}.\"</span>,<br/>                Enumerable<span class=\"sy0\">.</span><span class=\"me1\">Range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>                    <span class=\"sy0\">.</span><span class=\"me1\">Last</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>adiv<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>                <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 24, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">ns</span> rosettacode<span class=\"sy0\">.</span>hofstader<span class=\"sy0\">-</span>conway<br/>  <span class=\"br0\">(</span>:<span class=\"me1\">use</span> <span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>math<span class=\"sy0\">.</span>numeric<span class=\"sy0\">-</span>tower\u00a0:<span class=\"me1\">only</span> <span class=\"br0\">[</span>expt<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; A literal transcription of the definition, with memoize doing the heavy lifting</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> conway<br/>  <span class=\"br0\">(</span>memoize<br/>    <span class=\"br0\">(</span><span class=\"kw1\">fn</span> <span class=\"br0\">[</span>x<span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> x <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"nu0\">1</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">+</span>  <span class=\"br0\">(</span><span class=\"sy0\">-&gt;</span> x <span class=\"kw1\">dec</span> conway conway<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> x <span class=\"kw1\">dec</span> conway <span class=\"br0\">(</span><span class=\"sy0\">-</span> x<span class=\"br0\">)</span> conway<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>N      <span class=\"br0\">(</span><span class=\"kw1\">drop</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"kw1\">range</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      pow2   <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span>expt <span class=\"nu0\">2</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span> N<span class=\"br0\">)</span><br/>      <span class=\"co1\">; Split the natural numbers into groups at each power of two</span><br/>      groups <span class=\"br0\">(</span>partition<span class=\"sy0\">-</span>by <span class=\"br0\">(</span><span class=\"kw1\">fn</span> <span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">filter</span> #<span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"sy0\">%</span> x<span class=\"br0\">)</span> pow2<span class=\"br0\">)</span><span class=\"br0\">)</span> N<span class=\"br0\">)</span><br/>      maxima <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span><span class=\"kw1\">map</span> conway <span class=\"sy0\">%</span><span class=\"br0\">)</span> groups<span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span><span class=\"kw1\">map</span> <span class=\"sy0\">/</span> <span class=\"sy0\">%</span>2 <span class=\"sy0\">%</span>1<span class=\"br0\">)</span> groups<span class=\"br0\">)</span>  <span class=\"co1\">; Each conway number divided by its index</span><br/>                  <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span><span class=\"kw1\">apply</span> max <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      m20    <span class=\"br0\">(</span><span class=\"kw1\">take</span> <span class=\"nu0\">20</span> maxima<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>println<br/>    <span class=\"br0\">(</span><span class=\"kw1\">take</span> <span class=\"nu0\">4</span> maxima<span class=\"br0\">)</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"sy0\">&gt;=</span> m20<span class=\"br0\">)</span>  <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">map</span> double m20<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>   <span class=\"co1\">; output the decimal forms</span></pre>"}, {"lang": "Common Lisp", "loc": 42, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>defparameter *hof-con*<br/>  <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> '<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">initial-contents</span> '<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">adjustable</span> t<br/>\t      <span class=\"sy0\">:</span><span class=\"me1\">element-type</span> '<span class=\"kw1\">integer</span> <span class=\"sy0\">:</span><span class=\"me1\">fill-pointer</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defparameter *hof-con-ratios*<br/>  <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> '<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">initial-contents</span> '<span class=\"br0\">(</span><span class=\"nu0\">1.0</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">adjustable</span> t<br/>\t      <span class=\"sy0\">:</span><span class=\"me1\">element-type</span> 'single-<span class=\"kw1\">float</span> <span class=\"sy0\">:</span><span class=\"me1\">fill-pointer</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> hof-con <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">l</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> *hof-con*<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> n <span class=\"kw1\">l</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> *hof-con* <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>extend-hof-con-sequence <span class=\"kw1\">l</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> extend-hof-con-sequence <span class=\"br0\">(</span><span class=\"kw1\">l</span> n<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for i from <span class=\"kw1\">l</span> below n <span class=\"kw1\">do</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>x <span class=\"br0\">(</span><span class=\"kw1\">aref</span> *hof-con* <span class=\"br0\">(</span><span class=\"nu0\">1</span>- i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t      <span class=\"br0\">(</span>hc <span class=\"br0\">(</span>+ <span class=\"br0\">(</span><span class=\"kw1\">aref</span> *hof-con* <span class=\"br0\">(</span><span class=\"nu0\">1</span>- x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t     <span class=\"br0\">(</span><span class=\"kw1\">aref</span> *hof-con* <span class=\"br0\">(</span>- i x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span>vector-push-extend hc *hof-con*<span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span>vector-push-extend <span class=\"br0\">(</span>/ hc <span class=\"br0\">(</span>+ i <span class=\"nu0\">1.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> *hof-con-ratios*<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">aref</span> *hof-con* <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> max-in-array-range <span class=\"br0\">(</span>arr id1 id2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>m <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>id <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>loop for i from <span class=\"br0\">(</span><span class=\"nu0\">1</span>- id1<span class=\"br0\">)</span> to <span class=\"br0\">(</span><span class=\"nu0\">1</span>- id2<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>\t <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>n <span class=\"br0\">(</span><span class=\"kw1\">aref</span> arr i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t   <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> n m<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">setq</span> m n id i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>values m <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ id<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> maxima <span class=\"br0\">(</span>po2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>hof-con <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> po2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for i from <span class=\"nu0\">1</span> below po2 <span class=\"kw1\">do</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>id1 <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>id2 <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span>multiple-value-bind <span class=\"br0\">(</span>m id<span class=\"br0\">)</span><br/>\t     <span class=\"br0\">(</span>max-in-array-range *hof-con-ratios* id1 id2<span class=\"br0\">)</span><br/>\t   <span class=\"br0\">(</span>format t <span class=\"st0\">\"Local maximum in [~A .. ~A]: ~A at n = ~A~%\"</span> id1 id2 m id<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> mallows <span class=\"br0\">(</span>po2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>n <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> po2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>hof-con n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"br0\">(</span><span class=\"nu0\">1</span>- n<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>- i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> *hof-con-ratios* i<span class=\"br0\">)</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>+ i <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 24, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> hofstadterConwaySequence<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">int</span> m<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> alist <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>m <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    alist<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> v <span class=\"sy0\">=</span> alist<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> k1 <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> lg2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">double</span> amax <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>n<span class=\"sy0\">;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">..</span> <span class=\"me1\">m</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        v <span class=\"sy0\">=</span> alist<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> alist<span class=\"br0\">[</span>v<span class=\"br0\">]</span> <span class=\"sy0\">+</span> alist<span class=\"br0\">[</span>n <span class=\"sy0\">-</span> v<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        amax <span class=\"sy0\">=</span> max<span class=\"br0\">(</span>amax<span class=\"sy0\">,</span> v <span class=\"sy0\">*</span> <span class=\"nu16\">1.0</span> <span class=\"sy0\">/</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>k1 <span class=\"sy0\">&amp;</span> n<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            writefln<span class=\"br0\">(</span><span class=\"st0\">\"Max in [2^%d, 2^%d]:\u00a0%f\"</span><span class=\"sy0\">,</span> lg2<span class=\"sy0\">,</span> lg2 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> amax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            amax <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            lg2<span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><br/>        k1 <span class=\"sy0\">=</span> n<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    hofstadterConwaySequence<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 30, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>decimals <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>cache<span class=\"sy0\">-</span>size <span class=\"nu0\">2000000</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>a n<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>a <span class=\"br0\">(</span>a <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>a <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"br0\">(</span>a <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>remember 'a #<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; memoize</span><br/>\u00a0<br/><span class=\"co1\">;; prints max a(n)/n in [2**i 2**i+1] intervals</span><br/><span class=\"co1\">;; return Mallows number checked up to 2**20</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>task  <span class=\"br0\">(</span>maxv<span class=\"br0\">)</span> <span class=\"br0\">(</span>start <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>end <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"br0\">(</span>mrange <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>for <span class=\"br0\">(</span><span class=\"br0\">(</span>i  <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range <span class=\"nu0\">1</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> maxv <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"br0\">(</span>for <span class=\"br0\">(</span><span class=\"br0\">(</span>n  <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range start end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> v <span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>a n<span class=\"br0\">)</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t#:when <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> v maxv<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> maxv v<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> mrange<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> maxv <span class=\"nu0\">0.55</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">set!</span> mrange end<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"br0\">(</span>printf <span class=\"st0\">\"[%d ..\u00a0%d]  \u2192  max a(n)/n: \u00a0%d \"</span> start end maxv<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> start end<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> end <span class=\"br0\">(</span><span class=\"sy0\">*</span> start <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; mallows</span><br/>\t<span class=\"br0\">(</span>for <span class=\"br0\">(</span><span class=\"br0\">(</span>n <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>range mrange <span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t#:break <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>a n<span class=\"br0\">)</span> n<span class=\"br0\">)</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> n <span class=\"br0\">)</span><br/>\t<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Eiffel", "loc": 62, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span><br/>\tAPPLICATION<br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\tmake<br/>\u00a0<br/><span class=\"kw1\">feature</span><br/>\u00a0<br/>\tmake<br/>\t\t\t<span class=\"co1\">--Tests the feature sequence.</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\tj, n, exp<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t\tmax<span class=\"sy0\">:</span> REAL_64<br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\texp <span class=\"sy0\">:=</span> <span class=\"nu0\">15</span><br/>\t\t\tn <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">^</span> exp<span class=\"br0\">)</span>.<span class=\"me1\">floor</span><br/>\t\t\tsequence <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">1</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> <span class=\"br0\">(</span>exp <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tmax <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t\t<span class=\"kw2\">from</span><br/>\t\t\t\t\tj <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">^</span> c.<span class=\"me1\">item</span><span class=\"br0\">)</span>.<span class=\"me1\">floor</span><br/>\t\t\t\t<span class=\"kw2\">until</span><br/>\t\t\t\t\tj <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">^</span> <span class=\"br0\">(</span>c.<span class=\"me1\">item</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\t\t<span class=\"kw2\">if</span> members <span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">/</span> j <span class=\"sy0\">&gt;</span> max <span class=\"kw2\">then</span><br/>\t\t\t\t\t\tmax <span class=\"sy0\">:=</span> members <span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">/</span> j<br/>\t\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\t\tj <span class=\"sy0\">:=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"Between 2^\"</span> <span class=\"sy0\">+</span> c.<span class=\"me1\">item</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"and 2^\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>c.<span class=\"me1\">item</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" the max is: \"</span> <span class=\"sy0\">+</span> max.<span class=\"me1\">out</span><span class=\"br0\">)</span><br/>\t\t\t\tio.<span class=\"me1\">new_line</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span><br/>\u00a0<br/>\tmembers<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+linked_list&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">LINKED_LIST</span></a> <span class=\"br0\">[</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><span class=\"br0\">]</span><br/>\t\t\t<span class=\"co1\">-- Members of the Hofstadter Conway $10000 sequence.</span><br/>\u00a0<br/>\tsequence <span class=\"br0\">(</span>n<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><span class=\"br0\">)</span><br/>\t\t\t<span class=\"co1\">-- Hofstadter Conway $10000 sequence up to 'n' in 'members'.</span><br/>\t\t<span class=\"kw2\">require</span><br/>\t\t\tn_positive<span class=\"sy0\">:</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\tlast<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">create</span> members.<span class=\"me1\">make</span><br/>\t\t\tmembers.<span class=\"me1\">extend</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\tmembers.<span class=\"me1\">extend</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">3</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> n <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tlast <span class=\"sy0\">:=</span> members.<span class=\"me1\">last</span><br/>\t\t\t\tmembers.<span class=\"me1\">extend</span> <span class=\"br0\">(</span>members <span class=\"br0\">[</span>last<span class=\"br0\">]</span> <span class=\"sy0\">+</span> members <span class=\"br0\">[</span>c.<span class=\"me1\">item</span> <span class=\"sy0\">-</span> last<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw2\">end</span><br/>\u00a0</pre>"}, {"lang": "Erlang", "loc": 37, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> hofstadter_conway <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>sequence<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> sequence_div_n<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">record</span><span class=\"br0\">(</span> power_of_2<span class=\"sy1\">,</span> <span class=\"br0\">{</span>div_n<span class=\"sy3\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> max<span class=\"sy3\">=</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span> min<span class=\"sy3\">=</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> n<span class=\"sy3\">=</span><span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">sequence</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">sequence</span><span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">sequence</span><span class=\"br0\">(</span> <span class=\"re5\">Up_to</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">Up_to</span> <span class=\"sy3\">&gt;=</span> <span class=\"nu0\">3</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"re5\">From_3</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"re5\">Up_to</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <span class=\"re5\">Dict</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">foldl</span><span class=\"br0\">(</span> <span class=\"kw1\">fun</span> sequence_dict<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/dict.html\"><span class=\"kw5\">dict</span></a>:<span class=\"re3\">from_list</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">From_3</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span> | <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/dict.html\"><span class=\"kw5\">dict</span></a>:<span class=\"re3\">fetch</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Dict</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">From_3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">sequence_div_n</span><span class=\"br0\">(</span> <span class=\"re5\">N</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"re5\">Sequence</span> <span class=\"sy3\">=</span> <span class=\"re3\">sequence</span><span class=\"br0\">(</span> <span class=\"re5\">N</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span> <span class=\"sy3\">/</span> <span class=\"re5\">X</span><span class=\"br0\">}</span> <span class=\"sy3\">||</span> <span class=\"br0\">{</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span><span class=\"br0\">}</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">zip</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Sequence</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>       <span class=\"br0\">[</span><span class=\"re5\">_First</span> | <span class=\"re5\">Rest</span><span class=\"br0\">]</span> <span class=\"sy3\">=</span> <span class=\"re3\">sequence_div_n</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">round</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/math.html\"><span class=\"kw5\">math</span></a>:<span class=\"re3\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>       <span class=\"br0\">{</span><span class=\"re5\">_Power</span><span class=\"sy1\">,</span> <span class=\"re5\">Powers</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">foldl</span><span class=\"br0\">(</span> <span class=\"kw1\">fun</span> max_between_power_of_2<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>#<span class=\"re7\">power_of_2</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"re5\">Rest</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>       <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Maximum between ~p and ~p is ~p for n=~p~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">X</span><span class=\"re8\">#</span><span class=\"re7\">power_of_2</span><span class=\"sy1\">.</span>min<span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"re8\">#</span><span class=\"re7\">power_of_2</span><span class=\"sy1\">.</span>max<span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"re8\">#</span><span class=\"re7\">power_of_2</span><span class=\"sy1\">.</span>div_n<span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"re8\">#</span><span class=\"re7\">power_of_2</span><span class=\"sy1\">.</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Powers</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">max_between_power_of_2</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">_Div_n</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>#<span class=\"re7\">power_of_2</span><span class=\"br0\">{</span>max<span class=\"sy3\">=</span><span class=\"re5\">N</span><span class=\"br0\">}</span><span class=\"sy3\">=</span><span class=\"re5\">P</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"br0\">{</span>#<span class=\"re7\">power_of_2</span><span class=\"br0\">{</span>max<span class=\"sy3\">=</span><span class=\"re5\">N</span> <span class=\"sy3\">*</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> min<span class=\"sy3\">=</span><span class=\"re5\">N</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">P</span> | <span class=\"re5\">Acc</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">max_between_power_of_2</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">Larger_div_n</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>#<span class=\"re7\">power_of_2</span><span class=\"br0\">{</span>div_n<span class=\"sy3\">=</span><span class=\"re5\">Div_n</span><span class=\"br0\">}</span><span class=\"sy3\">=</span><span class=\"re5\">P</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">Larger_div_n</span> <span class=\"sy3\">&gt;</span> <span class=\"re5\">Div_n</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"br0\">{</span><span class=\"re5\">P</span><span class=\"re8\">#</span><span class=\"re7\">power_of_2</span><span class=\"br0\">{</span>n<span class=\"sy3\">=</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> div_n<span class=\"sy3\">=</span><span class=\"re5\">Larger_div_n</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">max_between_power_of_2</span><span class=\"br0\">(</span> <span class=\"re5\">_</span><span class=\"sy1\">,</span> <span class=\"re5\">Both</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">Both</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">sequence_dict</span><span class=\"br0\">(</span> <span class=\"re5\">Key</span><span class=\"sy1\">,</span> <span class=\"re5\">Dict</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"re5\">Last_number</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/dict.html\"><span class=\"kw5\">dict</span></a>:<span class=\"re3\">fetch</span><span class=\"br0\">(</span> <span class=\"re5\">Key</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">Dict</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <span class=\"re5\">At_begining</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/dict.html\"><span class=\"kw5\">dict</span></a>:<span class=\"re3\">fetch</span><span class=\"br0\">(</span> <span class=\"re5\">Last_number</span><span class=\"sy1\">,</span> <span class=\"re5\">Dict</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <span class=\"re5\">At_end</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/dict.html\"><span class=\"kw5\">dict</span></a>:<span class=\"re3\">fetch</span><span class=\"br0\">(</span> <span class=\"re5\">Key</span> <span class=\"sy3\">-</span> <span class=\"re5\">Last_number</span><span class=\"sy1\">,</span> <span class=\"re5\">Dict</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <a href=\"http://erlang.org/doc/man/dict.html\"><span class=\"kw5\">dict</span></a>:<span class=\"re3\">store</span><span class=\"br0\">(</span> <span class=\"re5\">Key</span><span class=\"sy1\">,</span> <span class=\"re5\">At_begining</span> <span class=\"sy3\">+</span> <span class=\"re5\">At_end</span><span class=\"sy1\">,</span> <span class=\"re5\">Dict</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euler Math Toolbox", "loc": 29, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&gt;function hofstadter (n) ...<br/>$v=ones(1,n);<br/>$  loop 2 to n-1<br/>$    k=v{#};<br/>$    v{#+1}=v{k}+v{#-k+1};<br/>$  end<br/>$  return v<br/>$endfunction<br/>&gt;v=hofstadter(2^20);<br/>&gt;k=1:256; plot2d(v[k]/k):<br/>&gt;function hsmaxima (v,k) ...<br/>$  w=zeros(1,k);<br/>$  for j=1 to k<br/>$    i=2^(j-1):2^j;<br/>$    w[j]=max(v[i]/i);<br/>$  end;<br/>$  return w;<br/>$endfunction<br/>&gt;w=hsmaxima(v,20)<br/> [ 1  0.666666666667  0.666666666667  0.636363636364  0.608695652174<br/> 0.590909090909  0.576086956522  0.567415730337  0.559459459459<br/> 0.554937413074  0.550100874243  0.547462892648  0.544144747864<br/> 0.54244270878  0.540071097512  0.538784020584  0.537043657<br/> 0.536020067812  0.534645431078  0.533779229963 ]<br/>&gt;v1=flipx(cummax(flipx(v/(1:cols(v)))));<br/>&gt;max(nonzeros(v1&gt;0.55))<br/> 1489<br/>\u00a0</pre>"}, {"lang": "F#", "loc": 12, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> a <span class=\"sy0\">=</span> ResizeArray<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/><span class=\"kw1\">while</span> a.<span class=\"me1\">Count</span> <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  a.<span class=\"br0\">[</span>a.<span class=\"br0\">[</span>a.<span class=\"me1\">Count</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> a.<span class=\"br0\">[</span>a.<span class=\"me1\">Count</span> <span class=\"sy0\">-</span> a.<span class=\"br0\">[</span>a.<span class=\"me1\">Count</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">|&gt;</span> a.<span class=\"me1\">Add</span><br/><span class=\"kw1\">for</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">19</span> <span class=\"kw1\">do</span><br/>  <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"kw3\">max</span> <span class=\"br0\">[</span>|for i <span class=\"kw1\">in</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;&lt;</span> p .. <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;&lt;</span> p<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw4\">float</span> a.<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"kw4\">float</span> i|<span class=\"br0\">]</span><br/>  <span class=\"sy0\">|&gt;</span> printf <span class=\"st0\">\"Maximum in\u00a0%6d..%7d is\u00a0%g<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;&lt;</span> p<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;&lt;</span> p<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">let</span> mallows, _ <span class=\"sy0\">=</span> a <br/>                 <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">ofSeq</span><br/>                 <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">mapi</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> i n <span class=\"sy0\">-&gt;</span> i, n<span class=\"br0\">)</span><br/>                 <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">rev</span><br/>                 <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">find</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>i, n<span class=\"br0\">)</span>  <span class=\"sy0\">-&gt;</span> <span class=\"kw4\">float</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw4\">float</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span><br/>printfn <span class=\"st0\">\"Mallows number is\u00a0%d\"</span> mallows</pre>"}, {"lang": "Fortran", "loc": 47, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> conway<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"nu0\">20</span><span class=\"br0\">)</span>  <span class=\"co1\">! The sequence a(n)</span><br/>  <span class=\"kw3\">real</span>    <span class=\"sy0\">::</span> <span class=\"me2\">b</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"nu0\">20</span><span class=\"br0\">)</span>  <span class=\"co1\">! The sequence a(n)/n</span><br/>  <span class=\"kw3\">real</span>    <span class=\"sy0\">::</span> <span class=\"me2\">v</span>         <span class=\"co1\">! Max value in the range [2*i, 2**(i+1)]</span><br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">nl</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>     <span class=\"co1\">! The location of v in the array b(n)</span><br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, N, first, second, last, m<br/>\u00a0<br/>  <span class=\"co1\">! Populate a(n) and b(n)</span><br/>  a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>  b<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>1.0e0, 0.5e0<span class=\"br0\">]</span><br/>  N <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>  <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"nu0\">20</span><br/>     last <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/>     first <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>last<span class=\"br0\">)</span><br/>     second <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>N<span class=\"sy0\">-</span>last<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>     N <span class=\"sy0\">=</span> N<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>     a<span class=\"br0\">(</span>N<span class=\"sy0\">:</span>N<span class=\"br0\">)</span> <span class=\"sy0\">=</span> first <span class=\"sy0\">+</span> second<br/>     b<span class=\"br0\">(</span>N<span class=\"sy0\">:</span>N<span class=\"br0\">)</span> <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>N<span class=\"sy0\">:</span>N<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"kw3\">real</span><span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>  <span class=\"co1\">! Calculate the max values in the logarithmic ranges</span><br/>  m <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>,<span class=\"nu0\">19</span><br/>     v <span class=\"sy0\">=</span> <span class=\"kw4\">maxval</span><span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span>i<span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     nl <span class=\"sy0\">=</span> <span class=\"kw4\">maxloc</span><span class=\"br0\">(</span>b<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span>i<span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">'(2(a,i0),a,f8.6,a,i0)'</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span><br/>          <span class=\"st0\">'Max. between 2**'</span>, i,      <span class=\"sy0\">&amp;</span><br/>          <span class=\"st0\">' and 2**'</span>, <span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>,          <span class=\"sy0\">&amp;</span><br/>          <span class=\"st0\">' is '</span>, v,                  <span class=\"sy0\">&amp;</span><br/>          <span class=\"st0\">' at n = '</span>, <span class=\"nu0\">2</span><span class=\"sy0\">**</span>i<span class=\"sy0\">+</span>nl<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> v &lt; 0.55e0<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        m <span class=\"sy0\">=</span> i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>     <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>  <span class=\"co1\">! Calculate Mallows number</span><br/>  <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>m<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"sy0\">**</span>m,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>b<span class=\"br0\">(</span>i<span class=\"br0\">)</span> &gt; 0.55e0<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">exit</span><br/>     <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">'(a,i0)'</span><span class=\"br0\">)</span> <span class=\"st0\">'Mallows number = '</span>,i<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> conway<br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 32, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 13-07-2018</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span>, pow2 = <span class=\"nu0\">2</span>, p2 = <span class=\"nu0\">2</span> ^ pow2, peakpos, n, mallows<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> peak = <span class=\"nu0\">0.5</span>, r<br/><span class=\"kw1\">ReDim</span> a<span class=\"br0\">(</span><span class=\"nu0\">2</span> ^ <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> = <span class=\"nu0\">1</span><br/>a<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> = <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">For</span> n = <span class=\"nu0\">3</span> <span class=\"kw1\">To</span> <span class=\"nu0\">2</span> ^ <span class=\"nu0\">20</span><br/>    a<span class=\"br0\">(</span>n<span class=\"br0\">)</span> = a<span class=\"br0\">(</span>a<span class=\"br0\">(</span>n -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> + a<span class=\"br0\">(</span>n - a<span class=\"br0\">(</span>n -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    r = a<span class=\"br0\">(</span>n<span class=\"br0\">)</span> / n<br/>    <span class=\"kw1\">If</span> r &gt;= <span class=\"nu0\">0.55</span> <span class=\"kw1\">Then</span> mallows = n<br/>    <span class=\"kw1\">If</span> r &gt; peak <span class=\"kw1\">Then</span> peak = r\u00a0: peakpos = n<br/>    <span class=\"kw1\">If</span> n = p2 <span class=\"kw1\">Then</span><br/>        <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"Maximum between 2 ^ ## and 2 ^ ## is\"</span>; pow2 -<span class=\"nu0\">1</span>; pow2;<br/>        <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\" #.##### at n = \"</span>; peak;<br/>        <span class=\"kw1\">Print</span> peakpos<br/>        pow2 += <span class=\"nu0\">1</span><br/>        p2 = <span class=\"nu0\">2</span> ^ pow2<br/>        peak = <span class=\"nu0\">0.5</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Mallows number is \"</span>; mallows<br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "FutureBasic", "loc": 48, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>include \"ConsoleWindow\"<br/>\u00a0<br/>// Set width of tab<br/>def tab 9<br/>\u00a0<br/>dim as long Mallows, n, pow2, p2, pPos, uprLim<br/>dim as double p<br/>print<br/>\u00a0<br/>// Adjust array elements depending on size of sequence<br/>_maxArrayElements = 1200000<br/>\u00a0<br/>input \"Enter upper limit between 1 and 20 (Enter 20 gives 2^20): \"; uprLim<br/>\u00a0<br/>dim as double r<br/>dim as long a( _maxArrayElements )<br/>\u00a0<br/>if uprLim &lt; 1 or uprLim &gt; 20 then uprLim = 20<br/>\u00a0<br/>a(1) = 1<br/>a(2) = 1<br/>pow2 = 2<br/>p2 = 2 ^ pow2<br/>p = 0.5<br/>pPos = 0<br/>\u00a0<br/>print<br/>\u00a0<br/>for n = 3 to 2 ^ uprLim<br/>   a(n) = a( a( n-1 ) ) + a( n-a( n-1 ) )<br/>   r = a(n) / n<br/>      if r &gt;= 0.55 then Mallows = n<br/>      if r &gt; p <br/>         p = r<br/>         pPos = n<br/>      end if <br/>\u00a0<br/>      if n == p2<br/>         print \"Maximum of a(n)/n between\", \" 2^\"; pow2-1; \" and 2^\"; pow2,\" is \"; p;, \" at n = \"; pPos<br/>         pow2 = pow2 + 1<br/>         p2   = 2 ^ pow2<br/>         p    = 0.5<br/>      end if<br/>next<br/>print<br/>print \"Dr. Mallow's winning number is:\"; Mallows<br/>\u00a0</pre>"}, {"lang": "Go", "loc": 29, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    a <span class=\"sy2\">:=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">}</span> <span class=\"co1\">// ignore 0 element. work 1 based.</span><br/>    x <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span>  <span class=\"co1\">// last number in list</span><br/>    n <span class=\"sy2\">:=</span> <span class=\"nu0\">2</span>  <span class=\"co1\">// index of last number in list = len(a)-1</span><br/>    mallow <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> p <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> p &lt; <span class=\"nu0\">20</span><span class=\"sy1\">;</span> p<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        max <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><br/>        <span class=\"kw1\">for</span> nextPot <span class=\"sy2\">:=</span> n<span class=\"sy3\">*</span><span class=\"nu0\">2</span><span class=\"sy1\">;</span> n &lt; nextPot<span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>            n <span class=\"sy2\">=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>a<span class=\"sy1\">)</span> <span class=\"co1\">// advance n</span><br/>            x <span class=\"sy2\">=</span> a<span class=\"sy1\">[</span>x<span class=\"sy1\">]</span><span class=\"sy3\">+</span>a<span class=\"sy1\">[</span>n<span class=\"sy3\">-</span>x<span class=\"sy1\">]</span><br/>            a <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>a<span class=\"sy1\">,</span> x<span class=\"sy1\">)</span><br/>            f <span class=\"sy2\">:=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>x<span class=\"sy1\">)</span><span class=\"sy3\">/</span><span class=\"kw4\">float64</span><span class=\"sy1\">(</span>n<span class=\"sy1\">)</span><br/>            <span class=\"kw1\">if</span> f &gt; max <span class=\"sy1\">{</span><br/>                max <span class=\"sy2\">=</span> f<br/>            <span class=\"sy1\">}</span><br/>            <span class=\"kw1\">if</span> f &gt;<span class=\"sy2\">=</span> <span class=\"sy3\">.</span><span class=\"nu0\">55</span> <span class=\"sy1\">{</span><br/>                mallow <span class=\"sy2\">=</span> n<br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"max between 2^%d and 2^%d was\u00a0%f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> p<span class=\"sy1\">,</span> p<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> max<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"winning number\"</span><span class=\"sy1\">,</span> mallow<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 25, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a><br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Array<br/><span class=\"kw1\">import</span> Text<span class=\"sy0\">.</span>Printf<br/>\u00a0<br/>hc <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> Array <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>hc n <span class=\"sy0\">=</span> arr<br/>  <span class=\"kw1\">where</span> arr <span class=\"sy0\">=</span> listArray <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> n<span class=\"br0\">)</span> <span class=\"sy0\">$</span> <span class=\"nu0\">1</span>\u00a0: <span class=\"nu0\">1</span>\u00a0: <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <span class=\"br0\">(</span>f <span class=\"br0\">(</span>arr<span class=\"sy0\">!</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">3</span> <span class=\"sy0\">..</span> n<span class=\"br0\">]</span><br/>        f a i <span class=\"sy0\">=</span> a <span class=\"br0\">(</span>a <span class=\"sy0\">$</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> a <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> a <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>printMaxima <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>printMaxima <span class=\"br0\">(</span>n<span class=\"sy0\">,</span> <span class=\"br0\">(</span>pos<span class=\"sy0\">,</span> m<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    printf <span class=\"st0\">\"Max between 2^%-2d and 2^%-2d is\u00a0%1.5f at n =\u00a0%6d<span class=\"es0\">\\n</span>\"</span><br/>                             n    <span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>        m        pos<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> printMaxima maxima<br/>    printf <span class=\"st0\">\"Mallows's number is\u00a0%d<span class=\"es0\">\\n</span>\"</span> mallows<br/>  <span class=\"kw1\">where</span><br/>    hca <span class=\"sy0\">=</span> hc <span class=\"sy0\">$</span> <span class=\"nu0\">2</span><span class=\"sy0\">^</span><span class=\"nu0\">20</span><br/>    hc<span class=\"st0\">' n  = fromIntegral (hca!n) / fromIntegral n<br/>    maxima = zip [0..] $ map max powers<br/>    max seq = maximumBy (comparing snd) $ zip seq (map hc'</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:seq\"><span class=\"kw3\">seq</span></a><span class=\"br0\">)</span><br/>    powers <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <span class=\"br0\">(</span>\\n <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">^</span>n <span class=\"sy0\">..</span> <span class=\"nu0\">2</span><span class=\"sy0\">^</span><span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">19</span><span class=\"br0\">]</span><br/>    mallows <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:last\"><span class=\"kw3\">last</span></a><span class=\"sy0\">.</span>takeWhile <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> hc<span class=\"st0\">') $ [2^20, 2^20 - 1 .. 1]</span></pre>"}, {"lang": "Icon and Unicon", "loc": 16, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"kw4\">args</span><span class=\"br0\">)</span><br/>    m       <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"sy1\">!</span><span class=\"kw4\">args</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"nu0\">20</span><br/>    nextNum <span class=\"sy1\">:=</span> <span class=\"kw1\">create</span> <span class=\"kw4\">put</span><span class=\"br0\">(</span>A <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span> <span class=\"sy1\">|</span> <span class=\"nu0\">1</span> <span class=\"sy1\">|</span> <span class=\"sy1\">|</span>A<span class=\"br0\">[</span>A<span class=\"br0\">[</span><span class=\"sy1\">*</span>A<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy1\">+</span>A<span class=\"br0\">[</span><span class=\"sy1\">-</span>A<span class=\"br0\">[</span><span class=\"sy1\">*</span>A<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"sy1\">*</span>A<span class=\"br0\">]</span><br/>    p2      <span class=\"sy1\">:=</span> <span class=\"nu0\">2</span> <span class=\"sy1\">^</span> <span class=\"br0\">(</span>p <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    maxv    <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">every</span> n <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">^</span>m<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> maxv <span class=\"sy1\">&lt;:=</span> <span class=\"br0\">(</span>x <span class=\"sy1\">:=</span> <span class=\"sy1\">@</span>nextNum <span class=\"sy1\">/</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> maxm <span class=\"sy1\">:=</span> n<br/>        <span class=\"kw1\">if</span> x <span class=\"sy1\">&gt;=</span> <span class=\"nu0\">0.55</span> <span class=\"kw1\">then</span> mallows <span class=\"sy1\">:=</span> n   <span class=\"co1\"># Want *this* n, not next one!</span><br/>        <span class=\"kw1\">if</span> n <span class=\"sy1\">=</span> p2 <span class=\"kw1\">then</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Max between 2^\"</span><span class=\"sy1\">,</span>p<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"st0\">\" and 2^\"</span><span class=\"sy1\">,</span>p<span class=\"sy1\">,</span><span class=\"st0\">\" is \"</span><span class=\"sy1\">,</span>maxv<span class=\"sy1\">,</span><span class=\"st0\">\" at n = \"</span><span class=\"sy1\">,</span>maxm<span class=\"br0\">)</span><br/>            p2 <span class=\"sy1\">:=</span> <span class=\"nu0\">2</span> <span class=\"sy1\">^</span> <span class=\"br0\">(</span>p <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            maxv <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Mallows's number is \"</span><span class=\"sy1\">,\\</span>mallows <span class=\"sy1\">|</span> <span class=\"st0\">\"NOT found!\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">   hc10k =:  , ] +/@:{~ <span class=\"sy0\">(</span>,&amp;&lt;: -.<span class=\"sy0\">)</span>@{:    <span class=\"co1\">NB.  Actual sequence a(n)</span><br/>   AnN   =: \u00a0% <span class=\"nu0\">1</span><a class=\"__cf_email__\" data-cfemail=\"f1da98dfb1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:#                  <span class=\"co1\">NB.  a(n)/n</span><br/>   MxAnN =:  &gt;./;.<span class=\"nu0\">1</span>~ <span class=\"nu0\">2</span> <span class=\"sy0\">(</span>=&lt;.<span class=\"sy0\">)</span>@:^. <span class=\"nu0\">1</span><a class=\"__cf_email__\" data-cfemail=\"a18ac88fe1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a># <span class=\"co1\">NB.  Maxima of a(n)/n between successive powers of 2</span></pre>"}, {"lang": "Java", "loc": 31, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> HofCon<br/><span class=\"br0\">{</span><br/> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/> <span class=\"br0\">{</span><br/>  doSqnc<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"br0\">}</span><br/> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> doSqnc<span class=\"br0\">(</span><span class=\"kw4\">int</span> m<span class=\"br0\">)</span><br/> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a_list <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>m <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> max_df <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> p2_max <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> k1 <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <br/>  <span class=\"kw4\">int</span> lg2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">double</span> amax <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  a_list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> v <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> n <span class=\"sy0\">&lt;=</span> m<span class=\"sy0\">;</span> n<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>   v <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a_list<span class=\"br0\">[</span>v<span class=\"br0\">]</span> <span class=\"sy0\">+</span> a_list<span class=\"br0\">[</span>n <span class=\"sy0\">-</span> v<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span>amax <span class=\"sy0\">&lt;</span> v <span class=\"sy0\">*</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> n<span class=\"br0\">)</span><br/>    amax <span class=\"sy0\">=</span> v <span class=\"sy0\">*</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> n<span class=\"sy0\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">==</span> <span class=\"br0\">(</span>k1 <span class=\"sy0\">&amp;</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Maximum between 2^%d and 2^%d was\u00a0%f<span class=\"es0\">\\n</span>\"</span>, lg2, lg2 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, amax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    amax <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    lg2<span class=\"sy0\">++;</span><br/>   <span class=\"br0\">}</span><br/>   k1 <span class=\"sy0\">=</span> n<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 25, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> hofst_10k <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> memo <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">var</span> a <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">var</span> result <span class=\"sy0\">=</span> memo<span class=\"br0\">[</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">typeof</span> result <span class=\"sy0\">!==</span> <span class=\"st0\">'number'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tresult <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>a<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>a<span class=\"br0\">(</span>n<span class=\"sy0\">-</span>a<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<br/>\t\t\tmemo<span class=\"br0\">[</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> result<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span>\t<br/>\t\t<span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> a<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> maxima_between_twos <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>exp<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> current_max <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>exp<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>exp<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tcurrent_max <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">max</span><span class=\"br0\">(</span>current_max<span class=\"sy0\">,</span> hofst_10k<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">/</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> current_max<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tconsole.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">\"Maxima between 2^\"</span><span class=\"sy0\">+</span>i<span class=\"sy0\">+</span><span class=\"st0\">\"-2^\"</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" is: \"</span><span class=\"sy0\">+</span>maxima_between_twos<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 38, "block": "<pre class=\"text highlighted_source\"># v0.6<br/>\u00a0<br/># Task 1<br/>function hofstadterconway(n::Integer)::Vector{Int}<br/>    rst = fill(1, n)<br/>    for i in 3:n<br/>        rst[i] = rst[rst[i - 1]] + rst[i - rst[i - 1]]<br/>    end<br/>    return rst<br/>end<br/>\u00a0<br/>function hcfraction(n::Integer)::Vector{Float64}<br/>    rst = Array{Float64}(n)<br/>    for (i, a) in enumerate(hofstadterconway(n))<br/>        rst[i] = abs(a) / i<br/>    end<br/>    return rst<br/>end<br/>\u00a0<br/># Task 2<br/>seq = hcfraction(2 ^ 20)<br/>for i in 1:20<br/>    a, b = 2 ^ (i - 1), 2 ^ i<br/>    @printf(\"max value of a(n)/n in\u00a0%6i &lt; n &lt;\u00a0%7i =\u00a0%5.3f\\n\", a, b, maximum(seq[a:b]))<br/>end<br/>\u00a0<br/># Task 3<br/>function lastindex(val::Float64)<br/>    r, p = 1, 0<br/>    # Find the range of 2 power in which the maximum is &lt; val<br/>    seq = hcfraction(2 ^ 15)<br/>    while maximum(seq[2^p:2^(p+1)]) &gt; val; p += 1 end<br/>    r = 2 ^ (p + 1)<br/>    while seq[r] &lt; val; r -= 1 end<br/>    return r<br/>end<br/>\u00a0<br/>println(\"You too might have won \\$1000 with the mallows number of \", lastindex(0.55))</pre>"}, {"lang": "Kotlin", "loc": 37, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> limit <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> shl <span class=\"nu0\">20</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> a <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>limit<span class=\"br0\">)</span><br/>    a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    a<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>n in <span class=\"nu0\">3</span> until limit<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>n - <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        a<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>p<span class=\"br0\">]</span> + a<span class=\"br0\">[</span>n - p<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"     Range          Maximum\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"----------------   --------\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> pow2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> p <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> max <span class=\"sy0\">=</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>n in <span class=\"nu0\">2</span> until limit<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>n<span class=\"br0\">]</span>.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span> / n<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>r <span class=\"sy0\">&gt;</span> max<span class=\"br0\">)</span> max <span class=\"sy0\">=</span> r<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> pow2 <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"2 ^ ${\"</span><span class=\"sy0\">%</span>2d<span class=\"st0\">\".format(p - 1)} to 2 ^ ${\"</span><span class=\"sy0\">%</span>2d<span class=\"st0\">\".format(p)}   ${\"</span><span class=\"sy0\">%</span>f<span class=\"st0\">\".format(max)}\"</span><span class=\"br0\">)</span><br/>            pow2 <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><br/>            p++<br/>            max <span class=\"sy0\">=</span> r<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> prize <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>n in limit - <span class=\"nu0\">1</span> downTo <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>a<span class=\"br0\">[</span>n<span class=\"br0\">]</span>.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span> / n <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            prize <span class=\"sy0\">=</span> n<br/>            break<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Mallows' number = $prize\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 5, "block": "<pre class=\"text highlighted_source\">a[1]\u00a0:= 1; a[2]\u00a0:= 1;<br/>a[n_]\u00a0:= a[n] = a[a[n-1]] + a[n-a[n-1]]<br/>\u00a0<br/>Map[Print[\"Max value: \",Max[Table[a[n]/n//N,{n,2^#,2^(#+1)}]],\" for n between 2^\",#,\" and 2^\",(#+1)]&amp; , Range[19]]<br/>n=2^20; While[(a[n]/n//N)&lt;0.55,n--]; Print[\"Mallows number: \",n]</pre>"}, {"lang": "MATLAB / Octave", "loc": 7, "block": "<pre class=\"matlab highlighted_source\"> <span class=\"kw1\">function</span> Q = HCsequence<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/>  Q = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/zeros.html\"><span class=\"kw2\">zeros</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span>,N<span class=\"br0\">)</span>;<br/>  Q<span class=\"br0\">(</span><span class=\"nu0\">1</span>:<span class=\"nu0\">2</span><span class=\"br0\">)</span> = <span class=\"nu0\">1</span>;  <br/>  <span class=\"kw1\">for</span> n = <span class=\"nu0\">3</span>:N, <br/>    Q<span class=\"br0\">(</span>n<span class=\"br0\">)</span> = Q<span class=\"br0\">(</span>Q<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>+Q<span class=\"br0\">(</span>n-Q<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">end</span>; <br/><span class=\"kw1\">end</span>;</pre>"}, {"lang": "Nim", "loc": 21, "block": "<pre class=\"text highlighted_source\">import strutils<br/>\u00a0<br/>const last = 1 shl 20<br/>\u00a0<br/>var aList: array[last + 1, int]<br/>aList[0..2] = [-50_000, 1, 1]<br/>var<br/>  v    = aList[2]<br/>  k1   = 2<br/>  lg2  = 1<br/>  aMax = 0.0<br/>\u00a0<br/>for n in 3..last:<br/>  v = aList[v] + aList[n-v]<br/>  aList[n] = v<br/>  aMax = max(aMax, v.float / n.float)<br/>  if (k1 and n) == 0:<br/>    echo \"Maximum between 2^$# and 2^$# was $#\".format(lg2, lg2+1, aMax)<br/>    aMax = 0<br/>    inc lg2<br/>  k1 = n</pre>"}, {"lang": "Objeck", "loc": 40, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> HofCon <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      DoSqnc<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> <span class=\"kw1\">native</span> <span class=\"sy0\">:</span> DoSqnc<span class=\"br0\">(</span>m <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      a_list <span class=\"sy0\">:=</span> Int<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">[</span>m <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      max_df <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>      p2_max <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>      k1 <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <br/>      lg2 <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>      amax <span class=\"sy0\">:=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      a_list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <br/>      a_list<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      v <span class=\"sy0\">:=</span> a_list<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span>n <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> n <span class=\"sy0\">&lt;=</span> m<span class=\"sy0\">;</span> n<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        r <span class=\"sy0\">:=</span> a_list<span class=\"br0\">[</span>v<span class=\"br0\">]</span> <span class=\"sy0\">+</span> a_list<span class=\"br0\">[</span>n <span class=\"sy0\">-</span> v<span class=\"br0\">]</span><span class=\"sy0\">;</span>  <br/>        v <span class=\"sy0\">:=</span> r<span class=\"sy0\">;</span><br/>        a_list<span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> r<span class=\"sy0\">;</span>  <br/>\u00a0<br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>amax <span class=\"sy0\">&lt;</span> v <span class=\"sy0\">*</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          amax <span class=\"sy0\">:=</span> v <span class=\"sy0\">*</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> n<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>k1 and n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          IO.Console<span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"Maximum between 2^\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span>lg2<span class=\"br0\">)</span><br/>            <span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\" and 2^\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span>lg2 <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\" was \"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span>amax<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>          amax <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>          lg2<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        k1 <span class=\"sy0\">:=</span> n<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Oforth", "loc": 18, "block": "<pre class=\"text highlighted_source\">: hofstadter(n)<br/>| l i |<br/>   ListBuffer newSize(n) dup add(1) dup add(1) -&gt;l<br/>   n 2 - loop: i [ l at(l last) l at(l size l last - 1+ ) + l add ]<br/>   l dup freeze\u00a0;<br/>\u00a0<br/>: hofTask<br/>| h m i |<br/>   2 20 pow -&gt;m<br/>   hofstadter(m) m seq zipWith(#[ tuck asFloat / swap Pair new ]) -&gt;h<br/>\u00a0<br/>   19 loop: i [<br/>      i . \"^2 ==&gt;\" . <br/>      h extract(2 i pow , 2 i 1+ pow) reduce(#maxKey) println<br/>      ]<br/>\u00a0<br/>   \"Mallows number ==&gt;\" . h reverse detect(#[ first 0.55 &gt;= ], true) println <br/>;   </pre>"}, {"lang": "Oz", "loc": 27, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">local</span><br/>     Cache = <span class=\"br0\">{</span>Dictionary<span class=\"sy0\">.</span>new<span class=\"br0\">}</span><br/>     Cache<span class=\"sy0\">.</span>1 <span class=\"sy0\">:=</span> 1<br/>     Cache<span class=\"sy0\">.</span>2 <span class=\"sy0\">:=</span> 1<br/>  <span class=\"kw1\">in</span><br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">A</span> N<span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span>Not <span class=\"br0\">{</span>Dictionary<span class=\"sy0\">.</span>member Cache N<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"kw1\">then</span><br/>           Cache<span class=\"sy0\">.</span>N <span class=\"sy0\">:=</span> <span class=\"br0\">{</span>A <span class=\"br0\">{</span>A N<span class=\"sy0\">-</span>1<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy0\">+</span> <span class=\"br0\">{</span>A N<span class=\"sy0\">-</span><span class=\"br0\">{</span>A N<span class=\"sy0\">-</span>1<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">end</span><br/>        Cache<span class=\"sy0\">.</span>N<br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  Float = Int<span class=\"sy0\">.</span>toFloat<br/>\u00a0<br/>  <span class=\"kw1\">for</span> I <span class=\"kw1\">in</span> 0<span class=\"sy0\">..</span>19 <span class=\"kw1\">do</span><br/>     Range = <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>number <span class=\"br0\">{</span>Pow 2 I<span class=\"br0\">}</span> <span class=\"br0\">{</span>Pow 2 I<span class=\"sy0\">+</span>1<span class=\"br0\">}</span> 1<span class=\"br0\">}</span><br/>     RelativeValues = <span class=\"br0\">{</span>Map Range<br/>                       <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> N<span class=\"br0\">}</span><br/>                          <span class=\"br0\">{</span>Float <span class=\"br0\">{</span>A N<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>                          <span class=\"sy0\">/</span> <span class=\"br0\">{</span>Float N<span class=\"br0\">}</span><br/>                       <span class=\"kw1\">end</span><span class=\"br0\">}</span><br/>     Maximum = <span class=\"br0\">{</span>FoldL RelativeValues Max 0<span class=\"sy0\">.</span>0<span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"st0\">\"Max. between 2^\"</span><span class=\"sy0\">#</span>I<span class=\"sy0\">#</span><span class=\"st0\">\" and 2^\"</span><span class=\"sy0\">#</span>I<span class=\"sy0\">+</span>1<span class=\"sy0\">#</span><span class=\"st0\">\": \"</span><span class=\"sy0\">#</span>Maximum<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span></pre>"}, {"lang": "PARI/GP", "loc": 3, "block": "<pre class=\"parigp highlighted_source\">HC<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span>my<span class=\"br0\">(</span>a<span class=\"sy0\">=</span><span class=\"kw1\">vectorsmall</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>a<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>a<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">3</span><span class=\"sy0\">,</span>n<span class=\"sy0\">,</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span>a<span class=\"br0\">[</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>a<span class=\"sy0\">;</span><br/>maxima<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span>my<span class=\"br0\">(</span>a<span class=\"sy0\">=</span>HC<span class=\"br0\">(</span><span class=\"nu1\">1</span><span class=\"sy0\">&lt;&lt;</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span>m<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">vector</span><span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>k<span class=\"sy0\">,</span>m<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">&lt;&lt;</span>k<span class=\"sy0\">+</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"sy0\">&lt;&lt;</span><span class=\"br0\">(</span>k<span class=\"sy0\">+</span><span class=\"nu1\">1</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>m<span class=\"sy0\">=</span><span class=\"kw1\">max</span><span class=\"br0\">(</span>m<span class=\"sy0\">,</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">/</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">forstep</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span>#a<span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"sy0\">,-</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">/</span>i<span class=\"sy0\">&gt;=</span><span class=\"nu2\">.55</span><span class=\"sy0\">,</span><span class=\"kw1\">return</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 121, "block": "<pre class=\"pascal highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> HofStadterConway<span class=\"sy1\">;</span><br/><span class=\"kw1\">const</span><br/>  Pot2 <span class=\"sy3\">=</span> <span class=\"nu0\">20</span><span class=\"sy1\">;</span><span class=\"co1\">// tested with 30 -&gt; 4 GB;</span><br/><span class=\"kw1\">type</span><br/>  tfeld <span class=\"sy3\">=</span> <span class=\"kw4\">array</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">..</span><span class=\"nu0\">1</span> <span class=\"kw1\">shl</span> Pot2<span class=\"br0\">]</span> <span class=\"kw1\">of</span> LongWord<span class=\"sy1\">;</span><br/>  tpFeld <span class=\"sy3\">=</span> <span class=\"sy2\">^</span>tFeld<span class=\"sy1\">;</span><br/>  tMaxPos <span class=\"sy3\">=</span> <span class=\"kw4\">record</span><br/>              mpMax <span class=\"sy1\">:</span> double<span class=\"sy1\">;</span><br/>              mpValue<span class=\"sy1\">,</span><br/>              mpPos <span class=\"sy1\">:</span> longWord<span class=\"sy1\">;</span><br/>            <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  tArrMaxPos <span class=\"sy3\">=</span> <span class=\"kw4\">array</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">..</span><span class=\"me1\">Pot2</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> tMaxPos<span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  a <span class=\"sy1\">:</span> tpFeld<span class=\"sy1\">;</span><br/>  MaxPos <span class=\"sy1\">:</span> tArrMaxPos<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> Init<span class=\"br0\">(</span>a<span class=\"sy1\">:</span>tpFeld<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  n<span class=\"sy1\">,</span>k<span class=\"sy1\">:</span> LongWord<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  a<span class=\"sy2\">^</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>  a<span class=\"sy2\">^</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>  <span class=\"co1\">//a[n]\u00a0:= a[a[n-1]]+a[n-a[n-1]];</span><br/>  <span class=\"co1\">//k\u00a0:= a[n-1]</span><br/>  k <span class=\"sy1\">:</span><span class=\"sy3\">=</span> a<span class=\"sy2\">^</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">For</span> n <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">3</span> <span class=\"kw1\">to</span> High<span class=\"br0\">(</span>a<span class=\"sy2\">^</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">Begin</span><br/>    k <span class=\"sy1\">:</span><span class=\"sy3\">=</span> a<span class=\"sy2\">^</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy3\">+</span>a<span class=\"sy2\">^</span><span class=\"br0\">[</span>n<span class=\"sy3\">-</span>k<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    a<span class=\"sy2\">^</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> k<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> GetMax<span class=\"br0\">(</span>a<span class=\"sy1\">:</span>tpFeld<span class=\"sy1\">;</span>starts<span class=\"sy1\">,</span>ends<span class=\"sy1\">:</span>LongWord<span class=\"br0\">)</span><span class=\"sy1\">:</span>tMaxPos<span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  posMax <span class=\"sy1\">:</span> LongWord<span class=\"sy1\">;</span><br/>  r<span class=\"sy1\">,</span><br/>  max <span class=\"sy1\">:</span> double<span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  posMax<span class=\"sy1\">:</span><span class=\"sy3\">=</span> starts<span class=\"sy1\">;</span><br/>  max <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">repeat</span><br/>    r <span class=\"sy1\">:</span><span class=\"sy3\">=</span> a<span class=\"sy2\">^</span><span class=\"br0\">[</span>starts<span class=\"br0\">]</span><span class=\"sy3\">/</span> starts<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">IF</span> max &lt; r <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">Begin</span><br/>      max <span class=\"sy1\">:</span><span class=\"sy3\">=</span> r<span class=\"sy1\">;</span><br/>      posMax <span class=\"sy1\">:</span><span class=\"sy3\">=</span> starts<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>    inc<span class=\"br0\">(</span>starts<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">until</span> starts &gt;<span class=\"sy3\">=</span> ends<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">with</span> GetMax <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">Begin</span><br/>    mpPos<span class=\"sy1\">:</span><span class=\"sy3\">=</span> posMax<span class=\"sy1\">;</span><br/>    mpValue <span class=\"sy1\">:</span><span class=\"sy3\">=</span> a<span class=\"sy2\">^</span><span class=\"br0\">[</span>posMax<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    mpMax<span class=\"sy1\">:</span><span class=\"sy3\">=</span> max<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> SearchMax<span class=\"br0\">(</span>a<span class=\"sy1\">:</span>tpFeld<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  ends<span class=\"sy1\">,</span>idx <span class=\"sy1\">:</span> LongWord<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  idx <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  ends <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">2</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">while</span> ends &lt;<span class=\"sy3\">=</span>  High<span class=\"br0\">(</span>a<span class=\"sy2\">^</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">Begin</span><br/>    MaxPos<span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"sy1\">:</span><span class=\"sy3\">=</span>GetMax<span class=\"br0\">(</span>a<span class=\"sy1\">,</span>ends <span class=\"kw1\">shr</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span>ends<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    ends <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">2</span><span class=\"sy3\">*</span>ends<span class=\"sy1\">;</span><br/>    inc<span class=\"br0\">(</span>idx<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> OutputMax<span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  i <span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">For</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Low<span class=\"br0\">(</span>MaxPos<span class=\"br0\">)</span> <span class=\"kw1\">to</span> High<span class=\"br0\">(</span>MaxPOs<span class=\"br0\">)</span>  <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">with</span> MaxPos<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">Begin</span><br/>      <span class=\"kw3\">Write</span><span class=\"br0\">(</span><span class=\"st0\">'Max between 2^'</span><span class=\"sy1\">,</span>i<span class=\"sy1\">:</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"st0\">' and 2^'</span><span class=\"sy1\">,</span>i<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">:</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>mpMax<span class=\"sy1\">:</span><span class=\"nu0\">14</span><span class=\"sy1\">:</span><span class=\"nu0\">11</span><span class=\"sy1\">,</span><span class=\"st0\">' at '</span><span class=\"sy1\">,</span>mpPos<span class=\"sy1\">:</span><span class=\"nu0\">9</span><span class=\"sy1\">,</span><span class=\"st0\">' value\u00a0:'</span><span class=\"sy1\">,</span>mpValue<span class=\"sy1\">:</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> SearchLastPos<span class=\"br0\">(</span>a<span class=\"sy1\">:</span>tpFeld<span class=\"sy1\">;</span>limit<span class=\"sy1\">:</span> double<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">LongInt</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  i<span class=\"sy1\">,</span>l <span class=\"sy1\">:</span> <span class=\"kw4\">LongInt</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  Limit <span class=\"sy1\">:</span><span class=\"sy3\">=</span> limit<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>Limit&gt;<span class=\"nu0\">1.0</span> <span class=\"br0\">)</span> <span class=\"kw1\">OR</span> <span class=\"br0\">(</span>Limit &lt; <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>  <span class=\"kw1\">Begin</span><br/>    SearchLastPos <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>    EXIT<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i&lt;<span class=\"sy3\">=</span>High<span class=\"br0\">(</span>MaxPos<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw3\">AND</span>  <span class=\"br0\">(</span>MaxPos<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">.</span><span class=\"me1\">mpMax</span> &gt; Limit<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    inc<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  dec<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  l <span class=\"sy1\">:</span><span class=\"sy3\">=</span> MaxPos<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">.</span><span class=\"me1\">mpPos</span><span class=\"sy1\">;</span><br/>  i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">shl</span> <span class=\"br0\">(</span>i<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>l&lt; i<span class=\"br0\">)</span> <span class=\"kw3\">AND</span> <span class=\"br0\">(</span>a<span class=\"sy2\">^</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy3\">/</span>i &lt; limit<span class=\"br0\">)</span>  <span class=\"kw1\">do</span><br/>    dec<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  SearchLastPos <span class=\"sy1\">:</span><span class=\"sy3\">=</span> i<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  p <span class=\"sy1\">:</span> <span class=\"kw4\">Pointer</span><span class=\"sy1\">;</span><br/>  l <span class=\"sy1\">:</span> double<span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  <span class=\"co1\">//using getmem because FPCs new is limited to 2^31-1 Byte for the test 2^30 )</span><br/>  getmem<span class=\"br0\">(</span>p<span class=\"sy1\">,</span>SizeOf<span class=\"br0\">(</span>tfeld<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  a <span class=\"sy1\">:</span><span class=\"sy3\">=</span> p<span class=\"sy1\">;</span><br/>  Init<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  SearchMax<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  outputMax<span class=\"sy1\">;</span><br/>  l<span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0.55</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Mallows number with limit '</span><span class=\"sy1\">,</span>l<span class=\"sy1\">:</span><span class=\"nu0\">10</span><span class=\"sy1\">:</span><span class=\"nu0\">8</span><span class=\"sy1\">,</span><span class=\"st0\">' at '</span><span class=\"sy1\">,</span>SearchLastPos<span class=\"br0\">(</span>a<span class=\"sy1\">,</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  freemem<span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 26, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> warnings <span class=\"sy0\">;</span> <br/><span class=\"kw2\">use</span> strict <span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$limit</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">**</span> <span class=\"nu0\">20</span> <span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@numbers</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$mallows</span> <span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$max_i</span> <span class=\"sy0\">;</span><br/><span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span> <span class=\"nu0\">3</span><span class=\"sy0\">..</span><span class=\"re0\">$limit</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"br0\">(</span> <span class=\"re0\">@numbers</span> <span class=\"sy0\">,</span> <span class=\"re0\">$numbers</span><span class=\"br0\">[</span> <span class=\"re0\">$numbers</span><span class=\"br0\">[</span> <span class=\"re0\">$i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$numbers</span><span class=\"br0\">[</span> <span class=\"re0\">$i</span> <span class=\"sy0\">-</span> <span class=\"re0\">$numbers</span><span class=\"br0\">[</span> <span class=\"re0\">$i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw1\">my</span> <span class=\"re0\">$rangelimit</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">;</span> <span class=\"re0\">$rangelimit</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span> <span class=\"sy0\">;</span> <span class=\"re0\">$rangelimit</span><span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span><br/>   <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">**</span> <span class=\"re0\">$rangelimit</span> <span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"sy0\">**</span> <span class=\"br0\">(</span> <span class=\"re0\">$rangelimit</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">my</span> <span class=\"re0\">$rat</span> <span class=\"sy0\">=</span> <span class=\"re0\">$numbers</span><span class=\"br0\">[</span> <span class=\"re0\">$i</span> <span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$i</span> <span class=\"sy0\">;</span><br/>      <span class=\"re0\">$mallows</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <span class=\"kw1\">if</span> <span class=\"re0\">$rat</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0.55</span> <span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$rat</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$max</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"re0\">$rat</span> <span class=\"sy0\">;</span><br/>\t <span class=\"re0\">$max_i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$upperlimit</span> <span class=\"sy0\">=</span> <span class=\"re0\">$rangelimit</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">;</span><br/>   <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Between 2 ^ $rangelimit and 2 ^ $upperlimit the maximum value is $max at $max_i\u00a0!<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"The prize would have been won at $mallows\u00a0!<span class=\"es0\">\\n</span>\"</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 13, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@a</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$p</span> <span class=\"br0\">{</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$p</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$n</span><span class=\"sy0\">++</span> <span class=\"sy0\">-</span> <span class=\"re0\">$p</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"sy0\">...</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$last55</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">19</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$power</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@range</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"re0\">$power</span> <span class=\"sy0\">..</span> <span class=\"nu0\">2</span><span class=\"sy0\">**</span><span class=\"br0\">(</span><span class=\"re0\">$power</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@ratios</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">@range</span><span class=\"br0\">]</span> <span class=\"kw1\">Z</span><span class=\"sy0\">/</span> <span class=\"re0\">@range</span><span class=\"br0\">)</span> <span class=\"kw1\">Z</span><span class=\"sy0\">=&gt;</span> <span class=\"re0\">@range</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"re0\">@ratios</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$last55</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">value</span> <span class=\"kw1\">if</span> <span class=\"sy0\">.</span><span class=\"me1\">key</span> <span class=\"sy0\">&gt;=</span> <span class=\"sy0\">.</span>55 <span class=\"kw1\">for</span> <span class=\"re0\">@ratios</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$max</span><span class=\"sy0\">.</span><span class=\"me1\">key</span> <span class=\"sy0\">&gt;=</span> <span class=\"sy0\">.</span>55<span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"re0\">$power</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%2d'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"re0\">@range</span><span class=\"sy0\">.</span><span class=\"kw3\">min</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st0\">\"%10d\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st_h\">'..'</span><span class=\"sy0\">,</span> <span class=\"re0\">@range</span><span class=\"sy0\">.</span><span class=\"kw3\">max</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st0\">\"%-10d\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        <span class=\"re0\">$max</span><span class=\"sy0\">.</span><span class=\"me1\">key</span><span class=\"sy0\">,</span> <span class=\"st_h\">' at '</span><span class=\"sy0\">,</span> <span class=\"re0\">$max</span><span class=\"sy0\">.</span><span class=\"me1\">value</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"Mallows' number would appear to be \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$last55</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 26, "block": "<pre class=\"text highlighted_source\">sequence a = {1,1}<br/>\u00a0<br/>function q(integer n)<br/>    for l=length(a)+1 to n do<br/>        a &amp;= a[a[l-1]]+a[l-a[l-1]]<br/>    end for<br/>    return a[n]<br/>end function<br/>\u00a0<br/>integer mallows = -1, max_n<br/>for p=0 to 19 do<br/>    atom max_an = 0.5<br/>    integer l = power(2,p), h=l*2<br/>    for n=l to h do<br/>        atom an = q(n)/n<br/>        if an&gt;=max_an then<br/>            max_an = an<br/>            max_n = n<br/>        end if<br/>        if an&gt;0.55 then<br/>            mallows = n<br/>        end if<br/>    end for<br/>    printf(1,\"Maximum in range\u00a0%6d to\u00a0%-7d occurs at\u00a0%6d:\u00a0%f\\n\",{l,h,max_n,max_an})<br/>end for<br/>printf(1,\"Mallows number is\u00a0%d\\n\",{mallows})</pre>"}, {"lang": "PicoLisp", "loc": 29, "block": "<pre class=\"text highlighted_source\">(de hofcon (N)<br/>   (cache '(NIL) N<br/>      (if (&gt;= 2 N)<br/>         1<br/>         (+<br/>            (hofcon (hofcon (dec N)))<br/>            (hofcon (- N (hofcon (dec N)))) ) ) ) )<br/>\u00a0<br/>(scl 20)<br/>\u00a0<br/>(de sequence (M)<br/>   (let (Lim 4  Max 0  4k$ 0)<br/>      (for (N 3 (&gt;= M N) (inc N))<br/>         (let V (*/ (hofcon N) 1.0 N)<br/>            (setq Max (max Max V))<br/>            (when (&gt;= V 0.55)<br/>               (setq 4k$ N) )<br/>            (when (= N Lim)<br/>               (prinl<br/>                  \"Maximum between \" (/ Lim 2)<br/>                  \" and \" Lim<br/>                  \" was \" (format Max `*Scl) )<br/>               (inc 'Lim Lim)<br/>               (zero Max) ) ) )<br/>      (prinl<br/>         \"Win with \" 4k$<br/>         \" (the task requests 'n &gt; p' now)\" ) ) )<br/>\u00a0<br/>(sequence (** 2 20))</pre>"}, {"lang": "PL/I", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/* First part: */<br/>\u00a0<br/>declare L (10000) fixed static initial ((1000) 0);<br/>L(1), L(2) = 1;<br/>do i = 3 to 10000;<br/>   k = L(i);<br/>   L(i) = L(i-k) + L(1+k);<br/>end;<br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 26, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span>.i upperlim, i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, k1<span class=\"sy0\">=</span><span class=\"nu0\">2</span>, n<span class=\"sy0\">=</span><span class=\"nu0\">3</span>, v<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Define</span>.d Maximum<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter limit (ENTER gives 2^20=1048576): \"</span><span class=\"br0\">)</span>: upperlim<span class=\"sy0\">=</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> upperlim<span class=\"sy0\">&lt;=</span><span class=\"nu0\">0</span>: upperlim<span class=\"sy0\">=</span><span class=\"nu0\">1048576</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Dim</span> tal<span class=\"br0\">(</span>upperlim<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> ArraySize<span class=\"br0\">(</span>tal<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">=-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Could not allocate needed memory!\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span>: <span class=\"kw1\">End</span><br/>  <span class=\"kw1\">EndIf</span><br/>  tal<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span>: tal<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">While</span> n<span class=\"sy0\">&lt;=</span>upperlim<br/>    v<span class=\"sy0\">=</span>tal<span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"sy0\">+</span>tal<span class=\"br0\">(</span>n<span class=\"sy0\">-</span>v<span class=\"br0\">)</span><br/>    tal<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span>v<br/>    <span class=\"kw1\">If</span> Maximum<span class=\"sy0\">&lt;</span><span class=\"br0\">(</span>v<span class=\"sy0\">/</span>n<span class=\"br0\">)</span>: Maximum<span class=\"sy0\">=</span>v<span class=\"sy0\">/</span>n: <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> n<span class=\"sy0\">&amp;</span>k1<br/>      <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Maximum between 2^\"</span><span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" and 2^\"</span><span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" was \"</span><span class=\"sy0\">+</span><span class=\"kw2\">StrD</span><span class=\"br0\">(</span>Maximum,<span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      Maximum<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><br/>      i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">EndIf</span><br/>    k1<span class=\"sy0\">=</span>n<br/>    n<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Wend</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$<span class=\"sy0\">+</span><span class=\"st0\">\"Press ENTER to exit.\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 32, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">__future__</span> <span class=\"kw1\">import</span> division<br/>\u00a0<br/><span class=\"kw1\">def</span> maxandmallows<span class=\"br0\">(</span>nmaxpower2<span class=\"br0\">)</span>:<br/>    nmax <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>**nmaxpower2<br/>    mx <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    mxpow2 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>    mallows <span class=\"sy0\">=</span> <span class=\"kw2\">None</span><br/>\u00a0<br/>    <span class=\"co1\"># Hofstadter-Conway sequence starts at hc[1],</span><br/>    <span class=\"co1\"># hc[0] is not part of the series.</span><br/>    hc <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">None</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> nmax + <span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>        ratio <span class=\"sy0\">=</span> hc<span class=\"br0\">[</span>n<span class=\"br0\">]</span> / n<br/>        <span class=\"kw1\">if</span> ratio <span class=\"sy0\">&gt;</span> mx<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>:<br/>            mx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ratio<span class=\"sy0\">,</span> n<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> ratio <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0.55</span>:<br/>            mallows <span class=\"sy0\">=</span> n<br/>        <span class=\"kw1\">if</span> ratio <span class=\"sy0\">==</span> <span class=\"nu0\">0.5</span>:<br/>            <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"In the region\u00a0%7i &lt; n &lt;=\u00a0%7i: max a(n)/n =\u00a0%6.4f at  n =\u00a0%i\"</span>\u00a0%<br/>\t\t  <span class=\"br0\">(</span>n//<span class=\"nu0\">2</span><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> mx<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> mx<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            mxpow2.<span class=\"me1\">append</span><span class=\"br0\">(</span>mx<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            mx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ratio<span class=\"sy0\">,</span> n<span class=\"br0\">)</span><br/>        hc.<span class=\"me1\">append</span><span class=\"br0\">(</span>hc<span class=\"br0\">[</span>hc<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">]</span> + hc<span class=\"br0\">[</span>-hc<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> hc<span class=\"sy0\">,</span> mallows <span class=\"kw1\">if</span> mxpow2 <span class=\"kw1\">and</span> mxpow2<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.55</span> <span class=\"kw1\">and</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">4</span> <span class=\"kw1\">else</span> <span class=\"kw2\">None</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    hc<span class=\"sy0\">,</span> mallows <span class=\"sy0\">=</span> maxandmallows<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> mallows:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>You too might have won $1000 with the mallows number of\u00a0%i\"</span>\u00a0% mallows<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "R", "loc": 6, "block": "<pre class=\"text highlighted_source\">f = local(<br/>   {a = c(1, 1)<br/>    function(n)<br/>       {if (is.na(a[n]))<br/>            a[n] &lt;&lt;- f(f(n - 1)) + f(n - f(n - 1))<br/>        a[n]}})</pre>"}, {"lang": "Racket", "loc": 14, "block": "<pre class=\"text highlighted_source\">#lang racket/base<br/>\u00a0<br/>(define-syntax-rule (define/memoize1 (proc x) body ...)<br/>  (define proc <br/>    (let ([cache (make-hash)]<br/>          [direct (lambda (x) body ...)])<br/>      (lambda (x)<br/>        (hash-ref! cache x (lambda () (direct x)))))))<br/>\u00a0<br/>(define/memoize1 (conway n)<br/>  (if (&lt; n 3)<br/>      1<br/>      (+ (conway (conway (sub1 n)))<br/>         (conway (- n (conway (sub1 n)))))))</pre>"}, {"lang": "REXX", "loc": 23, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program solves the   Hofstadter\u2500Conway  sequence  $10,000   prize  (puzzle).     */</span><br/>@pref= <span class=\"st0\">'Maximum of    a(n) \u00f7 n     between '</span>     <span class=\"coMULTI\">/*a prologue for the text of message.  */</span><br/>H<span class=\"sy0\">.</span>=<span class=\"sy0\">.</span>;   H<span class=\"sy0\">.</span>1=<span class=\"nu0\">1</span>;  H<span class=\"sy0\">.</span>2=<span class=\"nu0\">1</span>;  \u00a0!<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span>;     @<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span>          <span class=\"coMULTI\">/*initialize some REXX variables.      */</span><br/>win=<span class=\"nu0\">0</span><br/>      <span class=\"kw1\">do</span> k=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> <span class=\"nu0\">20</span>;     p<span class=\"sy0\">.</span>k=<span class=\"nu0\">2</span><span class=\"sy0\">**</span>k;  maxp=p<span class=\"sy0\">.</span>k     <span class=\"coMULTI\">/*build an array of the powers of two. */</span><br/>      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/>r=<span class=\"nu0\">1</span>                                              <span class=\"coMULTI\">/*R:  is the range of the power of two.*/</span><br/>      <span class=\"kw1\">do</span> n=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> maxp;  <span class=\"kw1\">if</span> n<span class=\"sy0\">&gt;</span> p<span class=\"sy0\">.</span>r  <span class=\"kw3\">then</span> r=r+<span class=\"nu0\">1</span>   <span class=\"coMULTI\">/*for golf coders, same as: r=r+(n&gt;p.r)*/</span><br/>      _=H<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">/</span>n;          <span class=\"kw1\">if</span> _<span class=\"sy0\">&gt;</span>=<span class=\"sy0\">.</span>55  <span class=\"kw3\">then</span> win=n   <span class=\"coMULTI\">/*get next seq number; if \u2265.55, a win? */</span><br/>                         <span class=\"kw1\">if</span> _<span class=\"sy0\">&lt;</span><a class=\"__cf_email__\" data-cfemail=\"c3fe83\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>r  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span> <span class=\"coMULTI\">/*less than previous? Then keep looking*/</span><br/>      @<span class=\"sy0\">.</span>r=_;     \u00a0!<span class=\"sy0\">.</span>r=n                          <span class=\"coMULTI\">/*@.r and \u00a0!.r  are like ginkgo biloba.*/</span><br/>      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*n*/</span>                                <span class=\"coMULTI\">/*  \u00b7\u00b7\u00b7 or in other words, memoization.*/</span><br/>\u00a0<br/>      <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"nu0\">20</span>;   range= <span class=\"st0\">'2**'</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>j-<span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>              <span class=\"st0\">\"\u2500\u2500\u2500\u25ba 2**\"</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>  j, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">say</span> @pref  range  <span class=\"st0\">'(inclusive)  is '</span>    <span class=\"kw6\">left</span><span class=\"br0\">(</span>@<span class=\"sy0\">.</span>j, <span class=\"nu0\">9</span><span class=\"br0\">)</span>     <span class=\"st0\">\"  at  n=\"</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>!<span class=\"sy0\">.</span>j, <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'The winning number is: '</span>    win             <span class=\"coMULTI\">/*and the money shot is  \u00b7\u00b7\u00b7           */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>H: <span class=\"kw1\">procedure</span> <span class=\"kw1\">expose</span> H<span class=\"sy0\">.</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> z<br/>                        <span class=\"kw1\">if</span> H<span class=\"sy0\">.</span>z==<span class=\"sy0\">.</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  m=z-<span class=\"nu0\">1</span>;   $=H<span class=\"sy0\">.</span>m;   _=z-$;   H<span class=\"sy0\">.</span>z=H<span class=\"sy0\">.</span>$+H<span class=\"sy0\">.</span>_;   <span class=\"kw3\">end</span><br/>                        <span class=\"kw1\">return</span> H<span class=\"sy0\">.</span>z</pre>"}, {"lang": "Ring", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>decimals(9)<br/>size = 15<br/>a = list(pow(2,size))<br/>a[1]=1<br/>a[2]=1<br/>power=2<br/>p2=pow(2,power)<br/>peak=0.5<br/>peakpos=0<br/>for n=3 to pow(2,size)<br/>    a[n]=a[a[n-1]]+a[n-a[n-1]]<br/>    r=a[n]/n<br/>    if r&gt;=0.55 mallows=n ok<br/>    if r&gt;peak peak=r peakpos=n ok<br/>    if n=p2 <br/>       see \"maximum between 2^\" + (power - 1) + \" and 2^\" + power + \" is \" + peak + \" at n=\" + peakpos + nl<br/>       power += 1<br/>       p2=pow(2,power)<br/>       peak=0.5 ok<br/>next <br/>see \"mallows number is\u00a0: \" + mallows + nl<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 29, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> HofstadterConway10000<br/>  <span class=\"kw1\">def</span> initialize<br/>    <span class=\"re1\">@sequence</span> = <span class=\"br0\">[</span><span class=\"kw2\">nil</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw3\">raise</span> <span class=\"kw4\">ArgumentError</span>, <span class=\"st0\">\"n must be &gt;= 1\"</span> <span class=\"kw1\">if</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><br/>    a = <span class=\"re1\">@sequence</span><br/>    a.<span class=\"me1\">length</span>.<span class=\"me1\">upto</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = a<span class=\"br0\">[</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    a<span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>hc = HofstadterConway10000.<span class=\"me1\">new</span><br/>\u00a0<br/>mallows = <span class=\"kw2\">nil</span><br/><span class=\"br0\">(</span><span class=\"nu0\">1</span>...<span class=\"nu0\">20</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>  j = i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  max_n, max_v = <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>  <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">**</span>i .. <span class=\"nu0\">2</span><span class=\"sy0\">**</span>j<span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>n<span class=\"sy0\">|</span><br/>    v = hc<span class=\"br0\">[</span>n<span class=\"br0\">]</span>.<span class=\"me1\">to_f</span> <span class=\"sy0\">/</span> n<br/>    max_n, max_v = n, v <span class=\"kw1\">if</span> v <span class=\"sy0\">&gt;</span> max_v<br/>    <span class=\"co1\"># Mallows number</span><br/>    mallows = n <span class=\"kw1\">if</span> v <span class=\"sy0\">&gt;</span>= <span class=\"nu0\">0.55</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"maximum between 2^%2d and 2^%2d occurs at%7d:\u00a0%.8f\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>i, j, max_n, max_v<span class=\"br0\">]</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"the mallows number is #{mallows}\"</span></pre>"}, {"lang": "Run BASIC", "loc": 25, "block": "<pre class=\"text highlighted_source\">input \"Enter upper limit between 1 and 20 (ENTER 20 gives 2^20):\"); uprLim<br/>if uprLim &lt; 1 or uprLim &gt; 20 then uprLim = 20<br/>dim a(2^uprLim)<br/>a(1)\t= 1<br/>a(2)\t= 1<br/>pow2\t= 2<br/>p2\t= 2^pow2<br/>p\t= 0.5<br/>pPos\t= 0<br/>for n\t= 3 TO 2^uprLim<br/>   a(n)\t= a(a(n-1)) + a(n-a(n-1))<br/>   r\t= a(n)/n<br/>   if r &gt;= 0.55 THEN Mallows = n<br/>   if r &gt; p  THEN <br/>     p    = r<br/>     pPos = n<br/>   end if <br/>   if n\t= p2 THEN<br/>      print \"Maximum between\";chr$(9);\" 2^\";pow2-1;\" and 2^\";pow2;chr$(9);\" is \";p;chr$(9);\" at n = \";pPos<br/>      pow2 = pow2 + 1<br/>      p2   = 2^pow2<br/>      p\t   = 0.5<br/>   end IF<br/>next n<br/>print \"Mallows number is \";Mallows</pre>"}, {"lang": "Scala", "loc": 29, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> HofstadterConway <span class=\"br0\">{</span> <br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> pow2<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Iterator.<span class=\"me1\">fill</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">product</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> makeHCSequence<span class=\"br0\">(</span>max<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>Int<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <br/>    <span class=\"br0\">(</span><span class=\"nu0\">0</span> to max - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">foldLeft</span> <span class=\"br0\">(</span>Vector<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span>v, idx<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>idx <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> v <span class=\"sy0\">:</span>+ <span class=\"nu0\">1</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> v <span class=\"sy0\">:</span>+ <span class=\"br0\">(</span>v<span class=\"br0\">(</span>v<span class=\"br0\">(</span>idx - <span class=\"nu0\">1</span><span class=\"br0\">)</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + v<span class=\"br0\">(</span>idx - v<span class=\"br0\">(</span>idx - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> max <span class=\"sy0\">=</span> pow2<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> maxSeq <span class=\"sy0\">=</span> makeHCSequence<span class=\"br0\">(</span>max<span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> hcRatio<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int, seq<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> seq<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">toDouble</span> / n<br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> maximumHCRatioBetween<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Int, b<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int, Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    Iterator.<span class=\"me1\">range</span><span class=\"br0\">(</span>a, b + <span class=\"nu0\">1</span><span class=\"br0\">)</span> map <span class=\"br0\">(</span>n <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>n, hcRatio<span class=\"br0\">(</span>n, maxSeq<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> maxBy <span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span><br/>\u00a0<br/>  lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> mallowsNumber<span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>max to <span class=\"nu0\">1</span> by -<span class=\"nu0\">1</span><span class=\"br0\">)</span> takeWhile <span class=\"br0\">(</span>hcRatio<span class=\"br0\">(</span><span class=\"sy0\">_</span>, maxSeq<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.55</span><span class=\"br0\">)</span> last<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">1</span> to <span class=\"nu0\">19</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>value, ratio<span class=\"br0\">)</span> <span class=\"sy0\">=</span> maximumHCRatioBetween<span class=\"br0\">(</span>pow2<span class=\"br0\">(</span>n<span class=\"br0\">)</span>, pow2<span class=\"br0\">(</span>n+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> message <span class=\"sy0\">=</span> <span class=\"st0\">\"Maximum of a(n)/n between 2^%s and 2^%s was\u00a0%s at\u00a0%s\"</span><br/>      println<span class=\"br0\">(</span>message.<span class=\"me1\">format</span><span class=\"br0\">(</span>n, n+<span class=\"nu0\">1</span>, ratio, value<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Mallow's number =\u00a0%s\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>mallowsNumber<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 45, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>import <span class=\"br0\">(</span>scheme base<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme <span class=\"kw1\">write</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>only <span class=\"br0\">(</span>srfi <span class=\"nu0\">1</span><span class=\"br0\">)</span> iota<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; maximum size of sequence to consider, as a power of 2</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>max<span class=\"sy0\">-</span>power<span class=\"sy0\">*</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>size<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span>max<span class=\"sy0\">-</span>power<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; Task 1: Generate members of the sequence</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">make-vector</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">*</span>size<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; add 1, to use 1-indexing into sequence</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">for-each</span> <br/>  <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> n <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> n <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> x<span class=\"br0\">)</span><br/>                              <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> n x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>iota <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"sy0\">*</span>size<span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; Task 2: Show maxima of a(n)/n between successive powers of two</span><br/><span class=\"br0\">(</span><span class=\"kw1\">for-each</span> <br/>  <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>power<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>start<span class=\"sy0\">-</span>idx <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> power <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>end<span class=\"sy0\">-</span>idx <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> power<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i start<span class=\"sy0\">-</span>idx <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>maximum <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">max</span> maximum <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> i<span class=\"br0\">)</span><br/>                                      i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> i end<span class=\"sy0\">-</span>idx<span class=\"br0\">)</span> <br/>         <span class=\"br0\">(</span><span class=\"kw1\">display</span> <br/>           <span class=\"br0\">(</span><span class=\"kw1\">string-append</span><br/>             <span class=\"st0\">\"Maximum between 2^\"</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> power <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"st0\">\" and 2^\"</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> power<span class=\"br0\">)</span><br/>             <span class=\"st0\">\" = \"</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>inexact maximum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>iota <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"sy0\">*</span>max<span class=\"sy0\">-</span>power<span class=\"sy0\">*</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; Task 3: Find value of p where a(n)/n &lt; 0.55 for all n &gt; p (in our sequence)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>idx <span class=\"sy0\">*</span>size<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> idx <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> idx<span class=\"br0\">)</span> <span class=\"co1\">; safety net</span><br/>       <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw1\">vector-ref</span> <span class=\"sy0\">*</span>seq<span class=\"sy0\">*</span> idx<span class=\"br0\">)</span> idx<span class=\"br0\">)</span><br/>          <span class=\"nu0\">0.55</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>p=\"</span> <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> idx<span class=\"br0\">)</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 24, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> HofstadterConway10000 <span class=\"br0\">{</span><br/>  has sequence = <span class=\"br0\">[</span><span class=\"kw2\">nil</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>  method term<span class=\"br0\">(</span>n <span class=\"br0\">{</span>.<span class=\"me1\">is_pos</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var a = sequence<br/>    <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = a<span class=\"br0\">[</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span>a<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"sy0\">&lt;&lt;</span> a.<span class=\"me1\">len</span>..<span class=\"me1\">n</span><br/>    a<span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>var hc = HofstadterConway10000<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>var mallows = <span class=\"kw2\">nil</span><br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">19</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  var j = i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>  var <span class=\"br0\">(</span>max_n, max_v<span class=\"br0\">)</span> = <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span>i .. <span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var v = <span class=\"br0\">(</span>hc.<span class=\"me1\">term</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">/</span> n<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>max_n, max_v<span class=\"br0\">)</span> = <span class=\"br0\">(</span>n, v<span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>v <span class=\"sy0\">&gt;</span> max_v<span class=\"br0\">)</span><br/>    mallows = n <span class=\"kw1\">if</span> <span class=\"br0\">(</span>v <span class=\"sy0\">&gt;</span>= <span class=\"nu0\">0.55</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  say <span class=\"br0\">(</span><span class=\"st0\">\"maximum between 2^%2d and 2^%2d occurs at%7d:\u00a0%.8f\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>i, j, max_n, max_v<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">\"the mallows number is #{mallows}\"</span></pre>"}, {"lang": "Swift", "loc": 29, "block": "<pre class=\"text highlighted_source\">func doSqnc(m:Int) {<br/>    var aList = [Int](count: m + 1, repeatedValue: 0)<br/>    var k1 = 2<br/>    var lg2 = 1<br/>    var amax:Double = 0<br/>    aList[0] = 1<br/>    aList[1] = 1<br/>\u00a0<br/>    var v = aList[2]<br/>\u00a0<br/>    for n in 2...m {<br/>        let add = aList[v] + aList[n - v]<br/>        aList[n] = add<br/>        v = aList[n]<br/>\u00a0<br/>        if amax &lt; Double(v) * 1.0 / Double(n) {<br/>            amax = Double(v) * 1.0 / Double(n)<br/>        }<br/>\u00a0<br/>        if (k1 &amp; n == 0) {<br/>            println(\"Maximum between 2^\\(lg2) and 2^\\(lg2 + 1) was \\(amax)\")<br/>            amax = 0<br/>            lg2++<br/>        }<br/>        k1 = n<br/>    }<br/>}<br/>\u00a0<br/>doSqnc(1 &lt;&lt; 20)</pre>"}, {"lang": "Tcl", "loc": 18, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/><span class=\"kw1\">set</span> hofcon10k <span class=\"br0\">{</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><br/><span class=\"kw1\">proc</span> hofcon10k n <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> hofcon10k<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">error</span> <span class=\"st0\">\"n must be at least 1\"</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> <span class=\"sy0\">&lt;</span>= <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$hofcon10k</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$hofcon10k</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> <span class=\"sy0\">&gt;</span> <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$hofcon10k</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> i <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$hofcon10k</span> end<span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> a <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$hofcon10k</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span>-<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"co1\"># Don't use end-based indexing here; faster to compute manually</span><br/>\t<span class=\"kw1\">set</span> b <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$hofcon10k</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$hofcon10k</span><span class=\"br0\">]</span>-<span class=\"re0\">$i</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">lappend</span> hofcon10k <span class=\"br0\">[</span><span class=\"kw1\">set</span> c <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$a</span> + <span class=\"re0\">$b</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$c</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "X86 Assembly", "loc": 36, "block": "<pre class=\"asm highlighted_source\"><span class=\"co1\">; Hofstadter-Conway $10,000 sequence</span><br/>    <span class=\"kw1\">call</span> a<span class=\"sy1\">.</span>memorization<br/>    <span class=\"kw1\">call</span> Mallows_Number<br/><span class=\"co1\">; ECX is the $1000 #</span><br/>    int3<br/>\u00a0<br/>a<span class=\"sy1\">.</span>memorization<span class=\"sy1\">:</span><br/><span class=\"co1\">; skip [a] to make it one based</span><br/>    <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><br/>@@<span class=\"sy1\">:</span><br/>    <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"kw4\">ecx</span><br/>    <span class=\"kw1\">mov</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"br0\">(</span><span class=\"kw4\">ecx</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"co1\">; a[n-1]</span><br/>    <span class=\"kw1\">sub</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"kw4\">edx</span>           <span class=\"co1\">; n-a[n-1]</span><br/>    <span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"kw4\">eax</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>     <span class=\"co1\">; a[n-a[n-1]]</span><br/>    <span class=\"kw1\">add</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"kw4\">edx</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>     <span class=\"co1\">;+a[a[n-1]]</span><br/>    <span class=\"kw1\">mov</span> <span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"kw4\">ecx</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span><br/>    <span class=\"kw1\">inc</span> <span class=\"kw4\">ecx</span><br/>    <span class=\"kw1\">cmp</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span> <span class=\"kw1\">shl</span> <span class=\"nu0\">20</span><br/>    <span class=\"kw1\">jnz</span> @B<br/>    retn<br/>\u00a0<br/>_0<span class=\"sy1\">.</span>55 <span class=\"kw5\">equ</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">55</span> <span class=\"kw1\">shl</span> <span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"sy1\">/</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"co1\">; Floor[55 * 2^N / 100], for N=32</span><br/>\u00a0<br/>Mallows_Number<span class=\"sy1\">:</span> <span class=\"co1\">; $5D1</span><br/>    <span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span> <span class=\"kw1\">shl</span> <span class=\"nu0\">20</span><br/>@@<span class=\"sy1\">:</span> <span class=\"kw1\">dec</span> <span class=\"kw4\">ecx</span><br/>    <span class=\"kw1\">mov</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span><span class=\"br0\">[</span>a<span class=\"sy1\">+</span><span class=\"kw4\">ecx</span><span class=\"sy1\">*</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">xor</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span><span class=\"kw4\">eax</span><br/>    <span class=\"kw1\">div</span> <span class=\"kw4\">ecx</span><br/>    <span class=\"kw1\">cmp</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span>_0<span class=\"sy1\">.</span>55 <span class=\"sy1\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">jc</span> @B<br/>    retn<br/>\u00a0<br/>a rd <span class=\"nu0\">1</span> <span class=\"kw1\">shl</span> <span class=\"nu0\">20</span></pre>"}, {"lang": "zkl", "loc": 20, "block": "<pre class=\"text highlighted_source\">fcn hofstadterConwaySequence(m){<br/>   a:=List.createLong(m + 1,0);<br/>   a[0]=a[1]=1;<br/>   v,p2,lg2, amax, mallow\u00a0:= a[2],4,1, 0.0, Void;<br/>\u00a0<br/>   foreach n in ([2 .. m]){<br/>      v=a[n]=a[v] + a[n - v];<br/>      f:=1.0*v/n;<br/>      if(f&gt;=0.55) mallow=n;<br/>      amax=amax.max(f);<br/>      if(n==p2){<br/>\t println(\"Max in [2^%d, 2^%d]:\u00a0%f\".fmt(lg2, lg2+1, amax));<br/>\t amax,p2 = 0.0, (n+1).nextPowerOf2;<br/>\t lg2+=1;<br/>      }<br/>   }<br/>   if(mallow) println(\"Winning number = \",mallow);<br/>}<br/>\u00a0<br/>hofstadterConwaySequence((2).pow(20));</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 12, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">DIM</span> a<span class=\"br0\">(</span><span class=\"nu0\">2000</span><span class=\"br0\">)</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>=<span class=\"nu0\">1</span>: <span class=\"kw1\">LET</span> a<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>=<span class=\"nu0\">1</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> pow2=<span class=\"nu0\">2</span>: <span class=\"kw1\">LET</span> p2=<span class=\"nu0\">2</span>^pow2<br/><span class=\"nu0\">40</span> <span class=\"kw1\">LET</span> peak=<span class=\"nu0\">0.5</span>: <span class=\"kw1\">LET</span> peakpos=<span class=\"nu0\">0</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">FOR</span> n=<span class=\"nu0\">3</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2000</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">LET</span> a<span class=\"br0\">(</span>n<span class=\"br0\">)</span>=a<span class=\"br0\">(</span>a<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>+a<span class=\"br0\">(</span>n-a<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"nu0\">70</span> <span class=\"kw1\">LET</span> r=a<span class=\"br0\">(</span>n<span class=\"br0\">)</span>/n<br/><span class=\"nu0\">80</span> <span class=\"kw1\">IF</span> r&gt;<span class=\"nu0\">0.55</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> Mallows=n<br/><span class=\"nu0\">90</span> <span class=\"kw1\">IF</span> r&gt;peak <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> peak=r: <span class=\"kw1\">LET</span> peakpos=n<br/><span class=\"nu0\">100</span> <span class=\"kw1\">IF</span> n=p2 <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Maximum (2^\"</span>;pow2-<span class=\"nu0\">1</span>;<span class=\"st0\">\", 2^\"</span>;pow2;<span class=\"st0\">\") is \"</span>;peak;<span class=\"st0\">\" at n=\"</span>;peakpos: <span class=\"kw1\">LET</span> pow2=pow2+<span class=\"nu0\">1</span>: <span class=\"kw1\">LET</span> p2=<span class=\"nu0\">2</span>^pow2: <span class=\"kw1\">LET</span> peak=<span class=\"nu0\">0.5</span><br/><span class=\"nu0\">110</span> <span class=\"kw1\">NEXT</span> n<br/><span class=\"nu0\">120</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Mallows number is \"</span>;Mallows</pre>"}]}