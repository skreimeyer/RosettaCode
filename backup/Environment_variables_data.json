{"task": "Environment_variables", "blocks": [{"lang": "Ada", "loc": 7, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Environment_Variables</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Environment_Variables</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Print_Path <span class=\"kw1\">is</span><br/><span class=\"kw1\">begin</span><br/>   Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"Path\u00a0: \"</span> &amp; Value<span class=\"br0\">(</span><span class=\"st0\">\"PATH\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Print_Path;</pre>"}, {"lang": "ALGOL 68", "loc": 1, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw27\">getenv</span><span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "AutoHotkey", "loc": 2, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/EnvGet.htm\"><span class=\"kw3\">EnvGet</span></a><span class=\"sy0\">,</span> OutputVar<span class=\"sy0\">,</span> Path<br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%OutputVar%</span></pre>"}, {"lang": "AutoIt", "loc": 11, "block": "<pre class=\"autoit highlighted_source\"><a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"# Environment:\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@CRLF</span></span></a><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$sEnvVar</span> <span class=\"sy0\">=</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/EnvGet.htm\"><span class=\"kw3\">EnvGet</span></a><span class=\"br0\">(</span><span class=\"st0\">\"LANG\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"LANG\u00a0: \"</span> <span class=\"sy0\">&amp;</span> <span class=\"re0\">$sEnvVar</span> <span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@CRLF</span></span></a><span class=\"br0\">)</span><br/>\u00a0<br/>ShowEnv<span class=\"br0\">(</span><span class=\"st0\">\"SystemDrive\"</span><span class=\"br0\">)</span><br/>ShowEnv<span class=\"br0\">(</span><span class=\"st0\">\"USERNAME\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Func</span></a> ShowEnv<span class=\"br0\">(</span><span class=\"re0\">$N</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/StringFormat.htm\"><span class=\"kw3\">StringFormat</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%-12s\u00a0:\u00a0%s\\n\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$N</span><span class=\"sy0\">,</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/EnvGet.htm\"><span class=\"kw3\">EnvGet</span></a><span class=\"br0\">(</span><span class=\"re0\">$N</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndFunc</span></a>   <span class=\"co0\">;==&gt;ShowEnv</span></pre>"}, {"lang": "AWK", "loc": 1, "block": "<pre class=\"awk highlighted_source\">$ awk '<span class=\"kw2\">BEGIN</span><span class=\"br0\">{</span><span class=\"kw5\">print</span> <span class=\"st0\">\"HOME:\"</span><span class=\"kw3\">ENVIRON</span><span class=\"br0\">[</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">]</span>,<span class=\"st0\">\"USER:\"</span><span class=\"kw3\">ENVIRON</span><span class=\"br0\">[</span><span class=\"st0\">\"USER\"</span><span class=\"br0\">]</span><span class=\"br0\">}</span>' </pre>"}, {"lang": "BASIC", "loc": 2, "block": "<pre class=\"qbasic highlighted_source\">x$ <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckenviron%24.shtml\"><span class=\"kw3\">ENVIRON$</span></a><span class=\"br0\">(</span><span class=\"st0\">\"path\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> x$</pre>"}, {"lang": "Batch File", "loc": 1, "block": "<pre class=\"dos highlighted_source\"><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> <span class=\"sy0\">%</span><span class=\"re3\">Foo</span><span class=\"sy0\">%</span></pre>"}, {"lang": "BBC BASIC", "loc": 10, "block": "<pre class=\"text highlighted_source\">      PRINT FNenvironment(\"PATH\")<br/>      PRINT FNenvironment(\"USERNAME\")<br/>      END<br/>\u00a0<br/>      DEF FNenvironment(envar$)<br/>      LOCAL buffer%, size%<br/>      SYS \"GetEnvironmentVariable\", envar$, 0, 0 TO size%<br/>      DIM buffer% LOCAL size%<br/>      SYS \"GetEnvironmentVariable\", envar$, buffer%, size%+1<br/>      = $$buffer%</pre>"}, {"lang": "C", "loc": 7, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getenv.html\"><span class=\"kw3\">getenv</span></a><span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 10, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> RosettaCode <span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">string</span> temp <span class=\"sy0\">=</span> Environment<span class=\"sy0\">.</span><span class=\"me1\">GetEnvironmentVariable</span><span class=\"br0\">(</span><span class=\"st0\">\"TEMP\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"TEMP is \"</span> <span class=\"sy0\">+</span> temp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 8, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;cstdlib&gt;</span><br/><span class=\"co2\">#include &lt;cstdio&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>   <span class=\"kw3\">puts</span><span class=\"br0\">(</span><span class=\"kw3\">getenv</span><span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>System/getenv <span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 18, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> Environment-Vars<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  home <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">75</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/><span class=\"co1\">*          *&gt; Method 1.      </span><br/>           <span class=\"kw2\">ACCEPT</span> home <span class=\"kw3\">FROM</span> ENVIRONMENT <span class=\"st0\">\"HOME\"</span><br/>           <span class=\"kw2\">DISPLAY</span> home<br/>\u00a0<br/><span class=\"co1\">*          *&gt; Method 2.</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"HOME\"</span> <span class=\"kw3\">UPON</span> ENVIRONMENT-NAME<br/>           <span class=\"kw2\">ACCEPT</span> home <span class=\"kw3\">FROM</span> ENVIRONMENT-<span class=\"kw3\">VALUE</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span></pre>"}, {"lang": "CoffeeScript", "loc": 2, "block": "<pre class=\"coffeescript highlighted_source\"><span class=\"kw1\">for</span> var_name <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"st0\">'PATH'</span><span class=\"sy0\">,</span> <span class=\"st0\">'HOME'</span><span class=\"sy0\">,</span> <span class=\"st0\">'LANG'</span><span class=\"sy0\">,</span> <span class=\"st0\">'USER'</span><span class=\"br0\">]</span><br/>  console.<span class=\"me1\">log</span> var_name<span class=\"sy0\">,</span> process.<span class=\"me1\">env</span><span class=\"br0\">[</span>var_name<span class=\"br0\">]</span></pre>"}, {"lang": "Common Lisp", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>lispworks<span class=\"sy0\">:</span><span class=\"me1\">environment-variable</span> <span class=\"st0\">\"USER\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 5, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">process</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> home <span class=\"sy0\">=</span> getenv<span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi/Pascal", "loc": 9, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> EnvironmentVariable<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Temp = '</span> <span class=\"sy3\">+</span> <span class=\"kw3\">GetEnvironmentVariable</span><span class=\"br0\">(</span><span class=\"st0\">'TEMP'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "E", "loc": 1, "block": "<pre class=\"e highlighted_source\"><span class=\"sy0\">&lt;</span>unsafe<span class=\"sy0\">:</span>java.<span class=\"me1\">lang</span>.<span class=\"me1\">System</span><span class=\"sy0\">&gt;</span>.<span class=\"me1\">getenv</span><span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Eiffel", "loc": 13, "block": "<pre class=\"eiffel highlighted_source\"><span class=\"kw1\">class</span><br/>    APPLICATION<br/><span class=\"kw1\">inherit</span><br/>    <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+execution_environment&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">EXECUTION_ENVIRONMENT</span></a><br/><span class=\"kw2\">create</span><br/>    make<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Initialization</span><br/>    make<br/>            <span class=\"co1\">-- Retrieve and print value for environment variable `USERNAME'.</span><br/>        <span class=\"kw2\">do</span><br/>            print <span class=\"br0\">(</span>get <span class=\"br0\">(</span><span class=\"st0\">\"USERNAME\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">end</span><br/><span class=\"kw2\">end</span></pre>"}, {"lang": "Elixir", "loc": 1, "block": "<pre class=\"text highlighted_source\">System.get_env(\"PATH\")</pre>"}, {"lang": "Emacs Lisp", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>getenv <span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Erlang", "loc": 3, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><a href=\"http://erlang.org/doc/man/os.html\"><span class=\"kw5\">os</span></a>:<span class=\"kw3\">get</span><span class=\"re3\">env</span><span class=\"br0\">(</span> <span class=\"st0\">\"HOME\"</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 1, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"kw2\">getenv</span><span class=\"br0\">(</span><span class=\"st0\">\"PATH\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 6, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main args <span class=\"sy0\">=</span><br/>    printfn <span class=\"st0\">\"%A\"</span> <span class=\"br0\">(</span>Environment.<span class=\"me1\">GetEnvironmentVariable</span><span class=\"br0\">(</span><span class=\"st0\">\"PATH\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Factor", "loc": 1, "block": "<pre class=\"text highlighted_source\">\"HOME\" os-env print</pre>"}, {"lang": "Forth", "loc": 1, "block": "<pre class=\"text highlighted_source\">s\" HOME\" getenv type</pre>"}, {"lang": "Fortran", "loc": 15, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> show_home<br/><span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/><span class=\"co1\">character(len=32)\u00a0:: home_val \u00a0! The string value of the variable HOME</span><br/><span class=\"kw3\">integer</span>           <span class=\"sy0\">::</span> <span class=\"me2\">home_len</span>  <span class=\"co1\">! The actual length of the value</span><br/><span class=\"kw3\">integer</span>           <span class=\"sy0\">::</span> <span class=\"me2\">stat</span>      <span class=\"co1\">! The status of the value:</span><br/>                               <span class=\"co1\">!  0 = ok</span><br/>                               <span class=\"co1\">!  1 = variable does not exist</span><br/>                               <span class=\"co1\">! -1 = variable is not long enought to hold the result</span><br/><span class=\"co1\">call get_environment_variable('HOME', home_val, home_len, stat)</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>stat <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">'(a)'</span><span class=\"br0\">)</span> <span class=\"st0\">'HOME = '</span><span class=\"sy0\">//</span><span class=\"kw4\">trim</span><span class=\"br0\">(</span>home_val<span class=\"br0\">)</span><br/><span class=\"kw1\">else</span><br/>    write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">'(a)'</span><span class=\"br0\">)</span> <span class=\"st0\">'No HOME to go to!'</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> show_home</pre>"}, {"lang": "FreeBASIC", "loc": 5, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/>Var v = <span class=\"kw1\">Environ</span><span class=\"br0\">(</span><span class=\"st0\">\"SystemRoot\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span> v<br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "FunL", "loc": 3, "block": "<pre class=\"text highlighted_source\">println( System.getenv('PATH') )<br/>println( $home )<br/>println( $user )</pre>"}, {"lang": "Go", "loc": 10, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Getenv<span class=\"sy1\">(</span><span class=\"st0\">\"SHELL\"</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Gri", "loc": 2, "block": "<pre class=\"text highlighted_source\">get env \\foo HOME<br/>show \"\\foo\"</pre>"}, {"lang": "Groovy", "loc": 1, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?as_q=System&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">getenv</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a> <span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20property\"><span class=\"kw2\">property</span></a>, value <span class=\"sy0\">-&gt;</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"$property = $value\"</span><span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 3, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Environment<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> getEnv <span class=\"st0\">\"HOME\"</span> <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a>  <span class=\"co1\">-- get env var</span><br/>          getEnvironment <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"co1\">-- get the entire environment as a list of (key, value) pairs</span></pre>"}, {"lang": "HicEst", "loc": 4, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">CHARACTER</span> string<span class=\"sy1\">*</span><span class=\"nu0\">255</span><br/>\u00a0<br/>string <span class=\"sy1\">=</span> <span class=\"st0\">\"PATH=\"</span><br/><span class=\"kw1\">SYSTEM</span><span class=\"br0\">(</span>GEteNV <span class=\"sy1\">=</span> string<span class=\"br0\">)</span></pre>"}, {"lang": "i", "loc": 5, "block": "<pre class=\"text highlighted_source\">software {<br/>\tprint(load(\"$HOME\"))<br/>\tprint(load(\"$USER\"))<br/>\tprint(load(\"$PATH\"))<br/>}</pre>"}, {"lang": "Icon and Unicon", "loc": 7, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"sy1\">*</span>envars <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> envars <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"HOME\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"TRACE\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"BLKSIZE\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"STRSIZE\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"COEXPSIZE\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"MSTKSIZE\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"IPATH\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"LPATH\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"NOERRBUF\"</span><span class=\"br0\">]</span> <br/>\u00a0<br/><span class=\"kw1\">every</span> v <span class=\"sy1\">:=</span> <span class=\"sy1\">!</span><span class=\"kw4\">sort</span><span class=\"br0\">(</span>envars<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>v<span class=\"sy1\">,</span><span class=\"st0\">\" = \"</span><span class=\"sy1\">,</span><span class=\"kw4\">image</span><span class=\"br0\">(</span><span class=\"kw4\">getenv</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">|</span><span class=\"st0\">\"* not set *\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 1, "block": "<pre class=\"j highlighted_source\"><span class=\"nu0\">2</span>!:<span class=\"nu0\">5</span><span class=\"st_h\">'HOME'</span></pre>"}, {"lang": "Java", "loc": 2, "block": "<pre class=\"java highlighted_source\"><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">getenv</span><span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span> <span class=\"co1\">// get env var</span><br/><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">getenv</span><span class=\"br0\">(</span><span class=\"br0\">)</span>       <span class=\"co1\">// get the entire environment as a Map of keys to values</span></pre>"}, {"lang": "JavaScript", "loc": 3, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> shell <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ActiveXObject<span class=\"br0\">(</span><span class=\"st0\">\"WScript.Shell\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> env <span class=\"sy0\">=</span> shell.<span class=\"me1\">Environment</span><span class=\"br0\">(</span><span class=\"st0\">\"PROCESS\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>WScript.<span class=\"me1\">echo</span><span class=\"br0\">(</span><span class=\"st0\">'SYSTEMROOT='</span> <span class=\"sy0\">+</span> env.<span class=\"me1\">item</span><span class=\"br0\">(</span><span class=\"st0\">'SYSTEMROOT'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Joy", "loc": 1, "block": "<pre class=\"text highlighted_source\">\"HOME\" getenv.</pre>"}, {"lang": "jq", "loc": 1, "block": "<pre class=\"text highlighted_source\">env.HOME</pre>"}, {"lang": "Julia", "loc": 3, "block": "<pre class=\"text highlighted_source\">@show ENV[\"PATH\"]<br/>@show ENV[\"HOME\"]<br/>@show ENV[\"USER\"]</pre>"}, {"lang": "K", "loc": 1, "block": "<pre class=\"text highlighted_source\">_getenv \"HOME\"</pre>"}, {"lang": "Kotlin", "loc": 7, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/><span class=\"co1\">// tested on Windows 10</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   println<span class=\"br0\">(</span>System.<span class=\"me1\">getenv</span><span class=\"br0\">(</span><span class=\"st0\">\"SystemRoot\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 15, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/lasso9<br/>\u00a0<br/>define getenv(sysvar::string) =&gt; {<br/>\tlocal(regexp = regexp(<br/>\t\t-find = `(?m)^` + #sysvar + `=(.*?)$`,<br/>\t\t-input = sys_environ -&gt; join('\\n'),<br/>\t\t-ignorecase<br/>\t))<br/>\treturn #regexp -&gt;find\u00a0? #regexp -&gt; matchString(1)<br/>}<br/>\u00a0<br/>stdoutnl(getenv('HOME'))<br/>stdoutnl(getenv('PATH'))<br/>stdoutnl(getenv('USER'))<br/>stdoutnl(getenv('WHAT'))</pre>"}, {"lang": "Liberty BASIC", "loc": 2, "block": "<pre class=\"lb highlighted_source\"><span class=\"kw1\">print</span> <span class=\"kw3\">StartupDir$</span><br/><span class=\"kw1\">print</span> <span class=\"kw3\">DefaultDir$</span></pre>"}, {"lang": "Lingo", "loc": 6, "block": "<pre class=\"text highlighted_source\">sx = xtra(\"Shell\").new()<br/>if the platform contains \"win\" then<br/>  path = sx.shell_cmd(\"echo\u00a0%PATH%\").line[1]<br/>else<br/>  path = sx.shell_cmd(\"echo $PATH\").line[1]<br/>end if</pre>"}, {"lang": "LSL", "loc": 8, "block": "<pre class=\"text highlighted_source\">default {<br/>\tstate_entry() {<br/>\t\tllOwnerSay(\"llGetTimestamp()=\"+(string)llGetTimestamp());<br/>\t\tllOwnerSay(\"llGetEnergy()=\"+(string)llGetEnergy());<br/>\t\tllOwnerSay(\"llGetFreeMemory()=\"+(string)llGetFreeMemory());<br/>\t\tllOwnerSay(\"llGetMemoryLimit()=\"+(string)llGetMemoryLimit());<br/>\t}<br/>}</pre>"}, {"lang": "Logtalk", "loc": 1, "block": "<pre class=\"logtalk highlighted_source\">os<span class=\"sy1\">::</span>environment_variable(<span class=\"st0\">'PATH'</span>, <span class=\"re0\">Path</span>).</pre>"}, {"lang": "Lua", "loc": 1, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"kw3\">os.getenv</span><span class=\"br0\">(</span> <span class=\"st0\">\"PATH\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module CheckIt {<br/>      \\\\ using read only variablles<br/>      Print \"Platform: \";Platform$<br/>      Print \"Computer Os: \"; Os$<br/>      Print \"Type of OS: \";OsBit;\" bit\"<br/>      Print \"Computer Name:\";  Computer$<br/>      Print \"User Name: \"; User.Name$<br/>      \\\\ using WScript.Shell<br/>      Declare objShell \"WScript.Shell\"<br/>      With  objShell, \"Environment\" set env (\"Process\")<br/>      With env, \"item\" as Env$()<br/>      Print Env$(\"PATH\")<br/>      Print Env$(\"HOMEPATH\")<br/>      Declare objShell Nothing<br/>      \\\\ using internal Information object<br/>      Declare OsInfo INFORMATION<br/>      With OsInfo, \"build\" as build, \"NtDllVersion\" as NtDllVersion$<br/>      Method OsInfo, \"GetCurrentProcessSID\" as PID$<br/>      Method OsInfo, \"IsProcessElevated\" as isElevated<br/>      Print \"Os build number: \";build<br/>      Print \"Nr Dll version: \";NtDllVersion$<br/>      Print \"ProcessSID: \";pid$<br/>      Print \"Is Process Eleveted: \";isElevated<br/>      Declare OsInfo Nothing<br/>}<br/>Checkit<br/>\u00a0</pre>"}, {"lang": "Make", "loc": 3, "block": "<pre class=\"make highlighted_source\">TARGET <span class=\"sy0\">=</span> <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">HOME</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>some<span class=\"sy0\">/</span>thing<span class=\"sy0\">.</span>txt<br/>foo<span class=\"sy0\">:</span><br/>\techo <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">TARGET</span><span class=\"br0\">)</span></pre>"}, {"lang": "Maple", "loc": 1, "block": "<pre class=\"text highlighted_source\">getenv(\"PATH\");</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 1, "block": "<pre class=\"text highlighted_source\">Environment[\"PATH\"]</pre>"}, {"lang": "MATLAB / Octave", "loc": 3, "block": "<pre class=\"matlab highlighted_source\">    getenv<span class=\"br0\">(</span><span class=\"co2\">'HOME'</span><span class=\"br0\">)</span><br/>    getenv<span class=\"br0\">(</span><span class=\"co2\">'PATH'</span><span class=\"br0\">)</span><br/>    getenv<span class=\"br0\">(</span><span class=\"co2\">'USER'</span><span class=\"br0\">)</span></pre>"}, {"lang": "Mercury", "loc": 18, "block": "<pre class=\"text highlighted_source\">:- module env_var.<br/>:- interface.<br/>\u00a0<br/>:- import_module io.<br/>:- pred main(io::di, io::uo) is det.<br/>\u00a0<br/>:- implementation.<br/>:- import_module maybe, string.<br/>\u00a0<br/>main(!IO)\u00a0:-<br/>    io.get_environment_var(\"HOME\", MaybeValue,\u00a0!IO),<br/>    (<br/>        MaybeValue = yes(Value),<br/>        io.write_string(\"HOME is \" ++ Value ++ \"\\n\",\u00a0!IO)<br/>   \u00a0;<br/>        MaybeValue = no,<br/>        io.write_string(\"environment variable HOME not set\\n\",\u00a0!IO)<br/>    ).</pre>"}, {"lang": "Modula-3", "loc": 15, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> EnvVars <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">IMPORT</span> IO<span class=\"sy0\">,</span> Env;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>  k<span class=\"sy0\">,</span> v<span class=\"sy0\">:</span> <span class=\"kw4\">TEXT</span>;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Env.<span class=\"me1\">Get</span><span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>  <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> Env.<span class=\"me1\">Count</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>    Env.<span class=\"me1\">GetNth</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> k<span class=\"sy0\">,</span> v<span class=\"br0\">)</span>;<br/>    IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>k &amp; <span class=\"st0\">\" = \"</span> &amp; v &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">END</span><br/><span class=\"kw1\">END</span> EnvVars.</pre>"}, {"lang": "MUMPS", "loc": 2, "block": "<pre class=\"text highlighted_source\"> Set X=$ZF(-1,\"show logical\")<br/> Set X=$ZF(-1,\"show symbol\")</pre>"}, {"lang": "NetRexx", "loc": 61, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols nobinary<br/>\u00a0<br/>runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method sysEnvironment<span class=\"br0\">(</span>vn = <span class=\"st0\">''</span><span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">if</span> vn.<span class=\"me0\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>    envName = vn<br/>    envValu = System.<span class=\"me0\">getenv</span><span class=\"br0\">(</span>envName<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> envValu = null <span class=\"kw3\">then</span> envValu = <span class=\"st0\">''</span><br/>    <span class=\"kw1\">say</span> envName <span class=\"st0\">'='</span> envValu<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>    envVars = System.<span class=\"me0\">getenv</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    key = String<br/>    <span class=\"kw1\">loop</span> key over envVars.<span class=\"me0\">keySet</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      envName = key<br/>      envValu = String envVars.<span class=\"me0\">get</span><span class=\"br0\">(</span>key<span class=\"br0\">)</span><br/>      <span class=\"kw1\">say</span> envName <span class=\"st0\">'='</span> envValu<br/>      <span class=\"kw3\">end</span> key<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method sysProperties<span class=\"br0\">(</span>vn = <span class=\"st0\">''</span><span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">if</span> vn.<span class=\"me0\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>    propName = vn<br/>    propValu = System.<span class=\"me0\">getProperty</span><span class=\"br0\">(</span>propName<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> propValu = null <span class=\"kw3\">then</span> propValu = <span class=\"st0\">''</span><br/>    <span class=\"kw1\">say</span> propName <span class=\"st0\">'='</span> propValu<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">do</span><br/>    sysProps = System.<span class=\"me0\">getProperties</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    key = String<br/>    <span class=\"kw1\">loop</span> key over sysProps.<span class=\"me0\">keySet</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      propName = key<br/>      propValu = sysProps.<span class=\"me0\">getProperty</span><span class=\"br0\">(</span>key<span class=\"br0\">)</span><br/>      <span class=\"kw1\">say</span> propName <span class=\"st0\">'='</span> propValu<br/>      <span class=\"kw3\">end</span> key<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">parse</span> arg ev pv .<br/>  <span class=\"kw1\">if</span> ev = <span class=\"st0\">''</span> <span class=\"kw3\">then</span> ev = <span class=\"st0\">'CLASSPATH'</span><br/>  <span class=\"kw1\">if</span> pv = <span class=\"st0\">''</span> <span class=\"kw3\">then</span> pv = <span class=\"st0\">'java.class.path'</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'-'</span>.<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"nu0\">80</span>, <span class=\"st0\">'-'</span><span class=\"br0\">)</span>.<span class=\"kw6\">overlay</span><span class=\"br0\">(</span><span class=\"st0\">' Environment \"'</span>ev<span class=\"st0\">'\" '</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  sysEnvironment<span class=\"br0\">(</span>ev<span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'-'</span>.<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"nu0\">80</span>, <span class=\"st0\">'-'</span><span class=\"br0\">)</span>.<span class=\"kw6\">overlay</span><span class=\"br0\">(</span><span class=\"st0\">' Properties \"'</span>pv<span class=\"st0\">'\" '</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  sysProperties<span class=\"br0\">(</span>pv<span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'-'</span>.<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"nu0\">80</span>, <span class=\"st0\">'-'</span><span class=\"br0\">)</span>.<span class=\"kw6\">overlay</span><span class=\"br0\">(</span><span class=\"st0\">' Environment '</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  sysEnvironment<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'-'</span>.<span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"nu0\">80</span>, <span class=\"st0\">'-'</span><span class=\"br0\">)</span>.<span class=\"kw6\">overlay</span><span class=\"br0\">(</span><span class=\"st0\">' Properties '</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  sysProperties<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "NewLISP", "loc": 4, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#env\"><span class=\"kw1\">env</span></a> <span class=\"st0\">\"SHELL\"</span><span class=\"br0\">)</span><br/><span class=\"st0\">\"/bin/zsh\"</span><br/><span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#env\"><span class=\"kw1\">env</span></a> <span class=\"st0\">\"TERM\"</span><span class=\"br0\">)</span><br/><span class=\"st0\">\"xterm\"</span></pre>"}, {"lang": "Nim", "loc": 2, "block": "<pre class=\"text highlighted_source\">import os<br/>echo getEnv(\"HOME\")</pre>"}, {"lang": "NSIS", "loc": 3, "block": "<pre class=\"nsis highlighted_source\"><span class=\"kw4\">ExpandEnvStrings</span> <span class=\"re4\">$0</span> <span class=\"st0\">\"%PATH%\"</span> <span class=\"co1\">; Retrieve PATH and place it in builtin register 0.</span><br/><span class=\"kw4\">ExpandEnvStrings</span> <span class=\"re4\">$1</span> <span class=\"st0\">\"%USERPROFILE%\"</span> <span class=\"co1\">; Retrieve the user's profile location and place it in builtin register 1.</span><br/><span class=\"kw4\">ExpandEnvStrings</span> <span class=\"re4\">$2</span> <span class=\"st0\">\"%USERNAME%\"</span> <span class=\"co1\">; Retrieve the user's account name and place it in builtin register 2.</span></pre>"}, {"lang": "Objective-C", "loc": 1, "block": "<pre class=\"objc highlighted_source\"><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSProcessInfo_Class/\"><span class=\"kw5\">NSProcessInfo</span></a> processInfo<span class=\"br0\">]</span> environment<span class=\"br0\">]</span> objectForKey<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">]</span></pre>"}, {"lang": "OCaml", "loc": 1, "block": "<pre class=\"ocaml highlighted_source\"><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>getenv <span class=\"st0\">\"HOME\"</span></pre>"}, {"lang": "Oforth", "loc": 1, "block": "<pre class=\"text highlighted_source\">System getEnv(\"PATH\") println</pre>"}, {"lang": "Oz", "loc": 1, "block": "<pre class=\"oz highlighted_source\"><span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"st0\">\"This is where Mozart is installed: \"</span><span class=\"sy0\">#</span><span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>getEnv <span class=\"st0\">'OZHOME'</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\">getenv<span class=\"br0\">(</span><span class=\"st0\">\"HOME\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"re0\">$ENV</span><span class=\"br0\">{</span>HOME<span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 1, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw3\">say</span> <span class=\"re0\">%*ENV</span><span class=\"sy0\">&lt;</span>HOME<span class=\"sy0\">&gt;;</span></pre>"}, {"lang": "Phix", "loc": 1, "block": "<pre class=\"text highlighted_source\">?getenv(\"PATH\")</pre>"}, {"lang": "PHP", "loc": 1, "block": "<pre class=\"php highlighted_source\"><span class=\"re0\">$_ENV</span><span class=\"br0\">[</span><span class=\"st_h\">'HOME'</span><span class=\"br0\">]</span></pre>"}, {"lang": "PicoLisp", "loc": 5, "block": "<pre class=\"text highlighted_source\">: (sys \"TERM\")<br/>-&gt; \"xterm\"<br/>\u00a0<br/>: (sys \"SHELL\")<br/>-&gt; \"/bin/bash\"</pre>"}, {"lang": "PowerShell", "loc": 1, "block": "<pre class=\"powershell highlighted_source\"><span class=\"re0\">$Env</span>:Path</pre>"}, {"lang": "Prolog", "loc": 1, "block": "<pre>\u00a0?- getenv('TEMP', Temp).\n</pre>"}, {"lang": "PureBasic", "loc": 1, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw2\">GetEnvironmentVariable</span><span class=\"br0\">(</span><span class=\"st0\">\"Name\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 2, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">os</span><br/><span class=\"kw3\">os</span>.<span class=\"me1\">environ</span><span class=\"br0\">[</span><span class=\"st0\">'HOME'</span><span class=\"br0\">]</span></pre>"}, {"lang": "R", "loc": 1, "block": "<pre class=\"text highlighted_source\">Sys.getenv(\"PATH\")</pre>"}, {"lang": "Racket", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(getenv \"HOME\")<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 1, "block": "<pre class=\"rebol highlighted_source\"><span class=\"kw3\">print</span> get-env <span class=\"st0\">\"HOME\"</span></pre>"}, {"lang": "Retro", "loc": 2, "block": "<pre class=\"text highlighted_source\">here \"HOME\" getEnv<br/>here puts</pre>"}, {"lang": "REXX", "loc": 3, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program shows how to get an environmental variable under Windows*/</span><br/>\u00a0<br/>x=<span class=\"kw2\">value</span><span class=\"br0\">(</span><span class=\"st0\">'TEMP'</span>,,<span class=\"st0\">'SYSTEM'</span><span class=\"br0\">)</span></pre>"}, {"lang": "Ring", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>see get(\"path\")<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 1, "block": "<pre class=\"ruby highlighted_source\">ENV<span class=\"br0\">[</span><span class=\"st0\">'HOME'</span><span class=\"br0\">]</span></pre>"}, {"lang": "Run BASIC", "loc": 20, "block": "<pre class=\"text highlighted_source\">' ------- Major environment variables -------------------------------------------<br/>'DefaultDir$    - The folder path where program files are read/written by default<br/>'Platform$      - The operating system on which Run BASIC is being hosted<br/>'UserInfo$      - This is information about the user's web browser<br/>'UrlKeys$       - Contains informational parameters from the URL submitted when the user connected<br/>'UserAddress$   - Contains the IP address of the user<br/>'ProjectsRoot$  - The folder path where Run BASIC keeps programming projects<br/>'ResourcesRoot$ - The folder path where Run BASIC keeps web-servable files<br/>'Err$           - A description of the last runtime error<br/>'Err            - A numeric code for the last runtime error (errors that have no code use zero)<br/>'EventKey$      - The id of the object that generated the last user event<br/>'RowIndex       - The numeric index of the table or database accessor link that generated the last user event<br/>\u00a0<br/>\u00a0<br/>print \"User Info is  \u00a0: \";UserInfo$<br/>print \"Platform is   \u00a0: \";Platform$<br/>print \"Url Keys is   \u00a0: \";UrlKeys$<br/>print \"User Address is: \";UserAddress$<br/>print \"Event Key is  \u00a0: \";EventKey$<br/>print \"Default Dir is\u00a0: \";DefaultDir$</pre>"}, {"lang": "Scala", "loc": 8, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Environment<span class=\"sy0\">_</span>variables <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> variablesToUse <span class=\"sy0\">=</span> Seq<span class=\"br0\">(</span><span class=\"st0\">\"USERPROFILE\"</span>, <span class=\"st0\">\"java.library.path\"</span>, <span class=\"st0\">\"PATH\"</span>, <span class=\"st0\">\"HOME\"</span>, <span class=\"st0\">\"HOMEPATH\"</span>, <span class=\"st0\">\"USERNAME\"</span><span class=\"br0\">)</span><br/>  println<span class=\"br0\">(</span>sys.<span class=\"me1\">env</span>.<span class=\"me1\">filter</span><span class=\"br0\">(</span>p <span class=\"sy0\">=&gt;</span> variablesToUse contains p.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span>.<span class=\"me1\">toMap</span>.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  println<br/>  println <span class=\"br0\">(</span>System.<span class=\"me1\">getProperty</span><span class=\"br0\">(</span><span class=\"st0\">\"java.library.path\"</span><span class=\"br0\">)</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\";\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 6, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(getenv(\"HOME\"));<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 1, "block": "<pre class=\"ruby highlighted_source\">say ENV<span class=\"br0\">{</span><span class=\"st0\">'HOME'</span><span class=\"br0\">}</span>;</pre>"}, {"lang": "Slate", "loc": 2, "block": "<pre class=\"text highlighted_source\">Environment variables at: 'PATH'.<br/>\"==&gt; '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games'\"</pre>"}, {"lang": "Smalltalk", "loc": 5, "block": "<pre class=\"smalltalk highlighted_source\">\u00a0<br/><span class=\"re0\">OSProcess</span> thisOSProcess environment at: <span class=\"re1\">#HOME</span>.<br/><span class=\"re0\">OSProcess</span> thisOSProcess environment at: <span class=\"re1\">#PATH</span>.<br/><span class=\"re0\">OSProcess</span> thisOSProcess environment at: <span class=\"re1\">#USER</span>.<br/>\u00a0</pre>"}, {"lang": "SNOBOL4", "loc": 2, "block": "<pre class=\"text highlighted_source\">         output = host(4,'PATH')<br/>end</pre>"}, {"lang": "Standard ML", "loc": 1, "block": "<pre class=\"text highlighted_source\">OS.Process.getEnv \"HOME\"</pre>"}, {"lang": "Stata", "loc": 3, "block": "<pre class=\"text highlighted_source\">display \"`:env PATH'\"<br/>display \"`:env USERNAME'\"<br/>display \"`:env USERPROFILE'\"</pre>"}, {"lang": "Tcl", "loc": 1, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\"><span class=\"re0\">$env</span></span><span class=\"br0\">(</span>HOME<span class=\"br0\">)</span></pre>"}, {"lang": "TXR", "loc": 4, "block": "<pre class=\"text highlighted_source\">@(next\u00a0:env)<br/>@(collect)<br/>@<a class=\"__cf_email__\" data-cfemail=\"c4928596f984928588\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>@(end)</pre>"}, {"lang": "UNIX Shell", "loc": 1, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw3\">echo</span> <span class=\"st0\">\"<span class=\"es2\">$HOME</span>\"</span></pre>"}, {"lang": "Ursa", "loc": 2, "block": "<pre class=\"text highlighted_source\">import \"system\"<br/>out (system.getenv \"HOME\") endl console</pre>"}, {"lang": "Ursala", "loc": 5, "block": "<pre class=\"text highlighted_source\">#import std<br/>\u00a0<br/>#executable ('parameterized','')<br/>\u00a0<br/>showenv = &lt;.file$[contents: --&lt;''&gt;]&gt;+\u00a0%smP+ ~&amp;n-={'TERM','SHELL','X11BROWSER'}*~+ ~environs</pre>"}, {"lang": "Vedit macro language", "loc": 2, "block": "<pre class=\"vedit highlighted_source\">Get_Environment<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"st0\">\"PATH\"</span><span class=\"br0\">)</span><br/>Message<span class=\"br0\">(</span>@10<span class=\"br0\">)</span></pre>"}, {"lang": "XPL0", "loc": 28, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;          \\intrinsic 'code' declarations<br/>string 0;                       \\use zero-terminated strings<br/>int  CpuReg, PspSeg, EnvSeg, I, J, C;<br/>char EnvVar;<br/>[CpuReg:= GetReg;               \\access CPU registers<br/>PspSeg:= CpuReg(9);             \\get segment address of our PSP<br/>EnvSeg:= Peek(PspSeg,$2C) + Peek(PspSeg,$2D)&lt;&lt;8;<br/>EnvVar:= \"PATH\";                \\environment variable<br/>I:= 0;<br/>loop    [J:= 0;<br/>        loop    [C:= Peek(EnvSeg,I);  I:= I+1;<br/>                if C = 0 then quit;<br/>                if C = EnvVar(J) then<br/>                        [J:= J+1;<br/>                        if J = 4 then<br/>                                [Text(0, EnvVar);               \\show env. var.<br/>                                loop    [C:= Peek(EnvSeg,I);    \\ and rest of<br/>                                        I:= I+1;                \\ its string<br/>                                        if C = 0 then exit;<br/>                                        ChOut(0, C);<br/>                                        ];<br/>                                ];<br/>                        ]<br/>                else J:= 5;     \\line must start with environment variable<br/>                ];<br/>        if Peek(EnvSeg,I) = 0 then quit;        \\double 0 = env. var. not found<br/>        ];<br/>]</pre>"}, {"lang": "zkl", "loc": 3, "block": "<pre class=\"text highlighted_source\">System.getenv(\"HOME\")<br/>/home/craigd<br/>System.getenv() //--&gt; Dictionary of all env vars</pre>"}]}