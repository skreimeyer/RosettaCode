{"task": "Image_noise", "blocks": [{"lang": "Ada", "loc": 7, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Lumen.<span class=\"me1\">Image</span>;<br/>\u00a0<br/><span class=\"kw3\">package</span> Noise <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">function</span> Create_Image <span class=\"br0\">(</span>Width, Height\u00a0: Natural<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Lumen.<span class=\"me1\">Image</span>.<span class=\"me1\">Descriptor</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span> Noise;</pre>"}, {"lang": "Axe", "loc": 43, "block": "<pre class=\"text highlighted_source\">.Enable 15 MHz full speed mode<br/>Full<br/>.Disable memory access delays (adds 1 FPS)<br/>Full\u02b3<br/>\u00a0<br/>.Flush key presses<br/>While getKey(0)<br/>End<br/>\u00a0<br/>.Setup<br/>0\u2192F<br/>0\u2192N<br/>Fix 5<br/>fnInt(FPS,6)<br/>\u00a0<br/>Repeat getKey(0)<br/> NOISE()<br/> F++<br/> .Reset the FPS counter before it overflows<br/> F&gt;606?0\u2192F\u2192N<br/> Text(0,0,F*108/N\u25b6Dec)<br/> DispGraph<br/>End<br/>\u00a0<br/>.Clean up<br/>LnReg\u02b3<br/>Fix 4<br/>Return<br/>\u00a0<br/>.Draws random noise to the buffer<br/>Lbl NOISE<br/>ClrDraw<br/>For(I,0,5)<br/> For(J,0,63)<br/>  rand\u2192{J*12+(I*2)+L\u2086}\u02b3<br/> End<br/>End<br/>Return<br/>\u00a0<br/>.Increments the tick counter<br/>Lbl FPS<br/>N++<br/>Return</pre>"}, {"lang": "BBC BASIC", "loc": 36, "block": "<pre class=\"text highlighted_source\">      dx% = 320<br/>      dy% = 240<br/>      images% = 100000<br/>      VDU 23,22,dx%;dy%;8,8,16,0<br/>\u00a0<br/>      REM Create a block of random data in memory:<br/>      DIM random% dx%*dy%+images%<br/>      FOR R% = random% TO random%+dx%*dy%+images%<br/>       \u00a0?R% = RND(256)-1<br/>      NEXT<br/>\u00a0<br/>      REM Create a BMP file structure:<br/>      DIM bmpfile{bfType{l&amp;,h&amp;}, bfSize%, bfReserved%, bfOffBits%, \\<br/>      \\   biSize%, biWidth%, biHeight%, biPlanes{l&amp;,h&amp;}, biBitCount{l&amp;,h&amp;}, \\<br/>      \\   biCompression%, biSizeImage%, biXPelsPerMeter%, biYPelsPerMeter%, \\<br/>      \\   biClrUsed%, biClrImportant%, biPalette%(255)}<br/>      bmpfile.biSize% = 40<br/>      bmpfile.biWidth% = dx%<br/>      bmpfile.biHeight% = dy%<br/>      bmpfile.biPlanes.l&amp; = 1<br/>      bmpfile.biBitCount.l&amp; = 8<br/>      FOR C% = 0 TO 255<br/>        bmpfile.biPalette%(C%) = C% OR C%&lt;&lt;8 OR C%&lt;&lt;16<br/>      NEXT<br/>\u00a0<br/>      REM Display image at a random offset into the data:<br/>      frame% = 0<br/>      TIME = 0<br/>      REPEAT<br/>        bmpfile.bfOffBits% = random% - bmpfile{} + RND(images%)<br/>        OSCLI \"MDISPLAY \" + STR$~bmpfile{}<br/>        frame% += 1<br/>        IF TIME&gt;10 THEN<br/>          SYS \"SetWindowText\", @hwnd%, \"BBC BASIC: \" + STR$(frame%*100 DIV TIME) + \" fps\"<br/>        ENDIF<br/>      UNTIL FALSE</pre>"}, {"lang": "C", "loc": 50, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"co2\">#include &lt;SDL/SDL.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> frames <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> t_acc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> print_fps <span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">static</span> Uint32 last_t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  Uint32 t <span class=\"sy0\">=</span> SDL_GetTicks<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  Uint32 dt <span class=\"sy0\">=</span> t <span class=\"sy0\">-</span> last_t<span class=\"sy0\">;</span><br/>  t_acc <span class=\"sy0\">+=</span> dt<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>t_acc <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> el_time <span class=\"sy0\">=</span> t_acc <span class=\"sy0\">/</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"- fps:\u00a0%g<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>            <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> frames <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> el_time<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    t_acc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    frames <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  last_t <span class=\"sy0\">=</span> t<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> blit_noise<span class=\"br0\">(</span>SDL_Surface <span class=\"sy0\">*</span>surf<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">long</span> dim <span class=\"sy0\">=</span> surf<span class=\"sy0\">-&gt;</span>w <span class=\"sy0\">*</span> surf<span class=\"sy0\">-&gt;</span>h<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    SDL_LockSurface<span class=\"br0\">(</span>surf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> dim<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span>surf<span class=\"sy0\">-&gt;</span>pixels<span class=\"br0\">)</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">255</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    SDL_UnlockSurface<span class=\"br0\">(</span>surf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    SDL_Flip<span class=\"br0\">(</span>surf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"sy0\">++</span>frames<span class=\"sy0\">;</span><br/>    print_fps<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  SDL_Surface <span class=\"sy0\">*</span>surf <span class=\"sy0\">=</span> NULL<span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/srand.html\"><span class=\"kw3\">srand</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span>NULL<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  SDL_Init<span class=\"br0\">(</span>SDL_INIT_TIMER <span class=\"sy0\">|</span> SDL_INIT_VIDEO<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  surf <span class=\"sy0\">=</span> SDL_SetVideoMode<span class=\"br0\">(</span><span class=\"nu0\">320</span><span class=\"sy0\">,</span> <span class=\"nu0\">240</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> SDL_DOUBLEBUF <span class=\"sy0\">|</span> SDL_HWSURFACE<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  blit_noise<span class=\"br0\">(</span>surf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 233, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;windows.h&gt;</span><br/><span class=\"co2\">#include &lt;sstream&gt;</span><br/><span class=\"co2\">#include &lt;tchar.h&gt;</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw4\">const</span> <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> BMP_WID <span class=\"sy1\">=</span> <span class=\"nu0\">320</span>, BMP_HEI <span class=\"sy1\">=</span> <span class=\"nu0\">240</span>, WHITE <span class=\"sy1\">=</span> <span class=\"nu0\">16777215</span>, BLACK <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> myBitmap<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    myBitmap<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> pen<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span>, brush<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span>, clr<span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span>, wid<span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    ~myBitmap<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tDeleteObject<span class=\"br0\">(</span> pen <span class=\"br0\">)</span><span class=\"sy4\">;</span> DeleteObject<span class=\"br0\">(</span> brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tDeleteDC<span class=\"br0\">(</span> hdc <span class=\"br0\">)</span><span class=\"sy4\">;</span> DeleteObject<span class=\"br0\">(</span> bmp <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> create<span class=\"br0\">(</span> <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tBITMAPINFO    bi<span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>bi, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bi <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tbi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSize</span>        <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bi.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tbi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biBitCount</span>    <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span><br/>\tbi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biCompression</span> <span class=\"sy1\">=</span> BI_RGB<span class=\"sy4\">;</span><br/>\tbi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biPlanes</span>      <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>\tbi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biWidth</span>       <span class=\"sy1\">=</span>  w<span class=\"sy4\">;</span><br/>\tbi.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biHeight</span>      <span class=\"sy1\">=</span> <span class=\"sy2\">-</span>h<span class=\"sy4\">;</span><br/>\tHDC dc <span class=\"sy1\">=</span> GetDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tbmp <span class=\"sy1\">=</span> CreateDIBSection<span class=\"br0\">(</span> dc, <span class=\"sy3\">&amp;</span>bi, DIB_RGB_COLORS, <span class=\"sy3\">&amp;</span>pBits, <span class=\"kw2\">NULL</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"sy3\">!</span>bmp <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy4\">;</span><br/>\thdc <span class=\"sy1\">=</span> CreateCompatibleDC<span class=\"br0\">(</span> dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tSelectObject<span class=\"br0\">(</span> hdc, bmp <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tReleaseDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span>, dc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\twidth <span class=\"sy1\">=</span> w<span class=\"sy4\">;</span> height <span class=\"sy1\">=</span> h<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> clear<span class=\"br0\">(</span> BYTE clr <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">memset</span><span class=\"br0\">(</span> pBits, clr, width <span class=\"sy2\">*</span> height <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> setBrushColor<span class=\"br0\">(</span> DWORD bClr <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> brush <span class=\"br0\">)</span> DeleteObject<span class=\"br0\">(</span> brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tbrush <span class=\"sy1\">=</span> CreateSolidBrush<span class=\"br0\">(</span> bClr <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tSelectObject<span class=\"br0\">(</span> hdc, brush <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> setPenColor<span class=\"br0\">(</span> DWORD c <span class=\"br0\">)</span> <span class=\"br0\">{</span> clr <span class=\"sy1\">=</span> c<span class=\"sy4\">;</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> setPenWidth<span class=\"br0\">(</span> <span class=\"kw4\">int</span> w <span class=\"br0\">)</span> <span class=\"br0\">{</span> wid <span class=\"sy1\">=</span> w<span class=\"sy4\">;</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> saveBitmap<span class=\"br0\">(</span> string path <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tBITMAPFILEHEADER fileheader<span class=\"sy4\">;</span><br/>\tBITMAPINFO       infoheader<span class=\"sy4\">;</span><br/>\tBITMAP           bitmap<span class=\"sy4\">;</span><br/>\tDWORD            wb<span class=\"sy4\">;</span><br/>\u00a0<br/>\tGetObject<span class=\"br0\">(</span> bmp, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> bitmap <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>bitmap <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tDWORD<span class=\"sy2\">*</span> dwpBits <span class=\"sy1\">=</span> <span class=\"kw3\">new</span> DWORD<span class=\"br0\">[</span>bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> dwpBits, bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span> <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>infoheader, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPINFO <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>fileheader, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPFILEHEADER <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biBitCount</span> <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span> <span class=\"sy2\">*</span> <span class=\"nu0\">8</span><span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biCompression</span> <span class=\"sy1\">=</span> BI_RGB<span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biPlanes</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSize</span> <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> infoheader.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biHeight</span> <span class=\"sy1\">=</span> bitmap.<span class=\"me1\">bmHeight</span><span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biWidth</span> <span class=\"sy1\">=</span> bitmap.<span class=\"me1\">bmWidth</span><span class=\"sy4\">;</span><br/>\tinfoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSizeImage</span> <span class=\"sy1\">=</span> bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span> <span class=\"sy2\">*</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> DWORD <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tfileheader.<span class=\"me1\">bfType</span>    <span class=\"sy1\">=</span> <span class=\"nu12\">0x4D42</span><span class=\"sy4\">;</span><br/>\tfileheader.<span class=\"me1\">bfOffBits</span> <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> infoheader.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPFILEHEADER <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tfileheader.<span class=\"me1\">bfSize</span>    <span class=\"sy1\">=</span> fileheader.<span class=\"me1\">bfOffBits</span> <span class=\"sy2\">+</span> infoheader.<span class=\"me1\">bmiHeader</span>.<span class=\"me1\">biSizeImage</span><span class=\"sy4\">;</span><br/>\tGetDIBits<span class=\"br0\">(</span> hdc, bmp, <span class=\"nu0\">0</span>, height, <span class=\"br0\">(</span> LPVOID <span class=\"br0\">)</span>dwpBits, <span class=\"sy3\">&amp;</span>infoheader, DIB_RGB_COLORS <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tHANDLE file <span class=\"sy1\">=</span> CreateFile<span class=\"br0\">(</span> path.<span class=\"me1\">c_str</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, GENERIC_WRITE, <span class=\"nu0\">0</span>, <span class=\"kw2\">NULL</span>, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tWriteFile<span class=\"br0\">(</span> file, <span class=\"sy3\">&amp;</span>fileheader, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> BITMAPFILEHEADER <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>wb, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tWriteFile<span class=\"br0\">(</span> file, <span class=\"sy3\">&amp;</span>infoheader.<span class=\"me1\">bmiHeader</span>, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> infoheader.<span class=\"me1\">bmiHeader</span> <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>wb, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tWriteFile<span class=\"br0\">(</span> file, dwpBits, bitmap.<span class=\"me1\">bmWidth</span> <span class=\"sy2\">*</span> bitmap.<span class=\"me1\">bmHeight</span> <span class=\"sy2\">*</span> <span class=\"nu0\">4</span>, <span class=\"sy3\">&amp;</span>wb, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tCloseHandle<span class=\"br0\">(</span> file <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw3\">delete</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> dwpBits<span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span><span class=\"sy2\">*</span> getBits<span class=\"br0\">(</span> <span class=\"kw4\">void</span> <span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> pBits<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    HDC getDC<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span>     <span class=\"br0\">{</span> <span class=\"kw1\">return</span> hdc<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span>  <span class=\"br0\">{</span> <span class=\"kw1\">return</span> width<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> height<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> createPen<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> pen <span class=\"br0\">)</span> DeleteObject<span class=\"br0\">(</span> pen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tpen <span class=\"sy1\">=</span> CreatePen<span class=\"br0\">(</span> PS_SOLID, wid, clr <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tSelectObject<span class=\"br0\">(</span> hdc, pen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    HBITMAP bmp<span class=\"sy4\">;</span><br/>    HDC     hdc<span class=\"sy4\">;</span><br/>    HPEN    pen<span class=\"sy4\">;</span><br/>    HBRUSH  brush<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">void</span><span class=\"sy2\">*</span>   pBits<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span>     width, height, wid<span class=\"sy4\">;</span><br/>    DWORD   clr<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> bmpNoise<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    bmpNoise<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tQueryPerformanceFrequency<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>_frequency <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t_bmp.<span class=\"me1\">create</span><span class=\"br0\">(</span> BMP_WID, BMP_HEI <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t_frameTime <span class=\"sy1\">=</span> _fps <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> _start <span class=\"sy1\">=</span> getTime<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> _frames <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> mainLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">float</span> now <span class=\"sy1\">=</span> getTime<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> now <span class=\"sy2\">-</span> _start <span class=\"sy1\">&gt;</span> <span class=\"nu17\">1.0f</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span> _fps <span class=\"sy1\">=</span> <span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">float</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> _frames <span class=\"br0\">)</span> <span class=\"sy2\">/</span> <span class=\"br0\">(</span> now <span class=\"sy2\">-</span> _start <span class=\"br0\">)</span><span class=\"sy4\">;</span> _start <span class=\"sy1\">=</span> now<span class=\"sy4\">;</span> _frames <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\tHDC wdc, dc <span class=\"sy1\">=</span> _bmp.<span class=\"me1\">getDC</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span><span class=\"sy2\">*</span> bits <span class=\"sy1\">=</span> <span class=\"kw2\">reinterpret_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span><span class=\"sy2\">*</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span> _bmp.<span class=\"me1\">getBits</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> y <span class=\"sy1\">&lt;</span> BMP_HEI<span class=\"sy4\">;</span> y<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> BMP_WID<span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> <span class=\"nu0\">10</span> <span class=\"sy1\">&lt;</span> <span class=\"nu0\">5</span> <span class=\"br0\">)</span> <span class=\"kw3\">memset</span><span class=\"br0\">(</span> bits, <span class=\"nu0\">255</span>, <span class=\"nu0\">3</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">else</span> <span class=\"kw3\">memset</span><span class=\"br0\">(</span> bits, <span class=\"nu0\">0</span>, <span class=\"nu0\">3</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\tbits<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\tostringstream o<span class=\"sy4\">;</span> o <span class=\"sy1\">&lt;&lt;</span> _fps<span class=\"sy4\">;</span> TextOut<span class=\"br0\">(</span> dc, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, o.<span class=\"me1\">str</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">c_str</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, o.<span class=\"me1\">str</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\twdc <span class=\"sy1\">=</span> GetDC<span class=\"br0\">(</span> _hwnd <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tBitBlt<span class=\"br0\">(</span> wdc, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, BMP_WID, BMP_HEI, dc, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, SRCCOPY <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tReleaseDC<span class=\"br0\">(</span> _hwnd, wdc <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t_frames<span class=\"sy2\">++</span><span class=\"sy4\">;</span> _frameTime <span class=\"sy1\">=</span> getTime<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">-</span> now<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> _frameTime <span class=\"sy1\">&gt;</span> <span class=\"nu17\">1.0f</span> <span class=\"br0\">)</span> _frameTime <span class=\"sy1\">=</span> <span class=\"nu17\">1.0f</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> setHWND<span class=\"br0\">(</span> HWND hwnd <span class=\"br0\">)</span> <span class=\"br0\">{</span> _hwnd <span class=\"sy1\">=</span> hwnd<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">float</span> getTime<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tLARGE_INTEGER liTime<span class=\"sy4\">;</span> QueryPerformanceCounter<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>liTime <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">return</span> liTime.<span class=\"me1\">QuadPart</span>  <span class=\"sy2\">/</span> <span class=\"br0\">(</span> <span class=\"kw4\">float</span> <span class=\"br0\">)</span>_frequency.<span class=\"me1\">QuadPart</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    myBitmap      _bmp<span class=\"sy4\">;</span><br/>    HWND          _hwnd<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">float</span>         _start, _fps, _frameTime<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span>  _frames<span class=\"sy4\">;</span><br/>    LARGE_INTEGER _frequency<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> wnd<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    wnd<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> _inst <span class=\"sy1\">=</span> <span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int</span> wnd<span class=\"sy4\">::</span><span class=\"me2\">Run</span><span class=\"br0\">(</span> HINSTANCE hInst <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t_hInst <span class=\"sy1\">=</span> hInst<span class=\"sy4\">;</span> _hwnd <span class=\"sy1\">=</span> InitAll<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>        _noise.<span class=\"me1\">setHWND</span><span class=\"br0\">(</span> _hwnd <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tShowWindow<span class=\"br0\">(</span> _hwnd, SW_SHOW <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tUpdateWindow<span class=\"br0\">(</span> _hwnd <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\tMSG msg<span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> msg <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">while</span><span class=\"br0\">(</span> msg.<span class=\"me1\">message</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> WM_QUIT <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span><span class=\"br0\">(</span> PeekMessage<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg, <span class=\"kw2\">NULL</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, PM_REMOVE <span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\tTranslateMessage<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t\tDispatchMessage<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>msg <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw1\">else</span><br/>\t    <span class=\"br0\">{</span><br/>\t\t_noise.<span class=\"me1\">mainLoop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> UnregisterClass<span class=\"br0\">(</span> <span class=\"st0\">\"_MY_NOISE_\"</span>, _hInst <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> WINAPI wnd<span class=\"sy4\">::</span><span class=\"me2\">WndProc</span><span class=\"br0\">(</span> HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">switch</span><span class=\"br0\">(</span> msg <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">case</span> WM_DESTROY<span class=\"sy4\">:</span> PostQuitMessage<span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">default</span><span class=\"sy4\">:</span><br/>\t        <span class=\"kw1\">return</span> DefWindowProc<span class=\"br0\">(</span> hWnd, msg, wParam, lParam <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    HWND InitAll<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tWNDCLASSEX wcex<span class=\"sy4\">;</span><br/>\tZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>wcex, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> wcex <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">cbSize</span>           <span class=\"sy1\">=</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> WNDCLASSEX <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">style</span>           <span class=\"sy1\">=</span> CS_HREDRAW <span class=\"sy3\">|</span> CS_VREDRAW<span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">lpfnWndProc</span>   <span class=\"sy1\">=</span> <span class=\"br0\">(</span> WNDPROC <span class=\"br0\">)</span>WndProc<span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">hInstance</span>     <span class=\"sy1\">=</span> _hInst<span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">hCursor</span>       <span class=\"sy1\">=</span> LoadCursor<span class=\"br0\">(</span> <span class=\"kw2\">NULL</span>, IDC_ARROW <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">hbrBackground</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span> HBRUSH <span class=\"br0\">)</span><span class=\"br0\">(</span> COLOR_WINDOW <span class=\"sy2\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\twcex.<span class=\"me1\">lpszClassName</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"_MY_NOISE_\"</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\tRegisterClassEx<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>wcex <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\tRECT rc <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, BMP_WID, BMP_HEI <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\tAdjustWindowRect<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>rc, WS_SYSMENU <span class=\"sy3\">|</span> WS_CAPTION, FALSE <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw4\">int</span> w <span class=\"sy1\">=</span> rc.<span class=\"me1\">right</span> <span class=\"sy2\">-</span> rc.<span class=\"me1\">left</span>, h <span class=\"sy1\">=</span> rc.<span class=\"me1\">bottom</span> <span class=\"sy2\">-</span> rc.<span class=\"me1\">top</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">return</span> CreateWindow<span class=\"br0\">(</span> <span class=\"st0\">\"_MY_NOISE_\"</span>, <span class=\"st0\">\".: Noise image -- PJorente\u00a0:.\"</span>, WS_SYSMENU, CW_USEDEFAULT, <span class=\"nu0\">0</span>, w, h, <span class=\"kw2\">NULL</span>, <span class=\"kw2\">NULL</span>, _hInst, <span class=\"kw2\">NULL</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">static</span> wnd<span class=\"sy2\">*</span> _inst<span class=\"sy4\">;</span><br/>    HINSTANCE   _hInst<span class=\"sy4\">;</span><br/>    HWND        _hwnd<span class=\"sy4\">;</span><br/>    bmpNoise    _noise<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>wnd<span class=\"sy2\">*</span> wnd<span class=\"sy4\">::</span>_inst <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw4\">int</span> APIENTRY _tWinMain<span class=\"br0\">(</span> HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, <span class=\"kw4\">int</span> nCmdShow <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">srand</span><span class=\"br0\">(</span> GetTickCount<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span> wnd myWnd<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> myWnd.<span class=\"me1\">Run</span><span class=\"br0\">(</span> hInstance <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 113, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.ComponentModel</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing.Imaging</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Runtime.InteropServices</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Windows.Forms</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> Size size <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Size<span class=\"br0\">(</span><span class=\"nu0\">320</span>, <span class=\"nu0\">240</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> Rectangle rectsize <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Rectangle<span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>, size<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> numpixels <span class=\"sy0\">=</span> size<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">*</span> size<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> numbytes <span class=\"sy0\">=</span> numpixels <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> PictureBox pb<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> BackgroundWorker worker<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> time <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> frames <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> Random rand <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">byte</span> tmp<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">byte</span> white <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">byte</span> black <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> halfmax <span class=\"sy0\">=</span> <span class=\"kw4\">int</span><span class=\"sy0\">.</span><span class=\"me1\">MaxValue</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"co1\">// more voodoo! calling Next() is faster than Next(2)!</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> IEnumerable<span class=\"sy0\">&lt;</span><span class=\"kw4\">byte</span><span class=\"sy0\">&gt;</span> YieldVodoo<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Yield 3 times same number (i.e 255 255 255) for numpixels times. </span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> numpixels<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            tmp <span class=\"sy0\">=</span> rand<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> halfmax <span class=\"sy0\">?</span> black <span class=\"sy0\">:</span> white<span class=\"sy0\">;</span> <span class=\"co1\">// no more lists!  </span><br/>\u00a0<br/>            <span class=\"co1\">// no more loops! yield! yield! yield!</span><br/>            <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> tmp<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> tmp<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> tmp<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> Image Randimg<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Low-level bitmaps  </span><br/>        <span class=\"kw1\">var</span> bitmap <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Bitmap<span class=\"br0\">(</span>size<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, size<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> data <span class=\"sy0\">=</span> bitmap<span class=\"sy0\">.</span><span class=\"me1\">LockBits</span><span class=\"br0\">(</span>rectsize, ImageLockMode<span class=\"sy0\">.</span><span class=\"me1\">WriteOnly</span>, PixelFormat<span class=\"sy0\">.</span><span class=\"me1\">Format24bppRgb</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        Marshal<span class=\"sy0\">.</span><span class=\"me1\">Copy</span><span class=\"br0\">(</span><br/>            YieldVodoo<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToArray</span><span class=\"sy0\">&lt;</span><span class=\"kw4\">byte</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<span class=\"co1\">// source</span><br/>            <span class=\"nu0\">0</span>, <span class=\"co1\">// start</span><br/>            data<span class=\"sy0\">.</span><span class=\"me1\">Scan0</span>, <span class=\"co1\">// scan0 is a pointer to low-level bitmap data</span><br/>            numbytes<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// number of bytes in source</span><br/>\u00a0<br/>        bitmap<span class=\"sy0\">.</span><span class=\"me1\">UnlockBits</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> bitmap<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">[</span>STAThread<span class=\"br0\">]</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> form <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Form<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        form<span class=\"sy0\">.</span><span class=\"me1\">AutoSize</span> <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>        form<span class=\"sy0\">.</span><span class=\"me1\">Size</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Size<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        form<span class=\"sy0\">.</span><span class=\"me1\">Text</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Test\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        form<span class=\"sy0\">.</span><span class=\"me1\">FormClosed</span> <span class=\"sy0\">+=</span> <span class=\"kw4\">delegate</span><br/>        <span class=\"br0\">{</span><br/>            Application<span class=\"sy0\">.</span><span class=\"me1\">Exit</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        worker <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> BackgroundWorker<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        worker<span class=\"sy0\">.</span><span class=\"me1\">DoWork</span> <span class=\"sy0\">+=</span> <span class=\"kw4\">delegate</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw5\">System.<span class=\"me1\">Threading</span></span><span class=\"sy0\">.</span><span class=\"me1\">Thread</span><span class=\"sy0\">.</span><span class=\"me1\">Sleep</span><span class=\"br0\">(</span><span class=\"nu0\">500</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// remove try/catch, just wait a bit before looping</span><br/>\u00a0<br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw1\">true</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">var</span> a <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"me1\">Now</span><span class=\"sy0\">;</span><br/>                pb<span class=\"sy0\">.</span><span class=\"me1\">Image</span> <span class=\"sy0\">=</span> Randimg<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">var</span> b <span class=\"sy0\">=</span> DateTime<span class=\"sy0\">.</span><span class=\"me1\">Now</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                time <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>b <span class=\"sy0\">-</span> a<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">TotalSeconds</span><span class=\"sy0\">;</span><br/>                frames <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>frames <span class=\"sy0\">==</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0} frames in {1:0.000} seconds. ({2:0} FPS)\"</span>, frames, time, frames <span class=\"sy0\">/</span> time<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    time <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                    frames <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        worker<span class=\"sy0\">.</span><span class=\"me1\">RunWorkerAsync</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        FlowLayoutPanel flp <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> FlowLayoutPanel<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        form<span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>flp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        pb <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> PictureBox<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        pb<span class=\"sy0\">.</span><span class=\"me1\">Size</span> <span class=\"sy0\">=</span> size<span class=\"sy0\">;</span><br/>\u00a0<br/>        flp<span class=\"sy0\">.</span><span class=\"me1\">AutoSize</span> <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>        flp<span class=\"sy0\">.</span><span class=\"me1\">Controls</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>pb<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        form<span class=\"sy0\">.</span><span class=\"me1\">Show</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Application<span class=\"sy0\">.</span><span class=\"me1\">Run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 40, "block": "<pre class=\"lisp highlighted_source\"><span class=\"co1\">;; (require\u00a0:lispbuilder-sdl)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> draw-noise <span class=\"br0\">(</span>surface<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"draws noise on the surface. Returns the surface\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>width <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">width</span> surface<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>height <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">height</span> surface<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>i-white <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">map-color</span> sdl<span class=\"sy0\">:</span>*white* surface<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>i-black <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">map-color</span> sdl<span class=\"sy0\">:</span>*black* surface<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>sdl-base<span class=\"sy0\">::</span><span class=\"me0\">with-pixel</span> <span class=\"br0\">(</span>s <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">fp</span> surface<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>h height<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>w width<span class=\"br0\">)</span><br/>\t  <span class=\"br0\">(</span>sdl-base<span class=\"sy0\">::</span><span class=\"me0\">write-pixel</span> s w h <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">zerop</span> <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t   i-white i-black <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  surface<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> draw-fps <span class=\"br0\">(</span>surface<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"draws fps text-info on surface. Returns surface\"</span><br/>  <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">with-surface</span> <span class=\"br0\">(</span>s surface<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">draw-string-solid-</span>* <span class=\"br0\">(</span>format <span class=\"kw1\">nil</span> <span class=\"st0\">\"FPS: ~,3f\"</span> <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">average-fps</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t     <span class=\"nu0\">20</span> <span class=\"nu0\">20</span> <span class=\"sy0\">:</span><span class=\"me1\">surface</span> s <span class=\"sy0\">:</span><span class=\"me1\">color</span> sdl<span class=\"sy0\">:</span>*magenta*<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"main function, initializes the library and creates de display window\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">setf</span> *random-state* <span class=\"br0\">(</span>make-random-state<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">with-init</span> <span class=\"br0\">(</span>SDL<span class=\"sy0\">:</span><span class=\"me1\">SDL-INIT-VIDEO</span> SDL<span class=\"sy0\">:</span><span class=\"me1\">SDL-INIT-TIMER</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>main-window <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">window</span> <span class=\"nu0\">320</span> <span class=\"nu0\">240</span><br/>\t\t\t\t   <span class=\"sy0\">:</span><span class=\"me1\">title-caption</span> <span class=\"st0\">\"noise_sdl.lisp\"</span><br/>\t\t\t\t   <span class=\"sy0\">:</span><span class=\"me1\">bpp</span> <span class=\"nu0\">8</span><br/>\t\t\t\t   <span class=\"sy0\">:</span><span class=\"me1\">flags</span> <span class=\"br0\">(</span><span class=\"kw1\">logior</span> SDL<span class=\"sy0\">:</span><span class=\"me1\">SDL-DOUBLEBUF</span> SDL<span class=\"sy0\">:</span><span class=\"me1\">SDL-HW-SURFACE</span><span class=\"br0\">)</span><br/>\t\t\t\t   <span class=\"sy0\">:</span><span class=\"me1\">fps</span> <span class=\"br0\">(</span>make-instance 'sdl<span class=\"sy0\">:</span><span class=\"me1\">fps-unlocked</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">initialise-default-font</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">with-events</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">idle</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t       <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">update-display</span> <span class=\"br0\">(</span>draw-fps <span class=\"br0\">(</span>draw-noise main-window<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">video-expose-event</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t\t     <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">update-display</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">quit-event</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> T<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>main<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 24, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">random</span><span class=\"sy0\">,</span> sdl.<span class=\"me1\">SDL</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  SDL_Init<span class=\"br0\">(</span>SDL_INIT_TIMER <span class=\"sy0\">|</span> SDL_INIT_VIDEO<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">auto</span> surface <span class=\"sy0\">=</span> SDL_SetVideoMode<span class=\"br0\">(</span><span class=\"nu0\">320</span><span class=\"sy0\">,</span><span class=\"nu0\">240</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> SDL_DOUBLEBUF<span class=\"sy0\">|</span>SDL_HWSURFACE<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">uint</span> frameNumber<span class=\"sy0\">,</span> totalTime<span class=\"sy0\">,</span> lastTime<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    SDL_LockSurface<span class=\"br0\">(</span>surface<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>i<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">surface</span>.<span class=\"me1\">w</span> <span class=\"sy0\">*</span> surface.<span class=\"me1\">h</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">ubyte</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>surface.<span class=\"me1\">pixels</span><span class=\"br0\">)</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>uniform<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">255</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    SDL_UnlockSurface<span class=\"br0\">(</span>surface<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    SDL_Flip<span class=\"br0\">(</span>surface<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    frameNumber<span class=\"sy0\">++;</span><br/>\u00a0<br/>    <span class=\"kw4\">uint</span> time <span class=\"sy0\">=</span> SDL_GetTicks<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    totalTime <span class=\"sy0\">+=</span> time <span class=\"sy0\">-</span> lastTime<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>totalTime <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      writeln<span class=\"br0\">(</span><span class=\"st0\">\"FPS: \"</span><span class=\"sy0\">,</span> frameNumber <span class=\"sy0\">/</span> <span class=\"br0\">(</span>totalTime <span class=\"sy0\">/</span> <span class=\"nu16\">1000.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      totalTime <span class=\"sy0\">=</span> frameNumber <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    lastTime <span class=\"sy0\">=</span> time<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Euler Math Toolbox", "loc": 15, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&gt;function noiseimg () ...<br/>$aspect(320,240); clg;<br/>$count=0; now=time;<br/>$repeat<br/>$  plotrgb(intrandom(240,420,2)-1,[0,0,1024,1024]);<br/>$  wait(0);<br/>$  count=count+1;<br/>$  until testkey();<br/>$end;<br/>$return count/(time-now);<br/>$endfunction<br/>&gt;noiseimg<br/> 2.73544353263<br/>\u00a0</pre>"}, {"lang": "F#", "loc": 74, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System.<span class=\"me1\">Windows</span>.<span class=\"me1\">Forms</span><br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Drawing</span><br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Drawing</span>.<span class=\"me1\">Imaging</span><br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Runtime</span>.<span class=\"me1\">InteropServices</span><br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Diagnostics</span><br/><span class=\"kw1\">open</span> Microsoft.<span class=\"me1\">FSharp</span>.<span class=\"me1\">NativeInterop</span><br/><span class=\"co2\">#nowarn \"9\"</span><br/>\u00a0<br/><span class=\"kw1\">let</span> rnd <span class=\"sy0\">=</span> System.<span class=\"me1\">Random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">// Draw pixels using unsafe native pointer accessor.</span><br/><span class=\"co1\">// This updates the bitmap as fast as possible.</span><br/><span class=\"kw1\">let</span> drawbits_fast <span class=\"br0\">(</span>size:<span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>bits:BitmapData<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> <span class=\"kw1\">mutable</span> <span class=\"br0\">(</span>p:<span class=\"kw4\">nativeptr</span><span class=\"sy0\">&lt;</span><span class=\"kw4\">byte</span><span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">NativePtr</span></a>.<span class=\"me1\">ofNativeInt</span><span class=\"br0\">(</span>bits.<span class=\"me1\">Scan0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> size<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">let</span> c <span class=\"sy0\">=</span> rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><br/>        <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">NativePtr</span></a>.<span class=\"me1\">set</span> p <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span> c<span class=\"br0\">)</span><br/>        <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">NativePtr</span></a>.<span class=\"me1\">set</span> p <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span> c<span class=\"br0\">)</span><br/>        <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">NativePtr</span></a>.<span class=\"me1\">set</span> p <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span> c<span class=\"br0\">)</span><br/>        <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">NativePtr</span></a>.<span class=\"me1\">set</span> p <span class=\"nu0\">3</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><br/>        p <span class=\"sy0\">&lt;-</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">NativePtr</span></a>.<span class=\"me1\">add</span> p <span class=\"nu0\">4</span><br/>\u00a0<br/><span class=\"co1\">// A reasonably efficient updater using marshalling to copy an array of generated</span><br/><span class=\"co1\">// integers onto the managed bitmap pixel data (see the C# example as well).</span><br/><span class=\"kw1\">let</span> drawbits_safe <span class=\"br0\">(</span>size:<span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>bits:BitmapData<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> data <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">init</span> size <span class=\"br0\">(</span><span class=\"kw1\">fun</span> n <span class=\"sy0\">-&gt;</span><br/>            <span class=\"kw1\">let</span> c <span class=\"sy0\">=</span> rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">255</span><br/>            0xff000000 <span class=\"sy0\">|||</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;&lt;&lt;</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span> <span class=\"sy0\">|||</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;&lt;&lt;</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">|||</span> c<span class=\"br0\">)</span><br/>    Marshal.<span class=\"me1\">Copy</span><span class=\"br0\">(</span>data, <span class=\"nu0\">0</span>, bits.<span class=\"me1\">Scan0</span>, size<span class=\"br0\">)</span> <span class=\"sy0\">|&gt;</span> <span class=\"kw3\">ignore</span><br/>\u00a0<br/><span class=\"co1\">// Create a new bitmap and update using the specified function</span><br/><span class=\"kw1\">let</span> make_image <span class=\"br0\">(</span>width:<span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>height:<span class=\"kw4\">int</span><span class=\"br0\">)</span> f <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> size <span class=\"sy0\">=</span> width <span class=\"sy0\">*</span> height<br/>    <span class=\"kw1\">let</span> bmp <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Bitmap<span class=\"br0\">(</span>width, height<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> bits <span class=\"sy0\">=</span> bmp.<span class=\"me1\">LockBits</span><span class=\"br0\">(</span>Rectangle<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,width,height<span class=\"br0\">)</span>, ImageLockMode.<span class=\"me1\">WriteOnly</span>, PixelFormat.<span class=\"me1\">Format32bppArgb</span><span class=\"br0\">)</span><br/>    f size bits<br/>    bmp.<span class=\"me1\">UnlockBits</span><span class=\"br0\">(</span>bits<span class=\"br0\">)</span><br/>    bmp<br/>\u00a0<br/><span class=\"co1\">// Draw 30 frames and record the time and display the frames per second</span><br/><span class=\"co1\">// This function is run asynchronously to avoid blocking the main GUI thread.</span><br/><span class=\"kw1\">let</span> drawImage <span class=\"br0\">(</span><span class=\"kw8\">box</span>:PictureBox<span class=\"br0\">)</span> <span class=\"br0\">(</span>label:Label<span class=\"br0\">)</span> f <span class=\"sy0\">=</span> <span class=\"kw4\">async</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> <span class=\"kw1\">true</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">let</span> timer <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Stopwatch<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        timer.<span class=\"me1\">Start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> frames <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">29</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">let</span> bmp <span class=\"sy0\">=</span> make_image <span class=\"nu0\">320</span> <span class=\"nu0\">240</span> f<br/>            <span class=\"kw8\">box</span>.<span class=\"me1\">Image</span> <span class=\"sy0\">&lt;-</span> bmp<br/>        timer.<span class=\"me1\">Stop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">let</span> fps <span class=\"sy0\">=</span> <span class=\"nu0\">30000</span>. <span class=\"sy0\">/</span> timer.<span class=\"me1\">Elapsed</span>.<span class=\"me1\">TotalMilliseconds</span><br/>        label.<span class=\"me1\">Text</span> <span class=\"sy0\">&lt;-</span> sprintf <span class=\"st0\">\"%.1f fps\"</span> fps <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>System.<span class=\"me1\">STAThread</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main args <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> form <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Form<span class=\"br0\">(</span>AutoSize<span class=\"sy0\">=</span><span class=\"kw1\">true</span>,<br/>                        Size<span class=\"sy0\">=</span><span class=\"kw1\">new</span> Size<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<br/>                        Text<span class=\"sy0\">=</span><span class=\"st0\">\"image noise demo\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> panel <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> FlowLayoutPanel<span class=\"br0\">(</span>AutoSize<span class=\"sy0\">=</span><span class=\"kw1\">true</span>,FlowDirection<span class=\"sy0\">=</span>FlowDirection.<span class=\"me1\">TopDown</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> <span class=\"kw8\">box</span> <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> PictureBox<span class=\"br0\">(</span>AutoSize<span class=\"sy0\">=</span><span class=\"kw1\">true</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> label <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Label<span class=\"br0\">(</span>AutoSize<span class=\"sy0\">=</span><span class=\"kw1\">true</span>, Text<span class=\"sy0\">=</span><span class=\"st0\">\"Ready\"</span><span class=\"br0\">)</span><br/>    form.<span class=\"me1\">FormClosed</span>.<span class=\"me1\">Add</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> eventArgs <span class=\"sy0\">-&gt;</span> Async.<span class=\"me1\">CancelDefaultToken</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                                         Application.<span class=\"me1\">Exit</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    form.<span class=\"me1\">Controls</span>.<span class=\"me1\">Add</span><span class=\"br0\">(</span>panel<span class=\"br0\">)</span><br/>    panel.<span class=\"me1\">Controls</span>.<span class=\"me1\">Add</span><span class=\"br0\">(</span><span class=\"kw8\">box</span><span class=\"br0\">)</span><br/>    panel.<span class=\"me1\">Controls</span>.<span class=\"me1\">Add</span><span class=\"br0\">(</span>label<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> args.<span class=\"me1\">Length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> &amp;&amp; args.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"-safe\"</span> <span class=\"kw1\">then</span><br/>        drawImage <span class=\"kw8\">box</span> label drawbits_safe <span class=\"sy0\">|&gt;</span> Async.<span class=\"me1\">Start</span><br/>    <span class=\"kw1\">else</span><br/>        drawImage <span class=\"kw8\">box</span> label drawbits_fast <span class=\"sy0\">|&gt;</span> Async.<span class=\"me1\">Start</span><br/>    form.<span class=\"me1\">Show</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    Application.<span class=\"me1\">Run</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span><br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 70, "block": "<pre class=\"text highlighted_source\">USING: accessors calendar images images.viewer kernel math<br/>math.parser models models.arrow random sequences threads timers<br/>ui ui.gadgets ui.gadgets.labels ui.gadgets.packs\u00a0;<br/>IN: rosetta-code.image-noise<br/>\u00a0<br/>: bits&gt;pixels ( bits -- bits' pixels )<br/>    [ -1 shift ] [ 1 bitand ] bi 255 *\u00a0; inline<br/>\u00a0<br/>:\u00a0?generate-more-bits ( a bits -- a bits' )<br/>    over 32 mod zero? [ drop random-32 ] when\u00a0; inline<br/>\u00a0<br/>: &lt;random-images-bytes&gt; ( dim -- bytes )<br/>    [ 0 0 ] dip product  [<br/>       \u00a0?generate-more-bits<br/>        [ 1 + ] [ bits&gt;pixels ] bi*<br/>    ] B{ } replicate-as 2nip\u00a0;<br/>\u00a0<br/>: &lt;random-bw-image&gt; ( -- image )<br/>    &lt;image&gt;<br/>        { 320 240 } [ &gt;&gt;dim ] [ &lt;random-images-bytes&gt; &gt;&gt;bitmap ] bi<br/>        L &gt;&gt;component-order<br/>        ubyte-components &gt;&gt;component-type\u00a0;<br/>\u00a0<br/>TUPLE: bw-noise-gadget &lt; image-control timers cnt old-cnt fps-model\u00a0;<br/>\u00a0<br/>: animate-image ( control -- )<br/>    [ 1 + ] change-cnt<br/>    model&gt;&gt; &lt;random-bw-image&gt; swap set-model\u00a0;<br/>\u00a0<br/>: update-cnt ( gadget -- )<br/>    [ cnt&gt;&gt; ] [ old-cnt&lt;&lt; ] bi\u00a0;<br/>\u00a0<br/>: fps ( gadget -- fps )<br/>    [ cnt&gt;&gt; ] [ old-cnt&gt;&gt; ] bi -\u00a0;<br/>\u00a0<br/>: fps-monitor ( gadget -- )<br/>    [ fps ] [ update-cnt ] [ fps-model&gt;&gt; set-model ] tri\u00a0;<br/>\u00a0<br/>: start-animation ( gadget -- )<br/>    [ [ animate-image ] curry 1 nanoseconds every ] [ timers&gt;&gt; push ] bi\u00a0;<br/>\u00a0<br/>: start-fps ( gadget -- )<br/>    [ [ fps-monitor ] curry 1 seconds every ] [ timers&gt;&gt; push ] bi\u00a0;<br/>\u00a0<br/>: setup-timers ( gadget -- )<br/>    [ start-animation ] [ start-fps ] bi\u00a0;<br/>\u00a0<br/>: stop-animation ( gadget -- )<br/>    timers&gt;&gt; [ [ stop-timer ] each ] [ delete-all ] bi\u00a0;<br/>\u00a0<br/>M: bw-noise-gadget graft* [ call-next-method ] [ setup-timers ] bi\u00a0;<br/>\u00a0<br/>M: bw-noise-gadget ungraft* [ stop-animation ] [ call-next-method ] bi\u00a0;<br/>\u00a0<br/>: &lt;bw-noise-gadget&gt; ( -- gadget )<br/>    &lt;random-bw-image&gt; &lt;model&gt; bw-noise-gadget new-image-gadget*<br/>    0 &gt;&gt;cnt 0 &gt;&gt;old-cnt 0 &lt;model&gt; &gt;&gt;fps-model V{ } clone &gt;&gt;timers\u00a0;<br/>\u00a0<br/>: fps-gadget ( model -- gadget )<br/>    [ number&gt;string ] &lt;arrow&gt; &lt;label-control&gt;<br/>    \"FPS: \" &lt;label&gt;<br/>    &lt;shelf&gt; swap add-gadget swap add-gadget\u00a0;<br/>\u00a0<br/>: with-fps ( gadget -- gadget' )<br/>    [ fps-model&gt;&gt; fps-gadget ]<br/>    [ &lt;pile&gt; swap add-gadget swap add-gadget ] bi\u00a0;<br/>\u00a0<br/>MAIN-WINDOW: open-noise-window<br/>    { { title \"Black and White noise\" } }<br/>    &lt;bw-noise-gadget&gt; with-fps &gt;&gt;gadgets\u00a0;</pre>"}, {"lang": "FreeBASIC", "loc": 36, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 13-07-2018</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/><span class=\"co1\">'           or: fbc -s gui</span><br/>\u00a0<br/><span class=\"co1\">' hit any to key to stop program</span><br/>\u00a0<br/><span class=\"kw1\">Randomize</span> <span class=\"kw1\">Timer</span><br/><span class=\"kw1\">Screen</span> <span class=\"nu0\">13</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw1\">ScreenPtr</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"Error setting video mode!\"</span><br/>    <span class=\"kw1\">End</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/><span class=\"kw1\">Palette</span> <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>                  <span class=\"co1\">' black</span><br/><span class=\"kw1\">Palette</span> <span class=\"nu0\">1</span>, <span class=\"kw1\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span> <span class=\"co1\">' white</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> c, x, y, Col<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> fps, t = <span class=\"kw1\">Timer</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">InKey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/>\u00a0<br/><span class=\"kw1\">While</span> <span class=\"kw1\">InKey</span> = <span class=\"st0\">\"\"</span><br/>\u00a0<br/>    <span class=\"kw1\">For</span> x = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">319</span><br/>        <span class=\"kw1\">For</span> y = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">199</span><br/>            <span class=\"co1\">' color is as integer, a float gets rounded off by FreeBASIC</span><br/>            <span class=\"kw1\">PSet</span><span class=\"br0\">(</span>x, y<span class=\"br0\">)</span>, <span class=\"kw1\">Rnd</span> <br/>        <span class=\"kw1\">Next</span><br/>    <span class=\"kw1\">Next</span><br/>    c += <span class=\"nu0\">1</span><br/>    fps = c / <span class=\"br0\">(</span><span class=\"kw1\">Timer</span> - t<span class=\"br0\">)</span><br/>    <span class=\"kw1\">WindowTitle</span> <span class=\"st0\">\"fps = \"</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>fps<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Wend</span></pre>"}, {"lang": "Go", "loc": 88, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"code.google.com/p/x-go-binding/ui/x11\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"image\"</span><br/>    <span class=\"st0\">\"image/color\"</span><br/>    <span class=\"st0\">\"image/draw\"</span><br/>    <span class=\"st0\">\"log\"</span><br/>    <span class=\"st0\">\"os\"</span><br/>    <span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> randcol <span class=\"sy2\">=</span> genrandcol<span class=\"sy1\">()</span><br/>\u00a0<br/><span class=\"kw4\">func</span> genrandcol<span class=\"sy1\">()</span> &lt;<span class=\"sy3\">-</span><span class=\"kw4\">chan</span> color<span class=\"sy3\">.</span>Color <span class=\"sy1\">{</span><br/>    c <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> color<span class=\"sy3\">.</span>Color<span class=\"sy1\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">go</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">select</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">case</span> c &lt;<span class=\"sy3\">-</span> image<span class=\"sy3\">.</span>Black<span class=\"sy1\">:</span><br/>            <span class=\"kw1\">case</span> c &lt;<span class=\"sy3\">-</span> image<span class=\"sy3\">.</span>White<span class=\"sy1\">:</span><br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}()</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> c<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> gennoise<span class=\"sy1\">(</span>screen <a href=\"http://golang.org/search?q=draw.Image\"><span class=\"kw5\">draw.<span class=\"me1\">Image</span></span></a><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> y <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> y &lt; <span class=\"nu0\">240</span><span class=\"sy1\">;</span> y<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> x <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> x &lt; <span class=\"nu0\">320</span><span class=\"sy1\">;</span> x<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            screen<span class=\"sy3\">.</span>Set<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> &lt;<span class=\"sy3\">-</span>randcol<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> fps<span class=\"sy1\">()</span> chan&lt;<span class=\"sy3\">-</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>    up <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">go</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">var</span> frames <span class=\"kw4\">int64</span><br/>        <span class=\"kw1\">var</span> lasttime <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><br/>        <span class=\"kw1\">var</span> totaltime time<span class=\"sy3\">.</span>Duration<br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>            &lt;<span class=\"sy3\">-</span>up<br/>            frames<span class=\"sy2\">++</span><br/>            now <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><br/>            totaltime <span class=\"sy2\">+=</span> now<span class=\"sy3\">.</span>Sub<span class=\"sy1\">(</span>lasttime<span class=\"sy1\">)</span><br/>            <span class=\"kw1\">if</span> totaltime &gt; time<span class=\"sy3\">.</span>Second <span class=\"sy1\">{</span><br/>                fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"FPS:\u00a0%v<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>frames<span class=\"sy1\">)</span><span class=\"sy3\">/</span>totaltime<span class=\"sy3\">.</span>Seconds<span class=\"sy1\">())</span><br/>                frames <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><br/>                totaltime <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"sy1\">}</span><br/>            lasttime <span class=\"sy2\">=</span> now<br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}()</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> up<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    win<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> x11<span class=\"sy3\">.</span>NewWindow<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        os<span class=\"sy3\">.</span>Exit<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">defer</span> win<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\u00a0<br/>    <span class=\"kw1\">go</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        upfps <span class=\"sy2\">:=</span> fps<span class=\"sy1\">()</span><br/>        screen <span class=\"sy2\">:=</span> win<span class=\"sy3\">.</span>Screen<span class=\"sy1\">()</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>            gennoise<span class=\"sy1\">(</span>screen<span class=\"sy1\">)</span><br/>\u00a0<br/>            win<span class=\"sy3\">.</span>FlushImage<span class=\"sy1\">()</span><br/>\u00a0<br/>            upfps &lt;<span class=\"sy3\">-</span> <span class=\"kw2\">true</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}()</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> _ <span class=\"sy2\">=</span> <span class=\"kw1\">range</span> win<span class=\"sy3\">.</span>EventChan<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0</pre>"}, {"lang": "Haskell", "loc": 1, "block": "<pre>cabal install glfw-b</pre>"}, {"lang": "Icon and Unicon", "loc": 19, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> printf<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>   <span class=\"sy1\">&amp;</span><span class=\"kw3\">window</span> <span class=\"sy1\">:=</span> <span class=\"kw4\">open</span><span class=\"br0\">(</span><span class=\"st0\">\"B&amp;W noise 320x240\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"g\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"size=320,240\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"bg=white\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"fg=black\"</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <br/>              <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Open window failed \"</span><span class=\"br0\">)</span><br/>   runtime <span class=\"sy1\">:=</span> <span class=\"nu0\">10</span> <span class=\"co1\"># seconds to run</span><br/>   sec <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">now</span><br/>   frames <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>   <span class=\"kw1\">until</span> <span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">now</span> <span class=\"sy1\">-</span> sec<span class=\"br0\">)</span> <span class=\"sy1\">&gt;=</span> runtime <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      s <span class=\"sy1\">:=</span> <span class=\"st0\">\"320,#\"</span><br/>      <span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">240</span> <span class=\"sy1\">&amp;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">320</span><span class=\"sy1\">/</span><span class=\"nu0\">4</span> <span class=\"kw1\">do</span> s <span class=\"sy1\">||:=</span> <span class=\"sy1\">?</span><span class=\"st0\">\"0123456789ABCDEF\"</span> <br/>      <span class=\"kw5\">DrawImage</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span>s<span class=\"br0\">)</span><br/>      frames <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><br/>      <span class=\"br0\">}</span><br/>   sec <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">now</span> <span class=\"sy1\">-</span> sec <br/>   printf<span class=\"br0\">(</span><span class=\"st0\">\"frames=%d, elapsed time=%r, fps=%r<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>frames<span class=\"sy1\">,</span>sec<span class=\"sy1\">,</span> frames<span class=\"sy1\">/</span><span class=\"kw4\">real</span><span class=\"br0\">(</span>sec<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"kw5\">Event</span><span class=\"br0\">(</span><span class=\"br0\">)</span>   <span class=\"co1\"># wait for any window event</span><br/>   <span class=\"kw4\">close</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">window</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 48, "block": "<pre class=\"j highlighted_source\">coclass<span class=\"st_h\">'example'</span><br/><span class=\"sy0\">(</span>coinsert[require<span class=\"sy0\">)</span><span class=\"st_h\">'jzopengl'</span><br/>\u00a0<br/>P=: <span class=\"nu0\">0</span>\u00a0: <span class=\"nu0\">0</span><br/>pc p nosize;<br/>xywh <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">160</span> <span class=\"nu0\">120</span>;cc c isigraph opengl;<br/>pas <span class=\"nu0\">0</span> <span class=\"nu0\">0</span>;pcenter;<br/>rem form end;<br/> pshow;<br/> timer <span class=\"nu0\">1</span>;<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>timestamp=: <span class=\"sy0\">(</span><span class=\"nu0\">6</span>!:<span class=\"nu0\">8</span><span class=\"st_h\">''</span><span class=\"sy0\">)</span>\u00a0%~ <span class=\"nu0\">6</span>!:<span class=\"nu0\">9</span><br/>\u00a0<br/>create=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  ogl=:<span class=\"st_h\">''</span>conew<span class=\"st_h\">'jzopengl'</span><br/>  frames=:<span class=\"nu0\">0</span><br/>  start=: timestamp<span class=\"st_h\">''</span><br/>  sys_timer_base_=: <span class=\"st_h\">''</span><span class=\"nu0\">1</span>\u00a0:<span class=\"sy0\">(</span><span class=\"st_h\">'p_c_paint_'</span>,<span class=\"sy0\">(</span>;coname<span class=\"st_h\">''</span><span class=\"sy0\">)</span>,<span class=\"st_h\">'_'</span><span class=\"sy0\">)</span><br/>  wd P<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>p_run=: <span class=\"nu0\">3</span>\u00a0: <span class=\"nu0\">0</span><br/>  <span class=\"st_h\">''</span>conew<span class=\"st_h\">'example'</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>destroy=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  end=:timestamp<span class=\"st_h\">''</span><br/>  smoutput <span class=\"st_h\">'frames per second: '</span>,\":frames%end-start<br/>  wd <span class=\"st_h\">'timer 0'</span><br/>  destroy__ogl<span class=\"st_h\">''</span><br/>  wd<span class=\"st_h\">'pclose'</span><br/>  codestroy<span class=\"st_h\">''</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>p_close=: destroy<br/>\u00a0<br/>p_c_paint=: <span class=\"nu0\">3</span>\u00a0: <span class=\"nu0\">0</span><br/>  rc__ogl<span class=\"st_h\">''</span><br/>  glClear GL_COLOR_BUFFER_BIT<br/>  glBegin GL_POINTS<br/>    glVertex <span class=\"nu0\">_1</span>+<span class=\"nu0\">2</span>*<span class=\"nu0\">53050</span> <span class=\"nu0\">2</span><a class=\"__cf_email__\" data-cfemail=\"9ea1de\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>$ <span class=\"nu0\">0</span><br/>  glEnd<span class=\"st_h\">''</span><br/>  show__ogl<span class=\"st_h\">''</span><br/>  frames=:frames+<span class=\"nu0\">1</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>p_run<span class=\"st_h\">''</span></pre>"}, {"lang": "Java", "loc": 120, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.event.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.image.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> ImageNoise <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> framecount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> fps <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a> image<span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Akernel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Kernel</span></a> kernel<span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aconvolveop+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ConvolveOp</span></a> cop<span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a> frame <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Java Image Noise\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a> panel <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> show_fps <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"co1\">// 0 = blur + FPS; 1 = FPS only; 2 = neither</span><br/>        <span class=\"kw1\">private</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseadapter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseAdapter</span></a> ma <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseadapter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseAdapter</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            @Override<br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> mouseClicked<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amouseevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">MouseEvent</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                show_fps <span class=\"sy0\">=</span> <span class=\"br0\">(</span>show_fps <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">{</span>addMouseListener<span class=\"br0\">(</span>ma<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>\u00a0<br/>        @Override<br/>        <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a> getPreferredSize<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a><span class=\"br0\">(</span><span class=\"nu0\">320</span>, <span class=\"nu0\">240</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        @Override<br/>        @SuppressWarnings<span class=\"br0\">(</span><span class=\"st0\">\"fallthrough\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> paintComponent<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> g1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a><span class=\"br0\">)</span> g1<span class=\"sy0\">;</span><br/>            drawNoise<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">drawImage</span><span class=\"br0\">(</span>image, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>show_fps<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span> <br/>                <span class=\"co1\">// add blur behind FPS</span><br/>                <span class=\"kw4\">int</span> xblur <span class=\"sy0\">=</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">130</span>, yblur <span class=\"sy0\">=</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a> bc <span class=\"sy0\">=</span> image.<span class=\"me1\">getSubimage</span><span class=\"br0\">(</span>xblur, yblur, <span class=\"nu0\">115</span>, <span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a> bs <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a><span class=\"br0\">(</span>bc.<span class=\"me1\">getWidth</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, bc.<span class=\"me1\">getHeight</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<br/>                                                     <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a>.<span class=\"me1\">TYPE_BYTE_GRAY</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                cop.<span class=\"me1\">filter</span><span class=\"br0\">(</span>bc, bs<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                g.<span class=\"me1\">drawImage</span><span class=\"br0\">(</span>bs, xblur, yblur , <span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <br/>                <span class=\"co1\">// add FPS text; case fallthough is deliberate</span><br/>                g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">RED</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                g.<span class=\"me1\">setFont</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Monospaced\"</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a>.<span class=\"me1\">BOLD</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"FPS: \"</span> <span class=\"sy0\">+</span> fps, getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">120</span>, getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            framecount<span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Timer to trigger update display, with 1 ms delay</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Atimer+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Timer</span></a> repainter <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Atimer+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Timer</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aactionlistener+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ActionListener</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @Override<br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> actionPerformed<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aactionevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ActionEvent</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            panel.<span class=\"me1\">repaint</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Timer to check FPS, once per second</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Atimer+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Timer</span></a> framerateChecker <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Atimer+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Timer</span></a><span class=\"br0\">(</span><span class=\"nu0\">1000</span>, <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aactionlistener+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ActionListener</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        @Override<br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> actionPerformed<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aactionevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ActionEvent</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            fps <span class=\"sy0\">=</span> framecount<span class=\"sy0\">;</span><br/>            framecount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> ImageNoise<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Intitalize kernel describing blur, and convolve operation based on this</span><br/>        <span class=\"kw4\">float</span><span class=\"br0\">[</span><span class=\"br0\">]</span> vals <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">float</span><span class=\"br0\">[</span><span class=\"nu0\">121</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">fill</span><span class=\"br0\">(</span>vals, <span class=\"nu0\">1</span><span class=\"sy0\">/</span>121f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        kernel <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Akernel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Kernel</span></a><span class=\"br0\">(</span><span class=\"nu0\">11</span>, <span class=\"nu0\">11</span>, vals<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        cop <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aconvolveop+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ConvolveOp</span></a><span class=\"br0\">(</span>kernel, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aconvolveop+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ConvolveOp</span></a>.<span class=\"me1\">EDGE_NO_OP</span>, <span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Initialize frame and timers</span><br/>        frame.<span class=\"me1\">add</span><span class=\"br0\">(</span>panel<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        frame.<span class=\"me1\">setDefaultCloseOperation</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        frame.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        frame.<span class=\"me1\">setVisible</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        repainter.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        framerateChecker.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawNoise<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> w <span class=\"sy0\">=</span> panel.<span class=\"me1\">getWidth</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, h <span class=\"sy0\">=</span> panel.<span class=\"me1\">getHeight</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Check if our image is null or window has been resized, requiring new image</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw2\">null</span> <span class=\"sy0\">==</span> image <span class=\"sy0\">||</span> image.<span class=\"me1\">getWidth</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> w <span class=\"sy0\">||</span> image.<span class=\"me1\">getHeight</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            image <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a><span class=\"br0\">(</span>w, h, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedimage+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedImage</span></a>.<span class=\"me1\">TYPE_BYTE_GRAY</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a> rand <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> data <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>w <span class=\"sy0\">*</span> h<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Each int has 32 bits so we can use each bit for a different pixel - much faster</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">*</span> h <span class=\"sy0\">/</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                data<span class=\"br0\">[</span>x <span class=\"sy0\">*</span> <span class=\"nu0\">32</span> <span class=\"sy0\">+</span> i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>r <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">MAX_VALUE</span><span class=\"sy0\">;</span><br/>                r <span class=\"sy0\">&gt;&gt;&gt;=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Copy raw data to the image's raster</span><br/>        image.<span class=\"me1\">getRaster</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">setPixels</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, w, h, data<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Invoke GUI on the Event Dispatching Thread</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aswingutilities+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SwingUtilities</span></a>.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arunnable+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Runnable</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            @Override<br/>            <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                ImageNoise i <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ImageNoise<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 49, "block": "<pre class=\"javascript highlighted_source\"><span class=\"sy0\">&lt;</span>body<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>canvas id<span class=\"sy0\">=</span><span class=\"st0\">'c'</span><span class=\"sy0\">&gt;&lt;/</span>canvas<span class=\"sy0\">&gt;</span><br/>\u00a0<br/><span class=\"sy0\">&lt;</span>script<span class=\"sy0\">&gt;</span><br/><span class=\"kw1\">var</span> canvas <span class=\"sy0\">=</span> document.<span class=\"me1\">getElementById</span><span class=\"br0\">(</span><span class=\"st0\">'c'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> ctx <span class=\"sy0\">=</span> canvas.<span class=\"me1\">getContext</span><span class=\"br0\">(</span><span class=\"st0\">'2d'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> w <span class=\"sy0\">=</span> canvas.<span class=\"me1\">width</span> <span class=\"sy0\">=</span> <span class=\"nu0\">320</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> h <span class=\"sy0\">=</span> canvas.<span class=\"me1\">height</span> <span class=\"sy0\">=</span> <span class=\"nu0\">240</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> t1 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">Date</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">getTime</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> frame_count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">font</span> <span class=\"sy0\">=</span> <span class=\"st0\">'normal 400 24px/2 Unknown Font, sans-serif'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> img <span class=\"sy0\">=</span> ctx.<span class=\"me1\">createImageData</span><span class=\"br0\">(</span>w<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> index_init <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        img.<span class=\"me1\">data</span><span class=\"br0\">[</span>index_init <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">255</span><span class=\"sy0\">;</span> <span class=\"co1\">// alpha</span><br/>        index_init <span class=\"sy0\">+=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> animate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> index <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> h<span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">var</span> value <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">255</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            img.<span class=\"me1\">data</span><span class=\"br0\">[</span>index    <span class=\"br0\">]</span> <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>            img.<span class=\"me1\">data</span><span class=\"br0\">[</span>index <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>            img.<span class=\"me1\">data</span><span class=\"br0\">[</span>index <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>            <span class=\"co1\">// alpha channel is constant</span><br/>            index <span class=\"sy0\">+=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    ctx.<span class=\"me1\">putImageData</span><span class=\"br0\">(</span>img<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    frame_count<span class=\"sy0\">++;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>frame_count <span class=\"sy0\">%</span> <span class=\"nu0\">50</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> fps <span class=\"sy0\">=</span> frame_count <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw1\">new</span> <span class=\"kw4\">Date</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">getTime</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> t1<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span><br/>        window.<span class=\"me1\">status</span> <span class=\"sy0\">=</span> fps.<span class=\"me1\">toFixed</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" fps\"</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    setTimeout<span class=\"br0\">(</span>animate<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>animate<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"sy0\">&lt;/</span>script<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;/</span>body<span class=\"sy0\">&gt;</span></pre>"}, {"lang": "Kotlin", "loc": 117, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.2.10</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">event</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">image</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"sy0\">*</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> ImageNoise <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> framecount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> fps <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    lateinit <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> image<span class=\"sy0\">:</span> BufferedImage<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> kernel<span class=\"sy0\">:</span> Kernel<br/>    lateinit <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> cop<span class=\"sy0\">:</span> ConvolveOp<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> frame <span class=\"sy0\">=</span> JFrame<span class=\"br0\">(</span><span class=\"st0\">\"Java Image Noise\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> panel <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> <span class=\"sy0\">:</span> JPanel<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> showFps <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>  <span class=\"co1\">// 0 = blur + FPS; 1 = FPS only; 2 = neither</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ma <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> <span class=\"sy0\">:</span> MouseAdapter<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun mouseClicked<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> MouseEvent<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                showFps <span class=\"sy0\">=</span> <span class=\"br0\">(</span>showFps + <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        init <span class=\"br0\">{</span><br/>            addMouseListener<span class=\"br0\">(</span>ma<span class=\"br0\">)</span><br/>            preferredSize <span class=\"sy0\">=</span> Dimension<span class=\"br0\">(</span><span class=\"nu0\">320</span>, <span class=\"nu0\">240</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun paintComponent<span class=\"br0\">(</span>g1<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> g1 as Graphics2D<br/>            drawNoise<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            g.<span class=\"me1\">drawImage</span><span class=\"br0\">(</span>image, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>showFps <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\">// add blur behind FPS</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xblur <span class=\"sy0\">=</span> width - <span class=\"nu0\">130</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yblur <span class=\"sy0\">=</span> height - <span class=\"nu0\">32</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> bc <span class=\"sy0\">=</span> image.<span class=\"me1\">getSubimage</span><span class=\"br0\">(</span>xblur, yblur, <span class=\"nu0\">115</span>, <span class=\"nu0\">32</span><span class=\"br0\">)</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> bs <span class=\"sy0\">=</span> BufferedImage<span class=\"br0\">(</span><br/>                    bc.<span class=\"me1\">width</span>, bc.<span class=\"me1\">height</span>, BufferedImage.<span class=\"me1\">TYPE_BYTE_GRAY</span><br/>                <span class=\"br0\">)</span><br/>                cop.<span class=\"me1\">filter</span><span class=\"br0\">(</span>bc, bs<span class=\"br0\">)</span><br/>                g.<span class=\"me1\">drawImage</span><span class=\"br0\">(</span>bs, xblur, yblur, <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>showFps <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"co1\">// add FPS text</span><br/>                g.<span class=\"me1\">color</span> <span class=\"sy0\">=</span> Color.<span class=\"me1\">RED</span><br/>                g.<span class=\"me1\">font</span> <span class=\"sy0\">=</span> Font<span class=\"br0\">(</span><span class=\"st0\">\"Monospaced\"</span>, Font.<span class=\"me1\">BOLD</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>                g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"FPS: $fps\"</span>, width - <span class=\"nu0\">120</span>, height - <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>            framecount++<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Timer to trigger update display, with 1 ms delay</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> repainter <span class=\"sy0\">=</span> Timer<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a><span class=\"sy0\">:</span> ActionListener <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun actionPerformed<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> ActionEvent<span class=\"br0\">)</span> <span class=\"sy0\">=</span> panel.<span class=\"me1\">repaint</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">// Timer to check FPS, once per second</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> framerateChecker <span class=\"sy0\">=</span> Timer<span class=\"br0\">(</span><span class=\"nu0\">1000</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> <span class=\"sy0\">:</span> ActionListener <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun actionPerformed<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> ActionEvent<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            fps <span class=\"sy0\">=</span> framecount<br/>            framecount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>    init <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Intitalize kernel describing blur, and convolve operation based on this</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> vals <span class=\"sy0\">=</span> FloatArray<span class=\"br0\">(</span><span class=\"nu0\">121</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> 1.0f / 121.0f <span class=\"br0\">}</span><br/>        kernel <span class=\"sy0\">=</span> Kernel<span class=\"br0\">(</span><span class=\"nu0\">11</span>, <span class=\"nu0\">11</span>, vals<span class=\"br0\">)</span><br/>        cop <span class=\"sy0\">=</span> ConvolveOp<span class=\"br0\">(</span>kernel, ConvolveOp.<span class=\"me1\">EDGE_NO_OP</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// Initialize frame and timers</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a> <span class=\"br0\">(</span>frame<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            add<span class=\"br0\">(</span>panel<span class=\"br0\">)</span><br/>            defaultCloseOperation <span class=\"sy0\">=</span> JFrame.<span class=\"me1\">EXIT_ON_CLOSE</span><br/>            pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            isVisible <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        <span class=\"br0\">}</span><br/>        repainter.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        framerateChecker.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    fun drawNoise<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> w <span class=\"sy0\">=</span> panel.<span class=\"me1\">width</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> h <span class=\"sy0\">=</span> panel.<span class=\"me1\">height</span><br/>\u00a0<br/>        <span class=\"co1\">// Check if our image is initialized or window has been resized,</span><br/>        <span class=\"co1\">// requiring new image</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"sy0\">::</span>image.<span class=\"me1\">isInitialized</span> || image.<span class=\"me1\">width</span> <span class=\"sy0\">!=</span> w || image.<span class=\"me1\">height</span> <span class=\"sy0\">!=</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            image <span class=\"sy0\">=</span> BufferedImage<span class=\"br0\">(</span>w, h, BufferedImage.<span class=\"me1\">TYPE_BYTE_GRAY</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rand <span class=\"sy0\">=</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> data <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>w <span class=\"sy0\">*</span> h<span class=\"br0\">)</span><br/>        <span class=\"co1\">// Each int has 32 bits so we can use each bit for a different pixel</span><br/>        <span class=\"co1\">// - much faster</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x in <span class=\"nu0\">0</span> until w <span class=\"sy0\">*</span> h / <span class=\"nu0\">32</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> r <span class=\"sy0\">=</span> rand.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span>..<span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                data<span class=\"br0\">[</span>x <span class=\"sy0\">*</span> <span class=\"nu0\">32</span> + i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>r and <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> Int.<span class=\"me1\">MAX_VALUE</span><br/>                r <span class=\"sy0\">=</span> r ushr <span class=\"nu0\">1</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Copy raw data to the image's raster</span><br/>        image.<span class=\"me1\">raster</span>.<span class=\"me1\">setPixels</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, w, h, data<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Invoke GUI on the Event Dispatching Thread</span><br/>    SwingUtilities.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a><span class=\"sy0\">:</span> Runnable <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            ImageNoise<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 74, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw3\">WindowWidth</span>  <span class=\"sy0\">=</span><span class=\"nu0\">411</span><br/>w            <span class=\"sy0\">=</span><span class=\"nu0\">320</span><br/><span class=\"kw3\">WindowHeight</span> <span class=\"sy0\">=</span><span class=\"nu0\">356</span><br/>h            <span class=\"sy0\">=</span><span class=\"nu0\">240</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">open</span> <span class=\"st0\">\"Noise\"</span> <span class=\"kw1\">for</span> graphics_nsb <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>w<br/>\u00a0<br/><span class=\"sy0\">#</span>w <span class=\"st0\">\"trapclose [quit]\"</span><br/><span class=\"sy0\">#</span>w <span class=\"st0\">\"down\"</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Creating BMP header\"</span><br/>\u00a0<br/><span class=\"co1\">'bitmap header, 320x240 pixels 256 colors</span><br/><span class=\"kw1\">data</span> <span class=\"nu0\">66</span><span class=\"sy0\">,</span><span class=\"nu0\">77</span><span class=\"sy0\">,</span><span class=\"nu0\">54</span><span class=\"sy0\">,</span><span class=\"nu0\">48</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">54</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">40</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">64</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">data</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">240</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">44</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><br/><span class=\"kw1\">data</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><br/>\u00a0<br/>head$<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">54</span><br/>    <span class=\"kw1\">read</span> c<br/>    head$<span class=\"sy0\">=</span>head$<span class=\"sy0\">+</span><span class=\"kw2\">chr$</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><br/><span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Creating BMP grayscale palette\"</span><br/>pal$<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">255</span><br/>    pal$ <span class=\"sy0\">=</span> pal$ _<br/>        <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> _<br/>        <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> _<br/>        <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> _<br/>        <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Creating BMP random body\"</span><br/>    <span class=\"co1\">'create bitmap body</span><br/>    body$<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">for</span> x <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> w<br/>        l$<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/>        <span class=\"kw1\">for</span> y <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> h<br/>            l$<span class=\"sy0\">=</span>l$<span class=\"sy0\">+</span><span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">255</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">next</span><br/>        body$<span class=\"sy0\">=</span>body$<span class=\"sy0\">+</span>l$ <br/>    <span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"br0\">[</span>main<span class=\"br0\">]</span><br/>    <span class=\"kw1\">scan</span><br/>    ts <span class=\"sy0\">=</span><span class=\"kw2\">time$</span><span class=\"br0\">(</span> <span class=\"st0\">\"ms\"</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">'randomly \"splice\" the body: 1111222222-&gt; 2222221111</span><br/>    splice<span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>body$<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>    body$<span class=\"sy0\">=</span> <span class=\"kw2\">mid$</span><span class=\"br0\">(</span>body$<span class=\"sy0\">,</span>splice<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"kw2\">left$</span><span class=\"br0\">(</span>body$<span class=\"sy0\">,</span>splice<span class=\"br0\">)</span><br/>    <span class=\"co1\">'write BMP</span><br/>    <span class=\"kw1\">open</span> <span class=\"st0\">\"noise.bmp\"</span> <span class=\"kw1\">for</span> <span class=\"kw1\">output</span> <span class=\"kw1\">as</span> <span class=\"sy0\">#</span><span class=\"nu0\">1</span><br/>        <span class=\"sy0\">#</span><span class=\"nu0\">1</span> head$;pal$;<br/>        <span class=\"sy0\">#</span><span class=\"nu0\">1</span> body$;<br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span><span class=\"nu0\">1</span><br/>    <span class=\"co1\">'load bmp</span><br/>    <span class=\"kw1\">loadbmp</span> <span class=\"st0\">\"noise\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"noise.bmp\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"cls\"</span><br/>    <span class=\"co1\">'drawbmp</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"drawbmp noise 0 0\"</span><br/>\u00a0<br/>    tf <span class=\"sy0\">=</span><span class=\"kw2\">time$</span><span class=\"br0\">(</span> <span class=\"st0\">\"ms\"</span><span class=\"br0\">)</span><br/>    dt <span class=\"sy0\">=</span>tf <span class=\"sy0\">-</span>ts<br/>    <span class=\"kw1\">if</span> dt <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> dt <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"Framerate per second =\"</span>; <span class=\"kw2\">using</span><span class=\"br0\">(</span> <span class=\"st0\">\"#.###\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>dt<span class=\"sy0\">/</span><span class=\"nu0\">1000</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Ms per frame =\"</span>;dt<br/>    <span class=\"kw1\">goto</span> <span class=\"br0\">[</span>main<span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"br0\">[</span>quit<span class=\"br0\">]</span><br/>    <span class=\"kw1\">unloadbmp</span> <span class=\"st0\">\"noise\"</span><br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>w<br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>a:=0;<br/>t:=time[real]();<br/>while a&lt; 50 do<br/>a:=a+1;<br/>data\u00a0:= Matrix(`&lt;|&gt;`(`&lt;,&gt;`(Statistics:-Sample(Uniform(0, 1), [1000, 2])), LinearAlgebra:-RandomVector(1000, generator = rand(0 .. 2)))); <br/>\u00a0<br/>f\u00a0:= plots:-pointplot(data[NULL .. NULL, 1], data[NULL .. NULL, 2], symbolsize = 20, symbol = solidbox, colorscheme = [\"valuesplit\", data[NULL .. NULL, 3], [0 = \"Black\", 1 = \"White\", 2 = \"Grey\"]], axes = none);<br/>DocumentTools:-SetProperty('Plot0', 'value', plots:-display(f,plots:-textplot([0.5,0.5,sprintf(\"FPS:\u00a0%a\", (a/(time[real]()-t)))],color=red)), refresh=true);<br/>\u00a0<br/>end do:<br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>time = AbsoluteTime[]; Animate[<br/> Column[{Row[{\"FPS: \", Round[n/(AbsoluteTime[] - time)]}], <br/>   RandomImage[1, {320, 240}]}], {n, 1, Infinity, 1}]<br/>\u00a0</pre>"}, {"lang": "MAXScript", "loc": 35, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>try destroydialog testRollout catch ()<br/>\u00a0<br/>fn randomBitmap width height =<br/>(<br/>\tlocal newBmp = bitmap width height<br/>\u00a0<br/>\tfor row = 0 to (height-1) do<br/>\t(<br/>\t\tlocal pixels =  for i in 1 to width collect (white*random 0 1)<br/>\t\tsetpixels newBmp [0,row] pixels<br/>\t)<br/>\u00a0<br/>\treturn newBmp<br/>)<br/>\u00a0<br/>rollout testRollout \"Test\" width:320 height:240<br/>(<br/>\tbitmap image width:320 height:240 pos:[0,0]<br/>\ttimer updateTimer interval:1 active:true<br/>\u00a0<br/>\ton updateTimer tick do<br/>\t(<br/>\t\tlocal startTime = timestamp()<br/>\t\timage.bitmap = randomBitmap 320 240<br/>\t\tlocal endTime = timestamp()<br/>\t\tlocal fps = ((endTime-startTime)/1000.0)*60.0<br/>\u00a0<br/>\t\tif mod updatetimer.ticks 10 == 0 do (testRollout.title = (\"Test (FPS: \"+fps as string+\")\"))<br/>\u00a0<br/>\t)<br/>)<br/>\u00a0<br/>createdialog testrollout<br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 49, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> frames <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span> contents <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> t_acc <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span> contents <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> last_t <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span> contents <span class=\"sy0\">=</span> Sdltimer<span class=\"sy0\">.</span>get_ticks <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> print_fps <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> t <span class=\"sy0\">=</span> Sdltimer<span class=\"sy0\">.</span>get_ticks <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> dt <span class=\"sy0\">=</span> t <span class=\"sy0\">-</span> <span class=\"sy0\">!</span>last_t <span class=\"kw1\">in</span><br/>  t_acc <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span>t_acc <span class=\"sy0\">+</span> dt<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"sy0\">!</span>t_acc <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1000</span> <span class=\"kw1\">then</span> <span class=\"kw1\">begin</span><br/>    <span class=\"kw1\">let</span> el_time <span class=\"sy0\">=</span> <span class=\"sy0\">!</span>t_acc <span class=\"sy0\">/</span> <span class=\"nu0\">1000</span> <span class=\"kw1\">in</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf<br/>      <span class=\"st0\">\"- fps:\u00a0%g\\n%!\"</span><br/>      <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"sy0\">!</span>frames <span class=\"sy0\">/.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> el_time<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    t_acc <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    frames <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>  last_t <span class=\"sy0\">:=</span> t<br/>\u00a0<br/><span class=\"kw1\">let</span> blit_noise surf <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> ba <span class=\"sy0\">=</span> Sdlvideo<span class=\"sy0\">.</span>pixel_data_8 surf <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> dim <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Bigarray.html\"><span class=\"kw2\">Bigarray</span></a><span class=\"sy0\">.</span>Array1<span class=\"sy0\">.</span>dim ba <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">while</span> <span class=\"kw1\">true</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> dim <span class=\"kw1\">do</span><br/>      ba<span class=\"sy0\">.</span><span class=\"br0\">{</span>i<span class=\"br0\">}</span> <span class=\"sy0\">&lt;-</span> <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEbool\"><span class=\"kw4\">bool</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax_int\"><span class=\"kw3\">max_int</span></a> <span class=\"kw1\">else</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    Sdlvideo<span class=\"sy0\">.</span>flip surf<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">incr</span> frames<span class=\"sy0\">;</span><br/>    print_fps <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/><span class=\"kw1\">let</span> blit_noise surf <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">try</span> blit_noise surf<br/>  <span class=\"kw1\">with</span> _ <span class=\"sy0\">-&gt;</span> Sdl<span class=\"sy0\">.</span>quit <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  Sdl<span class=\"sy0\">.</span>init <span class=\"br0\">[</span>`VIDEO<span class=\"sy0\">;</span> `TIMER<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span>self_init<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> surf <span class=\"sy0\">=</span><br/>    Sdlvideo<span class=\"sy0\">.</span>set_video_mode<br/>      <span class=\"re1\">~w</span><span class=\"sy0\">:</span><span class=\"nu0\">320</span> <span class=\"re1\">~h</span><span class=\"sy0\">:</span><span class=\"nu0\">240</span> <span class=\"re1\">~bpp</span><span class=\"sy0\">:</span><span class=\"nu0\">8</span><br/>      <span class=\"br0\">[</span><span class=\"co1\">(*`HWSURFACE;*)</span> `DOUBLEBUF<span class=\"br0\">]</span><br/>  <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>catch_break <span class=\"kw1\">true</span><span class=\"sy0\">;</span><br/>  blit_noise surf</pre>"}, {"lang": "Perl 6", "loc": 78, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">use</span> NativeCall<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> SDL2<span class=\"sy0\">::</span><span class=\"me2\">Raw</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> nqp<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> int <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">320</span><span class=\"sy0\">,</span> <span class=\"nu0\">240</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> SDL_Window <span class=\"re0\">$window</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> SDL_Renderer <span class=\"re0\">$renderer</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> <span class=\"re0\">$sdl</span><span class=\"sy0\">-</span>lib <span class=\"sy0\">=</span> <span class=\"st_h\">'SDL2'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> SDL_RenderDrawPoints<span class=\"br0\">(</span> SDL_Renderer $<span class=\"sy0\">,</span> CArray<span class=\"br0\">[</span>int32<span class=\"br0\">]</span> <span class=\"re0\">$points</span><span class=\"sy0\">,</span> int32 <span class=\"re0\">$count</span> <span class=\"br0\">)</span> <span class=\"kw1\">returns</span> int32 <span class=\"kw1\">is</span> native<span class=\"br0\">(</span><span class=\"re0\">$sdl</span><span class=\"sy0\">-</span>lib<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><br/>\u00a0<br/>SDL_Init<span class=\"br0\">(</span>VIDEO<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$window</span> <span class=\"sy0\">=</span> SDL_CreateWindow<span class=\"br0\">(</span><br/>    <span class=\"st0\">\"some white noise\"</span><span class=\"sy0\">,</span><br/>    SDL_WINDOWPOS_CENTERED_MASK<span class=\"sy0\">,</span> SDL_WINDOWPOS_CENTERED_MASK<span class=\"sy0\">,</span><br/>    <span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"sy0\">,</span><br/>    SHOWN<br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$renderer</span> <span class=\"sy0\">=</span> SDL_CreateRenderer<span class=\"br0\">(</span> <span class=\"re0\">$window</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> ACCELERATED <span class=\"sy0\">+|</span> TARGETTEXTURE <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>SDL_ClearError<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$noise_texture</span> <span class=\"sy0\">=</span> SDL_CreateTexture<span class=\"br0\">(</span><span class=\"re0\">$renderer</span><span class=\"sy0\">,</span> <span class=\"re0\">%PIXELFORMAT</span><span class=\"sy0\">&lt;</span>RGB332<span class=\"sy0\">&gt;,</span> STREAMING<span class=\"sy0\">,</span> <span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$pixdatabuf</span> <span class=\"sy0\">=</span> CArray<span class=\"br0\">[</span>int64<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1234</span><span class=\"sy0\">,</span> <span class=\"nu0\">1234</span><span class=\"sy0\">,</span> <span class=\"nu0\">1234</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> render <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> int <span class=\"re0\">$pitch</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> int <span class=\"re0\">$cursor</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># work-around to pass the pointer-pointer.</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$pixdata</span> <span class=\"sy0\">=</span> nativecast<span class=\"br0\">(</span>Pointer<span class=\"br0\">[</span>int64<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$pixdatabuf</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    SDL_LockTexture<span class=\"br0\">(</span><span class=\"re0\">$noise_texture</span><span class=\"sy0\">,</span> SDL_Rect<span class=\"sy0\">,</span> <span class=\"re0\">$pixdata</span><span class=\"sy0\">,</span> <span class=\"re0\">$pitch</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"re0\">$pixdata</span> <span class=\"sy0\">=</span> nativecast<span class=\"br0\">(</span>CArray<span class=\"br0\">[</span>int8<span class=\"br0\">]</span><span class=\"sy0\">,</span> Pointer<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"re0\">$pixdatabuf</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">loop</span> <span class=\"br0\">(</span><span class=\"kw1\">my</span> int <span class=\"re0\">$row</span><span class=\"sy0\">;</span> <span class=\"re0\">$row</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$h</span><span class=\"sy0\">;</span> <span class=\"re0\">$row</span> <span class=\"sy0\">=</span> <span class=\"re0\">$row</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">loop</span> <span class=\"br0\">(</span><span class=\"kw1\">my</span> int <span class=\"re0\">$col</span><span class=\"sy0\">;</span> <span class=\"re0\">$col</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$w</span><span class=\"sy0\">;</span> <span class=\"re0\">$col</span> <span class=\"sy0\">=</span> <span class=\"re0\">$col</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$pixdata</span><span class=\"br0\">[</span><span class=\"re0\">$cursor</span> <span class=\"sy0\">+</span> <span class=\"re0\">$col</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Bool<span class=\"sy0\">.</span><span class=\"me1\">roll</span> <span class=\"sy0\">??</span> 0xff <span class=\"sy0\">!!</span> 0x0<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$cursor</span> <span class=\"sy0\">=</span> <span class=\"re0\">$cursor</span> <span class=\"sy0\">+</span> <span class=\"re0\">$pitch</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    SDL_UnlockTexture<span class=\"br0\">(</span><span class=\"re0\">$noise_texture</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    SDL_RenderCopy<span class=\"br0\">(</span><span class=\"re0\">$renderer</span><span class=\"sy0\">,</span> <span class=\"re0\">$noise_texture</span><span class=\"sy0\">,</span> SDL_Rect<span class=\"sy0\">,</span> SDL_Rect<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    SDL_RenderPresent<span class=\"br0\">(</span><span class=\"re0\">$renderer</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$event</span> <span class=\"sy0\">=</span> SDL_Event<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@times</span><span class=\"sy0\">;</span><br/>\u00a0<br/>main<span class=\"sy0\">:</span> <span class=\"kw1\">loop</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$start</span> <span class=\"sy0\">=</span> nqp<span class=\"sy0\">::</span><span class=\"me2\">time_n</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> SDL_PollEvent<span class=\"br0\">(</span><span class=\"re0\">$event</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$casted_event</span> <span class=\"sy0\">=</span> SDL_CastEvent<span class=\"br0\">(</span><span class=\"re0\">$event</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">given</span> <span class=\"re0\">$casted_event</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">when</span> <span class=\"sy0\">*.</span><span class=\"me1\">type</span> <span class=\"sy0\">==</span> QUIT <span class=\"br0\">{</span><br/>                <span class=\"kw1\">last</span> main<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    render<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"re0\">@times</span><span class=\"sy0\">.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span> nqp<span class=\"sy0\">::</span><span class=\"me2\">time_n</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"re0\">$start</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">@times</span> <span class=\"sy0\">.=</span> <span class=\"kw3\">sort</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@timings</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">@times</span><span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"kw1\">div</span> <span class=\"nu0\">50</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@times</span><span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"kw1\">div</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@times</span><span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"kw1\">div</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@times</span><span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span> <span class=\"kw1\">div</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@times</span><span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"sy0\">-</span> <span class=\"sy0\">*</span> <span class=\"kw1\">div</span> <span class=\"nu0\">100</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st0\">\"frames per second:\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">X</span><span class=\"sy0\">/</span> <span class=\"re0\">@timings</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st0\">\"%3.4f\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 42, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> ImageNoise<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  SDL<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  surface<span class=\"sy1\">:</span> PSDL_Surface<span class=\"sy1\">;</span><br/>  pixel<span class=\"sy1\">:</span> <span class=\"sy2\">^</span>byte<span class=\"sy1\">;</span><br/>  frameNumber<span class=\"sy1\">,</span> totalTime<span class=\"sy1\">,</span> lastTime<span class=\"sy1\">,</span> time<span class=\"sy1\">,</span> i<span class=\"sy1\">:</span> <span class=\"kw4\">longint</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  frameNumber <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  totalTime   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  lastTime    <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  randomize<span class=\"sy1\">;</span><br/>  SDL_Init<span class=\"br0\">(</span>SDL_INIT_TIMER <span class=\"kw1\">or</span> SDL_INIT_VIDEO<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  surface <span class=\"sy1\">:</span><span class=\"sy3\">=</span> SDL_SetVideoMode<span class=\"br0\">(</span><span class=\"nu0\">320</span><span class=\"sy1\">,</span> <span class=\"nu0\">240</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">,</span> SDL_DOUBLEBUF <span class=\"kw1\">or</span> SDL_HWSURFACE<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    pixel <span class=\"sy1\">:</span><span class=\"sy3\">=</span> surface<span class=\"sy2\">^</span><span class=\"sy1\">.</span><span class=\"me1\">pixels</span><span class=\"sy1\">;</span><br/>    SDL_LockSurface<span class=\"br0\">(</span>surface<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span>surface<span class=\"sy2\">^</span><span class=\"sy1\">.</span><span class=\"me1\">w</span> <span class=\"sy3\">*</span> surface<span class=\"sy2\">^</span><span class=\"sy1\">.</span><span class=\"me1\">h</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">begin</span><br/>      pixel<span class=\"sy2\">^</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> random<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy3\">*</span><span class=\"nu0\">255</span><span class=\"sy1\">;</span><br/>      inc<span class=\"br0\">(</span>pixel<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>    SDL_UnlockSurface<span class=\"br0\">(</span>surface<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    SDL_Flip<span class=\"br0\">(</span>surface<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    inc <span class=\"br0\">(</span>frameNumber<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>    time <span class=\"sy1\">:</span><span class=\"sy3\">=</span> SDL_GetTicks<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    totalTime <span class=\"sy1\">:</span><span class=\"sy3\">=</span> totalTime <span class=\"sy3\">+</span> time <span class=\"sy3\">-</span> lastTime<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>totalTime &gt; <span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">begin</span><br/>      <span class=\"kw3\">writeln</span><span class=\"br0\">(</span><span class=\"st0\">'FPS: '</span><span class=\"sy1\">,</span> frameNumber <span class=\"sy3\">/</span> <span class=\"br0\">(</span>totalTime <span class=\"sy3\">/</span> <span class=\"nu0\">1000.0</span><span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"nu0\">5</span><span class=\"sy1\">:</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      frameNumber <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>      totalTime <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>    lastTime <span class=\"sy1\">:</span><span class=\"sy3\">=</span> time<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "PicoLisp", "loc": 51, "block": "<pre class=\"text highlighted_source\">(javac \"ImageNoise\" \"JPanel\" NIL<br/>      \"java.util.*\"<br/>      \"java.awt.*\" \"java.awt.image.*\" \"javax.swing.*\" )<br/>\u00a0<br/>   int DX, DY;<br/>   int[] Pixels;<br/>   MemoryImageSource Source;<br/>   Image Img;<br/>   Random Rnd;<br/>\u00a0<br/>   public ImageNoise(int dx, int dy) {<br/>      DX = dx;<br/>      DY = dy;<br/>      Pixels = new int[DX * DY];<br/>      Source = new MemoryImageSource(DX, DY, Pixels, 0, DX);<br/>      Source.setAnimated(true);<br/>      Img = createImage(Source);<br/>      Rnd = new Random();<br/>   }<br/>\u00a0<br/>   public void paint(Graphics g) {update(g);}<br/>   public void update(Graphics g) {g.drawImage(Img, 0, 0, this);}<br/>\u00a0<br/>   public void draw() {<br/>      for (int i = 0; i &lt; Pixels.length; ++i) {<br/>         int c = Rnd.nextInt(255);<br/>         Pixels[i] = 0xFF000000 | c&lt;&lt;16 | c&lt;&lt;8 | c;<br/>      }<br/>      Source.newPixels();<br/>      paint(getGraphics());<br/>   }<br/>/**/<br/>\u00a0<br/>(de imageNoise (DX DY Fps)<br/>   (let<br/>      (Frame (java \"javax.swing.JFrame\" T \"Image Noise\")<br/>         Noise (java \"ImageNoise\" T DX DY)<br/>         Button (java \"javax.swing.JButton\" T \"OK\") )<br/>      (java Frame \"add\" Noise)<br/>      (java Frame \"add\" \"South\" Button)<br/>      (java Button \"addActionListener\"<br/>         (interface \"java.awt.event.ActionListener\"<br/>            'actionPerformed '((Ev) (bye)) ) )<br/>      (java Frame \"setSize\" DX DY)<br/>      (java Frame \"setVisible\" T)<br/>      (task (/ -1000 Fps) 0<br/>         Image Noise<br/>         (java Image \"draw\") ) ) )<br/>\u00a0<br/># Start with 25 frames per second<br/>(imageNoise 320 240 25)</pre>"}, {"lang": "PL/I", "loc": 27, "block": "<pre class=\"text highlighted_source\">Image_Noise: procedure options (main); /* 3 November 2013 */<br/>   declare (start_time, end_time) float (18);<br/>   declare (frame, m, n) fixed binary;<br/>\u00a0<br/>   start_time = secs();<br/>   get (m, n);<br/>   do frame = 1 to 100; /* Generate 100 frames. */<br/>      call display (m, n);<br/>      put skip data (frame);<br/>   end;<br/>   end_time = secs();<br/>\u00a0<br/>   put skip list ('Average FPS =' || fixed(100/(end_time-start_time), 6) );<br/>\u00a0<br/>display: procedure (m, n);<br/>   declare (m, n) fixed binary;<br/>   declare screen(0:m, 0:n) bit (1);<br/>   declare i fixed binary;<br/>   declare random builtin;<br/>\u00a0<br/>      screen = '0'b; /* clear screen for this frame */<br/>      do i = 0 to m*n*random;<br/>         screen(random*m, random*n) = random &gt; 0.5;<br/>      end;<br/>end display;<br/>\u00a0<br/>end Image_Noise;</pre>"}, {"lang": "PureBasic", "loc": 36, "block": "<pre class=\"purebasic highlighted_source\">#filter<span class=\"sy0\">=</span><span class=\"nu0\">0.2</span>       <span class=\"co1\">; Filter parameter for the FPS-calculation</span><br/>#UpdateFreq<span class=\"sy0\">=</span><span class=\"nu0\">100</span>   <span class=\"co1\">; How often to update the FPS-display</span><br/>\u00a0<br/><span class=\"kw2\">OpenWindow</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">400</span>,<span class=\"nu0\">300</span>,<span class=\"nu0\">320</span>,<span class=\"nu0\">240</span>,<span class=\"st0\">\"PureBasic\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Define</span> w<span class=\"sy0\">=</span><span class=\"kw2\">WindowWidth</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>, h<span class=\"sy0\">=</span><span class=\"kw2\">WindowHeight</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Define</span> x, y, T, TOld, FloatingMedium.f, cnt<br/><span class=\"kw2\">InitSprite</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw2\">OpenWindowedScreen</span><span class=\"br0\">(</span><span class=\"kw2\">WindowID</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,w,h,<span class=\"nu0\">1</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,#PB_Screen_NoSynchronization<span class=\"br0\">)</span><br/><span class=\"kw1\">Repeat</span><br/>  <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">ScreenOutput</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> h<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> x<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> w<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>      <span class=\"kw1\">If</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">Plot</span><span class=\"br0\">(</span>x,y,#Black<span class=\"br0\">)</span><br/>      <span class=\"kw1\">Else</span><br/>        <span class=\"kw2\">Plot</span><span class=\"br0\">(</span>x,y,#White<span class=\"br0\">)</span><br/>      <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">FlipBuffers</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  cnt<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">If</span> cnt<span class=\"sy0\">&gt;=</span>#UpdateFreq<br/>    cnt <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    TOld<span class=\"sy0\">=</span>T<br/>    T   <span class=\"sy0\">=</span><span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    FloatingMedium<span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>#filter<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1000</span><span class=\"sy0\">*</span>#filter<span class=\"sy0\">/</span><span class=\"br0\">(</span>T<span class=\"sy0\">-</span>TOld<span class=\"br0\">)</span><br/>    <span class=\"kw2\">SetWindowTitle</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"st0\">\"PureBasic: \"</span><span class=\"sy0\">+</span><span class=\"kw2\">StrF</span><span class=\"br0\">(</span>#UpdateFreq<span class=\"sy0\">*</span>FloatingMedium,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" FPS\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Repeat</span> <span class=\"co1\">; Handle all events</span><br/>      Event<span class=\"sy0\">=</span><span class=\"kw2\">WindowEvent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">If</span> Event<span class=\"sy0\">=</span>#PB_Event_CloseWindow<br/>        <span class=\"kw1\">End</span><br/>      <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw1\">Until</span> <span class=\"kw1\">Not</span> Event<br/>  <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">ForEver</span></pre>"}, {"lang": "Python", "loc": 53, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">random</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">Tkinter</span><br/><span class=\"kw1\">import</span> Image<span class=\"sy0\">,</span> ImageTk <span class=\"co1\"># PIL libray</span><br/>\u00a0<br/><span class=\"kw1\">class</span> App<span class=\"br0\">(</span><span class=\"kw2\">object</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> size<span class=\"sy0\">,</span> root<span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">root</span> <span class=\"sy0\">=</span> root<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">root</span>.<span class=\"me1\">title</span><span class=\"br0\">(</span><span class=\"st0\">\"Image Noise Test\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">img</span> <span class=\"sy0\">=</span> Image.<span class=\"kw3\">new</span><span class=\"br0\">(</span><span class=\"st0\">\"RGB\"</span><span class=\"sy0\">,</span> size<span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">label</span> <span class=\"sy0\">=</span> <span class=\"kw3\">Tkinter</span>.<span class=\"me1\">Label</span><span class=\"br0\">(</span>root<span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">label</span>.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw2\">self</span>.<span class=\"kw3\">time</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">frames</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">size</span> <span class=\"sy0\">=</span> size<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">loop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> loop<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">ta</span> <span class=\"sy0\">=</span> <span class=\"kw3\">time</span>.<span class=\"kw3\">time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"co1\"># 13 FPS boost. half integer idea from C#.</span><br/>        rnd <span class=\"sy0\">=</span> <span class=\"kw3\">random</span>.<span class=\"kw3\">random</span><br/>        white <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">255</span><span class=\"sy0\">,</span> <span class=\"nu0\">255</span><span class=\"sy0\">,</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><br/>        black <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        npixels <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">size</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> * <span class=\"kw2\">self</span>.<span class=\"me1\">size</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        data <span class=\"sy0\">=</span> <span class=\"br0\">[</span>white <span class=\"kw1\">if</span> rnd<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.5</span> <span class=\"kw1\">else</span> black <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>npixels<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">img</span>.<span class=\"me1\">putdata</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">pimg</span> <span class=\"sy0\">=</span> ImageTk.<span class=\"me1\">PhotoImage</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">img</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">label</span><span class=\"br0\">[</span><span class=\"st0\">\"image\"</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">pimg</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">tb</span> <span class=\"sy0\">=</span> <span class=\"kw3\">time</span>.<span class=\"kw3\">time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw2\">self</span>.<span class=\"kw3\">time</span> +<span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">tb</span> - <span class=\"kw2\">self</span>.<span class=\"me1\">ta</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">frames</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">self</span>.<span class=\"me1\">frames</span> <span class=\"sy0\">==</span> <span class=\"nu0\">30</span>:<br/>            <span class=\"kw1\">try</span>:<br/>                <span class=\"kw2\">self</span>.<span class=\"me1\">fps</span> <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">frames</span> / <span class=\"kw2\">self</span>.<span class=\"kw3\">time</span><br/>            <span class=\"kw1\">except</span>:<br/>                <span class=\"kw2\">self</span>.<span class=\"me1\">fps</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"INSTANT\"</span><br/>            <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"%d frames in\u00a0%3.2f seconds (%s FPS)\"</span>\u00a0%<br/>                  <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">frames</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"kw3\">time</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">fps</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw2\">self</span>.<span class=\"kw3\">time</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">frames</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">root</span>.<span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">loop</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    root <span class=\"sy0\">=</span> <span class=\"kw3\">Tkinter</span>.<span class=\"me1\">Tk</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    app <span class=\"sy0\">=</span> App<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">320</span><span class=\"sy0\">,</span> <span class=\"nu0\">240</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> root<span class=\"br0\">)</span><br/>    root.<span class=\"me1\">mainloop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require 2htdp/image 2htdp/universe)<br/>\u00a0<br/>(define black (color   0   0   0 255))<br/>(define white (color 255 255 255 255))<br/>\u00a0<br/>(define-struct world (last fps))<br/>\u00a0<br/>(define (noise w h)<br/>  (color-list-&gt;bitmap<br/>   (for*/list ([x (in-range w)] [y (in-range h)])<br/>     (if (zero? (random 2)) black white))<br/>   w h))<br/>\u00a0<br/>(define (draw w)<br/>  (underlay/xy <br/>   (noise 320 240) 0 0<br/>   (text (number-&gt;string (world-fps w)) 64 \"Red\")))<br/>\u00a0<br/>(define (handle-tick w)<br/>  (define cm (current-inexact-milliseconds))<br/>  (make-world cm (exact-floor (/ 1000.0 (- cm (world-last w))))))<br/>\u00a0<br/>(big-bang (make-world 1 0)<br/>          [on-draw draw]<br/>          [on-tick handle-tick (/ 1. 120)])<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 23, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program times (elapsed) the generation of 100 frames of random black&amp;white image.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> sw sd im <span class=\"sy0\">.</span>                             <span class=\"coMULTI\">/*obtain optional args from the C.L.   */</span><br/><span class=\"kw1\">if</span> sw==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> sw==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> sw=<span class=\"nu0\">320</span>                 <span class=\"coMULTI\">/*SW  specified?  No, then use default.*/</span><br/><span class=\"kw1\">if</span> sd==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> sd==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> sd=<span class=\"nu0\">240</span>                 <span class=\"coMULTI\">/*SD      \"        \"    \"   \"      \"   */</span><br/><span class=\"kw1\">if</span> im==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> im==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> im=<span class=\"nu0\">100</span>                 <span class=\"coMULTI\">/*IM      \"        \"    \"   \"      \"   */</span><br/><span class=\"kw1\">call</span> <span class=\"kw6\">time</span> <span class=\"st0\">'R'</span>                                    <span class=\"coMULTI\">/*reset the REXX elapsed (clock) timer.*/</span><br/>              <span class=\"kw1\">do</span>   im                            <span class=\"coMULTI\">/*generate    IM     number of images. */</span><br/>              <span class=\"kw1\">call</span> genFrame  sw, sd              <span class=\"coMULTI\">/*generate single image of size SW x SD*/</span><br/>              <span class=\"coMULTI\">/*\u25a0\u25a0\u25a0 display frame here \u25a0\u25a0\u25a0*/</span>     <span class=\"coMULTI\">/*do (or don't) display the frame num. */</span><br/>              <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*im*/</span>                       <span class=\"coMULTI\">/*generate, but don't display the image*/</span><br/>                                                 <span class=\"coMULTI\">/*measures  \u2193  elapsed time in seconds.*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'The average frames/second: '</span>    <span class=\"kw6\">format</span><span class=\"br0\">(</span>im<span class=\"sy0\">/</span><span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">\"E\"</span><span class=\"br0\">)</span>, , <span class=\"nu0\">2</span><span class=\"br0\">)</span>     <span class=\"coMULTI\">/*show frames/second.*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>genFrame:  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x,y;   @<span class=\"sy0\">.</span>0= <span class=\"st0\">'ff000000'</span>x                   <span class=\"coMULTI\">/*hex: the color  black. */</span><br/>                            @<span class=\"sy0\">.</span>1= <span class=\"st0\">'ffFFffFF'</span>x                   <span class=\"coMULTI\">/* \"    \"    \"    white. */</span><br/>           $=                                                  <span class=\"coMULTI\">/*nullify image string.  */</span><br/>                  <span class=\"kw1\">do</span> y;  _=                                    <span class=\"coMULTI\">/*nullify an output row. */</span><br/>                            <span class=\"kw1\">do</span> x; \u00a0?=<span class=\"kw6\">random</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span>;  _=_ <span class=\"sy0\">||</span> @<span class=\"sy0\">.</span>?  <span class=\"coMULTI\">/*color is black \u2502 white.*/</span><br/>                            <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*x*/</span>                        <span class=\"coMULTI\">/* [\u2191]  build a whole row*/</span><br/>                  $=$ <span class=\"sy0\">||</span> _                                     <span class=\"coMULTI\">/*append row to $ string.*/</span><br/>                  <span class=\"kw3\">end</span>             <span class=\"coMULTI\">/*y*/</span>                        <span class=\"coMULTI\">/* [\u2191]  build the image. */</span><br/>           <span class=\"kw1\">return</span></pre>"}, {"lang": "Ruby", "loc": 23, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'rubygems'</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'gl'</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'glut'</span><br/>\u00a0<br/>W, H = <span class=\"nu0\">320</span>, <span class=\"nu0\">240</span><br/>SIZE = W <span class=\"sy0\">*</span> H<br/>\u00a0<br/>Glut.<span class=\"me1\">glutInit</span> ARGV<br/>Glut.<span class=\"me1\">glutInitWindowSize</span> W, H<br/>\u00a0<br/>Glut.<span class=\"me1\">glutIdleFunc</span> <span class=\"kw3\">lambda</span> <span class=\"br0\">{</span><br/>  i = <span class=\"kw4\">Time</span>.<span class=\"me1\">now</span><br/>  noise = <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"me1\">SIZE</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"kw3\">rand</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.5</span>\u00a0? 0xFFFFFFFF\u00a0: 0xFF000000 <span class=\"br0\">}</span>.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"st0\">\"I*\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  Gl.<span class=\"me1\">glClear</span> <span class=\"re2\">Gl::GL_COLOR_BUFFER_BIT</span><br/>  Gl.<span class=\"me1\">glDrawPixels</span> W, H, <span class=\"re2\">Gl::GL_RGBA</span>, <span class=\"re2\">Gl::GL_UNSIGNED_BYTE</span>, noise<br/>  Gl.<span class=\"me1\">glFlush</span><br/>\u00a0<br/>  <span class=\"kw3\">puts</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">Time</span>.<span class=\"me1\">now</span> <span class=\"sy0\">-</span> i<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Glut.<span class=\"me1\">glutCreateWindow</span> <span class=\"st0\">\"noise\"</span><br/>Glut.<span class=\"me1\">glutMainLoop</span></pre>"}, {"lang": "Run BASIC", "loc": 13, "block": "<pre class=\"text highlighted_source\">begSec = time$(\"seconds\")<br/>graphic #g, 320,240<br/>tics  = 320 * 240<br/>for i = 1 to tics<br/>    x = int((rnd(1) * 320) + 1) <br/>    y = int((rnd(1) * 240) + 1)<br/>    if int(x mod 2) then  #g \"color black\u00a0; set \"; x; \" \"; y else #g \"color white\u00a0; set \"; x; \" \"; y<br/>next i<br/>endSec = time$(\"seconds\")<br/>totSec = endSec - begSec<br/>print \"Seconds;\";totSec;\" Count:\";tics;\" Tics / sec:\";tics/totSec;\" fps:\";1/totSec<br/>render #g <br/>#g \"flush\"</pre>"}, {"lang": "Scala", "loc": 47, "block": "<pre class=\"scala highlighted_source\">\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">event</span>.<span class=\"br0\">{</span>ActionEvent, ActionListener<span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> swing.<span class=\"br0\">{</span>Panel, MainFrame, SimpleSwingApplication<span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">Timer</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"br0\">{</span>Font, Color, Graphics2D, Dimension<span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> ImageNoise <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> SimpleSwingApplication <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> delay<span class=\"sy0\">_</span>ms <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> framecount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> fps <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> top <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> MainFrame <span class=\"br0\">{</span><br/>    contents <span class=\"sy0\">=</span> panel<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> panel <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Panel <span class=\"br0\">{</span><br/>    preferredSize <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Dimension<span class=\"br0\">(</span><span class=\"nu0\">320</span>, <span class=\"nu0\">240</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> paintComponent<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> to size.<span class=\"me1\">width</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> to size.<span class=\"me1\">height</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>math.<span class=\"me1\">random</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span> Color.<span class=\"me1\">BLACK</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> Color.<span class=\"me1\">WHITE</span><br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><br/>        g.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>x, y, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>      g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">RED</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">setFont</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Font<span class=\"br0\">(</span><span class=\"st0\">\"Monospaced\"</span>, Font.<span class=\"me1\">BOLD</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"FPS: \"</span> + fps, size.<span class=\"me1\">width</span> - <span class=\"nu0\">100</span>, size.<span class=\"me1\">height</span> - <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>      framecount +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> repainter <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Timer<span class=\"br0\">(</span>delay<span class=\"sy0\">_</span>ms, <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> ActionListener <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> actionPerformed<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> ActionEvent<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      panel.<span class=\"me1\">repaint</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> framerateChecker <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Timer<span class=\"br0\">(</span><span class=\"nu0\">1000</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> ActionListener <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> actionPerformed<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> ActionEvent<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      fps <span class=\"sy0\">=</span> framecount<br/>      framecount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>  repainter.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  framerateChecker.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Tcl", "loc": 35, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tk<br/>\u00a0<br/><span class=\"kw1\">proc</span> generate <span class=\"br0\">{</span>img width height<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> data <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$height</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> line <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$width</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> line <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"st0\">\"#000000 #FFFFFF\"</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0.5</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">lappend</span> data <span class=\"re0\">$line</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$img</span> put <span class=\"re0\">$data</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">set</span> <span class=\"kw2\">time</span> <span class=\"nu0\">0.0</span><br/><span class=\"kw1\">set</span> count <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> looper <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> <span class=\"kw2\">time</span> count<br/>    <span class=\"kw1\">set</span> t <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"br0\">[</span><span class=\"kw2\">time</span> <span class=\"br0\">{</span>generate noise <span class=\"nu0\">320</span> <span class=\"nu0\">240</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> <span class=\"kw2\">time</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$time</span> + <span class=\"re0\">$t</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">incr</span> count<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span>= <span class=\"nu0\">30</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> <span class=\"kw2\">time</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$time</span> / <span class=\"nu0\">1000000.0</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> fps <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$count</span> / <span class=\"re0\">$time</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"%d frames in\u00a0%3.2f seconds (%f FPS)\"</span> <span class=\"re0\">$count</span> <span class=\"re0\">$time</span> <span class=\"re0\">$fps</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> <span class=\"kw2\">time</span> <span class=\"nu0\">0.0</span><br/>\t<span class=\"kw1\">set</span> count <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span><br/>    after <span class=\"nu0\">1</span> looper<br/><span class=\"br0\">}</span><br/>\u00a0<br/>image create photo noise -width <span class=\"nu0\">320</span> -height <span class=\"nu0\">240</span><br/>pack <span class=\"br0\">[</span>label .l -image noise<span class=\"br0\">]</span><br/>update<br/>looper</pre>"}, {"lang": "Visual Basic .NET", "loc": 131, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"kw1\">Imports</span> System<span class=\"sy0\">.</span><span class=\"me1\">Drawing</span><span class=\"sy0\">.</span><span class=\"me1\">Imaging</span><br/>\u00a0<br/><span class=\"kw1\">Public</span> <span class=\"kw1\">Class</span> frmSnowExercise<br/>\u00a0<br/>  <span class=\"kw1\">Dim</span> bRunning <span class=\"kw1\">As</span> <span class=\"kw2\">Boolean</span> <span class=\"sy0\">=</span> <span class=\"kw1\">True</span><br/>\u00a0<br/>  <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> Form1_Load<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> sender <span class=\"kw1\">As</span> System<span class=\"sy0\">.</span><span class=\"kw2\">Object</span>, <span class=\"kw1\">ByVal</span> e <span class=\"kw1\">As</span> System<span class=\"sy0\">.</span><span class=\"me1\">EventArgs</span><span class=\"br0\">)</span> <span class=\"kw1\">Handles</span> <span class=\"kw1\">MyBase</span><span class=\"sy0\">.</span><span class=\"me1\">Load</span><br/>\u00a0<br/>    <span class=\"co1\">' Tell windows we want to handle all the painting and that we want it to double buffer</span><br/>    <span class=\"co1\">' the form's rectangle (Double Buffering removes/reduces flickering).</span><br/>    SetStyle<span class=\"br0\">(</span>ControlStyles<span class=\"sy0\">.</span><span class=\"me1\">AllPaintingInWmPaint</span> <span class=\"kw1\">Or</span> ControlStyles<span class=\"sy0\">.</span><span class=\"me1\">UserPaint</span> <span class=\"kw1\">Or</span> ControlStyles<span class=\"sy0\">.</span><span class=\"me1\">OptimizedDoubleBuffer</span>, <span class=\"kw1\">True</span><span class=\"br0\">)</span><br/>    UpdateStyles<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' Prevent the user from resizing the window. Our draw code is not</span><br/>    <span class=\"co1\">' setup to recalculate on the fly.</span><br/>    FormBorderStyle <span class=\"sy0\">=</span> Windows<span class=\"sy0\">.</span><span class=\"me1\">Forms</span><span class=\"sy0\">.</span><span class=\"me1\">FormBorderStyle</span><span class=\"sy0\">.</span><span class=\"me1\">FixedSingle</span><br/>    MaximizeBox <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><br/>\u00a0<br/>    <span class=\"co1\">' The window size and the client rectangle aren't the same.</span><br/>    <span class=\"co1\">' To get the proper dimensions for our exercise we need to </span><br/>    <span class=\"co1\">' figure out the difference and add it to our 320x240 </span><br/>    <span class=\"co1\">' requirement.</span><br/>    Width <span class=\"sy0\">=</span> <span class=\"nu0\">320</span> <span class=\"sy0\">+</span> Size<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">-</span> ClientSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span><br/>    Height <span class=\"sy0\">=</span> <span class=\"nu0\">240</span> <span class=\"sy0\">+</span> Size<span class=\"sy0\">.</span><span class=\"me1\">Height</span> <span class=\"sy0\">-</span> ClientSize<span class=\"sy0\">.</span><span class=\"me1\">Height</span><br/>\u00a0<br/>    <span class=\"co1\">' Pop the window, bring it to the front and give windows time to </span><br/>    <span class=\"co1\">' reflect the changes.</span><br/>    Show<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    Activate<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    Application<span class=\"sy0\">.</span><span class=\"me1\">DoEvents</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' Hit the loop and keep going until we receive a close request.</span><br/>    RenderLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' We're done. Exit the application.</span><br/>    <a href=\"http://www.google.com/search?q=CLOSE+site:msdn.microsoft.com\"><span class=\"kw7\">Close</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>  <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> Form1_KeyPress<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> sender <span class=\"kw1\">As</span> <span class=\"kw2\">Object</span>, <span class=\"kw1\">ByVal</span> e <span class=\"kw1\">As</span> System<span class=\"sy0\">.</span><span class=\"me1\">Windows</span><span class=\"sy0\">.</span><span class=\"me1\">Forms</span><span class=\"sy0\">.</span><span class=\"me1\">KeyPressEventArgs</span><span class=\"br0\">)</span> <span class=\"kw1\">Handles</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">KeyPress</span><br/>    <span class=\"co1\">' Close the application when the user hits escape.</span><br/>    <span class=\"kw1\">If</span> e<span class=\"sy0\">.</span><span class=\"me1\">KeyChar</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=CHRW+site:msdn.microsoft.com\"><span class=\"kw7\">ChrW</span></a><span class=\"br0\">(</span>Keys<span class=\"sy0\">.</span><span class=\"me1\">Escape</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> bRunning <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>  <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> Form1_FormClosing<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> sender <span class=\"kw1\">As</span> <span class=\"kw2\">Object</span>, <span class=\"kw1\">ByVal</span> e <span class=\"kw1\">As</span> System<span class=\"sy0\">.</span><span class=\"me1\">Windows</span><span class=\"sy0\">.</span><span class=\"me1\">Forms</span><span class=\"sy0\">.</span><span class=\"me1\">FormClosingEventArgs</span><span class=\"br0\">)</span> <span class=\"kw1\">Handles</span> <span class=\"kw1\">Me</span><span class=\"sy0\">.</span><span class=\"me1\">FormClosing</span><br/>    <span class=\"co1\">' We'll cancel the form close request if we're still running so we don't get an error during runtime and set the close request flag.</span><br/>    e<span class=\"sy0\">.</span><span class=\"me1\">Cancel</span> <span class=\"sy0\">=</span> bRunning<br/>    bRunning <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>  <span class=\"kw1\">Private</span> <span class=\"kw1\">Sub</span> RenderLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">Const</span> cfPadding <span class=\"kw1\">As</span> <span class=\"kw2\">Single</span> <span class=\"sy0\">=</span> 5<span class=\"sy0\">.</span>0F<br/>\u00a0<br/>    <span class=\"kw1\">Dim</span> b <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Bitmap<span class=\"br0\">(</span>ClientSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, ClientSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, PixelFormat<span class=\"sy0\">.</span><span class=\"me1\">Format32bppArgb</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Dim</span> g <span class=\"kw1\">As</span> Graphics <span class=\"sy0\">=</span> Graphics<span class=\"sy0\">.</span><span class=\"me1\">FromImage</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Dim</span> r <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Random<span class=\"br0\">(</span>Now<span class=\"sy0\">.</span><span class=\"me1\">Millisecond</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Dim</span> oBMPData <span class=\"kw1\">As</span> BitmapData <span class=\"sy0\">=</span> <span class=\"kw1\">Nothing</span><br/>    <span class=\"kw1\">Dim</span> oPixels<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Nothing</span><br/>    <span class=\"kw1\">Dim</span> oBlackWhite<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span>Color<span class=\"sy0\">.</span><span class=\"me1\">White</span><span class=\"sy0\">.</span><span class=\"me1\">ToArgb</span>, Color<span class=\"sy0\">.</span><span class=\"me1\">Black</span><span class=\"sy0\">.</span><span class=\"me1\">ToArgb</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">Dim</span> oStopwatch <span class=\"kw1\">As</span> <span class=\"kw1\">New</span> Stopwatch<br/>    <span class=\"kw1\">Dim</span> fElapsed <span class=\"kw1\">As</span> <span class=\"kw2\">Single</span> <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>0F<br/>    <span class=\"kw1\">Dim</span> iLoops <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">Dim</span> sFPS <span class=\"kw1\">As</span> <span class=\"kw2\">String</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"0.0 FPS\"</span><br/>    <span class=\"kw1\">Dim</span> oFPSSize <span class=\"kw1\">As</span> SizeF <span class=\"sy0\">=</span> g<span class=\"sy0\">.</span><span class=\"me1\">MeasureString</span><span class=\"br0\">(</span>sFPS, Font<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Dim</span> oFPSBG <span class=\"kw1\">As</span> RectangleF <span class=\"sy0\">=</span> <span class=\"kw1\">New</span> RectangleF<span class=\"br0\">(</span>ClientSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">-</span> cfPadding <span class=\"sy0\">-</span> oFPSSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, cfPadding, oFPSSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, oFPSSize<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' Get ourselves a nice, clean, black canvas to work with.</span><br/>    g<span class=\"sy0\">.</span><span class=\"me1\">Clear</span><span class=\"br0\">(</span>Color<span class=\"sy0\">.</span><span class=\"me1\">Black</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' Prep our bitmap for a read.</span><br/>    oBMPData <span class=\"sy0\">=</span> b<span class=\"sy0\">.</span><span class=\"me1\">LockBits</span><span class=\"br0\">(</span><span class=\"kw1\">New</span> Rectangle<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, b<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, b<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span>, ImageLockMode<span class=\"sy0\">.</span><span class=\"kw1\">ReadOnly</span>, PixelFormat<span class=\"sy0\">.</span><span class=\"me1\">Format32bppArgb</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' Allocate sufficient space for the pixel data and </span><br/>    <span class=\"co1\">' flash copy it to our array.</span><br/>    <span class=\"co1\">' We want an integer to hold the color for each pixel in the canvas.</span><br/>    Array<span class=\"sy0\">.</span><span class=\"me1\">Resize</span><span class=\"br0\">(</span>oPixels, b<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">*</span> b<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span><br/>    Runtime<span class=\"sy0\">.</span><span class=\"me1\">InteropServices</span><span class=\"sy0\">.</span><span class=\"me1\">Marshal</span><span class=\"sy0\">.</span><span class=\"me1\">Copy</span><span class=\"br0\">(</span>oBMPData<span class=\"sy0\">.</span><span class=\"me1\">Scan0</span>, oPixels, <span class=\"nu0\">0</span>, oPixels<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"br0\">)</span><br/>    b<span class=\"sy0\">.</span><span class=\"me1\">UnlockBits</span><span class=\"br0\">(</span>oBMPData<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">' Start looping.</span><br/>    <span class=\"kw1\">Do</span><br/>      <span class=\"co1\">' Find our frame time and add it to the total amount of time </span><br/>      <span class=\"co1\">' elapsed since our last FPS update (once per second).</span><br/>      fElapsed <span class=\"sy0\">+=</span> oStopwatch<span class=\"sy0\">.</span><span class=\"me1\">ElapsedMilliseconds</span> <span class=\"sy0\">/</span> 1000<span class=\"sy0\">.</span>0F<br/>      oStopwatch<span class=\"sy0\">.</span><span class=\"me1\">Reset</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      oStopwatch<span class=\"sy0\">.</span><span class=\"me1\">Start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">' Adjust the number of loops since the last whole second has elapsed.</span><br/>      iLoops <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>      <span class=\"kw1\">If</span> fElapsed <span class=\"sy0\">&gt;=</span> 1<span class=\"sy0\">.</span>0F <span class=\"kw1\">Then</span><br/>        <span class=\"co1\">' Since we've now had a whole second elapse</span><br/>        <span class=\"co1\">' figure the Frames Per Second, </span><br/>        <span class=\"co1\">' measure our string,</span><br/>        <span class=\"co1\">' setup our backing rectangle for the FPS string (so it's clearly visible over the snow)</span><br/>        <span class=\"co1\">' reset our loop counter </span><br/>        <span class=\"co1\">' and our elapsed counter.</span><br/>        sFPS <span class=\"sy0\">=</span> <span class=\"br0\">(</span>iLoops <span class=\"sy0\">/</span> fElapsed<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"0.0\"</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" FPS\"</span><br/>        oFPSSize <span class=\"sy0\">=</span> g<span class=\"sy0\">.</span><span class=\"me1\">MeasureString</span><span class=\"br0\">(</span>sFPS, Font<span class=\"br0\">)</span><br/>        oFPSBG <span class=\"sy0\">=</span> <span class=\"kw1\">New</span> RectangleF<span class=\"br0\">(</span>ClientSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">-</span> cfPadding <span class=\"sy0\">-</span> oFPSSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, cfPadding, oFPSSize<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, oFPSSize<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span><br/>        fElapsed <span class=\"sy0\">-=</span> 1<span class=\"sy0\">.</span>0F <span class=\"co1\">' We don't set this to 0 incase our frame time has gone a bit over 1 second since last update.</span><br/>        iLoops <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/>      <span class=\"co1\">' Generate our snow.</span><br/>      <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw2\">Integer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> oPixels<span class=\"sy0\">.</span><span class=\"me1\">GetUpperBound</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        oPixels<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> oBlackWhite<span class=\"br0\">(</span>r<span class=\"sy0\">.</span><span class=\"kw1\">Next</span><span class=\"br0\">(</span>oBlackWhite<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Next</span><br/>\u00a0<br/>      <span class=\"co1\">' Prep the bitmap for an update.</span><br/>      oBMPData <span class=\"sy0\">=</span> b<span class=\"sy0\">.</span><span class=\"me1\">LockBits</span><span class=\"br0\">(</span><span class=\"kw1\">New</span> Rectangle<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, b<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, b<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span>, ImageLockMode<span class=\"sy0\">.</span><span class=\"kw1\">WriteOnly</span>, PixelFormat<span class=\"sy0\">.</span><span class=\"me1\">Format32bppArgb</span><span class=\"br0\">)</span><br/>      <span class=\"co1\">' Flash copy the new data into our bitmap.</span><br/>      Runtime<span class=\"sy0\">.</span><span class=\"me1\">InteropServices</span><span class=\"sy0\">.</span><span class=\"me1\">Marshal</span><span class=\"sy0\">.</span><span class=\"me1\">Copy</span><span class=\"br0\">(</span>oPixels, <span class=\"nu0\">0</span>, oBMPData<span class=\"sy0\">.</span><span class=\"me1\">Scan0</span>, oPixels<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"br0\">)</span><br/>      b<span class=\"sy0\">.</span><span class=\"me1\">UnlockBits</span><span class=\"br0\">(</span>oBMPData<span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">' Draw the backing for our FPS display.</span><br/>      g<span class=\"sy0\">.</span><span class=\"me1\">FillRectangle</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, oFPSBG<span class=\"br0\">)</span><br/>      <span class=\"co1\">' Draw our FPS.</span><br/>      g<span class=\"sy0\">.</span><span class=\"me1\">DrawString</span><span class=\"br0\">(</span>sFPS, Font, Brushes<span class=\"sy0\">.</span><span class=\"me1\">Yellow</span>, oFPSBG<span class=\"sy0\">.</span><span class=\"me1\">Left</span>, oFPSBG<span class=\"sy0\">.</span><span class=\"me1\">Top</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">' Update the form's background and draw.</span><br/>      BackgroundImage <span class=\"sy0\">=</span> b<br/>      Invalidate<span class=\"br0\">(</span>ClientRectangle<span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">' Let windows handle some queued events.</span><br/>      Application<span class=\"sy0\">.</span><span class=\"me1\">DoEvents</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Loop</span> <span class=\"kw1\">While</span> bRunning<br/>\u00a0<br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Class</span></pre>"}, {"lang": "XPL0", "loc": 26, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;          \\intrinsic 'code' declarations<br/>int CpuReg,                     \\address of CPU register array (from GetReg)<br/>    FPS,                        \\frames per second, the display's update rate<br/>    Sec,                        \\current second of time (from real-time clock)<br/>    SecOld,                     \\previous second of time<br/>    X, Y;<br/>[SetVid($101);                  \\set 640x480 graphics<br/>CpuReg:= GetReg;                \\get address of array to access CPU registers<br/>FPS:= 0;<br/>repeat  CpuReg(0):= $0200;      \\get current time in seconds from BIOS<br/>        SoftInt($1A);           \\software interrupt<br/>        Sec:= CpuReg(3)&gt;&gt;8 &amp; $FF; \\register DH contains seconds<br/>        if Sec = SecOld then    \\if same as before then<br/>                FPS:= FPS+1     \\ bump FPS counter<br/>        else    [SecOld:= Sec;  \\otherwise save old seconds and<br/>                CrLf(6);<br/>                IntOut(6, FPS); \\ display FPS counter (once per second)<br/>                Text(6, \" FPS\");<br/>                FPS:= 0;        \\ reset FPS counter<br/>                ];<br/>        for Y:= 0, 240-1 do     \\fill image with random black and white pixels<br/>            for X:= 0, 320-1 do<br/>                Point(X, Y, if Ran(2) then $F\\white\\ else 0\\black\\);<br/>until KeyHit;<br/>SetVid(3);                      \\restore normal text mode<br/>]</pre>"}]}