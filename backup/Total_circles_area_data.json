{"task": "Total_circles_area", "blocks": [{"lang": "C", "loc": 99, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"co2\">#include &lt;stdbool.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">double</span> Fp<span class=\"sy0\">;</span><br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> Fp x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">;</span> <span class=\"br0\">}</span> Circle<span class=\"sy0\">;</span><br/>\u00a0<br/>Circle circles<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.6417233788</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.6121789534</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0848270516</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">1.4944608174</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.2077959613</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1039549836</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">0.6110294452</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.6907087527</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.9089162485</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">0.3844862411</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.2923344616</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.2375743054</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.2495892950</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.3832854473</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0845181219</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.7813504266</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.6178237031</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.8162655711</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.1985249206</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.8343333301</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0538864941</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">1.7011985145</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.1263820964</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.4776976918</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.4319462812</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.4104420482</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.7886291537</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">0.2178372997</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.9499557344</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0357871187</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.6294854565</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">1.3078893852</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.7653357688</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.7952608455</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.6281269104</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.2727652452</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.4168575317</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.0683357171</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1016025378</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.4637371396</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.9463877418</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1846214562</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.5263668798</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.7315156631</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.4428514068</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">1.2197352481</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.9144146579</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0727263474</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.1389358881</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.1092805780</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.7350208828</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.5293954595</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0030278255</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.2472867347</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.5258728625</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.3782633069</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.3495508831</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.1403562064</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.2437382535</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.3804956588</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">0.8055826339</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.0482092025</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.3327165165</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.6311979224</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.7184578971</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.2491045282</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">1.4685857879</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.8347049536</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.3670667538</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.6855727502</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.6465021616</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0593087096</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu16\">0.0152957411</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0638919221</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.9771215985</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">const</span> <span class=\"kw4\">size_t</span> n_circles <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>circles<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>Circle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">static</span> <span class=\"kw2\">inline</span> Fp min<span class=\"br0\">(</span><span class=\"kw4\">const</span> Fp a<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> Fp b<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> a <span class=\"sy0\">&lt;=</span> b <span class=\"sy0\">?</span> a <span class=\"sy0\">:</span> b<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">static</span> <span class=\"kw2\">inline</span> Fp max<span class=\"br0\">(</span><span class=\"kw4\">const</span> Fp a<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> Fp b<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> a <span class=\"sy0\">&gt;=</span> b <span class=\"sy0\">?</span> a <span class=\"sy0\">:</span> b<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">static</span> <span class=\"kw2\">inline</span> Fp sq<span class=\"br0\">(</span><span class=\"kw4\">const</span> Fp a<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> a <span class=\"sy0\">*</span> a<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// Return an uniform random value in [a, b).</span><br/><span class=\"kw4\">static</span> <span class=\"kw2\">inline</span> <span class=\"kw4\">double</span> uniform<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">double</span> a<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> b<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">double</span> r01 <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>RAND_MAX<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> a <span class=\"sy0\">+</span> <span class=\"br0\">(</span>b <span class=\"sy0\">-</span> a<span class=\"br0\">)</span> <span class=\"sy0\">*</span> r01<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">static</span> <span class=\"kw2\">inline</span> bool is_inside_circles<span class=\"br0\">(</span><span class=\"kw4\">const</span> Fp x<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> Fp y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">size_t</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n_circles<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>sq<span class=\"br0\">(</span>x <span class=\"sy0\">-</span> circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> sq<span class=\"br0\">(</span>y <span class=\"sy0\">-</span> circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">r</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Initialize the bounding box (bbox) of the circles.</span><br/>    Fp x_min <span class=\"sy0\">=</span> INFINITY<span class=\"sy0\">,</span> x_max <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>INFINITY<span class=\"sy0\">;</span><br/>    Fp y_min <span class=\"sy0\">=</span> x_min<span class=\"sy0\">,</span> y_max <span class=\"sy0\">=</span> x_max<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Compute the bounding box of the circles.</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">size_t</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n_circles<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        Circle <span class=\"sy0\">*</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        x_min <span class=\"sy0\">=</span> min<span class=\"br0\">(</span>x_min<span class=\"sy0\">,</span> c<span class=\"sy0\">-&gt;</span>x <span class=\"sy0\">-</span> c<span class=\"sy0\">-&gt;</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        x_max <span class=\"sy0\">=</span> max<span class=\"br0\">(</span>x_max<span class=\"sy0\">,</span> c<span class=\"sy0\">-&gt;</span>x <span class=\"sy0\">+</span> c<span class=\"sy0\">-&gt;</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        y_min <span class=\"sy0\">=</span> min<span class=\"br0\">(</span>y_min<span class=\"sy0\">,</span> c<span class=\"sy0\">-&gt;</span>y <span class=\"sy0\">-</span> c<span class=\"sy0\">-&gt;</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        y_max <span class=\"sy0\">=</span> max<span class=\"br0\">(</span>y_max<span class=\"sy0\">,</span> c<span class=\"sy0\">-&gt;</span>y <span class=\"sy0\">+</span> c<span class=\"sy0\">-&gt;</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        c<span class=\"sy0\">-&gt;</span>r <span class=\"sy0\">*=</span> c<span class=\"sy0\">-&gt;</span>r<span class=\"sy0\">;</span> <span class=\"co1\">// Square the radii to speed up testing.</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> Fp bbox_area <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x_max <span class=\"sy0\">-</span> x_min<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y_max <span class=\"sy0\">-</span> y_min<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Montecarlo sampling.</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/srand.html\"><span class=\"kw3\">srand</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">size_t</span> to_try <span class=\"sy0\">=</span> 1U <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">size_t</span> n_tries <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">size_t</span> n_hits <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        n_hits <span class=\"sy0\">+=</span> is_inside_circles<span class=\"br0\">(</span>uniform<span class=\"br0\">(</span>x_min<span class=\"sy0\">,</span> x_max<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                                    uniform<span class=\"br0\">(</span>y_min<span class=\"sy0\">,</span> y_max<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        n_tries<span class=\"sy0\">++;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n_tries <span class=\"sy0\">==</span> to_try<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">const</span> Fp area <span class=\"sy0\">=</span> bbox_area <span class=\"sy0\">*</span> n_hits <span class=\"sy0\">/</span> n_tries<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">const</span> Fp r <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Fp<span class=\"br0\">)</span>n_hits <span class=\"sy0\">/</span> n_tries<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">const</span> Fp s <span class=\"sy0\">=</span> area <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>r <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> r<span class=\"br0\">)</span> <span class=\"sy0\">/</span> n_tries<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%.4f +/-\u00a0%.4f (%zd samples)<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> area<span class=\"sy0\">,</span> s<span class=\"sy0\">,</span> n_tries<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>s <span class=\"sy0\">*</span> <span class=\"nu0\">3</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu19\">1e-3</span><span class=\"br0\">)</span> <span class=\"co1\">// Stop at 3 sigmas.</span><br/>                <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>            to_try <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 114, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">typecons</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">alias</span> Fp <span class=\"sy0\">=</span> <span class=\"kw4\">real</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">struct</span> Circle <span class=\"br0\">{</span> Fp x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> removeInternalDisks<span class=\"br0\">(</span><span class=\"kw2\">ref</span> Circle<span class=\"br0\">[</span><span class=\"br0\">]</span> circles<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">bool</span> isFullyInternal<span class=\"br0\">(</span><span class=\"kw2\">in</span> Circle c1<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> Circle c2<span class=\"br0\">)</span><br/>    <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c1.<span class=\"me1\">r</span> <span class=\"sy0\">&gt;</span> c2.<span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"co1\">// Quick exit.</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>c1.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> c2.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>c1.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> c2.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span><br/>               <span class=\"br0\">(</span>c2.<span class=\"me1\">r</span> <span class=\"sy0\">-</span> c1.<span class=\"me1\">r</span><span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Heuristics for performance: large radii first.</span><br/>    circles.<span class=\"me1\">sort</span><span class=\"sy0\">!</span>q<span class=\"br0\">{</span> a.<span class=\"me1\">r</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">r</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Remove circles inside another circle.</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> i <span class=\"sy0\">=</span> circles.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">--</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">auto</span> j <span class=\"sy0\">=</span> circles.<span class=\"me1\">length</span><span class=\"sy0\">;</span> j<span class=\"sy0\">--</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">!=</span> j <span class=\"sy0\">&amp;&amp;</span> isFullyInternal<span class=\"br0\">(</span>circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> circles<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> circles<span class=\"br0\">[</span>$ <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                circles.<span class=\"me1\">length</span><span class=\"sy0\">--;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    Circle<span class=\"br0\">[</span><span class=\"br0\">]</span> circles <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.6417233788</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.6121789534</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0848270516</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">1.4944608174</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.2077959613</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1039549836</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">0.6110294452</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.6907087527</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.9089162485</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">0.3844862411</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.2923344616</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.2375743054</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.2495892950</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.3832854473</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0845181219</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.7813504266</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.6178237031</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.8162655711</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.1985249206</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.8343333301</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0538864941</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">1.7011985145</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.1263820964</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.4776976918</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.4319462812</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.4104420482</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.7886291537</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">0.2178372997</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.9499557344</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0357871187</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.6294854565</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">1.3078893852</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.7653357688</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.7952608455</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.6281269104</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.2727652452</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.4168575317</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.0683357171</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1016025378</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.4637371396</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.9463877418</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.1846214562</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.5263668798</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.7315156631</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.4428514068</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">1.2197352481</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.9144146579</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0727263474</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.1389358881</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.1092805780</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.7350208828</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.5293954595</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0030278255</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.2472867347</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.5258728625</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.3782633069</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.3495508831</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.1403562064</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.2437382535</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.3804956588</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">0.8055826339</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.0482092025</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.3327165165</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.6311979224</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.7184578971</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.2491045282</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">1.4685857879</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.8347049536</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.3670667538</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu16\">0.6855727502</span><span class=\"sy0\">,</span>  <span class=\"nu16\">1.6465021616</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0593087096</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>       <span class=\"br0\">{</span> <span class=\"nu16\">0.0152957411</span><span class=\"sy0\">,</span>  <span class=\"nu16\">0.0638919221</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.9771215985</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Input Circles: \"</span><span class=\"sy0\">,</span> circles.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    removeInternalDisks<span class=\"br0\">(</span>circles<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Circles left: \"</span><span class=\"sy0\">,</span> circles.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> Fp xMin <span class=\"sy0\">=</span> reduce<span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"br0\">(</span>acc<span class=\"sy0\">,</span> c<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> min<span class=\"br0\">(</span>acc<span class=\"sy0\">,</span> c.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> c.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"br0\">(</span>Fp.<span class=\"me1\">max</span><span class=\"sy0\">,</span> circles<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> Fp xMax <span class=\"sy0\">=</span> reduce<span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"br0\">(</span>acc<span class=\"sy0\">,</span> c<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> max<span class=\"br0\">(</span>acc<span class=\"sy0\">,</span> c.<span class=\"me1\">x</span> <span class=\"sy0\">+</span> c.<span class=\"me1\">r</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"br0\">(</span>Fp<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> circles<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">alias</span> YRange <span class=\"sy0\">=</span> Tuple<span class=\"sy0\">!</span><span class=\"br0\">(</span>Fp<span class=\"sy0\">,</span><span class=\"st0\">\"y0\"</span><span class=\"sy0\">,</span> Fp<span class=\"sy0\">,</span><span class=\"st0\">\"y1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> yRanges <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> YRange<span class=\"br0\">[</span>circles.<span class=\"me1\">length</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    Fp computeTotalArea<span class=\"br0\">(</span><span class=\"kw2\">in</span> Fp nSlicesX<span class=\"br0\">)</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>        Fp total <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// Adapted from an idea by Cosmologicon.</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> p<span class=\"sy0\">;</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>xMin <span class=\"sy0\">*</span> nSlicesX<span class=\"br0\">)</span> <span class=\"sy0\">..</span><br/>                              <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>xMax <span class=\"sy0\">*</span> nSlicesX<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">immutable</span> Fp x <span class=\"sy0\">=</span> p <span class=\"sy0\">/</span> nSlicesX<span class=\"sy0\">;</span><br/>            <span class=\"kw4\">size_t</span> nPairs <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"co1\">// Look for the circles intersecting the current</span><br/>            <span class=\"co1\">// vertical secant:</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw2\">ref</span> c<span class=\"sy0\">;</span> circles<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">immutable</span> Fp d <span class=\"sy0\">=</span> c.<span class=\"me1\">r</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>c.<span class=\"me1\">x</span> <span class=\"sy0\">-</span> x<span class=\"br0\">)</span> <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>                <span class=\"kw4\">immutable</span> Fp sd <span class=\"sy0\">=</span> d.<span class=\"me1\">sqrt</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>d <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    <span class=\"co1\">// And keep only the intersection chords.</span><br/>                    yRanges<span class=\"br0\">[</span>nPairs<span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> YRange<span class=\"br0\">(</span>c.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> sd<span class=\"sy0\">,</span> c.<span class=\"me1\">y</span> <span class=\"sy0\">+</span> sd<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"co1\">// Merge the ranges, counting the overlaps only once.</span><br/>            yRanges<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">nPairs</span><span class=\"br0\">]</span>.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Fp y <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>Fp.<span class=\"me1\">max</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> r<span class=\"sy0\">;</span> yRanges<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"me1\">nPairs</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>y <span class=\"sy0\">&lt;</span> r.<span class=\"me1\">y1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    total <span class=\"sy0\">+=</span> r.<span class=\"me1\">y1</span> <span class=\"sy0\">-</span> max<span class=\"br0\">(</span>y<span class=\"sy0\">,</span> r.<span class=\"me1\">y0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    y <span class=\"sy0\">=</span> r.<span class=\"me1\">y1</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> total <span class=\"sy0\">/</span> nSlicesX<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Iterate to reach some precision.</span><br/>    <span class=\"kw4\">enum</span> Fp epsilon <span class=\"sy0\">=</span> <span class=\"nu19\">1e-9</span><span class=\"sy0\">;</span><br/>    Fp nSlicesX <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>_000<span class=\"sy0\">;</span><br/>    Fp oldArea <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> Fp newArea <span class=\"sy0\">=</span> computeTotalArea<span class=\"br0\">(</span>nSlicesX<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>abs<span class=\"br0\">(</span>oldArea <span class=\"sy0\">-</span> newArea<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> epsilon<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            writeln<span class=\"br0\">(</span><span class=\"st0\">\"N. vertical slices: \"</span><span class=\"sy0\">,</span> nSlicesX<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            writefln<span class=\"br0\">(</span><span class=\"st0\">\"Approximate area:\u00a0%.17f\"</span><span class=\"sy0\">,</span> newArea<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        oldArea <span class=\"sy0\">=</span> newArea<span class=\"sy0\">;</span><br/>        nSlicesX <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 122, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'math<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle x0 y0 r<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">vector</span> x0 y0 r <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>define<span class=\"sy0\">-</span>syntax<span class=\"sy0\">-</span>id _.radius <span class=\"br0\">(</span>_ <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>define<span class=\"sy0\">-</span>syntax<span class=\"sy0\">-</span>id  _.x0  <span class=\"br0\">(</span>_ <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>define<span class=\"sy0\">-</span>syntax<span class=\"sy0\">-</span>id  _.y0  <span class=\"br0\">(</span>_ <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; to sort circles</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>cmp<span class=\"sy0\">-</span>circles a b<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> a.radius b.radius<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>included? circle: a circles<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>b circles<span class=\"br0\">)</span><span class=\"br0\">)</span>  <br/>        #:continue <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> a b<span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>disk<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>disk? a b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; eliminates, and sort</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>sort<span class=\"sy0\">-</span>circles circles<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>list<span class=\"sy0\">-</span>sort cmp<span class=\"sy0\">-</span>circles<br/>          <span class=\"br0\">(</span>filter <span class=\"br0\">(</span><span class=\"kw1\">lambda</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>included? c circles<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> circles<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> circles <span class=\"br0\">(</span>sort<span class=\"sy0\">-</span>circles <br/>  <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.6417233788</span>  <span class=\"nu0\">1.6121789534</span> <span class=\"nu0\">0.0848270516</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">1.4944608174</span>  <span class=\"nu0\">1.2077959613</span> <span class=\"nu0\">1.1039549836</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">0.6110294452</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.6907087527</span> <span class=\"nu0\">0.9089162485</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">0.3844862411</span>  <span class=\"nu0\">0.2923344616</span> <span class=\"nu0\">0.2375743054</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.2495892950</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.3832854473</span> <span class=\"nu0\">1.0845181219</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.7813504266</span>  <span class=\"nu0\">1.6178237031</span> <span class=\"nu0\">0.8162655711</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.1985249206</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.8343333301</span> <span class=\"nu0\">0.0538864941</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">1.7011985145</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.1263820964</span> <span class=\"nu0\">0.4776976918</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.4319462812</span>  <span class=\"nu0\">1.4104420482</span> <span class=\"nu0\">0.7886291537</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">0.2178372997</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.9499557344</span> <span class=\"nu0\">0.0357871187</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.6294854565</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.3078893852</span> <span class=\"nu0\">0.7653357688</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.7952608455</span>  <span class=\"nu0\">0.6281269104</span> <span class=\"nu0\">0.2727652452</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.4168575317</span>  <span class=\"nu0\">1.0683357171</span> <span class=\"nu0\">1.1016025378</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.4637371396</span>  <span class=\"nu0\">0.9463877418</span> <span class=\"nu0\">1.1846214562</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.5263668798</span>  <span class=\"nu0\">1.7315156631</span> <span class=\"nu0\">1.4428514068</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">1.2197352481</span>  <span class=\"nu0\">0.9144146579</span> <span class=\"nu0\">1.0727263474</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.1389358881</span>  <span class=\"nu0\">0.1092805780</span> <span class=\"nu0\">0.7350208828</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.5293954595</span>  <span class=\"nu0\">0.0030278255</span> <span class=\"nu0\">1.2472867347</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.5258728625</span>  <span class=\"nu0\">1.3782633069</span> <span class=\"nu0\">1.3495508831</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.1403562064</span>  <span class=\"nu0\">0.2437382535</span> <span class=\"nu0\">1.3804956588</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">0.8055826339</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.0482092025</span> <span class=\"nu0\">0.3327165165</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.6311979224</span>  <span class=\"nu0\">0.7184578971</span> <span class=\"nu0\">0.2491045282</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">1.4685857879</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.8347049536</span> <span class=\"nu0\">1.3670667538</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle  <span class=\"sy0\">-</span><span class=\"nu0\">0.6855727502</span>  <span class=\"nu0\">1.6465021616</span> <span class=\"nu0\">1.0593087096</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>circle   <span class=\"nu0\">0.0152957411</span>  <span class=\"nu0\">0.0638919221</span> <span class=\"nu0\">0.9771215985</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; bounding box</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>enclosing<span class=\"sy0\">-</span>rect circles<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> xmin <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">min</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> c.x0 c.radius<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> xmax <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">max</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> c.x0 c.radius<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> ymin <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">min</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> c.y0 c.radius<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> ymax <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">max</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> c.y0 c.radius<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">vector</span> xmin ymin <span class=\"br0\">(</span><span class=\"sy0\">-</span> xmax xmin<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> ymax ymin<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; Compute surface of entirely overlapped tiles</span><br/><span class=\"co1\">;; and assign candidates circles to other tiles.</span><br/><span class=\"co1\">;; cands is a vector nsteps x nsteps of circles lists indexed by (i,j)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>S0 circles rect steps into: cands<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> dx <span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>rect <span class=\"nu0\">2</span><span class=\"br0\">)</span> steps<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; width / steps</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> dy <span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>rect <span class=\"nu0\">3</span><span class=\"br0\">)</span> steps<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; height / steps</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> ds <span class=\"br0\">(</span><span class=\"sy0\">*</span> dx dy<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; tile surface</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> dr <span class=\"br0\">(</span><span class=\"kw1\">vector</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> rect.x0 dx<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> rect.y0 dy<span class=\"br0\">)</span> dx dy<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> ijdx <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>sum <span class=\"br0\">(</span><span class=\"br0\">(</span>i steps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">vector</span><span class=\"sy0\">+=</span> dr <span class=\"nu0\">0</span> dx<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> dr <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> rect.y0 dy<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>sum <span class=\"br0\">(</span><span class=\"br0\">(</span>j steps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">vector</span><span class=\"sy0\">+=</span> dr <span class=\"nu0\">1</span> dy<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">set!</span> ijdx <span class=\"br0\">(</span><span class=\"sy0\">+</span> i <span class=\"br0\">(</span><span class=\"sy0\">*</span> j steps<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>sum <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            #:break <span class=\"br0\">(</span>rect<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>disk? dr c<span class=\"br0\">)</span> <span class=\"co1\">;; enclosed\u00a0? add ds</span><br/>                 <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">begin</span>   <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> cands ijdx null<span class=\"br0\">)</span> ds<span class=\"br0\">)</span><br/>            #:continue <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span>rect<span class=\"sy0\">-</span>disk<span class=\"sy0\">-</span>intersect? dr c<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                 <span class=\"co1\">;; intersects\u00a0? add circle to candidates for this tile</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> cands ijdx  <span class=\"br0\">(</span><span class=\"kw1\">cons</span> c <span class=\"br0\">(</span>cands ijdx <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> ct <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"co1\">;; return sum of surfaces of tiles which are not entirely overlapped</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span><span class=\"kw1\">S</span> circles rect steps cands<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">++</span> ct<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> dx <span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>rect <span class=\"nu0\">2</span><span class=\"br0\">)</span> steps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> dy <span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>rect <span class=\"nu0\">3</span><span class=\"br0\">)</span> steps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> ds <span class=\"br0\">(</span><span class=\"sy0\">*</span> dx dy<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> dr <span class=\"br0\">(</span><span class=\"kw1\">vector</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> rect.x0 dx<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> rect.y0 dy<span class=\"br0\">)</span> dx dy<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> ijdx <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>sum <span class=\"br0\">(</span><span class=\"br0\">(</span>i steps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">vector</span><span class=\"sy0\">+=</span> dr <span class=\"nu0\">0</span> dx<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">vector-set!</span> dr <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span>rect <span class=\"nu0\">1</span><span class=\"br0\">)</span> dy<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"br0\">(</span>for<span class=\"sy0\">/</span>sum <span class=\"br0\">(</span><span class=\"br0\">(</span>j steps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">vector</span><span class=\"sy0\">+=</span> dr <span class=\"nu0\">1</span> dy<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"kw1\">null?</span> cands<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">set!</span> circles <span class=\"br0\">(</span>cands <span class=\"br0\">(</span><span class=\"sy0\">+</span> i <span class=\"br0\">(</span><span class=\"sy0\">*</span> j steps<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        #:continue <span class=\"br0\">(</span><span class=\"kw1\">null?</span> circles<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">;; add surface</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">or</span><br/>            <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; enclosed\u00a0? add ds</span><br/>            #:break <span class=\"br0\">(</span>rect<span class=\"sy0\">-</span>in<span class=\"sy0\">-</span>disk? dr c<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> ds<br/>            #f <span class=\"br0\">)</span><br/>\u00a0<br/>            <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"co1\">;; not intersecting? add 0</span><br/>            <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c circles<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>rect<span class=\"sy0\">-</span>disk<span class=\"sy0\">-</span>intersect? dr c<span class=\"br0\">)</span><span class=\"br0\">)</span> #f <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>            <span class=\"co1\">;; intersecting\u00a0? recurse until precision</span><br/>            <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> dx s<span class=\"sy0\">-</span>precision<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">S</span> circles dr <span class=\"nu0\">2</span> null<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0<br/>            <span class=\"co1\">;; no hope - add ds/2</span><br/>            <span class=\"br0\">(</span><span class=\"sy0\">//</span> ds <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Go", "loc": 232, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>        <span class=\"st0\">\"flag\"</span><br/>        <span class=\"st0\">\"fmt\"</span><br/>        <span class=\"st0\">\"math\"</span><br/>        <span class=\"st0\">\"runtime\"</span><br/>        <span class=\"st0\">\"sort\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// Note, the standard \"image\" package has Point and Rectangle but we</span><br/><span class=\"co1\">// can't use them here since they're defined using int rather than</span><br/><span class=\"co1\">// float64.</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Circle <span class=\"kw4\">struct</span><span class=\"sy1\">{</span> X<span class=\"sy1\">,</span> Y<span class=\"sy1\">,</span> R<span class=\"sy1\">,</span> rsq <span class=\"kw4\">float64</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> NewCircle<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> r <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> Circle <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// We pre-calculate r\u00b2 as an optimization</span><br/>        <span class=\"kw1\">return</span> Circle<span class=\"sy1\">{</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> r<span class=\"sy1\">,</span> r <span class=\"sy3\">*</span> r<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> ContainsPt<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> distSq<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>X<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y<span class=\"sy1\">)</span> &lt;<span class=\"sy2\">=</span> c<span class=\"sy3\">.</span>rsq<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> ContainsC<span class=\"sy1\">(</span>c2 Circle<span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> distSq<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>X<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y<span class=\"sy1\">,</span> c2<span class=\"sy3\">.</span>X<span class=\"sy1\">,</span> c2<span class=\"sy3\">.</span>Y<span class=\"sy1\">)</span> &lt;<span class=\"sy2\">=</span> <span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>R<span class=\"sy3\">-</span>c2<span class=\"sy3\">.</span>R<span class=\"sy1\">)</span><span class=\"sy3\">*</span><span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>R<span class=\"sy3\">-</span>c2<span class=\"sy3\">.</span>R<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> ContainsR<span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> <span class=\"sy1\">(</span>full<span class=\"sy1\">,</span> corner <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        nw <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>NW<span class=\"sy1\">())</span><br/>        ne <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>NE<span class=\"sy1\">())</span><br/>        sw <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>SW<span class=\"sy1\">())</span><br/>        se <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>SE<span class=\"sy1\">())</span><br/>        <span class=\"kw1\">return</span> nw &amp;&amp; ne &amp;&amp; sw &amp;&amp; se<span class=\"sy1\">,</span> nw <span class=\"sy3\">||</span> ne <span class=\"sy3\">||</span> sw <span class=\"sy3\">||</span> se<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> North<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> c<span class=\"sy3\">.</span>X<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y <span class=\"sy3\">+</span> c<span class=\"sy3\">.</span>R <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> South<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> c<span class=\"sy3\">.</span>X<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y <span class=\"sy3\">-</span> c<span class=\"sy3\">.</span>R <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> West<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span>  <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> c<span class=\"sy3\">.</span>X <span class=\"sy3\">-</span> c<span class=\"sy3\">.</span>R<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> East<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span>  <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> c<span class=\"sy3\">.</span>X <span class=\"sy3\">+</span> c<span class=\"sy3\">.</span>R<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Rect <span class=\"kw4\">struct</span><span class=\"sy1\">{</span> X1<span class=\"sy1\">,</span> Y1<span class=\"sy1\">,</span> X2<span class=\"sy1\">,</span> Y2 <span class=\"kw4\">float64</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> Area<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span>          <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>X2 <span class=\"sy3\">-</span> r<span class=\"sy3\">.</span>X1<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> <span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>Y2 <span class=\"sy3\">-</span> r<span class=\"sy3\">.</span>Y1<span class=\"sy1\">)</span> <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> NW<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> r<span class=\"sy3\">.</span>X1<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y2 <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> NE<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> r<span class=\"sy3\">.</span>X2<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y2 <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> SW<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> r<span class=\"sy3\">.</span>X1<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y1 <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> SE<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> r<span class=\"sy3\">.</span>X2<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y1 <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> Centre<span class=\"sy1\">()</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>X1 <span class=\"sy3\">+</span> r<span class=\"sy3\">.</span>X2<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>Y1 <span class=\"sy3\">+</span> r<span class=\"sy3\">.</span>Y2<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> ContainsPt<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> r<span class=\"sy3\">.</span>X1 &lt;<span class=\"sy2\">=</span> x &amp;&amp; x &lt; r<span class=\"sy3\">.</span>X2 &amp;&amp;<br/>                r<span class=\"sy3\">.</span>Y1 &lt;<span class=\"sy2\">=</span> y &amp;&amp; y &lt; r<span class=\"sy3\">.</span>Y2<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> ContainsPC<span class=\"sy1\">(</span>c Circle<span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span> <span class=\"co1\">//  only N,W,E,S points of circle</span><br/>        <span class=\"kw1\">return</span> r<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>North<span class=\"sy1\">())</span> <span class=\"sy3\">||</span><br/>                r<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>South<span class=\"sy1\">())</span> <span class=\"sy3\">||</span><br/>                r<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>West<span class=\"sy1\">())</span> <span class=\"sy3\">||</span><br/>                r<span class=\"sy3\">.</span>ContainsPt<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>East<span class=\"sy1\">())</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> MinSide<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> math<span class=\"sy3\">.</span>Min<span class=\"sy1\">(</span>r<span class=\"sy3\">.</span>X2<span class=\"sy3\">-</span>r<span class=\"sy3\">.</span>X1<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y2<span class=\"sy3\">-</span>r<span class=\"sy3\">.</span>Y1<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> distSq<span class=\"sy1\">(</span>x1<span class=\"sy1\">,</span> y1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> y2 <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>        \u0394x<span class=\"sy1\">,</span> \u0394y <span class=\"sy2\">:=</span> x2<span class=\"sy3\">-</span>x1<span class=\"sy1\">,</span> y2<span class=\"sy3\">-</span>y1<br/>        <span class=\"kw1\">return</span> <span class=\"sy1\">(</span>\u0394x <span class=\"sy3\">*</span> \u0394x<span class=\"sy1\">)</span> <span class=\"sy3\">+</span> <span class=\"sy1\">(</span>\u0394y <span class=\"sy3\">*</span> \u0394y<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> CircleSet <span class=\"sy1\">[]</span>Circle<br/>\u00a0<br/><span class=\"co1\">// sort.Interface for sorting by radius big to small:</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> Len<span class=\"sy1\">()</span> <span class=\"kw4\">int</span>           <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span> <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> Swap<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> j <span class=\"kw4\">int</span><span class=\"sy1\">)</span>      <span class=\"sy1\">{</span> s<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">],</span> s<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> s<span class=\"sy1\">[</span>j<span class=\"sy1\">],</span> s<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> Less<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> j <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> s<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>R &gt; s<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>R <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>sp <span class=\"sy3\">*</span>CircleSet<span class=\"sy1\">)</span> RemoveContainedC<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        s <span class=\"sy2\">:=</span> <span class=\"sy3\">*</span>sp<br/>        sort<span class=\"sy3\">.</span>Sort<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">);</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu2\">i</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> j &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">);</span> <span class=\"sy1\">{</span><br/>                        <span class=\"kw1\">if</span> s<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>ContainsC<span class=\"sy1\">(</span>s<span class=\"sy1\">[</span>j<span class=\"sy1\">])</span> <span class=\"sy1\">{</span><br/>                                s<span class=\"sy1\">[</span>j<span class=\"sy1\">],</span> s<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> s<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">],</span> s<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span><br/>                                s <span class=\"sy2\">=</span> s<span class=\"sy1\">[:</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><br/>                        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>                                j<span class=\"sy2\">++</span><br/>                        <span class=\"sy1\">}</span><br/>                <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"sy3\">*</span>sp <span class=\"sy2\">=</span> s<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> Bounds<span class=\"sy1\">()</span> Rect <span class=\"sy1\">{</span><br/>        x1 <span class=\"sy2\">:=</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>X <span class=\"sy3\">-</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>R<br/>        x2 <span class=\"sy2\">:=</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>X <span class=\"sy3\">+</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>R<br/>        y1 <span class=\"sy2\">:=</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>Y <span class=\"sy3\">-</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>R<br/>        y2 <span class=\"sy2\">:=</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>Y <span class=\"sy3\">+</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>R<br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> s<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">:]</span> <span class=\"sy1\">{</span><br/>                x1 <span class=\"sy2\">=</span> math<span class=\"sy3\">.</span>Min<span class=\"sy1\">(</span>x1<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>X<span class=\"sy3\">-</span>c<span class=\"sy3\">.</span>R<span class=\"sy1\">)</span><br/>                x2 <span class=\"sy2\">=</span> math<span class=\"sy3\">.</span>Max<span class=\"sy1\">(</span>x2<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>X<span class=\"sy3\">+</span>c<span class=\"sy3\">.</span>R<span class=\"sy1\">)</span><br/>                y1 <span class=\"sy2\">=</span> math<span class=\"sy3\">.</span>Min<span class=\"sy1\">(</span>y1<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y<span class=\"sy3\">-</span>c<span class=\"sy3\">.</span>R<span class=\"sy1\">)</span><br/>                y2 <span class=\"sy2\">=</span> math<span class=\"sy3\">.</span>Max<span class=\"sy1\">(</span>y2<span class=\"sy1\">,</span> c<span class=\"sy3\">.</span>Y<span class=\"sy3\">+</span>c<span class=\"sy3\">.</span>R<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span> Rect<span class=\"sy1\">{</span>x1<span class=\"sy1\">,</span> y1<span class=\"sy1\">,</span> x2<span class=\"sy1\">,</span> y2<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> nWorkers <span class=\"sy2\">=</span> <span class=\"nu0\">4</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> UnionArea<span class=\"sy1\">(</span>\u03b5 <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>min<span class=\"sy1\">,</span> max <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        sort<span class=\"sy3\">.</span>Sort<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>        stop <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span><br/>        inside <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> Rect<span class=\"sy1\">)</span><br/>        outside <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> Rect<span class=\"sy1\">)</span><br/>        unknown <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">chan</span> Rect<span class=\"sy1\">,</span> <span class=\"nu1\">5e7</span><span class=\"sy1\">)</span> <span class=\"co1\">// XXX</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; nWorkers<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">go</span> s<span class=\"sy3\">.</span>worker<span class=\"sy1\">(</span>stop<span class=\"sy1\">,</span> unknown<span class=\"sy1\">,</span> inside<span class=\"sy1\">,</span> outside<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>        r <span class=\"sy2\">:=</span> s<span class=\"sy3\">.</span>Bounds<span class=\"sy1\">()</span><br/>        max <span class=\"sy2\">=</span> r<span class=\"sy3\">.</span>Area<span class=\"sy1\">()</span><br/>        unknown &lt;<span class=\"sy3\">-</span> r<br/>        <span class=\"kw1\">for</span> max<span class=\"sy3\">-</span>min &gt; \u03b5 <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">select</span> <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">case</span> r <span class=\"sy2\">=</span> &lt;<span class=\"sy3\">-</span>inside<span class=\"sy1\">:</span><br/>                        min <span class=\"sy2\">+=</span> r<span class=\"sy3\">.</span>Area<span class=\"sy1\">()</span><br/>                <span class=\"kw1\">case</span> r <span class=\"sy2\">=</span> &lt;<span class=\"sy3\">-</span>outside<span class=\"sy1\">:</span><br/>                        max <span class=\"sy2\">-=</span> r<span class=\"sy3\">.</span>Area<span class=\"sy1\">()</span><br/>                <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw3\">close</span><span class=\"sy1\">(</span>stop<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span> min<span class=\"sy1\">,</span> max<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> worker<span class=\"sy1\">(</span>stop &lt;<span class=\"sy3\">-</span><span class=\"kw4\">chan</span> <span class=\"kw4\">bool</span><span class=\"sy1\">,</span> unk <span class=\"kw4\">chan</span> Rect<span class=\"sy1\">,</span> in<span class=\"sy1\">,</span> out chan&lt;<span class=\"sy3\">-</span> Rect<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">select</span> <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">case</span> &lt;<span class=\"sy3\">-</span>stop<span class=\"sy1\">:</span><br/>                        <span class=\"kw1\">return</span><br/>                <span class=\"kw1\">case</span> r <span class=\"sy2\">:=</span> &lt;<span class=\"sy3\">-</span>unk<span class=\"sy1\">:</span><br/>                        inside<span class=\"sy1\">,</span> outside <span class=\"sy2\">:=</span> s<span class=\"sy3\">.</span>CategorizeR<span class=\"sy1\">(</span>r<span class=\"sy1\">)</span><br/>                        <span class=\"kw1\">switch</span> <span class=\"sy1\">{</span><br/>                        <span class=\"kw1\">case</span> inside<span class=\"sy1\">:</span><br/>                                in &lt;<span class=\"sy3\">-</span> r<br/>                        <span class=\"kw1\">case</span> outside<span class=\"sy1\">:</span><br/>                                out &lt;<span class=\"sy3\">-</span> r<br/>                        <span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>                                <span class=\"co1\">// Split</span><br/>                                midX<span class=\"sy1\">,</span> midY <span class=\"sy2\">:=</span> r<span class=\"sy3\">.</span>Centre<span class=\"sy1\">()</span><br/>                                unk &lt;<span class=\"sy3\">-</span> Rect<span class=\"sy1\">{</span>r<span class=\"sy3\">.</span>X1<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y1<span class=\"sy1\">,</span> midX<span class=\"sy1\">,</span> midY<span class=\"sy1\">}</span><br/>                                unk &lt;<span class=\"sy3\">-</span> Rect<span class=\"sy1\">{</span>midX<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y1<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>X2<span class=\"sy1\">,</span> midY<span class=\"sy1\">}</span><br/>                                unk &lt;<span class=\"sy3\">-</span> Rect<span class=\"sy1\">{</span>r<span class=\"sy3\">.</span>X1<span class=\"sy1\">,</span> midY<span class=\"sy1\">,</span> midX<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y2<span class=\"sy1\">}</span><br/>                                unk &lt;<span class=\"sy3\">-</span> Rect<span class=\"sy1\">{</span>midX<span class=\"sy1\">,</span> midY<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>X2<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Y2<span class=\"sy1\">}</span><br/>                        <span class=\"sy1\">}</span><br/>                <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>s CircleSet<span class=\"sy1\">)</span> CategorizeR<span class=\"sy1\">(</span>r Rect<span class=\"sy1\">)</span> <span class=\"sy1\">(</span>inside<span class=\"sy1\">,</span> outside <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        anyCorner <span class=\"sy2\">:=</span> <span class=\"kw2\">false</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> s <span class=\"sy1\">{</span><br/>                full<span class=\"sy1\">,</span> corner <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>ContainsR<span class=\"sy1\">(</span>r<span class=\"sy1\">)</span><br/>                <span class=\"kw1\">if</span> full <span class=\"sy1\">{</span><br/>                        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span> <span class=\"co1\">// inside</span><br/>                <span class=\"sy1\">}</span><br/>                anyCorner <span class=\"sy2\">=</span> anyCorner <span class=\"sy3\">||</span> corner<br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> anyCorner <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span> <span class=\"co1\">// uncertain</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> s <span class=\"sy1\">{</span><br/>                <span class=\"kw1\">if</span> r<span class=\"sy3\">.</span>ContainsPC<span class=\"sy1\">(</span>c<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>                        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span> <span class=\"co1\">// uncertain</span><br/>                <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy1\">,</span> <span class=\"kw2\">true</span> <span class=\"co1\">// outside</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        flag<span class=\"sy3\">.</span>IntVar<span class=\"sy1\">(</span>&amp;nWorkers<span class=\"sy1\">,</span> <span class=\"st0\">\"workers\"</span><span class=\"sy1\">,</span> nWorkers<span class=\"sy1\">,</span> <span class=\"st0\">\"how many worker go routines to use\"</span><span class=\"sy1\">)</span><br/>        maxproc <span class=\"sy2\">:=</span> flag<span class=\"sy3\">.</span><span class=\"me1\">Int</span><span class=\"sy1\">(</span><span class=\"st0\">\"cpu\"</span><span class=\"sy1\">,</span> runtime<span class=\"sy3\">.</span><span class=\"me1\">NumCPU</span><span class=\"sy1\">(),</span> <span class=\"st0\">\"GOMAXPROCS setting\"</span><span class=\"sy1\">)</span><br/>        flag<span class=\"sy3\">.</span>Parse<span class=\"sy1\">()</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"sy3\">*</span>maxproc &gt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>                runtime<span class=\"sy3\">.</span>GOMAXPROCS<span class=\"sy1\">(</span><span class=\"sy3\">*</span>maxproc<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>                <span class=\"sy3\">*</span>maxproc <span class=\"sy2\">=</span> runtime<span class=\"sy3\">.</span>GOMAXPROCS<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>\u00a0<br/>        circles <span class=\"sy2\">:=</span> CircleSet<span class=\"sy1\">{</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">6417233788</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">6121789534</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span>0848270516<span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">4944608174</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">2077959613</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">1039549836</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">6110294452</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">6907087527</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">9089162485</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">3844862411</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2923344616</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2375743054</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2495892950</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">3832854473</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span>0845181219<span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">7813504266</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">6178237031</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">8162655711</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">1985249206</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">8343333301</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span>0538864941<span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">7011985145</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">1263820964</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">4776976918</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">4319462812</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">4104420482</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">7886291537</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2178372997</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">9499557344</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span>0357871187<span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">6294854565</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">3078893852</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">7653357688</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">7952608455</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">6281269104</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2727652452</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">4168575317</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span>0683357171<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">1016025378</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">4637371396</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">9463877418</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">1846214562</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">5263668798</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">7315156631</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">4428514068</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">2197352481</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">9144146579</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">0727263474</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">1389358881</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">1092805780</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">7350208828</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">5293954595</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span>0030278255<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">2472867347</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">5258728625</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">3782633069</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">3495508831</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">1403562064</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2437382535</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">3804956588</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">8055826339</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span>0482092025<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">3327165165</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">6311979224</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">7184578971</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">2491045282</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">4685857879</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">8347049536</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">3670667538</span><span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">6855727502</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">6465021616</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span>0593087096<span class=\"sy1\">),</span><br/>                NewCircle<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy3\">.</span>0152957411<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span>0638919221<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">9771215985</span><span class=\"sy1\">),</span><br/>        <span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Starting with\"</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>circles<span class=\"sy1\">),</span> <span class=\"st0\">\"circles.\"</span><span class=\"sy1\">)</span><br/>        circles<span class=\"sy3\">.</span><span class=\"me1\">RemoveContainedC</span><span class=\"sy1\">()</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Removing redundant ones leaves\"</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>circles<span class=\"sy1\">),</span> <span class=\"st0\">\"circles.\"</span><span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Using\"</span><span class=\"sy1\">,</span> nWorkers<span class=\"sy1\">,</span> <span class=\"st0\">\"workers with maxprocs =\"</span><span class=\"sy1\">,</span> <span class=\"sy3\">*</span>maxproc<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">const</span> \u03b5 <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0001</span><br/>        min<span class=\"sy1\">,</span> max <span class=\"sy2\">:=</span> circles<span class=\"sy3\">.</span>UnionArea<span class=\"sy1\">(</span>\u03b5<span class=\"sy1\">)</span><br/>        avg <span class=\"sy2\">:=</span> <span class=\"sy1\">(</span>min <span class=\"sy3\">+</span> max<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>        rng <span class=\"sy2\">:=</span> max <span class=\"sy3\">-</span> min<br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Area =\u00a0%v\u00b1%v<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> avg<span class=\"sy1\">,</span> rng<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"Area \u2248\u00a0%.*f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> avg<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 53, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">data</span> Circle <span class=\"sy0\">=</span> Circle <span class=\"br0\">{</span> cx <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"sy0\">,</span> cy <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"sy0\">,</span> cr <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"br0\">}</span><br/>\u00a0<br/>isInside <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> Circle <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/>isInside x y c <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> cx c<span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> cy c<span class=\"br0\">)</span> <span class=\"sy0\">^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>cr c <span class=\"sy0\">^</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>isInsideAny <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span>Circle<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><br/>isInsideAny x y <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:any\"><span class=\"kw3\">any</span></a> <span class=\"br0\">(</span>isInside x y<span class=\"br0\">)</span><br/>\u00a0<br/>approximatedArea <span class=\"sy0\">::</span> <span class=\"br0\">[</span>Circle<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>approximatedArea cs box<span class=\"sy0\">_</span>side <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> count<span class=\"br0\">)</span> <span class=\"sy0\">*</span> dx <span class=\"sy0\">*</span> dy<br/>  <span class=\"kw1\">where</span><br/>    <span class=\"co1\">-- compute the bounding box of the circles</span><br/>    x<span class=\"sy0\">_</span>min <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:minimum\"><span class=\"kw3\">minimum</span></a> <span class=\"br0\">[</span>cx c <span class=\"sy0\">-</span> cr c <span class=\"sy0\">|</span> c <span class=\"sy0\">&lt;-</span> circles<span class=\"br0\">]</span><br/>    x<span class=\"sy0\">_</span>max <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:maximum\"><span class=\"kw3\">maximum</span></a> <span class=\"br0\">[</span>cx c <span class=\"sy0\">+</span> cr c <span class=\"sy0\">|</span> c <span class=\"sy0\">&lt;-</span> circles<span class=\"br0\">]</span><br/>    y<span class=\"sy0\">_</span>min <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:minimum\"><span class=\"kw3\">minimum</span></a> <span class=\"br0\">[</span>cy c <span class=\"sy0\">-</span> cr c <span class=\"sy0\">|</span> c <span class=\"sy0\">&lt;-</span> circles<span class=\"br0\">]</span><br/>    y<span class=\"sy0\">_</span>max <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:maximum\"><span class=\"kw3\">maximum</span></a> <span class=\"br0\">[</span>cy c <span class=\"sy0\">+</span> cr c <span class=\"sy0\">|</span> c <span class=\"sy0\">&lt;-</span> circles<span class=\"br0\">]</span><br/>    dx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x<span class=\"sy0\">_</span>max <span class=\"sy0\">-</span> x<span class=\"sy0\">_</span>min<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> box<span class=\"sy0\">_</span>side<span class=\"br0\">)</span><br/>    dy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y<span class=\"sy0\">_</span>max <span class=\"sy0\">-</span> y<span class=\"sy0\">_</span>min<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> box<span class=\"sy0\">_</span>side<span class=\"br0\">)</span><br/>    count <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">|</span> r <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> box<span class=\"sy0\">_</span>side <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                        c <span class=\"sy0\">&lt;-</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> box<span class=\"sy0\">_</span>side <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                        isInsideAny <span class=\"br0\">(</span>posx c<span class=\"br0\">)</span> <span class=\"br0\">(</span>posy r<span class=\"br0\">)</span> circles<span class=\"br0\">]</span><br/>    posy r <span class=\"sy0\">=</span> y<span class=\"sy0\">_</span>min <span class=\"sy0\">+</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> r<span class=\"br0\">)</span> <span class=\"sy0\">*</span> dy<br/>    posx c <span class=\"sy0\">=</span> x<span class=\"sy0\">_</span>min <span class=\"sy0\">+</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> c<span class=\"br0\">)</span> <span class=\"sy0\">*</span> dx<br/>\u00a0<br/>circles <span class=\"sy0\">::</span> <span class=\"br0\">[</span>Circle<span class=\"br0\">]</span><br/>circles <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.6417233788</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.6121789534</span><span class=\"br0\">)</span> <span class=\"nu0\">0.0848270516</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1.4944608174</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.2077959613</span><span class=\"br0\">)</span> <span class=\"nu0\">1.1039549836</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">0.6110294452</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6907087527</span><span class=\"br0\">)</span> <span class=\"nu0\">0.9089162485</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">0.3844862411</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.2923344616</span><span class=\"br0\">)</span> <span class=\"nu0\">0.2375743054</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.2495892950</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.3832854473</span><span class=\"br0\">)</span> <span class=\"nu0\">1.0845181219</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.7813504266</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.6178237031</span><span class=\"br0\">)</span> <span class=\"nu0\">0.8162655711</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1985249206</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.8343333301</span><span class=\"br0\">)</span> <span class=\"nu0\">0.0538864941</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1.7011985145</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1263820964</span><span class=\"br0\">)</span> <span class=\"nu0\">0.4776976918</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.4319462812</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.4104420482</span><span class=\"br0\">)</span> <span class=\"nu0\">0.7886291537</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">0.2178372997</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.9499557344</span><span class=\"br0\">)</span> <span class=\"nu0\">0.0357871187</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6294854565</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1.3078893852</span><span class=\"br0\">)</span> <span class=\"nu0\">0.7653357688</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.7952608455</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.6281269104</span><span class=\"br0\">)</span> <span class=\"nu0\">0.2727652452</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.4168575317</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.0683357171</span><span class=\"br0\">)</span> <span class=\"nu0\">1.1016025378</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.4637371396</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.9463877418</span><span class=\"br0\">)</span> <span class=\"nu0\">1.1846214562</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.5263668798</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.7315156631</span><span class=\"br0\">)</span> <span class=\"nu0\">1.4428514068</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1.2197352481</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.9144146579</span><span class=\"br0\">)</span> <span class=\"nu0\">1.0727263474</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1389358881</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.1092805780</span><span class=\"br0\">)</span> <span class=\"nu0\">0.7350208828</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.5293954595</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.0030278255</span><span class=\"br0\">)</span> <span class=\"nu0\">1.2472867347</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.5258728625</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.3782633069</span><span class=\"br0\">)</span> <span class=\"nu0\">1.3495508831</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1403562064</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.2437382535</span><span class=\"br0\">)</span> <span class=\"nu0\">1.3804956588</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">0.8055826339</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.0482092025</span><span class=\"br0\">)</span> <span class=\"nu0\">0.3327165165</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6311979224</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.7184578971</span><span class=\"br0\">)</span> <span class=\"nu0\">0.2491045282</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">1.4685857879</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.8347049536</span><span class=\"br0\">)</span> <span class=\"nu0\">1.3670667538</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6855727502</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">1.6465021616</span><span class=\"br0\">)</span> <span class=\"nu0\">1.0593087096</span><span class=\"sy0\">,</span><br/>           Circle <span class=\"br0\">(</span> <span class=\"nu0\">0.0152957411</span><span class=\"br0\">)</span> <span class=\"br0\">(</span> <span class=\"nu0\">0.0638919221</span><span class=\"br0\">)</span> <span class=\"nu0\">0.9771215985</span><span class=\"br0\">]</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"Approximated area: \"</span> <span class=\"sy0\">++</span><br/>                  <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"sy0\">$</span> approximatedArea circles <span class=\"nu0\">5000</span><span class=\"br0\">)</span></pre>"}, {"lang": "J", "loc": 75, "block": "<pre class=\"j highlighted_source\"><span class=\"co1\">NB. check points on a regular grid within the bounding box</span><br/>\u00a0<br/>\u00a0<br/>N=: <span class=\"nu0\">400</span>  <span class=\"co1\">NB. grids in each dimension.  Controls accuracy.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"st_h\">'X Y R'</span>=: |: XYR=: <span class=\"sy0\">(</span><span class=\"nu0\">_</span>&amp;\".;.<span class=\"nu0\">_2</span>~ LF&amp;=<span class=\"sy0\">)</span><span class=\"nu0\">0</span>\u00a0:<span class=\"nu0\">0</span><br/> <span class=\"nu0\">1.6417233788</span>  <span class=\"nu0\">1.6121789534</span> <span class=\"nu0\">0.0848270516</span><br/>-<span class=\"nu0\">1.4944608174</span>  <span class=\"nu0\">1.2077959613</span> <span class=\"nu0\">1.1039549836</span><br/> <span class=\"nu0\">0.6110294452</span> -<span class=\"nu0\">0.6907087527</span> <span class=\"nu0\">0.9089162485</span><br/> <span class=\"nu0\">0.3844862411</span>  <span class=\"nu0\">0.2923344616</span> <span class=\"nu0\">0.2375743054</span><br/>-<span class=\"nu0\">0.2495892950</span> -<span class=\"nu0\">0.3832854473</span> <span class=\"nu0\">1.0845181219</span><br/> <span class=\"nu0\">1.7813504266</span>  <span class=\"nu0\">1.6178237031</span> <span class=\"nu0\">0.8162655711</span><br/>-<span class=\"nu0\">0.1985249206</span> -<span class=\"nu0\">0.8343333301</span> <span class=\"nu0\">0.0538864941</span><br/>-<span class=\"nu0\">1.7011985145</span> -<span class=\"nu0\">0.1263820964</span> <span class=\"nu0\">0.4776976918</span><br/>-<span class=\"nu0\">0.4319462812</span>  <span class=\"nu0\">1.4104420482</span> <span class=\"nu0\">0.7886291537</span><br/> <span class=\"nu0\">0.2178372997</span> -<span class=\"nu0\">0.9499557344</span> <span class=\"nu0\">0.0357871187</span><br/>-<span class=\"nu0\">0.6294854565</span> -<span class=\"nu0\">1.3078893852</span> <span class=\"nu0\">0.7653357688</span><br/> <span class=\"nu0\">1.7952608455</span>  <span class=\"nu0\">0.6281269104</span> <span class=\"nu0\">0.2727652452</span><br/> <span class=\"nu0\">1.4168575317</span>  <span class=\"nu0\">1.0683357171</span> <span class=\"nu0\">1.1016025378</span><br/> <span class=\"nu0\">1.4637371396</span>  <span class=\"nu0\">0.9463877418</span> <span class=\"nu0\">1.1846214562</span><br/>-<span class=\"nu0\">0.5263668798</span>  <span class=\"nu0\">1.7315156631</span> <span class=\"nu0\">1.4428514068</span><br/>-<span class=\"nu0\">1.2197352481</span>  <span class=\"nu0\">0.9144146579</span> <span class=\"nu0\">1.0727263474</span><br/>-<span class=\"nu0\">0.1389358881</span>  <span class=\"nu0\">0.1092805780</span> <span class=\"nu0\">0.7350208828</span><br/> <span class=\"nu0\">1.5293954595</span>  <span class=\"nu0\">0.0030278255</span> <span class=\"nu0\">1.2472867347</span><br/>-<span class=\"nu0\">0.5258728625</span>  <span class=\"nu0\">1.3782633069</span> <span class=\"nu0\">1.3495508831</span><br/>-<span class=\"nu0\">0.1403562064</span>  <span class=\"nu0\">0.2437382535</span> <span class=\"nu0\">1.3804956588</span><br/> <span class=\"nu0\">0.8055826339</span> -<span class=\"nu0\">0.0482092025</span> <span class=\"nu0\">0.3327165165</span><br/>-<span class=\"nu0\">0.6311979224</span>  <span class=\"nu0\">0.7184578971</span> <span class=\"nu0\">0.2491045282</span><br/> <span class=\"nu0\">1.4685857879</span> -<span class=\"nu0\">0.8347049536</span> <span class=\"nu0\">1.3670667538</span><br/>-<span class=\"nu0\">0.6855727502</span>  <span class=\"nu0\">1.6465021616</span> <span class=\"nu0\">1.0593087096</span><br/> <span class=\"nu0\">0.0152957411</span>  <span class=\"nu0\">0.0638919221</span> <span class=\"nu0\">0.9771215985</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>bbox=: <span class=\"sy0\">(</span>&lt;./@:- , &gt;./@:+<span class=\"sy0\">)</span>&amp;R<br/>BBOXX=: bbox X<br/>BBOXY=: bbox Y<br/>\u00a0<br/>grid=: <span class=\"nu0\">3</span>\u00a0: <span class=\"nu0\">0</span><br/><span class=\"st_h\">'MN MX N'</span>=. <span class=\"kw2\">y</span><br/>D=. MX-MN<br/>EDGE=. D%N<br/><span class=\"sy0\">(</span>MN<span class=\"sy0\">(</span>+ -:<span class=\"sy0\">)</span>EDGE<span class=\"sy0\">)</span>+<span class=\"sy0\">(</span>D-EDGE<span class=\"sy0\">)</span>*<span class=\"sy0\">(</span>i.\u00a0% &lt;:<span class=\"sy0\">)</span>N<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>assert <span class=\"nu0\">2.2</span> <span class=\"nu0\">2.6</span> <span class=\"nu0\">3</span> <span class=\"nu0\">3.4</span> <span class=\"nu0\">3.8</span> -: grid <span class=\"nu0\">2</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span><br/>\u00a0<br/>GRIDDED_SAMPLES=: BBOXX {@:;&amp;<span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"97f0e5fef3d7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:<span class=\"sy0\">(</span>,&amp;N<span class=\"sy0\">))</span> BBOXY<br/>\u00a0<br/>Note<span class=\"co2\"> '4 4{.GRIDDED_SAMPLES'  NB. example<br/>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510<br/>\u2502_2.59706 _2.20043\u2502_2.59706 _2.19774\u2502_2.59706 _2.19505\u2502_2.59706 _2.19236\u2502<br/>\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524<br/>\u2502_2.59434 _2.20043\u2502_2.59434 _2.19774\u2502_2.59434 _2.19505\u2502_2.59434 _2.19236\u2502<br/>\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524<br/>\u2502_2.59162 _2.20043\u2502_2.59162 _2.19774\u2502_2.59162 _2.19505\u2502_2.59162 _2.19236\u2502<br/>\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524<br/>\u2502_2.58891 _2.20043\u2502_2.58891 _2.19774\u2502_2.58891 _2.19505\u2502_2.58891 _2.19236\u2502<br/>\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518<br/>)</span><br/>XY=: &gt;,GRIDDED_SAMPLES  <span class=\"co1\">NB. convert to an usual array of floats.</span><br/>\u00a0<br/>mp=: $:~\u00a0:<span class=\"sy0\">(</span>+/ .*<span class=\"sy0\">)</span>  <span class=\"co1\">NB. matrix product</span><br/>assert <span class=\"sy0\">(</span>*: <span class=\"nu0\">5</span> <span class=\"nu0\">13</span><span class=\"sy0\">)</span> -: <span class=\"sy0\">(</span>mp\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span>,:<span class=\"nu0\">5</span> <span class=\"nu0\">12</span><br/>\u00a0<br/>in=: *:@:{:@:] &gt;: [: mp <span class=\"sy0\">(</span>- }:<span class=\"sy0\">)</span>    <span class=\"co1\">NB. logical function</span><br/>assert <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> in <span class=\"nu0\">1</span> <span class=\"nu0\">0</span> <span class=\"nu0\">2</span>         <span class=\"co1\">NB. X Y  in  X Y R</span><br/>assert <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"e9c4c7a9\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:in<span class=\"sy0\">)</span> <span class=\"nu0\">44</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span><br/>\u00a0<br/>CONTAINED=: XY in\"<span class=\"nu0\">1</span>/XYR <span class=\"co1\">NB. logical table of circles containing each grid</span><br/>FRACTION=: CONTAINED <span class=\"sy0\">(</span>+/@:<span class=\"sy0\">(</span>+./\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span>@:[\u00a0% *:@:]<span class=\"sy0\">)</span> N<br/>AREA=: BBOXX*&amp;<span class=\"sy0\">(</span>-/<span class=\"sy0\">)</span>BBOXY  <span class=\"co1\">NB. area of the bounding box.</span><br/>FRACTION*AREA<br/>\u00a0<br/><span class=\"co1\">NB. result is 21.5645</span></pre>"}, {"lang": "Java", "loc": 126, "block": "<pre class=\"java highlighted_source\">\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> CirclesTotalArea <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/*<br/>     * Rectangles are given as 4-element arrays [tx, ty, w, h].<br/>     * Circles are given as 3-element arrays [cx, cy, r].<br/>     */</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> distSq<span class=\"br0\">(</span><span class=\"kw4\">double</span> x1, <span class=\"kw4\">double</span> y1, <span class=\"kw4\">double</span> x2, <span class=\"kw4\">double</span> y2<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>x2 <span class=\"sy0\">-</span> x1<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>x2 <span class=\"sy0\">-</span> x1<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>y2 <span class=\"sy0\">-</span> y1<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y2 <span class=\"sy0\">-</span> y1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> rectangleFullyInsideCircle<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> rect, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> circ<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> r2 <span class=\"sy0\">=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Every corner point of rectangle must be inside the circle.</span><br/>        <span class=\"kw1\">return</span> distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> r2 <span class=\"sy0\">&amp;&amp;</span><br/>          distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> r2 <span class=\"sy0\">&amp;&amp;</span><br/>          distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> r2 <span class=\"sy0\">&amp;&amp;</span><br/>          distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> r2<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> rectangleSurelyOutsideCircle<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> rect, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> circ<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"co1\">// Circle center point inside rectangle?</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span><br/>          rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Otherwise, check that each corner is at least (r + Max(w, h)) away from circle center.</span><br/>        <span class=\"kw4\">double</span> r2 <span class=\"sy0\">=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">max</span><span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        r2 <span class=\"sy0\">=</span> r2 <span class=\"sy0\">*</span> r2<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> r2 <span class=\"sy0\">&amp;&amp;</span><br/>          distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> r2 <span class=\"sy0\">&amp;&amp;</span><br/>          distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> r2 <span class=\"sy0\">&amp;&amp;</span><br/>          distSq<span class=\"br0\">(</span>rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> r2<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span><span class=\"br0\">[</span><span class=\"br0\">]</span> surelyOutside<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> totalArea<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> rect, <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> circs, <span class=\"kw4\">int</span> d<span class=\"br0\">)</span> <span class=\"br0\">{</span>    <br/>        <span class=\"co1\">// Check if we can get a quick certain answer.</span><br/>        <span class=\"kw4\">int</span> surelyOutsideCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> circs.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>rectangleFullyInsideCircle<span class=\"br0\">(</span>rect, circs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>rectangleSurelyOutsideCircle<span class=\"br0\">(</span>rect, circs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                surelyOutside<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>                surelyOutsideCount<span class=\"sy0\">++;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span> surelyOutside<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Is this rectangle surely outside all circles?</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>surelyOutsideCount <span class=\"sy0\">==</span> circs.<span class=\"me1\">length</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Are we deep enough in the recursion?</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>d <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>            <span class=\"kw1\">return</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span>  <span class=\"co1\">// Best guess for overlapping portion</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Throw out all circles that are surely outside this rectangle.</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>surelyOutsideCount <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> newCircs <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>circs.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> surelyOutsideCount<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> loc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> circs.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>surelyOutside<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> newCircs<span class=\"br0\">[</span>loc<span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> circs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            circs <span class=\"sy0\">=</span> newCircs<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"co1\">// Subdivide this rectangle recursively and add up the recursively computed areas.</span><br/>        <span class=\"kw4\">double</span> w <span class=\"sy0\">=</span> rect<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"co1\">// New width</span><br/>        <span class=\"kw4\">double</span> h <span class=\"sy0\">=</span> rect<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"co1\">// New height</span><br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> pieces <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">{</span> rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, w, h <span class=\"br0\">}</span>, <span class=\"co1\">// NW</span><br/>            <span class=\"br0\">{</span> rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> w, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, w, h <span class=\"br0\">}</span>, <span class=\"co1\">// NE</span><br/>            <span class=\"br0\">{</span> rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> h, w, h <span class=\"br0\">}</span>, <span class=\"co1\">// SW</span><br/>            <span class=\"br0\">{</span> rect<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> w, rect<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> h, w, h <span class=\"br0\">}</span> <span class=\"co1\">// SE</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> total <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> piece<span class=\"sy0\">:</span> pieces<span class=\"br0\">)</span> <span class=\"br0\">{</span> total <span class=\"sy0\">+=</span> totalArea<span class=\"br0\">(</span>piece, circs, d <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> total<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> totalArea<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> circs, <span class=\"kw4\">int</span> d<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> maxx <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">NEGATIVE_INFINITY</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> minx <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">POSITIVE_INFINITY</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> maxy <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">NEGATIVE_INFINITY</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> miny <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">POSITIVE_INFINITY</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">// Find the extremes of x and y for this set of circles.</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> circ<span class=\"sy0\">:</span> circs<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> maxx<span class=\"br0\">)</span> <span class=\"br0\">{</span> maxx <span class=\"sy0\">=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> minx<span class=\"br0\">)</span> <span class=\"br0\">{</span> minx <span class=\"sy0\">=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> maxy<span class=\"br0\">)</span> <span class=\"br0\">{</span> maxy <span class=\"sy0\">=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> miny<span class=\"br0\">)</span> <span class=\"br0\">{</span> miny <span class=\"sy0\">=</span> circ<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> circ<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> rect <span class=\"sy0\">=</span> <span class=\"br0\">{</span> minx, maxy, maxx <span class=\"sy0\">-</span> minx, maxy <span class=\"sy0\">-</span> miny <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        surelyOutside <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">boolean</span><span class=\"br0\">[</span>circs.<span class=\"me1\">length</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> totalArea<span class=\"br0\">(</span>rect, circs, d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> circs <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">{</span> <span class=\"nu0\">1.6417233788</span>, <span class=\"nu0\">1.6121789534</span>, <span class=\"nu0\">0.0848270516</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1.4944608174</span>, <span class=\"nu0\">1.2077959613</span>, <span class=\"nu0\">1.1039549836</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span> <span class=\"nu0\">0.6110294452</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.6907087527</span>, <span class=\"nu0\">0.9089162485</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span> <span class=\"nu0\">0.3844862411</span>, <span class=\"nu0\">0.2923344616</span>, <span class=\"nu0\">0.2375743054</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.2495892950</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.3832854473</span>, <span class=\"nu0\">1.0845181219</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">1.7813504266</span>, <span class=\"nu0\">1.6178237031</span>, <span class=\"nu0\">0.8162655711</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1985249206</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.8343333301</span>, <span class=\"nu0\">0.0538864941</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1.7011985145</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.1263820964</span>, <span class=\"nu0\">0.4776976918</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.4319462812</span>, <span class=\"nu0\">1.4104420482</span>, <span class=\"nu0\">0.7886291537</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">0.2178372997</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.9499557344</span>, <span class=\"nu0\">0.0357871187</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6294854565</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1.3078893852</span>, <span class=\"nu0\">0.7653357688</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">1.7952608455</span>, <span class=\"nu0\">0.6281269104</span>, <span class=\"nu0\">0.2727652452</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">1.4168575317</span>, <span class=\"nu0\">1.0683357171</span>, <span class=\"nu0\">1.1016025378</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">1.4637371396</span>, <span class=\"nu0\">0.9463877418</span>, <span class=\"nu0\">1.1846214562</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.5263668798</span>, <span class=\"nu0\">1.7315156631</span>, <span class=\"nu0\">1.4428514068</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1.2197352481</span>, <span class=\"nu0\">0.9144146579</span>, <span class=\"nu0\">1.0727263474</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1389358881</span>, <span class=\"nu0\">0.1092805780</span>, <span class=\"nu0\">0.7350208828</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">1.5293954595</span>, <span class=\"nu0\">0.0030278255</span>, <span class=\"nu0\">1.2472867347</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.5258728625</span>, <span class=\"nu0\">1.3782633069</span>, <span class=\"nu0\">1.3495508831</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1403562064</span>, <span class=\"nu0\">0.2437382535</span>, <span class=\"nu0\">1.3804956588</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">0.8055826339</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.0482092025</span>, <span class=\"nu0\">0.3327165165</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6311979224</span>, <span class=\"nu0\">0.7184578971</span>, <span class=\"nu0\">0.2491045282</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">1.4685857879</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.8347049536</span>, <span class=\"nu0\">1.3670667538</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6855727502</span>, <span class=\"nu0\">1.6465021616</span>, <span class=\"nu0\">1.0593087096</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"nu0\">0.0152957411</span>, <span class=\"nu0\">0.0638919221</span>, <span class=\"nu0\">0.9771215985</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> ans <span class=\"sy0\">=</span> totalArea<span class=\"br0\">(</span>circs, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Approx. area is \"</span> <span class=\"sy0\">+</span> ans<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Error is \"</span> <span class=\"sy0\">+</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span><span class=\"nu0\">21.56503660</span> <span class=\"sy0\">-</span> ans<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 40, "block": "<pre class=\"text highlighted_source\"># Total circles area: https://rosettacode.org/wiki/Total_circles_area<br/># v0.6<br/>\u00a0<br/>xc = [1.6417233788, -1.4944608174, 0.6110294452, 0.3844862411, -0.2495892950, 1.7813504266,<br/>     -0.1985249206, -1.7011985145, -0.4319462812, 0.2178372997, -0.6294854565, 1.7952608455,<br/>      1.4168575317, 1.4637371396, -0.5263668798, -1.2197352481, -0.1389358881, 1.5293954595,<br/>     -0.5258728625, -0.1403562064, 0.8055826339, -0.6311979224, 1.4685857879, -0.6855727502,<br/>      0.0152957411]<br/>yc = [1.6121789534, 1.2077959613, -0.6907087527, 0.2923344616, -0.3832854473, 1.6178237031,<br/>     -0.8343333301, -0.1263820964, 1.4104420482, -0.9499557344, -1.3078893852, 0.6281269104,<br/>      1.0683357171, 0.9463877418, 1.7315156631, 0.9144146579, 0.1092805780, 0.0030278255,<br/>      1.3782633069, 0.2437382535, -0.0482092025, 0.7184578971, -0.8347049536, 1.6465021616,<br/>      0.0638919221]<br/>r  = [0.0848270516, 1.1039549836, 0.9089162485, 0.2375743054, 1.0845181219, 0.8162655711,<br/>      0.0538864941, 0.4776976918, 0.7886291537, 0.0357871187, 0.7653357688, 0.2727652452,<br/>      1.1016025378, 1.1846214562, 1.4428514068, 1.0727263474, 0.7350208828, 1.2472867347,<br/>      1.3495508831, 1.3804956588, 0.3327165165, 0.2491045282, 1.3670667538, 1.0593087096,<br/>      0.9771215985]<br/>\u00a0<br/># Size of my grid -- higher values =&gt; higher accuracy.<br/>function main(xc::Vector{&lt;:Real}, yc::Vector{&lt;:Real}, r::Vector{&lt;:Real}, ngrid::Integer=10000)<br/>    r2 = r .* r<br/>    ncircles = length(xc)<br/>\u00a0<br/>    # Compute the bounding box of the circles.<br/>    xmin = minimum(xc .- r)<br/>    xmax = maximum(xc .+ r)<br/>    ymin = minimum(yc .- r)<br/>    ymax = maximum(yc .+ r)<br/>    # Keep a counter.<br/>    inside = 0<br/>    # For every point in my grid.<br/>    for x in linspace(xmin, xmax, ngrid), y = linspace(ymin, ymax, ngrid)<br/>        inside += any(r2 .&gt; (x - xc) .^ 2 + (y - yc) .^ 2)<br/>    end<br/>    boxarea = (xmax - xmin) * (ymax - ymin)<br/>    return boxarea * inside / ngrid ^ 2<br/>end<br/>\u00a0<br/>println(@time main(xc, yc, r, 1000))</pre>"}, {"lang": "Kotlin", "loc": 54, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Circle<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> circles <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.6417233788</span>,  <span class=\"nu0\">1.6121789534</span>, <span class=\"nu0\">0.0848270516</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">1.4944608174</span>,  <span class=\"nu0\">1.2077959613</span>, <span class=\"nu0\">1.1039549836</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.6110294452</span>, -<span class=\"nu0\">0.6907087527</span>, <span class=\"nu0\">0.9089162485</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.3844862411</span>,  <span class=\"nu0\">0.2923344616</span>, <span class=\"nu0\">0.2375743054</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.2495892950</span>, -<span class=\"nu0\">0.3832854473</span>, <span class=\"nu0\">1.0845181219</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.7813504266</span>,  <span class=\"nu0\">1.6178237031</span>, <span class=\"nu0\">0.8162655711</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.1985249206</span>, -<span class=\"nu0\">0.8343333301</span>, <span class=\"nu0\">0.0538864941</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">1.7011985145</span>, -<span class=\"nu0\">0.1263820964</span>, <span class=\"nu0\">0.4776976918</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.4319462812</span>,  <span class=\"nu0\">1.4104420482</span>, <span class=\"nu0\">0.7886291537</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.2178372997</span>, -<span class=\"nu0\">0.9499557344</span>, <span class=\"nu0\">0.0357871187</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.6294854565</span>, -<span class=\"nu0\">1.3078893852</span>, <span class=\"nu0\">0.7653357688</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.7952608455</span>,  <span class=\"nu0\">0.6281269104</span>, <span class=\"nu0\">0.2727652452</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.4168575317</span>,  <span class=\"nu0\">1.0683357171</span>, <span class=\"nu0\">1.1016025378</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.4637371396</span>,  <span class=\"nu0\">0.9463877418</span>, <span class=\"nu0\">1.1846214562</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.5263668798</span>,  <span class=\"nu0\">1.7315156631</span>, <span class=\"nu0\">1.4428514068</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">1.2197352481</span>,  <span class=\"nu0\">0.9144146579</span>, <span class=\"nu0\">1.0727263474</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.1389358881</span>,  <span class=\"nu0\">0.1092805780</span>, <span class=\"nu0\">0.7350208828</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.5293954595</span>,  <span class=\"nu0\">0.0030278255</span>, <span class=\"nu0\">1.2472867347</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.5258728625</span>,  <span class=\"nu0\">1.3782633069</span>, <span class=\"nu0\">1.3495508831</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.1403562064</span>,  <span class=\"nu0\">0.2437382535</span>, <span class=\"nu0\">1.3804956588</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.8055826339</span>, -<span class=\"nu0\">0.0482092025</span>, <span class=\"nu0\">0.3327165165</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.6311979224</span>,  <span class=\"nu0\">0.7184578971</span>, <span class=\"nu0\">0.2491045282</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.4685857879</span>, -<span class=\"nu0\">0.8347049536</span>, <span class=\"nu0\">1.3670667538</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.6855727502</span>,  <span class=\"nu0\">1.6465021616</span>, <span class=\"nu0\">1.0593087096</span><span class=\"br0\">)</span>,<br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.0152957411</span>,  <span class=\"nu0\">0.0638919221</span>, <span class=\"nu0\">0.9771215985</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/>fun Double.<span class=\"me1\">sq</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a> <span class=\"sy0\">*</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xMin <span class=\"sy0\">=</span> circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span> it.<span class=\"me1\">x</span> - it.<span class=\"me1\">r</span> <span class=\"br0\">}</span>.<span class=\"me1\">min</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!!</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xMax <span class=\"sy0\">=</span> circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span> it.<span class=\"me1\">x</span> + it.<span class=\"me1\">r</span> <span class=\"br0\">}</span>.<span class=\"me1\">max</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!!</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yMin <span class=\"sy0\">=</span> circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span> it.<span class=\"me1\">y</span> - it.<span class=\"me1\">r</span> <span class=\"br0\">}</span>.<span class=\"me1\">min</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!!</span> <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yMax <span class=\"sy0\">=</span> circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span> it.<span class=\"me1\">y</span> + it.<span class=\"me1\">r</span> <span class=\"br0\">}</span>.<span class=\"me1\">max</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">!!</span> <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> boxSide <span class=\"sy0\">=</span> <span class=\"nu0\">5000</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>xMax - xMin<span class=\"br0\">)</span> / boxSide<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>yMax - yMin<span class=\"br0\">)</span> / boxSide<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>r in <span class=\"nu0\">0</span> until boxSide<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y <span class=\"sy0\">=</span> yMin + r <span class=\"sy0\">*</span> dy<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>c in <span class=\"nu0\">0</span> until boxSide<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x <span class=\"sy0\">=</span> xMin + c <span class=\"sy0\">*</span> dx<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> b <span class=\"sy0\">=</span> circles.<span class=\"me1\">any</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span>x - it.<span class=\"me1\">x</span><span class=\"br0\">)</span>.<span class=\"me1\">sq</span><span class=\"br0\">(</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span>y - it.<span class=\"me1\">y</span><span class=\"br0\">)</span>.<span class=\"me1\">sq</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> it.<span class=\"me1\">r</span>.<span class=\"me1\">sq</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>b<span class=\"br0\">)</span> count++<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Approximate area = ${count * dx * dy}\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Mathematica", "loc": 28, "block": "<pre class=\"text highlighted_source\">data = ImportString[\" 1.6417233788  1.6121789534 0.0848270516<br/>   -1.4944608174  1.2077959613 1.1039549836<br/>    0.6110294452 -0.6907087527 0.9089162485<br/>    0.3844862411  0.2923344616 0.2375743054<br/>   -0.2495892950 -0.3832854473 1.0845181219<br/>    1.7813504266  1.6178237031 0.8162655711<br/>   -0.1985249206 -0.8343333301 0.0538864941<br/>   -1.7011985145 -0.1263820964 0.4776976918<br/>   -0.4319462812  1.4104420482 0.7886291537<br/>    0.2178372997 -0.9499557344 0.0357871187<br/>   -0.6294854565 -1.3078893852 0.7653357688<br/>    1.7952608455  0.6281269104 0.2727652452<br/>    1.4168575317  1.0683357171 1.1016025378<br/>    1.4637371396  0.9463877418 1.1846214562<br/>   -0.5263668798  1.7315156631 1.4428514068<br/>   -1.2197352481  0.9144146579 1.0727263474<br/>   -0.1389358881  0.1092805780 0.7350208828<br/>    1.5293954595  0.0030278255 1.2472867347<br/>   -0.5258728625  1.3782633069 1.3495508831<br/>   -0.1403562064  0.2437382535 1.3804956588<br/>    0.8055826339 -0.0482092025 0.3327165165<br/>   -0.6311979224  0.7184578971 0.2491045282<br/>    1.4685857879 -0.8347049536 1.3670667538<br/>   -0.6855727502  1.6465021616 1.0593087096<br/>    0.0152957411  0.0638919221 0.9771215985\", \"Table\"];<br/>\u00a0<br/>toDisk[{x_, y_, r_}]\u00a0:= Disk[{x, y}, r];<br/>RegionMeasure[RegionUnion[toDisk /@ data]]</pre>"}, {"lang": "MATLAB / Octave", "loc": 45, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> res = circles<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/tic.html\"><span class=\"kw2\">tic</span></a><br/><span class=\"co1\">%</span><br/><span class=\"co1\">% Size of my grid -- higher values =&gt; higher accuracy.</span><br/><span class=\"co1\">%</span><br/>ngrid = <span class=\"nu0\">5000</span>;<br/>\u00a0<br/>xc = <span class=\"br0\">[</span><span class=\"nu0\">1.6417233788</span> -<span class=\"nu0\">1.4944608174</span>  <span class=\"nu0\">0.6110294452</span>  <span class=\"nu0\">0.3844862411</span> -<span class=\"nu0\">0.2495892950</span>  <span class=\"nu0\">1.7813504266</span> -<span class=\"nu0\">0.1985249206</span> -<span class=\"nu0\">1.7011985145</span> -<span class=\"nu0\">0.4319462812</span>  <span class=\"nu0\">0.2178372997</span> -<span class=\"nu0\">0.6294854565</span>  <span class=\"nu0\">1.7952608455</span>  <span class=\"nu0\">1.4168575317</span>  <span class=\"nu0\">1.4637371396</span> -<span class=\"nu0\">0.5263668798</span> -<span class=\"nu0\">1.2197352481</span> -<span class=\"nu0\">0.1389358881</span>  <span class=\"nu0\">1.5293954595</span> -<span class=\"nu0\">0.5258728625</span> -<span class=\"nu0\">0.1403562064</span>  <span class=\"nu0\">0.8055826339</span> -<span class=\"nu0\">0.6311979224</span>  <span class=\"nu0\">1.4685857879</span> -<span class=\"nu0\">0.6855727502</span>  <span class=\"nu0\">0.0152957411</span><span class=\"br0\">]</span>;<br/>yc = <span class=\"br0\">[</span><span class=\"nu0\">1.6121789534</span>  <span class=\"nu0\">1.2077959613</span> -<span class=\"nu0\">0.6907087527</span>  <span class=\"nu0\">0.2923344616</span> -<span class=\"nu0\">0.3832854473</span>  <span class=\"nu0\">1.6178237031</span> -<span class=\"nu0\">0.8343333301</span> -<span class=\"nu0\">0.1263820964</span>  <span class=\"nu0\">1.4104420482</span> -<span class=\"nu0\">0.9499557344</span> -<span class=\"nu0\">1.3078893852</span>  <span class=\"nu0\">0.6281269104</span>  <span class=\"nu0\">1.0683357171</span>  <span class=\"nu0\">0.9463877418</span>  <span class=\"nu0\">1.7315156631</span>  <span class=\"nu0\">0.9144146579</span>  <span class=\"nu0\">0.1092805780</span>  <span class=\"nu0\">0.0030278255</span>  <span class=\"nu0\">1.3782633069</span>  <span class=\"nu0\">0.2437382535</span> -<span class=\"nu0\">0.0482092025</span>  <span class=\"nu0\">0.7184578971</span> -<span class=\"nu0\">0.8347049536</span>  <span class=\"nu0\">1.6465021616</span>  <span class=\"nu0\">0.0638919221</span><span class=\"br0\">]</span>;<br/>r  = <span class=\"br0\">[</span><span class=\"nu0\">0.0848270516</span>  <span class=\"nu0\">1.1039549836</span>  <span class=\"nu0\">0.9089162485</span>  <span class=\"nu0\">0.2375743054</span>  <span class=\"nu0\">1.0845181219</span>  <span class=\"nu0\">0.8162655711</span>  <span class=\"nu0\">0.0538864941</span>  <span class=\"nu0\">0.4776976918</span>  <span class=\"nu0\">0.7886291537</span>  <span class=\"nu0\">0.0357871187</span>  <span class=\"nu0\">0.7653357688</span>  <span class=\"nu0\">0.2727652452</span>  <span class=\"nu0\">1.1016025378</span>  <span class=\"nu0\">1.1846214562</span>  <span class=\"nu0\">1.4428514068</span>  <span class=\"nu0\">1.0727263474</span>  <span class=\"nu0\">0.7350208828</span>  <span class=\"nu0\">1.2472867347</span>  <span class=\"nu0\">1.3495508831</span>  <span class=\"nu0\">1.3804956588</span>  <span class=\"nu0\">0.3327165165</span>  <span class=\"nu0\">0.2491045282</span>  <span class=\"nu0\">1.3670667538</span>  <span class=\"nu0\">1.0593087096</span>  <span class=\"nu0\">0.9771215985</span><span class=\"br0\">]</span>;<br/>r2 = r .* r;<br/>\u00a0<br/>ncircles = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>xc<span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"co1\">%</span><br/><span class=\"co1\">% Compute the bounding box of the circles.</span><br/><span class=\"co1\">%</span><br/>xmin = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/min.html\"><span class=\"kw2\">min</span></a><span class=\"br0\">(</span>xc-r<span class=\"br0\">)</span>;<br/>xmax = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/max.html\"><span class=\"kw2\">max</span></a><span class=\"br0\">(</span>xc+r<span class=\"br0\">)</span>;<br/>ymin = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/min.html\"><span class=\"kw2\">min</span></a><span class=\"br0\">(</span>yc-r<span class=\"br0\">)</span>;<br/>ymax = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/max.html\"><span class=\"kw2\">max</span></a><span class=\"br0\">(</span>yc+r<span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"co1\">%</span><br/><span class=\"co1\">% Keep a counter.</span><br/><span class=\"co1\">%</span><br/>inside = <span class=\"nu0\">0</span>;<br/>\u00a0<br/><span class=\"co1\">%</span><br/><span class=\"co1\">% For every point in my grid.</span><br/><span class=\"co1\">%</span><br/><span class=\"kw1\">for</span> x = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/linspace.html\"><span class=\"kw2\">linspace</span></a><span class=\"br0\">(</span>xmin,xmax,ngrid<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> y = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/linspace.html\"><span class=\"kw2\">linspace</span></a><span class=\"br0\">(</span>ymin,ymax,ngrid<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/any.html\"><span class=\"kw2\">any</span></a><span class=\"br0\">(</span>r2 &gt; <span class=\"br0\">(</span>x - xc<span class=\"br0\">)</span>.^<span class=\"nu0\">2</span> + <span class=\"br0\">(</span>y - yc<span class=\"br0\">)</span>.^<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            inside = inside + <span class=\"nu0\">1</span>;<br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>box_area = <span class=\"br0\">(</span>xmax-xmin<span class=\"br0\">)</span> * <span class=\"br0\">(</span>ymax-ymin<span class=\"br0\">)</span>;<br/>\u00a0<br/>res = box_area * inside / ngrid^<span class=\"nu0\">2</span>;<br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/toc.html\"><span class=\"kw2\">toc</span></a><br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Nim", "loc": 53, "block": "<pre class=\"text highlighted_source\">import future<br/>\u00a0<br/>type Circle = tuple[x, y, r: float]<br/>\u00a0<br/>const circles: seq[Circle] = @[<br/>  ( 1.6417233788,  1.6121789534, 0.0848270516),<br/>  (-1.4944608174,  1.2077959613, 1.1039549836),<br/>  ( 0.6110294452, -0.6907087527, 0.9089162485),<br/>  ( 0.3844862411,  0.2923344616, 0.2375743054),<br/>  (-0.2495892950, -0.3832854473, 1.0845181219),<br/>  ( 1.7813504266,  1.6178237031, 0.8162655711),<br/>  (-0.1985249206, -0.8343333301, 0.0538864941),<br/>  (-1.7011985145, -0.1263820964, 0.4776976918),<br/>  (-0.4319462812,  1.4104420482, 0.7886291537),<br/>  ( 0.2178372997, -0.9499557344, 0.0357871187),<br/>  (-0.6294854565, -1.3078893852, 0.7653357688),<br/>  ( 1.7952608455,  0.6281269104, 0.2727652452),<br/>  ( 1.4168575317,  1.0683357171, 1.1016025378),<br/>  ( 1.4637371396,  0.9463877418, 1.1846214562),<br/>  (-0.5263668798,  1.7315156631, 1.4428514068),<br/>  (-1.2197352481,  0.9144146579, 1.0727263474),<br/>  (-0.1389358881,  0.1092805780, 0.7350208828),<br/>  ( 1.5293954595,  0.0030278255, 1.2472867347),<br/>  (-0.5258728625,  1.3782633069, 1.3495508831),<br/>  (-0.1403562064,  0.2437382535, 1.3804956588),<br/>  ( 0.8055826339, -0.0482092025, 0.3327165165),<br/>  (-0.6311979224,  0.7184578971, 0.2491045282),<br/>  ( 1.4685857879, -0.8347049536, 1.3670667538),<br/>  (-0.6855727502,  1.6465021616, 1.0593087096),<br/>  ( 0.0152957411,  0.0638919221, 0.9771215985)]<br/>\u00a0<br/>let xMin = min circles.map((c: Circle) =&gt; c.x - c.r)<br/>let xMax = max circles.map((c: Circle) =&gt; c.x + c.r)<br/>let yMin = min circles.map((c: Circle) =&gt; c.y - c.r)<br/>let yMax = max circles.map((c: Circle) =&gt; c.y + c.r)<br/>\u00a0<br/>const boxSide = 500<br/>\u00a0<br/>let dx = (xMax - xMin) / boxSide<br/>let dy = (yMax - yMin) / boxSide<br/>\u00a0<br/>var count = 0<br/>\u00a0<br/>for r in 0 .. &lt;boxSide:<br/>  let y = yMin + float(r) * dy<br/>  for c in 0 .. &lt;boxSide:<br/>    let x = xMin + float(c) * dx<br/>    for circle in circles:<br/>      if (x-circle.x)*(x-circle.x) + (y-circle.y)*(y-circle.y) &lt;= circle.r*circle.r:<br/>        inc count<br/>        break<br/>\u00a0<br/>echo \"Approximated area: \", float(count) * dx * dy</pre>"}, {"lang": "Perl 6", "loc": 177, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">class</span> Point <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> Real <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Real <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Int <span class=\"re0\">$!cbits</span><span class=\"sy0\">;</span>\t<span class=\"co1\"># bitmap of circle membership</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> cbits <span class=\"br0\">{</span> <span class=\"re0\">$!cbits</span> <span class=\"sy0\">//=</span> set_cbits<span class=\"br0\">(</span>self<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> gist <span class=\"br0\">{</span> $<span class=\"sy0\">!</span><span class=\"kw1\">x</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">~</span> <span class=\"re0\">$!y</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;</span>to<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>Point <span class=\"re0\">$p1</span><span class=\"sy0\">,</span> Point <span class=\"re0\">$p2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">sqrt</span> <span class=\"br0\">(</span><span class=\"re0\">$p1</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$p2</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$p1</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$p2</span><span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;</span>mid<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>Point <span class=\"re0\">$p1</span><span class=\"sy0\">,</span> Point <span class=\"re0\">$p2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$p1</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$p2</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"br0\">)</span> <span class=\"co2\">/ 2, y =&gt; ($p1.y + $p2.y) /</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Circle <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">center</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Real <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">radius</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">north</span> <span class=\"sy0\">=</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">+</span> <span class=\"re0\">$!radius</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">west</span>  <span class=\"sy0\">=</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$!radius</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">south</span> <span class=\"sy0\">=</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$!radius</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">east</span>  <span class=\"sy0\">=</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$!radius</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> <span class=\"kw2\">method</span> contains<span class=\"br0\">(</span>Circle <span class=\"re0\">$c</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$!center</span> to <span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">center</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$!radius</span> <span class=\"sy0\">-</span> <span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">radius</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> <span class=\"kw2\">method</span> contains<span class=\"br0\">(</span>Point <span class=\"re0\">$p</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$!center</span> to <span class=\"re0\">$p</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$!radius</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> gist <span class=\"br0\">{</span> <span class=\"re0\">$!center</span><span class=\"sy0\">.</span><span class=\"me1\">gist</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">~</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">radius</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">class</span> Rect <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">nw</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"kw1\">ne</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">sw</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> Point <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">se</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> diag <span class=\"br0\">{</span> $<span class=\"sy0\">!</span><span class=\"kw1\">ne</span> to <span class=\"re0\">$!se</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> area <span class=\"br0\">{</span> <span class=\"br0\">(</span>$<span class=\"sy0\">!</span><span class=\"kw1\">ne</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">-</span> <span class=\"re0\">$!nw</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"re0\">$!nw</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$!sw</span><span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> contains<span class=\"br0\">(</span>Point <span class=\"re0\">$p</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"re0\">$!nw</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$p</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">&lt;</span> $<span class=\"sy0\">!</span><span class=\"kw1\">ne</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"kw1\">and</span><br/>\t<span class=\"re0\">$!sw</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$p</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$!nw</span><span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@rawcircles</span> <span class=\"sy0\">=</span> <span class=\"kw3\">sort</span> <span class=\"sy0\">-*.</span><span class=\"me1\">radius</span><span class=\"sy0\">,</span><br/>    <span class=\"kw3\">map</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$radius</span> <span class=\"br0\">{</span> Circle<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"sy0\">:</span>center<span class=\"br0\">(</span>Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$radius</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">&lt;</span><br/>\t <span class=\"nu0\">1.6417233788</span>  <span class=\"nu0\">1.6121789534</span> <span class=\"nu0\">0.0848270516</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">1.4944608174</span>  <span class=\"nu0\">1.2077959613</span> <span class=\"nu0\">1.1039549836</span><br/>\t <span class=\"nu0\">0.6110294452</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.6907087527</span> <span class=\"nu0\">0.9089162485</span><br/>\t <span class=\"nu0\">0.3844862411</span>  <span class=\"nu0\">0.2923344616</span> <span class=\"nu0\">0.2375743054</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.2495892950</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.3832854473</span> <span class=\"nu0\">1.0845181219</span><br/>\t <span class=\"nu0\">1.7813504266</span>  <span class=\"nu0\">1.6178237031</span> <span class=\"nu0\">0.8162655711</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.1985249206</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.8343333301</span> <span class=\"nu0\">0.0538864941</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">1.7011985145</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.1263820964</span> <span class=\"nu0\">0.4776976918</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.4319462812</span>  <span class=\"nu0\">1.4104420482</span> <span class=\"nu0\">0.7886291537</span><br/>\t <span class=\"nu0\">0.2178372997</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.9499557344</span> <span class=\"nu0\">0.0357871187</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.6294854565</span> <span class=\"sy0\">-</span><span class=\"nu0\">1.3078893852</span> <span class=\"nu0\">0.7653357688</span><br/>\t <span class=\"nu0\">1.7952608455</span>  <span class=\"nu0\">0.6281269104</span> <span class=\"nu0\">0.2727652452</span><br/>\t <span class=\"nu0\">1.4168575317</span>  <span class=\"nu0\">1.0683357171</span> <span class=\"nu0\">1.1016025378</span><br/>\t <span class=\"nu0\">1.4637371396</span>  <span class=\"nu0\">0.9463877418</span> <span class=\"nu0\">1.1846214562</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.5263668798</span>  <span class=\"nu0\">1.7315156631</span> <span class=\"nu0\">1.4428514068</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">1.2197352481</span>  <span class=\"nu0\">0.9144146579</span> <span class=\"nu0\">1.0727263474</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.1389358881</span>  <span class=\"nu0\">0.1092805780</span> <span class=\"nu0\">0.7350208828</span><br/>\t <span class=\"nu0\">1.5293954595</span>  <span class=\"nu0\">0.0030278255</span> <span class=\"nu0\">1.2472867347</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.5258728625</span>  <span class=\"nu0\">1.3782633069</span> <span class=\"nu0\">1.3495508831</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.1403562064</span>  <span class=\"nu0\">0.2437382535</span> <span class=\"nu0\">1.3804956588</span><br/>\t <span class=\"nu0\">0.8055826339</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.0482092025</span> <span class=\"nu0\">0.3327165165</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.6311979224</span>  <span class=\"nu0\">0.7184578971</span> <span class=\"nu0\">0.2491045282</span><br/>\t <span class=\"nu0\">1.4685857879</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.8347049536</span> <span class=\"nu0\">1.3670667538</span><br/>\t<span class=\"sy0\">-</span><span class=\"nu0\">0.6855727502</span>  <span class=\"nu0\">1.6465021616</span> <span class=\"nu0\">1.0593087096</span><br/>\t <span class=\"nu0\">0.0152957411</span>  <span class=\"nu0\">0.0638919221</span> <span class=\"nu0\">0.9771215985</span><br/>    <span class=\"sy0\">&gt;</span>\u00bb<span class=\"sy0\">.</span><span class=\"me1\">Num</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># remove redundant circles</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@circles</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">while</span> <span class=\"re0\">@rawcircles</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"re0\">@rawcircles</span><span class=\"sy0\">.</span><span class=\"kw3\">shift</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">@circles</span><span class=\"sy0\">.</span><span class=\"kw3\">any</span><span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">push</span> <span class=\"re0\">@circles</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> set_cbits<span class=\"br0\">(</span>Point <span class=\"re0\">$p</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$cbits</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"re0\">@circles</span> <span class=\"kw1\">Z</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">...*</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"re0\">$cbits</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$b</span> <span class=\"kw1\">if</span> <span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span><span class=\"re0\">$p</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$cbits</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$xmin</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">min</span><span class=\"br0\">]</span> <span class=\"re0\">@circles</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"me1\">center</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">-</span> <span class=\"sy0\">.</span><span class=\"me1\">radius</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$xmax</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">max</span><span class=\"br0\">]</span> <span class=\"re0\">@circles</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"me1\">center</span><span class=\"sy0\">.</span><span class=\"kw1\">x</span> <span class=\"sy0\">+</span> <span class=\"sy0\">.</span><span class=\"me1\">radius</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$ymin</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">min</span><span class=\"br0\">]</span> <span class=\"re0\">@circles</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"me1\">center</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">-</span> <span class=\"sy0\">.</span><span class=\"me1\">radius</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$ymax</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw3\">max</span><span class=\"br0\">]</span> <span class=\"re0\">@circles</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"me1\">center</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">+</span> <span class=\"sy0\">.</span><span class=\"me1\">radius</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$min</span><span class=\"sy0\">-</span>radius <span class=\"sy0\">=</span> <span class=\"re0\">@circles</span><span class=\"br0\">[</span><span class=\"sy0\">*-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">radius</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$outer</span><span class=\"sy0\">-</span>rect <span class=\"sy0\">=</span> Rect<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">:</span><br/>    nw <span class=\"sy0\">=&gt;</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$xmin</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ymax</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    <span class=\"kw1\">ne</span> <span class=\"sy0\">=&gt;</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$xmax</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ymax</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    sw <span class=\"sy0\">=&gt;</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$xmin</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ymin</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    se <span class=\"sy0\">=&gt;</span> Point<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"kw1\">x</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$xmax</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$ymin</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$outer</span><span class=\"sy0\">-</span>area <span class=\"sy0\">=</span> <span class=\"re0\">$outer</span><span class=\"sy0\">-</span>rect<span class=\"sy0\">.</span><span class=\"me1\">area</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@unknowns</span> <span class=\"sy0\">=</span> <span class=\"re0\">$outer</span><span class=\"sy0\">-</span>rect<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$known</span><span class=\"sy0\">-</span>dry <span class=\"sy0\">=</span> 0e0<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$known</span><span class=\"sy0\">-</span>wet <span class=\"sy0\">=</span> 0e0<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$div</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># divide current rects each into four rects, analyze each</span><br/><span class=\"kw2\">sub</span> divide<span class=\"br0\">(</span><span class=\"re0\">@old</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"re0\">$div</span> <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># rects too small to hold circle?</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$smallish</span> <span class=\"sy0\">=</span> <span class=\"re0\">@old</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">diag</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$min</span><span class=\"sy0\">-</span>radius<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@unk</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"re0\">@old</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$center</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">nw</span> mid <span class=\"sy0\">.</span><span class=\"me1\">se</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$north</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">nw</span> mid <span class=\"sy0\">.</span><span class=\"kw1\">ne</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$south</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">sw</span> mid <span class=\"sy0\">.</span><span class=\"me1\">se</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$west</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">nw</span> mid <span class=\"sy0\">.</span><span class=\"me1\">sw</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$east</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"kw1\">ne</span> mid <span class=\"sy0\">.</span><span class=\"me1\">se</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> Rect<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>nw <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">.</span><span class=\"me1\">nw</span><span class=\"sy0\">,</span> <span class=\"kw1\">ne</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$north</span><span class=\"sy0\">,</span> sw <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$west</span><span class=\"sy0\">,</span> se <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$center</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t    Rect<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>nw <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$north</span><span class=\"sy0\">,</span> <span class=\"kw1\">ne</span> <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">.</span><span class=\"kw1\">ne</span><span class=\"sy0\">,</span> sw <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$center</span><span class=\"sy0\">,</span> se <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$east</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t    Rect<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>nw <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$west</span><span class=\"sy0\">,</span> <span class=\"kw1\">ne</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$center</span><span class=\"sy0\">,</span> sw <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">.</span><span class=\"me1\">sw</span><span class=\"sy0\">,</span> se <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$south</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t    Rect<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"br0\">(</span>nw <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$center</span><span class=\"sy0\">,</span> <span class=\"kw1\">ne</span> <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$east</span><span class=\"sy0\">,</span> sw <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$south</span><span class=\"sy0\">,</span> se <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">.</span><span class=\"me1\">se</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">my</span> <span class=\"re0\">@bits</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">nw</span><span class=\"sy0\">.</span><span class=\"me1\">cbits</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"kw1\">ne</span><span class=\"sy0\">.</span><span class=\"me1\">cbits</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"me1\">sw</span><span class=\"sy0\">.</span><span class=\"me1\">cbits</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"me1\">se</span><span class=\"sy0\">.</span><span class=\"me1\">cbits</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t    <span class=\"co1\"># if all 4 points wet by same circle, guaranteed wet</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"sy0\">+&amp;</span><span class=\"br0\">]</span> <span class=\"re0\">@bits</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"re0\">$known</span><span class=\"sy0\">-</span>wet <span class=\"sy0\">+=</span> <span class=\"sy0\">.</span><span class=\"me1\">area</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">next</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\u00a0<br/>\t    <span class=\"co1\"># if all 4 corners are dry, must check further</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> <span class=\"br0\">[</span><span class=\"sy0\">+|</span><span class=\"br0\">]</span> <span class=\"re0\">@bits</span> <span class=\"kw1\">and</span> <span class=\"re0\">$smallish</span> <span class=\"br0\">{</span><br/>\u00a0<br/>\t\t<span class=\"co1\"># check that no circle bulges into this rect</span><br/>\t\t<span class=\"kw1\">my</span> <span class=\"re0\">$ok</span> <span class=\"sy0\">=</span> <span class=\"kw1\">True</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"re0\">@circles</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$c</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">if</span> <span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">east</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">west</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span><br/>\t\t\t<span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">north</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"sy0\">.</span><span class=\"me1\">contains</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"sy0\">.</span><span class=\"me1\">south</span><span class=\"br0\">)</span><br/>\t\t    <span class=\"br0\">{</span><br/>\t\t\t<span class=\"re0\">$ok</span> <span class=\"sy0\">=</span> <span class=\"kw1\">False</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">last</span><span class=\"sy0\">;</span><br/>\t\t    <span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"re0\">$ok</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"re0\">$known</span><span class=\"sy0\">-</span>dry <span class=\"sy0\">+=</span> <span class=\"sy0\">.</span><span class=\"me1\">area</span><span class=\"sy0\">;</span><br/>\t\t    <span class=\"kw1\">next</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    <span class=\"kw3\">push</span> <span class=\"re0\">@unk</span><span class=\"sy0\">,</span> <span class=\"re0\">$_</span><span class=\"sy0\">;</span>\t<span class=\"co1\"># dunno yet</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">@unk</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$delta</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.001</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">repeat</span> <span class=\"kw1\">until</span> <span class=\"kw1\">my</span> <span class=\"re0\">$diff</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$delta</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">@unknowns</span> <span class=\"sy0\">=</span> divide<span class=\"br0\">(</span><span class=\"re0\">@unknowns</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"re0\">$diff</span> <span class=\"sy0\">=</span> <span class=\"re0\">$outer</span><span class=\"sy0\">-</span>area <span class=\"sy0\">-</span> <span class=\"re0\">$known</span><span class=\"sy0\">-</span>dry <span class=\"sy0\">-</span> <span class=\"re0\">$known</span><span class=\"sy0\">-</span>wet<span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st_h\">'div: '</span><span class=\"sy0\">,</span> <span class=\"re0\">$div</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%-5d'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">' unk: '</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"re0\">@unknowns</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%-6d'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">' est: '</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$known</span><span class=\"sy0\">-</span>wet <span class=\"sy0\">+</span> <span class=\"re0\">$diff</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%9.6f'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">' wet: '</span><span class=\"sy0\">,</span> <span class=\"re0\">$known</span><span class=\"sy0\">-</span>wet<span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%9.6f'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">' dry: '</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$outer</span><span class=\"sy0\">-</span>area <span class=\"sy0\">-</span> <span class=\"re0\">$known</span><span class=\"sy0\">-</span>dry<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%9.6f'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">' diff: '</span><span class=\"sy0\">,</span> <span class=\"re0\">$diff</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%9.6f'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t<span class=\"st_h\">' error: '</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$diff</span> <span class=\"sy0\">-</span> <span class=\"re0\">@unknowns</span> <span class=\"sy0\">*</span> <span class=\"re0\">@unknowns</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">area</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%e'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Python", "loc": 56, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> namedtuple<br/>\u00a0<br/>Circle <span class=\"sy0\">=</span> namedtuple<span class=\"br0\">(</span><span class=\"st0\">\"Circle\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"x y r\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>circles <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.6417233788</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.6121789534</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.0848270516</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">1.4944608174</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.2077959613</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.1039549836</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.6110294452</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.6907087527</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.9089162485</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.3844862411</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.2923344616</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.2375743054</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.2495892950</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.3832854473</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.0845181219</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.7813504266</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.6178237031</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.8162655711</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.1985249206</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.8343333301</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.0538864941</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">1.7011985145</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.1263820964</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.4776976918</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.4319462812</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.4104420482</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.7886291537</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.2178372997</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.9499557344</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.0357871187</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.6294854565</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1.3078893852</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.7653357688</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.7952608455</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.6281269104</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.2727652452</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.4168575317</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.0683357171</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.1016025378</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.4637371396</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.9463877418</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.1846214562</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.5263668798</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.7315156631</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.4428514068</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">1.2197352481</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.9144146579</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.0727263474</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.1389358881</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.1092805780</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.7350208828</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.5293954595</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0030278255</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.2472867347</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.5258728625</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.3782633069</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.3495508831</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.1403562064</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.2437382535</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.3804956588</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.8055826339</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.0482092025</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.3327165165</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.6311979224</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.7184578971</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.2491045282</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">1.4685857879</span><span class=\"sy0\">,</span> -<span class=\"nu0\">0.8347049536</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.3670667538</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span>-<span class=\"nu0\">0.6855727502</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1.6465021616</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.0593087096</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Circle<span class=\"br0\">(</span> <span class=\"nu0\">0.0152957411</span><span class=\"sy0\">,</span>  <span class=\"nu0\">0.0638919221</span><span class=\"sy0\">,</span> <span class=\"nu0\">0.9771215985</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    <span class=\"co1\"># compute the bounding box of the circles</span><br/>    x_min <span class=\"sy0\">=</span> <span class=\"kw2\">min</span><span class=\"br0\">(</span>c.<span class=\"me1\">x</span> - c.<span class=\"me1\">r</span> <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> circles<span class=\"br0\">)</span><br/>    x_max <span class=\"sy0\">=</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span>c.<span class=\"me1\">x</span> + c.<span class=\"me1\">r</span> <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> circles<span class=\"br0\">)</span><br/>    y_min <span class=\"sy0\">=</span> <span class=\"kw2\">min</span><span class=\"br0\">(</span>c.<span class=\"me1\">y</span> - c.<span class=\"me1\">r</span> <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> circles<span class=\"br0\">)</span><br/>    y_max <span class=\"sy0\">=</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span>c.<span class=\"me1\">y</span> + c.<span class=\"me1\">r</span> <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> circles<span class=\"br0\">)</span><br/>\u00a0<br/>    box_side <span class=\"sy0\">=</span> <span class=\"nu0\">500</span><br/>\u00a0<br/>    dx <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x_max - x_min<span class=\"br0\">)</span> / box_side<br/>    dy <span class=\"sy0\">=</span> <span class=\"br0\">(</span>y_max - y_min<span class=\"br0\">)</span> / box_side<br/>\u00a0<br/>    count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> r <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>box_side<span class=\"br0\">)</span>:<br/>        y <span class=\"sy0\">=</span> y_min + r * dy<br/>        <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>box_side<span class=\"br0\">)</span>:<br/>            x <span class=\"sy0\">=</span> x_min + c * dx<br/>            <span class=\"kw1\">if</span> <span class=\"kw2\">any</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x-circle.<span class=\"me1\">x</span><span class=\"br0\">)</span>**<span class=\"nu0\">2</span> + <span class=\"br0\">(</span>y-circle.<span class=\"me1\">y</span><span class=\"br0\">)</span>**<span class=\"nu0\">2</span> <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>circle.<span class=\"me1\">r</span> ** <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                   <span class=\"kw1\">for</span> circle <span class=\"kw1\">in</span> circles<span class=\"br0\">)</span>:<br/>                count +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"Approximated area:\"</span><span class=\"sy0\">,</span> count * dx * dy<br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 51, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program calculates the total area of  (possibly overlapping)  circles.           */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> box dig <span class=\"sy0\">.</span>                              <span class=\"coMULTI\">/*obtain optional argument from the CL.*/</span><br/><span class=\"kw1\">if</span> box==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> box==<span class=\"st0\">','</span>  <span class=\"kw3\">then</span> box= <span class=\"nu0\">500</span>             <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> dig==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> dig==<span class=\"st0\">','</span>  <span class=\"kw3\">then</span> dig=  <span class=\"nu0\">12</span>             <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> dig                               <span class=\"coMULTI\">/*have enough decimal digits for points*/</span><br/>                    data = <span class=\"st0\">' 1.6417233788   1.6121789534  0.0848270516'</span>,<br/>                           <span class=\"st0\">'-1.4944608174   1.2077959613  1.1039549836'</span>,<br/>                           <span class=\"st0\">' 0.6110294452  -0.6907087527  0.9089162485'</span>,<br/>                           <span class=\"st0\">' 0.3844862411   0.2923344616  0.2375743054'</span>,<br/>                           <span class=\"st0\">'-0.2495892950  -0.3832854473  1.0845181219'</span>,<br/>                           <span class=\"st0\">' 1.7813504266   1.6178237031  0.8162655711'</span>,<br/>                           <span class=\"st0\">'-0.1985249206  -0.8343333301  0.0538864941'</span>,<br/>                           <span class=\"st0\">'-1.7011985145  -0.1263820964  0.4776976918'</span>,<br/>                           <span class=\"st0\">'-0.4319462812   1.4104420482  0.7886291537'</span>,<br/>                           <span class=\"st0\">' 0.2178372997  -0.9499557344  0.0357871187'</span>,<br/>                           <span class=\"st0\">'-0.6294854565  -1.3078893852  0.7653357688'</span>,<br/>                           <span class=\"st0\">' 1.7952608455   0.6281269104  0.2727652452'</span>,<br/>                           <span class=\"st0\">' 1.4168575317   1.0683357171  1.1016025378'</span>,<br/>                           <span class=\"st0\">' 1.4637371396   0.9463877418  1.1846214562'</span>,<br/>                           <span class=\"st0\">'-0.5263668798   1.7315156631  1.4428514068'</span>,<br/>                           <span class=\"st0\">'-1.2197352481   0.9144146579  1.0727263474'</span>,<br/>                           <span class=\"st0\">'-0.1389358881   0.1092805780  0.7350208828'</span>,<br/>                           <span class=\"st0\">' 1.5293954595   0.0030278255  1.2472867347'</span>,<br/>                           <span class=\"st0\">'-0.5258728625   1.3782633069  1.3495508831'</span>,<br/>                           <span class=\"st0\">'-0.1403562064   0.2437382535  1.3804956588'</span>,<br/>                           <span class=\"st0\">' 0.8055826339  -0.0482092025  0.3327165165'</span>,<br/>                           <span class=\"st0\">'-0.6311979224   0.7184578971  0.2491045282'</span>,<br/>                           <span class=\"st0\">' 1.4685857879  -0.8347049536  1.3670667538'</span>,<br/>                           <span class=\"st0\">'-0.6855727502   1.6465021616  1.0593087096'</span>,<br/>                           <span class=\"st0\">' 0.0152957411   0.0638919221  0.9771215985'</span><br/>circles=<span class=\"kw6\">words</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span>%3      <span class=\"coMULTI\">/*    \u2550\u2550x\u2550\u2550          \u2550\u2550y\u2550\u2550       \u2550\u2550radius\u2550\u2550  */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> data minX minY <span class=\"sy0\">.</span> <span class=\"nu0\">1</span> maxX maxY <span class=\"sy0\">.</span>              <span class=\"coMULTI\">/*assign minimum &amp; maximum values.*/</span><br/>            <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> circles; _=j<span class=\"sy0\">*</span><span class=\"nu0\">3</span>-<span class=\"nu0\">2</span>              <span class=\"coMULTI\">/*assign some circles with datum. */</span><br/>            @x<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data,_<span class=\"br0\">)</span>;  @y<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data,_+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                                @r<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data,_+<span class=\"nu0\">2</span><span class=\"br0\">)</span>;   @rr<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"acc691ecde\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"sy0\">**</span><span class=\"nu0\">2</span><br/>            minX=<span class=\"kw6\">min</span><span class=\"br0\">(</span>minX, @x<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"e288cfa290\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span>;  maxX=<span class=\"kw6\">max</span><span class=\"br0\">(</span>maxX, @x<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"f892d3b88a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span><br/>            minY=<span class=\"kw6\">min</span><span class=\"br0\">(</span>minY, @y<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"6d07402d1f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span>;  maxY=<span class=\"kw6\">max</span><span class=\"br0\">(</span>maxY, @y<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"412b6a0133\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span><br/>            <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>dx=<span class=\"br0\">(</span>maxX-minX<span class=\"br0\">)</span> <span class=\"sy0\">/</span> box<br/>dy=<span class=\"br0\">(</span>maxY-minY<span class=\"br0\">)</span> <span class=\"sy0\">/</span> box<br/>#=<span class=\"nu0\">0</span>                                                   <span class=\"coMULTI\">/*count of sample points (so far).*/</span><br/>      <span class=\"kw1\">do</span>   row=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> box;   y=minY+row<span class=\"sy0\">*</span>dy             <span class=\"coMULTI\">/*process each of the grid rows.  */</span><br/>        <span class=\"kw1\">do</span> col=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> box;   x=minX+col<span class=\"sy0\">*</span>dx             <span class=\"coMULTI\">/*   \"      \"   \"  \"    \"  column.*/</span><br/>          <span class=\"kw1\">do</span> k=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> circles                         <span class=\"coMULTI\">/*now process each new circle.    */</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a class=\"__cf_email__\" data-cfemail=\"344c19744c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span>+<span class=\"br0\">(</span><a class=\"__cf_email__\" data-cfemail=\"afd682efd6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span>= @rr<span class=\"sy0\">.</span>k  <span class=\"kw3\">then</span>  <span class=\"kw1\">do</span>;  #=#+<span class=\"nu0\">1</span>;  <span class=\"kw1\">leave</span>;  <span class=\"kw3\">end</span><br/>          <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/>        <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*col*/</span><br/>      <span class=\"kw3\">end</span>       <span class=\"coMULTI\">/*row*/</span><br/>                                                      <span class=\"coMULTI\">/*stick a fork in it, we're done. */</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'Using '</span> box  <span class=\"st0\">\" boxes (which have \"</span>  box<span class=\"sy0\">**</span><span class=\"nu0\">2</span>  <span class=\"st0\">' points)  and '</span>  dig  <span class=\"st0\">\" decimal digits,\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'the approximate area is: '</span>  #<span class=\"sy0\">*</span>dx<span class=\"sy0\">*</span>dy</pre>"}, {"lang": "REXX", "loc": 51, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program calculates the total area of  (possibly overlapping)  circles.           */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> box dig <span class=\"sy0\">.</span>                              <span class=\"coMULTI\">/*obtain optional argument from the CL.*/</span><br/><span class=\"kw1\">if</span> box==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> box==<span class=\"st0\">','</span>  <span class=\"kw3\">then</span> box= <span class=\"nu0\">500</span>             <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">if</span> dig==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> dig==<span class=\"st0\">','</span>  <span class=\"kw3\">then</span> dig=  <span class=\"nu0\">12</span>             <span class=\"coMULTI\">/* \"      \"         \"   \"   \"     \"    */</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> dig                               <span class=\"coMULTI\">/*have enough decimal digits for points*/</span><br/>                    data = <span class=\"st0\">' 1.6417233788   1.6121789534  0.0848270516'</span>,<br/>                           <span class=\"st0\">'-1.4944608174   1.2077959613  1.1039549836'</span>,<br/>                           <span class=\"st0\">' 0.6110294452  -0.6907087527  0.9089162485'</span>,<br/>                           <span class=\"st0\">' 0.3844862411   0.2923344616  0.2375743054'</span>,<br/>                           <span class=\"st0\">'-0.2495892950  -0.3832854473  1.0845181219'</span>,<br/>                           <span class=\"st0\">' 1.7813504266   1.6178237031  0.8162655711'</span>,<br/>                           <span class=\"st0\">'-0.1985249206  -0.8343333301  0.0538864941'</span>,<br/>                           <span class=\"st0\">'-1.7011985145  -0.1263820964  0.4776976918'</span>,<br/>                           <span class=\"st0\">'-0.4319462812   1.4104420482  0.7886291537'</span>,<br/>                           <span class=\"st0\">' 0.2178372997  -0.9499557344  0.0357871187'</span>,<br/>                           <span class=\"st0\">'-0.6294854565  -1.3078893852  0.7653357688'</span>,<br/>                           <span class=\"st0\">' 1.7952608455   0.6281269104  0.2727652452'</span>,<br/>                           <span class=\"st0\">' 1.4168575317   1.0683357171  1.1016025378'</span>,<br/>                           <span class=\"st0\">' 1.4637371396   0.9463877418  1.1846214562'</span>,<br/>                           <span class=\"st0\">'-0.5263668798   1.7315156631  1.4428514068'</span>,<br/>                           <span class=\"st0\">'-1.2197352481   0.9144146579  1.0727263474'</span>,<br/>                           <span class=\"st0\">'-0.1389358881   0.1092805780  0.7350208828'</span>,<br/>                           <span class=\"st0\">' 1.5293954595   0.0030278255  1.2472867347'</span>,<br/>                           <span class=\"st0\">'-0.5258728625   1.3782633069  1.3495508831'</span>,<br/>                           <span class=\"st0\">'-0.1403562064   0.2437382535  1.3804956588'</span>,<br/>                           <span class=\"st0\">' 0.8055826339  -0.0482092025  0.3327165165'</span>,<br/>                           <span class=\"st0\">'-0.6311979224   0.7184578971  0.2491045282'</span>,<br/>                           <span class=\"st0\">' 1.4685857879  -0.8347049536  1.3670667538'</span>,<br/>                           <span class=\"st0\">'-0.6855727502   1.6465021616  1.0593087096'</span>,<br/>                           <span class=\"st0\">' 0.0152957411   0.0638919221  0.9771215985'</span><br/>circles=<span class=\"kw6\">words</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span>%3      <span class=\"coMULTI\">/*    \u2550\u2550x\u2550\u2550          \u2550\u2550y\u2550\u2550       \u2550\u2550radius\u2550\u2550  */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> data minX minY <span class=\"sy0\">.</span> <span class=\"nu0\">1</span> maxX maxY <span class=\"sy0\">.</span>              <span class=\"coMULTI\">/*assign minimum &amp; maximum values.*/</span><br/>            <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> circles; _=j<span class=\"sy0\">*</span><span class=\"nu0\">3</span>-<span class=\"nu0\">2</span>              <span class=\"coMULTI\">/*assign some circles with datum. */</span><br/>            @x<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data,_<span class=\"br0\">)</span>;  @y<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data,_+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                                @r<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data,_+<span class=\"nu0\">2</span><span class=\"br0\">)</span>;   @rr<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"acc691ecde\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"sy0\">**</span><span class=\"nu0\">2</span><br/>            minX=<span class=\"kw6\">min</span><span class=\"br0\">(</span>minX, @x<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"e288cfa290\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span>;  maxX=<span class=\"kw6\">max</span><span class=\"br0\">(</span>maxX, @x<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"f892d3b88a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span><br/>            minY=<span class=\"kw6\">min</span><span class=\"br0\">(</span>minY, @y<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"6d07402d1f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span>;  maxY=<span class=\"kw6\">max</span><span class=\"br0\">(</span>maxY, @y<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"412b6a0133\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j<span class=\"br0\">)</span><br/>            <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>dx=<span class=\"br0\">(</span>maxX-minX<span class=\"br0\">)</span> <span class=\"sy0\">/</span> box<br/>dy=<span class=\"br0\">(</span>maxY-minY<span class=\"br0\">)</span> <span class=\"sy0\">/</span> box<br/>#=<span class=\"nu0\">0</span>                                                   <span class=\"coMULTI\">/*count of sample points (so far).*/</span><br/>      <span class=\"kw1\">do</span>   row=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> box;   y=minY+row<span class=\"sy0\">*</span>dy             <span class=\"coMULTI\">/*process each of the grid rows.  */</span><br/>        <span class=\"kw1\">do</span> col=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> box;   x=minX+col<span class=\"sy0\">*</span>dx             <span class=\"coMULTI\">/*   \"      \"   \"  \"    \"  column.*/</span><br/>          <span class=\"kw1\">do</span> k=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> circles                         <span class=\"coMULTI\">/*now process each new circle.    */</span><br/>          <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a class=\"__cf_email__\" data-cfemail=\"344c19744c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span>+<span class=\"br0\">(</span><a class=\"__cf_email__\" data-cfemail=\"afd682efd6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span>= @rr<span class=\"sy0\">.</span>k  <span class=\"kw3\">then</span>  <span class=\"kw1\">do</span>;  #=#+<span class=\"nu0\">1</span>;  <span class=\"kw1\">leave</span>;  <span class=\"kw3\">end</span><br/>          <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/>        <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*col*/</span><br/>      <span class=\"kw3\">end</span>       <span class=\"coMULTI\">/*row*/</span><br/>                                                      <span class=\"coMULTI\">/*stick a fork in it, we're done. */</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'Using '</span> box  <span class=\"st0\">\" boxes (which have \"</span>  box<span class=\"sy0\">**</span><span class=\"nu0\">2</span>  <span class=\"st0\">' points)  and '</span>  dig  <span class=\"st0\">\" decimal digits,\"</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'the approximate area is: '</span>  #<span class=\"sy0\">*</span>dx<span class=\"sy0\">*</span>dy</pre>"}, {"lang": "Ruby", "loc": 51, "block": "<pre class=\"ruby highlighted_source\">circles = <span class=\"br0\">[</span><br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.6417233788</span>,  <span class=\"nu0\">1.6121789534</span>, <span class=\"nu0\">0.0848270516</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1.4944608174</span>,  <span class=\"nu0\">1.2077959613</span>, <span class=\"nu0\">1.1039549836</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">0.6110294452</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.6907087527</span>, <span class=\"nu0\">0.9089162485</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">0.3844862411</span>,  <span class=\"nu0\">0.2923344616</span>, <span class=\"nu0\">0.2375743054</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.2495892950</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.3832854473</span>, <span class=\"nu0\">1.0845181219</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.7813504266</span>,  <span class=\"nu0\">1.6178237031</span>, <span class=\"nu0\">0.8162655711</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1985249206</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.8343333301</span>, <span class=\"nu0\">0.0538864941</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1.7011985145</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.1263820964</span>, <span class=\"nu0\">0.4776976918</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.4319462812</span>,  <span class=\"nu0\">1.4104420482</span>, <span class=\"nu0\">0.7886291537</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">0.2178372997</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.9499557344</span>, <span class=\"nu0\">0.0357871187</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6294854565</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1.3078893852</span>, <span class=\"nu0\">0.7653357688</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.7952608455</span>,  <span class=\"nu0\">0.6281269104</span>, <span class=\"nu0\">0.2727652452</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.4168575317</span>,  <span class=\"nu0\">1.0683357171</span>, <span class=\"nu0\">1.1016025378</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.4637371396</span>,  <span class=\"nu0\">0.9463877418</span>, <span class=\"nu0\">1.1846214562</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.5263668798</span>,  <span class=\"nu0\">1.7315156631</span>, <span class=\"nu0\">1.4428514068</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1.2197352481</span>,  <span class=\"nu0\">0.9144146579</span>, <span class=\"nu0\">1.0727263474</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1389358881</span>,  <span class=\"nu0\">0.1092805780</span>, <span class=\"nu0\">0.7350208828</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.5293954595</span>,  <span class=\"nu0\">0.0030278255</span>, <span class=\"nu0\">1.2472867347</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.5258728625</span>,  <span class=\"nu0\">1.3782633069</span>, <span class=\"nu0\">1.3495508831</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.1403562064</span>,  <span class=\"nu0\">0.2437382535</span>, <span class=\"nu0\">1.3804956588</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">0.8055826339</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.0482092025</span>, <span class=\"nu0\">0.3327165165</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6311979224</span>,  <span class=\"nu0\">0.7184578971</span>, <span class=\"nu0\">0.2491045282</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">1.4685857879</span>, <span class=\"sy0\">-</span><span class=\"nu0\">0.8347049536</span>, <span class=\"nu0\">1.3670667538</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">0.6855727502</span>,  <span class=\"nu0\">1.6465021616</span>, <span class=\"nu0\">1.0593087096</span><span class=\"br0\">]</span>,<br/>  <span class=\"br0\">[</span> <span class=\"nu0\">0.0152957411</span>,  <span class=\"nu0\">0.0638919221</span>, <span class=\"nu0\">0.9771215985</span><span class=\"br0\">]</span>,<br/><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">def</span> minmax_circle<span class=\"br0\">(</span>circles<span class=\"br0\">)</span><br/>  xmin = circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>xc, yc, radius<span class=\"sy0\">|</span> xc <span class=\"sy0\">-</span> radius<span class=\"br0\">}</span>.<span class=\"me1\">min</span><br/>  xmax = circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>xc, yc, radius<span class=\"sy0\">|</span> xc <span class=\"sy0\">+</span> radius<span class=\"br0\">}</span>.<span class=\"me1\">max</span><br/>  ymin = circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>xc, yc, radius<span class=\"sy0\">|</span> yc <span class=\"sy0\">-</span> radius<span class=\"br0\">}</span>.<span class=\"me1\">min</span><br/>  ymax = circles.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>xc, yc, radius<span class=\"sy0\">|</span> yc <span class=\"sy0\">+</span> radius<span class=\"br0\">}</span>.<span class=\"me1\">max</span><br/>  <span class=\"br0\">[</span>xmin, xmax, ymin, ymax<span class=\"br0\">]</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\"># remove internal circle</span><br/><span class=\"kw1\">def</span> select_circle<span class=\"br0\">(</span>circles<span class=\"br0\">)</span><br/>  circles = circles.<span class=\"me1\">sort_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>cx,cy,r<span class=\"sy0\">|</span> <span class=\"sy0\">-</span>r<span class=\"br0\">}</span><br/>  size = circles.<span class=\"me1\">size</span><br/>  <span class=\"kw3\">select</span> = <span class=\"br0\">[</span><span class=\"sy0\">*</span><span class=\"nu0\">0</span>...<span class=\"me1\">size</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"nu0\">0</span>...<span class=\"me1\">size</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    xi,yi,ri = circles<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">to_a</span><br/>    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> i<span class=\"sy0\">+</span><span class=\"nu0\">1</span>...<span class=\"me1\">size</span><br/>      xj,yj,rj = circles<span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">to_a</span><br/>      <span class=\"kw3\">select</span> <span class=\"sy0\">-</span>= <span class=\"br0\">[</span>j<span class=\"br0\">]</span>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>xi<span class=\"sy0\">-</span>xj<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>yi<span class=\"sy0\">-</span>yj<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span>= <span class=\"br0\">(</span>ri<span class=\"sy0\">-</span>rj<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  circles.<span class=\"me1\">values_at</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"kw3\">select</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>circles = select_circle<span class=\"br0\">(</span>circles<span class=\"br0\">)</span></pre>"}, {"lang": "Tcl", "loc": 110, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> circles <span class=\"br0\">{</span><br/>     <span class=\"nu0\">1.6417233788</span>  <span class=\"nu0\">1.6121789534</span> <span class=\"nu0\">0.0848270516</span><br/>    -<span class=\"nu0\">1.4944608174</span>  <span class=\"nu0\">1.2077959613</span> <span class=\"nu0\">1.1039549836</span><br/>     <span class=\"nu0\">0.6110294452</span> -<span class=\"nu0\">0.6907087527</span> <span class=\"nu0\">0.9089162485</span><br/>     <span class=\"nu0\">0.3844862411</span>  <span class=\"nu0\">0.2923344616</span> <span class=\"nu0\">0.2375743054</span><br/>    -<span class=\"nu0\">0.2495892950</span> -<span class=\"nu0\">0.3832854473</span> <span class=\"nu0\">1.0845181219</span><br/>     <span class=\"nu0\">1.7813504266</span>  <span class=\"nu0\">1.6178237031</span> <span class=\"nu0\">0.8162655711</span><br/>    -<span class=\"nu0\">0.1985249206</span> -<span class=\"nu0\">0.8343333301</span> <span class=\"nu0\">0.0538864941</span><br/>    -<span class=\"nu0\">1.7011985145</span> -<span class=\"nu0\">0.1263820964</span> <span class=\"nu0\">0.4776976918</span><br/>    -<span class=\"nu0\">0.4319462812</span>  <span class=\"nu0\">1.4104420482</span> <span class=\"nu0\">0.7886291537</span><br/>     <span class=\"nu0\">0.2178372997</span> -<span class=\"nu0\">0.9499557344</span> <span class=\"nu0\">0.0357871187</span><br/>    -<span class=\"nu0\">0.6294854565</span> -<span class=\"nu0\">1.3078893852</span> <span class=\"nu0\">0.7653357688</span><br/>     <span class=\"nu0\">1.7952608455</span>  <span class=\"nu0\">0.6281269104</span> <span class=\"nu0\">0.2727652452</span><br/>     <span class=\"nu0\">1.4168575317</span>  <span class=\"nu0\">1.0683357171</span> <span class=\"nu0\">1.1016025378</span><br/>     <span class=\"nu0\">1.4637371396</span>  <span class=\"nu0\">0.9463877418</span> <span class=\"nu0\">1.1846214562</span><br/>    -<span class=\"nu0\">0.5263668798</span>  <span class=\"nu0\">1.7315156631</span> <span class=\"nu0\">1.4428514068</span><br/>    -<span class=\"nu0\">1.2197352481</span>  <span class=\"nu0\">0.9144146579</span> <span class=\"nu0\">1.0727263474</span><br/>    -<span class=\"nu0\">0.1389358881</span>  <span class=\"nu0\">0.1092805780</span> <span class=\"nu0\">0.7350208828</span><br/>     <span class=\"nu0\">1.5293954595</span>  <span class=\"nu0\">0.0030278255</span> <span class=\"nu0\">1.2472867347</span><br/>    -<span class=\"nu0\">0.5258728625</span>  <span class=\"nu0\">1.3782633069</span> <span class=\"nu0\">1.3495508831</span><br/>    -<span class=\"nu0\">0.1403562064</span>  <span class=\"nu0\">0.2437382535</span> <span class=\"nu0\">1.3804956588</span><br/>     <span class=\"nu0\">0.8055826339</span> -<span class=\"nu0\">0.0482092025</span> <span class=\"nu0\">0.3327165165</span><br/>    -<span class=\"nu0\">0.6311979224</span>  <span class=\"nu0\">0.7184578971</span> <span class=\"nu0\">0.2491045282</span><br/>     <span class=\"nu0\">1.4685857879</span> -<span class=\"nu0\">0.8347049536</span> <span class=\"nu0\">1.3670667538</span><br/>    -<span class=\"nu0\">0.6855727502</span>  <span class=\"nu0\">1.6465021616</span> <span class=\"nu0\">1.0593087096</span><br/>     <span class=\"nu0\">0.0152957411</span>  <span class=\"nu0\">0.0638919221</span> <span class=\"nu0\">0.9771215985</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> init <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> circles circles<br/>    <span class=\"kw1\">set</span> xMin <span class=\"br0\">[</span><span class=\"kw1\">set</span> yMin inf<span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> xMax <span class=\"br0\">[</span><span class=\"kw1\">set</span> yMax -inf<span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> i -<span class=\"nu0\">1</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>xc yc rad<span class=\"br0\">}</span> <span class=\"re0\">$circles</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> xMin <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>min<span class=\"br0\">(</span><span class=\"re0\">$xMin</span>, <span class=\"re0\">$xc</span>-<span class=\"re0\">$rad</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> xMax <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>max<span class=\"br0\">(</span><span class=\"re0\">$xMax</span>, <span class=\"re0\">$xc</span>+<span class=\"re0\">$rad</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> yMin <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>min<span class=\"br0\">(</span><span class=\"re0\">$yMin</span>, <span class=\"re0\">$yc</span>-<span class=\"re0\">$rad</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> yMax <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>max<span class=\"br0\">(</span><span class=\"re0\">$yMax</span>, <span class=\"re0\">$yc</span>+<span class=\"re0\">$rad</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">lset</span> circles <span class=\"br0\">[</span><span class=\"kw2\">incr</span> i <span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$rad</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$xMin</span> <span class=\"re0\">$xMax</span> <span class=\"re0\">$yMin</span> <span class=\"re0\">$yMax</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> sampleGrid <span class=\"br0\">{</span>circles steps<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lassign <span class=\"br0\">[</span>init<span class=\"br0\">]</span> xMin xMax yMin yMax<br/>    <span class=\"kw1\">set</span> dx <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$xMax</span>-<span class=\"re0\">$xMin</span><span class=\"br0\">)</span>/<span class=\"re0\">$steps</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> dy <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$yMax</span>-<span class=\"re0\">$yMin</span><span class=\"br0\">)</span>/<span class=\"re0\">$steps</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> n <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$steps</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$xMin</span> + <span class=\"re0\">$i</span> <span class=\"sy0\">*</span> <span class=\"re0\">$dx</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$steps</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$yMin</span> + <span class=\"re0\">$j</span> <span class=\"sy0\">*</span> <span class=\"re0\">$dy</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>xc yc rad2<span class=\"br0\">}</span> <span class=\"re0\">$circles</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$x</span>-<span class=\"re0\">$xc</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> + <span class=\"br0\">(</span><span class=\"re0\">$y</span>-<span class=\"re0\">$yc</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$rad2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">incr</span> n<br/>\t\t    <span class=\"kw1\">break</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$dx</span> <span class=\"sy0\">*</span> <span class=\"re0\">$dy</span> <span class=\"sy0\">*</span> <span class=\"re0\">$n</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> sampleMC <span class=\"br0\">{</span>circles samples<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lassign <span class=\"br0\">[</span>init<span class=\"br0\">]</span> xMin xMax yMin yMax<br/>    <span class=\"kw1\">set</span> n <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$samples</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$xMin</span>+rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"re0\">$xMax</span>-<span class=\"re0\">$xMin</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$yMin</span>+rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"re0\">$yMax</span>-<span class=\"re0\">$yMin</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>xc yc rad2<span class=\"br0\">}</span> <span class=\"re0\">$circles</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$x</span>-<span class=\"re0\">$xc</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> + <span class=\"br0\">(</span><span class=\"re0\">$y</span>-<span class=\"re0\">$yc</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$rad2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">incr</span> n<br/>\t\t<span class=\"kw1\">break</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$xMax</span>-<span class=\"re0\">$xMin</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"re0\">$yMax</span>-<span class=\"re0\">$yMin</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$n</span> / <span class=\"re0\">$samples</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> samplePerturb <span class=\"br0\">{</span>circles steps votes<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lassign <span class=\"br0\">[</span>init<span class=\"br0\">]</span> xMin xMax yMin yMax<br/>    <span class=\"kw1\">set</span> dx <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$xMax</span>-<span class=\"re0\">$xMin</span><span class=\"br0\">)</span>/<span class=\"re0\">$steps</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> dy <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$yMax</span>-<span class=\"re0\">$yMin</span><span class=\"br0\">)</span>/<span class=\"re0\">$steps</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> n <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$steps</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$xMin</span> + <span class=\"re0\">$i</span> <span class=\"sy0\">*</span> <span class=\"re0\">$dx</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$steps</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$yMin</span> + <span class=\"re0\">$j</span> <span class=\"sy0\">*</span> <span class=\"re0\">$dy</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw1\">foreach</span> <span class=\"br0\">{</span>xc yc rad2<span class=\"br0\">}</span> <span class=\"re0\">$circles</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">set</span> <span class=\"kw1\">in</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> v <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$v</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$votes</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> v<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> xr <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> + <span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span>-<span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$dx</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw1\">set</span> yr <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span> + <span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span>-<span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$dy</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$xr</span>-<span class=\"re0\">$xc</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> + <span class=\"br0\">(</span><span class=\"re0\">$yr</span>-<span class=\"re0\">$yc</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$rad2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw2\">incr</span> <span class=\"kw1\">in</span><br/>\t\t    <span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$in</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span> <span class=\"sy0\">&gt;</span>= <span class=\"re0\">$votes</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">incr</span> n<br/>\t\t    <span class=\"kw1\">break</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$dx</span> <span class=\"sy0\">*</span> <span class=\"re0\">$dy</span> <span class=\"sy0\">*</span> <span class=\"re0\">$n</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"estimated area (grid):\u00a0%.4f\"</span> <span class=\"br0\">[</span>sampleGrid <span class=\"re0\">$circles</span> <span class=\"nu0\">500</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"estimated area (monte carlo):\u00a0%.2f\"</span> <span class=\"br0\">[</span>sampleMC <span class=\"re0\">$circles</span> <span class=\"nu0\">1000000</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"estimated area (perturbed sample):\u00a0%.4f\"</span> <span class=\"br0\">[</span>samplePerturb <span class=\"re0\">$circles</span> <span class=\"nu0\">500</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre>"}, {"lang": "zkl", "loc": 26, "block": "<pre class=\"text highlighted_source\">circles:=File(\"circles.txt\").pump(List,'wrap(line){<br/>   line.split().apply(\"toFloat\")  // L(x,y,r)<br/>});<br/>    # compute the bounding box of the circles<br/>x_min:=(0.0).min(circles.apply(fcn([(x,y,r)]){ x - r })); // (0) not used, just the list of numbers<br/>x_max:=(0.0).max(circles.apply(fcn([(x,y,r)]){ x + r }));<br/>y_min:=(0.0).min(circles.apply(fcn([(x,y,r)]){ y - r }));<br/>y_max:=(0.0).max(circles.apply(fcn([(x,y,r)]){ y + r }));<br/>\u00a0<br/>box_side:=500;<br/>dx:=(x_max - x_min)/box_side;<br/>dy:=(y_max - y_min)/box_side;<br/>\u00a0<br/>count:=0;<br/>foreach r in (box_side){<br/>   y:=y_min + dy*r;<br/>   foreach c in (box_side){<br/>      x:=x_min + dx*c;<br/>      count+=circles.filter1('wrap([(cx,cy,cr)]){<br/>         x-=cx; y-=cy;<br/>      \t x*x + y*y &lt;= cr*cr<br/>      }).toBool(); // --&gt;False|L(x,y,z), L(x,y,r).toBool()--&gt;True, <br/>   }<br/>}<br/>\u00a0<br/>println(\"Approximated area: \", dx*dy*count);</pre>"}]}