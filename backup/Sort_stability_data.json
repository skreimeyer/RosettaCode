{"task": "Sort_stability", "blocks": [{"lang": "Ada", "loc": 40, "block": "<pre class=\"autohotkey highlighted_source\">Table <span class=\"sy0\">=</span><br/><span class=\"br0\">(</span><br/>UK<span class=\"sy0\">,</span> London<br/>US<span class=\"sy0\">,</span> New York<br/>US<span class=\"sy0\">,</span> Birmingham<br/>UK<span class=\"sy0\">,</span> Birmingham<br/><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Margin\"><span class=\"kw7\">Margin</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>MinimizeBox<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#ListView\"><span class=\"kw8\">ListView</span></a><span class=\"sy0\">,</span> r5 w260 Grid<span class=\"sy0\">,</span> Orig<span class=\"sy0\">.</span>Position|Country|City<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Parse<span class=\"sy0\">,</span> Table<span class=\"sy0\">,</span> `n<span class=\"sy0\">,</span> `r<br/><span class=\"br0\">{</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/StringSplit.htm\"><span class=\"kw3\">StringSplit</span></a><span class=\"sy0\">,</span> out<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">,</span> `<span class=\"sy0\">,,</span> <span class=\"re0\">%A_Space%</span><br/>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_Add</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> out1<span class=\"sy0\">,</span> out2<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"77 Center\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\"100 Center\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">79</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> w80<span class=\"sy0\">,</span> Restore Order<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">+</span><span class=\"nu0\">10</span> wp<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Sort.htm\"><span class=\"kw3\">Sort</span></a> Countries<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">+</span><span class=\"nu0\">10</span> wp<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Sort.htm\"><span class=\"kw3\">Sort</span></a> Cities<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,,</span> <a href=\"http://www.autohotkey.com/docs/commands/Sort.htm\"><span class=\"kw3\">Sort</span></a> stability<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiEscape\"><span class=\"kw7\">GuiEscape</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>\u00a0<br/><span class=\"re2\">ButtonRestoreOrder:<br/></span>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sort\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ButtonSortCountries:<br/></span>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sort\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ButtonSortCities:<br/></span>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sort\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span></pre>"}, {"lang": "AutoHotkey", "loc": 40, "block": "<pre class=\"autohotkey highlighted_source\">Table <span class=\"sy0\">=</span><br/><span class=\"br0\">(</span><br/>UK<span class=\"sy0\">,</span> London<br/>US<span class=\"sy0\">,</span> New York<br/>US<span class=\"sy0\">,</span> Birmingham<br/>UK<span class=\"sy0\">,</span> Birmingham<br/><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Margin\"><span class=\"kw7\">Margin</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>MinimizeBox<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#ListView\"><span class=\"kw8\">ListView</span></a><span class=\"sy0\">,</span> r5 w260 Grid<span class=\"sy0\">,</span> Orig<span class=\"sy0\">.</span>Position|Country|City<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Parse<span class=\"sy0\">,</span> Table<span class=\"sy0\">,</span> `n<span class=\"sy0\">,</span> `r<br/><span class=\"br0\">{</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/StringSplit.htm\"><span class=\"kw3\">StringSplit</span></a><span class=\"sy0\">,</span> out<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">,</span> `<span class=\"sy0\">,,</span> <span class=\"re0\">%A_Space%</span><br/>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_Add</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> out1<span class=\"sy0\">,</span> out2<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"77 Center\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\"100 Center\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">79</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> w80<span class=\"sy0\">,</span> Restore Order<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">+</span><span class=\"nu0\">10</span> wp<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Sort.htm\"><span class=\"kw3\">Sort</span></a> Countries<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Button\"><span class=\"kw8\">Button</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">+</span><span class=\"nu0\">10</span> wp<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Sort.htm\"><span class=\"kw3\">Sort</span></a> Cities<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,,</span> <a href=\"http://www.autohotkey.com/docs/commands/Sort.htm\"><span class=\"kw3\">Sort</span></a> stability<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiEscape\"><span class=\"kw7\">GuiEscape</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>\u00a0<br/><span class=\"re2\">ButtonRestoreOrder:<br/></span>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sort\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ButtonSortCountries:<br/></span>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sort\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">ButtonSortCities:<br/></span>    <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">LV_ModifyCol</span></a><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Sort\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span></pre>"}, {"lang": "AWK", "loc": 29, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f SORT_STABILITY.AWK [-v width=x] -v field=x SORT_STABILITY.TXT</span><br/><span class=\"co1\">#</span><br/><span class=\"co1\"># sort by country: GAWK -f SORT_STABILITY.AWK -v field=1 SORT_STABILITY.TXT</span><br/><span class=\"co1\"># sort by city:    GAWK -f SORT_STABILITY.AWK -v field=2 SORT_STABILITY.TXT</span><br/><span class=\"co1\">#</span><br/><span class=\"co1\"># awk sort is not stable. Stability may be achieved by appending the</span><br/><span class=\"co1\"># record number, I.E. NR, to each key.</span><br/><span class=\"co1\">#</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    FIELDWIDTHS = <span class=\"st0\">\"4 20\"</span> <span class=\"co1\"># 2 fields: country city</span><br/>    PROCINFO<span class=\"br0\">[</span><span class=\"st0\">\"sorted_in\"</span><span class=\"br0\">]</span> = <span class=\"st0\">\"@ind_str_asc\"</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>width <span class=\"sy2\">==</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      width = <span class=\"nu0\">6</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"br0\">{</span> arr<span class=\"br0\">[</span><span class=\"re0\">$field</span> <span class=\"kw4\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%0*d\"</span>,width,<span class=\"kw3\">NR</span><span class=\"br0\">)</span><span class=\"br0\">]</span> = <span class=\"re0\">$0</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">END</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">length</span><span class=\"br0\">(</span><span class=\"kw3\">NR</span><span class=\"br0\">)</span> <span class=\"sy2\">&gt;</span> width<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"error: sort may still be unstable; change width to\u00a0%d<span class=\"es0\">\\n</span>\"</span>,<span class=\"kw4\">length</span><span class=\"br0\">(</span><span class=\"kw3\">NR</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      exit<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"after sorting on field\u00a0%d:<span class=\"es0\">\\n</span>\"</span>,field<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"kw1\">in</span> arr<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es0\">\\n</span>\"</span>,arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "C", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "C++", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "C#", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "Clojure", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "COBOL", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "Common Lisp", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "D", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "D\u00e9j\u00e0 Vu", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "Elixir", "loc": 9, "block": "<pre class=\"text highlighted_source\">cities = [ {\"UK\", \"London\"},<br/>           {\"US\", \"New York\"},<br/>           {\"US\", \"Birmingham\"},<br/>           {\"UK\", \"Birmingham\"} ]<br/>\u00a0<br/>IO.inspect Enum.sort(cities)<br/>IO.inspect Enum.sort(cities, fn a,b -&gt; elem(a,0) &gt;= elem(b,0) end)<br/>IO.inspect Enum.sort_by(cities, fn {country, _city} -&gt; country end)<br/>IO.inspect Enum.sort_by(cities, fn {_country, city} -&gt; city end)</pre>"}, {"lang": "Erlang", "loc": 17, "block": "<pre class=\"text highlighted_source\"># According to section 21.18 of the reference manual, Sort is not stable (it's a Shell sort).<br/># However, SortingPerm is stable. We will see it on an example, showing indexes of elements after the sort.<br/>\u00a0<br/>n\u00a0:= 20;<br/>L\u00a0:= List([1 .. n], i -&gt; Random(\"AB\"));<br/># \"AABABBBABBABAABABBAB\"<br/>\u00a0<br/>\u00a0<br/>p\u00a0:= SortingPerm(L);<br/># (3,10,15,17,18,19,9,14,7,13,6,12,16,8,4)(5,11)<br/>\u00a0<br/>a\u00a0:= Permuted(L, p);;<br/>b\u00a0:= Permuted([1 .. n], p);;<br/>\u00a0<br/>PrintArray(TransposedMat(List([1 .. n], i -&gt; [a[i], b[i]])));<br/># [ [  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B' ],<br/>#   [    1,    2,    4,    8,   11,   13,   14,   16,   19,    3,    5,    6,    7,    9,   10,   12,   15,   17,   18,   20 ] ]</pre>"}, {"lang": "Factor", "loc": 17, "block": "<pre class=\"text highlighted_source\"># According to section 21.18 of the reference manual, Sort is not stable (it's a Shell sort).<br/># However, SortingPerm is stable. We will see it on an example, showing indexes of elements after the sort.<br/>\u00a0<br/>n\u00a0:= 20;<br/>L\u00a0:= List([1 .. n], i -&gt; Random(\"AB\"));<br/># \"AABABBBABBABAABABBAB\"<br/>\u00a0<br/>\u00a0<br/>p\u00a0:= SortingPerm(L);<br/># (3,10,15,17,18,19,9,14,7,13,6,12,16,8,4)(5,11)<br/>\u00a0<br/>a\u00a0:= Permuted(L, p);;<br/>b\u00a0:= Permuted([1 .. n], p);;<br/>\u00a0<br/>PrintArray(TransposedMat(List([1 .. n], i -&gt; [a[i], b[i]])));<br/># [ [  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B' ],<br/>#   [    1,    2,    4,    8,   11,   13,   14,   16,   19,    3,    5,    6,    7,    9,   10,   12,   15,   17,   18,   20 ] ]</pre>"}, {"lang": "Fortran", "loc": 17, "block": "<pre class=\"text highlighted_source\"># According to section 21.18 of the reference manual, Sort is not stable (it's a Shell sort).<br/># However, SortingPerm is stable. We will see it on an example, showing indexes of elements after the sort.<br/>\u00a0<br/>n\u00a0:= 20;<br/>L\u00a0:= List([1 .. n], i -&gt; Random(\"AB\"));<br/># \"AABABBBABBABAABABBAB\"<br/>\u00a0<br/>\u00a0<br/>p\u00a0:= SortingPerm(L);<br/># (3,10,15,17,18,19,9,14,7,13,6,12,16,8,4)(5,11)<br/>\u00a0<br/>a\u00a0:= Permuted(L, p);;<br/>b\u00a0:= Permuted([1 .. n], p);;<br/>\u00a0<br/>PrintArray(TransposedMat(List([1 .. n], i -&gt; [a[i], b[i]])));<br/># [ [  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B' ],<br/>#   [    1,    2,    4,    8,   11,   13,   14,   16,   19,    3,    5,    6,    7,    9,   10,   12,   15,   17,   18,   20 ] ]</pre>"}, {"lang": "F#", "loc": 17, "block": "<pre class=\"text highlighted_source\"># According to section 21.18 of the reference manual, Sort is not stable (it's a Shell sort).<br/># However, SortingPerm is stable. We will see it on an example, showing indexes of elements after the sort.<br/>\u00a0<br/>n\u00a0:= 20;<br/>L\u00a0:= List([1 .. n], i -&gt; Random(\"AB\"));<br/># \"AABABBBABBABAABABBAB\"<br/>\u00a0<br/>\u00a0<br/>p\u00a0:= SortingPerm(L);<br/># (3,10,15,17,18,19,9,14,7,13,6,12,16,8,4)(5,11)<br/>\u00a0<br/>a\u00a0:= Permuted(L, p);;<br/>b\u00a0:= Permuted([1 .. n], p);;<br/>\u00a0<br/>PrintArray(TransposedMat(List([1 .. n], i -&gt; [a[i], b[i]])));<br/># [ [  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B' ],<br/>#   [    1,    2,    4,    8,   11,   13,   14,   16,   19,    3,    5,    6,    7,    9,   10,   12,   15,   17,   18,   20 ] ]</pre>"}, {"lang": "GAP", "loc": 17, "block": "<pre class=\"text highlighted_source\"># According to section 21.18 of the reference manual, Sort is not stable (it's a Shell sort).<br/># However, SortingPerm is stable. We will see it on an example, showing indexes of elements after the sort.<br/>\u00a0<br/>n\u00a0:= 20;<br/>L\u00a0:= List([1 .. n], i -&gt; Random(\"AB\"));<br/># \"AABABBBABBABAABABBAB\"<br/>\u00a0<br/>\u00a0<br/>p\u00a0:= SortingPerm(L);<br/># (3,10,15,17,18,19,9,14,7,13,6,12,16,8,4)(5,11)<br/>\u00a0<br/>a\u00a0:= Permuted(L, p);;<br/>b\u00a0:= Permuted([1 .. n], p);;<br/>\u00a0<br/>PrintArray(TransposedMat(List([1 .. n], i -&gt; [a[i], b[i]])));<br/># [ [  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'A',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B',  'B' ],<br/>#   [    1,    2,    4,    8,   11,   13,   14,   16,   19,    3,    5,    6,    7,    9,   10,   12,   15,   17,   18,   20 ] ]</pre>"}, {"lang": "Go", "loc": 10, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> cityList <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'UK  London'</span>, <span class=\"st0\">'US  New York'</span>, <span class=\"st0\">'US  Birmingham'</span>, <span class=\"st0\">'UK  Birmingham'</span>,<span class=\"br0\">]</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20asImmutable\"><span class=\"kw5\">asImmutable</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><br/>    <span class=\"st0\">'Sort by city'</span>: <span class=\"br0\">{</span> city <span class=\"sy0\">-&gt;</span> city<span class=\"br0\">[</span><span class=\"nu0\">4</span>..<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>,<br/>    <span class=\"st0\">'Sort by country'</span>: <span class=\"br0\">{</span> city <span class=\"sy0\">-&gt;</span> city<span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>,<br/><span class=\"br0\">]</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> <a href=\"http://www.google.de/search?as_q=String&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">String</span></a> label, Closure orderBy <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>Before ${label}\"</span><br/>    cityList.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a> <span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> it <span class=\"br0\">}</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>After ${label}\"</span><br/>    cityList.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20sort\"><span class=\"kw5\">sort</span></a><span class=\"br0\">(</span><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20false\"><span class=\"kw2\">false</span></a>, orderBy<span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> it <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Groovy", "loc": 10, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> cityList <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'UK  London'</span>, <span class=\"st0\">'US  New York'</span>, <span class=\"st0\">'US  Birmingham'</span>, <span class=\"st0\">'UK  Birmingham'</span>,<span class=\"br0\">]</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20asImmutable\"><span class=\"kw5\">asImmutable</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><br/>    <span class=\"st0\">'Sort by city'</span>: <span class=\"br0\">{</span> city <span class=\"sy0\">-&gt;</span> city<span class=\"br0\">[</span><span class=\"nu0\">4</span>..<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>,<br/>    <span class=\"st0\">'Sort by country'</span>: <span class=\"br0\">{</span> city <span class=\"sy0\">-&gt;</span> city<span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>,<br/><span class=\"br0\">]</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> <a href=\"http://www.google.de/search?as_q=String&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">String</span></a> label, Closure orderBy <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>Before ${label}\"</span><br/>    cityList.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a> <span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> it <span class=\"br0\">}</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>After ${label}\"</span><br/>    cityList.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20sort\"><span class=\"kw5\">sort</span></a><span class=\"br0\">(</span><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20false\"><span class=\"kw2\">false</span></a>, orderBy<span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> it <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 47, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Comparator</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RJSortStability <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cityList <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"UK  London\"</span>, <span class=\"st0\">\"US  New York\"</span>, <span class=\"st0\">\"US  Birmingham\"</span>, <span class=\"st0\">\"UK  Birmingham\"</span>, <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by city</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on city:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by country</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on country:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Icon and Unicon", "loc": 47, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Comparator</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RJSortStability <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cityList <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"UK  London\"</span>, <span class=\"st0\">\"US  New York\"</span>, <span class=\"st0\">\"US  Birmingham\"</span>, <span class=\"st0\">\"UK  Birmingham\"</span>, <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by city</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on city:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by country</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on country:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "J", "loc": 47, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Comparator</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RJSortStability <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cityList <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"UK  London\"</span>, <span class=\"st0\">\"US  New York\"</span>, <span class=\"st0\">\"US  Birmingham\"</span>, <span class=\"st0\">\"UK  Birmingham\"</span>, <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by city</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on city:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by country</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on country:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Java", "loc": 47, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Comparator</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RJSortStability <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cityList <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">\"UK  London\"</span>, <span class=\"st0\">\"US  New York\"</span>, <span class=\"st0\">\"US  Birmingham\"</span>, <span class=\"st0\">\"UK  Birmingham\"</span>, <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by city</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on city:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    cn <span class=\"sy0\">=</span> cityList.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Before sort:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// sort by country</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>cn, <span class=\"kw1\">new</span> Comparator<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compare<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> lft, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> rgt<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> lft.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>rgt.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>After sort on country:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> city <span class=\"sy0\">:</span> cn<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>city<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 7, "block": "<pre class=\"javascript highlighted_source\">ary <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"st0\">\"UK\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"London\"</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"st0\">\"US\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"New York\"</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"st0\">\"US\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Birmingham\"</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"st0\">\"UK\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Birmingham\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>print<span class=\"br0\">(</span>ary<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>ary.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">&lt;</span>b<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">?</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">&gt;</span>b<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>print<span class=\"br0\">(</span>ary<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* a stable sort will output [\"US\", \"Birmingham\"] before [\"UK\", \"Birmingham\"] */</span></pre>"}, {"lang": "jq", "loc": 5, "block": "<pre class=\"text highlighted_source\">[[\"UK\", \"London\"],<br/> [\"US\", \"New York\"],<br/> [\"US\", \"Birmingham\"],<br/> [\"UK\", \"Birmingham\"]]<br/>| sort_by(.[1])</pre>"}, {"lang": "Julia", "loc": 1, "block": "<pre>julia&gt; A = [(\"UK\", \"London\"), (\"US\", \"New York\"), (\"US\", \"Birmingham\"), (\"UK\", \"Birmingham\")];\njulia&gt; sort(A, by=x -&gt; x[2])\n4-element Array{(ASCIIString,ASCIIString),1}:\n (\"US\",\"Birmingham\")\n (\"UK\",\"Birmingham\")\n (\"UK\",\"London\")    \n (\"US\",\"New York\") \n</pre>"}, {"lang": "Kotlin", "loc": 10, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.51</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cities <span class=\"sy0\">=</span> listOf<span class=\"br0\">(</span><span class=\"st0\">\"UK London\"</span>, <span class=\"st0\">\"US New York\"</span>, <span class=\"st0\">\"US Birmingham\"</span>, <span class=\"st0\">\"UK Birmingham\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Original  \u00a0: $cities\"</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">// sort by country</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"By country\u00a0: ${cities.sortedBy { it.take(2) } }\"</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">// sort by city</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"By city   \u00a0: ${cities.sortedBy { it.drop(3) } }\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 8, "block": "<pre class=\"text highlighted_source\">//Single param array:<br/>array-&gt;sort<br/>\u00a0<br/>//An array of pairs, order by the right hand element of the pair: <br/>with i in array order by #i-&gt;second do =&gt; { \u2026 }<br/>\u00a0<br/>//The array can also be ordered by multiple values:<br/>with i in array order by #i-&gt;second, #i-&gt;first do =&gt; { \u2026 } </pre>"}, {"lang": "Liberty BASIC", "loc": 30, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">randomize</span> <span class=\"nu0\">0.5</span><br/>N<span class=\"sy0\">=</span><span class=\"nu0\">15</span><br/><span class=\"kw1\">dim</span> a<span class=\"br0\">(</span>N<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> N<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span>i<span class=\"sy0\">/</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>    a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/><span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Unsorted by column #2\"</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"by construction sorted by column #1\"</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> N<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">print</span> a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"kw1\">sort</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> N<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><br/><span class=\"kw1\">print</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"After sorting by column #2\"</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Notice wrong order by column #1\"</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> N<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">print</span> a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    <span class=\"kw1\">if</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">if</span>  a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> a<span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">AND</span>  a<span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> a<span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"bad order\"</span> <span class=\"kw1\">else</span> <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">next</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 29, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module Stable {<br/>      Inventory queue alfa <br/>      Stack New {<br/>            Data \"UK\", \"London\",\"US\", \"New York\",\"US\", \"Birmingham\", \"UK\",\"Birmingham\"<br/>            While not empty {<br/>                  Append alfa, Letter$:=letter$<br/>            }<br/>      }<br/>      sort alfa<br/>      k=Each(alfa)<br/>      Document A$<br/>      NL$={<br/>      }<br/>      While k {<br/>            A$= Eval$(k, k^)+\" \"+eval$(k)+NL$<br/>      }<br/>      Clipboard A$ ' write to clipboard<br/>      Report A$<br/>}<br/>Call Stable<br/>\u00a0<br/>Output:<br/>UK London<br/>UK Birmingham<br/>US New York<br/>US Birmingham<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "M2000 Interpreter", "loc": 29, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module Stable {<br/>      Inventory queue alfa <br/>      Stack New {<br/>            Data \"UK\", \"London\",\"US\", \"New York\",\"US\", \"Birmingham\", \"UK\",\"Birmingham\"<br/>            While not empty {<br/>                  Append alfa, Letter$:=letter$<br/>            }<br/>      }<br/>      sort alfa<br/>      k=Each(alfa)<br/>      Document A$<br/>      NL$={<br/>      }<br/>      While k {<br/>            A$= Eval$(k, k^)+\" \"+eval$(k)+NL$<br/>      }<br/>      Clipboard A$ ' write to clipboard<br/>      Report A$<br/>}<br/>Call Stable<br/>\u00a0<br/>Output:<br/>UK London<br/>UK Birmingham<br/>US New York<br/>US Birmingham<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Mathematica", "loc": 3, "block": "<pre class=\"text highlighted_source\">mylist = {{1, 2, 3}, {4, 5, 6}, {5, 4, 3}, {9, 5, 1}};<br/>Sort[mylist, (#1[[2]] &lt; #2[[2]]) &amp;]<br/>#[[Ordering[#[[All, 2]]]]] &amp;[mylist]</pre>"}, {"lang": "MATLAB", "loc": 56, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref savelog symbols nobinary<br/>\u00a0<br/><span class=\"kw1\">class</span> RCSortStability<br/>\u00a0<br/>method main<span class=\"br0\">(</span>args = String<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">constant</span><br/>\u00a0<br/>  cityList = <span class=\"br0\">[</span>String <span class=\"st0\">\"UK  London\"</span>, <span class=\"st0\">\"US  New York\"</span>, <span class=\"st0\">\"US  Birmingham\"</span>, <span class=\"st0\">\"UK  Birmingham\"</span><span class=\"br0\">]</span><br/>\u00a0<br/>  cn = String<span class=\"br0\">[</span>cityList.<span class=\"me0\">length</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"Before sort:\"</span><br/>  System.<span class=\"me0\">arraycopy</span><span class=\"br0\">(</span>cityList, <span class=\"nu0\">0</span>, cn, <span class=\"nu0\">0</span>, cityList.<span class=\"me0\">length</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>\u00a0<br/>  cCompNm = Comparator CityComparator<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  Arrays.<span class=\"me0\">sort</span><span class=\"br0\">(</span>cn, cCompNm<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"After sort on city:\"</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"Before sort:\"</span><br/>  System.<span class=\"me0\">arraycopy</span><span class=\"br0\">(</span>cityList, <span class=\"nu0\">0</span>, cn, <span class=\"nu0\">0</span>, cityList.<span class=\"me0\">length</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>\u00a0<br/>  cCompCtry = Comparator CountryComparator<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  Arrays.<span class=\"me0\">sort</span><span class=\"br0\">(</span>cn, cCompCtry<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"After sort on country:\"</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>  <span class=\"kw1\">say</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"kw1\">class</span> RCSortStability.<span class=\"me0\">CityComparator</span> <span class=\"kw2\">implements</span> Comparator<br/>\u00a0<br/>method <span class=\"kw6\">compare</span><span class=\"br0\">(</span>lft = Object, rgt = Object<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">binary</span> <span class=\"kw2\">returns</span> int<br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>String lft<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me0\">compareTo</span><span class=\"br0\">(</span><span class=\"br0\">(</span>String rgt<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">class</span> RCSortStability.<span class=\"me0\">CountryComparator</span> <span class=\"kw2\">implements</span> Comparator<br/>\u00a0<br/>method <span class=\"kw6\">compare</span><span class=\"br0\">(</span>lft = Object, rgt = Object<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">binary</span> <span class=\"kw2\">returns</span> int<br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>String lft<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me0\">compareTo</span><span class=\"br0\">(</span><span class=\"br0\">(</span>String rgt<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "NetRexx", "loc": 56, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref savelog symbols nobinary<br/>\u00a0<br/><span class=\"kw1\">class</span> RCSortStability<br/>\u00a0<br/>method main<span class=\"br0\">(</span>args = String<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">constant</span><br/>\u00a0<br/>  cityList = <span class=\"br0\">[</span>String <span class=\"st0\">\"UK  London\"</span>, <span class=\"st0\">\"US  New York\"</span>, <span class=\"st0\">\"US  Birmingham\"</span>, <span class=\"st0\">\"UK  Birmingham\"</span><span class=\"br0\">]</span><br/>\u00a0<br/>  cn = String<span class=\"br0\">[</span>cityList.<span class=\"me0\">length</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"Before sort:\"</span><br/>  System.<span class=\"me0\">arraycopy</span><span class=\"br0\">(</span>cityList, <span class=\"nu0\">0</span>, cn, <span class=\"nu0\">0</span>, cityList.<span class=\"me0\">length</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>\u00a0<br/>  cCompNm = Comparator CityComparator<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  Arrays.<span class=\"me0\">sort</span><span class=\"br0\">(</span>cn, cCompNm<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"After sort on city:\"</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"Before sort:\"</span><br/>  System.<span class=\"me0\">arraycopy</span><span class=\"br0\">(</span>cityList, <span class=\"nu0\">0</span>, cn, <span class=\"nu0\">0</span>, cityList.<span class=\"me0\">length</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>\u00a0<br/>  cCompCtry = Comparator CountryComparator<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  Arrays.<span class=\"me0\">sort</span><span class=\"br0\">(</span>cn, cCompCtry<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\"After sort on country:\"</span><br/>  <span class=\"kw1\">loop</span> city = <span class=\"nu0\">0</span> to cn.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">say</span> cn<span class=\"br0\">[</span>city<span class=\"br0\">]</span><br/>    <span class=\"kw3\">end</span> city<br/>  <span class=\"kw1\">say</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"kw1\">class</span> RCSortStability.<span class=\"me0\">CityComparator</span> <span class=\"kw2\">implements</span> Comparator<br/>\u00a0<br/>method <span class=\"kw6\">compare</span><span class=\"br0\">(</span>lft = Object, rgt = Object<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">binary</span> <span class=\"kw2\">returns</span> int<br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>String lft<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me0\">compareTo</span><span class=\"br0\">(</span><span class=\"br0\">(</span>String rgt<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">class</span> RCSortStability.<span class=\"me0\">CountryComparator</span> <span class=\"kw2\">implements</span> Comparator<br/>\u00a0<br/>method <span class=\"kw6\">compare</span><span class=\"br0\">(</span>lft = Object, rgt = Object<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">binary</span> <span class=\"kw2\">returns</span> int<br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span>String lft<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me0\">compareTo</span><span class=\"br0\">(</span><span class=\"br0\">(</span>String rgt<span class=\"br0\">)</span>.<span class=\"me0\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 44, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"coMULTI\">/* Rexx */</span><br/><span class=\"kw1\">Do</span><br/>  cities = <span class=\"sy0\">.</span>array~of<span class=\"br0\">(</span><span class=\"st0\">'UK  London'</span>, <span class=\"st0\">'US  New York'</span>, <span class=\"st0\">'US  Birmingham'</span>, <span class=\"st0\">'UK  Birmingham'</span>,<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Original table'</span><br/>  <span class=\"kw1\">Call</span> display cities<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Unstable sort on city'</span><br/>  sorted = cities~copy<br/>  sorted~sortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Stable sort on city'</span><br/>  sorted = cities~copy<br/>  sorted~stableSortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Unstable sort on country'</span><br/>  sorted = cities~copy<br/>  sorted~sortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Stable sort on country'</span><br/>  sorted = cities~copy<br/>  sorted~stableSortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>display: <span class=\"kw1\">Procedure</span><br/><span class=\"kw1\">Do</span><br/>  <span class=\"kw1\">Use</span> <span class=\"kw1\">arg</span> CT<br/>\u00a0<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'-'</span>~<span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Loop</span> c_ <span class=\"kw2\">over</span> CT<br/>    <span class=\"kw1\">Say</span> c_<br/>    <span class=\"kw3\">End</span> c_<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 44, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"coMULTI\">/* Rexx */</span><br/><span class=\"kw1\">Do</span><br/>  cities = <span class=\"sy0\">.</span>array~of<span class=\"br0\">(</span><span class=\"st0\">'UK  London'</span>, <span class=\"st0\">'US  New York'</span>, <span class=\"st0\">'US  Birmingham'</span>, <span class=\"st0\">'UK  Birmingham'</span>,<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Original table'</span><br/>  <span class=\"kw1\">Call</span> display cities<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Unstable sort on city'</span><br/>  sorted = cities~copy<br/>  sorted~sortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Stable sort on city'</span><br/>  sorted = cities~copy<br/>  sorted~stableSortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Unstable sort on country'</span><br/>  sorted = cities~copy<br/>  sorted~sortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Stable sort on country'</span><br/>  sorted = cities~copy<br/>  sorted~stableSortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>display: <span class=\"kw1\">Procedure</span><br/><span class=\"kw1\">Do</span><br/>  <span class=\"kw1\">Use</span> <span class=\"kw1\">arg</span> CT<br/>\u00a0<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'-'</span>~<span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Loop</span> c_ <span class=\"kw2\">over</span> CT<br/>    <span class=\"kw1\">Say</span> c_<br/>    <span class=\"kw3\">End</span> c_<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0</pre>"}, {"lang": "ooRexx", "loc": 44, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"coMULTI\">/* Rexx */</span><br/><span class=\"kw1\">Do</span><br/>  cities = <span class=\"sy0\">.</span>array~of<span class=\"br0\">(</span><span class=\"st0\">'UK  London'</span>, <span class=\"st0\">'US  New York'</span>, <span class=\"st0\">'US  Birmingham'</span>, <span class=\"st0\">'UK  Birmingham'</span>,<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Original table'</span><br/>  <span class=\"kw1\">Call</span> display cities<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Unstable sort on city'</span><br/>  sorted = cities~copy<br/>  sorted~sortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Stable sort on city'</span><br/>  sorted = cities~copy<br/>  sorted~stableSortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Unstable sort on country'</span><br/>  sorted = cities~copy<br/>  sorted~sortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Say</span>; <span class=\"kw1\">Say</span> <span class=\"st0\">'Stable sort on country'</span><br/>  sorted = cities~copy<br/>  sorted~stableSortWith<span class=\"br0\">(</span><span class=\"sy0\">.</span>ColumnComparator~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> display sorted<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>display: <span class=\"kw1\">Procedure</span><br/><span class=\"kw1\">Do</span><br/>  <span class=\"kw1\">Use</span> <span class=\"kw1\">arg</span> CT<br/>\u00a0<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'-'</span>~<span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Loop</span> c_ <span class=\"kw2\">over</span> CT<br/>    <span class=\"kw1\">Say</span> c_<br/>    <span class=\"kw3\">End</span> c_<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0</pre>"}, {"lang": "OpenEdge/Progress", "loc": 25, "block": "<pre class=\"progress highlighted_source\"><span class=\"kw1\">DEFINE TEMP-TABLE</span> tt<br/>   <span class=\"kw4\">FIELD</span> country  <span class=\"kw3\">AS</span> <span class=\"kw4\">CHAR</span> <span class=\"kw4\">FORMAT</span> <span class=\"st0\">'x(2)'</span><br/>   <span class=\"kw4\">FIELD</span> city     <span class=\"kw3\">AS</span> <span class=\"kw4\">CHAR</span> <span class=\"kw4\">FORMAT</span> <span class=\"st0\">'x(16)'</span><br/>   <span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw1\">DEFINE</span> <span class=\"kw3\">VARIABLE</span> cc <span class=\"kw3\">AS</span> <span class=\"kw4\">CHARACTER</span> <span class=\"kw4\">EXTENT</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw1\">CREATE</span> tt<span class=\"sy0\">.</span> <span class=\"kw1\">ASSIGN</span> tt<span class=\"sy0\">.</span>country <span class=\"sy0\">=</span> <span class=\"st0\">'UK'</span> tt<span class=\"sy0\">.</span>city <span class=\"sy0\">=</span> <span class=\"st0\">'London'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">CREATE</span> tt<span class=\"sy0\">.</span> <span class=\"kw1\">ASSIGN</span> tt<span class=\"sy0\">.</span>country <span class=\"sy0\">=</span> <span class=\"st0\">'US'</span> tt<span class=\"sy0\">.</span>city <span class=\"sy0\">=</span> <span class=\"st0\">'New York'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">CREATE</span> tt<span class=\"sy0\">.</span> <span class=\"kw1\">ASSIGN</span> tt<span class=\"sy0\">.</span>country <span class=\"sy0\">=</span> <span class=\"st0\">'US'</span> tt<span class=\"sy0\">.</span>city <span class=\"sy0\">=</span> <span class=\"st0\">'Birmingham'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">CREATE</span> tt<span class=\"sy0\">.</span> <span class=\"kw1\">ASSIGN</span> tt<span class=\"sy0\">.</span>country <span class=\"sy0\">=</span> <span class=\"st0\">'UK'</span> tt<span class=\"sy0\">.</span>city <span class=\"sy0\">=</span> <span class=\"st0\">'Birmingham'</span><span class=\"sy0\">.</span><br/>\u00a0<br/>cc<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'by country~n~n'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">FOR</span> <span class=\"kw1\">EACH</span> tt <span class=\"kw3\">BY</span> tt<span class=\"sy0\">.</span>country <span class=\"kw3\">BY</span> <span class=\"kw3\">ROWID</span><span class=\"br0\">(</span> tt <span class=\"br0\">)</span><span class=\"sy0\">:</span><br/>   <span class=\"me0\">cc</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> cc<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> tt<span class=\"sy0\">.</span>country <span class=\"sy0\">+</span> <span class=\"st0\">'~t'</span> <span class=\"sy0\">+</span> tt<span class=\"sy0\">.</span>city <span class=\"sy0\">+</span> <span class=\"st0\">'~n'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">END</span><span class=\"sy0\">.</span><br/>\u00a0<br/>cc<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'by city~n~n'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">FOR</span> <span class=\"kw1\">EACH</span> tt <span class=\"kw3\">BY</span> tt<span class=\"sy0\">.</span>city <span class=\"kw3\">BY</span> <span class=\"kw3\">ROWID</span><span class=\"br0\">(</span> tt <span class=\"br0\">)</span><span class=\"sy0\">:</span><br/>   <span class=\"me0\">cc</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> cc<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> tt<span class=\"sy0\">.</span>country <span class=\"sy0\">+</span> <span class=\"st0\">'~t'</span> <span class=\"sy0\">+</span> tt<span class=\"sy0\">.</span>city <span class=\"sy0\">+</span> <span class=\"st0\">'~n'</span><span class=\"sy0\">.</span><br/><span class=\"kw1\">END</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw1\">MESSAGE</span><br/>   cc<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">SKIP</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> cc<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/><span class=\"kw1\">VIEW-AS</span> <span class=\"kw1\">ALERT-BOX</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Oz", "loc": 11, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  Cities = <span class=\"br0\">[</span><span class=\"st0\">'UK'</span><span class=\"sy0\">#</span><span class=\"st0\">'London'</span><br/>            <span class=\"st0\">'US'</span><span class=\"sy0\">#</span><span class=\"st0\">'New York'</span><br/>            <span class=\"st0\">'US'</span><span class=\"sy0\">#</span><span class=\"st0\">'Birmingham'</span><br/>            <span class=\"st0\">'UK'</span><span class=\"sy0\">#</span><span class=\"st0\">'Birmingham'</span><span class=\"br0\">]</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"co1\">%% sort by city; stable because '=&lt;' is reflexiv</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Sort Cities <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> A B<span class=\"br0\">}</span> A<span class=\"sy0\">.</span>2 <span class=\"sy0\">=&lt;</span> B<span class=\"sy0\">.</span>2 <span class=\"kw1\">end</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">%% sort by country; NOT stable because '&lt;' is not reflexiv</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Sort Cities <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> A B<span class=\"br0\">}</span> A<span class=\"sy0\">.</span>1 <span class=\"sy0\">&lt;</span> B<span class=\"sy0\">.</span>1 <span class=\"kw1\">end</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> <a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a> <span class=\"st_h\">'stable'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> <a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a> <span class=\"st_h\">'stable'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> <a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a> <span class=\"st_h\">'stable'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 9, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">use</span> v6<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@cities</span> <span class=\"sy0\">=</span><br/>    <span class=\"br0\">[</span><span class=\"st_h\">'UK'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'London'</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"st_h\">'US'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'New York'</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"st_h\">'US'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Birmingham'</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"st_h\">'UK'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'Birmingham'</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"sy0\">.</span><span class=\"kw3\">say</span> <span class=\"kw1\">for</span> <span class=\"re0\">@cities</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 25, "block": "<pre class=\"text highlighted_source\">sequence test = {{\"UK\",\"London\"},<br/>                 {\"US\",\"New York\"},<br/>                 {\"US\",\"Birmingham\"},<br/>                 {\"UK\",\"Birmingham\"}}<br/>\u00a0<br/>---------------------<br/>-- probably stable --<br/>---------------------<br/>function cmp(object a, object b)<br/>    return compare(a[1],b[1])<br/>end function<br/>test = custom_sort(routine_id(\"cmp\"),test)<br/>pp(test,{pp_Nest,1})<br/>\u00a0<br/>-----------------------<br/>-- guaranteed stable --<br/>-----------------------<br/>function tag_cmp(integer i, integer j)<br/>    return compare({test[i][1],i},{test[j][1],j})<br/>--  return compare(test[i][1],test[j][1])<br/>end function<br/>sequence tags = custom_sort(routine_id(\"tag_cmp\"),shuffle(tagset(4)))<br/>for i=1 to length(tags) do<br/>   \u00a0?test[tags[i]]<br/>end for</pre>"}, {"lang": "PHP", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># First, define a bernoulli sample, of length 26.<br/>x &lt;- sample(c(0, 1), 26, replace=T)<br/>\u00a0<br/>x<br/># [1] 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># Give names to the entries. \"letters\" is a builtin value<br/>names(x) &lt;- letters<br/>\u00a0<br/>x<br/># a b c d e f g h i j k l m n o p q r s t u v w x y z<br/># 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># The unstable one, see how \"a\" appears after \"l\" now<br/>sort(x, method=\"quick\")<br/># z h s u e q x n j r t v w y p o m l a i g f d c b k<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0<br/># The stable sort, letters are ordered in each section<br/>sort(x, method=\"shell\")<br/># e h j n q s u x z a b c d f g i k l m o p r t v w y<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># First, define a bernoulli sample, of length 26.<br/>x &lt;- sample(c(0, 1), 26, replace=T)<br/>\u00a0<br/>x<br/># [1] 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># Give names to the entries. \"letters\" is a builtin value<br/>names(x) &lt;- letters<br/>\u00a0<br/>x<br/># a b c d e f g h i j k l m n o p q r s t u v w x y z<br/># 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># The unstable one, see how \"a\" appears after \"l\" now<br/>sort(x, method=\"quick\")<br/># z h s u e q x n j r t v w y p o m l a i g f d c b k<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0<br/># The stable sort, letters are ordered in each section<br/>sort(x, method=\"shell\")<br/># e h j n q s u x z a b c d f g i k l m o p r t v w y<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># First, define a bernoulli sample, of length 26.<br/>x &lt;- sample(c(0, 1), 26, replace=T)<br/>\u00a0<br/>x<br/># [1] 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># Give names to the entries. \"letters\" is a builtin value<br/>names(x) &lt;- letters<br/>\u00a0<br/>x<br/># a b c d e f g h i j k l m n o p q r s t u v w x y z<br/># 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># The unstable one, see how \"a\" appears after \"l\" now<br/>sort(x, method=\"quick\")<br/># z h s u e q x n j r t v w y p o m l a i g f d c b k<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0<br/># The stable sort, letters are ordered in each section<br/>sort(x, method=\"shell\")<br/># e h j n q s u x z a b c d f g i k l m o p r t v w y<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0</pre>"}, {"lang": "Python", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># First, define a bernoulli sample, of length 26.<br/>x &lt;- sample(c(0, 1), 26, replace=T)<br/>\u00a0<br/>x<br/># [1] 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># Give names to the entries. \"letters\" is a builtin value<br/>names(x) &lt;- letters<br/>\u00a0<br/>x<br/># a b c d e f g h i j k l m n o p q r s t u v w x y z<br/># 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># The unstable one, see how \"a\" appears after \"l\" now<br/>sort(x, method=\"quick\")<br/># z h s u e q x n j r t v w y p o m l a i g f d c b k<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0<br/># The stable sort, letters are ordered in each section<br/>sort(x, method=\"shell\")<br/># e h j n q s u x z a b c d f g i k l m o p r t v w y<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0</pre>"}, {"lang": "R", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># First, define a bernoulli sample, of length 26.<br/>x &lt;- sample(c(0, 1), 26, replace=T)<br/>\u00a0<br/>x<br/># [1] 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># Give names to the entries. \"letters\" is a builtin value<br/>names(x) &lt;- letters<br/>\u00a0<br/>x<br/># a b c d e f g h i j k l m n o p q r s t u v w x y z<br/># 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0<br/>\u00a0<br/># The unstable one, see how \"a\" appears after \"l\" now<br/>sort(x, method=\"quick\")<br/># z h s u e q x n j r t v w y p o m l a i g f d c b k<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0<br/># The stable sort, letters are ordered in each section<br/>sort(x, method=\"shell\")<br/># e h j n q s u x z a b c d f g i k l m o p r t v w y<br/># 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(sort '((\"UK\" \"London\")<br/>        (\"US\" \"New York\")<br/>        (\"US\" \"Birmingham\")<br/>        (\"UK\" \"Birmingham\"))<br/>      string&lt;? #:key first)<br/>;; -&gt; ((\"UK\" \"London\") (\"UK\" \"Birmingham\")<br/>;;     (\"US\" \"New York\") (\"US\" \"Birmingham\"))<br/>\u00a0<br/>(sort '((\"UK\" \"London\")<br/>        (\"US\" \"New York\")<br/>        (\"US\" \"Birmingham\")<br/>        (\"UK\" \"Birmingham\"))<br/>      string&lt;? #:key second)<br/>;; -&gt; '((\"US\" \"Birmingham\") (\"UK\" \"Birmingham\")<br/>;;      (\"UK\" \"London\") (\"US\" \"New York\"))<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 18, "block": "<pre class=\"rebol highlighted_source\"><span class=\"co1\">; REBOL's sort function is not stable by default. You need to use a custom comparator to make it so.</span><br/>\u00a0<br/>blk: <span class=\"br0\">[</span><br/>    <span class=\"br0\">[</span>UK London<span class=\"br0\">]</span><br/>    <span class=\"br0\">[</span>US New-York<span class=\"br0\">]</span><br/>    <span class=\"br0\">[</span>US Birmingham<span class=\"br0\">]</span><br/>    <span class=\"br0\">[</span>UK Birmingham<span class=\"br0\">]</span><br/><span class=\"br0\">]</span><br/><span class=\"kw3\">sort</span><span class=\"sy0\">/</span>compare blk <span class=\"kw2\">func</span> <span class=\"br0\">[</span>a b<span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> a<span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;</span> b<span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> a<span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">&gt;</span> b<span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\">; Note that you can also do a stable sort without nested blocks.</span><br/>blk: <span class=\"br0\">[</span><br/>    UK London<br/>    US New-York<br/>    US Birmingham<br/>    UK Birmingham<br/><span class=\"br0\">]</span><br/><span class=\"kw3\">sort</span><span class=\"sy0\">/</span><span class=\"kw3\">skip</span><span class=\"sy0\">/</span>compare blk <span class=\"nu0\">2</span> <span class=\"kw2\">func</span> <span class=\"br0\">[</span>a b<span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> a <span class=\"sy0\">&lt;</span> b <span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> a <span class=\"sy0\">&gt;</span> b <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre>"}, {"lang": "REXX", "loc": 24, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  sorts  a (stemmed)  array  using a  (stable)   bubble\u2500sort   algorithm. */</span><br/><span class=\"kw1\">call</span> <a class=\"__cf_email__\" data-cfemail=\"3453515a74\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>                                        <span class=\"coMULTI\">/*generate the array elements (strings)*/</span><br/><span class=\"kw1\">call</span> show  <span class=\"st0\">'before sort'</span>                         <span class=\"coMULTI\">/*show the  before array  elements.    */</span><br/>     <span class=\"kw1\">say</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'\u2592'</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span>                         <span class=\"coMULTI\">/*show a separator line between shows. */</span><br/><span class=\"kw1\">call</span> bubbleSort   #                              <span class=\"coMULTI\">/*invoke the bubble sort.              */</span><br/><span class=\"kw1\">call</span> show  <span class=\"st0\">' after sort'</span>                         <span class=\"coMULTI\">/*show the   after array  elements.    */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>bubbleSort: <span class=\"kw1\">procedure</span> <span class=\"kw1\">expose</span> @<span class=\"sy0\">.</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> n;    m=n-<span class=\"nu0\">1</span>  <span class=\"coMULTI\">/*N:  number of array elements. */</span><br/>               <span class=\"kw1\">do</span> m=m  <span class=\"kw2\">for</span> m  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>  <span class=\"kw2\">until</span> ok;   ok=<span class=\"nu0\">1</span>   <span class=\"coMULTI\">/*keep sorting array until done.*/</span><br/>                   <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> m;  k=j+<span class=\"nu0\">1</span>;  <span class=\"kw1\">if</span> @<span class=\"sy0\">.</span>j<span class=\"sy0\">&lt;</span><a class=\"__cf_email__\" data-cfemail=\"7b463b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span> <span class=\"coMULTI\">/*Not out\u2500of\u2500order?*/</span><br/>                   <a class=\"__cf_email__\" data-cfemail=\"7f20423f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>j;  @<span class=\"sy0\">.</span><a class=\"__cf_email__\" data-cfemail=\"92f8afd2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">.</span>k;  @<span class=\"sy0\">.</span>k=_;      ok=<span class=\"nu0\">0</span>   <span class=\"coMULTI\">/*swap 2 elements; flag as \u00acdone*/</span><br/>                   <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>               <span class=\"kw3\">end</span>       <span class=\"coMULTI\">/*m*/</span><br/>            <span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/><a class=\"__cf_email__\" data-cfemail=\"8cebe9e2cc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>: @<span class=\"sy0\">.</span>=;                 @<span class=\"sy0\">.</span>1 = <span class=\"st0\">'UK  London'</span><br/>                           @<span class=\"sy0\">.</span>2 = <span class=\"st0\">'US  New York'</span><br/>                           @<span class=\"sy0\">.</span>3 = <span class=\"st0\">'US  Birmingham'</span><br/>                           @<span class=\"sy0\">.</span>4 = <span class=\"st0\">'UK  Birmingham'</span><br/>             <span class=\"kw1\">do</span> #=<span class=\"nu0\">1</span>  <span class=\"kw2\">while</span> @<span class=\"sy0\">.</span>#<span class=\"sy0\">\\</span>==<span class=\"st0\">''</span>; <span class=\"kw3\">end</span>;  #=#-<span class=\"nu0\">1</span> <span class=\"coMULTI\">/*determine how many entries in list.  */</span><br/>      <span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>show: <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> #;  <span class=\"kw1\">say</span> <span class=\"st0\">'      element'</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>j,<span class=\"kw6\">length</span><span class=\"br0\">(</span>#<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"st0\">\":\"</span>  @<span class=\"sy0\">.</span>j;  <span class=\"kw3\">end</span>;  <span class=\"kw1\">return</span></pre>"}, {"lang": "Ring", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>aList = [[\"UK\", \"London\"],<br/>        [\"US\", \"New York\"],<br/>        [\"US\", \"Birmingham\"],<br/>        [\"UK\", \"Birmingham\"]]<br/>see sort(aList,2)<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 7, "block": "<pre class=\"ruby highlighted_source\">ary = <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"st0\">\"UK\"</span>, <span class=\"st0\">\"London\"</span><span class=\"br0\">]</span>,<br/>       <span class=\"br0\">[</span><span class=\"st0\">\"US\"</span>, <span class=\"st0\">\"New York\"</span><span class=\"br0\">]</span>,<br/>       <span class=\"br0\">[</span><span class=\"st0\">\"US\"</span>, <span class=\"st0\">\"Birmingham\"</span><span class=\"br0\">]</span>,<br/>       <span class=\"br0\">[</span><span class=\"st0\">\"UK\"</span>, <span class=\"st0\">\"Birmingham\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"kw3\">p</span> ary.<span class=\"me1\">sort</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>a,b<span class=\"sy0\">|</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=&gt;</span> b<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/><span class=\"co1\"># MRI reverses the Birminghams:</span><br/><span class=\"co1\"># =&gt; [[\"UK\", \"Birmingham\"], [\"US\", \"Birmingham\"], [\"UK\", \"London\"], [\"US\", \"New York\"]]</span></pre>"}, {"lang": "Rust", "loc": 28, "block": "<pre class=\"text highlighted_source\">fn main() {<br/>    let country_city = [(\"UK\", \"London\"),<br/>                        (\"US\", \"New York\"),<br/>                        (\"US\", \"Birmingham\"),<br/>                        (\"UK\", \"Birmingham\")];<br/>\u00a0<br/>    let mut city_sorted = country_city.clone();<br/>    city_sorted.sort_by_key(|k| k.1);<br/>\u00a0<br/>    let mut country_sorted = country_city.clone();<br/>    country_sorted.sort_by_key(|k| k.0);<br/>\u00a0<br/>\u00a0<br/>    println!(\"Original:\");<br/>    for x in &amp;country_city {<br/>        println!(\"{} {}\", x.0, x.1);<br/>    }<br/>\u00a0<br/>    println!(\"\\nWhen sorted by city:\");<br/>    for x in &amp;city_sorted {<br/>        println!(\"{} {}\", x.0, x.1);<br/>    }<br/>\u00a0<br/>    println!(\"\\nWhen sorted by county:\");<br/>    for x in &amp;country_sorted {<br/>        println!(\"{} {}\", x.0, x.1);<br/>    }<br/>}</pre>"}, {"lang": "Scala", "loc": 19, "block": "<pre class=\"scala highlighted_source\">scala<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> list <span class=\"sy0\">=</span> List<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"st0\">'c'</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"st0\">'b'</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"st0\">'a'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>list<span class=\"sy0\">:</span> List<span class=\"br0\">[</span><span class=\"br0\">(</span>Int, Char<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> List<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,c<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span>,b<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2</span>,a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>scala<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> srt1 <span class=\"sy0\">=</span> list.<span class=\"me1\">sortWith</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"sy0\">_</span>2 <span class=\"sy0\">&lt;</span> <span class=\"sy0\">_</span>.<span class=\"sy0\">_</span>2<span class=\"br0\">)</span><br/>srt1<span class=\"sy0\">:</span> List<span class=\"br0\">[</span><span class=\"br0\">(</span>Int, Char<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> List<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>,a<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span>,b<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span>,c<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>scala<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> srt2 <span class=\"sy0\">=</span> srt1.<span class=\"me1\">sortBy</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"sy0\">_</span>1<span class=\"br0\">)</span> <span class=\"co1\">// Ordering[Int] is implicitly defined</span><br/>srt2<span class=\"sy0\">:</span> List<span class=\"br0\">[</span><span class=\"br0\">(</span>Int, Char<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> List<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,b<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span>,c<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">2</span>,a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>scala<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cities <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"<br/>     | |UK  London<br/>     | |US  New York<br/>     | |US  Birmingham<br/>     | |UK  Birmingham<br/>     | |\"</span><span class=\"st0\">\"\"</span>.<span class=\"me1\">stripMargin</span>.<span class=\"me1\">lines</span>.<span class=\"me1\">filterNot</span><span class=\"br0\">(</span><span class=\"sy0\">_</span> isEmpty<span class=\"br0\">)</span>.<span class=\"me1\">toSeq</span><br/>cities<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>String<span class=\"br0\">]</span> <span class=\"sy0\">=</span> ArrayBuffer<span class=\"br0\">(</span>UK  London, US  New York, US  Birmingham, UK  Birmingham<span class=\"br0\">)</span><br/>\u00a0<br/>scala<span class=\"sy0\">&gt;</span> cities.<span class=\"me1\">sortBy</span><span class=\"br0\">(</span><span class=\"sy0\">_</span> substring <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>res47<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>String<span class=\"br0\">]</span> <span class=\"sy0\">=</span> ArrayBuffer<span class=\"br0\">(</span>US  Birmingham, UK  Birmingham, UK  London, US  New York<span class=\"br0\">)</span></pre>"}, {"lang": "Sidef", "loc": 10, "block": "<pre class=\"ruby highlighted_source\">var table = <span class=\"br0\">[</span><br/>  <span class=\"sy0\">&lt;</span>UK  London<span class=\"sy0\">&gt;</span>,<br/>  <span class=\"sy0\">&lt;</span>US  New\\ York<span class=\"sy0\">&gt;</span>,<br/>  <span class=\"sy0\">&lt;</span>US  Birmingham<span class=\"sy0\">&gt;</span>,<br/>  <span class=\"sy0\">&lt;</span>UK  Birmingham<span class=\"sy0\">&gt;</span>,<br/><span class=\"br0\">]</span>;<br/>\u00a0<br/>table.<span class=\"me1\">sort</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>a,b<span class=\"sy0\">|</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=&gt;</span> b<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>col<span class=\"sy0\">|</span><br/>    say <span class=\"st0\">\"#{col[0]} #{col[1]}\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Stata", "loc": 2, "block": "<pre class=\"text highlighted_source\">fcn sortByColumn(list,col)<br/>   { list.sort('wrap(city1,city2){ city1[col]&lt;city2[col] }) }</pre>"}, {"lang": "Tcl", "loc": 2, "block": "<pre class=\"text highlighted_source\">fcn sortByColumn(list,col)<br/>   { list.sort('wrap(city1,city2){ city1[col]&lt;city2[col] }) }</pre>"}, {"lang": "TXR", "loc": 2, "block": "<pre class=\"text highlighted_source\">fcn sortByColumn(list,col)<br/>   { list.sort('wrap(city1,city2){ city1[col]&lt;city2[col] }) }</pre>"}, {"lang": "zkl", "loc": 2, "block": "<pre class=\"text highlighted_source\">fcn sortByColumn(list,col)<br/>   { list.sort('wrap(city1,city2){ city1[col]&lt;city2[col] }) }</pre>"}]}