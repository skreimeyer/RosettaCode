{"task": "15_puzzle_solver", "blocks": [{"lang": "C++", "loc": 69, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co1\">// Solve Random 15 Puzzles\u00a0: Nigel Galloway - October 11th., 2017</span><br/><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> Nr<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">3</span><span class=\"br0\">}</span>, Nc<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"kw2\">using</span> N <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">tuple</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span>,<span class=\"kw4\">int</span>,<span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span>,std<span class=\"sy4\">::</span><span class=\"me2\">string</span>,<span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">void</span>    fN<span class=\"br0\">(</span><span class=\"kw4\">const</span> N,<span class=\"kw4\">const</span> <span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"kw4\">const</span> N fI<span class=\"br0\">(</span><span class=\"kw4\">const</span> N n<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span>           g <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> a <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy3\">&amp;</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span><span class=\"br0\">)</span><span class=\"nu0\">15</span><span class=\"sy1\">&lt;&lt;</span>g<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> N <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>a<span class=\"sy2\">+</span><span class=\"br0\">(</span>a<span class=\"sy1\">&lt;&lt;</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"st0\">\"d\"</span>,<span class=\"br0\">(</span>Nr<span class=\"br0\">[</span>a<span class=\"sy1\">&gt;&gt;</span>g<span class=\"br0\">]</span><span class=\"sy1\">&lt;=</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">?</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy4\">:</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span> <br/><span class=\"kw4\">const</span> N fG<span class=\"br0\">(</span><span class=\"kw4\">const</span> N n<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span>           g <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> a <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy3\">&amp;</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span><span class=\"br0\">)</span><span class=\"nu0\">15</span><span class=\"sy1\">&lt;&lt;</span>g<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> N <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>a<span class=\"sy2\">+</span><span class=\"br0\">(</span>a<span class=\"sy1\">&gt;&gt;</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"st0\">\"u\"</span>,<span class=\"br0\">(</span>Nr<span class=\"br0\">[</span>a<span class=\"sy1\">&gt;&gt;</span>g<span class=\"br0\">]</span><span class=\"sy1\">&gt;=</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">?</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy4\">:</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span> <br/><span class=\"kw4\">const</span> N fE<span class=\"br0\">(</span><span class=\"kw4\">const</span> N n<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span>           g <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">14</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> a <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy3\">&amp;</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span><span class=\"br0\">)</span><span class=\"nu0\">15</span><span class=\"sy1\">&lt;&lt;</span>g<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> N <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>a<span class=\"sy2\">+</span><span class=\"br0\">(</span>a<span class=\"sy1\">&lt;&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"st0\">\"r\"</span>,<span class=\"br0\">(</span>Nc<span class=\"br0\">[</span>a<span class=\"sy1\">&gt;&gt;</span>g<span class=\"br0\">]</span><span class=\"sy1\">&lt;=</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">?</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy4\">:</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span> <br/><span class=\"kw4\">const</span> N fL<span class=\"br0\">(</span><span class=\"kw4\">const</span> N n<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span>           g <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy2\">*</span><span class=\"nu0\">4</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> a <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy3\">&amp;</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span><span class=\"br0\">)</span><span class=\"nu0\">15</span><span class=\"sy1\">&lt;&lt;</span>g<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> N <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">-</span>a<span class=\"sy2\">+</span><span class=\"br0\">(</span>a<span class=\"sy1\">&gt;&gt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>,std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"st0\">\"l\"</span>,<span class=\"br0\">(</span>Nc<span class=\"br0\">[</span>a<span class=\"sy1\">&gt;&gt;</span>g<span class=\"br0\">]</span><span class=\"sy1\">&gt;=</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">?</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy4\">:</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span>    fZ<span class=\"br0\">(</span><span class=\"kw4\">const</span> N n, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> g<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy1\">==</span><span class=\"nu12\">0x123456789abcdef0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> g<span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> a<span class=\"sy4\">:</span> std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy2\">++</span>g<span class=\"sy4\">;</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span><span class=\"sy1\">&lt;&lt;</span><span class=\"st0\">\"Solution found with \"</span><span class=\"sy1\">&lt;&lt;</span>g<span class=\"sy1\">&lt;&lt;</span><span class=\"st0\">\" moves: \"</span><span class=\"sy1\">&lt;&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy1\">&lt;&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span> <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">4</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy1\">&lt;=</span> g<span class=\"br0\">)</span> fN<span class=\"br0\">(</span>n,g<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> fN<span class=\"br0\">(</span><span class=\"kw4\">const</span> N n, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> g<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> i<span class=\"br0\">{</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">}</span>, e<span class=\"br0\">{</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">1</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">}</span>, l<span class=\"br0\">{</span>std<span class=\"sy4\">::</span><span class=\"me2\">get</span><span class=\"sy1\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>.<span class=\"me1\">back</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">switch</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span>  <span class=\"nu0\">0</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span>  <span class=\"nu0\">0</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'l'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'u'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>                               <span class=\"kw1\">case</span>  <span class=\"nu0\">3</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'r'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'u'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>                               <span class=\"kw1\">default</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'l'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'r'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'u'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>            <span class=\"kw1\">case</span>  <span class=\"nu0\">3</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span>  <span class=\"nu0\">0</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'l'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>                               <span class=\"kw1\">case</span>  <span class=\"nu0\">3</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'r'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>                               <span class=\"kw1\">default</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'l'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'r'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>            <span class=\"kw1\">default</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span>  <span class=\"nu0\">0</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'l'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'u'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>                               <span class=\"kw1\">case</span>  <span class=\"nu0\">3</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'u'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'r'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>                               <span class=\"kw1\">default</span><span class=\"sy4\">:</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'l'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'r'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">case</span> <span class=\"st0\">'u'</span><span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><br/>                                                  <span class=\"kw1\">default</span> <span class=\"sy4\">:</span> fZ<span class=\"br0\">(</span>fL<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fI<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fE<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> fZ<span class=\"br0\">(</span>fG<span class=\"br0\">(</span>n<span class=\"br0\">)</span>,g<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> Solve<span class=\"br0\">(</span>N n<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> g<span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;;</span><span class=\"sy2\">++</span>g<span class=\"br0\">)</span> fN<span class=\"br0\">(</span>n,g<span class=\"br0\">)</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 1, "block": "<pre>59:         H = MOD(ABS(PRODUCT(BRD)),APRIME)\n004016E3   mov         esi,1\n004016E8   mov         ecx,1\n004016ED   cmp         ecx,2\n004016F0   jg          MAIN$SLIDESOLVE+490h (0040171e)\n004016F2   cmp         ecx,1\n004016F5   jl          MAIN$SLIDESOLVE+46Eh (004016fc)\n004016F7   cmp         ecx,2\n004016FA   jle         MAIN$SLIDESOLVE+477h (00401705)\n004016FC   xor         eax,eax\n004016FE   mov         dword ptr [ebp-54h],eax\n00401701   dec         eax\n00401702   bound       eax,qword ptr [ebp-54h]\n00401705   imul        edx,ecx,4\n00401708   mov         edx,dword ptr H (00473714)[edx]\n0040170E   imul        edx,esi\n00401711   mov         esi,edx\n00401713   mov         eax,ecx\n00401715   add         eax,1\n0040171A   mov         ecx,eax\n0040171C   jmp         MAIN$SLIDESOLVE+45Fh (004016ed)\n0040171E   mov         eax,esi\n00401720   cmp         eax,0\n00401725   jge         MAIN$SLIDESOLVE+49Bh (00401729)\n00401727   neg         eax\n00401729   mov         edx,10549h\n0040172E   mov         dword ptr [ebp-54h],edx\n00401731   cdq\n00401732   idiv        eax,dword ptr [ebp-54h]\n00401735   mov         eax,edx\n00401737   mov         dword ptr [H (00473714)],eax\n60:         write (6,*) H,bored\n</pre>"}, {"lang": "F#", "loc": 60, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"co1\">// A Naive 15 puzzle solver using no memory. Nigel Galloway: October 6th., 2017</span><br/><span class=\"kw1\">let</span> Nr <span class=\"sy0\">=</span> <span class=\"br0\">[</span>|<span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">3</span>|<span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> Nc <span class=\"sy0\">=</span> <span class=\"br0\">[</span>|<span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"nu0\">2</span>|<span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> Solve n <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> fN <span class=\"br0\">(</span>i,g,e,l,_<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw4\">seq</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">let</span>   fI <span class=\"sy0\">=</span> <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"sy0\">-</span>g<span class=\"sy0\">-</span>i<span class=\"sy0\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">4</span><br/>               <span class=\"kw1\">let</span> a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>e<span class=\"sy0\">&amp;&amp;&amp;</span><span class=\"br0\">(</span>15UL<span class=\"sy0\">&lt;&lt;&lt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span>,g,e<span class=\"sy0\">-</span>a<span class=\"sy0\">+</span><span class=\"br0\">(</span>a<span class=\"sy0\">&lt;&lt;&lt;</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>,<span class=\"st0\">'d'</span>::l,Nr.<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span>a<span class=\"sy0\">&gt;&gt;&gt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> i<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span>   fG <span class=\"sy0\">=</span> <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"sy0\">-</span>g<span class=\"sy0\">-</span>i<span class=\"sy0\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">4</span><br/>               <span class=\"kw1\">let</span> a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>e<span class=\"sy0\">&amp;&amp;&amp;</span><span class=\"br0\">(</span>15UL<span class=\"sy0\">&lt;&lt;&lt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span>,g,e<span class=\"sy0\">-</span>a<span class=\"sy0\">+</span><span class=\"br0\">(</span>a<span class=\"sy0\">&gt;&gt;&gt;</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>,<span class=\"st0\">'u'</span>::l,Nr.<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span>a<span class=\"sy0\">&gt;&gt;&gt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;=</span> i<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span>   fE <span class=\"sy0\">=</span> <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">14</span><span class=\"sy0\">-</span>g<span class=\"sy0\">-</span>i<span class=\"sy0\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">4</span><br/>               <span class=\"kw1\">let</span> a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>e<span class=\"sy0\">&amp;&amp;&amp;</span><span class=\"br0\">(</span>15UL<span class=\"sy0\">&lt;&lt;&lt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>i,g<span class=\"sy0\">+</span><span class=\"nu0\">1</span>,e<span class=\"sy0\">-</span>a<span class=\"sy0\">+</span><span class=\"br0\">(</span>a<span class=\"sy0\">&lt;&lt;&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>, <span class=\"st0\">'r'</span>::l,Nc.<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span>a<span class=\"sy0\">&gt;&gt;&gt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> g<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span>   fL <span class=\"sy0\">=</span> <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"sy0\">-</span>g<span class=\"sy0\">-</span>i<span class=\"sy0\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">4</span><br/>               <span class=\"kw1\">let</span> a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>e<span class=\"sy0\">&amp;&amp;&amp;</span><span class=\"br0\">(</span>15UL<span class=\"sy0\">&lt;&lt;&lt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>i,g<span class=\"sy0\">-</span><span class=\"nu0\">1</span>,e<span class=\"sy0\">-</span>a<span class=\"sy0\">+</span><span class=\"br0\">(</span>a<span class=\"sy0\">&gt;&gt;&gt;</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>, <span class=\"st0\">'l'</span>::l,Nc.<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span>a<span class=\"sy0\">&gt;&gt;&gt;</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;=</span> g<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span>   fZ <span class=\"br0\">(</span>n,i,g,e,l<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw4\">seq</span><span class=\"br0\">{</span><span class=\"kw1\">yield</span> <span class=\"br0\">(</span>n,i,g,e,l<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">if</span> l <span class=\"kw1\">then</span> <span class=\"kw1\">yield!</span> fN <span class=\"br0\">(</span>n,i,g,e,l<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">match</span> <span class=\"br0\">(</span>i,g,l<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"st0\">'l'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"st0\">'u'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span>,<span class=\"st0\">'r'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span>,<span class=\"st0\">'u'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span>,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"st0\">'l'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,<span class=\"st0\">'d'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">0</span>,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">3</span>,<span class=\"st0\">'r'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">3</span>,<span class=\"st0\">'d'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">3</span>,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fG<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,_,<span class=\"st0\">'l'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,_,<span class=\"st0\">'r'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,_,<span class=\"st0\">'u'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">0</span>,_,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">0</span>,<span class=\"st0\">'l'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">0</span>,<span class=\"st0\">'u'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">0</span>,<span class=\"st0\">'d'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">0</span>,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,_,<span class=\"st0\">'l'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fG<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,_,<span class=\"st0\">'r'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,_,<span class=\"st0\">'d'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span><span class=\"nu0\">3</span>,_,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">3</span>,<span class=\"st0\">'d'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">3</span>,<span class=\"st0\">'u'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fL<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">3</span>,<span class=\"st0\">'r'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span>_,<span class=\"nu0\">3</span>,_<span class=\"br0\">)</span>      <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span>_,_,<span class=\"st0\">'d'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span>_,_,<span class=\"st0\">'l'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |<span class=\"br0\">(</span>_,_,<span class=\"st0\">'r'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<br/>      |<span class=\"br0\">(</span>_,_,<span class=\"st0\">'u'</span>::_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>      |_            <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">yield!</span> fZ fI<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fE<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fG<span class=\"sy0\">;</span> <span class=\"kw1\">yield!</span> fZ fL<br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">collect</span> fN n<br/>  <span class=\"kw1\">match</span> <span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">tryFind</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span><span class=\"br0\">(</span>_,_,n,_,_<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span>n<span class=\"sy0\">=</span>0x123456789abcdef0UL<span class=\"br0\">)</span><span class=\"br0\">)</span> n <span class=\"kw1\">with</span><br/>  |Some<span class=\"br0\">(</span>_,_,_,n,_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> printf <span class=\"st0\">\"Solution found with\u00a0%d moves: \"</span> <span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">length</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">iter</span> <span class=\"br0\">(</span><span class=\"kw4\">string</span> <span class=\"sy0\">&gt;&gt;</span> printf <span class=\"st0\">\"%s\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">rev</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span> printfn <span class=\"st0\">\"\"</span><br/>  |_               <span class=\"sy0\">-&gt;</span> Solve <span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">filter</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>_,_,_,_,n<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"kw1\">not</span> n<span class=\"br0\">)</span> n<span class=\"br0\">)</span><br/>Solve <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"nu0\">0</span>,0xfe169b4c0a73d852UL,<span class=\"br0\">[</span><span class=\"br0\">]</span>,<span class=\"kw1\">false</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0</pre>"}, {"lang": "Phix", "loc": 293, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\Solve15puzzle.exw<br/>--<br/>constant STM = 0    -- single-tile metrics.<br/>constant MTM = 0    -- multi-tile metrics.<br/>if STM and MTM then\u00a0?9/0 end if -- both prohibited<br/>--  0       0   -- fastest, but non-optimal<br/>--  1       0   -- optimal in STM<br/>--  0       1   -- optimal in MTM (slowest by far)<br/>\u00a0<br/>--Note: The fast method uses an inadmissible heuristic - see \"not STM\" in iddfs().<br/>--      It explores mtm-style using the higher stm heuristic and may therefore <br/>--      fail badly in some cases.<br/>\u00a0<br/>constant SIZE = 4<br/>\u00a0<br/>constant goal = { 1, 2, 3, 4,<br/>                  5, 6, 7, 8,<br/>                  9,10,11,12,<br/>                 13,14,15, 0}<br/>\u00a0<br/>--<br/>-- multi-tile-metric walking distance heuristic lookup (mmwd).<br/>-- ==========================================================<br/>-- Uses patterns of counts of tiles in/from row/col, eg the solved state <br/>--  (ie goal above) could be represented by the following:<br/>--      {{4,0,0,0},<br/>--       {0,4,0,0},<br/>--       {0,0,4,0},<br/>--       {0,0,0,3}}<br/>--  ie row/col 1 contains 4 tiles from col/row 1, etc. In this case<br/>--  both are identical, but you can count row/col or col/row, and then<br/>--  add them together. There are up to 24964 possible patterns. The<br/>--  blank space is not counted. Note that a vertical move cannot change<br/>--  a vertical pattern, ditto horizontal, and basic symmetry means that<br/>--  row/col and col/row patterns will match (at least, that is, if they <br/>--  are calculated sympathetically), halving the setup cost.<br/>-- The data is just the number of moves made before this pattern was<br/>--  first encountered, in a breadth-first search, backwards from the<br/>--  goal state, until all patterns have been enumerated.<br/>-- (The same ideas/vars are now also used for stm metrics when MTM=0)<br/>--<br/>sequence wdkey              -- one such 4x4 pattern<br/>constant mmwd = new_dict()  -- lookup table, data is walking distance.<br/>\u00a0<br/>\u00a0<br/>--<br/>-- We use two to-do lists: todo is the current list, and everything<br/>-- of walkingdistance+1 ends up on tdnx. Once todo is exhausted, we<br/>-- swap the dictionary-ids, so tdnx automatically becomes empty.<br/>-- Key is an mmwd pattern as above, and data is {distance,space_idx}.<br/>--<br/>integer todo = new_dict()<br/>integer tdnx = new_dict()<br/>\u00a0<br/>--<br/>\u00a0<br/>enum UP = 1, DOWN = -1<br/>\u00a0<br/>procedure explore(integer space_idx, walking_distance, direction)<br/>--<br/>--  Given a space index, explore all the possible moves in direction,<br/>--  setting the distance and extending the tdnx table.<br/>--<br/>integer tile_idx = space_idx+direction<br/>    for group=1 to SIZE do<br/>        if wdkey[tile_idx][group] then<br/>            -- ie: check row tile_idx for tiles belonging to rows 1..4<br/>            -- Swap one of those tiles with the space<br/>            wdkey[tile_idx][group] -= 1<br/>            wdkey[space_idx][group] += 1<br/>\u00a0<br/>            if getd_index(wdkey,mmwd)=0 then<br/>                -- save the walking distance value<br/>                setd(wdkey,walking_distance+1,mmwd)<br/>                -- and add to the todo next list:<br/>                if getd_index(wdkey,tdnx)!=0 then\u00a0?9/0 end if<br/>                setd(wdkey,{walking_distance+1,tile_idx},tdnx)<br/>            end if<br/>\u00a0<br/>if MTM then<br/>            if tile_idx&gt;1 and tile_idx&lt;SIZE then<br/>                -- mtm: same direction means same distance:<br/>                explore(tile_idx, walking_distance, direction)<br/>            end if<br/>end if<br/>\u00a0<br/>            -- Revert the swap so we can look at the next candidate.<br/>            wdkey[tile_idx][group] += 1<br/>            wdkey[space_idx][group] -= 1<br/>        end if<br/>    end for<br/>end procedure<br/>\u00a0<br/>procedure generate_mmwd()<br/>-- Perform a breadth-first search begining with the solved puzzle state <br/>--  and exploring from there until no more new patterns emerge.<br/>integer walking_distance = 0, space = 4<br/>\u00a0<br/>    wdkey = {{4,0,0,0}, -- \\<br/>             {0,4,0,0}, --  } 4 tiles in correct row positions<br/>             {0,0,4,0}, -- /<br/>             {0,0,0,3}} --    3 tiles in correct row position<br/>    setd(wdkey,walking_distance,mmwd)<br/>    while 1 do<br/>        if space&lt;4 then explore(space, walking_distance, UP)    end if<br/>        if space&gt;1 then explore(space, walking_distance, DOWN) end if<br/>        if dict_size(todo)=0 then<br/>            if dict_size(tdnx)=0 then exit end if<br/>            {todo,tdnx} = {tdnx,todo}<br/>        end if<br/>        wdkey = getd_partial_key(0,todo)<br/>        {walking_distance,space} = getd(wdkey,todo)<br/>        deld(wdkey,todo)<br/>    end while<br/>end procedure<br/>\u00a0<br/>function walking_distance(sequence puzzle)<br/>sequence rkey = repeat(repeat(0,SIZE),SIZE),<br/>         ckey = repeat(repeat(0,SIZE),SIZE)<br/>    integer k = 1<br/>    for i=1 to SIZE do  -- rows<br/>        for j=1 to SIZE do  -- columns<br/>            integer tile = puzzle[k]<br/>            if tile!=0 then<br/>                integer row = floor((tile-1)/4)+1,<br/>                        col = mod(tile-1,4)+1<br/>                rkey[i][row] += 1<br/>                ckey[j][col] += 1<br/>            end if<br/>            k += 1<br/>        end for<br/>    end for<br/>    if getd_index(rkey,mmwd)=0<br/>    or getd_index(ckey,mmwd)=0 then<br/>       \u00a0?9/0 -- sanity check<br/>    end if<br/>    integer rwd = getd(rkey,mmwd),<br/>            cwd = getd(ckey,mmwd)<br/>    return rwd+cwd<br/>end function<br/>\u00a0<br/>sequence puzzle<br/>string res = \"\"<br/>atom t0 = time(),<br/>     t1 = time()+1<br/>atom tries = 0<br/>\u00a0<br/>constant ok = {{0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1},   -- left<br/>               {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1},   -- up<br/>               {1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0},   -- down<br/>               {1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0}}   -- right<br/>\u00a0<br/>function iddfs(integer step, lim, space, prevmv)<br/>    if time()&gt;t1 then<br/>        printf(1,\"working... (depth=%d, tries=%d, time=%3ds)\\r\",{lim,tries,time()-t0})<br/>        t1 = time()+1<br/>    end if<br/>    tries += 1<br/>    integer d = iff(step==lim?0:walking_distance(puzzle))<br/>    if d=0 then<br/>\u00a0<br/>        return (puzzle==goal)<br/>\u00a0<br/>    elsif step+d&lt;=lim then<br/>\u00a0<br/>        for mv=1 to 4 do -- l/u/d/r<br/>            if prevmv!=(5-mv) -- not l after r or vice versa, ditto u/d<br/>            and ok[mv][space] then<br/>                integer nspace = space+{-1,-4,+4,+1}[mv]<br/>                integer tile = puzzle[nspace]<br/>                if puzzle[space]!=0 then\u00a0?9/0 end if    -- sanity check     <br/>                puzzle[space] = tile<br/>                puzzle[nspace] = 0<br/>                if iddfs(step+iff(MTM or not STM?(prevmv!=mv):1),lim,nspace,mv) then<br/>                    res &amp;= \"ludr\"[mv]<br/>                    return true<br/>                end if<br/>                puzzle[nspace] = tile<br/>                puzzle[space] = 0<br/>            end if<br/>        end for<br/>    end if<br/>    return false<br/>end function<br/>\u00a0<br/>function pack(string s)<br/>integer n = length(s), n0 = n<br/>    for i=1 to 4 do<br/>        integer ch = \"lrud\"[i], k<br/>        while 1 do<br/>            k = match(repeat(ch,3),s)<br/>            if k=0 then exit end if<br/>            s[k+1..k+2] = \"3\"<br/>            n -= 2<br/>        end while<br/>        while 1 do<br/>            k = match(repeat(ch,2),s)<br/>            if k=0 then exit end if<br/>            s[k+1] = '2'<br/>            n -= 1<br/>        end while<br/>    end for<br/>    return {n,iff(MTM?sprintf(\"%d\",n):sprintf(\"%d(%d)\",{n,n0})),s}<br/>end function<br/>\u00a0<br/>procedure apply_moves(string moves, integer space)<br/>integer move, ch, nspace<br/>    puzzle[space] = 0<br/>    for i=1 to length(moves) do<br/>        ch = moves[i]<br/>        if ch&gt;'3' then<br/>            move = find(ch,\"ulrd\")<br/>        end if<br/>        -- (hint: \"r\" -&gt; the 'r' does 1<br/>        --        \"r2\" -&gt; the 'r' does 1, the '2' does 1<br/>        --        \"r3\" -&gt; the 'r' does 1, the '3' does 2!)<br/>        for j=1 to 1+(ch='3') do<br/>            nspace = space+{-4,-1,+1,4}[move]<br/>            puzzle[space] = puzzle[nspace]<br/>            space = nspace<br/>            puzzle[nspace] = 0<br/>        end for<br/>    end for<br/>end procedure<br/>\u00a0<br/>function solvable(sequence board)<br/>integer n = length(board)<br/>sequence positions = repeat(0,n)<br/>    -- prepare the mapping from each tile to its position<br/>    board[find(0,board)] = n<br/>    for i=1 to n do<br/>        positions[board[i]] = i<br/>    end for<br/>\u00a0<br/>    -- check whether this is an even or odd state<br/>    integer row = floor((positions[16]-1)/4),<br/>            col = (positions[16]-1)-row*4<br/>    bool even_state = (positions[16]==16) or (mod(row,2)==mod(col,2))<br/>\u00a0<br/>    -- count the even cycles<br/>    integer even_count = 0<br/>    sequence visited = repeat(false,16)<br/>    for i=1 to n do<br/>        if not visited[i] then<br/>            -- a new cycle starts at i. Count its length..<br/>            integer cycle_length = 0,<br/>                    next_tile = i<br/>            while not visited[next_tile] do<br/>                cycle_length +=1<br/>                visited[next_tile] = true<br/>                next_tile = positions[next_tile]<br/>            end while<br/>            even_count += (mod(cycle_length,2)==0)<br/>        end if<br/>    end for<br/>    return even_state == (mod(even_count,2)==0)<br/>end function<br/>\u00a0<br/>procedure main()<br/>\u00a0<br/>    puzzle = {15,14, 1, 6, <br/>               9,11, 4,12,<br/>               0,10, 7, 3, <br/>              13, 8, 5, 2}<br/>\u00a0<br/>    if not solvable(puzzle) then<br/>       \u00a0?puzzle<br/>        printf(1,\"puzzle is not solveable\\n\")<br/>    else<br/>\u00a0<br/>        generate_mmwd()<br/>\u00a0<br/>        sequence original = puzzle<br/>        integer space = find(0,puzzle)<br/>\u00a0<br/>        for lim=walking_distance(puzzle) to iff(MTM?43:80) do<br/>            if iddfs(0, lim, space, '-') then exit end if<br/>        end for<br/>\u00a0<br/>        {integer n, string ns, string ans} = pack(reverse(res))<br/>\u00a0<br/>        printf(1,\"\\n\\noriginal:\")<br/>       \u00a0?original<br/>        atom t = time()-t0<br/>        printf(1,\"\\n%soptimal solution of\u00a0%s moves found in\u00a0%s:\u00a0%s\\n\\nresult: \",<br/>                 {iff(MTM?\"mtm-\":iff(STM?\"stm-\":\"non-\")),ns,elapsed(t),ans})<br/>        puzzle = original<br/>        apply_moves(ans,space)<br/>       \u00a0?puzzle<br/>    end if<br/>end procedure<br/>main()</pre>"}]}