{"task": "Quaternion_type", "blocks": [{"lang": "Ada", "loc": 16, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">generic</span><br/>   <span class=\"kw3\">type</span> Real <span class=\"kw1\">is</span> <span class=\"kw3\">digits</span> &lt;&gt;;<br/><span class=\"kw3\">package</span> Quaternions <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">type</span> Quaternion <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      A, B, C, D\u00a0: Real;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"abs\"</span> <span class=\"br0\">(</span>Left\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Real;<br/>   <span class=\"kw3\">function</span> Conj <span class=\"br0\">(</span>Left\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"-\"</span> <span class=\"br0\">(</span>Left\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"+\"</span> <span class=\"br0\">(</span>Left, Right\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"-\"</span> <span class=\"br0\">(</span>Left, Right\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"*\"</span> <span class=\"br0\">(</span>Left\u00a0: Quaternion; Right\u00a0: Real<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"*\"</span> <span class=\"br0\">(</span>Left\u00a0: Real; Right\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> <span class=\"st0\">\"*\"</span> <span class=\"br0\">(</span>Left, Right\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Quaternion;<br/>   <span class=\"kw3\">function</span> Image <span class=\"br0\">(</span>Left\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"kw1\">return</span> String;<br/><span class=\"kw1\">end</span> Quaternions;</pre>"}, {"lang": "ALGOL 68", "loc": 259, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># -*- coding: utf-8 -*- #</span><br/>\u00a0<br/>COMMENT REQUIRES<span class=\"sy1\">:</span><br/>  <span class=\"kw4\">MODE</span> QUATSCAL <span class=\"sy1\">=</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># Scalar #</span><br/>  QUATSCAL quat small scal <span class=\"sy1\">=</span> <span class=\"kw20\">small real</span><span class=\"sy1\">;</span><br/><span class=\"kw2\">END</span> COMMENT<br/>\u00a0<br/><span class=\"coMULTI\"># PROVIDES: #</span><br/><span class=\"kw6\">FORMAT</span> quat scal fmt <span class=\"sy1\">:=</span> $g<span class=\"br0\">(</span><span class=\"sy1\">-</span>0<span class=\"sy1\">,</span> 4<span class=\"br0\">)</span>$<span class=\"sy1\">;</span><br/><span class=\"kw6\">FORMAT</span> signed fmt <span class=\"sy1\">=</span> $b<span class=\"br0\">(</span><span class=\"st0\">\"+\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>f<span class=\"br0\">(</span>quat scal fmt<span class=\"br0\">)</span>$<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw6\">FORMAT</span> quat fmt <span class=\"sy1\">=</span> $f<span class=\"br0\">(</span>quat scal fmt<span class=\"br0\">)</span><span class=\"st0\">\"+\"</span>f<span class=\"br0\">(</span>quat scal fmt<span class=\"br0\">)</span><span class=\"st0\">\"i+\"</span>f<span class=\"br0\">(</span>quat scal fmt<span class=\"br0\">)</span><span class=\"st0\">\"j+\"</span>f<span class=\"br0\">(</span>quat scal fmt<span class=\"br0\">)</span><span class=\"st0\">\"k\"</span>$<span class=\"sy1\">;</span><br/><span class=\"kw6\">FORMAT</span> squat fmt <span class=\"sy1\">=</span> $f<span class=\"br0\">(</span>signed fmt<span class=\"br0\">)</span>f<span class=\"br0\">(</span>signed fmt<span class=\"br0\">)</span><span class=\"st0\">\"i\"</span>f<span class=\"br0\">(</span>signed fmt<span class=\"br0\">)</span><span class=\"st0\">\"j\"</span>f<span class=\"br0\">(</span>signed fmt<span class=\"br0\">)</span><span class=\"st0\">\"k\"</span>$<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">MODE</span> QUAT <span class=\"sy1\">=</span> <span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span>QUATSCAL r<span class=\"sy1\">,</span> i<span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> k<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>QUAT i<span class=\"sy1\">=</span><span class=\"br0\">(</span>0<span class=\"sy1\">,</span> 1<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 0<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>     j<span class=\"sy1\">=</span><span class=\"br0\">(</span>0<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 1<span class=\"sy1\">,</span> 0<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>     k<span class=\"sy1\">=</span><span class=\"br0\">(</span>0<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 1<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">MODE</span> QUATCOSCAL <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span><span class=\"kw3\">INT</span><span class=\"sy1\">,</span> <span class=\"kw4\">SHORT</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">,</span> <span class=\"kw4\">SHORT</span> <span class=\"kw3\">INT</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <br/><span class=\"kw4\">MODE</span> QUATSUBSCAL <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span>QUATCOSCAL<span class=\"sy1\">,</span> QUATSCAL<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">MODE</span> COMPLSCAL <span class=\"sy1\">=</span> <span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span>QUATSCAL r<span class=\"sy1\">,</span> im<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># compatable but not the same #</span><br/><span class=\"kw4\">MODE</span> ISOQUAT <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">INT</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">SHORT</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw4\">SHORT</span> <span class=\"kw3\">INT</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>QUATSCAL<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> COQUAT  <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span>COMPLSCAL<span class=\"sy1\">,</span> QUATCOSCAL<span class=\"sy1\">,</span> ISOQUAT<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw4\">MODE</span> SUBQUAT <span class=\"sy1\">=</span> <span class=\"kw6\">UNION</span><span class=\"br0\">(</span>COQUAT<span class=\"sy1\">,</span> QUAT<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># subset is itself #</span><br/>\u00a0<br/><span class=\"kw4\">MODE</span> QUATERNION <span class=\"sy1\">=</span> QUAT<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> quat fix type error <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT quat<span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">STRING</span> msg<span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>  <span class=\"kw22\">putf</span><span class=\"br0\">(</span>stand error<span class=\"sy1\">,</span> <span class=\"br0\">(</span>$<span class=\"st0\">\"Type error:\"</span>$<span class=\"sy1\">,</span>$<span class=\"st0\">\" \"</span>g$<span class=\"sy1\">,</span> msg<span class=\"sy1\">,</span> quat fmt<span class=\"sy1\">,</span> quat<span class=\"sy1\">,</span> $l$<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  stop<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>COMMENT<br/>For a list of coercions expected in A68 c.f. <br/><span class=\"sy1\">*</span> http<span class=\"sy1\">://</span>rosettacode.org<span class=\"sy1\">/</span>wiki<span class=\"sy1\">/</span>ALGOL_68<span class=\"coMULTI\">#Coercion_.28casting.29 #</span> ...<br/>\u00a0<br/>Pre<span class=\"sy1\">-</span>Strong context<span class=\"sy1\">:</span> Deproceduring<span class=\"sy1\">,</span> dereferencing <span class=\"sy1\">&amp;</span> uniting. e.g. <span class=\"kw4\">OP</span> arguments<br/>  <span class=\"sy1\">*</span> soft<span class=\"br0\">(</span>deproceduring for assignment<span class=\"br0\">)</span><span class=\"sy1\">,</span> <br/>  <span class=\"sy1\">*</span> weak<span class=\"br0\">(</span>dereferencing for slicing and <span class=\"kw6\">OF</span> selection<span class=\"br0\">)</span><span class=\"sy1\">,</span> <br/>  <span class=\"sy1\">*</span> meek<span class=\"br0\">(</span>dereferencing for indexing<span class=\"sy1\">,</span> enquiries and <span class=\"kw4\">PROC</span> calls<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"sy1\">*</span> firm<span class=\"br0\">(</span>uniting of OPerators<span class=\"br0\">)</span><span class=\"sy1\">,</span> <br/>Strong context only<span class=\"sy1\">:</span> widening <span class=\"br0\">(</span><span class=\"kw3\">INT</span><span class=\"sy1\">=&gt;</span><span class=\"kw3\">REAL</span><span class=\"sy1\">=&gt;</span><span class=\"kw3\">COMPL</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> rowing <span class=\"br0\">(</span><span class=\"kw3\">REAL</span><span class=\"sy1\">=&gt;</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> voiding<br/>  <span class=\"sy1\">*</span> strong<span class=\"br0\">(</span>widening<span class=\"sy1\">,</span>rowing<span class=\"sy1\">,</span>voiding for identities<span class=\"sy1\">/</span>initialisations<span class=\"sy1\">,</span> arguments and casts et al<span class=\"br0\">)</span><br/>Key points<span class=\"sy1\">:</span><br/>  <span class=\"sy1\">*</span> arguments to OPerators do not widen or row<span class=\"sy1\">!</span><br/>  <span class=\"sy1\">*</span> UNITING is permitted in <span class=\"kw4\">OP</span><span class=\"sy1\">/</span>String ccontext.<br/>\u00a0<br/>There are 4 principle scenerios for most operators<span class=\"sy1\">:</span><br/><span class=\"sy1\">+---------------+-------------------------------+-------------------------------+</span><br/><span class=\"sy1\">|</span>  <span class=\"kw4\">OP</span> e.g. <span class=\"sy1\">*</span>    <span class=\"sy1\">|</span>  SCALar                       <span class=\"sy1\">|</span>  QUATernion                   <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+-------------------------------+-------------------------------+</span><br/><span class=\"sy1\">|</span>  SCALar       <span class=\"sy1\">|</span>  SCAL <span class=\"sy1\">*</span> SCAL ... inherit      <span class=\"sy1\">|</span>  SCAL <span class=\"sy1\">*</span> QUAT                  <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+-------------------------------+-------------------------------+</span><br/><span class=\"sy1\">|</span>  QUATernion   <span class=\"sy1\">|</span>  QUAT <span class=\"sy1\">*</span> SCAL                  <span class=\"sy1\">|</span>  QUAT <span class=\"sy1\">*</span> QUAT                  <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+-------------------------------+-------------------------------+</span><br/>However this is compounded with SUBtypes of the SCALar <span class=\"sy1\">&amp;</span> isomorphs the QUATernion<span class=\"sy1\">,</span> <br/>e.g. <br/><span class=\"sy1\">*</span> SCAL may be a superset of <span class=\"kw4\">SHORT</span> <span class=\"kw3\">REAL</span> or <span class=\"kw3\">INT</span> <span class=\"sy1\">-</span> a widening coercion is required<br/><span class=\"sy1\">*</span> QUAT may be a superset eg of <span class=\"kw3\">COMPL</span> or <span class=\"br0\">[</span>4<span class=\"br0\">]</span><span class=\"kw3\">INT</span><br/><span class=\"sy1\">*</span> QUAT may be a structural isomorph eg of <span class=\"br0\">[</span>4<span class=\"br0\">]</span><span class=\"kw3\">REAL</span><br/><span class=\"sy1\">+---------------+---------------+---------------+---------------+---------------+</span><br/><span class=\"sy1\">|</span>  <span class=\"kw4\">OP</span> e.g. <span class=\"sy1\">*</span>    <span class=\"sy1\">|</span>  SUBSCAL      <span class=\"sy1\">|</span>  SCALar       <span class=\"sy1\">|</span>  COQUAT       <span class=\"sy1\">|</span>  QUATernion   <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+---------------+---------------+---------------+---------------+</span><br/><span class=\"sy1\">|</span>  SUBSCAL      <span class=\"sy1\">|</span>                               <span class=\"sy1\">|</span>  inherit      <span class=\"sy1\">|</span>  SUBSCAT<span class=\"sy1\">*</span>QUAT <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+</span>           inherit             <span class=\"sy1\">+---------------+---------------+</span><br/><span class=\"sy1\">|</span>  SCALar       <span class=\"sy1\">|</span>                               <span class=\"sy1\">|</span>  inherit      <span class=\"sy1\">|</span>  SCAL <span class=\"sy1\">*</span> QUAT  <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+---------------+---------------+---------------+---------------+</span><br/><span class=\"sy1\">|</span>  COQUAT       <span class=\"sy1\">|</span>  inherit      <span class=\"sy1\">|</span>  inherit      <span class=\"sy1\">|</span>  inherit      <span class=\"sy1\">|</span>  COQUAT<span class=\"sy1\">*</span>QUAT  <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+---------------+---------------+---------------+---------------+</span><br/><span class=\"sy1\">|</span>  QUATernion   <span class=\"sy1\">|</span> QUAT<span class=\"sy1\">*</span>SUBSCAL  <span class=\"sy1\">|</span>  QUAT<span class=\"sy1\">*</span>SCAL    <span class=\"sy1\">|</span> QUAT <span class=\"sy1\">*</span> COQUAT <span class=\"sy1\">|</span>  QUAT <span class=\"sy1\">*</span> QUAT  <span class=\"sy1\">|</span><br/><span class=\"sy1\">+---------------+---------------+---------------+---------------+---------------+</span><br/>Keypoint<span class=\"sy1\">:</span> if an EXPLICIT QUAT is not involved<span class=\"sy1\">,</span> then we can simple inherit<span class=\"sy1\">,</span> <span class=\"kw16\">OR</span> QUATINIT<span class=\"sy1\">!</span><br/><span class=\"kw2\">END</span> COMMENT<br/>\u00a0<br/><span class=\"kw4\">MODE</span> CLASSQUAT <span class=\"sy1\">=</span> <span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#new#</span><span class=\"sy1\">,</span> QUATSCAL <span class=\"coMULTI\">#r#</span><span class=\"sy1\">,</span> QUATSCAL <span class=\"coMULTI\">#i#</span><span class=\"sy1\">,</span> QUATSCAL <span class=\"coMULTI\">#j#</span><span class=\"sy1\">,</span> QUATSCAL <span class=\"coMULTI\">#k#</span><span class=\"br0\">)</span><span class=\"kw4\">REF</span> QUAT new<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span>QUAT conjugate<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span>QUATSCAL norm sq<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span>QUATSCAL norm<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span>QUAT reciprocal<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span><span class=\"kw3\">STRING</span> repr<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span>QUAT neg<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT add<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT radd<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT sub<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT mul<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT rmul<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT div<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"sy1\">,</span> SUBQUAT <span class=\"coMULTI\">#other#</span><span class=\"br0\">)</span>QUAT rdiv<span class=\"sy1\">,</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT <span class=\"coMULTI\">#self#</span><span class=\"br0\">)</span>QUAT <span class=\"kw24\">exp</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>CLASSQUAT class quat <span class=\"sy1\">=</span> <span class=\"br0\">(</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC new =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT new<span class=\"sy1\">,</span> QUATSCAL r<span class=\"sy1\">,</span> i<span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> k<span class=\"br0\">)</span><span class=\"kw4\">REF</span> QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>        <span class=\"coMULTI\"># 'Defaults all parts of quaternion to zero' #</span><br/>        <span class=\"kw2\">IF</span> new <span class=\"kw7\">ISNT</span> <span class=\"kw4\">REF</span> QUAT<span class=\"br0\">(</span><span class=\"kw7\">NIL</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> new <span class=\"kw2\">ELSE</span> <span class=\"kw4\">HEAP</span> QUAT <span class=\"kw2\">FI</span> <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>r<span class=\"sy1\">,</span> i<span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> k<span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC conjugate =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"br0\">(</span>r <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>i <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>j <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>k <span class=\"kw6\">OF</span> self<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC norm sq =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span>QUATSCAL<span class=\"sy1\">:</span><br/>        r <span class=\"kw6\">OF</span> self<span class=\"sy1\">**</span>2 <span class=\"sy1\">+</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">**</span>2 <span class=\"sy1\">+</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">**</span>2 <span class=\"sy1\">+</span> k <span class=\"kw6\">OF</span> self<span class=\"sy1\">**</span>2<span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC norm =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span>QUATSCAL<span class=\"sy1\">:</span><br/>        <span class=\"kw24\">sqrt</span><span class=\"br0\">(</span><span class=\"br0\">(</span>norm sq <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC reciprocal =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>        QUATSCAL n2 <span class=\"sy1\">=</span> <span class=\"br0\">(</span>norm sq <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        QUAT conj <span class=\"sy1\">=</span> <span class=\"br0\">(</span>conjugate <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"br0\">(</span>r <span class=\"kw6\">OF</span> conj<span class=\"sy1\">/</span>n2<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> conj<span class=\"sy1\">/</span>n2<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> conj<span class=\"sy1\">/</span>n2<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> conj<span class=\"sy1\">/</span>n2<span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC repr =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>        <span class=\"coMULTI\"># 'Shorter form of Quaternion as string' #</span><br/>        <span class=\"kw6\">FILE</span> f<span class=\"sy1\">;</span> <span class=\"kw3\">STRING</span> s<span class=\"sy1\">;</span> <span class=\"kw22\">associate</span><span class=\"br0\">(</span>f<span class=\"sy1\">,</span> s<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">putf</span><span class=\"br0\">(</span>f<span class=\"sy1\">,</span> <span class=\"br0\">(</span>squat fmt<span class=\"sy1\">,</span> r <span class=\"kw6\">OF</span> self<span class=\"sy1\">&gt;=</span>0<span class=\"sy1\">,</span> r <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span><br/>             i <span class=\"kw6\">OF</span> self<span class=\"sy1\">&gt;=</span>0<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">&gt;=</span>0<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self<span class=\"sy1\">&gt;=</span>0<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">close</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        s<br/>    <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC neg =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"br0\">(</span><span class=\"sy1\">-</span>r <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>i <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>j <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>k <span class=\"kw6\">OF</span> self<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC add =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"kw2\">CASE</span> other <span class=\"kw2\">IN</span><br/>            <span class=\"br0\">(</span>QUAT other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>r <span class=\"kw6\">OF</span> self <span class=\"sy1\">+</span> r <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> self <span class=\"sy1\">+</span> i <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self <span class=\"sy1\">+</span> j <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self <span class=\"sy1\">+</span> k <span class=\"kw6\">OF</span> other<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"br0\">(</span>QUATSUBSCAL other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>r <span class=\"kw6\">OF</span> self <span class=\"sy1\">+</span> QUATSCALINIT other<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self<span class=\"br0\">)</span><br/>        <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span><span class=\"kw7\">SKIP</span><span class=\"sy1\">,</span><span class=\"st0\">\"in add\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ESAC</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC radd =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"br0\">(</span>add <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"sy1\">,</span> other<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC sub =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"kw2\">CASE</span> other <span class=\"kw2\">IN</span><br/>            <span class=\"br0\">(</span>QUAT other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>r <span class=\"kw6\">OF</span> self <span class=\"sy1\">-</span> r <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> self <span class=\"sy1\">-</span> i <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self <span class=\"sy1\">-</span> j <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self <span class=\"sy1\">-</span> k <span class=\"kw6\">OF</span> other<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"br0\">(</span>QUATSCAL other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>r <span class=\"kw6\">OF</span> self <span class=\"sy1\">-</span> other<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self<span class=\"br0\">)</span><br/>        <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span>self<span class=\"sy1\">,</span><span class=\"st0\">\"in sub\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ESAC</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC mul =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"kw2\">CASE</span> other <span class=\"kw2\">IN</span><br/>            <span class=\"br0\">(</span>QUAT other<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>                 r <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>r <span class=\"kw6\">OF</span> other <span class=\"sy1\">-</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>i  <span class=\"kw6\">OF</span> other <span class=\"sy1\">-</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>j  <span class=\"kw6\">OF</span> other <span class=\"sy1\">-</span> k <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>k  <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span><br/>                 r <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>i  <span class=\"kw6\">OF</span> other <span class=\"sy1\">+</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>r <span class=\"kw6\">OF</span> other <span class=\"sy1\">+</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>k  <span class=\"kw6\">OF</span> other <span class=\"sy1\">-</span> k <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>j  <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span><br/>                 r <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>j  <span class=\"kw6\">OF</span> other <span class=\"sy1\">-</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>k  <span class=\"kw6\">OF</span> other <span class=\"sy1\">+</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>r <span class=\"kw6\">OF</span> other <span class=\"sy1\">+</span> k <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>i  <span class=\"kw6\">OF</span> other<span class=\"sy1\">,</span><br/>                 r <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>k  <span class=\"kw6\">OF</span> other <span class=\"sy1\">+</span> i <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>j  <span class=\"kw6\">OF</span> other <span class=\"sy1\">-</span> j <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>i  <span class=\"kw6\">OF</span> other <span class=\"sy1\">+</span> k <span class=\"kw6\">OF</span> self<span class=\"sy1\">*</span>r <span class=\"kw6\">OF</span> other<br/>            <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"br0\">(</span>QUATSCAL other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span> r <span class=\"kw6\">OF</span> self <span class=\"sy1\">*</span> other<span class=\"sy1\">,</span> i <span class=\"kw6\">OF</span> self <span class=\"sy1\">*</span> other<span class=\"sy1\">,</span> j <span class=\"kw6\">OF</span> self <span class=\"sy1\">*</span> other<span class=\"sy1\">,</span> k <span class=\"kw6\">OF</span> self <span class=\"sy1\">*</span> other<span class=\"br0\">)</span><br/>        <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span>self<span class=\"sy1\">,</span><span class=\"st0\">\"in mul\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ESAC</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC rmul =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"kw2\">CASE</span> other <span class=\"kw2\">IN</span><br/>          <span class=\"br0\">(</span>QUAT other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> other<span class=\"sy1\">,</span> self<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>          <span class=\"br0\">(</span>QUATSCAL other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"sy1\">,</span> other<span class=\"br0\">)</span><br/>        <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span>self<span class=\"sy1\">,</span><span class=\"st0\">\"in rmul\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ESAC</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC div =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"kw2\">CASE</span> other <span class=\"kw2\">IN</span><br/>            <span class=\"br0\">(</span>QUAT other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"sy1\">,</span> <span class=\"br0\">(</span>reciprocal <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> other<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>            <span class=\"br0\">(</span>QUATSCAL other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>self<span class=\"sy1\">,</span> 1<span class=\"sy1\">/</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span>self<span class=\"sy1\">,</span><span class=\"st0\">\"in div\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ESAC</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC rdiv =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"sy1\">,</span> SUBQUAT other<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span><br/>        <span class=\"kw2\">CASE</span> other <span class=\"kw2\">IN</span><br/>          <span class=\"br0\">(</span>QUAT other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> other<span class=\"sy1\">,</span> self<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>          <span class=\"br0\">(</span>QUATSCAL other<span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> <span class=\"br0\">(</span>other<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 0<span class=\"br0\">)</span><span class=\"sy1\">,</span> self<span class=\"br0\">)</span><br/>        <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span>self<span class=\"sy1\">,</span><span class=\"st0\">\"in rdiv\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">ESAC</span><span class=\"sy1\">,</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># PROC exp =#</span><span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT self<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>    QUAT fac <span class=\"sy1\">:=</span> self<span class=\"sy1\">;</span><br/>    QUAT sum <span class=\"sy1\">:=</span> <span class=\"re1\">1.0</span> <span class=\"sy1\">+</span> fac<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> 2 <span class=\"kw2\">TO</span> <span class=\"kw20\">bits width</span> <span class=\"kw2\">WHILE</span> <span class=\"kw8\">ABS</span><span class=\"br0\">(</span>fac <span class=\"sy1\">+</span> quat small scal<span class=\"br0\">)</span> <span class=\"sy1\">/=</span> quat small scal <span class=\"kw2\">DO</span><br/>      <span class=\"kw3\">VOID</span><span class=\"br0\">(</span>sum <span class=\"sy1\">+:=</span> <span class=\"br0\">(</span>fac <span class=\"sy1\">*:=</span> self <span class=\"sy1\">/</span> <span class=\"coMULTI\">##</span>QUATSCAL<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    sum<br/>  <span class=\"br0\">)</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PRIO</span> INIT <span class=\"sy1\">=</span> 1<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> QUATSCALINIT <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUATSUBSCAL scal<span class=\"br0\">)</span>QUATSCAL<span class=\"sy1\">:</span> <br/>  <span class=\"kw2\">CASE</span> scal <span class=\"kw2\">IN</span><br/>    <span class=\"br0\">(</span><span class=\"kw3\">INT</span> scal<span class=\"br0\">)</span><span class=\"sy1\">:</span> scal<span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span><span class=\"kw4\">SHORT</span> <span class=\"kw3\">INT</span> scal<span class=\"br0\">)</span><span class=\"sy1\">:</span> scal<span class=\"sy1\">,</span><br/>    <span class=\"br0\">(</span><span class=\"kw4\">SHORT</span> <span class=\"kw3\">REAL</span> scal<span class=\"br0\">)</span><span class=\"sy1\">:</span> scal<br/>    <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span><span class=\"kw7\">SKIP</span><span class=\"sy1\">,</span><span class=\"st0\">\"in QUATSCALINIT\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>  <span class=\"kw2\">ESAC</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> INIT <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT new<span class=\"sy1\">,</span> SUBQUAT from<span class=\"br0\">)</span><span class=\"kw4\">REF</span> QUAT<span class=\"sy1\">:</span><br/>  new <span class=\"sy1\">:=</span> <br/>    <span class=\"kw2\">CASE</span> from <span class=\"kw2\">IN</span><br/>      <span class=\"br0\">(</span>QUATSUBSCAL scal<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"br0\">(</span>QUATSCALINIT scal<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 0<span class=\"br0\">)</span><br/>      <span class=\"coMULTI\">#(COQUAT rijk):(new OF class quat)(LOC QUAT\u00a0:= new, rijk[1], rijk[2], rijk[3], rijk[4]),#</span><br/>    <span class=\"kw2\">OUT</span> <span class=\"kw2\">IF</span> quat fix type error<span class=\"br0\">(</span><span class=\"kw7\">SKIP</span><span class=\"sy1\">,</span><span class=\"st0\">\"in INIT\"</span><span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"kw7\">SKIP</span> <span class=\"kw2\">ELSE</span> stop <span class=\"kw2\">FI</span><br/>    <span class=\"kw2\">ESAC</span><span class=\"sy1\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">OP</span> QUATINIT <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT lhs<span class=\"br0\">)</span><span class=\"kw4\">REF</span> QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span><span class=\"kw4\">HEAP</span> QUAT<span class=\"br0\">)</span>INIT lhs<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span>    <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT q<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>   q<span class=\"sy1\">,</span><br/>   <span class=\"sy1\">-</span>    <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT q<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>   <span class=\"br0\">(</span>neg  <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> q<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"kw8\">CONJ</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT q<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>   <span class=\"br0\">(</span>conjugate <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> q<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"kw8\">ABS</span>  <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT q<span class=\"br0\">)</span>QUATSCAL<span class=\"sy1\">:</span>   <span class=\"br0\">(</span>norm <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> q<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"kw8\">REPR</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT q<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span>repr <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> q<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># missing: Diadic: I, J, K END #</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> add <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">+:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> add <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">+=:</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> <span class=\"kw4\">REF</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> b<span class=\"sy1\">:=</span><span class=\"br0\">(</span>radd <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">+=:</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> <span class=\"kw4\">REF</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> b<span class=\"sy1\">:=</span><span class=\"br0\">(</span>radd <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># missing: Worthy PLUSAB, PLUSTO for SHORT/LONG INT QUATSCAL &amp; COMPL #</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> sub <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">-:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> sub <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># missing: Worthy MINUSAB for SHORT/LONG INT #</span><span class=\"coMULTI\">#COQUAT &amp; COMPL #</span><br/>\u00a0<br/><span class=\"kw4\">PRIO</span> <span class=\"sy1\">*=:</span> <span class=\"sy1\">=</span> 1<span class=\"sy1\">,</span> <span class=\"sy1\">/=:</span> <span class=\"sy1\">=</span> 1<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">*:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">*=:</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> <span class=\"kw4\">REF</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> b<span class=\"sy1\">:=</span><span class=\"br0\">(</span>rmul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">*=:</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> <span class=\"kw4\">REF</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> b<span class=\"sy1\">:=</span><span class=\"br0\">(</span>rmul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># missing: Worthy TIMESAB, TIMESTO for SHORT/LONG INT #</span><span class=\"coMULTI\">#COQUAT &amp; COMPL #</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">/:=</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> a<span class=\"sy1\">:=</span><span class=\"br0\">(</span> div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">/=:</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> <span class=\"kw4\">REF</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> b<span class=\"sy1\">:=</span><span class=\"br0\">(</span>rdiv <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">/=:</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> <span class=\"kw4\">REF</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> b<span class=\"sy1\">:=</span><span class=\"br0\">(</span>rdiv <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span>b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># missing: Worthy OVERAB, OVERTO for SHORT/LONG INT #</span><span class=\"coMULTI\">#COQUAT &amp; COMPL #</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>      <span class=\"br0\">(</span> add <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span> add <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">+</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span>radd <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>      <span class=\"br0\">(</span> sub <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span> sub <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">-</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:-</span><span class=\"br0\">(</span> sub <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>      <span class=\"br0\">(</span> mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span> mul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">*</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span>rmul <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> b<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">OP</span> <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>      <span class=\"br0\">(</span> div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT a<span class=\"sy1\">,</span> COQUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <span class=\"br0\">(</span> div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> a<span class=\"sy1\">,</span> b<span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"sy1\">/</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>COQUAT a<span class=\"sy1\">,</span> QUAT b<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span> <br/>         <span class=\"br0\">(</span> div <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> QUATINIT 1<span class=\"sy1\">,</span> a<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> quat <span class=\"kw24\">exp</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span>QUAT q<span class=\"br0\">)</span>QUAT<span class=\"sy1\">:</span>   <span class=\"br0\">(</span><span class=\"kw24\">exp</span> <span class=\"kw6\">OF</span> class quat<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">LOC</span> QUAT <span class=\"sy1\">:=</span> q<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw7\">SKIP</span> <span class=\"coMULTI\"># missing: quat arc{sin, cos, tan}h, log, exp, ln etc END #</span></pre>"}, {"lang": "ALGOL W", "loc": 102, "block": "<pre class=\"text highlighted_source\">begin<br/>   \u00a0% Quaternion record type                                                \u00a0%<br/>    record Quaternion ( real a, b, c, d );<br/>\u00a0<br/>   \u00a0% returns the norm of the specified quaternion                          \u00a0%<br/>    real procedure normQ ( reference(Quaternion) value q )\u00a0;<br/>        sqrt( (a(q) * a(q)) + (b(q) * b(q)) + (c(q) * c(q)) + (d(q) * d(q)) ); <br/>\u00a0<br/>   \u00a0% returns the negative of the specified quaternion                      \u00a0%<br/>    reference(Quaternion) procedure negQ ( reference(Quaternion) value q )\u00a0;<br/>        Quaternion( - a(q), - b(q), - c(q), - d(q) );<br/>\u00a0<br/>   \u00a0% returns the conjugate of the specified quaternion                     \u00a0%<br/>    reference(Quaternion) procedure conjQ ( reference(Quaternion) value q )\u00a0;<br/>        Quaternion(   a(q), - b(q), - c(q), - d(q) );<br/>\u00a0<br/>   \u00a0% returns the sum of a real and a quaternion                            \u00a0%<br/>    reference(Quaternion) procedure addRQ ( real                  value r<br/>                                         \u00a0; reference(Quaternion) value q<br/>                                          )\u00a0;<br/>        Quaternion( r + a(q), b(q), c(q), d(q) );<br/>\u00a0<br/>   \u00a0% returns the sum of a quaternion and a real                            \u00a0%<br/>    reference(Quaternion) procedure addQR ( reference(Quaternion) value q<br/>                                         \u00a0; real                  value r<br/>                                          )\u00a0;<br/>        Quaternion( r + a(q), b(q), c(q), d(q) );<br/>\u00a0<br/>   \u00a0% returns the sum of the specified quaternions                          \u00a0%<br/>    reference(Quaternion) procedure addQQ ( reference(Quaternion) value q1<br/>                                         \u00a0; reference(Quaternion) value q2<br/>                                          )\u00a0;<br/>        Quaternion( a(q1) + a(q2), b(q1) + b(q2), c(q1) + c(q2), d(q1) + d(q2) );<br/>\u00a0<br/>   \u00a0% returns the specified quaternion multiplied by a real                 \u00a0%<br/>    reference(Quaternion) procedure mulQR ( reference(Quaternion) value q<br/>                                         \u00a0; real                  value r<br/>                                          )\u00a0;<br/>        Quaternion( r * a(q), r * b(q), r * c(q), r * d(q) );<br/>\u00a0<br/>   \u00a0% returns a real multiplied by the specified quaternion                 \u00a0%<br/>    reference(Quaternion) procedure mulRQ ( real                  value r<br/>                                         \u00a0; reference(Quaternion) value q<br/>                                          )\u00a0;<br/>        mulQR( q, r );<br/>\u00a0<br/>   \u00a0% returns the Quaternion product of the specified quaternions           \u00a0%<br/>    reference(Quaternion) procedure mulQQ( reference(Quaternion) value q1<br/>                                        \u00a0; reference(Quaternion) value q2<br/>                                         )\u00a0;<br/>        Quaternion( (a(q1) * a(q2)) - (b(q1) * b(q2)) - (c(q1) * c(q2)) - (d(q1) * d(q2))<br/>                  , (a(q1) * b(q2)) + (b(q1) * a(q2)) + (c(q1) * d(q2)) - (d(q1) * c(q2))<br/>                  , (a(q1) * c(q2)) - (b(q1) * d(q2)) + (c(q1) * a(q2)) + (d(q1) * b(q2))<br/>                  , (a(q1) * d(q2)) + (b(q1) * c(q2)) - (c(q1) * b(q2)) + (d(q1) * a(q2))<br/>                  );<br/>\u00a0<br/>   \u00a0% returns true if the two quaternions are equal, false otherwise        \u00a0%<br/>    logical procedure equalQ( reference(Quaternion) value q1<br/>                           \u00a0; reference(Quaternion) value q2<br/>                            )\u00a0;<br/>        a(q1) = a(q2) and b(q1) = b(q2) and c(q1) = c(q2) and d(q1) = d(q2);<br/>\u00a0<br/>   \u00a0% writes a quaternion                                                   \u00a0%<br/>    procedure writeonQ( reference(Quaternion) value q )\u00a0;<br/>        writeon( \"(\", a(q), \", \", b(q), \", \", c(q), \", \", d(q), \")\" );<br/>\u00a0<br/>\u00a0<br/>   \u00a0% test q1q2 = q2q1                                                      \u00a0%<br/>    reference(Quaternion) q, q1, q2;<br/>\u00a0<br/>    q \u00a0:= Quaternion( 1, 2, 3, 4 );<br/>    q1\u00a0:= Quaternion( 2, 3, 4, 5 );<br/>    q2\u00a0:= Quaternion( 3, 4, 5, 6 );<br/>\u00a0<br/>   \u00a0% set output format                                                     \u00a0%<br/>    s_w\u00a0:= 0; r_format\u00a0:= \"A\"; r_w\u00a0:= 5; r_d\u00a0:= 1;<br/>\u00a0<br/>    write( \"      q:\" );writeonQ( q );<br/>    write( \"     q1:\" );writeonQ( q1 );<br/>    write( \"     q2:\" );writeonQ( q2 );<br/>    write( \"norm  q:\" );writeon( normQ( q ) );<br/>    write( \"norm q1:\" );writeon( normQ( q1 ) );<br/>    write( \"norm q2:\" );writeon( normQ( q2 ) );<br/>\u00a0<br/>    write( \" conj q:\" );writeonQ( conjQ( q ) );<br/>    write( \"    - q:\" );writeonQ( negQ( q ) );<br/>    write( \"  7 + q:\" );writeonQ( addRQ( 7, q ) );<br/>    write( \"  q + 9:\" );writeonQ( addQR( q, 9 ) );<br/>    write( \" q + q1:\" );writeonQ( addQQ( q, q1 ) );<br/>    write( \"  3 * q:\" );writeonQ( mulRQ( 3, q ) );<br/>    write( \"  q * 4:\" );writeonQ( mulQR( q, 4 ) );<br/>\u00a0<br/>   \u00a0% check that q1q2 not = q2q1                                            \u00a0%<br/>    if equalQ( mulQQ( q1, q2 ), mulQQ( q2, q1 ) )<br/>    then write( \"q1q2 = q2q1\u00a0??\" )<br/>    else write( \"q1q2 &lt;&gt; q2q1\" );<br/>\u00a0<br/>    write( \"   q1q2:\" );writeonQ( mulQQ( q1, q2 ) );<br/>    write( \"   q2q1:\" );writeonQ( mulQQ( q2, q1 ) );<br/>\u00a0<br/>end.<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 72, "block": "<pre class=\"autohotkey highlighted_source\">q  <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>q1 <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><br/>q2 <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><br/>r <span class=\"sy0\">:=</span> <span class=\"nu0\">7</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span>\u00a0% <span class=\"st0\">\"q = \"</span> PrintQ<span class=\"br0\">(</span>q<span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq1 = \"</span> PrintQ<span class=\"br0\">(</span>q1<span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq2 = \"</span> PrintQ<span class=\"br0\">(</span>q2<span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nr = \"</span> r<br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nNorm(q) = \"</span> Norm<span class=\"br0\">(</span>q<span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nNegative(q) = \"</span> PrintQ<span class=\"br0\">(</span>Negative<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nConjugate(q) = \"</span> PrintQ<span class=\"br0\">(</span>Conjugate<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq + r = \"</span> PrintQ<span class=\"br0\">(</span>AddR<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> r<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq1 + q2 = \"</span> PrintQ<span class=\"br0\">(</span>AddQ<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span> q2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq2 + q1 = \"</span> PrintQ<span class=\"br0\">(</span>AddQ<span class=\"br0\">(</span>q2<span class=\"sy0\">,</span> q1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nqr = \"</span> PrintQ<span class=\"br0\">(</span>MulR<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> r<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq1q2 = \"</span> PrintQ<span class=\"br0\">(</span>MulQ<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span> q2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"sy0\">.</span> <span class=\"st0\">\"`nq2q1 = \"</span> PrintQ<span class=\"br0\">(</span>MulQ<span class=\"br0\">(</span>q2<span class=\"sy0\">,</span> q1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>Norm<span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">sqrt</span></a><span class=\"br0\">(</span>q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Negative<span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\tfor k<span class=\"sy0\">,</span> v in q<br/>\t\ta<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> v <span class=\"sy0\">*</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>Conjugate<span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\tfor k<span class=\"sy0\">,</span> v in q<br/>\t\ta<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> v <span class=\"sy0\">*</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\u00a0? <span class=\"nu0\">1</span>\u00a0: <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>AddR<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\tfor k<span class=\"sy0\">,</span> v in q <br/>\t\ta<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> v <span class=\"sy0\">+</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\u00a0? r\u00a0: <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>AddQ<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span> q2<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\tfor k<span class=\"sy0\">,</span> v in q1<br/>\t\ta<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> v <span class=\"sy0\">+</span> q2<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>MulR<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\tfor k<span class=\"sy0\">,</span> v in q<br/>\t\ta<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> v <span class=\"sy0\">*</span> r<br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>MulQ<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> u<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\t<span class=\"sy0\">,</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\t<span class=\"sy0\">,</span> a<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><br/>\t<span class=\"sy0\">,</span> a<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>\t<span class=\"sy0\">,</span> a<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>u<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">return</span> a<br/><span class=\"br0\">}</span><br/>\u00a0<br/>PrintQ<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> b<span class=\"sy0\">=</span><span class=\"st0\">\"(\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tfor k<span class=\"sy0\">,</span> v in q<br/>\t\tb <span class=\"sy0\">.=</span> v <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>MaxIndex<span class=\"br0\">(</span><span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\")\"</span>\u00a0: <span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> b<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Axiom", "loc": 48, "block": "<pre class=\"text highlighted_source\">qi\u00a0:= quatern$Quaternion(Integer);<br/>\u00a0<br/>             Type: ((Integer,Integer,Integer,Integer) -&gt; Quaternion(Integer))<br/>q \u00a0:= qi(1,2,3,4);<br/>\u00a0<br/>                                                    Type: Quaternion(Integer)<br/>q1\u00a0:= qi(2,3,4,5);<br/>\u00a0<br/>                                                    Type: Quaternion(Integer)<br/>q2\u00a0:= qi(3,4,5,6);<br/>\u00a0<br/>                                                    Type: Quaternion(Integer)<br/>r\u00a0: Integer\u00a0:= 7;<br/>\u00a0<br/>                                                                Type: Integer<br/>sqrt norm q<br/>\u00a0<br/>         +--+<br/>   (6)  \\|30<br/>                                                        Type: AlgebraicNumber<br/>-q<br/>\u00a0<br/>   (7)  - 1 - 2i - 3j - 4k<br/>                                                    Type: Quaternion(Integer)<br/>conjugate q<br/>\u00a0<br/>   (8)  1 - 2i - 3j - 4k<br/>                                                    Type: Quaternion(Integer)<br/>r + q<br/>\u00a0<br/>   (9)  8 + 2i + 3j + 4k<br/>                                                    Type: Quaternion(Integer)<br/>q1 + q2<br/>\u00a0<br/>   (10)  5 + 7i + 9j + 11k<br/>                                                    Type: Quaternion(Integer)<br/>q*r<br/>\u00a0<br/>   (11)  7 + 14i + 21j + 28k<br/>                                                    Type: Quaternion(Integer)<br/>r*q<br/>\u00a0<br/>   (12)  7 + 14i + 21j + 28k<br/>                                                    Type: Quaternion(Integer)<br/>q1*q2 ~= q2*q1<br/>\u00a0<br/>   (13)  true<br/>                                                                Type: Boolean</pre>"}, {"lang": "BBC BASIC", "loc": 42, "block": "<pre class=\"text highlighted_source\">      DIM q(3), q1(3), q2(3), t(3)<br/>      q() = 1, 2, 3, 4<br/>      q1() = 2, 3, 4, 5<br/>      q2() = 3, 4, 5, 6<br/>      r = 7<br/>\u00a0<br/>      PRINT \"q = \" FNq_show(q())<br/>      PRINT \"q1 = \" FNq_show(q1())<br/>      PRINT \"q2 = \" FNq_show(q2())<br/>      PRINT \"r = \"; r<br/>      PRINT \"norm(q) = \"; FNq_norm(q())<br/>      t() = q()\u00a0: PROCq_neg(t())\u00a0: PRINT \"neg(q) = \" FNq_show(t())<br/>      t() = q()\u00a0: PROCq_conj(t())\u00a0: PRINT \"conjugate(q) = \" FNq_show(t())<br/>      t() = q()\u00a0: PROCq_addreal(t(),r)\u00a0: PRINT \"q + r = \" FNq_show(t())<br/>      t() = q1()\u00a0: PROCq_add(t(),q2())\u00a0: PRINT \"q1 + q2 = \" FNq_show(t())<br/>      t() = q2()\u00a0: PROCq_add(t(),q1())\u00a0: PRINT \"q2 + q1 = \" FNq_show(t())<br/>      t() = q()\u00a0: PROCq_mulreal(t(),r)\u00a0: PRINT \"qr = \" FNq_show(t())<br/>      t() = q1()\u00a0: PROCq_mul(t(),q2())\u00a0: PRINT \"q1q2 = \" FNq_show(t())<br/>      t() = q2()\u00a0: PROCq_mul(t(),q1())\u00a0: PRINT \"q2q1 = \" FNq_show(t())<br/>      END<br/>\u00a0<br/>      DEF FNq_norm(q()) = MOD(q())<br/>\u00a0<br/>      DEF PROCq_neg(q())\u00a0: q() *= -1\u00a0: ENDPROC<br/>\u00a0<br/>      DEF PROCq_conj(q())\u00a0: q() *= -1\u00a0: q(0) *= -1\u00a0: ENDPROC<br/>\u00a0<br/>      DEF PROCq_addreal(q(), r)\u00a0: q(0) += r\u00a0: ENDPROC<br/>\u00a0<br/>      DEF PROCq_add(q(), r())\u00a0: q() += r()\u00a0: ENDPROC<br/>\u00a0<br/>      DEF PROCq_mulreal(q(), r)\u00a0: q() *= r\u00a0: ENDPROC<br/>\u00a0<br/>      DEF PROCq_mul(q(), r())\u00a0: LOCAL s()\u00a0: DIM s(3,3)<br/>      s() = r(0), -r(1), -r(2), -r(3), r(1), r(0),  r(3), -r(2), \\<br/>      \\     r(2), -r(3),  r(0),  r(1), r(3), r(2), -r(1),  r(0)<br/>      q() = s() . q()<br/>      ENDPROC<br/>\u00a0<br/>      DEF FNq_show(q())\u00a0: LOCAL i%, a$\u00a0: a$ = \"(\"<br/>      FOR i% = 0 TO 3\u00a0: a$ += STR$(q(i%)) + \", \"\u00a0: NEXT<br/>      = LEFT$(LEFT$(a$)) + \")\"</pre>"}, {"lang": "C", "loc": 131, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;stdbool.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> quaternion<br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">double</span> q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> quaternion_t<span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/>quaternion_t <span class=\"sy0\">*</span>quaternion_new<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>quaternion_t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>quaternion_t <span class=\"sy0\">*</span>quaternion_new_set<span class=\"br0\">(</span><span class=\"kw4\">double</span> q1<span class=\"sy0\">,</span><br/>\t\t\t\t <span class=\"kw4\">double</span> q2<span class=\"sy0\">,</span><br/>\t\t\t\t <span class=\"kw4\">double</span> q3<span class=\"sy0\">,</span><br/>\t\t\t\t <span class=\"kw4\">double</span> q4<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  quaternion_t <span class=\"sy0\">*</span>q <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>quaternion_t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>q <span class=\"sy0\">!=</span> NULL<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> q1<span class=\"sy0\">;</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> q2<span class=\"sy0\">;</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> q3<span class=\"sy0\">;</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> q4<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> q<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_copy<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> q <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">double</span> quaternion_norm<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">double</span> r <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>q <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span> <span class=\"st0\">\"NULL quaternion in norm<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> r <span class=\"sy0\">+=</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_neg<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>q <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> r <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_conj<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>q <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> r <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_add_d<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>q<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> d<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>q <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> r <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  quaternion_copy<span class=\"br0\">(</span>r<span class=\"sy0\">,</span> q<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+=</span> d<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_add<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>a<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> a <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> b <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_mul_d<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>q<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> d<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> q <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> r<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> d<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>bool quaternion_equal<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>a<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> b<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co2\">#define A(N) (a-&gt;q[(N)])</span><br/><span class=\"co2\">#define B(N) (b-&gt;q[(N)])</span><br/><span class=\"co2\">#define R(N) (r-&gt;q[(N)])</span><br/><span class=\"kw4\">void</span> quaternion_mul<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>r<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>a<span class=\"sy0\">,</span> quaternion_t <span class=\"sy0\">*</span>b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">size_t</span> i<span class=\"sy0\">;</span><br/>  <span class=\"kw4\">double</span> ri <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> a <span class=\"sy0\">==</span> NULL <span class=\"sy0\">||</span> b <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  R<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> A<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> A<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> A<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  R<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> A<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  R<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> A<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  R<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> A<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>B<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co2\">#undef A</span><br/><span class=\"co2\">#undef B</span><br/><span class=\"co2\">#undef R</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> quaternion_print<span class=\"br0\">(</span>quaternion_t <span class=\"sy0\">*</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>q <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"(%lf,\u00a0%lf,\u00a0%lf,\u00a0%lf)<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <br/>\t q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> q<span class=\"sy0\">-&gt;</span>q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 116, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T <span class=\"sy1\">=</span> <span class=\"kw4\">double</span><span class=\"sy1\">&gt;</span><br/><span class=\"kw2\">class</span> Quaternion<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>  T w, x, y, z<span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Numerical constructor</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>w, <span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>x, <span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>y, <span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>z<span class=\"br0\">)</span><span class=\"sy4\">:</span> w<span class=\"br0\">(</span>w<span class=\"br0\">)</span>, x<span class=\"br0\">(</span>x<span class=\"br0\">)</span>, y<span class=\"br0\">(</span>y<span class=\"br0\">)</span>, z<span class=\"br0\">(</span>z<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>x, <span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>y, <span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>z<span class=\"br0\">)</span><span class=\"sy4\">:</span> w<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, x<span class=\"br0\">(</span>x<span class=\"br0\">)</span>, y<span class=\"br0\">(</span>y<span class=\"br0\">)</span>, z<span class=\"br0\">(</span>z<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;</span> <span class=\"co1\">// For 3-rotations</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span><span class=\"sy4\">:</span> w<span class=\"br0\">(</span>r<span class=\"br0\">)</span>, x<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, y<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, z<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">:</span> w<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, x<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, y<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>, z<span class=\"br0\">(</span>T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Copy constructor and assignment</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><span class=\"sy4\">:</span> w<span class=\"br0\">(</span>q.<span class=\"me1\">w</span><span class=\"br0\">)</span>, x<span class=\"br0\">(</span>q.<span class=\"me1\">x</span><span class=\"br0\">)</span>, y<span class=\"br0\">(</span>q.<span class=\"me1\">y</span><span class=\"br0\">)</span>, z<span class=\"br0\">(</span>q.<span class=\"me1\">z</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"br0\">{</span> w<span class=\"sy1\">=</span>q.<span class=\"me1\">w</span><span class=\"sy4\">;</span> x<span class=\"sy1\">=</span>q.<span class=\"me1\">x</span><span class=\"sy4\">;</span> y<span class=\"sy1\">=</span>q.<span class=\"me1\">y</span><span class=\"sy4\">;</span> z<span class=\"sy1\">=</span>q.<span class=\"me1\">z</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// Unary operators</span><br/>  Quaternion operator<span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">-</span>w, <span class=\"sy2\">-</span>x, <span class=\"sy2\">-</span>y, <span class=\"sy2\">-</span>z<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator~<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>w, <span class=\"sy2\">-</span>x, <span class=\"sy2\">-</span>y, <span class=\"sy2\">-</span>z<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span> <span class=\"co1\">// Conjugate</span><br/>\u00a0<br/>  <span class=\"co1\">// Norm-squared. SQRT would have to be made generic to be used here</span><br/>  T normSquared<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> w<span class=\"sy2\">*</span>w <span class=\"sy2\">+</span> x<span class=\"sy2\">*</span>x <span class=\"sy2\">+</span> y<span class=\"sy2\">*</span>y <span class=\"sy2\">+</span> z<span class=\"sy2\">*</span>z<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// In-place operators</span><br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">+</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span> w <span class=\"sy2\">+</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">+</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span> w <span class=\"sy2\">+</span><span class=\"sy1\">=</span> q.<span class=\"me1\">w</span><span class=\"sy4\">;</span> x <span class=\"sy2\">+</span><span class=\"sy1\">=</span> q.<span class=\"me1\">x</span><span class=\"sy4\">;</span> y <span class=\"sy2\">+</span><span class=\"sy1\">=</span> q.<span class=\"me1\">y</span><span class=\"sy4\">;</span> z <span class=\"sy2\">+</span><span class=\"sy1\">=</span> q.<span class=\"me1\">z</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">-</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span> w <span class=\"sy2\">-</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">-</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span> w <span class=\"sy2\">-</span><span class=\"sy1\">=</span> q.<span class=\"me1\">w</span><span class=\"sy4\">;</span> x <span class=\"sy2\">-</span><span class=\"sy1\">=</span> q.<span class=\"me1\">x</span><span class=\"sy4\">;</span> y <span class=\"sy2\">-</span><span class=\"sy1\">=</span> q.<span class=\"me1\">y</span><span class=\"sy4\">;</span> z <span class=\"sy2\">-</span><span class=\"sy1\">=</span> q.<span class=\"me1\">z</span><span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">*</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span> w <span class=\"sy2\">*</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> x <span class=\"sy2\">*</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> y <span class=\"sy2\">*</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> z <span class=\"sy2\">*</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">*</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <br/>  <span class=\"br0\">{</span> <br/>    T oldW<span class=\"br0\">(</span>w<span class=\"br0\">)</span>, oldX<span class=\"br0\">(</span>x<span class=\"br0\">)</span>, oldY<span class=\"br0\">(</span>y<span class=\"br0\">)</span>, oldZ<span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    w <span class=\"sy1\">=</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">-</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span> <span class=\"sy2\">-</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span><span class=\"sy4\">;</span><br/>    x <span class=\"sy1\">=</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span> <span class=\"sy2\">+</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">+</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span> <span class=\"sy2\">-</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span><span class=\"sy4\">;</span><br/>    y <span class=\"sy1\">=</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span> <span class=\"sy2\">+</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">+</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span><span class=\"sy4\">;</span><br/>    z <span class=\"sy1\">=</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span> <span class=\"sy2\">+</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">+</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span> <span class=\"sy2\">-</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">/</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span> w <span class=\"sy2\">/</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> x <span class=\"sy2\">/</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> y <span class=\"sy2\">/</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> z <span class=\"sy2\">/</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion<span class=\"sy3\">&amp;</span> operator<span class=\"sy2\">/</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <br/>  <span class=\"br0\">{</span> <br/>    T oldW<span class=\"br0\">(</span>w<span class=\"br0\">)</span>, oldX<span class=\"br0\">(</span>x<span class=\"br0\">)</span>, oldY<span class=\"br0\">(</span>y<span class=\"br0\">)</span>, oldZ<span class=\"br0\">(</span>z<span class=\"br0\">)</span>, n<span class=\"br0\">(</span>q.<span class=\"me1\">normSquared</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    w <span class=\"sy1\">=</span> <span class=\"br0\">(</span>oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">+</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span> <span class=\"sy2\">+</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span> <span class=\"sy2\">+</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span> n<span class=\"sy4\">;</span><br/>    x <span class=\"sy1\">=</span> <span class=\"br0\">(</span>oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">-</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span> <span class=\"sy2\">+</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span> <span class=\"sy2\">-</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span> n<span class=\"sy4\">;</span><br/>    y <span class=\"sy1\">=</span> <span class=\"br0\">(</span>oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">-</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span> <span class=\"sy2\">+</span> oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span> <span class=\"sy2\">-</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span> n<span class=\"sy4\">;</span><br/>    z <span class=\"sy1\">=</span> <span class=\"br0\">(</span>oldZ<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span> <span class=\"sy2\">-</span> oldW<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span> <span class=\"sy2\">+</span> oldX<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span> <span class=\"sy2\">-</span> oldY<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span> n<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// Binary operators based on in-place operators</span><br/>  Quaternion operator<span class=\"sy2\">+</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">+</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span><span class=\"sy1\">=</span> q<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">-</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">-</span><span class=\"sy1\">=</span> q<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">*</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">*</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">*</span><span class=\"sy1\">=</span> q<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span><span class=\"sy1\">=</span> r<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  Quaternion operator<span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"br0\">)</span> <span class=\"sy2\">/</span><span class=\"sy1\">=</span> q<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// Comparison operators, as much as they make sense</span><br/>  <span class=\"kw4\">bool</span> operator<span class=\"sy1\">==</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <br/>    <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>w <span class=\"sy1\">==</span> q.<span class=\"me1\">w</span><span class=\"br0\">)</span> <span class=\"sy3\">&amp;&amp;</span> <span class=\"br0\">(</span>x <span class=\"sy1\">==</span> q.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy3\">&amp;&amp;</span> <span class=\"br0\">(</span>y <span class=\"sy1\">==</span> q.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy3\">&amp;&amp;</span> <span class=\"br0\">(</span>z <span class=\"sy1\">==</span> q.<span class=\"me1\">z</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw4\">bool</span> operator<span class=\"sy3\">!</span><span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> Quaternion <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"sy3\">!</span>operator<span class=\"sy1\">==</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// The operators above allow quaternion op real. These allow real op quaternion.</span><br/>  <span class=\"co1\">// Uses the above where appropriate.</span><br/>  <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span> <span class=\"kw2\">friend</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">+</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span> <span class=\"kw2\">friend</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span> <span class=\"kw2\">friend</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">*</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span> <span class=\"kw2\">friend</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Allows cout &lt;&lt; q </span><br/>  <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span> <span class=\"kw2\">friend</span> ostream<span class=\"sy3\">&amp;</span> operator<span class=\"sy1\">&lt;&lt;</span><span class=\"br0\">(</span>ostream <span class=\"sy3\">&amp;</span>io, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">// Friend functions need to be outside the actual class definition</span><br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/>Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">+</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <br/>  <span class=\"br0\">{</span> <span class=\"kw1\">return</span> q<span class=\"sy2\">+</span>r<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/>Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">-</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span> <span class=\"kw1\">return</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>r<span class=\"sy2\">-</span>q.<span class=\"me1\">w</span>, q.<span class=\"me1\">x</span>, q.<span class=\"me1\">y</span>, q.<span class=\"me1\">z</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/>Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">*</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span> <br/>  <span class=\"br0\">{</span> <span class=\"kw1\">return</span> q<span class=\"sy2\">*</span>r<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/>Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> operator<span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T <span class=\"sy3\">&amp;</span>r, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  T n<span class=\"br0\">(</span>q.<span class=\"me1\">normSquared</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>r<span class=\"sy2\">*</span>q.<span class=\"me1\">w</span><span class=\"sy2\">/</span>n, <span class=\"sy2\">-</span>r<span class=\"sy2\">*</span>q.<span class=\"me1\">x</span><span class=\"sy2\">/</span>n, <span class=\"sy2\">-</span>r<span class=\"sy2\">*</span>q.<span class=\"me1\">y</span><span class=\"sy2\">/</span>n, <span class=\"sy2\">-</span>r<span class=\"sy2\">*</span>q.<span class=\"me1\">z</span><span class=\"sy2\">/</span>n<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/>ostream<span class=\"sy3\">&amp;</span> operator<span class=\"sy1\">&lt;&lt;</span><span class=\"br0\">(</span>ostream <span class=\"sy3\">&amp;</span>io, <span class=\"kw4\">const</span> Quaternion<span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span> <span class=\"sy3\">&amp;</span>q<span class=\"br0\">)</span><br/><span class=\"br0\">{</span> <br/>  io <span class=\"sy1\">&lt;&lt;</span> q.<span class=\"me1\">w</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">(</span>q.<span class=\"me1\">x</span> <span class=\"sy1\">&lt;</span> T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy4\">?</span> <span class=\"br0\">(</span>io <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" - \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span><span class=\"sy2\">-</span>q.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"i\"</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> <span class=\"br0\">(</span>io <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" + \"</span> <span class=\"sy1\">&lt;&lt;</span> q.<span class=\"me1\">x</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"i\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">(</span>q.<span class=\"me1\">y</span> <span class=\"sy1\">&lt;</span> T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy4\">?</span> <span class=\"br0\">(</span>io <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" - \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span><span class=\"sy2\">-</span>q.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"j\"</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> <span class=\"br0\">(</span>io <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" + \"</span> <span class=\"sy1\">&lt;&lt;</span> q.<span class=\"me1\">y</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"j\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">(</span>q.<span class=\"me1\">z</span> <span class=\"sy1\">&lt;</span> T<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy4\">?</span> <span class=\"br0\">(</span>io <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" - \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span><span class=\"sy2\">-</span>q.<span class=\"me1\">z</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"k\"</span><span class=\"br0\">)</span> <span class=\"sy4\">:</span> <span class=\"br0\">(</span>io <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" + \"</span> <span class=\"sy1\">&lt;&lt;</span> q.<span class=\"me1\">z</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"k\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">return</span> io<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 90, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Quaternion <span class=\"sy0\">:</span> IEquatable<span class=\"sy0\">&lt;</span>Quaternion<span class=\"sy0\">&gt;</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">readonly</span> <span class=\"kw4\">double</span> A, B, C, D<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion<span class=\"br0\">(</span><span class=\"kw4\">double</span> a, <span class=\"kw4\">double</span> b, <span class=\"kw4\">double</span> c, <span class=\"kw4\">double</span> d<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">=</span> d<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> Norm<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Sqrt</span><span class=\"br0\">(</span>A <span class=\"sy0\">*</span> A <span class=\"sy0\">+</span> B <span class=\"sy0\">*</span> B <span class=\"sy0\">+</span> C <span class=\"sy0\">*</span> C <span class=\"sy0\">+</span> D <span class=\"sy0\">*</span> D<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion <span class=\"kw1\">operator</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>Quaternion q<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Quaternion<span class=\"br0\">(</span><span class=\"sy0\">-</span>q<span class=\"sy0\">.</span><span class=\"me1\">A</span>, <span class=\"sy0\">-</span>q<span class=\"sy0\">.</span><span class=\"me1\">B</span>, <span class=\"sy0\">-</span>q<span class=\"sy0\">.</span><span class=\"me1\">C</span>, <span class=\"sy0\">-</span>q<span class=\"sy0\">.</span><span class=\"me1\">D</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion Conjugate<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Quaternion<span class=\"br0\">(</span>A, <span class=\"sy0\">-</span>B, <span class=\"sy0\">-</span>C, <span class=\"sy0\">-</span>D<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// implicit conversion takes care of real*quaternion and real+quaternion</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw1\">implicit</span> <span class=\"kw1\">operator</span> Quaternion<span class=\"br0\">(</span><span class=\"kw4\">double</span> d<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Quaternion<span class=\"br0\">(</span>d, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion <span class=\"kw1\">operator</span> <span class=\"sy0\">+</span><span class=\"br0\">(</span>Quaternion q1, Quaternion q2<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Quaternion<span class=\"br0\">(</span>q1<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">+</span> q2<span class=\"sy0\">.</span><span class=\"me1\">A</span>, q1<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">+</span> q2<span class=\"sy0\">.</span><span class=\"me1\">B</span>, q1<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">+</span> q2<span class=\"sy0\">.</span><span class=\"me1\">C</span>, q1<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">+</span> q2<span class=\"sy0\">.</span><span class=\"me1\">D</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion <span class=\"kw1\">operator</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>Quaternion q1, Quaternion q2<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Quaternion<span class=\"br0\">(</span><br/>            q1<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">-</span> q1<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">-</span> q1<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">-</span> q1<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">D</span>,<br/>            q1<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">+</span> q1<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">+</span> q1<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">-</span> q1<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">C</span>,<br/>            q1<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">-</span> q1<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">+</span> q1<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">+</span> q1<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">B</span>,<br/>            q1<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">+</span> q1<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">-</span> q1<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">+</span> q1<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2<span class=\"sy0\">.</span><span class=\"me1\">A</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">bool</span> <span class=\"kw1\">operator</span> <span class=\"sy0\">==</span><span class=\"br0\">(</span>Quaternion q1, Quaternion q2<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q1<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">==</span> q2<span class=\"sy0\">.</span><span class=\"me1\">A</span> <span class=\"sy0\">&amp;&amp;</span> q1<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">==</span> q2<span class=\"sy0\">.</span><span class=\"me1\">B</span> <span class=\"sy0\">&amp;&amp;</span> q1<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">==</span> q2<span class=\"sy0\">.</span><span class=\"me1\">C</span> <span class=\"sy0\">&amp;&amp;</span> q1<span class=\"sy0\">.</span><span class=\"me1\">D</span> <span class=\"sy0\">==</span> q2<span class=\"sy0\">.</span><span class=\"me1\">D</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">bool</span> <span class=\"kw1\">operator</span> <span class=\"sy0\">!=</span><span class=\"br0\">(</span>Quaternion q1, Quaternion q2<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">!</span><span class=\"br0\">(</span>q1 <span class=\"sy0\">==</span> q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">#region Object Members</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">bool</span> Equals<span class=\"br0\">(</span><span class=\"kw4\">object</span> obj<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>obj <a href=\"http://www.google.com/search?q=is+msdn.microsoft.com\"><span class=\"kw3\">is</span></a> Quaternion<span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> Equals<span class=\"br0\">(</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">int</span> GetHashCode<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> A<span class=\"sy0\">.</span><span class=\"me1\">GetHashCode</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">^</span> B<span class=\"sy0\">.</span><span class=\"me1\">GetHashCode</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">^</span> C<span class=\"sy0\">.</span><span class=\"me1\">GetHashCode</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">^</span> D<span class=\"sy0\">.</span><span class=\"me1\">GetHashCode</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">string</span> ToString<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Format</span><span class=\"br0\">(</span><span class=\"st0\">\"Q({0}, {1}, {2}, {3})\"</span>, A, B, C, D<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">#endregion</span><br/>\u00a0<br/>    <span class=\"co2\">#region IEquatable&lt;Quaternion&gt; Members</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">bool</span> Equals<span class=\"br0\">(</span>Quaternion other<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> other <span class=\"sy0\">==</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">#endregion</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 79, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>defclass quaternion <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>a <span class=\"sy0\">:</span><span class=\"me1\">accessor</span> q-a <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">a</span> <span class=\"sy0\">:</span><span class=\"me1\">type</span> real<span class=\"br0\">)</span><br/>                         <span class=\"br0\">(</span>b <span class=\"sy0\">:</span><span class=\"me1\">accessor</span> q-b <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">b</span> <span class=\"sy0\">:</span><span class=\"me1\">type</span> real<span class=\"br0\">)</span><br/>                         <span class=\"br0\">(</span>c <span class=\"sy0\">:</span><span class=\"me1\">accessor</span> q-c <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">c</span> <span class=\"sy0\">:</span><span class=\"me1\">type</span> real<span class=\"br0\">)</span><br/>                         <span class=\"br0\">(</span>d <span class=\"sy0\">:</span><span class=\"me1\">accessor</span> q-d <span class=\"sy0\">:</span><span class=\"me1\">initarg</span> <span class=\"sy0\">:</span><span class=\"me1\">d</span> <span class=\"sy0\">:</span><span class=\"me1\">type</span> real<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">default-initargs</span> <span class=\"sy0\">:</span><span class=\"me1\">a</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span><span class=\"me1\">b</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span><span class=\"me1\">c</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span><span class=\"me1\">d</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> make-q <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>a <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>b <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>c <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>d <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-instance 'quaternion <span class=\"sy0\">:</span><span class=\"me1\">a</span> a <span class=\"sy0\">:</span><span class=\"me1\">b</span> b <span class=\"sy0\">:</span><span class=\"me1\">c</span> c <span class=\"sy0\">:</span><span class=\"me1\">d</span> d<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defgeneric sum <span class=\"br0\">(</span>x y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod sum <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> <span class=\"br0\">(</span>y quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod sum <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> <span class=\"br0\">(</span>y real<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> y<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod sum <span class=\"br0\">(</span><span class=\"br0\">(</span>x real<span class=\"br0\">)</span> <span class=\"br0\">(</span>y quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span> x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defgeneric sub <span class=\"br0\">(</span>x y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod sub <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> <span class=\"br0\">(</span>y quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>- <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>- <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>- <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>- <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod sub <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> <span class=\"br0\">(</span>y real<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>- <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> y<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod sub <span class=\"br0\">(</span><span class=\"br0\">(</span>x real<span class=\"br0\">)</span> <span class=\"br0\">(</span>y quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>- <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span> x<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defgeneric mul <span class=\"br0\">(</span>x y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod mul <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> <span class=\"br0\">(</span>y real<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> y<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> y<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> y<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod mul <span class=\"br0\">(</span><span class=\"br0\">(</span>x real<span class=\"br0\">)</span> <span class=\"br0\">(</span>y quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span> x<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span> x<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span> x<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod mul <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> <span class=\"br0\">(</span>y quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>make-q  <span class=\"br0\">(</span>- <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>- <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>- <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>- <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-a y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod norm <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>+ <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defmethod print-object <span class=\"br0\">(</span><span class=\"br0\">(</span>x quaternion<span class=\"br0\">)</span> stream<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>format stream <span class=\"st0\">\"<a class=\"__cf_email__\" data-cfemail=\"9ae4dafc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><a class=\"__cf_email__\" data-cfemail=\"ef91af8986\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><a class=\"__cf_email__\" data-cfemail=\"d2ac92b4b8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><a class=\"__cf_email__\" data-cfemail=\"5a241a3c31\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\"</span> <span class=\"br0\">(</span>q-a x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-b x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-c x<span class=\"br0\">)</span> <span class=\"br0\">(</span>q-d x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defvar q <span class=\"br0\">(</span>make-q <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>defvar q1 <span class=\"br0\">(</span>make-q <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>defvar q2 <span class=\"br0\">(</span>make-q <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>defvar r <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"q+q1+q2 = ~a~&amp;\"</span> <span class=\"br0\">(</span>reduce #'sum <span class=\"br0\">(</span><span class=\"kw1\">list</span> q q1 q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"r*(q+q1+q2) = ~a~&amp;\"</span> <span class=\"br0\">(</span>mul r <span class=\"br0\">(</span>reduce #'sum <span class=\"br0\">(</span><span class=\"kw1\">list</span> q q1 q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"q*q1*q2 = ~a~&amp;\"</span> <span class=\"br0\">(</span>reduce #'mul <span class=\"br0\">(</span><span class=\"kw1\">list</span> q q1 q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>format t <span class=\"st0\">\"q-q1-q2 = ~a~&amp;\"</span> <span class=\"br0\">(</span>reduce #'sub <span class=\"br0\">(</span><span class=\"kw1\">list</span> q q1 q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 226, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">numeric</span><span class=\"sy0\">,</span> std.<span class=\"me1\">traits</span><span class=\"sy0\">,</span> std.<span class=\"me1\">conv</span><span class=\"sy0\">,</span> std.<span class=\"me1\">complex</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">struct</span> Quat<span class=\"br0\">(</span>T<span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isFloatingPoint<span class=\"sy0\">!</span>T<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">alias</span> CT <span class=\"sy0\">=</span> Complex<span class=\"sy0\">!</span>T<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">union</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> T re<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"co1\">// Default init to NaN.</span><br/>        <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> CT x<span class=\"sy0\">,</span> y<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"kw4\">struct</span> <span class=\"br0\">{</span> T<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> vector<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">string</span> toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"coMULTI\">/*nothrow*/</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> vector.<span class=\"me1\">text</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> T norm2<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span> <span class=\"co2\">/// Norm squared.</span><br/>        <span class=\"kw1\">return</span> re <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> i <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> j <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> k <span class=\"sy0\">^^</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> T abs<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span> <span class=\"co2\">/// Norm.</span><br/>        <span class=\"kw1\">return</span> sqrt<span class=\"br0\">(</span>norm2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> T arg<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span> <span class=\"co2\">/// Theta.</span><br/>        <span class=\"kw1\">return</span> acos<span class=\"br0\">(</span>re <span class=\"sy0\">/</span> abs<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// this may be incorrect...</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> Quat<span class=\"sy0\">!</span>T conj<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span> <span class=\"co2\">/// Conjugate.</span><br/>        <span class=\"kw1\">return</span> Quat<span class=\"sy0\">!</span>T<span class=\"br0\">(</span>re<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>j<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> Quat<span class=\"sy0\">!</span>T recip<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span>  <span class=\"co2\">/// Reciprocal.</span><br/>        <span class=\"kw1\">return</span> Quat<span class=\"sy0\">!</span>T<span class=\"br0\">(</span>re <span class=\"sy0\">/</span> norm2<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>i <span class=\"sy0\">/</span> norm2<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>j <span class=\"sy0\">/</span> norm2<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>k <span class=\"sy0\">/</span> norm2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> Quat<span class=\"sy0\">!</span>T pureim<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span> <span class=\"co2\">/// Pure imagery.</span><br/>        <span class=\"kw1\">return</span> Quat<span class=\"sy0\">!</span>T<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">@property</span> Quat<span class=\"sy0\">!</span>T versor<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span> <span class=\"co2\">/// Unit versor.</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">/</span> abs<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Unit versor of imagery part.</span><br/>    <span class=\"kw4\">@property</span> Quat<span class=\"sy0\">!</span>T iversor<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> pureim <span class=\"sy0\">/</span> pureim.<span class=\"me1\">abs</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Assignment.</span><br/>    Quat<span class=\"sy0\">!</span>T opAssign<span class=\"br0\">(</span>U <span class=\"sy0\">:</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span>Quat<span class=\"sy0\">!</span>U z<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        x <span class=\"sy0\">=</span> z.<span class=\"me1\">x</span><span class=\"sy0\">;</span>  y <span class=\"sy0\">=</span> z.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Quat<span class=\"sy0\">!</span>T opAssign<span class=\"br0\">(</span>U <span class=\"sy0\">:</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span>Complex<span class=\"sy0\">!</span>U c<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        x <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span>  y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Quat<span class=\"sy0\">!</span>T opAssign<span class=\"br0\">(</span>U <span class=\"sy0\">:</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span>U r<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>U<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        re <span class=\"sy0\">=</span> r<span class=\"sy0\">;</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Test for equal, not ordered so no opCmp.</span><br/>    <span class=\"kw4\">bool</span> opEquals<span class=\"br0\">(</span>U <span class=\"sy0\">:</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span>Quat<span class=\"sy0\">!</span>U z<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> re <span class=\"sy0\">==</span> z.<span class=\"me1\">re</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">==</span> z.<span class=\"me1\">i</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">==</span> z.<span class=\"me1\">j</span> <span class=\"sy0\">&amp;&amp;</span> k <span class=\"sy0\">==</span> z.<span class=\"me1\">k</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> opEquals<span class=\"br0\">(</span>U <span class=\"sy0\">:</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span>Complex<span class=\"sy0\">!</span>U c<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> re <span class=\"sy0\">==</span> c.<span class=\"me1\">re</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">==</span> c.<span class=\"me1\">im</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> k <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">bool</span> opEquals<span class=\"br0\">(</span>U <span class=\"sy0\">:</span> T<span class=\"br0\">)</span><span class=\"br0\">(</span>U r<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>U<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> re <span class=\"sy0\">==</span> r <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> k <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Unary op.</span><br/>    Quat<span class=\"sy0\">!</span>T opUnary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"+\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">this</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Quat<span class=\"sy0\">!</span>T opUnary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> Quat<span class=\"sy0\">!</span>T<span class=\"br0\">(</span><span class=\"sy0\">-</span>re<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>j<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Binary op, Quaternion on left of op.</span><br/>    Quat<span class=\"sy0\">!</span><span class=\"br0\">(</span>CommonType<span class=\"sy0\">!</span><span class=\"br0\">(</span>T<span class=\"sy0\">,</span>U<span class=\"br0\">)</span><span class=\"br0\">)</span> opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">,</span> U<span class=\"br0\">)</span><span class=\"br0\">(</span>Quat<span class=\"sy0\">!</span>U z<span class=\"br0\">)</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw2\">alias</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span> C<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"+\"</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">+</span> z.<span class=\"me1\">re</span><span class=\"sy0\">,</span> i <span class=\"sy0\">+</span> z.<span class=\"me1\">i</span><span class=\"sy0\">,</span> j <span class=\"sy0\">+</span> z.<span class=\"me1\">j</span><span class=\"sy0\">,</span> k <span class=\"sy0\">+</span> z.<span class=\"me1\">k</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">-</span> z.<span class=\"me1\">re</span><span class=\"sy0\">,</span> i <span class=\"sy0\">-</span> z.<span class=\"me1\">i</span><span class=\"sy0\">,</span> j <span class=\"sy0\">-</span> z.<span class=\"me1\">j</span><span class=\"sy0\">,</span> k <span class=\"sy0\">-</span> z.<span class=\"me1\">k</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"*\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">*</span> z.<span class=\"me1\">re</span> <span class=\"sy0\">-</span> i <span class=\"sy0\">*</span> z.<span class=\"me1\">i</span>  <span class=\"sy0\">-</span> j <span class=\"sy0\">*</span> z.<span class=\"me1\">j</span>  <span class=\"sy0\">-</span> k <span class=\"sy0\">*</span> z.<span class=\"me1\">k</span><span class=\"sy0\">,</span><br/>                     re <span class=\"sy0\">*</span> z.<span class=\"me1\">i</span>  <span class=\"sy0\">+</span> i <span class=\"sy0\">*</span> z.<span class=\"me1\">re</span> <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> z.<span class=\"me1\">k</span>  <span class=\"sy0\">-</span> k <span class=\"sy0\">*</span> z.<span class=\"me1\">j</span><span class=\"sy0\">,</span><br/>                     re <span class=\"sy0\">*</span> z.<span class=\"me1\">j</span>  <span class=\"sy0\">-</span> i <span class=\"sy0\">*</span> z.<span class=\"me1\">k</span>  <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> z.<span class=\"me1\">re</span> <span class=\"sy0\">+</span> k <span class=\"sy0\">*</span> z.<span class=\"me1\">i</span><span class=\"sy0\">,</span><br/>                     re <span class=\"sy0\">*</span> z.<span class=\"me1\">k</span>  <span class=\"sy0\">+</span> i <span class=\"sy0\">*</span> z.<span class=\"me1\">j</span>  <span class=\"sy0\">-</span> j <span class=\"sy0\">*</span> z.<span class=\"me1\">i</span>  <span class=\"sy0\">+</span> k <span class=\"sy0\">*</span> z.<span class=\"me1\">re</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"/\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">this</span> <span class=\"sy0\">*</span> z.<span class=\"me1\">recip</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Extend complex to quaternion.</span><br/>    Quat<span class=\"sy0\">!</span><span class=\"br0\">(</span>CommonType<span class=\"sy0\">!</span><span class=\"br0\">(</span>T<span class=\"sy0\">,</span>U<span class=\"br0\">)</span><span class=\"br0\">)</span> opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">,</span> U<span class=\"br0\">)</span><span class=\"br0\">(</span>Complex<span class=\"sy0\">!</span>U c<span class=\"br0\">)</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> opBinary<span class=\"sy0\">!</span>op<span class=\"br0\">(</span><span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span><span class=\"br0\">(</span>c.<span class=\"me1\">re</span><span class=\"sy0\">,</span> c.<span class=\"me1\">im</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// For scalar.</span><br/>    Quat<span class=\"sy0\">!</span><span class=\"br0\">(</span>CommonType<span class=\"sy0\">!</span><span class=\"br0\">(</span>T<span class=\"sy0\">,</span>U<span class=\"br0\">)</span><span class=\"br0\">)</span> opBinary<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">,</span> U<span class=\"br0\">)</span><span class=\"br0\">(</span>U r<span class=\"br0\">)</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>U<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">alias</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span> C<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"+\"</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">+</span> r<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">-</span> r<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"*\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">*</span> r<span class=\"sy0\">,</span> i <span class=\"sy0\">*</span> r<span class=\"sy0\">,</span> j <span class=\"sy0\">*</span> r<span class=\"sy0\">,</span> k <span class=\"sy0\">*</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"/\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>re <span class=\"sy0\">/</span> r<span class=\"sy0\">,</span> i <span class=\"sy0\">/</span> r<span class=\"sy0\">,</span> j <span class=\"sy0\">/</span> r<span class=\"sy0\">,</span> k <span class=\"sy0\">/</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"^^\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> pow<span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Power function.</span><br/>    Quat<span class=\"sy0\">!</span><span class=\"br0\">(</span>CommonType<span class=\"sy0\">!</span><span class=\"br0\">(</span>T<span class=\"sy0\">,</span>U<span class=\"br0\">)</span><span class=\"br0\">)</span> pow<span class=\"br0\">(</span>U<span class=\"br0\">)</span><span class=\"br0\">(</span>U r<span class=\"br0\">)</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>U<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>abs<span class=\"sy0\">^^</span>r<span class=\"br0\">)</span> <span class=\"sy0\">*</span> exp<span class=\"br0\">(</span>r <span class=\"sy0\">*</span> iversor <span class=\"sy0\">*</span> arg<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co2\">/// Handle binary op if Quaternion on right of op and left is</span><br/>    <span class=\"co2\">/// not quaternion.</span><br/>    Quat<span class=\"sy0\">!</span><span class=\"br0\">(</span>CommonType<span class=\"sy0\">!</span><span class=\"br0\">(</span>T<span class=\"sy0\">,</span>U<span class=\"br0\">)</span><span class=\"br0\">)</span> opBinaryRight<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">,</span> U<span class=\"br0\">)</span><span class=\"br0\">(</span>Complex<span class=\"sy0\">!</span>U c<span class=\"br0\">)</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>        <span class=\"kw2\">alias</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span> C<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">auto</span> w <span class=\"sy0\">=</span> C<span class=\"br0\">(</span>c.<span class=\"me1\">re</span><span class=\"sy0\">,</span> c.<span class=\"me1\">im</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> w.<span class=\"me1\">opBinary</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>op<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">this</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Quat<span class=\"sy0\">!</span><span class=\"br0\">(</span>CommonType<span class=\"sy0\">!</span><span class=\"br0\">(</span>T<span class=\"sy0\">,</span>U<span class=\"br0\">)</span><span class=\"br0\">)</span> opBinaryRight<span class=\"br0\">(</span><span class=\"kw4\">string</span> op<span class=\"sy0\">,</span> U<span class=\"br0\">)</span><span class=\"br0\">(</span>U r<span class=\"br0\">)</span><br/>    <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isNumeric<span class=\"sy0\">!</span>U<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">alias</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span> C<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"+\"</span> <span class=\"sy0\">||</span> op <span class=\"sy0\">==</span> <span class=\"st0\">\"*\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> opBinary<span class=\"sy0\">!</span>op<span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> C<span class=\"br0\">(</span>r <span class=\"sy0\">-</span> re <span class=\"sy0\">,</span> <span class=\"sy0\">-</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>j<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw4\">static</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>op <span class=\"sy0\">==</span> <span class=\"st0\">\"/\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">auto</span> w <span class=\"sy0\">=</span> C<span class=\"br0\">(</span>re<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> w.<span class=\"me1\">recip</span> <span class=\"sy0\">*</span> r<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>HT exp<span class=\"br0\">(</span>HT<span class=\"br0\">)</span><span class=\"br0\">(</span>HT z<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw2\">is</span><span class=\"br0\">(</span>HT T <span class=\"sy0\">==</span> Quat<span class=\"sy0\">!</span>T<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> inorm <span class=\"sy0\">=</span> z.<span class=\"me1\">pureim</span>.<span class=\"me1\">abs</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> std.<span class=\"me1\">math</span>.<span class=\"me1\">exp</span><span class=\"br0\">(</span>z.<span class=\"me1\">re</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>cos<span class=\"br0\">(</span>inorm<span class=\"br0\">)</span> <span class=\"sy0\">+</span> z.<span class=\"me1\">iversor</span> <span class=\"sy0\">*</span> sin<span class=\"br0\">(</span>inorm<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>HT log<span class=\"br0\">(</span>HT<span class=\"br0\">)</span><span class=\"br0\">(</span>HT z<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw2\">is</span><span class=\"br0\">(</span>HT T <span class=\"sy0\">==</span> Quat<span class=\"sy0\">!</span>T<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> std.<span class=\"me1\">math</span>.<span class=\"me1\">log</span><span class=\"br0\">(</span>z.<span class=\"me1\">abs</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> z.<span class=\"me1\">iversor</span> <span class=\"sy0\">*</span> acos<span class=\"br0\">(</span>z.<span class=\"me1\">re</span> <span class=\"sy0\">/</span> z.<span class=\"me1\">abs</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span> <span class=\"co1\">// Demo code.</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">alias</span> QR <span class=\"sy0\">=</span> Quat<span class=\"sy0\">!</span><span class=\"kw4\">real</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">enum</span> <span class=\"kw4\">real</span> r <span class=\"sy0\">=</span> <span class=\"nu16\">7.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> QR q  <span class=\"sy0\">=</span> QR<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                 q1 <span class=\"sy0\">=</span> QR<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                 q2 <span class=\"sy0\">=</span> QR<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"1.             q - norm: \"</span><span class=\"sy0\">,</span> q.<span class=\"me1\">abs</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"2.         q - negative: \"</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>q<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"3.        q - conjugate: \"</span><span class=\"sy0\">,</span> q.<span class=\"me1\">conj</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"4.                r + q: \"</span><span class=\"sy0\">,</span> r <span class=\"sy0\">+</span> q<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                  q + r: \"</span><span class=\"sy0\">,</span> q <span class=\"sy0\">+</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"5.              q1 + q2: \"</span><span class=\"sy0\">,</span> q1 <span class=\"sy0\">+</span> q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"6.                r * q: \"</span><span class=\"sy0\">,</span> r <span class=\"sy0\">*</span> q<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                  q * r: \"</span><span class=\"sy0\">,</span> q <span class=\"sy0\">*</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"7.              q1 * q2: \"</span><span class=\"sy0\">,</span> q1 <span class=\"sy0\">*</span> q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                q2 * q1: \"</span><span class=\"sy0\">,</span> q2 <span class=\"sy0\">*</span> q1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"8.  q1 * q2\u00a0!= q2 * Q1\u00a0? \"</span><span class=\"sy0\">,</span> q1 <span class=\"sy0\">*</span> q2 <span class=\"sy0\">!=</span> q2 <span class=\"sy0\">*</span> q1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> QR i <span class=\"sy0\">=</span> QR<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                 j <span class=\"sy0\">=</span> QR<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                 k <span class=\"sy0\">=</span> QR<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"9.1               i * i: \"</span><span class=\"sy0\">,</span> i <span class=\"sy0\">*</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                  J * j: \"</span><span class=\"sy0\">,</span> j <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                  k * k: \"</span><span class=\"sy0\">,</span> k <span class=\"sy0\">*</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"              i * j * k: \"</span><span class=\"sy0\">,</span> i <span class=\"sy0\">*</span> j <span class=\"sy0\">*</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"9.2             q1 / q2: \"</span><span class=\"sy0\">,</span> q1 <span class=\"sy0\">/</span> q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"9.3        q1 / q2 * q2: \"</span><span class=\"sy0\">,</span> q1 <span class=\"sy0\">/</span> q2 <span class=\"sy0\">*</span> q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"           q2 * q1 / q2: \"</span><span class=\"sy0\">,</span> q2 <span class=\"sy0\">*</span> q1 <span class=\"sy0\">/</span> q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"9.4         exp(pi * i): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>PI <span class=\"sy0\">*</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"            exp(pi * j): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>PI <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"            exp(pi * k): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>PI <span class=\"sy0\">*</span> k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                 exp(q): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                 log(q): \"</span><span class=\"sy0\">,</span> log<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"            exp(log(q)): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>log<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"            log(exp(q)): \"</span><span class=\"sy0\">,</span> log<span class=\"br0\">(</span>exp<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> s <span class=\"sy0\">=</span> q.<span class=\"me1\">exp</span>.<span class=\"me1\">log</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"9.5 let s = log(exp(q)): \"</span><span class=\"sy0\">,</span> s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                 exp(s): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"                 log(s): \"</span><span class=\"sy0\">,</span> log<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"            exp(log(s)): \"</span><span class=\"sy0\">,</span> exp<span class=\"br0\">(</span>log<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"            log(exp(s)): \"</span><span class=\"sy0\">,</span> log<span class=\"br0\">(</span>exp<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 129, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">unit</span> Quaternions<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">interface</span><br/>\u00a0<br/><span class=\"kw1\">type</span><br/>\u00a0<br/>  TQuaternion <span class=\"sy3\">=</span> <span class=\"kw1\">record</span><br/>    A<span class=\"sy1\">,</span> B<span class=\"sy1\">,</span> C<span class=\"sy1\">,</span> D<span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span>  Init          <span class=\"br0\">(</span>aA<span class=\"sy1\">,</span> aB<span class=\"sy1\">,</span> aC<span class=\"sy1\">,</span> aD <span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">function</span>  Norm          <span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">function</span>  Conjugate     <span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">function</span>  ToString      <span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">class</span> operator Negative <span class=\"br0\">(</span>Left <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Positive <span class=\"br0\">(</span>Left <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Add      <span class=\"br0\">(</span>Left<span class=\"sy1\">,</span> Right <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Add      <span class=\"br0\">(</span>Left <span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> Right <span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> <span class=\"kw1\">overload</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Add      <span class=\"br0\">(</span>Left <span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span> Right <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> <span class=\"kw1\">overload</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Subtract <span class=\"br0\">(</span>Left<span class=\"sy1\">,</span> Right <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Multiply <span class=\"br0\">(</span>Left<span class=\"sy1\">,</span> Right <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Multiply <span class=\"br0\">(</span>Left <span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> Right <span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> <span class=\"kw1\">overload</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">class</span> operator Multiply <span class=\"br0\">(</span>Left <span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span> Right <span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> <span class=\"kw1\">overload</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">implementation</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">{ TQuaternion }</span><br/>\u00a0<br/><span class=\"kw1\">function</span> TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Init</span><span class=\"br0\">(</span>aA<span class=\"sy1\">,</span> aB<span class=\"sy1\">,</span> aC<span class=\"sy1\">,</span> aD<span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  A <span class=\"sy1\">:</span><span class=\"sy3\">=</span> aA<span class=\"sy1\">;</span><br/>  B <span class=\"sy1\">:</span><span class=\"sy3\">=</span> aB<span class=\"sy1\">;</span><br/>  C <span class=\"sy1\">:</span><span class=\"sy3\">=</span> aC<span class=\"sy1\">;</span><br/>  D <span class=\"sy1\">:</span><span class=\"sy3\">=</span> aD<span class=\"sy1\">;</span><br/>\u00a0<br/>  result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw2\">Self</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Norm</span><span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span><span class=\"kw3\">sqr</span><span class=\"br0\">(</span>A<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"kw3\">sqr</span><span class=\"br0\">(</span>B<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"kw3\">sqr</span><span class=\"br0\">(</span>C<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"kw3\">sqr</span><span class=\"br0\">(</span>D<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Conjugate</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>B<span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>C<span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>D<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Negative</span><span class=\"br0\">(</span>Left<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>Left<span class=\"sy1\">.</span><span class=\"me1\">A</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>Left<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>Left<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>Left<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Positive</span><span class=\"br0\">(</span>Left<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Add</span><span class=\"br0\">(</span>Left<span class=\"sy1\">,</span> Right<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">+</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">+</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">+</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">+</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Add</span><span class=\"br0\">(</span>Left<span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> Right<span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">+</span> Right<span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Add</span><span class=\"br0\">(</span>Left<span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span> Right<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left <span class=\"sy3\">+</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Subtract</span><span class=\"br0\">(</span>Left<span class=\"sy1\">,</span> Right<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">-</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">-</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">-</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">-</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Multiply</span><span class=\"br0\">(</span>Left<span class=\"sy1\">,</span> Right<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">-</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">-</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">-</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">+</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">+</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">-</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">-</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">+</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">+</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">+</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">-</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">+</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Multiply</span><span class=\"br0\">(</span>Left<span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"sy1\">;</span> Right<span class=\"sy1\">:</span> TQuaternion<span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">A</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">B</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">C</span><span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left <span class=\"sy3\">*</span> Right<span class=\"sy1\">.</span><span class=\"me1\">D</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> operator TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">Multiply</span><span class=\"br0\">(</span>Left<span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span> Right<span class=\"sy1\">:</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TQuaternion<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">A</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">B</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">C</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">;</span><br/>  result<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Left<span class=\"sy1\">.</span><span class=\"me1\">D</span> <span class=\"sy3\">*</span> Right<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> TQuaternion<span class=\"sy1\">.</span><span class=\"me1\">ToString</span><span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%f +\u00a0%fi +\u00a0%fj +\u00a0%fk'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>A<span class=\"sy1\">,</span> B<span class=\"sy1\">,</span> C<span class=\"sy1\">,</span> D<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "E", "loc": 61, "block": "<pre class=\"e highlighted_source\">interface Quaternion <a href=\"http://wiki.erights.org/wiki/guards\"><span class=\"kw5\">guards</span></a> QS <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> makeQuaternion<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    return <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> quaternion <a href=\"http://wiki.erights.org/wiki/implements\"><span class=\"kw5\">implements</span></a> QS <span class=\"br0\">{</span><br/>\u00a0<br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> __printOn<span class=\"br0\">(</span>out<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            out.<a href=\"http://wiki.erights.org/wiki/print\"><span class=\"kw7\">print</span></a><span class=\"br0\">(</span><span class=\"st0\">\"(\"</span><span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> <span class=\"st0\">\" + \"</span><span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> <span class=\"st0\">\"i + \"</span><span class=\"br0\">)</span><br/>            out.<a href=\"http://wiki.erights.org/wiki/print\"><span class=\"kw7\">print</span></a><span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"st0\">\"j + \"</span><span class=\"sy0\">,</span> d<span class=\"sy0\">,</span> <span class=\"st0\">\"k)\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># Task requirement 1</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> norm<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            return <span class=\"br0\">(</span>a<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> c<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> d<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># Task requirement 2</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> negate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            return makeQuaternion<span class=\"br0\">(</span><span class=\"sy0\">-</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>d<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># Task requirement 3</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> conjugate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            return makeQuaternion<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>d<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># Task requirement 4, 5</span><br/>        <span class=\"co1\"># This implements q + r; r + q is deliberately prohibited by E</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> add<span class=\"br0\">(</span>other <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/any\"><span class=\"kw6\">any</span></a><span class=\"br0\">[</span>Quaternion<span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/int\"><span class=\"kw6\">int</span></a><span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/float64\"><span class=\"kw6\">float64</span></a><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://wiki.erights.org/wiki/switch\"><span class=\"kw1\">switch</span></a> <span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>              <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> q <span class=\"sy0\">:</span>Quaternion <span class=\"br0\">{</span><br/>                return makeQuaternion<span class=\"br0\">(</span><br/>                    a<span class=\"sy0\">+</span>q.<span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> b<span class=\"sy0\">+</span>q.<span class=\"me1\">b</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> c<span class=\"sy0\">+</span>q.<span class=\"me1\">c</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> d<span class=\"sy0\">+</span>q.<span class=\"me1\">d</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">}</span><br/>              <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> real <span class=\"br0\">{</span><br/>                return makeQuaternion<span class=\"br0\">(</span>a<span class=\"sy0\">+</span>real<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span><br/>              <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\"># Task requirement 6, 7</span><br/>        <span class=\"co1\"># This implements q * r; r * q is deliberately prohibited by E</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> multiply<span class=\"br0\">(</span>other <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/any\"><span class=\"kw6\">any</span></a><span class=\"br0\">[</span>Quaternion<span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/int\"><span class=\"kw6\">int</span></a><span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/float64\"><span class=\"kw6\">float64</span></a><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://wiki.erights.org/wiki/switch\"><span class=\"kw1\">switch</span></a> <span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> q <span class=\"sy0\">:</span>Quaternion <span class=\"br0\">{</span><br/>                    return makeQuaternion<span class=\"br0\">(</span><br/>                        a<span class=\"sy0\">*</span>q.<span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> b<span class=\"sy0\">*</span>q.<span class=\"me1\">b</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> c<span class=\"sy0\">*</span>q.<span class=\"me1\">c</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> d<span class=\"sy0\">*</span>q.<span class=\"me1\">d</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                        a<span class=\"sy0\">*</span>q.<span class=\"me1\">b</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span>q.<span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> c<span class=\"sy0\">*</span>q.<span class=\"me1\">d</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> d<span class=\"sy0\">*</span>q.<span class=\"me1\">c</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                        a<span class=\"sy0\">*</span>q.<span class=\"me1\">c</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> b<span class=\"sy0\">*</span>q.<span class=\"me1\">d</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> c<span class=\"sy0\">*</span>q.<span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> d<span class=\"sy0\">*</span>q.<span class=\"me1\">b</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                        a<span class=\"sy0\">*</span>q.<span class=\"me1\">d</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span>q.<span class=\"me1\">c</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> c<span class=\"sy0\">*</span>q.<span class=\"me1\">b</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> d<span class=\"sy0\">*</span>q.<span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">}</span><br/>                <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> real <span class=\"br0\">{</span><br/>                    return makeQuaternion<span class=\"br0\">(</span>real<span class=\"sy0\">*</span>a<span class=\"sy0\">,</span> real<span class=\"sy0\">*</span>b<span class=\"sy0\">,</span> real<span class=\"sy0\">*</span>c<span class=\"sy0\">,</span> real<span class=\"sy0\">*</span>d<span class=\"br0\">)</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> a<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> return a <span class=\"br0\">}</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> return b <span class=\"br0\">}</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> c<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> return c <span class=\"br0\">}</span><br/>        <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> d<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> return d <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Eero", "loc": 102, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/>interface Quaternion <span class=\"sy0\">:</span> Number<br/>  <span class=\"co2\">// Properties -- note that this is an immutable class.</span><br/>  <span class=\"kw4\">double</span> real, i, j, k <span class=\"br0\">{</span>readonly<span class=\"br0\">}</span><br/>end<br/>\u00a0<br/>implementation Quaternion<br/>\u00a0<br/>  initWithReal<span class=\"sy0\">:</span> <span class=\"kw4\">double</span>, i<span class=\"sy0\">:</span> <span class=\"kw4\">double</span>, j<span class=\"sy0\">:</span> <span class=\"kw4\">double</span>, k<span class=\"sy0\">:</span> <span class=\"kw4\">double</span>, <span class=\"kw1\">return</span> instancetype<br/>    self <span class=\"sy0\">=</span> super.init<br/>    <span class=\"kw1\">if</span> self<br/>      _real <span class=\"sy0\">=</span> real; _i <span class=\"sy0\">=</span> i; _j <span class=\"sy0\">=</span> j; _k <span class=\"sy0\">=</span> k<br/>    <span class=\"kw1\">return</span> self<br/>\u00a0<br/>  <span class=\"sy0\">+</span>new<span class=\"sy0\">:</span> <span class=\"kw4\">double</span> real, ..., <span class=\"kw1\">return</span> instancetype<br/>    <span class=\"kw4\">va_list</span> args<br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_start.html\"><span class=\"kw3\">va_start</span></a><span class=\"br0\">(</span>args, real<span class=\"br0\">)</span><br/>    object <span class=\"sy0\">:=</span> Quaternion.alloc.initWithReal<span class=\"sy0\">:</span> real, <br/>                                          i<span class=\"sy0\">:</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_arg.html\"><span class=\"kw3\">va_arg</span></a><span class=\"br0\">(</span>args, <span class=\"kw4\">double</span><span class=\"br0\">)</span>,<br/>                                          j<span class=\"sy0\">:</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_arg.html\"><span class=\"kw3\">va_arg</span></a><span class=\"br0\">(</span>args, <span class=\"kw4\">double</span><span class=\"br0\">)</span>,<br/>                                          k<span class=\"sy0\">:</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_arg.html\"><span class=\"kw3\">va_arg</span></a><span class=\"br0\">(</span>args, <span class=\"kw4\">double</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/va_end.html\"><span class=\"kw3\">va_end</span></a><span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> object<br/>\u00a0<br/>  descriptionWithLocale<span class=\"sy0\">:</span> <span class=\"kw4\">id</span>, <span class=\"kw1\">return</span> String <span class=\"sy0\">=</span> String.stringWithFormat<span class=\"sy0\">:</span><br/>      <span class=\"st0\">'(%.1f,\u00a0%.1f,\u00a0%.1f,\u00a0%.1f)'</span>, self.real, self.i, self.j, self.k<br/>\u00a0<br/>  norm, <span class=\"kw1\">return</span> <span class=\"kw4\">double</span> <span class=\"sy0\">=</span><br/>      <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>self.real <span class=\"sy0\">*</span> self.real <span class=\"sy0\">+</span><br/>           self.i <span class=\"sy0\">*</span> self.i <span class=\"sy0\">+</span> self.j <span class=\"sy0\">*</span> self.j <span class=\"sy0\">+</span> self.k <span class=\"sy0\">*</span> self.k<span class=\"br0\">)</span><br/>\u00a0<br/>  negative, <span class=\"kw1\">return</span> Quaternion <span class=\"sy0\">=</span><br/>      Quaternion.new<span class=\"sy0\">:</span> <span class=\"sy0\">-</span>self.real, <span class=\"sy0\">-</span>self.i, <span class=\"sy0\">-</span>self.j, <span class=\"sy0\">-</span>self.k<br/>\u00a0<br/>  conjugate, <span class=\"kw1\">return</span> Quaternion <span class=\"sy0\">=</span><br/>      Quaternion.new<span class=\"sy0\">:</span> self.real, <span class=\"sy0\">-</span>self.i, <span class=\"sy0\">-</span>self.j, <span class=\"sy0\">-</span>self.k<br/>\u00a0<br/>  <span class=\"co2\">// Overload \"+\" operator (left operand is Quaternion)</span><br/>  plus<span class=\"sy0\">:</span> Number operand, <span class=\"kw1\">return</span> Quaternion<br/>    real <span class=\"sy0\">:=</span> self.real, i <span class=\"sy0\">=</span> self.i, j <span class=\"sy0\">=</span> self.j, k <span class=\"sy0\">=</span> self.k<br/>    <span class=\"kw1\">if</span> operand.isKindOfClass<span class=\"sy0\">:</span> Quaternion.class<br/>      q <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span>operand<br/>      real <span class=\"sy0\">+=</span> q.real; i <span class=\"sy0\">+=</span> q.i; j <span class=\"sy0\">+=</span> q.j; k <span class=\"sy0\">+=</span> q.k<br/>    <span class=\"kw1\">else</span><br/>      real <span class=\"sy0\">+=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>operand<br/>    <span class=\"kw1\">return</span> Quaternion.new<span class=\"sy0\">:</span> real, i, j, k <br/>\u00a0<br/>  <span class=\"co2\">// Overload \"*\" operator (left operand is Quaternion)</span><br/>  multipliedBy<span class=\"sy0\">:</span> Number operand, <span class=\"kw1\">return</span> Quaternion<br/>    real <span class=\"sy0\">:=</span> self.real, i <span class=\"sy0\">=</span> self.i, j <span class=\"sy0\">=</span> self.j, k <span class=\"sy0\">=</span> self.k<br/>    <span class=\"kw1\">if</span> operand.isKindOfClass<span class=\"sy0\">:</span> Quaternion.class<br/>      q <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span>operand<br/>      real <span class=\"sy0\">=</span> self.real <span class=\"sy0\">*</span> q.real <span class=\"sy0\">-</span> self.i<span class=\"sy0\">*</span> q.i <span class=\"sy0\">-</span> self.j <span class=\"sy0\">*</span> q.j <span class=\"sy0\">-</span> self.k <span class=\"sy0\">*</span> q.k<br/>      i <span class=\"sy0\">=</span> self.real <span class=\"sy0\">*</span> q.i <span class=\"sy0\">+</span> self.i <span class=\"sy0\">*</span> q.real <span class=\"sy0\">+</span> self.j <span class=\"sy0\">*</span> q.k <span class=\"sy0\">-</span> self.k <span class=\"sy0\">*</span> q.j<br/>      j <span class=\"sy0\">=</span> self.real <span class=\"sy0\">*</span> q.j <span class=\"sy0\">-</span> self.i <span class=\"sy0\">*</span> q.k <span class=\"sy0\">+</span> self.j <span class=\"sy0\">*</span> q.real <span class=\"sy0\">+</span> self.k <span class=\"sy0\">*</span> q.i<br/>      k <span class=\"sy0\">=</span> self.real <span class=\"sy0\">*</span> q.k <span class=\"sy0\">+</span> self.i <span class=\"sy0\">*</span> q.j <span class=\"sy0\">-</span> self.j <span class=\"sy0\">*</span> q.i <span class=\"sy0\">+</span> self.k <span class=\"sy0\">*</span> q.real<br/>    <span class=\"kw1\">else</span><br/>      real <span class=\"sy0\">*=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>operand<br/>      i <span class=\"sy0\">*=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>operand; j <span class=\"sy0\">*=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>operand; k <span class=\"sy0\">*=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>operand<br/>    <span class=\"kw1\">return</span> Quaternion.new<span class=\"sy0\">:</span> real, i, j, k<br/>\u00a0<br/>end<br/>\u00a0<br/>implementation Number <span class=\"br0\">(</span>QuaternionOperators<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co2\">// Overload \"+\" operator (left operand is Number)</span><br/>  plus<span class=\"sy0\">:</span> Quaternion operand, <span class=\"kw1\">return</span> Quaternion<br/>    real <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>self <span class=\"sy0\">+</span> operand.real<br/>    <span class=\"kw1\">return</span> Quaternion.new<span class=\"sy0\">:</span> real, operand.i, operand.j, operand.k<br/>\u00a0<br/>  <span class=\"co2\">// Overload \"*\" operator (left operand is Number)</span><br/>  multipliedBy<span class=\"sy0\">:</span> Quaternion operand, <span class=\"kw1\">return</span> Quaternion<br/>    r <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span>self<br/>    <span class=\"kw1\">return</span> Quaternion.new<span class=\"sy0\">:</span> r <span class=\"sy0\">*</span> operand.real, r <span class=\"sy0\">*</span> operand.i,<br/>                           r <span class=\"sy0\">*</span> operand.j, r <span class=\"sy0\">*</span> operand.k<br/>\u00a0<br/>end<br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  autoreleasepool<br/>\u00a0<br/>    q  <span class=\"sy0\">:=</span> Quaternion.new<span class=\"sy0\">:</span> <span class=\"nu0\">1.0</span>, <span class=\"nu0\">2.0</span>, <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span><br/>    q1 <span class=\"sy0\">:=</span> Quaternion.new<span class=\"sy0\">:</span> <span class=\"nu0\">2.0</span>, <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span>, <span class=\"nu0\">5.0</span><br/>    q2 <span class=\"sy0\">:=</span> Quaternion.new<span class=\"sy0\">:</span> <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span>, <span class=\"nu0\">5.0</span>, <span class=\"nu0\">6.0</span><br/>\u00a0<br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q  =\u00a0%@'</span>, q <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q1 =\u00a0%@'</span>, q1 <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q2 =\u00a0%@<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>'</span>, q2 <span class=\"br0\">)</span><br/>\u00a0<br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q norm =\u00a0%.3f'</span>,  q.norm <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q negative =\u00a0%@'</span>,  q.negative <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q conjugate =\u00a0%@'</span>,  q.conjugate <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'7 + q =\u00a0%@'</span>, <span class=\"nu0\">7.0</span> <span class=\"sy0\">+</span> q <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q + 7 =\u00a0%@'</span>, q <span class=\"sy0\">+</span> <span class=\"nu0\">7.0</span> <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q1 + q2 =\u00a0%@'</span>,  q1 <span class=\"sy0\">+</span> q2 <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'7 * q =\u00a0%@'</span>, <span class=\"nu0\">7</span> <span class=\"sy0\">*</span> q<span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q * 7 =\u00a0%@'</span>, q <span class=\"sy0\">*</span> <span class=\"nu0\">7.0</span> <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q1 * q2 =\u00a0%@'</span>,  q1 <span class=\"sy0\">*</span> q2 <span class=\"br0\">)</span><br/>    Log<span class=\"br0\">(</span> <span class=\"st0\">'q2 * q1 =\u00a0%@'</span>,  q2 <span class=\"sy0\">*</span> q1 <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "Elena", "loc": 87, "block": "<pre class=\"text highlighted_source\">import system'math.<br/>import extensions.<br/>\u00a0<br/>struct Quaternion\u00a0:: BaseValue<br/>{<br/>    real rprop A\u00a0:: a.<br/>    real rprop B\u00a0:: b.<br/>    real rprop C\u00a0:: c.<br/>    real rprop D\u00a0:: d.<br/>\u00a0<br/>    constructor new(object a, object b, object c, object d)<br/>        &lt;= new(a real, b real, c real, d real).<br/>\u00a0<br/>    constructor new(real a, real b, real c, real d)<br/>    [<br/>        @a\u00a0:= a.<br/>        @b\u00a0:= b.<br/>        @c\u00a0:= c.<br/>        @d\u00a0:= d.<br/>    ]<br/>\u00a0<br/>    stacksafe explicit(Real r)<br/>    [<br/>        a\u00a0:= r.<br/>        b\u00a0:= 0.0r.<br/>        c\u00a0:= 0.0r.<br/>        d\u00a0:= 0.0r.<br/>    ]<br/>\u00a0<br/>    real Norm = (a*a + b*b + c*c + d*d) sqrt.<br/>\u00a0<br/>    type&lt;Quaternion&gt; negative = Quaternion new(a negative,b negative,c negative,d negative).<br/>\u00a0<br/>    type&lt;Quaternion&gt; Conjugate = Quaternion new(a,b negative,c negative,d negative).<br/>\u00a0<br/>    type&lt;Quaternion&gt; add(Quaternion q)<br/>        = Quaternion new(a + q A, b + q B, c + q C, d + q D).<br/>\u00a0<br/>    type&lt;Quaternion&gt; multiply(Quaternion q)<br/>        = Quaternion new(<br/>            a * q A - b * q B - c * q C - d * q D,<br/>            a * q B + b * q A + c * q D - d * q C,<br/>            a * q C - b * q D + c * q A + d * q B,<br/>            a * q D + b * q C - c * q B + d * q A).<br/>\u00a0<br/>    type&lt;Quaternion&gt; add(real r)<br/>        &lt;= add(Quaternion new(r,0,0,0)).<br/>\u00a0<br/>    type&lt;Quaternion&gt; multiply(real r)<br/>        &lt;= multiply(Quaternion new(r,0,0,0)).<br/>\u00a0<br/>    bool equal(Quaternion q)<br/>        = (a == q A) &amp;&amp; (b == q B) &amp;&amp; (c == q C) &amp;&amp; (d == q D).<br/>\u00a0<br/>    literal<br/>        = String writeFormatted(\"Q({0}, {1}, {2}, {3})\",a,b,c,d).        <br/>}<br/>\u00a0<br/>program =<br/>[<br/>    var q\u00a0:= Quaternion new(1,2,3,4).<br/>    var q1\u00a0:= Quaternion new(2,3,4,5).<br/>    var q2\u00a0:= Quaternion new(3,4,5,6).<br/>    real r\u00a0:= 7.<br/>\u00a0<br/>    console printLine(\"q = \", q).<br/>    console printLine(\"q1 = \", q1).<br/>    console printLine(\"q2 = \", q2).<br/>    console printLine(\"r = \", r).<br/>\u00a0<br/>    console printLine(\"q.Norm() = \", q Norm).<br/>    console printLine(\"q1.Norm() = \", q1 Norm).<br/>    console printLine(\"q2.Norm() = \", q2 Norm).<br/>\u00a0<br/>    console printLine(\"-q = \", q negative).<br/>    console printLine(\"q.Conjugate() = \", q Conjugate).<br/>\u00a0<br/>    console printLine(\"q + r = \", q + r).<br/>    console printLine(\"q1 + q2 = \", q1 + q2).<br/>    console printLine(\"q2 + q1 = \", q2 + q1).<br/>\u00a0<br/>    console printLine(\"q * r = \", q * r).<br/>    console printLine(\"q1 * q2 = \", q1 * q2).<br/>    console printLine(\"q2 * q1 = \", q2 * q1).<br/>\u00a0<br/>    console printLineFormatted(\"q1*q2 {0} q2*q1\", ((q1 * q2) == (q2 * q1)) iif(\"==\",\"!=\")).<br/>].</pre>"}, {"lang": "ERRE", "loc": 106, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>PROGRAM QUATERNION<br/>\u00a0<br/>!$DOUBLE<br/>\u00a0<br/>TYPE QUATERNION=(A,B,C,D)<br/>\u00a0<br/>DIM Q:QUATERNION,Q1:QUATERNION,Q2:QUATERNION<br/>\u00a0<br/>\u00a0<br/>DIM R:QUATERNION,S:QUATERNION,T:QUATERNION<br/>\u00a0<br/>PROCEDURE NORM(T.-&gt;NORM)<br/>   NORM=SQR(T.A*T.A+T.B*T.B+T.C*T.C+T.D*T.D)<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE NEGATIVE(T.-&gt;T.)<br/>    T.A=-T.A<br/>    T.B=-T.B<br/>    T.C=-T.C<br/>    T.D=-T.D<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE CONJUGATE(T.-&gt;T.)<br/>    T.A=T.A<br/>    T.B=-T.B<br/>    T.C=-T.C<br/>    T.D=-T.D<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE ADD_REAL(T.,REAL-&gt;T.)<br/>    T.A=T.A+REAL<br/>    T.B=T.B<br/>    T.C=T.C<br/>    T.D=T.D<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE ADD(T.,S.-&gt;T.)<br/>    T.A=T.A+S.A<br/>    T.B=T.B+S.B<br/>    T.C=T.C+S.C<br/>    T.D=T.D+S.D<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE MULT_REAL(T.,REAL-&gt;T.)<br/>    T.A=T.A*REAL<br/>    T.B=T.B*REAL<br/>    T.C=T.C*REAL<br/>    T.D=T.D*REAL<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE MULT(T.,S.-&gt;R.)<br/>    R.A=T.A*S.A-T.B*S.B-T.C*S.C-T.D*S.D<br/>    R.B=T.A*S.B+T.B*S.A+T.C*S.D-T.D*S.C<br/>    R.C=T.A*S.C-T.B*S.D+T.C*S.A+T.D*S.B<br/>    R.D=T.A*S.D+T.B*S.C-T.C*S.B+T.D*S.A<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE PRINTQ(T.)<br/>    PRINT(\"(\";T.A;\",\";T.B;\",\";T.C;\",\";T.D;\")\")<br/>END PROCEDURE<br/>\u00a0<br/>BEGIN<br/>    Q.A=1  Q.B=2  Q.C=3  Q.D=4<br/>    Q1.A=2 Q1.B=3 Q1.C=4 Q1.D=5<br/>    Q2.A=3 Q2.B=4 Q2.C=5 Q2.D=6<br/>    REAL=7<br/>\u00a0<br/>    NORM(Q.-&gt;NORM)<br/>    PRINT(\"Norm(q)=\";NORM)<br/>\u00a0<br/>    NEGATIVE(Q.-&gt;T.)<br/>    PRINT(\"Negative(q) =\";)<br/>    PRINTQ(T.)<br/>\u00a0<br/>    CONJUGATE(Q.-&gt;T.)<br/>    PRINT(\"Conjugate(q) =\";)<br/>    PRINTQ(T.)<br/>\u00a0<br/>    ADD_REAL(Q.,REAL-&gt;T.)<br/>    PRINT(\"q + real =\";)<br/>    PRINTQ(T.)<br/>\u00a0<br/>! addition is commutative<br/>    ADD(Q1.,Q2.-&gt;T.)<br/>    PRINT(\"q1 + q2 =\";)<br/>    PRINTQ(T.)<br/>\u00a0<br/>    ADD(Q2.,Q1.-&gt;T.)<br/>    PRINT(\"q2 + q1 = \";)<br/>    PRINTQ(T.)<br/>\u00a0<br/>    MULT_REAL(Q.,REAL-&gt;T.)<br/>    PRINT(\"q * real =\";)<br/>    PRINTQ(T.)<br/>\u00a0<br/>! multiplication is not commutative<br/>    MULT(Q1.,Q2.-&gt;R.)<br/>    PRINT(\"q1 * q2=\";)<br/>    PRINTQ(R.)<br/>\u00a0<br/>    MULT(Q2.,Q1.-&gt;R.)<br/>    PRINT(\"q2 * q1=\";)<br/>    PRINTQ(R.)<br/>END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 48, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">function</span> norm<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> q<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">sqrt</span><span class=\"br0\">(</span><span class=\"kw2\">power</span><span class=\"br0\">(</span>q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"kw2\">power</span><span class=\"br0\">(</span>q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"kw2\">power</span><span class=\"br0\">(</span>q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"kw2\">power</span><span class=\"br0\">(</span>q<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> conj<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> q<span class=\"br0\">)</span><br/>    q<span class=\"br0\">[</span><span class=\"nu0\">2</span>..<span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"sy1\">-</span>q<span class=\"br0\">[</span><span class=\"nu0\">2</span>..<span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">return</span> q<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> add<span class=\"br0\">(</span><span class=\"kw2\">object</span> q1<span class=\"sy2\">,</span> <span class=\"kw2\">object</span> q2<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">atom</span><span class=\"br0\">(</span>q1<span class=\"br0\">)</span>\u00a0!<span class=\"sy1\">=</span> <span class=\"kw2\">atom</span><span class=\"br0\">(</span>q2<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">atom</span><span class=\"br0\">(</span>q1<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            q1 <span class=\"sy1\">=</span> <span class=\"br0\">{</span>q1<span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span><br/>            q2 <span class=\"sy1\">=</span> <span class=\"br0\">{</span>q2<span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">return</span> q1<span class=\"sy1\">+</span>q2<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> mul<span class=\"br0\">(</span><span class=\"kw2\">object</span> q1<span class=\"sy2\">,</span> <span class=\"kw2\">object</span> q2<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">sequence</span><span class=\"br0\">(</span>q1<span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"kw2\">sequence</span><span class=\"br0\">(</span>q2<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">{</span> q1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> q1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> q1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> q1<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><br/>                 q1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">+</span> q1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">+</span> q1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> q1<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><br/>                 q1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> q1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">+</span> q1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">+</span> q1<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy2\">,</span><br/>                 q1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy1\">+</span> q1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">-</span> q1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">+</span> q1<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy1\">*</span>q2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">return</span> q1<span class=\"sy1\">*</span>q2<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> quats<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> q<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%g +\u00a0%gi +\u00a0%gj +\u00a0%gk\"</span><span class=\"sy2\">,</span>q<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">constant</span><br/>    q  <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"nu0\">2</span><span class=\"sy2\">,</span> <span class=\"nu0\">3</span><span class=\"sy2\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy2\">,</span><br/>    q1 <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy2\">,</span> <span class=\"nu0\">3</span><span class=\"sy2\">,</span> <span class=\"nu0\">4</span><span class=\"sy2\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy2\">,</span><br/>    q2 <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy2\">,</span> <span class=\"nu0\">6</span><span class=\"sy2\">,</span> <span class=\"nu0\">7</span><span class=\"sy2\">,</span> <span class=\"nu0\">8</span><span class=\"br0\">}</span><span class=\"sy2\">,</span><br/>    r  <span class=\"sy1\">=</span> <span class=\"nu0\">7</span><br/>\u00a0<br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"norm(q) =\u00a0%g<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> norm<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"-q =\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>quats<span class=\"br0\">(</span><span class=\"sy1\">-</span>q<span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"conj(q) =\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>quats<span class=\"br0\">(</span>conj<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"q + r =\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>quats<span class=\"br0\">(</span>add<span class=\"br0\">(</span>q<span class=\"sy2\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"q1 + q2 =\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>quats<span class=\"br0\">(</span>add<span class=\"br0\">(</span>q1<span class=\"sy2\">,</span>q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"q1 * q2 =\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>quats<span class=\"br0\">(</span>mul<span class=\"br0\">(</span>q1<span class=\"sy2\">,</span>q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"q2 * q1 =\u00a0%s<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span>quats<span class=\"br0\">(</span>mul<span class=\"br0\">(</span>q2<span class=\"sy2\">,</span>q1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 63, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Struct<span class=\"sy0\">;</span> StructuralEquality<span class=\"sy0\">;</span> NoComparison<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">type</span> Quaternion<span class=\"br0\">(</span>r\u00a0: <span class=\"kw4\">float</span>, i\u00a0: <span class=\"kw4\">float</span>, j\u00a0: <span class=\"kw4\">float</span>, k\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">A</span> <span class=\"sy0\">=</span> r<br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">B</span> <span class=\"sy0\">=</span> i<br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">C</span> <span class=\"sy0\">=</span> j<br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">D</span> <span class=\"sy0\">=</span> k<br/>\u00a0<br/>    <span class=\"kw1\">new</span> <span class=\"br0\">(</span>f\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>f, <span class=\"nu0\">0</span>., <span class=\"nu0\">0</span>., <span class=\"nu0\">0</span>.<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">~-</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>q\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"sy0\">-</span>q.<span class=\"me1\">A</span>, <span class=\"sy0\">-</span>q.<span class=\"me1\">B</span>, <span class=\"sy0\">-</span>q.<span class=\"me1\">C</span>, <span class=\"sy0\">-</span>q.<span class=\"me1\">D</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>q1\u00a0: Quaternion, q2\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        Quaternion<span class=\"br0\">(</span>q1.<span class=\"me1\">A</span> <span class=\"sy0\">+</span> q2.<span class=\"me1\">A</span>, q1.<span class=\"me1\">B</span> <span class=\"sy0\">+</span> q2.<span class=\"me1\">B</span>, q1.<span class=\"me1\">C</span> <span class=\"sy0\">+</span> q2.<span class=\"me1\">C</span>, q1.<span class=\"me1\">D</span> <span class=\"sy0\">+</span> q2.<span class=\"me1\">D</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>q\u00a0: Quaternion, r\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> q <span class=\"sy0\">+</span> Quaternion<span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>r\u00a0: <span class=\"kw4\">float</span>, q: Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>r<span class=\"br0\">)</span> <span class=\"sy0\">+</span> q<br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>q1\u00a0: Quaternion, q2\u00a0: Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        Quaternion<span class=\"br0\">(</span><br/>            q1.<span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">A</span> <span class=\"sy0\">-</span> q1.<span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">B</span> <span class=\"sy0\">-</span> q1.<span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">C</span> <span class=\"sy0\">-</span> q1.<span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">D</span>,<br/>            q1.<span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">B</span> <span class=\"sy0\">+</span> q1.<span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">A</span> <span class=\"sy0\">+</span> q1.<span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">D</span> <span class=\"sy0\">-</span> q1.<span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">C</span>,<br/>            q1.<span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">C</span> <span class=\"sy0\">-</span> q1.<span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">D</span> <span class=\"sy0\">+</span> q1.<span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">A</span> <span class=\"sy0\">+</span> q1.<span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">B</span>,<br/>            q1.<span class=\"me1\">A</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">D</span> <span class=\"sy0\">+</span> q1.<span class=\"me1\">B</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">C</span> <span class=\"sy0\">-</span> q1.<span class=\"me1\">C</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">B</span> <span class=\"sy0\">+</span> q1.<span class=\"me1\">D</span> <span class=\"sy0\">*</span> q2.<span class=\"me1\">A</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>q\u00a0: Quaternion, r\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> q <span class=\"sy0\">*</span> Quaternion<span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>r\u00a0: <span class=\"kw4\">float</span>, q: Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>r<span class=\"br0\">)</span> <span class=\"sy0\">*</span> q<br/>\u00a0<br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">Norm</span> <span class=\"sy0\">=</span> Math.<span class=\"me1\">Sqrt</span><span class=\"br0\">(</span>r <span class=\"sy0\">*</span> r <span class=\"sy0\">+</span> i <span class=\"sy0\">*</span> i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> j <span class=\"sy0\">+</span> k <span class=\"sy0\">*</span> k<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">member</span> this.<span class=\"me1\">Conjugate</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>r, <span class=\"sy0\">-</span>i, <span class=\"sy0\">-</span>j, <span class=\"sy0\">-</span>k<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">override</span> this.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> sprintf <span class=\"st0\">\"Q(%f,\u00a0%f,\u00a0%f,\u00a0%f)\"</span> r i j k<br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> q <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">1</span>., <span class=\"nu0\">2</span>., <span class=\"nu0\">3</span>., <span class=\"nu0\">4</span>.<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> q1 <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">2</span>., <span class=\"nu0\">3</span>., <span class=\"nu0\">4</span>., <span class=\"nu0\">5</span>.<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> q2 <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">3</span>., <span class=\"nu0\">4</span>., <span class=\"nu0\">5</span>., <span class=\"nu0\">6</span>.<span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">7</span>.<br/>\u00a0<br/>    <span class=\"me1\">printfn</span> <span class=\"st0\">\"q =\u00a0%A\"</span> q<br/>    printfn <span class=\"st0\">\"q1 =\u00a0%A\"</span> q1<br/>    printfn <span class=\"st0\">\"q2 =\u00a0%A\"</span> q2<br/>    printfn <span class=\"st0\">\"r =\u00a0%A\"</span> r<br/>\u00a0<br/>    printfn <span class=\"st0\">\"q.Norm =\u00a0%A\"</span> q.<span class=\"me1\">Norm</span><br/>    printfn <span class=\"st0\">\"q1.Norm =\u00a0%A\"</span> q1.<span class=\"me1\">Norm</span><br/>    printfn <span class=\"st0\">\"q2.Norm =\u00a0%A\"</span> q2.<span class=\"me1\">Norm</span><br/>\u00a0<br/>    printfn <span class=\"st0\">\"-q =\u00a0%A\"</span> <span class=\"sy0\">-</span>q<br/>    printfn <span class=\"st0\">\"q.Conjugate =\u00a0%A\"</span> q.<span class=\"me1\">Conjugate</span><br/>\u00a0<br/>    printfn <span class=\"st0\">\"q + r =\u00a0%A\"</span> <span class=\"br0\">(</span>q <span class=\"sy0\">+</span> <span class=\"br0\">(</span>Quaternion r<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    printfn <span class=\"st0\">\"q1 + q2 =\u00a0%A\"</span> <span class=\"br0\">(</span>q1 <span class=\"sy0\">+</span> q2<span class=\"br0\">)</span><br/>    printfn <span class=\"st0\">\"q2 + q1 =\u00a0%A\"</span> <span class=\"br0\">(</span>q2 <span class=\"sy0\">+</span> q1<span class=\"br0\">)</span><br/>\u00a0<br/>    printfn <span class=\"st0\">\"q * r =\u00a0%A\"</span> <span class=\"br0\">(</span>q <span class=\"sy0\">*</span> r<span class=\"br0\">)</span><br/>    printfn <span class=\"st0\">\"q1 * q2 =\u00a0%A\"</span> <span class=\"br0\">(</span>q1 <span class=\"sy0\">*</span> q2<span class=\"br0\">)</span><br/>    printfn <span class=\"st0\">\"q2 * q1 =\u00a0%A\"</span> <span class=\"br0\">(</span>q2 <span class=\"sy0\">*</span> q1<span class=\"br0\">)</span><br/>\u00a0<br/>    printfn <span class=\"st0\">\"q1*q2\u00a0%s q2*q1\"</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>q1 <span class=\"sy0\">*</span> q2<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>q2 <span class=\"sy0\">*</span> q1<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"=\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\"&lt;&gt;\"</span><span class=\"br0\">)</span><br/>    printfn <span class=\"st0\">\"q\u00a0%s Q(1.,2.,3.,4.)\"</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> q <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">1</span>., <span class=\"nu0\">2</span>., <span class=\"nu0\">3</span>., <span class=\"nu0\">4</span>.<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"=\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\"&lt;&gt;\"</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Factor", "loc": 27, "block": "<pre class=\"text highlighted_source\">USING: generalizations io kernel locals math.quaternions<br/>math.vectors prettyprint sequences\u00a0;<br/>IN: rosetta-code.quaternion-type<br/>\u00a0<br/>: show ( quot -- )<br/>    [ unparse 2 tail but-last \"= \" append write ] [ call . ] bi<br/>   \u00a0; inline<br/>\u00a0<br/>: 2show ( quots -- )<br/>    [ 2curry show ] map-compose [ call ] each\u00a0; inline<br/>\u00a0<br/>: q+n ( q n -- q+n ) n&gt;q q+\u00a0;<br/>\u00a0<br/>[let<br/>    { 1 2 3 4 } 7 { 2 3 4 5 } { 3 4 5 6 }\u00a0:&gt; ( q r q1 q2 )<br/>    q [ norm ]<br/>    q [ vneg ]<br/>    q [ qconjugate ]<br/>    [ curry show ] <a class=\"__cf_email__\" data-cfemail=\"3b094f49527b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>    {<br/>        [ q  r  [ q+n ] ]<br/>        [ q  r  [ q*n ] ]<br/>        [ q1 q2 [ q+  ] ]<br/>        [ q1 q2 [ q*  ] ]<br/>        [ q2 q1 [ q*  ] ]<br/>    } 2show<br/>]</pre>"}, {"lang": "Forth", "loc": 77, "block": "<pre class=\"text highlighted_source\">: quaternions  4 * floats\u00a0;<br/>\u00a0<br/>: qvariable create 1 quaternions allot\u00a0;<br/>\u00a0<br/>: q! ( a b c d q -- )<br/>  dup 3 floats + f!  dup 2 floats + f!  dup float+ f!  f!\u00a0;<br/>\u00a0<br/>: qcopy ( src dest -- ) 1 quaternions move\u00a0;<br/>\u00a0<br/>: qnorm  ( q -- f )<br/>  0e 4 0 do  dup <a class=\"__cf_email__\" data-cfemail=\"d1b791\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> fdup f* f+  float+ loop drop fsqrt\u00a0;<br/>\u00a0<br/>: qf* ( q f -- )<br/>  4 0 do dup <a class=\"__cf_email__\" data-cfemail=\"6b0d2b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> fover f* dup f!  float+ loop fdrop drop\u00a0;<br/>\u00a0<br/>: qnegate ( q -- )  -1e qf*\u00a0;<br/>\u00a0<br/>: qconj ( q -- )<br/>  float+ 3 0 do dup <a class=\"__cf_email__\" data-cfemail=\"630523\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> fnegate dup f!  float+ loop drop\u00a0;<br/>\u00a0<br/>: qf+ ( q f -- ) dup <a class=\"__cf_email__\" data-cfemail=\"9afcda\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> f+ f!\u00a0;<br/>\u00a0<br/>: q+ ( q1 q2 -- )<br/>  4 0 do over <a class=\"__cf_email__\" data-cfemail=\"690f29\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> dup <a class=\"__cf_email__\" data-cfemail=\"741234\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> f+ dup f!  float+ swap float+ swap loop 2drop\u00a0;<br/>\u00a0<br/>\\ access<br/>: q.a             <a class=\"__cf_email__\" data-cfemail=\"deb89e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0;<br/>: q.b      float+ <a class=\"__cf_email__\" data-cfemail=\"ee88ae\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0;<br/>: q.c  2 floats + <a class=\"__cf_email__\" data-cfemail=\"b0d6f0\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0;<br/>: q.d  3 floats + <a class=\"__cf_email__\" data-cfemail=\"c2a482\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0;<br/>\u00a0<br/>: q* ( dest q1 q2 -- )<br/>  over q.a dup q.d f*  over q.b dup q.c f* f+  over q.c dup q.b f* f-  over q.d dup q.a f* f+<br/>  over q.a dup q.c f*  over q.b dup q.d f* f-  over q.c dup q.a f* f+  over q.d dup q.b f* f+<br/>  over q.a dup q.b f*  over q.b dup q.a f* f+  over q.c dup q.d f* f+  over q.d dup q.c f* f-<br/>  over q.a dup q.a f*  over q.b dup q.b f* f-  over q.c dup q.c f* f-  over q.d dup q.d f* f-<br/>  2drop  4 0 do dup f!  float+ loop  drop\u00a0;<br/>\u00a0<br/>: q= ( q1 q2 --\u00a0? )<br/>  4 0 do<br/>    over <a class=\"__cf_email__\" data-cfemail=\"5f391f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> dup <a class=\"__cf_email__\" data-cfemail=\"670127\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> f&lt;&gt; if 2drop false unloop exit then<br/>    float+ swap float+<br/>  loop<br/>  2drop true\u00a0;<br/>\u00a0<br/>\\ testing<br/>\u00a0<br/>: q. ( q -- )<br/>  [char] ( emit space<br/>  4 0 do dup <a class=\"__cf_email__\" data-cfemail=\"fa9cba\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> f.  float+ loop drop<br/>  [char] ) emit space\u00a0;<br/>\u00a0<br/>qvariable q   1e 2e 3e 4e q  q!<br/>qvariable q1  2e 3e 4e 5e q1 q!<br/>create q2     3e f, 4e f, 5e f, 6e f,\t\\ by hand<br/>\u00a0<br/>qvariable tmp<br/>qvariable m1<br/>qvariable m2<br/>\u00a0<br/>q qnorm f.\t\t\t\t\\ 5.47722557505166<br/>q tmp qcopy  tmp qnegate  tmp q.\t\\ ( -1. -2. -3. -4. )<br/>q tmp qcopy  tmp qconj    tmp q.\t\\ ( 1. -2. -3. -4. )<br/>\u00a0<br/>q m1 qcopy  m1 7e qf+   m1 q.\t\t\\ ( 8. 2. 3. 4. )<br/>q m2 qcopy  7e m2 qf+   m2 q.\t\t\\ ( 8. 2. 3. 4. )<br/>m1 m2 q= .\t\t\t\t\\ -1  (true)<br/>\u00a0<br/>q2 tmp qcopy  q1 tmp q+   tmp q.\t\\ ( 5. 7. 9. 11. )<br/>\u00a0<br/>q m1 qcopy  m1 7e qf*     m1 q.\t\t\\ ( 7. 14. 21. 28. )<br/>q m2 qcopy  7e m2 qf*     m2 q.\t\t\\ ( 7. 14. 21. 28. )<br/>m1 m2 q= .\t\t\t\t\\ -1  (true)<br/>\u00a0<br/>m1 q1 q2 q*  m1 q.\t\t\t\\ ( -56. 16. 24. 26. )<br/>m2 q2 q1 q*  m2 q.\t\t\t\\ ( -56. 18. 20. 28. )<br/>m1 m2 q= .\t\t\t\t\\ 0  (false)</pre>"}, {"lang": "Fortran", "loc": 161, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">module</span> Q_mod<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">type</span> quaternion<br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span>, b, c, d<br/>  <span class=\"kw1\">end</span> <span class=\"kw3\">type</span><br/>\u00a0<br/>  <span class=\"kw3\">public</span> <span class=\"sy0\">::</span> <span class=\"me2\">norm</span>, neg, conj<br/>  <span class=\"kw3\">public</span> <span class=\"sy0\">::</span> <span class=\"kw1\">operator</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">public</span> <span class=\"sy0\">::</span> <span class=\"kw1\">operator</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw3\">private</span> <span class=\"sy0\">::</span>  <span class=\"me2\">q_plus_q</span>, q_plus_r, r_plus_q, <span class=\"sy0\">&amp;</span><br/>              q_mult_q, q_mult_r, r_mult_q, <span class=\"sy0\">&amp;</span><br/>              norm_q, neg_q, conj_q<br/>\u00a0<br/>  <span class=\"kw1\">interface</span> norm<br/>    <span class=\"kw1\">module</span> <span class=\"kw1\">procedure</span> norm_q<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>\u00a0<br/>  <span class=\"kw1\">interface</span> neg<br/>    <span class=\"kw1\">module</span> <span class=\"kw1\">procedure</span> neg_q<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>\u00a0<br/>  <span class=\"kw1\">interface</span> conj<br/>    <span class=\"kw1\">module</span> <span class=\"kw1\">procedure</span> conj_q<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>\u00a0<br/>  <span class=\"kw1\">interface</span> <span class=\"kw1\">operator</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">module</span> <span class=\"kw1\">procedure</span> q_plus_q, q_plus_r, r_plus_q<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>\u00a0<br/>  <span class=\"kw1\">interface</span> <span class=\"kw1\">operator</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">module</span> <span class=\"kw1\">procedure</span> q_mult_q, q_mult_r, r_mult_q<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/><span class=\"kw1\">function</span> norm_q<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>\u00a0<br/>  res <span class=\"sy0\">=</span> <span class=\"kw4\">sqrt</span><span class=\"br0\">(</span>x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>x<span class=\"sy0\">%</span>a <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>x<span class=\"sy0\">%</span>b <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>x<span class=\"sy0\">%</span>c <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>x<span class=\"sy0\">%</span>d<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> norm_q<br/>\u00a0<br/><span class=\"kw1\">function</span> neg_q<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>\u00a0<br/>  res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>a<br/>  res<span class=\"sy0\">%</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>b<br/>  res<span class=\"sy0\">%</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>c<br/>  res<span class=\"sy0\">%</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>d<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> neg_q<br/>\u00a0<br/><span class=\"kw1\">function</span> conj_q<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>\u00a0<br/>  res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<br/>  res<span class=\"sy0\">%</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>b<br/>  res<span class=\"sy0\">%</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>c<br/>  res<span class=\"sy0\">%</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>x<span class=\"sy0\">%</span>d<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> conj_q<br/>\u00a0<br/><span class=\"kw1\">function</span> q_plus_q<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"kw3\">result</span> <span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span>, y<br/>\u00a0<br/>  res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a <span class=\"sy0\">+</span> y<span class=\"sy0\">%</span>a<br/>  res<span class=\"sy0\">%</span>b <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>b <span class=\"sy0\">+</span> y<span class=\"sy0\">%</span>b<br/>  res<span class=\"sy0\">%</span>c <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>c <span class=\"sy0\">+</span> y<span class=\"sy0\">%</span>c<br/>  res<span class=\"sy0\">%</span>d <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>d <span class=\"sy0\">+</span> y<span class=\"sy0\">%</span>d<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> q_plus_q<br/>\u00a0<br/><span class=\"kw1\">function</span> q_plus_r<span class=\"br0\">(</span>x, r<span class=\"br0\">)</span> <span class=\"kw3\">result</span> <span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span> <br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span><br/>\u00a0<br/>   res <span class=\"sy0\">=</span> x<br/>   res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a <span class=\"sy0\">+</span> r<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> q_plus_r<br/>\u00a0<br/><span class=\"kw1\">function</span> r_plus_q<span class=\"br0\">(</span>r, x<span class=\"br0\">)</span> <span class=\"kw3\">result</span> <span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span> <br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span><br/>\u00a0<br/>   res <span class=\"sy0\">=</span> x<br/>   res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a <span class=\"sy0\">+</span> r<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> r_plus_q<br/>\u00a0<br/><span class=\"kw1\">function</span> q_mult_q<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"kw3\">result</span> <span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span> <br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span>, y<br/>\u00a0<br/>   res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>a <span class=\"sy0\">-</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>b <span class=\"sy0\">-</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>c <span class=\"sy0\">-</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>d<br/>   res<span class=\"sy0\">%</span>b <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>b <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>a <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>d <span class=\"sy0\">-</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>c<br/>   res<span class=\"sy0\">%</span>c <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>c <span class=\"sy0\">-</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>d <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>a <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>b<br/>   res<span class=\"sy0\">%</span>d <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>d <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>c <span class=\"sy0\">-</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>b <span class=\"sy0\">+</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>y<span class=\"sy0\">%</span>a<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> q_mult_q<br/>\u00a0<br/><span class=\"kw1\">function</span> q_mult_r<span class=\"br0\">(</span>x, r<span class=\"br0\">)</span> <span class=\"kw3\">result</span> <span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span> <br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span>  <span class=\"me2\">r</span><br/>\u00a0<br/>   res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>r<br/>   res<span class=\"sy0\">%</span>b <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>r<br/>   res<span class=\"sy0\">%</span>c <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>r  <br/>   res<span class=\"sy0\">%</span>d <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>r <br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> q_mult_r<br/>\u00a0<br/><span class=\"kw1\">function</span> r_mult_q<span class=\"br0\">(</span>r, x<span class=\"br0\">)</span> <span class=\"kw3\">result</span> <span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">res</span> <br/>  <span class=\"kw3\">type</span> <span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span> <span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span><br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span>  <span class=\"me2\">r</span><br/>\u00a0<br/>   res<span class=\"sy0\">%</span>a <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>a<span class=\"sy0\">*</span>r<br/>   res<span class=\"sy0\">%</span>b <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>b<span class=\"sy0\">*</span>r<br/>   res<span class=\"sy0\">%</span>c <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>c<span class=\"sy0\">*</span>r  <br/>   res<span class=\"sy0\">%</span>d <span class=\"sy0\">=</span> x<span class=\"sy0\">%</span>d<span class=\"sy0\">*</span>r <br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span> r_mult_q<br/><span class=\"kw1\">end</span> <span class=\"kw1\">module</span> Q_mod<br/>\u00a0<br/><span class=\"kw1\">program</span> Quaternions<br/>  <span class=\"kw3\">use</span> Q_mod<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7.0</span><br/>  <span class=\"kw3\">type</span><span class=\"br0\">(</span>quaternion<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">q</span>, q1, q2<br/>\u00a0<br/>  q  <span class=\"sy0\">=</span> quaternion<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  q1 <span class=\"sy0\">=</span> quaternion<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  q2 <span class=\"sy0\">=</span> quaternion<span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>\u00a0<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"             q = \"</span>, q<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"            q1 = \"</span>, q1<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"            q2 = \"</span>, q2<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, f8.3)\"</span><span class=\"br0\">)</span>  <span class=\"st0\">\"             r = \"</span>, r<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, f8.3)\"</span><span class=\"br0\">)</span>  <span class=\"st0\">\"     Norm of q = \"</span>, norm<span class=\"br0\">(</span>q<span class=\"br0\">)</span> <br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\" Negative of q = \"</span>, neg<span class=\"br0\">(</span>q<span class=\"br0\">)</span><br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"Conjugate of q = \"</span>, conj<span class=\"br0\">(</span>q<span class=\"br0\">)</span> <br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"         q + r = \"</span>, q <span class=\"sy0\">+</span> r<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"         r + q = \"</span>, r <span class=\"sy0\">+</span> q<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"       q1 + q2 = \"</span>, q1 <span class=\"sy0\">+</span> q2<br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"         q * r = \"</span>, q <span class=\"sy0\">*</span> r  <br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"         r * q = \"</span>, r <span class=\"sy0\">*</span> q <br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"       q1 * q2 = \"</span>, q1 <span class=\"sy0\">*</span> q2 <br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a, 4f8.3)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"       q2 * q1 = \"</span>, q2 <span class=\"sy0\">*</span> q1 <br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span></pre>"}, {"lang": "GAP", "loc": 110, "block": "<pre class=\"text highlighted_source\"># GAP has built-in support for quaternions<br/>\u00a0<br/>A\u00a0:= QuaternionAlgebra(Rationals);<br/># &lt;algebra-with-one of dimension 4 over Rationals&gt;<br/>\u00a0<br/>b\u00a0:= BasisVectors(Basis(A));<br/># [ e, i, j, k ]<br/>\u00a0<br/>q\u00a0:= [1, 2, 3, 4]*b;<br/># e+(2)*i+(3)*j+(4)*k<br/>\u00a0<br/># Conjugate<br/>ComplexConjugate(q);<br/># e+(-2)*i+(-3)*j+(-4)*k<br/>\u00a0<br/># Division<br/>1/q;<br/># (1/30)*e+(-1/15)*i+(-1/10)*j+(-2/15)*k<br/>\u00a0<br/># Computing norm may be difficult, since the result would be in a quadratic field.<br/># Sqrt exists in GAP, but it is quite unusual: see\u00a0?E in GAP documentation, and the following example<br/>Sqrt(5/3);<br/># 1/3*E(60)^7+1/3*E(60)^11-1/3*E(60)^19-1/3*E(60)^23-1/3*E(60)^31+1/3*E(60)^43-1/3*E(60)^47+1/3*E(60)^59<br/>\u00a0<br/># However, the square of the norm is easy to compute<br/>q*ComplexConjugate(q);<br/># (30)*e<br/>\u00a0<br/>q1\u00a0:= [2, 3, 4, 5]*b;<br/># (2)*e+(3)*i+(4)*j+(5)*k<br/>\u00a0<br/>q2\u00a0:= [3, 4, 5, 6]*b;<br/># (3)*e+(4)*i+(5)*j+(6)*k<br/>\u00a0<br/>q1*q2 - q2*q1;<br/># (-2)*i+(4)*j+(-2)*k<br/>\u00a0<br/># Can't add directly to a rational, one must make a quaternion of it<br/>r\u00a0:= 5/3*b[1];<br/># (5/3)*e<br/>r + q;<br/># (8/3)*e+(2)*i+(3)*j+(4)*k<br/>\u00a0<br/># For multiplication, no problem (we are in an algebra over rationals\u00a0!)<br/>r*q;<br/># (5/3)*e+(10/3)*i+(5)*j+(20/3)*k<br/>5/3*q;<br/># (5/3)*e+(10/3)*i+(5)*j+(20/3)*k<br/>\u00a0<br/># Negative<br/>-q;<br/>(-1)*e+(-2)*i+(-3)*j+(-4)*k<br/>\u00a0<br/>\u00a0<br/># While quaternions are built-in, you can define an algebra in GAP by specifying it's multiplication table.<br/># See tutorial, p. 60, and reference of the functions used below.<br/>\u00a0<br/># A multiplication table of dimension 4.<br/>\u00a0<br/>T\u00a0:= EmptySCTable(4, 0);<br/>SetEntrySCTable(T, 1, 1, [1, 1]);<br/>SetEntrySCTable(T, 1, 2, [1, 2]);<br/>SetEntrySCTable(T, 1, 3, [1, 3]);<br/>SetEntrySCTable(T, 1, 4, [1, 4]);<br/>SetEntrySCTable(T, 2, 1, [1, 2]);<br/>SetEntrySCTable(T, 2, 2, [-1, 1]);<br/>SetEntrySCTable(T, 2, 3, [1, 4]);<br/>SetEntrySCTable(T, 2, 4, [-1, 3]);<br/>SetEntrySCTable(T, 3, 1, [1, 3]);<br/>SetEntrySCTable(T, 3, 2, [-1, 4]);<br/>SetEntrySCTable(T, 3, 3, [-1, 1]);<br/>SetEntrySCTable(T, 3, 4, [1, 2]);<br/>SetEntrySCTable(T, 4, 1, [1, 4]);<br/>SetEntrySCTable(T, 4, 2, [1, 3]);<br/>SetEntrySCTable(T, 4, 3, [-1, 2]);<br/>SetEntrySCTable(T, 4, 4, [-1, 1]);<br/>\u00a0<br/>A\u00a0:= AlgebraByStructureConstants(Rationals, T, [\"e\", \"i\", \"j\", \"k\"]);<br/>b\u00a0:= GeneratorsOfAlgebra(A);<br/>\u00a0<br/>IsAssociative(A);<br/># true<br/>\u00a0<br/>IsCommutative(A);<br/># false<br/>\u00a0<br/># Then, like above<br/>\u00a0<br/>q\u00a0:= [1, 2, 3, 4]*b;<br/># e+(2)*i+(3)*j+(4)*k<br/>\u00a0<br/># However, as is, GAP does not know division or conjugate on this algebra.<br/># QuaternionAlgebra is useful as well for extensions of rationals,<br/># and this one _has_ conjugate and division, as seen previously.<br/>\u00a0<br/># Try this on Q[z] where z is the square root of 5 (in GAP it's ER(5))<br/>F\u00a0:= FieldByGenerators([ER(5)]);<br/>A\u00a0:= QuaternionAlgebra(F);<br/>b\u00a0:= GeneratorsOfAlgebra(A);<br/>\u00a0<br/>q\u00a0:= [1, 2, 3, 4]*b;<br/># e+(2)*i+(3)*j+(4)*k<br/>\u00a0<br/># Conjugate and division<br/>\u00a0<br/>ComplexConjugate(q);<br/># e+(-2)*i+(-3)*j+(-4)*k<br/>\u00a0<br/>1/q;<br/># (1/30)*e+(-1/15)*i+(-1/10)*j+(-2/15)*k</pre>"}, {"lang": "Go", "loc": 79, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">type</span> qtn <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    r<span class=\"sy1\">,</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> j<span class=\"sy1\">,</span> k <span class=\"kw4\">float64</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> <span class=\"sy1\">(</span><br/>    q  <span class=\"sy2\">=</span> &amp;qtn<span class=\"sy1\">{</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">}</span><br/>    q1 <span class=\"sy2\">=</span> &amp;qtn<span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">}</span><br/>    q2 <span class=\"sy2\">=</span> &amp;qtn<span class=\"sy1\">{</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">}</span><br/>\u00a0<br/>    r  <span class=\"kw4\">float64</span> <span class=\"sy2\">=</span> <span class=\"nu0\">7</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Inputs\"</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"q:\"</span><span class=\"sy1\">,</span> q<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"q1:\"</span><span class=\"sy1\">,</span> q1<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"q2:\"</span><span class=\"sy1\">,</span> q2<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"r:\"</span><span class=\"sy1\">,</span> r<span class=\"sy1\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">var</span> qr qtn<br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Functions\"</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"q.norm():\"</span><span class=\"sy1\">,</span> q<span class=\"sy3\">.</span><span class=\"me1\">norm</span><span class=\"sy1\">())</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"neg(q):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span><span class=\"me1\">neg</span><span class=\"sy1\">(</span>q<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"conj(q):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span><span class=\"me1\">conj</span><span class=\"sy1\">(</span>q<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"addF(q, r):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span><span class=\"me1\">addF</span><span class=\"sy1\">(</span>q<span class=\"sy1\">,</span> r<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"addQ(q1, q2):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span>addQ<span class=\"sy1\">(</span>q1<span class=\"sy1\">,</span> q2<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"mulF(q, r):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span><span class=\"me1\">mulF</span><span class=\"sy1\">(</span>q<span class=\"sy1\">,</span> r<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"mulQ(q1, q2):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span>mulQ<span class=\"sy1\">(</span>q1<span class=\"sy1\">,</span> q2<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"mulQ(q2, q1):\"</span><span class=\"sy1\">,</span> qr<span class=\"sy3\">.</span>mulQ<span class=\"sy1\">(</span>q2<span class=\"sy1\">,</span> q1<span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>q <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> String<span class=\"sy1\">()</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> fmt<span class=\"sy3\">.</span>Sprintf<span class=\"sy1\">(</span><span class=\"st0\">\"(%g,\u00a0%g,\u00a0%g,\u00a0%g)\"</span><span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>k<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>q <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> norm<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> math<span class=\"sy3\">.</span>Sqrt<span class=\"sy1\">(</span>q<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>q<span class=\"sy3\">.</span>r <span class=\"sy3\">+</span> q<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">*</span>q<span class=\"sy3\">.</span><span class=\"nu2\">i</span> <span class=\"sy3\">+</span> q<span class=\"sy3\">.</span>j<span class=\"sy3\">*</span>q<span class=\"sy3\">.</span>j <span class=\"sy3\">+</span> q<span class=\"sy3\">.</span>k<span class=\"sy3\">*</span>q<span class=\"sy3\">.</span>k<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> neg<span class=\"sy1\">(</span>q <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>qtn <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>k <span class=\"sy2\">=</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span>k<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> conj<span class=\"sy1\">(</span>q <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>qtn <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>k <span class=\"sy2\">=</span> q<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> <span class=\"sy3\">-</span>q<span class=\"sy3\">.</span>k<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> addF<span class=\"sy1\">(</span>q <span class=\"sy3\">*</span>qtn<span class=\"sy1\">,</span> r <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>qtn <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>k <span class=\"sy2\">=</span> q<span class=\"sy3\">.</span>r<span class=\"sy3\">+</span>r<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>k<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> addQ<span class=\"sy1\">(</span>q1<span class=\"sy1\">,</span> q2 <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>qtn <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>k <span class=\"sy2\">=</span> q1<span class=\"sy3\">.</span>r<span class=\"sy3\">+</span>q2<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> q1<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span>q2<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> q1<span class=\"sy3\">.</span>j<span class=\"sy3\">+</span>q2<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> q1<span class=\"sy3\">.</span>k<span class=\"sy3\">+</span>q2<span class=\"sy3\">.</span>k<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> mulF<span class=\"sy1\">(</span>q <span class=\"sy3\">*</span>qtn<span class=\"sy1\">,</span> r <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy3\">*</span>qtn <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>k <span class=\"sy2\">=</span> q<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>r<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">*</span>r<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>j<span class=\"sy3\">*</span>r<span class=\"sy1\">,</span> q<span class=\"sy3\">.</span>k<span class=\"sy3\">*</span>r<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>z <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> mulQ<span class=\"sy1\">(</span>q1<span class=\"sy1\">,</span> q2 <span class=\"sy3\">*</span>qtn<span class=\"sy1\">)</span> <span class=\"sy3\">*</span>qtn <span class=\"sy1\">{</span><br/>    z<span class=\"sy3\">.</span>r<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span> z<span class=\"sy3\">.</span>k <span class=\"sy2\">=</span><br/>        q1<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>r<span class=\"sy3\">-</span>q1<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">-</span>q1<span class=\"sy3\">.</span>j<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>j<span class=\"sy3\">-</span>q1<span class=\"sy3\">.</span>k<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>k<span class=\"sy1\">,</span><br/>        q1<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span>q1<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>r<span class=\"sy3\">+</span>q1<span class=\"sy3\">.</span>j<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>k<span class=\"sy3\">-</span>q1<span class=\"sy3\">.</span>k<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>j<span class=\"sy1\">,</span><br/>        q1<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>j<span class=\"sy3\">-</span>q1<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>k<span class=\"sy3\">+</span>q1<span class=\"sy3\">.</span>j<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>r<span class=\"sy3\">+</span>q1<span class=\"sy3\">.</span>k<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span><br/>        q1<span class=\"sy3\">.</span>r<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>k<span class=\"sy3\">+</span>q1<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>j<span class=\"sy3\">-</span>q1<span class=\"sy3\">.</span>j<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span>q1<span class=\"sy3\">.</span>k<span class=\"sy3\">*</span>q2<span class=\"sy3\">.</span>r<br/>    <span class=\"kw1\">return</span> z<br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 43, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a> <span class=\"br0\">(</span>join<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">data</span> Quaternion <span class=\"sy0\">=</span><br/>  Q <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>  <span class=\"kw1\">deriving</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Show\"><span class=\"kw4\">Show</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Eq\"><span class=\"kw4\">Eq</span></a><span class=\"br0\">)</span><br/>\u00a0<br/>realQ <span class=\"sy0\">::</span> Quaternion <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>realQ <span class=\"br0\">(</span>Q r <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> r<br/>\u00a0<br/>imagQ <span class=\"sy0\">::</span> Quaternion <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span><br/>imagQ <span class=\"br0\">(</span>Q <span class=\"sy0\">_</span> i j k<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"br0\">]</span><br/>\u00a0<br/>quaternionFromScalar <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a> <span class=\"sy0\">-&gt;</span> Quaternion<br/>quaternionFromScalar s <span class=\"sy0\">=</span> Q s <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>listFromQ <span class=\"sy0\">::</span> Quaternion <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span><br/>listFromQ <span class=\"br0\">(</span>Q a b c d<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">]</span><br/>\u00a0<br/>quaternionFromList <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> Quaternion<br/>quaternionFromList <span class=\"br0\">[</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Q a b c d<br/>\u00a0<br/>addQ<span class=\"sy0\">,</span> subQ<span class=\"sy0\">,</span> mulQ <span class=\"sy0\">::</span> Quaternion <span class=\"sy0\">-&gt;</span> Quaternion <span class=\"sy0\">-&gt;</span> Quaternion<br/>addQ <span class=\"br0\">(</span>Q a b c d<span class=\"br0\">)</span> <span class=\"br0\">(</span>Q p q r s<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Q <span class=\"br0\">(</span>a <span class=\"sy0\">+</span> p<span class=\"br0\">)</span> <span class=\"br0\">(</span>b <span class=\"sy0\">+</span> q<span class=\"br0\">)</span> <span class=\"br0\">(</span>c <span class=\"sy0\">+</span> r<span class=\"br0\">)</span> <span class=\"br0\">(</span>d <span class=\"sy0\">+</span> s<span class=\"br0\">)</span><br/>\u00a0<br/>subQ <span class=\"br0\">(</span>Q a b c d<span class=\"br0\">)</span> <span class=\"br0\">(</span>Q p q r s<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Q <span class=\"br0\">(</span>a <span class=\"sy0\">-</span> p<span class=\"br0\">)</span> <span class=\"br0\">(</span>b <span class=\"sy0\">-</span> q<span class=\"br0\">)</span> <span class=\"br0\">(</span>c <span class=\"sy0\">-</span> r<span class=\"br0\">)</span> <span class=\"br0\">(</span>d <span class=\"sy0\">-</span> s<span class=\"br0\">)</span><br/>\u00a0<br/>mulQ <span class=\"br0\">(</span>Q a b c d<span class=\"br0\">)</span> <span class=\"br0\">(</span>Q p q r s<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  Q<br/>    <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> p <span class=\"sy0\">-</span> b <span class=\"sy0\">*</span> q <span class=\"sy0\">-</span> c <span class=\"sy0\">*</span> r <span class=\"sy0\">-</span> d <span class=\"sy0\">*</span> s<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> q <span class=\"sy0\">+</span> b <span class=\"sy0\">*</span> p <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> s <span class=\"sy0\">-</span> d <span class=\"sy0\">*</span> r<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> r <span class=\"sy0\">-</span> b <span class=\"sy0\">*</span> s <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> p <span class=\"sy0\">+</span> d <span class=\"sy0\">*</span> q<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> s <span class=\"sy0\">+</span> b <span class=\"sy0\">*</span> r <span class=\"sy0\">-</span> c <span class=\"sy0\">*</span> q <span class=\"sy0\">+</span> d <span class=\"sy0\">*</span> p<span class=\"br0\">)</span><br/>\u00a0<br/>normQ <span class=\"sy0\">::</span> Quaternion <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>normQ <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a> <span class=\"sy0\">.</span> join <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zipWith\"><span class=\"kw3\">zipWith</span></a> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> listFromQ<br/>\u00a0<br/>conjQ<span class=\"sy0\">,</span> negQ <span class=\"sy0\">::</span> Quaternion <span class=\"sy0\">-&gt;</span> Quaternion<br/>conjQ <span class=\"br0\">(</span>Q a b c d<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Q a <span class=\"br0\">(</span><span class=\"sy0\">-</span>b<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>c<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>d<span class=\"br0\">)</span><br/>\u00a0<br/>negQ <span class=\"br0\">(</span>Q a b c d<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Q <span class=\"br0\">(</span><span class=\"sy0\">-</span>a<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>b<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>c<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>d<span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 45, "block": "<pre class=\"unicon highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span> Quaternion<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> norm <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">sqrt</span> <span class=\"br0\">(</span>a<span class=\"sy0\">*</span>a <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span>b <span class=\"sy0\">+</span> c<span class=\"sy0\">*</span>c <span class=\"sy0\">+</span> d<span class=\"sy0\">*</span>d<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> negative <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span><span class=\"sy0\">-</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>d<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> conjugate <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>d<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> add <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <br/>    <span class=\"kw1\">if</span> <span class=\"kw4\">type</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Quaternion__state\"</span> <br/>      <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>a<span class=\"sy0\">+</span>n<span class=\"sy0\">.</span><span class=\"me1\">a</span><span class=\"sy0\">,</span> b<span class=\"sy0\">+</span>n<span class=\"sy0\">.</span><span class=\"me1\">b</span><span class=\"sy0\">,</span> c<span class=\"sy0\">+</span>n<span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">,</span> d<span class=\"sy0\">+</span>n<span class=\"sy0\">.</span><span class=\"me1\">d</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>a<span class=\"sy0\">+</span>n<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> multiply <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <br/>    <span class=\"kw1\">if</span> <span class=\"kw4\">type</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Quaternion__state\"</span> <br/>      <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>a<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">-</span> b<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">b</span> <span class=\"sy0\">-</span> c<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"sy0\">-</span> d<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">d</span><span class=\"sy0\">,</span><br/>                             a<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">b</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">+</span> c<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">d</span> <span class=\"sy0\">-</span> d<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">c</span><span class=\"sy0\">,</span><br/>                             a<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"sy0\">-</span> b<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">d</span> <span class=\"sy0\">+</span> c<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">+</span> d<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">b</span><span class=\"sy0\">,</span><br/>                             a<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">d</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"sy0\">-</span> c<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">b</span> <span class=\"sy0\">+</span> d<span class=\"sy0\">*</span>n<span class=\"sy0\">.</span><span class=\"me1\">a</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> Quaternion<span class=\"br0\">(</span>a<span class=\"sy0\">*</span>n<span class=\"sy0\">,</span> b<span class=\"sy0\">*</span>n<span class=\"sy0\">,</span> c<span class=\"sy0\">*</span>n<span class=\"sy0\">,</span> d<span class=\"sy0\">*</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> sign <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw1\">if</span> n <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"+\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\"-\"</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">method</span> <span class=\"kw4\">string</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"st0\">\"\"</span> <span class=\"sy0\">||</span> a <span class=\"sy0\">||</span> sign<span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"st0\">\"i\"</span> <span class=\"sy0\">||</span> sign<span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"st0\">\"j\"</span> <span class=\"sy0\">||</span> sign<span class=\"br0\">(</span>d<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"kw4\">abs</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"st0\">\"k\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">initially</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d<span class=\"br0\">)</span><br/>    self<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">if</span> <span class=\"sy0\">/</span>a <span class=\"kw1\">then</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> a<br/>    self<span class=\"sy0\">.</span><span class=\"me1\">b</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">if</span> <span class=\"sy0\">/</span>b <span class=\"kw1\">then</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> b<br/>    self<span class=\"sy0\">.</span><span class=\"me1\">c</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">if</span> <span class=\"sy0\">/</span>c <span class=\"kw1\">then</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> c<br/>    self<span class=\"sy0\">.</span><span class=\"me1\">d</span> <span class=\"sy0\">:=</span> <span class=\"kw1\">if</span> <span class=\"sy0\">/</span>d <span class=\"kw1\">then</span> <span class=\"nu0\">0</span> <span class=\"kw1\">else</span> d<br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "J", "loc": 11, "block": "<pre class=\"j highlighted_source\">   <span class=\"co1\">NB. utilities</span><br/>   ip=:   +/ .*             <span class=\"co1\">NB. inner product</span><br/>   T=. <span class=\"sy0\">(</span><span class=\"nu0\">_1</span>^#:<span class=\"nu0\">0</span> <span class=\"nu0\">10</span> <span class=\"nu0\">9</span> <span class=\"nu0\">12</span><span class=\"sy0\">)</span>*<span class=\"nu0\">0</span> <span class=\"nu0\">7</span> <span class=\"nu0\">16</span> <span class=\"nu0\">23</span> A.=i.<span class=\"nu0\">4</span><br/>   toQ=:  <span class=\"nu0\">4</span>&amp;{.\"<span class=\"nu0\">1</span>\u00a0:[:        <span class=\"co1\">NB. real scalars -&gt; quaternion</span><br/>\u00a0<br/>   <span class=\"co1\">NB. task</span><br/>   norm=:\u00a0%:@<a class=\"__cf_email__\" data-cfemail=\"b0d9c0cef0c4dfe1\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>        <span class=\"co1\">NB. | y</span><br/>   neg=:  -&amp;toQ             <span class=\"co1\">NB. - y  and  x - y</span><br/>   conj=: <span class=\"nu0\">1</span> <span class=\"nu0\">_1</span> <span class=\"nu0\">_1</span> <span class=\"nu0\">_1</span> * toQ  <span class=\"co1\">NB. + y</span><br/>   add=:  +&amp;toQ             <span class=\"co1\">NB. x + y</span><br/>   mul=:  <span class=\"sy0\">(</span>ip T ip ]<span class=\"sy0\">)</span>&amp;toQ   <span class=\"co1\">NB. x * y</span></pre>"}, {"lang": "Java", "loc": 103, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Quaternion <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">final</span> <span class=\"kw4\">double</span> a, b, c, d<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion<span class=\"br0\">(</span><span class=\"kw4\">double</span> a, <span class=\"kw4\">double</span> b, <span class=\"kw4\">double</span> c, <span class=\"kw4\">double</span> d<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">a</span> <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">b</span> <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">c</span> <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">d</span> <span class=\"sy0\">=</span> d<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> Quaternion<span class=\"br0\">(</span><span class=\"kw4\">double</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span><span class=\"br0\">(</span>r, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> norm<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>a <span class=\"sy0\">*</span> a <span class=\"sy0\">+</span> b <span class=\"sy0\">*</span> b <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> c <span class=\"sy0\">+</span> d <span class=\"sy0\">*</span> d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion negative<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span><span class=\"sy0\">-</span>a, <span class=\"sy0\">-</span>b, <span class=\"sy0\">-</span>c, <span class=\"sy0\">-</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion conjugate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span>a, <span class=\"sy0\">-</span>b, <span class=\"sy0\">-</span>c, <span class=\"sy0\">-</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion add<span class=\"br0\">(</span><span class=\"kw4\">double</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span>a <span class=\"sy0\">+</span> r, b, c, d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion add<span class=\"br0\">(</span>Quaternion q, <span class=\"kw4\">double</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q.<span class=\"me1\">add</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion add<span class=\"br0\">(</span><span class=\"kw4\">double</span> r, Quaternion q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q.<span class=\"me1\">add</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> Quaternion add<span class=\"br0\">(</span>Quaternion q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span>a <span class=\"sy0\">+</span> q.<span class=\"me1\">a</span>, b <span class=\"sy0\">+</span> q.<span class=\"me1\">b</span>, c <span class=\"sy0\">+</span> q.<span class=\"me1\">c</span>, d <span class=\"sy0\">+</span> q.<span class=\"me1\">d</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion add<span class=\"br0\">(</span>Quaternion q1, Quaternion q2<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q1.<span class=\"me1\">add</span><span class=\"br0\">(</span>q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Quaternion times<span class=\"br0\">(</span><span class=\"kw4\">double</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span>a <span class=\"sy0\">*</span> r, b <span class=\"sy0\">*</span> r, c <span class=\"sy0\">*</span> r, d <span class=\"sy0\">*</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion times<span class=\"br0\">(</span>Quaternion q, <span class=\"kw4\">double</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q.<span class=\"me1\">times</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion times<span class=\"br0\">(</span><span class=\"kw4\">double</span> r, Quaternion q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q.<span class=\"me1\">times</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> Quaternion times<span class=\"br0\">(</span>Quaternion q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span><br/>            a <span class=\"sy0\">*</span> q.<span class=\"me1\">a</span> <span class=\"sy0\">-</span> b <span class=\"sy0\">*</span> q.<span class=\"me1\">b</span> <span class=\"sy0\">-</span> c <span class=\"sy0\">*</span> q.<span class=\"me1\">c</span> <span class=\"sy0\">-</span> d <span class=\"sy0\">*</span> q.<span class=\"me1\">d</span>,<br/>            a <span class=\"sy0\">*</span> q.<span class=\"me1\">b</span> <span class=\"sy0\">+</span> b <span class=\"sy0\">*</span> q.<span class=\"me1\">a</span> <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> q.<span class=\"me1\">d</span> <span class=\"sy0\">-</span> d <span class=\"sy0\">*</span> q.<span class=\"me1\">c</span>,<br/>            a <span class=\"sy0\">*</span> q.<span class=\"me1\">c</span> <span class=\"sy0\">-</span> b <span class=\"sy0\">*</span> q.<span class=\"me1\">d</span> <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> q.<span class=\"me1\">a</span> <span class=\"sy0\">+</span> d <span class=\"sy0\">*</span> q.<span class=\"me1\">b</span>,<br/>            a <span class=\"sy0\">*</span> q.<span class=\"me1\">d</span> <span class=\"sy0\">+</span> b <span class=\"sy0\">*</span> q.<span class=\"me1\">c</span> <span class=\"sy0\">-</span> c <span class=\"sy0\">*</span> q.<span class=\"me1\">b</span> <span class=\"sy0\">+</span> d <span class=\"sy0\">*</span> q.<span class=\"me1\">a</span><br/>        <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> Quaternion times<span class=\"br0\">(</span>Quaternion q1, Quaternion q2<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> q1.<span class=\"me1\">times</span><span class=\"br0\">(</span>q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">boolean</span> equals<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aobject+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Object</span></a> obj<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>obj <span class=\"kw1\">instanceof</span> Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">final</span> Quaternion other <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span> obj<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">a</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span>other.<span class=\"me1\">a</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">b</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span>other.<span class=\"me1\">b</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">c</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span>other.<span class=\"me1\">c</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">d</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a>.<span class=\"me1\">doubleToLongBits</span><span class=\"br0\">(</span>other.<span class=\"me1\">d</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    @Override<br/>    <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"%.2f +\u00a0%.2fi +\u00a0%.2fj +\u00a0%.2fk\"</span>, a, b, c, d<span class=\"br0\">)</span>.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\\\</span>+ -\"</span>, <span class=\"st0\">\"- \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> toQuadruple<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"(%.2f,\u00a0%.2f,\u00a0%.2f,\u00a0%.2f)\"</span>, a, b, c, d<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        Quaternion q <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">2.0</span>, <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Quaternion q1 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">2.0</span>, <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Quaternion q2 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span>, <span class=\"nu0\">5.0</span>, <span class=\"nu0\">6.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">7.0</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q       =\u00a0%s%n\"</span>, q<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q1      =\u00a0%s%n\"</span>, q1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q2      =\u00a0%s%n\"</span>, q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"r       =\u00a0%.2f%n%n\"</span>, r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\u</span>2016q<span class=\"es0\">\\u</span>2016     =\u00a0%.2f%n\"</span>, q.<span class=\"me1\">norm</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"-q      =\u00a0%s%n\"</span>, q.<span class=\"me1\">negative</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q*      =\u00a0%s%n\"</span>, q.<span class=\"me1\">conjugate</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q + r   =\u00a0%s%n\"</span>, q.<span class=\"me1\">add</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q1 + q2 =\u00a0%s%n\"</span>, q1.<span class=\"me1\">add</span><span class=\"br0\">(</span>q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q <span class=\"es0\">\\u</span>00d7 r   =\u00a0%s%n\"</span>, q.<span class=\"me1\">times</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Quaternion q1q2 <span class=\"sy0\">=</span> q1.<span class=\"me1\">times</span><span class=\"br0\">(</span>q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Quaternion q2q1 <span class=\"sy0\">=</span> q2.<span class=\"me1\">times</span><span class=\"br0\">(</span>q1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q1 <span class=\"es0\">\\u</span>00d7 q2 =\u00a0%s%n\"</span>, q1q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q2 <span class=\"es0\">\\u</span>00d7 q1 =\u00a0%s%n\"</span>, q2q1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"q1 <span class=\"es0\">\\u</span>00d7 q2\u00a0%s q2 <span class=\"es0\">\\u</span>00d7 q1%n\"</span>, <span class=\"br0\">(</span>q1q2.<span class=\"me1\">equals</span><span class=\"br0\">(</span>q2q1<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"=\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"<span class=\"es0\">\\u</span>2260\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 58, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> Quaternion <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// The Q() function takes an array argument and changes it</span><br/>    <span class=\"co1\">// prototype so that it becomes a Quaternion instance.  This is</span><br/>    <span class=\"co1\">// scoped only for prototype member access.</span><br/>    <span class=\"kw1\">function</span> Q<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\ta.<span class=\"kw3\">__proto__</span> <span class=\"sy0\">=</span> proto<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> a<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Actual constructor.  This constructor converts its arguments to</span><br/>    <span class=\"co1\">// an array, then that array to a Quaternion instance, then</span><br/>    <span class=\"co1\">// returns that instance.  (using \"new\" with this constructor is</span><br/>    <span class=\"co1\">// optional)</span><br/>    <span class=\"kw1\">function</span> Quaternion<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"kw4\">Array</span>.<span class=\"kw1\">prototype</span>.<span class=\"me1\">slice</span>.<span class=\"me1\">call</span><span class=\"br0\">(</span>arguments<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// Prototype for all Quaternions</span><br/>    <span class=\"kw1\">const</span> proto <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>\t<span class=\"co1\">// Inherits from a 4-element Array</span><br/>\t<span class=\"kw3\">__proto__</span> <span class=\"sy0\">:</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\u00a0<br/>\t<span class=\"co1\">// Properties -- In addition to Array[0..3] access, we</span><br/>\t<span class=\"co1\">// also define matching a, b, c, and d properties</span><br/>\t<span class=\"kw1\">get</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t<span class=\"kw1\">get</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t<span class=\"kw1\">get</span> c<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t<span class=\"kw1\">get</span> d<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\u00a0<br/>\t<span class=\"co1\">// Methods</span><br/>\tnorm <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> x<span class=\"sy0\">*</span>x<span class=\"br0\">)</span>.<span class=\"me1\">reduce</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> x<span class=\"sy0\">+</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\tnegate <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> Q<span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">-</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\tconjugate <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> Q<span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">]</span>.<span class=\"me1\">concat</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">-</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\tadd <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">\"number\"</span> <span class=\"sy0\">===</span> <span class=\"kw1\">typeof</span> x<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> x <span class=\"br0\">]</span>.<span class=\"me1\">concat</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>v<span class=\"sy0\">,</span>i<span class=\"br0\">)</span> v<span class=\"sy0\">+</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>\tmul <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">var</span> q <span class=\"sy0\">=</span> <span class=\"kw1\">this</span><span class=\"sy0\">;</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">\"number\"</span> <span class=\"sy0\">===</span> <span class=\"kw1\">typeof</span> r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> Q<span class=\"br0\">(</span>q.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span> e<span class=\"sy0\">*</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"br0\">[</span> q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\t   q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\t   q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\t   q<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> r<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>\tequals <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"kw1\">this</span>.<span class=\"me1\">every</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>v<span class=\"sy0\">,</span>i<span class=\"br0\">)</span> v <span class=\"sy0\">===</span> q<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\ttoString <span class=\"sy0\">:</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" + \"</span> <span class=\"sy0\">+</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"i + \"</span><span class=\"sy0\">+</span><span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"j + \"</span> <span class=\"sy0\">+</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"k\"</span><span class=\"br0\">)</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"co2\">/\\+ -/g</span><span class=\"sy0\">,</span> <span class=\"st0\">'- '</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    Quaternion.<span class=\"kw1\">prototype</span> <span class=\"sy0\">=</span> proto<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 92, "block": "<pre class=\"text highlighted_source\">def Quaternion(q0;q1;q2;q3): { \"q0\": q0, \"q1\": q1, \"q2\": q2, \"q3\": q3, \"type\": \"Quaternion\" };<br/>\u00a0<br/># promotion of a real number to a quaternion <br/>def Quaternion(r): if (r|type) == \"number\" then Quaternion(r;0;0;0) else r end;<br/>\u00a0<br/># thoroughly recursive pretty-print<br/>def pp:<br/>\u00a0<br/>  def signage: if . &gt;= 0 then \"+ \\(.)\" else  \"- \\(-.)\" end;<br/>\u00a0<br/>  if type == \"object\" then<br/>     if .type == \"Quaternion\" then<br/>       \"\\(.q0) \\(.q1|signage)i \\(.q2|signage)j \\(.q3|signage)k\"<br/>     else with_entries( {key, \"value\"\u00a0: (.value|pp)} )<br/>     end<br/>  elif type == \"array\" then map(pp)<br/>  else . <br/>  end\u00a0;<br/>\u00a0<br/>def real(z): Quaternion(z).q0;<br/>\u00a0<br/># Note: imag(z) returns the \"i\" component only,<br/># reflecting the embedding of the complex numbers within the quaternions:<br/>def imag(z): Quaternion(z).q1;<br/>\u00a0<br/>def conj(z): Quaternion(z) | Quaternion(.q0; -(.q1); -(.q2); -(.q3));<br/>\u00a0<br/>def abs2(z): Quaternion(z) | .q0 * .q0 + .q1*.q1 + .q2*.q2 + .q3*.q3;<br/>\u00a0<br/>def abs(z): abs2(z) | sqrt;<br/>\u00a0<br/>def negate(z): Quaternion(z) | Quaternion(-.q0; -.q1; -.q2; -.q3);<br/>\u00a0<br/># z + w<br/>def plus(z; w):<br/>  def plusq(z;w): Quaternion(z.q0 + w.q0; z.q1 + w.q1;<br/>                             z.q2 + w.q2; z.q3 + w.q3);<br/>  plusq( Quaternion(z); Quaternion(w) );<br/>\u00a0<br/># z - w<br/>def minus(z; w):<br/>  def minusq(z;w): Quaternion(z.q0 - w.q0; z.q1 - w.q1;<br/>                              z.q2 - w.q2; z.q3 - w.q3);<br/>  minusq( Quaternion(z); Quaternion(w) );<br/>\u00a0<br/># *<br/>def times(z; w):<br/>  def timesq(z; w):<br/>       Quaternion(z.q0*w.q0 - z.q1*w.q1 - z.q2*w.q2 - z.q3*w.q3;<br/>                  z.q0*w.q1 + z.q1*w.q0 + z.q2*w.q3 - z.q3*w.q2;<br/>                  z.q0*w.q2 - z.q1*w.q3 + z.q2*w.q0 + z.q3*w.q1;<br/>                  z.q0*w.q3 + z.q1*w.q2 - z.q2*w.q1 + z.q3*w.q0);<br/>  timesq( Quaternion(z); Quaternion(w) );<br/>\u00a0<br/># (z/w)<br/>def div(z; w):<br/>  if (w|type) == \"number\" then Quaternion(z.q0/w; z.q1/w; z.q2/w; z.q3/w)<br/>  else times(z; inv(w))<br/>  end;<br/>\u00a0<br/>def inv(z): div(conj(z); abs2(z));<br/>\u00a0<br/>\u00a0<br/># Example usage and output:<br/>\u00a0<br/>def say(msg; e): \"\\(msg) =&gt; \\(e|pp)\";<br/>\u00a0<br/>def demo:<br/>  say( \"Quaternion(1;0;0;0)\"; Quaternion(1;0;0;0)),<br/>  (Quaternion (1; 2; 3; 4) as $q <br/>  | Quaternion(2; 3; 4; 5) as $q1<br/>  | Quaternion(3; 4; 5; 6) as $q2<br/>  | 7 as $r<br/>  | say( \"abs($q)\";        abs($q) ),   # norm<br/>    say( \"negate($q)\";     negate($q) ),<br/>    say( \"conj($q)\";       conj($q) ),<br/>    \"\",<br/>    say( \"plus($r; $q)\";   plus($r; $q)),<br/>    say( \"plus($q; $r)\";   plus($q; $r)),<br/>    \"\",<br/>    say( \"plus($q1; $q2 )\"; plus($q1; $q2)),<br/>    \"\",<br/>    say( \"times($r;$q)\";    times($r;$q)),<br/>    say( \"times($q;$r)\";    times($q;$r)),<br/>    \"\",<br/>    say( \"times($q1;$q2)\";  times($q1;$q2)),<br/>    say( \"times($q2; $q1)\"; times($q2; $q1)),<br/>    say( \"times($q1; $q2)\u00a0!= times($q2; $q1)\";<br/>         times($q1; $q2)\u00a0!= times($q2; $q1) )<br/>    )\u00a0;<br/>\u00a0<br/>demo</pre>"}, {"lang": "Julia", "loc": 41, "block": "<pre class=\"text highlighted_source\">import Base: convert, promote_rule, show, conj, abs, +, -, *<br/>\u00a0<br/>immutable Quaternion{T&lt;:Real} &lt;: Number<br/>    q0::T<br/>    q1::T<br/>    q2::T<br/>    q3::T<br/>end<br/>\u00a0<br/>Quaternion(q0::Real,q1::Real,q2::Real,q3::Real) = Quaternion(promote(q0,q1,q2,q3)...)<br/>\u00a0<br/>convert{T}(::Type{Quaternion{T}}, x::Real) =<br/>    Quaternion(convert(T,x), zero(T), zero(T), zero(T))<br/>convert{T}(::Type{Quaternion{T}}, z::Complex) =<br/>    Quaternion(convert(T,real(z)), convert(T,imag(z)), zero(T), zero(T))<br/>convert{T}(::Type{Quaternion{T}}, z::Quaternion) =<br/>    Quaternion(convert(T,z.q0), convert(T,z.q1), convert(T,z.q2), convert(T,z.q3))<br/>\u00a0<br/>promote_rule{T,S}(::Type{Complex{T}},\u00a0::Type{Quaternion{S}}) = Quaternion{promote_type(T,S)}<br/>promote_rule{T&lt;:Real,S}(::Type{T},\u00a0::Type{Quaternion{S}}) = Quaternion{promote_type(T,S)}<br/>promote_rule{T,S}(::Type{Quaternion{T}},\u00a0::Type{Quaternion{S}}) = Quaternion{promote_type(T,S)}<br/>\u00a0<br/>function show(io::IO, z::Quaternion)<br/>    pm(x) = x &lt;\t0\u00a0? \" - $(-x)\"\u00a0: \" + $x\"<br/>    print(io, z.q0, pm(z.q1), \"i\", pm(z.q2), \"j\", pm(z.q3), \"k\")<br/>end<br/>\u00a0<br/>conj(z::Quaternion) = Quaternion(z.q0, -z.q1, -z.q2, -z.q3)<br/>abs(z::Quaternion) = sqrt(z.q0*z.q0 + z.q1*z.q1 + z.q2*z.q2 + z.q3*z.q3)<br/>\u00a0<br/>(-)(z::Quaternion) = Quaternion(-z.q0, -z.q1, -z.q2, -z.q3)<br/>\u00a0<br/>(+)(z::Quaternion, w::Quaternion) = Quaternion(z.q0 + w.q0, z.q1 + w.q1,<br/>                                               z.q2 + w.q2, z.q3 + w.q3)<br/>(-)(z::Quaternion, w::Quaternion) = Quaternion(z.q0 - w.q0, z.q1 - w.q1,<br/>                                               z.q2 - w.q2, z.q3 - w.q3)<br/>(*)(z::Quaternion, w::Quaternion) = Quaternion(z.q0*w.q0 - z.q1*w.q1 - z.q2*w.q2 - z.q3*w.q3,<br/>                                               z.q0*w.q1 + z.q1*w.q0 + z.q2*w.q3 - z.q3*w.q2,<br/>                                               z.q0*w.q2 - z.q1*w.q3 + z.q2*w.q0 + z.q3*w.q1,<br/>                                               z.q0*w.q3 + z.q1*w.q2 - z.q2*w.q1 + z.q3*w.q0)<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 57, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>data <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Quaternion<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> a<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> b<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    operator fun plus<span class=\"br0\">(</span>other<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span><span class=\"sy0\">:</span> Quaternion <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Quaternion <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">a</span> + other.<span class=\"me1\">a</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">b</span> + other.<span class=\"me1\">b</span>,<br/>                           <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">c</span> + other.<span class=\"me1\">c</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">d</span> + other.<span class=\"me1\">d</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    operator fun plus<span class=\"br0\">(</span>r<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>a + r, b, c, d<span class=\"br0\">)</span><br/>\u00a0<br/>    operator fun times<span class=\"br0\">(</span>other<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span><span class=\"sy0\">:</span> Quaternion <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Quaternion<span class=\"br0\">(</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">a</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">a</span> - <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">b</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">b</span> - <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">c</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">c</span> - <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">d</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">d</span>,<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">a</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">b</span> + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">b</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">a</span> + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">c</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">d</span> - <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">d</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">c</span>,<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">a</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">c</span> - <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">b</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">d</span> + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">c</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">a</span> + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">d</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">b</span>,<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">a</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">d</span> + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">b</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">c</span> - <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">c</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">b</span> + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a>.<span class=\"me1\">d</span> <span class=\"sy0\">*</span> other.<span class=\"me1\">a</span><br/>        <span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    operator fun times<span class=\"br0\">(</span>r<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>a <span class=\"sy0\">*</span> r, b <span class=\"sy0\">*</span> r, c <span class=\"sy0\">*</span> r, d <span class=\"sy0\">*</span> r<span class=\"br0\">)</span><br/>\u00a0<br/>    operator fun unaryMinus<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span>  Quaternion<span class=\"br0\">(</span>-a, -b, -c, -d<span class=\"br0\">)</span><br/>\u00a0<br/>    fun conj<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>a, -b, -c, -d<span class=\"br0\">)</span><br/>\u00a0<br/>    fun norm<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Math.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>a <span class=\"sy0\">*</span> a + b <span class=\"sy0\">*</span> b + c <span class=\"sy0\">*</span> c + d <span class=\"sy0\">*</span> d<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"($a, $b, $c, $d)\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// extension functions for Double type</span><br/>operator fun Double.<span class=\"me1\">plus</span><span class=\"br0\">(</span>q<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> q + <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><br/>operator fun Double.<span class=\"me1\">times</span><span class=\"br0\">(</span>q<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> q <span class=\"sy0\">*</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q  <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">2.0</span>, <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q1 <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">2.0</span>, <span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span>, <span class=\"nu0\">5.0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q2 <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span>, <span class=\"nu0\">5.0</span>, <span class=\"nu0\">6.0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r  <span class=\"sy0\">=</span> <span class=\"nu0\">7.0</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q  = $q\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q1 = $q1\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q2 = $q2\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"r  = $r<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"norm(q) = ${\"</span><span class=\"sy0\">%</span>f<span class=\"st0\">\".format(q.norm())}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"-q      = ${-q}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"conj(q) = ${q.conj()}<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"r  + q  = ${r + q}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q  + r  = ${q + r}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q1 + q2 = ${q1 + q2}<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"r  * q  = ${r * q}\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q  * r  = ${q * r}\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q3 <span class=\"sy0\">=</span> q1 <span class=\"sy0\">*</span> q2<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q4 <span class=\"sy0\">=</span> q2 <span class=\"sy0\">*</span> q1<br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q1 * q2 = $q3\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q2 * q1 = $q4<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"q1 * q2\u00a0!= q2 * q1 = ${q3\u00a0!= q4}\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 114, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/>\u00a0<br/> q$ <span class=\"sy0\">=</span> q$<span class=\"br0\">(</span> <span class=\"nu0\">1</span> <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span><br/>q1$ <span class=\"sy0\">=</span> q$<span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"sy0\">,</span> <span class=\"nu0\">5</span> <span class=\"br0\">)</span><br/>q2$ <span class=\"sy0\">=</span> q$<span class=\"br0\">(</span> <span class=\"nu0\">3</span> <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"sy0\">,</span> <span class=\"nu0\">5</span> <span class=\"sy0\">,</span> <span class=\"nu0\">6</span> <span class=\"br0\">)</span><br/>\u00a0<br/>real <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"q = \"</span> \u00a0;  q$<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"q1 = \"</span>\u00a0; q1$<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"q2 = \"</span>\u00a0; q2$ <br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"real = \"</span>\u00a0; real<br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"length /norm q  = \"</span>\u00a0; length<span class=\"br0\">(</span> q$ <span class=\"br0\">)</span>               <span class=\"co1\">'   =norm                        norm of q</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"negative (-q1)  = \"</span>\u00a0; negative$<span class=\"br0\">(</span> q1$ <span class=\"br0\">)</span>           <span class=\"co1\">'   =negative                    negated q1</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"conjugate q     = \"</span>\u00a0; conjugate$<span class=\"br0\">(</span> q$ <span class=\"br0\">)</span>           <span class=\"co1\">'   conjugate                    conjugate q</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"real + q        = \"</span>\u00a0; add1$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> real <span class=\"br0\">)</span>         <span class=\"co1\">'   real +quaternion             real +q</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"q + q2          = \"</span>\u00a0; add2$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> q2$ <span class=\"br0\">)</span>          <span class=\"co1\">'   sum two quaternions          q +q2</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"real * q        = \"</span>\u00a0; multiply1$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> real <span class=\"br0\">)</span>    <span class=\"co1\">'   real *quaternion             real *q</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"q1 * q2         = \"</span>\u00a0; multiply2$<span class=\"br0\">(</span> q1$ <span class=\"sy0\">,</span> q2$ <span class=\"br0\">)</span>    <span class=\"co1\">'   product of two quaternions   q1 &amp; q2</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"q2 * q1         = \"</span>\u00a0; multiply2$<span class=\"br0\">(</span> q2$ <span class=\"sy0\">,</span> q1$ <span class=\"br0\">)</span>    <span class=\"co1\">'   show q1 *q2 &lt;&gt; q2 *q1</span><br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> q$<span class=\"br0\">(</span> r <span class=\"sy0\">,</span> i <span class=\"sy0\">,</span> j <span class=\"sy0\">,</span> k <span class=\"br0\">)</span><br/>  q$ <span class=\"sy0\">=</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span> r<span class=\"br0\">)</span>; <span class=\"st0\">\" \"</span>; <span class=\"kw2\">str$</span><span class=\"br0\">(</span> i<span class=\"br0\">)</span>; <span class=\"st0\">\" \"</span>; <span class=\"kw2\">str$</span><span class=\"br0\">(</span> j<span class=\"br0\">)</span>; <span class=\"st0\">\" \"</span>; <span class=\"kw2\">str$</span><span class=\"br0\">(</span> k<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> length<span class=\"br0\">(</span> q$ <span class=\"br0\">)</span><br/>  r <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  i <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  j <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  k <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  length <span class=\"sy0\">=</span><span class=\"kw2\">sqr</span><span class=\"br0\">(</span> r^<span class=\"nu0\">2</span> <span class=\"sy0\">+</span>i^<span class=\"nu0\">2</span> <span class=\"sy0\">+</span>j^<span class=\"nu0\">2</span> <span class=\"sy0\">+</span>k^<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> multiply1$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> d <span class=\"br0\">)</span><br/>  r <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  i <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  j <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  k <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  multiply1$ <span class=\"sy0\">=</span>q$<span class=\"br0\">(</span> r<span class=\"sy0\">*</span>d<span class=\"sy0\">,</span> i<span class=\"sy0\">*</span>d<span class=\"sy0\">,</span> j<span class=\"sy0\">*</span>d<span class=\"sy0\">,</span> k<span class=\"sy0\">*</span>d<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> multiply2$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> b$ <span class=\"br0\">)</span><br/>  ar <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'a1</span><br/>  ai <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'b1</span><br/>  aj <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'c1</span><br/>  ak <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'d1</span><br/>\u00a0<br/>  br <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'a2</span><br/>  bi <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'b2</span><br/>  bj <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'c2</span><br/>  bk <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span>   <span class=\"co1\">'d2</span><br/>\u00a0<br/>  multiply2$ <span class=\"sy0\">=</span>q$<span class=\"br0\">(</span> _<br/>  ar <span class=\"sy0\">*</span>br_<br/>  <span class=\"sy0\">+</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-</span>ai<span class=\"br0\">)</span> <span class=\"sy0\">*</span>bi_<br/>  <span class=\"sy0\">+</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-</span>aj<span class=\"br0\">)</span> <span class=\"sy0\">*</span>bj_<br/>  <span class=\"sy0\">+</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-</span>ak<span class=\"br0\">)</span> <span class=\"sy0\">*</span>bk _<br/>  <span class=\"sy0\">,</span>_<br/>  ar <span class=\"sy0\">*</span>bi_<br/>  <span class=\"sy0\">+</span>ai <span class=\"sy0\">*</span>br_<br/>  <span class=\"sy0\">+</span>aj <span class=\"sy0\">*</span>bk_<br/>  <span class=\"sy0\">+</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-</span>ak<span class=\"br0\">)</span> <span class=\"sy0\">*</span>bj_<br/>  <span class=\"sy0\">,</span>_<br/>  ar <span class=\"sy0\">*</span>bj_<br/>  <span class=\"sy0\">+</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-</span>ai<span class=\"br0\">)</span> <span class=\"sy0\">*</span>bk_<br/>  <span class=\"sy0\">+</span>aj <span class=\"sy0\">*</span>br_<br/>  <span class=\"sy0\">+</span>ak <span class=\"sy0\">*</span>bi_<br/>  <span class=\"sy0\">,</span>_<br/>  ar <span class=\"sy0\">*</span>bk_<br/>  <span class=\"sy0\">+</span>ai <span class=\"sy0\">*</span>bj_<br/>  <span class=\"sy0\">+</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> <span class=\"sy0\">-</span>aj<span class=\"br0\">)</span> <span class=\"sy0\">*</span>bi_<br/>  <span class=\"sy0\">+</span>ak <span class=\"sy0\">*</span>br <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> negative$<span class=\"br0\">(</span> q$ <span class=\"br0\">)</span><br/>  r <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  i <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  j <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  k <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  negative$ <span class=\"sy0\">=</span>q$<span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>r<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>j<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>k<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> conjugate$<span class=\"br0\">(</span> q$ <span class=\"br0\">)</span><br/>  r <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  i <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  j <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  k <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  conjugate$ <span class=\"sy0\">=</span>q$<span class=\"br0\">(</span> r<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>j<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">-</span>k<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> add1$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> real <span class=\"br0\">)</span><br/>  r <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  i <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  j <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  k <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  add1$ <span class=\"sy0\">=</span>q$<span class=\"br0\">(</span> r <span class=\"sy0\">+</span>real<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> add2$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> b$ <span class=\"br0\">)</span><br/>  ar <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  ai <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  aj <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  ak <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> q$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  br <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  bi <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  bj <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  bk <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span> b$ <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>  add2$ <span class=\"sy0\">=</span>q$<span class=\"br0\">(</span> ar <span class=\"sy0\">+</span>br<span class=\"sy0\">,</span> ai <span class=\"sy0\">+</span>bi<span class=\"sy0\">,</span> aj <span class=\"sy0\">+</span>bj<span class=\"sy0\">,</span> ak <span class=\"sy0\">+</span>bk<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 63, "block": "<pre class=\"lua highlighted_source\">Quaternion <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> q <span class=\"sy0\">=</span> <span class=\"br0\">{</span> a <span class=\"sy0\">=</span> a <span class=\"kw2\">or</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> b <span class=\"sy0\">=</span> b <span class=\"kw2\">or</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> c <span class=\"sy0\">=</span> c <span class=\"kw2\">or</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> d <span class=\"sy0\">=</span> d <span class=\"kw2\">or</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">local</span> metatab <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">setmetatable</span><span class=\"br0\">(</span> q<span class=\"sy0\">,</span> metatab <span class=\"br0\">)</span><br/>    metatab<span class=\"sy0\">.</span>__add <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">.</span>add<br/>    metatab<span class=\"sy0\">.</span>__sub <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">.</span>sub<br/>    metatab<span class=\"sy0\">.</span>__unm <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">.</span>unm<br/>    metatab<span class=\"sy0\">.</span>__mul <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">.</span>mul<br/>\u00a0<br/>    <span class=\"kw1\">return</span> q<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>add<span class=\"br0\">(</span> p<span class=\"sy0\">,</span> q <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">type</span><span class=\"br0\">(</span> p <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"number\"</span> <span class=\"kw1\">then</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">+</span>q<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> q<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> q<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> q<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">elseif</span> <span class=\"kw3\">type</span><span class=\"br0\">(</span> q <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"number\"</span> <span class=\"kw1\">then</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">+</span>q<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">+</span>q<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">+</span>q<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">+</span>q<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">+</span>q<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>sub<span class=\"br0\">(</span> p<span class=\"sy0\">,</span> q <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">type</span><span class=\"br0\">(</span> p <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"number\"</span> <span class=\"kw1\">then</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">-</span>q<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> q<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> q<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> q<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">elseif</span> <span class=\"kw3\">type</span><span class=\"br0\">(</span> q <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"number\"</span> <span class=\"kw1\">then</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">-</span>q<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">-</span>q<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">-</span>q<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">-</span>q<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">-</span>q<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>unm<span class=\"br0\">(</span> p <span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>mul<span class=\"br0\">(</span> p<span class=\"sy0\">,</span> q <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">type</span><span class=\"br0\">(</span> p <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"number\"</span> <span class=\"kw1\">then</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> p<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> p<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> p<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">elseif</span> <span class=\"kw3\">type</span><span class=\"br0\">(</span> q <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"number\"</span> <span class=\"kw1\">then</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">*</span>q<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">*</span>q<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">*</span>q<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">*</span>q <span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>\t<span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>a <span class=\"sy0\">-</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>b <span class=\"sy0\">-</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>c <span class=\"sy0\">-</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>d<span class=\"sy0\">,</span><br/>                               p<span class=\"sy0\">.</span>a<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>b <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>a <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>d <span class=\"sy0\">-</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span><br/> \t\t\t       p<span class=\"sy0\">.</span>a<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>c <span class=\"sy0\">-</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>d <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>a <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span><br/>\t\t\t       p<span class=\"sy0\">.</span>a<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>d <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>c <span class=\"sy0\">-</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>b <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">*</span>q<span class=\"sy0\">.</span>a <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>conj<span class=\"br0\">(</span> p <span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> Quaternion<span class=\"sy0\">.</span>new<span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>p<span class=\"sy0\">.</span>d <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span>norm<span class=\"br0\">(</span> p <span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw3\">math.sqrt</span><span class=\"br0\">(</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span>d<span class=\"sy0\">^</span><span class=\"nu0\">2</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> Quaternion<span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"br0\">(</span> p <span class=\"br0\">)</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%f +\u00a0%fi +\u00a0%fj +\u00a0%fk<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>a<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>b<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>c<span class=\"sy0\">,</span> p<span class=\"sy0\">.</span>d <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 101, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module CheckIt {<br/>      class Quaternion {<br/>            \\\\ by default are double<br/>            a,b,c,d<br/>            Property ToString$ {<br/>                  Value {<br/>                      link parent a,b,c, d to a,b,c,d  <br/>                       value$=format$(\"{0} + {1}i + {2}j + {3}k\",a,b,c,d)<br/>                  }<br/>            }<br/>            Property Norm { Value}<br/>            Operator \"==\" {<br/>                  read n<br/>                  push .a==n.a and .b==n.b and .c==n.c and .d==n.d<br/>            }<br/>            Module CalcNorm {<br/>                  .[Norm]&lt;=sqrt(.a**2+.b**2+.c**2+.d**2)<br/>             }<br/>            Operator Unary {<br/>                  .a-!\u00a0: .b-!\u00a0: .c-!\u00a0:.d-!<br/>            }<br/>            Function Conj {<br/>                  q=this <br/>                  for q {<br/>                         .b-!\u00a0: .c-!\u00a0:.d-!<br/>                  }<br/>                  =q<br/>            }<br/>            Function Add {<br/>                  q=this<br/>                  for q {<br/>                         .a+=Number\u00a0: .CalcNorm<br/>                  }<br/>                  =q<br/>            }<br/>            Operator \"+\"  {<br/>                  Read q2<br/>                  For this, q2 {<br/>                        .a+=..a\u00a0:.b+=..b:.c+=..c:.d+=..d<br/>                        .CalcNorm<br/>                  }<br/>            }<br/>            Function Mul(r)  {<br/>                  q=this <br/>                  for q {<br/>                        .a*=r:.b*=r:.c*=r:.d*=r:.CalcNorm<br/>                  }<br/>                  =q<br/>            }<br/>            Operator \"*\" {<br/>                  Read q2<br/>                  For This, q2 {<br/>                        Push .a*..a-.b*..b-.c*..c-.d*..d<br/>                        Push .a*..b+.b*..a+.c*..d-.d*..c<br/>                        Push .a*..c-.b*..d+.c*..a+.d*..b<br/>                        .d&lt;=.a*..d+.b*..c-.c*..b+.d*..a<br/>                        Read .c, .b, .a<br/>                        .CalcNorm <br/>                  }<br/>            }      <br/>            class:<br/>            module Quaternion {<br/>                  if match(\"NNNN\") then {<br/>                        Read .a,.b,.c,.d<br/>                       .CalcNorm<br/>                  }<br/>            }<br/>      }<br/>      \\\\ variables<br/>      r=7<br/>      q=Quaternion(1,2,3,4)<br/>      q1=Quaternion(2,3,4,5)<br/>      q2=Quaternion(3,4,5,6)<br/>\u00a0<br/>      \\\\ perform negate, conjugate, multiply by real, add a real, multiply quanterions, multiply in reverse order<br/>      qneg=-q<br/>      qconj=q.conj()<br/>      qmul=q.Mul(r)<br/>      qadd=q.Add(r)<br/>      q1q2=q1*q2<br/>      q2q1=q2*q1<br/>\u00a0<br/>      Print \"q = \";q.ToString$<br/>      Print \"Normal q = \";q.Norm<br/>      Print \"Neg q = \";qneg.ToString$<br/>      Print \"Conj q = \";qconj.ToString$<br/>      Print \"Mul q 7 = \";qmul.ToString$<br/>      Print \"Add q 7 = \";qadd.ToString$<br/>      Print \"q1 = \";q1.ToString$<br/>      Print \"q2 = \";q2.ToString$<br/>      Print \"q1 * q2 = \";q1q2.ToString$<br/>      Print \"q2 * q1 = \";q2q1.ToString$<br/>      Print q1==q1   ' true<br/>      Print q1q2==q2q1 ' false<br/>      \\\\ multiplication and equality in one expression<br/>      Print (q1 * q2 == q2 * q1)=false<br/>      Print (q1 * q2 == q1 * q2)=True    <br/>}<br/>CheckIt<br/>\u00a0</pre>"}, {"lang": "Mathematica", "loc": 31, "block": "<pre class=\"text highlighted_source\">&lt;&lt;Quaternions`<br/>q=Quaternion[1,2,3,4]<br/>q1=Quaternion[2,3,4,5]<br/>q2=Quaternion[3,4,5,6]<br/>r=7<br/>-&gt;Quaternion[1,2,3,4]<br/>-&gt;Quaternion[2,3,4,5]<br/>-&gt;Quaternion[3,4,5,6]<br/>-&gt;7<br/>\u00a0<br/>Abs[q]<br/>-&gt;\u221a30<br/>-q<br/>-&gt;Quaternion[-1,-2,-3,-4]<br/>Conjugate[q]<br/>-&gt;Quaternion[1,-2,-3,-4]<br/>r+q<br/>-&gt;Quaternion[8,2,3,4]<br/>q+r<br/>-&gt;Quaternion[8,2,3,4]<br/>q1+q2<br/>-&gt;Quaternion[5,7,9,11]<br/>q*r<br/>-&gt;Quaternion[7,14,21,28]<br/>r*q<br/>-&gt;Quaternion[7,14,21,28]<br/>q1**q2<br/>-&gt;Quaternion[-56,16,24,26]<br/>q2**q1<br/>-&gt;Quaternion[-56,18,20,28]<br/>\u00a0</pre>"}, {"lang": "Mercury", "loc": 38, "block": "<pre class=\"text highlighted_source\">:- module quaternion.<br/>\u00a0<br/>:- interface.<br/>\u00a0<br/>:- import_module float.<br/>\u00a0<br/>:- type quaternion<br/>    ---&gt;    q(  w  \u00a0:: float,<br/>                i  \u00a0:: float,<br/>                j  \u00a0:: float,<br/>                k  \u00a0:: float    ).<br/>\u00a0<br/>% conversion<br/>:- func r(float) = quaternion is det.<br/>\u00a0<br/>% operations<br/>:- func norm(quaternion) = float is det.<br/>:- func -quaternion = quaternion is det.<br/>:- func conjugate(quaternion) = quaternion is det.<br/>:- func quaternion + quaternion = quaternion is det.<br/>:- func quaternion * quaternion = quaternion is det.<br/>\u00a0<br/>:- implementation.<br/>\u00a0<br/>:- import_module math.<br/>\u00a0<br/>% conversion<br/>r(W) = q(W, 0.0, 0.0, 0.0).<br/>\u00a0<br/>% operations<br/>norm(q(W, I, J, K)) = math.sqrt(W*W + I*I + J*J + K*K).<br/>-q(W, I, J, K) = q(-W, -I, -J, -K).<br/>conjugate(q(W, I, J, K)) = q(W, -I, -J, -K).<br/>q(W0, I0, J0, K0) + q(W1, I1, J1, K1) = q(W0+W1, I0+I1, J0+J1, K0+K1).<br/>q(W0, I0, J0, K0) * q(W1, I1, J1, K1) = q(W0*W1 - I0*I1 - J0*J1 - K0*K1,<br/>                                          W0*I1 + I0*W1 + J0*K1 - K0*J1,<br/>                                          W0*J1 - I0*K1 + J0*W1 + K0*I1,<br/>                                          W0*K1 + I0*J1 - J0*I1 + K0*W1 ).</pre>"}, {"lang": "OCaml", "loc": 66, "block": "<pre class=\"ocaml highlighted_source\">\u00a0<br/><span class=\"kw1\">type</span> quaternion <span class=\"sy0\">=</span> <span class=\"br0\">{</span>a<span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a><span class=\"sy0\">;</span> b<span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a><span class=\"sy0\">;</span> c<span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a><span class=\"sy0\">;</span> d<span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> norm q <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsqrt\"><span class=\"kw3\">sqrt</span></a> <span class=\"br0\">(</span>q<span class=\"sy0\">.</span>a<span class=\"sy0\">**</span><span class=\"nu0\">2.0</span> <span class=\"sy0\">+.</span><br/>                   q<span class=\"sy0\">.</span>b<span class=\"sy0\">**</span><span class=\"nu0\">2.0</span> <span class=\"sy0\">+.</span><br/>                   q<span class=\"sy0\">.</span>c<span class=\"sy0\">**</span><span class=\"nu0\">2.0</span> <span class=\"sy0\">+.</span><br/>                   q<span class=\"sy0\">.</span>d<span class=\"sy0\">**</span><span class=\"nu0\">2.0</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> floatneg r <span class=\"sy0\">=</span> ~<span class=\"sy0\">-.</span> r  <span class=\"co1\">(* readability *)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> negative q <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span>a <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>a<span class=\"sy0\">;</span> <br/>   b <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>b<span class=\"sy0\">;</span><br/>   c <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>c<span class=\"sy0\">;</span><br/>   d <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>d <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> conjugate q <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span>a <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>a<span class=\"sy0\">;</span> <br/>   b <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>b<span class=\"sy0\">;</span><br/>   c <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>c<span class=\"sy0\">;</span><br/>   d <span class=\"sy0\">=</span> floatneg q<span class=\"sy0\">.</span>d <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> addrq r q <span class=\"sy0\">=</span> <span class=\"br0\">{</span>q <span class=\"kw1\">with</span> a <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>a <span class=\"sy0\">+.</span> r<span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> addq q1 q2 <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span>a <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>a <span class=\"sy0\">+.</span> q2<span class=\"sy0\">.</span>a<span class=\"sy0\">;</span><br/>   b <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>b <span class=\"sy0\">+.</span> q2<span class=\"sy0\">.</span>b<span class=\"sy0\">;</span><br/>   c <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>c <span class=\"sy0\">+.</span> q2<span class=\"sy0\">.</span>c<span class=\"sy0\">;</span><br/>   d <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>d <span class=\"sy0\">+.</span> q2<span class=\"sy0\">.</span>d  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> multrq r q <span class=\"sy0\">=</span><br/>  <span class=\"br0\">{</span>a <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>a <span class=\"sy0\">*.</span> r<span class=\"sy0\">;</span><br/>   b <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>b <span class=\"sy0\">*.</span> r<span class=\"sy0\">;</span><br/>   c <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>c <span class=\"sy0\">*.</span> r<span class=\"sy0\">;</span><br/>   d <span class=\"sy0\">=</span> q<span class=\"sy0\">.</span>d <span class=\"sy0\">*.</span> r  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> multq q1 q2 <span class=\"sy0\">=</span>  <br/>        <span class=\"br0\">{</span>a <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>a<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>a <span class=\"sy0\">-.</span> q1<span class=\"sy0\">.</span>b<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>b <span class=\"sy0\">-.</span> q1<span class=\"sy0\">.</span>c<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>c <span class=\"sy0\">-.</span> q1<span class=\"sy0\">.</span>d<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>d<span class=\"sy0\">;</span><br/>         b <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>a<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>b <span class=\"sy0\">+.</span> q1<span class=\"sy0\">.</span>b<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>a <span class=\"sy0\">+.</span> q1<span class=\"sy0\">.</span>c<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>d <span class=\"sy0\">-.</span> q1<span class=\"sy0\">.</span>d<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>c<span class=\"sy0\">;</span><br/>         c <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>a<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>c <span class=\"sy0\">-.</span> q1<span class=\"sy0\">.</span>b<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>d <span class=\"sy0\">+.</span> q1<span class=\"sy0\">.</span>c<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>a <span class=\"sy0\">+.</span> q1<span class=\"sy0\">.</span>d<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>b<span class=\"sy0\">;</span><br/>         d <span class=\"sy0\">=</span> q1<span class=\"sy0\">.</span>a<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>d <span class=\"sy0\">+.</span> q1<span class=\"sy0\">.</span>b<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>c <span class=\"sy0\">-.</span> q1<span class=\"sy0\">.</span>c<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>b <span class=\"sy0\">+.</span> q1<span class=\"sy0\">.</span>d<span class=\"sy0\">*.</span>q2<span class=\"sy0\">.</span>a  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">let</span> qmake a b c d <span class=\"sy0\">=</span> <span class=\"br0\">{</span>a<span class=\"sy0\">;</span>b<span class=\"sy0\">;</span>c<span class=\"sy0\">;</span>d<span class=\"br0\">}</span> <span class=\"co1\">(* readability omitting a= b=... *)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> qstring q <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>sprintf <span class=\"st0\">\"(%g,\u00a0%g,\u00a0%g,\u00a0%g)\"</span> q<span class=\"sy0\">.</span>a q<span class=\"sy0\">.</span>b q<span class=\"sy0\">.</span>c q<span class=\"sy0\">.</span>d <span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"co1\">(* test data *)</span>  <br/><span class=\"kw1\">let</span> q  <span class=\"sy0\">=</span> qmake <span class=\"nu0\">1.0</span>  <span class=\"nu0\">2.0</span>  <span class=\"nu0\">3.0</span>  <span class=\"nu0\">4.0</span><br/><span class=\"kw1\">let</span> q1 <span class=\"sy0\">=</span> qmake <span class=\"nu0\">2.0</span>  <span class=\"nu0\">3.0</span>  <span class=\"nu0\">4.0</span>  <span class=\"nu0\">5.0</span><br/><span class=\"kw1\">let</span> q2 <span class=\"sy0\">=</span> qmake <span class=\"nu0\">3.0</span>  <span class=\"nu0\">4.0</span>  <span class=\"nu0\">5.0</span>  <span class=\"nu0\">6.0</span><br/><span class=\"kw1\">let</span> r  <span class=\"sy0\">=</span> <span class=\"nu0\">7.0</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co1\">(* written strictly to spec *)</span><br/>  <span class=\"kw1\">let</span> pf <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"kw1\">in</span><br/>  pf <span class=\"st0\">\"starting with data q=%s, q1=%s,  q2=%s, r=%g\\n\"</span> <span class=\"br0\">(</span>qstring q<span class=\"br0\">)</span> <span class=\"br0\">(</span>qstring q1<span class=\"br0\">)</span> <span class=\"br0\">(</span>qstring q2<span class=\"br0\">)</span> r<span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"1. norm of      q     =\u00a0%g \\n\"</span> <span class=\"br0\">(</span>norm q<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"2. negative of  q     =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>negative q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"3. conjugate of q     =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>conjugate q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"4. adding r to q      =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>addrq r q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"5. adding q1 and q2   =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>addq q1 q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"6. multiply r and q   =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>multrq r q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"7. multiply q1 and q2 =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>multq q1 q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"8. instead q2 * q1    =\u00a0%s \\n\"</span> <span class=\"br0\">(</span>qstring <span class=\"br0\">(</span>multq q2 q1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  pf <span class=\"st0\">\"\\n\"</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Octave", "loc": 1, "block": "<pre class=\"text highlighted_source\">pkg install -forge quaternion</pre>"}, {"lang": "Oforth", "loc": 24, "block": "<pre class=\"text highlighted_source\">160 Number Class newPriority: Quaternion(a, b, c, d)<br/>\u00a0<br/>Quaternion method: _a  @a\u00a0;<br/>Quaternion method: _b  @b\u00a0;<br/>Quaternion method: _c  @c\u00a0;<br/>Quaternion method: _d  @d\u00a0;<br/>\u00a0<br/>Quaternion method: initialize \u00a0:= d\u00a0:= c\u00a0:= b\u00a0:= a\u00a0;<br/>Quaternion method: &lt;&lt;  '(' &lt;&lt;c @a &lt;&lt; ',' &lt;&lt;c @b &lt;&lt; ',' &lt;&lt;c @c &lt;&lt; ',' &lt;&lt;c @d &lt;&lt; ')' &lt;&lt;c\u00a0;<br/>\u00a0<br/>Integer method: asQuaternion  self 0 0 0 Quaternion new\u00a0;<br/>Float   method: asQuaternion  self 0 0 0 Quaternion new\u00a0;<br/>\u00a0<br/>Quaternion method: ==(q)  q _a @a == q _b @b == and q _c @c == and q _d @d == and\u00a0;<br/>Quaternion method: norm   @a sq @b sq + @c sq + @d sq + sqrt\u00a0;<br/>Quaternion method: conj   @a  @b neg  @c neg  @d neg Quaternion new\u00a0;<br/>Quaternion method: +(q)   Quaternion new(q _a @a +, q _b @b +, q _c @c +, q _d @d +)\u00a0;<br/>Quaternion method: -(q)   Quaternion new(q _a @a -, q _b @b -, q _c @c -, q _d @d -)\u00a0;<br/>\u00a0<br/>Quaternion method: *(q) <br/>   Quaternion new(q _a @a * q _b @b * - q _c @c * - q _d @d * -,<br/>                  q _a @b * q _b @a * + q _c @d * + q _d @c * -,<br/>                  q _a @c * q _b @d * - q _c @a * + q _d @b * +,<br/>                  q _a @d * q _b @c * + q _c @b * - q _d @a * + )\u00a0;</pre>"}, {"lang": "ooRexx", "loc": 153, "block": "<pre class=\"oorexx highlighted_source\">\u00a0<br/>q = <span class=\"sy0\">.</span>quaternion~new<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>q1 = <span class=\"sy0\">.</span>quaternion~new<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>q2 = <span class=\"sy0\">.</span>quaternion~new<span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>r = <span class=\"nu0\">7</span><br/>\u00a0<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q            =\"</span> q<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q1           =\"</span> q1<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q2           =\"</span> q2<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"r            =\"</span> r<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"norm(q)      =\"</span> q~norm<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"-q           =\"</span> <span class=\"br0\">(</span>-q<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q*           =\"</span> q~conjugate<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q + r        =\"</span> q + r<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q1 + q2      =\"</span> q1 + q2<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q * r        =\"</span> q <span class=\"sy0\">*</span> r<br/>q1q2 = q1 <span class=\"sy0\">*</span> q2<br/>q2q1 = q2 <span class=\"sy0\">*</span> q1<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q1 * q2      =\"</span> q1q2<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q2 * q1      =\"</span> q2q1<br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q1 == q1     =\"</span> <span class=\"br0\">(</span>q1 == q1<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"q1q2 == q2q1 =\"</span> <span class=\"br0\">(</span>q1q2 == q2q1<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>::class quaternion<br/>::method init<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> r, i = <span class=\"nu0\">0</span>, j = <span class=\"nu0\">0</span>, k = <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\">-- quaternion instances are immutable, so these are</span><br/><span class=\"co1\">-- read only attributes</span><br/>::<span class=\"kw1\">attribute</span> r GET<br/>::<span class=\"kw1\">attribute</span> i GET<br/>::<span class=\"kw1\">attribute</span> j GET<br/>::<span class=\"kw1\">attribute</span> k GET<br/>\u00a0<br/>::method norm<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">return</span> rxcalcsqrt<span class=\"br0\">(</span>r <span class=\"sy0\">*</span> r + i <span class=\"sy0\">*</span> i + j <span class=\"sy0\">*</span> j + k <span class=\"sy0\">*</span> k<span class=\"br0\">)</span><br/>\u00a0<br/>::method invert<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  norm = self~norm<br/>  <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r <span class=\"sy0\">/</span> norm, i <span class=\"sy0\">/</span> norm, j <span class=\"sy0\">/</span> norm, k <span class=\"sy0\">/</span> norm<span class=\"br0\">)</span><br/>\u00a0<br/>::method negative<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>-r, -i, -j, -k<span class=\"br0\">)</span><br/>\u00a0<br/>::method conjugate<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r, -i, -j, -k<span class=\"br0\">)</span><br/>\u00a0<br/>::method add<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> other<br/>  <span class=\"kw1\">if</span> other~isa<span class=\"br0\">(</span><span class=\"sy0\">.</span>quaternion<span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>     <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r + other~r, i + other~i, j + other~j, k + other~k<span class=\"br0\">)</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r + other, i, j, k<span class=\"br0\">)</span><br/>\u00a0<br/>::method subtract<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> other<br/>  <span class=\"kw1\">if</span> other~isa<span class=\"br0\">(</span><span class=\"sy0\">.</span>quaternion<span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>     <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r - other~r, i - other~i, j - other~j, k - other~k<span class=\"br0\">)</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r - other, i, j, k<span class=\"br0\">)</span><br/>\u00a0<br/>::method times<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> other<br/>  <span class=\"kw1\">if</span> other~isa<span class=\"br0\">(</span><span class=\"sy0\">.</span>quaternion<span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>     <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r <span class=\"sy0\">*</span> other~r - i <span class=\"sy0\">*</span> other~i - j <span class=\"sy0\">*</span> other~j - k <span class=\"sy0\">*</span> other~k, -<br/>                           r <span class=\"sy0\">*</span> other~i + i <span class=\"sy0\">*</span> other~r + j <span class=\"sy0\">*</span> other~k - k <span class=\"sy0\">*</span> other~j, -<br/>                           r <span class=\"sy0\">*</span> other~j - i <span class=\"sy0\">*</span> other~k + j <span class=\"sy0\">*</span> other~r + k <span class=\"sy0\">*</span> other~i, -<br/>                           r <span class=\"sy0\">*</span> other~k + i <span class=\"sy0\">*</span> other~j - j <span class=\"sy0\">*</span> other~i + k <span class=\"sy0\">*</span> other~r<span class=\"br0\">)</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">return</span> self~class~new<span class=\"br0\">(</span>r <span class=\"sy0\">*</span> other, i <span class=\"sy0\">*</span> other, j <span class=\"sy0\">*</span> other, k <span class=\"sy0\">*</span> other<span class=\"br0\">)</span><br/>\u00a0<br/>::method divide<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> other<br/>  <span class=\"co1\">-- this is easier if everything is a quaternion</span><br/>  <span class=\"kw1\">if</span> <span class=\"sy0\">\\</span>other~isA<span class=\"br0\">(</span><span class=\"sy0\">.</span>quaternion<span class=\"br0\">)</span> <span class=\"kw3\">then</span> other = <span class=\"sy0\">.</span>quaternion~new<span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>  <span class=\"co1\">-- division is multiplication with the inversion</span><br/>  <span class=\"kw1\">return</span> self <span class=\"sy0\">*</span> other~invert<br/>\u00a0<br/>::method <span class=\"st0\">\"==\"</span><br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> other<br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"sy0\">\\</span>other~isa<span class=\"br0\">(</span><span class=\"sy0\">.</span>quaternion<span class=\"br0\">)</span> <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"sy0\">.</span>false<br/>  <span class=\"co1\">-- Note:  these are numeric comparisons, so we're using the \"=\"</span><br/>  <span class=\"co1\">-- method so those are handled correctly</span><br/>  <span class=\"kw1\">return</span> r = other~r <span class=\"sy0\">&amp;</span> i = other~i <span class=\"sy0\">&amp;</span> j = other~j <span class=\"sy0\">&amp;</span> k = other~k<br/>\u00a0<br/>::method <span class=\"st0\">\"\\==\"</span><br/>  <span class=\"kw1\">use</span> strict <span class=\"kw1\">arg</span> other<br/>  <span class=\"kw1\">return</span> <span class=\"sy0\">\\</span>self~<span class=\"st0\">\"\\==\"</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"=\"</span><br/>  <span class=\"co1\">-- this is equivalent of \"==\"</span><br/>  <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"==\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"\\=\"</span><br/>  <span class=\"co1\">-- this is equivalent of \"\\==\"</span><br/>  <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"\\==\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"&lt;&gt;\"</span><br/>  <span class=\"co1\">-- this is equivalent of \"\\==\"</span><br/>  <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"\\==\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"&gt;&lt;\"</span><br/>  <span class=\"co1\">-- this is equivalent of \"\\==\"</span><br/>  <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"\\==\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- some operator overrides -- these only work if the left-hand-side of the</span><br/><span class=\"co1\">-- subexpression is a quaternion</span><br/>::method <span class=\"st0\">\"*\"</span><br/>  <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"TIMES\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"/\"</span><br/>  <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"DIVIDE\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"-\"</span><br/>  <span class=\"co1\">-- need to check if this is a prefix minus or a subtract</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"br0\">)</span> == <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>      <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"NEGATIVE\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">else</span><br/>      <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"SUBTRACT\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method <span class=\"st0\">\"+\"</span><br/>  <span class=\"co1\">-- need to check if this is a prefix plus or an addition</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"br0\">)</span> == <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>      <span class=\"kw1\">return</span> self  <span class=\"co1\">-- we can return this copy since it is immutable</span><br/>  <span class=\"kw3\">else</span><br/>      <span class=\"kw1\">forward</span> message<span class=\"br0\">(</span><span class=\"st0\">\"ADD\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>::method string<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">return</span> r self~formatnumber<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"st0\">\"i\"</span> self~formatnumber<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"st0\">\"j\"</span> self~formatnumber<span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"st0\">\"k\"</span><br/>\u00a0<br/>::method formatnumber private<br/>  <span class=\"kw1\">use</span> <span class=\"kw1\">arg</span> <span class=\"kw2\">value</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw2\">value</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"+\"</span> <span class=\"kw2\">value</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"-\"</span> <span class=\"kw2\">value</span>~<span class=\"kw6\">abs</span><br/>\u00a0<br/><span class=\"co1\">-- override hashcode for collection class hash uses</span><br/>::method hashCode<br/>  <span class=\"kw1\">expose</span> r i j k<br/>  <span class=\"kw1\">return</span> r~hashcode~<span class=\"kw6\">bitxor</span><span class=\"br0\">(</span>i~hashcode<span class=\"br0\">)</span>~<span class=\"kw6\">bitxor</span><span class=\"br0\">(</span>j~hashcode<span class=\"br0\">)</span>~<span class=\"kw6\">bitxor</span><span class=\"br0\">(</span>k~hashcode<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>::requires rxmath LIBRARY<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "PARI/GP", "loc": 35, "block": "<pre class=\"parigp highlighted_source\">q.<span class=\"kw1\">norm</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"st0\">\"t_VEC\"</span> <span class=\"sy0\">||</span> #q <span class=\"sy0\">!=</span> <span class=\"nu1\">4</span><span class=\"sy0\">,</span> <span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"incorrect type\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">sqrt</span><span class=\"br0\">(</span>q<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"sy0\">+</span>q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"sy0\">+</span>q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"sy0\">+</span>q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>q.<span class=\"kw1\">conj</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"st0\">\"t_VEC\"</span> <span class=\"sy0\">||</span> #q <span class=\"sy0\">!=</span> <span class=\"nu1\">4</span><span class=\"sy0\">,</span> <span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"incorrect type\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"sy0\">-</span><span class=\"br0\">[</span><span class=\"sy0\">-</span>q<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>q.<span class=\"me1\">add</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"st0\">\"t_VEC\"</span> <span class=\"sy0\">||</span> #q <span class=\"sy0\">!=</span> <span class=\"nu1\">4</span><span class=\"sy0\">,</span> <span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"incorrect type\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tx<span class=\"sy0\">-&gt;</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"t_INT\"</span> <span class=\"sy0\">||</span> <span class=\"kw1\">type</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">==</span> t_REAL<span class=\"sy0\">,</span><br/>\t\t<span class=\"br0\">[</span>q<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">+</span>x<span class=\"sy0\">,</span>q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"sy0\">,</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"t_VEC\"</span> <span class=\"sy0\">&amp;&amp;</span> #x <span class=\"sy0\">==</span> <span class=\"nu1\">4</span><span class=\"sy0\">,</span><br/>\t\t\tq<span class=\"sy0\">+</span>x<br/>\t\t<span class=\"sy0\">,</span><br/>\t\t\t<span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"incorrect type\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">)</span><br/>\t<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>q.<span class=\"me1\">mult</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"st0\">\"t_VEC\"</span> <span class=\"sy0\">||</span> #q <span class=\"sy0\">!=</span> <span class=\"nu1\">4</span><span class=\"sy0\">,</span> <span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"incorrect type\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tx<span class=\"sy0\">-&gt;</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"t_INT\"</span> <span class=\"sy0\">||</span> <span class=\"kw1\">type</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">==</span> t_REAL<span class=\"sy0\">,</span><br/>\t\tx<span class=\"sy0\">*</span>q<br/>\t<span class=\"sy0\">,</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">type</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"t_VEC\"</span> <span class=\"sy0\">&amp;&amp;</span> #x <span class=\"sy0\">==</span> <span class=\"nu1\">4</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"br0\">[</span>q<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\tq<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\tq<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\t\tq<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> q<span class=\"br0\">[</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> q<span class=\"br0\">[</span><span class=\"nu1\">4</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>x<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"sy0\">,</span><br/>\t\t\t<span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"incorrect type\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">)</span><br/>\t<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 70, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> Quaternion<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">Util</span> <span class=\"st_h\">'reduce'</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">MoreUtils</span> <span class=\"st_h\">'pairwise'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> make <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$cls</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"co5\">@_</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>    <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"co5\">@_</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"co5\">@_</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"co5\">@_</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span>            <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Bad number of components: @_\"</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _abs <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a> reduce <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"sy0\">+</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> _neg <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"sy0\">+</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> _str <span class=\"br0\">{</span> <span class=\"st0\">\"(@{+shift})\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _add <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> pairwise <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> <span class=\"re0\">@$x</span><span class=\"sy0\">,</span> <span class=\"re0\">@$y</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _sub <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@x</span> <span class=\"sy0\">=</span> pairwise <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> <span class=\"re0\">@$x</span><span class=\"sy0\">,</span> <span class=\"re0\">@$y</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"co5\">$_</span> <span class=\"kw1\">for</span> <span class=\"re0\">@x</span> <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"re0\">\\@x</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _mul <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"co5\">$_</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">@$x</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$b1</span><span class=\"sy0\">,</span> <span class=\"re0\">$c1</span><span class=\"sy0\">,</span> <span class=\"re0\">$d1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$x</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$a2</span><span class=\"sy0\">,</span> <span class=\"re0\">$b2</span><span class=\"sy0\">,</span> <span class=\"re0\">$c2</span><span class=\"sy0\">,</span> <span class=\"re0\">$d2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$y</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> conjugate <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@a</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"sy0\">-</span><span class=\"co5\">$_</span> <span class=\"br0\">}</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$a</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"re0\">\\@a</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">use</span> overload <span class=\"br0\">(</span><br/>        <span class=\"st_h\">'\"\"'</span>    <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_str</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'+'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_add</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'-'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_sub</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'*'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_mul</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'neg'</span>   <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_neg</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'abs'</span>   <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_abs</span><span class=\"sy0\">,</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> main<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">-&gt;</span><span class=\"me1\">make</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">-&gt;</span><span class=\"me1\">make</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a = $a<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"b = $b<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"|a| = \"</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/abs.html\"><span class=\"kw3\">abs</span></a><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"-a = \"</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a + 1 = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a + b = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a - b = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a conjugate is \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">conjugate</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a * b = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"b * a = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 70, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> Quaternion<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">Util</span> <span class=\"st_h\">'reduce'</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">MoreUtils</span> <span class=\"st_h\">'pairwise'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> make <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$cls</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"co5\">@_</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>    <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"co5\">@_</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"co5\">@_</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"co5\">@_</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span>            <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Bad number of components: @_\"</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _abs <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/sqrt.html\"><span class=\"kw3\">sqrt</span></a> reduce <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"sy0\">+</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> _neg <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"sy0\">+</span><a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> _str <span class=\"br0\">{</span> <span class=\"st0\">\"(@{+shift})\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _add <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> pairwise <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> <span class=\"re0\">@$x</span><span class=\"sy0\">,</span> <span class=\"re0\">@$y</span> <span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _sub <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">]</span> <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@x</span> <span class=\"sy0\">=</span> pairwise <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span> <span class=\"re0\">@$x</span><span class=\"sy0\">,</span> <span class=\"re0\">@$y</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$swap</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"co5\">$_</span> <span class=\"kw1\">for</span> <span class=\"re0\">@x</span> <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"re0\">\\@x</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _mul <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://perldoc.perl.org/functions/ref.html\"><span class=\"kw3\">ref</span></a> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a><span class=\"br0\">(</span><span class=\"co5\">$_</span> <span class=\"sy0\">*</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">@$x</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$b1</span><span class=\"sy0\">,</span> <span class=\"re0\">$c1</span><span class=\"sy0\">,</span> <span class=\"re0\">$d1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$x</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$a2</span><span class=\"sy0\">,</span> <span class=\"re0\">$b2</span><span class=\"sy0\">,</span> <span class=\"re0\">$c2</span><span class=\"sy0\">,</span> <span class=\"re0\">$d2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">@$y</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"br0\">[</span> <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$a1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$c2</span> <span class=\"sy0\">-</span> <span class=\"re0\">$c1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$d1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a2</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> conjugate <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@a</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"sy0\">-</span><span class=\"co5\">$_</span> <span class=\"br0\">}</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$a</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/bless.html\"><span class=\"kw3\">bless</span></a> <span class=\"re0\">\\@a</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">use</span> overload <span class=\"br0\">(</span><br/>        <span class=\"st_h\">'\"\"'</span>    <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_str</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'+'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_add</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'-'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_sub</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'*'</span>     <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_mul</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'neg'</span>   <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_neg</span><span class=\"sy0\">,</span><br/>        <span class=\"st_h\">'abs'</span>   <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;_abs</span><span class=\"sy0\">,</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/package.html\"><span class=\"kw3\">package</span></a> main<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">-&gt;</span><span class=\"me1\">make</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> Quaternion<span class=\"sy0\">-&gt;</span><span class=\"me1\">make</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a = $a<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"b = $b<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"|a| = \"</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/abs.html\"><span class=\"kw3\">abs</span></a><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"-a = \"</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a + 1 = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a + b = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a - b = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a conjugate is \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">conjugate</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"a * b = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"b * a = \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span> <span class=\"sy0\">*</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 54, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">class</span> Quaternion <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> Real <span class=\"br0\">(</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> <span class=\"kw2\">method</span> <span class=\"kw2\">new</span> <span class=\"br0\">(</span> Real <span class=\"re0\">$r</span><span class=\"sy0\">,</span> Real <span class=\"re0\">$i</span><span class=\"sy0\">,</span> Real <span class=\"re0\">$j</span><span class=\"sy0\">,</span> Real <span class=\"re0\">$k</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        self<span class=\"sy0\">.</span><span class=\"me1\">bless</span><span class=\"sy0\">:</span> <span class=\"sy0\">:</span><span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$j</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$k</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> qu<span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"re0\">@r</span><span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> Quaternion<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">:</span> <span class=\"sy0\">|</span><span class=\"re0\">@r</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">sub</span> postfix<span class=\"sy0\">:&lt;</span>j<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>Real <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">sub</span> postfix<span class=\"sy0\">:&lt;</span>k<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>Real <span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> Str   <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"st0\">\"$.r + {$.i}i + {$.j}j + {$.k}k\"</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> reals <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> conj  <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> qu <span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">method</span> norm  <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">sqrt</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> self<span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"kw1\">X</span><span class=\"sy0\">**</span> <span class=\"nu0\">2</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;</span>eqv<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> eqv <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span>       Real <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$b</span><span class=\"sy0\">+</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span> <span class=\"br0\">(</span>       Real <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$a</span><span class=\"sy0\">+</span><span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span>    Complex <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw3\">re</span> <span class=\"sy0\">+</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw3\">im</span> <span class=\"sy0\">+</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span> <span class=\"br0\">(</span>    Complex <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw3\">re</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">r</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"kw3\">im</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"kw3\">i</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">k</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;+&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"kw1\">Z</span><span class=\"sy0\">+</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> prefix<span class=\"sy0\">:&lt;-&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"kw1\">X</span><span class=\"sy0\">*</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span>       Real <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"kw1\">X</span><span class=\"sy0\">*</span> <span class=\"re0\">$b</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span> <span class=\"br0\">(</span>       Real <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> qu <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span> <span class=\"kw1\">X</span><span class=\"sy0\">*</span> <span class=\"re0\">$a</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span>    Complex <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> qu <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span> <span class=\"br0\">(</span> Complex <span class=\"re0\">$a</span><span class=\"sy0\">,</span>    Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span> <span class=\"re0\">$b</span> R<span class=\"sy0\">*</span> qu <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">multi</span> infix<span class=\"sy0\">:&lt;*&gt;</span> <span class=\"br0\">(</span> Quaternion <span class=\"re0\">$a</span><span class=\"sy0\">,</span> Quaternion <span class=\"re0\">$b</span> <span class=\"br0\">)</span> <span class=\"kw1\">is</span> export <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">@a_rijk</span>            <span class=\"sy0\">=</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span> <span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">$b</span><span class=\"sy0\">.</span><span class=\"me1\">reals</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> qu <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span><span class=\"br0\">(</span> <span class=\"re0\">@a_rijk</span> <span class=\"kw1\">Z</span><span class=\"sy0\">*</span> <span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$j</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$k</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"co1\"># real</span><br/>\t\t  <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span><span class=\"br0\">(</span> <span class=\"re0\">@a_rijk</span> <span class=\"kw1\">Z</span><span class=\"sy0\">*</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span>  <span class=\"re0\">$r</span><span class=\"sy0\">,</span>  <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$j</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"co1\"># i</span><br/>\t\t  <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span><span class=\"br0\">(</span> <span class=\"re0\">@a_rijk</span> <span class=\"kw1\">Z</span><span class=\"sy0\">*</span> <span class=\"re0\">$j</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$k</span><span class=\"sy0\">,</span>  <span class=\"re0\">$r</span><span class=\"sy0\">,</span>  <span class=\"re0\">$i</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"co1\"># j</span><br/>\t\t  <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span><span class=\"br0\">(</span> <span class=\"re0\">@a_rijk</span> <span class=\"kw1\">Z</span><span class=\"sy0\">*</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span>  <span class=\"re0\">$j</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span>  <span class=\"re0\">$r</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># k</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>import Quaternion<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$q</span>  <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> 2i <span class=\"sy0\">+</span> 3j <span class=\"sy0\">+</span> 4k<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$q1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> 3i <span class=\"sy0\">+</span> 4j <span class=\"sy0\">+</span> 5k<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$q2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> 4i <span class=\"sy0\">+</span> 5j <span class=\"sy0\">+</span> 6k<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$r</span>  <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st0\">\"1) q norm  = {$q.norm}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"2) -q      = {-$q}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"3) q conj  = {$q.conj}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"4) q  + r  = {$q + $r}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"5) q1 + q2 = {$q1 + $q2}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"6) q  * r  = {$q  * $r}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"7) q1 * q2 = {$q1 * $q2}\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"8) q1q2 { $q1 * $q2 eqv $q2 * $q1\u00a0?? '=='\u00a0!! '!=' } q2q1\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 54, "block": "<pre class=\"text highlighted_source\">function norm(sequence q)<br/>    return sqrt(sum(sq_power(q,2)))<br/>end function<br/>\u00a0<br/>function conj(sequence q)<br/>    q[2..4] = sq_uminus(q[2..4])<br/>    return q<br/>end function<br/>\u00a0<br/>function add(object q1, object q2)<br/>    if atom(q1)!=atom(q2) then<br/>        if atom(q1) then<br/>            q1 = {q1,0,0,0}<br/>        else<br/>            q2 = {q2,0,0,0}<br/>        end if<br/>    end if<br/>    return sq_add(q1,q2)<br/>end function<br/>\u00a0<br/>function mul(object q1, object q2)<br/>    if sequence(q1) and sequence(q2) then<br/>        return { q1[1]*q2[1] - q1[2]*q2[2] - q1[3]*q2[3] - q1[4]*q2[4],<br/>                 q1[1]*q2[2] + q1[2]*q2[1] + q1[3]*q2[4] - q1[4]*q2[3],<br/>                 q1[1]*q2[3] - q1[2]*q2[4] + q1[3]*q2[1] + q1[4]*q2[2],<br/>                 q1[1]*q2[4] + q1[2]*q2[3] - q1[3]*q2[2] + q1[4]*q2[1] }<br/>    else<br/>        return sq_mul(q1,q2)<br/>    end if<br/>end function<br/>\u00a0<br/>function quats(sequence q)<br/>    return sprintf(\"%g +\u00a0%gi +\u00a0%gj +\u00a0%gk\",q)<br/>end function<br/>\u00a0<br/>constant<br/>    q  = {1, 2, 3, 4},<br/>    q1 = {2, 3, 4, 5},<br/>    q2 = {3, 4, 5, 6},<br/>    r  = 7<br/>\u00a0<br/>printf(1, \"q =\u00a0%s\\n\", {quats(q)})<br/>printf(1, \"r =\u00a0%g\\n\", r)<br/>printf(1, \"norm(q) =\u00a0%g\\n\", norm(q))<br/>printf(1, \"-q =\u00a0%s\\n\", {quats(-q)})<br/>printf(1, \"conj(q) =\u00a0%s\\n\", {quats(conj(q))})<br/>printf(1, \"q + r =\u00a0%s\\n\", {quats(add(q,r))})<br/>printf(1, \"q * r =\u00a0%s\\n\", {quats(mul(q,r))})<br/>printf(1, \"q1 =\u00a0%s\\n\", {quats(q1)})<br/>printf(1, \"q2 =\u00a0%s\\n\", {quats(q2)})<br/>printf(1, \"q1 + q2 =\u00a0%s\\n\", {quats(add(q1,q2))})<br/>printf(1, \"q2 + q1 =\u00a0%s\\n\", {quats(add(q2,q1))})<br/>printf(1, \"q1 * q2 =\u00a0%s\\n\", {quats(mul(q1,q2))})<br/>printf(1, \"q2 * q1 =\u00a0%s\\n\", {quats(mul(q2,q1))})</pre>"}, {"lang": "PicoLisp", "loc": 33, "block": "<pre class=\"text highlighted_source\">(scl 6)<br/>\u00a0<br/>(def 'quatCopy copy)<br/>\u00a0<br/>(de quatNorm (Q)<br/>   (sqrt (sum * Q Q)) )<br/>\u00a0<br/>(de quatNeg (Q)<br/>   (mapcar - Q) )<br/>\u00a0<br/>(de quatConj (Q)<br/>   (cons (car Q) (mapcar - (cdr Q))) )<br/>\u00a0<br/>(de quatAddR (Q R)<br/>   (cons (+ R (car Q)) (cdr Q)) )<br/>\u00a0<br/>(de quatAdd (Q1 Q2)<br/>   (mapcar + Q1 Q2) )<br/>\u00a0<br/>(de quatMulR (Q R)<br/>   (mapcar */ (mapcar * Q (circ R)) (1.0 .)) )<br/>\u00a0<br/>(de quatMul (Q1 Q2)<br/>   (mapcar<br/>      '((Ops I)<br/>         (sum '((Op R I) (Op (*/ R (get Q2 I) 1.0))) Ops Q1 I) )<br/>      '((+ - - -) (+ + + -) (+ - + +) (+ + - +))<br/>      '((1 2 3 4) (2 1 4 3) (3 4 1 2) (4 3 2 1)) ) )<br/>\u00a0<br/>(de quatFmt (Q)<br/>   (mapcar '((R S) (pack (format R *Scl) S))<br/>      Q<br/>      '(\" + \" \"i + \" \"j + \" \"k\") ) )</pre>"}, {"lang": "PL/I", "loc": 136, "block": "<pre class=\"pli highlighted_source\"><span class=\"sy0\">*</span>process source attributes xref or<span class=\"br0\">(</span>!<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qu<span class=\"sy0\">:</span> <span class=\"kw1\">Proc</span> <span class=\"kw1\">Options</span><span class=\"br0\">(</span><span class=\"kw1\">main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"coMULTI\">/**********************************************************************<br/> * 06.09.2013 Walter Pachl translated from REXX<br/> *            added tasks 9 and A<br/> **********************************************************************/</span><br/> <span class=\"kw1\">dcl</span> v<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Var</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span><span class=\"st0\">'i'</span><span class=\"sy0\">,</span><span class=\"st0\">'j'</span><span class=\"sy0\">,</span><span class=\"st0\">'k'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">define</span> <span class=\"kw1\">structure</span> <span class=\"nu0\">1</span> quat<span class=\"sy0\">,</span> <span class=\"nu0\">2</span> x<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> q  <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span> <span class=\"kw1\">Call</span> quat_init<span class=\"br0\">(</span>q<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> q1 <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span> <span class=\"kw1\">Call</span> quat_init<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> q2 <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span> <span class=\"kw1\">Call</span> quat_init<span class=\"br0\">(</span>q2<span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> q3 <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span> <span class=\"kw1\">Call</span> quat_init<span class=\"br0\">(</span>q3<span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,-</span><span class=\"nu0\">4</span><span class=\"sy0\">,-</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> r  <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/> <span class=\"kw1\">call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'       '</span><span class=\"sy0\">,</span><span class=\"st0\">'q'</span>                    <span class=\"sy0\">,</span>q<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'       '</span><span class=\"sy0\">,</span><span class=\"st0\">'q1'</span>                   <span class=\"sy0\">,</span>q1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'       '</span><span class=\"sy0\">,</span><span class=\"st0\">'q2'</span>                   <span class=\"sy0\">,</span>q2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'       '</span><span class=\"sy0\">,</span><span class=\"st0\">'q3'</span>                   <span class=\"sy0\">,</span>q3<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">call</span> shows<span class=\"br0\">(</span><span class=\"st0\">'       '</span><span class=\"sy0\">,</span><span class=\"st0\">'r'</span>                    <span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> shows<span class=\"br0\">(</span><span class=\"st0\">'task 1:'</span><span class=\"sy0\">,</span><span class=\"st0\">'norm q'</span>               <span class=\"sy0\">,</span>norm<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 2:'</span><span class=\"sy0\">,</span><span class=\"st0\">'quatneg q'</span>            <span class=\"sy0\">,</span>quatneg<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 3:'</span><span class=\"sy0\">,</span><span class=\"st0\">'conjugate q'</span>          <span class=\"sy0\">,</span>quatConj<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 4:'</span><span class=\"sy0\">,</span><span class=\"st0\">'addition r+q'</span>         <span class=\"sy0\">,</span>quatAddsq<span class=\"br0\">(</span>r<span class=\"sy0\">,</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 5:'</span><span class=\"sy0\">,</span><span class=\"st0\">'addition q1+q2'</span>       <span class=\"sy0\">,</span>quatAdd<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span>q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 6:'</span><span class=\"sy0\">,</span><span class=\"st0\">'multiplication q*r'</span>   <span class=\"sy0\">,</span>quatMulqs<span class=\"br0\">(</span>q<span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 7:'</span><span class=\"sy0\">,</span><span class=\"st0\">'multiplication q1*q2'</span> <span class=\"sy0\">,</span>quatMul<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span>q2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 8:'</span><span class=\"sy0\">,</span><span class=\"st0\">'multiplication q2*q1'</span> <span class=\"sy0\">,</span>quatMul<span class=\"br0\">(</span>q2<span class=\"sy0\">,</span>q1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task 9:'</span><span class=\"sy0\">,</span><span class=\"st0\">'quatsub q1-q1'</span>        <span class=\"sy0\">,</span>quatAdd<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span>quatneg<span class=\"br0\">(</span>q1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showq<span class=\"br0\">(</span><span class=\"st0\">'task A:'</span><span class=\"sy0\">,</span><span class=\"st0\">'addition q1+q3'</span>       <span class=\"sy0\">,</span>quatAdd<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span>q3<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showt<span class=\"br0\">(</span><span class=\"st0\">'task B:'</span><span class=\"sy0\">,</span><span class=\"st0\">'equal'</span>                <span class=\"sy0\">,</span>quatEqual<span class=\"br0\">(</span>quatMul<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span>q2<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                                                       quatMul<span class=\"br0\">(</span>q2<span class=\"sy0\">,</span>q1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Call</span> showt<span class=\"br0\">(</span><span class=\"st0\">'task C:'</span><span class=\"sy0\">,</span><span class=\"st0\">'q1=q1'</span>                <span class=\"sy0\">,</span>quatEqual<span class=\"br0\">(</span>q1<span class=\"sy0\">,</span>q1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quatNeg<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>qp<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">type</span> quat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qr<span class=\"br0\">)</span> <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">=-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span>qr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quatAdd<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qq<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">type</span> quat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qq<span class=\"sy0\">,</span>qr<span class=\"br0\">)</span> <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span>qr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quatAddsq<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>v<span class=\"sy0\">,</span>qp<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">type</span> quat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> v <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qr<span class=\"br0\">)</span> <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>v<span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span>qr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quatConj<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>qp<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">type</span> quat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qr<span class=\"br0\">)</span> <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">=-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span> qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span>qr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quatMul<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qq<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">type</span> quat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qq<span class=\"sy0\">,</span>qr<span class=\"br0\">)</span> <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><br/>        qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><br/>        qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><br/>        qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><br/>        qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>qq.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span>qr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quatMulqs<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>v<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">type</span> quat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>qr<span class=\"br0\">)</span> <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> v <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qr.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>v<span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span>qr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> shows<span class=\"sy0\">:</span> <span class=\"kw1\">Procedure</span><span class=\"br0\">(</span>t1<span class=\"sy0\">,</span>t2<span class=\"sy0\">,</span>v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>t1<span class=\"sy0\">,</span>t2<span class=\"br0\">)</span> <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> v <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>t1<span class=\"sy0\">,</span><span class=\"kw1\">right</span><span class=\"br0\">(</span>t2<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">'  --&gt; '</span><span class=\"sy0\">,</span>v<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">13</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> showt<span class=\"sy0\">:</span> <span class=\"kw1\">Procedure</span><span class=\"br0\">(</span>t1<span class=\"sy0\">,</span>t2<span class=\"sy0\">,</span>v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>t1<span class=\"sy0\">,</span>t2<span class=\"br0\">)</span> <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> v <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"kw1\">Var</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>t1<span class=\"sy0\">,</span><span class=\"kw1\">right</span><span class=\"br0\">(</span>t2<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">'  --&gt; '</span><span class=\"sy0\">,</span>v<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> showq<span class=\"sy0\">:</span> <span class=\"kw1\">Procedure</span><span class=\"br0\">(</span>t1<span class=\"sy0\">,</span>t2<span class=\"sy0\">,</span>qp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> qp <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>t1<span class=\"sy0\">,</span>t2<span class=\"br0\">)</span> <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>s<span class=\"sy0\">,</span>s2<span class=\"sy0\">,</span>p<span class=\"br0\">)</span> <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"kw1\">Var</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> i <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">String</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>t1<span class=\"sy0\">,</span><span class=\"kw1\">right</span><span class=\"br0\">(</span>t2<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">'  --&gt; '</span><span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">Put</span> <span class=\"kw1\">String</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"kw1\">abs</span><span class=\"br0\">(</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">(</span>p<span class=\"st0\">'ZZZ9'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   p<span class=\"sy0\">=</span><span class=\"kw1\">trim</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">Select</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">When</span><span class=\"br0\">(</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> p<span class=\"sy0\">=</span><span class=\"st0\">'-'</span>!!p!!v<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">When</span><span class=\"br0\">(</span>p<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> p<span class=\"sy0\">=</span><span class=\"st0\">''</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">Otherwise</span> <span class=\"kw1\">Do</span><br/>       <span class=\"kw1\">If</span> s2<span class=\"sy0\">^=</span><span class=\"st0\">''</span> <span class=\"kw1\">Then</span> p<span class=\"sy0\">=</span><span class=\"st0\">'+'</span>!!p<span class=\"sy0\">;</span><br/>       <span class=\"kw1\">If</span> i<span class=\"sy0\">&gt;</span><span class=\"nu0\">1</span> <span class=\"kw1\">Then</span> p<span class=\"sy0\">=</span>p!!v<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>   s2<span class=\"sy0\">=</span>s2!!p<br/>   <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">If</span> s2<span class=\"sy0\">=</span><span class=\"st0\">''</span> <span class=\"kw1\">Then</span><br/>   s2<span class=\"sy0\">=</span><span class=\"st0\">'0'</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>s!!s2<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> norm<span class=\"sy0\">:</span> <span class=\"kw1\">Procedure</span><span class=\"br0\">(</span>qp<span class=\"br0\">)</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> qp <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> r  <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> i  <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>   r<span class=\"sy0\">=</span>r<span class=\"sy0\">+</span>qp.<span class=\"me1\">x</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Return</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> quat_init<span class=\"sy0\">:</span> <span class=\"kw1\">Proc</span><span class=\"br0\">(</span>qp<span class=\"sy0\">,</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span>z<span class=\"sy0\">,</span>u<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> qp <span class=\"kw1\">type</span> quat<span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span>z<span class=\"sy0\">,</span>u<span class=\"br0\">)</span> <span class=\"kw1\">Dec</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>x<span class=\"sy0\">;</span><br/> qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>y<span class=\"sy0\">;</span><br/> qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>z<span class=\"sy0\">;</span><br/> qp.<span class=\"me1\">x</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>u<span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>\u00a0<br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PowerShell", "loc": 60, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/>class Quaternion <span class=\"br0\">{</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$w</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$x</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$y</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$z</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"re0\">$this</span>.w <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>      <span class=\"re0\">$this</span>.x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>      <span class=\"re0\">$this</span>.y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>      <span class=\"re0\">$this</span>.z <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"br0\">}</span><br/>  Quaternion<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$c</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$d</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"re0\">$this</span>.w <span class=\"sy0\">=</span> <span class=\"re0\">$a</span><br/>      <span class=\"re0\">$this</span>.x <span class=\"sy0\">=</span> <span class=\"re0\">$b</span><br/>      <span class=\"re0\">$this</span>.y <span class=\"sy0\">=</span> <span class=\"re0\">$c</span><br/>      <span class=\"re0\">$this</span>.z <span class=\"sy0\">=</span> <span class=\"re0\">$d</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span>abs2<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"re0\">$this</span>.w<span class=\"sy0\">*</span><span class=\"re0\">$this</span>.w <span class=\"sy0\">+</span> <span class=\"re0\">$this</span>.x<span class=\"sy0\">*</span><span class=\"re0\">$this</span>.x <span class=\"sy0\">+</span> <span class=\"re0\">$this</span>.y<span class=\"sy0\">*</span><span class=\"re0\">$this</span>.y <span class=\"sy0\">+</span> <span class=\"re0\">$this</span>.z<span class=\"sy0\">*</span><span class=\"re0\">$this</span>.z<span class=\"br0\">}</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span>abs<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"br0\">[</span>math<span class=\"br0\">]</span>::sqrt<span class=\"br0\">(</span><span class=\"re0\">$this</span>.wbs2<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  static <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>real<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$r</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"re0\">$r</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  static <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>add<span class=\"br0\">(</span><span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span><span class=\"re0\">$m</span><span class=\"sy0\">,</span><span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span><span class=\"re0\">$n</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"re0\">$m</span>.w<span class=\"sy0\">+</span><span class=\"re0\">$n</span>.w<span class=\"sy0\">,</span> <span class=\"re0\">$m</span>.x<span class=\"sy0\">+</span><span class=\"re0\">$n</span>.x<span class=\"sy0\">,</span> <span class=\"re0\">$m</span>.y<span class=\"sy0\">+</span><span class=\"re0\">$n</span>.y<span class=\"sy0\">,</span> <span class=\"re0\">$m</span>.z<span class=\"sy0\">+</span><span class=\"re0\">$n</span>.z<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>addreal<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$r</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::add<span class=\"br0\">(</span><span class=\"re0\">$this</span><span class=\"sy0\">,</span><span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::real<span class=\"br0\">(</span><span class=\"re0\">$r</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  static <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>mul<span class=\"br0\">(</span><span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span><span class=\"re0\">$m</span><span class=\"sy0\">,</span><span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span><span class=\"re0\">$n</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">return</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$m</span>.w<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.w<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.x<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.x<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.y<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.y<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.z<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.z<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$m</span>.w<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.x<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.x<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.w<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.y<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.z<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.z<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.y<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$m</span>.w<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.y<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.x<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.z<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.y<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.w<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.z<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.x<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">(</span><span class=\"re0\">$m</span>.w<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.z<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.x<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.y<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.y<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.x<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span>.z<span class=\"sy0\">*</span><span class=\"re0\">$n</span>.w<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>mul<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$r</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"re0\">$r</span><span class=\"sy0\">*</span><span class=\"re0\">$this</span>.w<span class=\"sy0\">,</span> <span class=\"re0\">$r</span><span class=\"sy0\">*</span><span class=\"re0\">$this</span>.x<span class=\"sy0\">,</span> <span class=\"re0\">$r</span><span class=\"sy0\">*</span><span class=\"re0\">$this</span>.y<span class=\"sy0\">,</span> <span class=\"re0\">$r</span><span class=\"sy0\">*</span><span class=\"re0\">$this</span>.z<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>negate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"re0\">$this</span>.mul<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>conjugate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"re0\">$this</span>.w<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$this</span>.x<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$this</span>.y<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"re0\">$this</span>.z<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  static <span class=\"br0\">[</span><span class=\"re3\">String</span><span class=\"br0\">]</span>st<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">Double</span><span class=\"br0\">]</span><span class=\"re0\">$r</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>        <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"kw4\">-le</span> <span class=\"re0\">$r</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"st0\">\"+$r\"</span><span class=\"br0\">}</span> <span class=\"kw3\">else</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"st0\">\"$r\"</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"br0\">[</span><span class=\"re3\">String</span><span class=\"br0\">]</span>show<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"st0\">\"$($this.w)$([Quaternion]::st($this.x))i$([Quaternion]::st($this.y))j$([Quaternion]::st($this.z))k\"</span><span class=\"br0\">}</span><br/>  static <span class=\"br0\">[</span><span class=\"re3\">String</span><span class=\"br0\">]</span>show<span class=\"br0\">(</span><span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span><span class=\"re0\">$other</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"re0\">$other</span>.show<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re0\">$q</span>  <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"re0\">$q1</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/><span class=\"re0\">$q2</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Quaternion<span class=\"br0\">]</span>::new<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/><span class=\"re0\">$r</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q: $($q.show())\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q1: $($q1.show())\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q2: $($q2.show())\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>r: $r\"</span><br/><span class=\"st0\">\"\"</span><br/><span class=\"st0\">\"norm <span class=\"es0\">`$</span>q: $($q.wbs())\"</span><br/><span class=\"st0\">\"negate <span class=\"es0\">`$</span>q: $($q.negate().show())\"</span><br/><span class=\"st0\">\"conjugate <span class=\"es0\">`$</span>q: $($q.yonjugate().show())\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q + <span class=\"es0\">`$</span>r: $($q.wddreal($r).show())\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q1 + <span class=\"es0\">`$</span>q2: $([Quaternion]::show([Quaternion]::add($q1,$q2)))\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q * <span class=\"es0\">`$</span>r: $($q.mul($r).show())\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q1 * <span class=\"es0\">`$</span>q2: $([Quaternion]::show([Quaternion]::mul($q1,$q2)))\"</span><br/><span class=\"st0\">\"<span class=\"es0\">`$</span>q2 * <span class=\"es0\">`$</span>q1: $([Quaternion]::show([Quaternion]::mul($q2,$q1)))\"</span><br/>\u00a0</pre>"}, {"lang": "Prolog", "loc": 22, "block": "<pre class=\"prolog highlighted_source\"><span class=\"co1\">% A quaternion is represented as a complex term qx/4</span><br/>add<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I0<span class=\"sy4\">,</span>J0<span class=\"sy4\">,</span>K0<span class=\"br0\">)</span><span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R1<span class=\"sy4\">,</span>I1<span class=\"sy4\">,</span>J1<span class=\"sy4\">,</span>K1<span class=\"br0\">)</span><span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\t<span class=\"sy5\">!</span><span class=\"sy4\">,</span> R <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0<span class=\"sy3\">+</span>R1<span class=\"sy4\">,</span> I <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I0<span class=\"sy3\">+</span>I1<span class=\"sy4\">,</span> J <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> J0<span class=\"sy3\">+</span>J1<span class=\"sy4\">,</span> K <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> K0<span class=\"sy3\">+</span>K1<span class=\"sy4\">.</span><br/>add<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"sy4\">,</span> F<span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">number</span></a><span class=\"br0\">(</span>F<span class=\"br0\">)</span><span class=\"sy4\">,</span> <span class=\"sy5\">!</span><span class=\"sy4\">,</span> R <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0 <span class=\"sy3\">+</span> F<span class=\"sy4\">.</span><br/>add<span class=\"br0\">(</span>F<span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"sy4\">,</span> Qx<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tadd<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"sy4\">,</span> F<span class=\"sy4\">,</span> Qx<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>mul<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I0<span class=\"sy4\">,</span>J0<span class=\"sy4\">,</span>K0<span class=\"br0\">)</span><span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R1<span class=\"sy4\">,</span>I1<span class=\"sy4\">,</span>J1<span class=\"sy4\">,</span>K1<span class=\"br0\">)</span><span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span> <span class=\"sy5\">!</span><span class=\"sy4\">,</span><br/>\tR <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0<span class=\"sy3\">*</span>R1 <span class=\"sy3\">-</span> I0<span class=\"sy3\">*</span>I1 <span class=\"sy3\">-</span> J0<span class=\"sy3\">*</span>J1 <span class=\"sy3\">-</span> K0<span class=\"sy3\">*</span>K1<span class=\"sy4\">,</span><br/>\tI <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0<span class=\"sy3\">*</span>I1 <span class=\"sy3\">+</span> I0<span class=\"sy3\">*</span>R1 <span class=\"sy3\">+</span> J0<span class=\"sy3\">*</span>K1 <span class=\"sy3\">-</span> K0<span class=\"sy3\">*</span>J1<span class=\"sy4\">,</span><br/>\tJ <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0<span class=\"sy3\">*</span>J1 <span class=\"sy3\">-</span> I0<span class=\"sy3\">*</span>K1 <span class=\"sy3\">+</span> J0<span class=\"sy3\">*</span>R1 <span class=\"sy3\">+</span> K0<span class=\"sy3\">*</span>I1<span class=\"sy4\">,</span><br/>\tK <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0<span class=\"sy3\">*</span>K1 <span class=\"sy3\">+</span> I0<span class=\"sy3\">*</span>J1 <span class=\"sy3\">-</span> J0<span class=\"sy3\">*</span>I1 <span class=\"sy3\">+</span> K0<span class=\"sy3\">*</span>R1<span class=\"sy4\">.</span><br/>mul<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I0<span class=\"sy4\">,</span>J0<span class=\"sy4\">,</span>K0<span class=\"br0\">)</span><span class=\"sy4\">,</span> F<span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">number</span></a><span class=\"br0\">(</span>F<span class=\"br0\">)</span><span class=\"sy4\">,</span> <span class=\"sy5\">!</span><span class=\"sy4\">,</span> R <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> R0<span class=\"sy3\">*</span>F<span class=\"sy4\">,</span> I <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I0<span class=\"sy3\">*</span>F<span class=\"sy4\">,</span> J <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> J0<span class=\"sy3\">*</span>F<span class=\"sy4\">,</span> K <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> K0<span class=\"sy3\">*</span>F<span class=\"sy4\">.</span><br/>mul<span class=\"br0\">(</span>F<span class=\"sy4\">,</span> qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I0<span class=\"sy4\">,</span>J0<span class=\"sy4\">,</span>K0<span class=\"br0\">)</span><span class=\"sy4\">,</span> Qx<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tmul<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R0<span class=\"sy4\">,</span>I0<span class=\"sy4\">,</span>J0<span class=\"sy4\">,</span>K0<span class=\"br0\">)</span><span class=\"sy4\">,</span>F<span class=\"sy4\">,</span>Qx<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/><a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">abs</span></a><span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"sy4\">,</span> Norm<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tNorm <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">sqrt</span></a><span class=\"br0\">(</span>R<span class=\"sy3\">*</span>R<span class=\"sy3\">+</span>I<span class=\"sy3\">*</span>I<span class=\"sy3\">+</span>J<span class=\"sy3\">*</span>J<span class=\"sy3\">+</span>K<span class=\"sy3\">*</span>K<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>negate<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>Ri<span class=\"sy4\">,</span>Ii<span class=\"sy4\">,</span>Ji<span class=\"sy4\">,</span>Ki<span class=\"br0\">)</span><span class=\"sy4\">,</span>qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tR <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ri<span class=\"sy4\">,</span> I <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ii<span class=\"sy4\">,</span> J <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ji<span class=\"sy4\">,</span> K <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ki<span class=\"sy4\">.</span><br/>conjugate<span class=\"br0\">(</span>qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>Ii<span class=\"sy4\">,</span>Ji<span class=\"sy4\">,</span>Ki<span class=\"br0\">)</span><span class=\"sy4\">,</span>qx<span class=\"br0\">(</span>R<span class=\"sy4\">,</span>I<span class=\"sy4\">,</span>J<span class=\"sy4\">,</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tI <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ii<span class=\"sy4\">,</span> J <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ji<span class=\"sy4\">,</span> K <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"sy3\">-</span>Ki<span class=\"sy4\">.</span></pre>"}, {"lang": "PureBasic", "loc": 85, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Structure</span> Quaternion  <br/>  a.f<br/>  b.f<br/>  c.f<br/>  d.f<br/><span class=\"kw1\">EndStructure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.f QNorm<span class=\"br0\">(</span><span class=\"sy0\">*</span>x.Quaternion<span class=\"br0\">)</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"kw2\">Sqr</span><span class=\"br0\">(</span><span class=\"kw2\">Pow</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a, <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Pow</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b, <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Pow</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c, <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Pow</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"co1\">;If supplied, the result is returned in the quaternion structure *res,</span><br/><span class=\"co1\">;otherwise a new quaternion is created.  A pointer to the result is returned.</span><br/><span class=\"kw1\">Procedure</span> QNeg<span class=\"br0\">(</span><span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"kw2\">AllocateMemory</span><span class=\"br0\">(</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>a<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>b<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>c<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>d<br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">*</span>res<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> QConj<span class=\"br0\">(</span><span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"kw2\">AllocateMemory</span><span class=\"br0\">(</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>a <span class=\"sy0\">=</span>  <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>b<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>c<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">-*</span>x<span class=\"sy0\">\\</span>d<br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">*</span>res<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> QAddReal<span class=\"br0\">(</span>r.f, <span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"kw2\">AllocateMemory</span><span class=\"br0\">(</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">+</span> r<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d<br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">*</span>res<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> QAddQuaternion<span class=\"br0\">(</span><span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>y.Quaternion, <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"kw2\">AllocateMemory</span><span class=\"br0\">(</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>a<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>b<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>c<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>d<br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">*</span>res<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> QMulReal_and_Quaternion<span class=\"br0\">(</span>r.f, <span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"kw2\">AllocateMemory</span><span class=\"br0\">(</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">*</span> r<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">*</span> r<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">*</span> r<br/>    <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">*</span> r<br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">*</span>res<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> QMulQuaternion<span class=\"br0\">(</span><span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>y.Quaternion, <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>: <span class=\"sy0\">*</span>res.Quaternion <span class=\"sy0\">=</span> <span class=\"kw2\">AllocateMemory</span><span class=\"br0\">(</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Quaternion<span class=\"br0\">)</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>res<br/>     <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>a <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>b <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>c <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>d<br/>     <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>b <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>b <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>a <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>d <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>c<br/>     <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>c <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>d <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>a <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>b<br/>     <span class=\"sy0\">*</span>res<span class=\"sy0\">\\</span>d <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>d <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>c <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>b <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>a<br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">*</span>res<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> Q_areEqual<span class=\"br0\">(</span><span class=\"sy0\">*</span>x.Quaternion, <span class=\"sy0\">*</span>y.Quaternion<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>a <span class=\"sy0\">&lt;&gt;</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>a<span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>b <span class=\"sy0\">&lt;&gt;</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>b<span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>c <span class=\"sy0\">&lt;&gt;</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>c<span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>x<span class=\"sy0\">\\</span>d <span class=\"sy0\">&lt;&gt;</span> <span class=\"sy0\">*</span>y<span class=\"sy0\">\\</span>d<span class=\"br0\">)</span><br/>    <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0</span> <span class=\"co1\">;false</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">1</span> <span class=\"co1\">;true</span><br/><span class=\"kw1\">EndProcedure</span></pre>"}, {"lang": "Python", "loc": 82, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> namedtuple<br/><span class=\"kw1\">import</span> <span class=\"kw3\">math</span><br/>\u00a0<br/><span class=\"kw1\">class</span> Q<span class=\"br0\">(</span>namedtuple<span class=\"br0\">(</span><span class=\"st0\">'Quaternion'</span><span class=\"sy0\">,</span> <span class=\"st0\">'real, i, j, k'</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Quaternion type: Q(real=0.0, i=0.0, j=0.0, k=0.0)'</span> <br/>\u00a0<br/>    <span class=\"kw4\">__slots__</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__new__</span><span class=\"br0\">(</span>_cls<span class=\"sy0\">,</span> real<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> j<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"sy0\">,</span> k<span class=\"sy0\">=</span><span class=\"nu0\">0.0</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">'Defaults all parts of quaternion to zero'</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__new__</span><span class=\"br0\">(</span>_cls<span class=\"sy0\">,</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>real<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> conjugate<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">real</span><span class=\"sy0\">,</span> -<span class=\"kw2\">self</span>.<span class=\"me1\">i</span><span class=\"sy0\">,</span> -<span class=\"kw2\">self</span>.<span class=\"me1\">j</span><span class=\"sy0\">,</span> -<span class=\"kw2\">self</span>.<span class=\"me1\">k</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> _norm2<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span> x*x <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">self</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> norm<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw3\">math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>._norm2<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> reciprocal<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        n2 <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>._norm2<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span>*<span class=\"br0\">(</span>x / n2 <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">conjugate</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">'Shorter form of Quaternion as string'</span><br/>        <span class=\"kw1\">return</span> <span class=\"st0\">'Q(%g,\u00a0%g,\u00a0%g,\u00a0%g)'</span>\u00a0% <span class=\"kw2\">self</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__neg__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span>-<span class=\"kw2\">self</span>.<span class=\"me1\">real</span><span class=\"sy0\">,</span> -<span class=\"kw2\">self</span>.<span class=\"me1\">i</span><span class=\"sy0\">,</span> -<span class=\"kw2\">self</span>.<span class=\"me1\">j</span><span class=\"sy0\">,</span> -<span class=\"kw2\">self</span>.<span class=\"me1\">k</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__add__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> Q:<br/>            <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span> *<span class=\"br0\">(</span>s+o <span class=\"kw1\">for</span> s<span class=\"sy0\">,</span>o <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">try</span>:<br/>            f <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">real</span> + f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">i</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">j</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">k</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__radd__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> Q.<span class=\"kw4\">__add__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__mul__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> Q:<br/>            a1<span class=\"sy0\">,</span>b1<span class=\"sy0\">,</span>c1<span class=\"sy0\">,</span>d1 <span class=\"sy0\">=</span> <span class=\"kw2\">self</span><br/>            a2<span class=\"sy0\">,</span>b2<span class=\"sy0\">,</span>c2<span class=\"sy0\">,</span>d2 <span class=\"sy0\">=</span> other<br/>            <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><br/>                 a1*a2 - b1*b2 - c1*c2 - d1*d2<span class=\"sy0\">,</span><br/>                 a1*b2 + b1*a2 + c1*d2 - d1*c2<span class=\"sy0\">,</span><br/>                 a1*c2 - b1*d2 + c1*a2 + d1*b2<span class=\"sy0\">,</span><br/>                 a1*d2 + b1*c2 - c1*b2 + d1*a2 <span class=\"br0\">)</span><br/>        <span class=\"kw1\">try</span>:<br/>            f <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">real</span> * f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">i</span> * f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">j</span> * f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">k</span> * f<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__rmul__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> Q.<span class=\"kw4\">__mul__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> __truediv__<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">type</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span> <span class=\"sy0\">==</span> Q:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"kw4\">__mul__</span><span class=\"br0\">(</span>other.<span class=\"me1\">reciprocal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">try</span>:<br/>            f <span class=\"sy0\">=</span> <span class=\"kw2\">float</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>        <span class=\"kw1\">except</span>:<br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">NotImplemented</span><br/>        <span class=\"kw1\">return</span> Q<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">real</span> / f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">i</span> / f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">j</span> / f<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">k</span> / f<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> __rtruediv__<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">return</span> other * <span class=\"kw2\">self</span>.<span class=\"me1\">reciprocal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw4\">__div__</span><span class=\"sy0\">,</span> <span class=\"kw4\">__rdiv__</span> <span class=\"sy0\">=</span> __truediv__<span class=\"sy0\">,</span> __rtruediv__<br/>\u00a0<br/>Quaternion <span class=\"sy0\">=</span> Q       <br/>\u00a0<br/>q  <span class=\"sy0\">=</span> Q<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>q1 <span class=\"sy0\">=</span> Q<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>q2 <span class=\"sy0\">=</span> Q<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>r  <span class=\"sy0\">=</span> <span class=\"nu0\">7</span></pre>"}, {"lang": "R", "loc": 36, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>library(quaternions)<br/>\u00a0<br/>q &lt;- Q(1, 2, 3, 4)<br/>q1 &lt;- Q(2, 3, 4, 5)<br/>q2 &lt;- Q(3, 4, 5, 6)<br/>r &lt;- 7.0<br/>\u00a0<br/>display &lt;- function(x){<br/>  e &lt;- deparse(substitute(x))<br/>  res &lt;- if(class(x) == \"Q\") paste(x$r, \"+\", x$i, \"i+\", x$j, \"j+\", x$k, \"k\", sep = \"\") else x<br/>  cat(noquote(paste(c(e, \" = \", res, \"\\n\"), collapse=\"\")))<br/>  invisible(res)<br/>}<br/>\u00a0<br/>display(norm(q))<br/>display(-q)<br/>display(Conj(q))<br/>display(r + q)<br/>display(q1 + q2)<br/>display(r*q)<br/>display(q*r)<br/>if(display(q1*q2) == display(q2*q1)) cat(\"q1*q2 == q2*q1\\n\") else cat(\"q1*q2\u00a0!= q2*q1\\n\")<br/>\u00a0<br/>## norm(q) = 5.47722557505166<br/>## -q = -1+-2i+-3j+-4k<br/>## Conj(q) = 1+-2i+-3j+-4k<br/>## r + q = 8+2i+3j+4k<br/>## q1 + q2 = 5+7i+9j+11k<br/>## r * q = 7+14i+21j+28k<br/>## q * r = 7+14i+21j+28k<br/>## q1 * q2 = -56+16i+24j+26k<br/>## q2 * q1 = -56+18i+20j+28k<br/>## q1*q2\u00a0!= q2*q1<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 75, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>\u00a0<br/>(struct quaternion (a b c d)<br/>  #:transparent)<br/>\u00a0<br/>(define-match-expander quaternion: <br/>  (\u03bb (stx)<br/>    (syntax-case stx ()<br/>      [(_ a b c d) <br/>       #'(or (quaternion a b c d)<br/>             (and a (app (\u03bb(_) 0) b) (app (\u03bb(_) 0) c) (app (\u03bb(_) 0) d)))])))<br/>\u00a0<br/>(define (norm q)<br/>  (match q<br/>    [(quaternion: a b c d)<br/>     (sqrt (+ (sqr a) (sqr b) (sqr c) (sqr d)))]))<br/>\u00a0<br/>(define (negate q)<br/>  (match q<br/>    [(quaternion: a b c d)<br/>     (quaternion (- a) (- b) (- c) (- d))]))<br/>\u00a0<br/>(define (conjugate q)<br/>  (match q<br/>    [(quaternion: a b c d)<br/>     (quaternion a (- b) (- c) (- d))]))<br/>\u00a0<br/>(define (add q1 q2 . q-rest)<br/>  (let ((ans (match* (q1 q2)<br/>               [((quaternion: a1 b1 c1 d1) (quaternion: a2 b2 c2 d2))<br/>                (quaternion (+ a1 a2) (+ b1 b2) (+ c1 c2) (+ d1 d2))])))<br/>    (if (empty? q-rest)<br/>        ans<br/>        (apply add (cons ans q-rest)))))<br/>\u00a0<br/>(define (multiply q1 q2 . q-rest)<br/>  (let ((ans (match* (q1 q2)<br/>               [((quaternion: a1 b1 c1 d1) (quaternion: a2 b2 c2 d2))<br/>                (quaternion (- (* a1 a2) (* b1 b2) (* c1 c2) (* d1 d2))<br/>                            (+ (* a1 b2) (* b1 a2) (* c1 d2) (- (* d1 c2)))<br/>                            (+ (* a1 c2) (- (* b1 d2)) (* c1 a2) (* d1 b2))<br/>                            (+ (* a1 d2) (* b1 c2) (- (* c1 b2)) (* d1 a2)))])))<br/>    (if (empty? q-rest)<br/>        ans<br/>        (apply multiply (cons ans q-rest)))))<br/>\u00a0<br/>;; Tests<br/>(module+ main<br/>  (define i (quaternion 0 1 0 0))<br/>  (define j (quaternion 0 0 1 0))<br/>  (define k (quaternion 0 0 0 1))<br/>  (displayln (multiply i j k))<br/>  (newline)<br/>\u00a0<br/>  (define q (quaternion 1 2 3 4))<br/>  (define q1 (quaternion 2 3 4 5))<br/>  (define q2 (quaternion 3 4 5 6))<br/>  (define r 7)<br/>\u00a0<br/>  (for ([quat (list q q1 q2)])<br/>    (displayln quat)<br/>    (displayln (norm quat))<br/>    (displayln (negate quat))<br/>    (displayln (conjugate quat))<br/>    (newline))<br/>\u00a0<br/>  (add r q)<br/>  (add q1 q2)<br/>  (multiply r q)<br/>\u00a0<br/>  (newline)<br/>  (multiply q1 q2)<br/>  (multiply q2 q1)<br/>  (equal? (multiply q1 q2)<br/>          (multiply q2 q1)))</pre>"}, {"lang": "REXX", "loc": 43, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program performs some operations on  quaternion type numbers and displays results*/</span><br/>                       q = <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span>   \u00a0;                     q1 = <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span><br/>                       r = <span class=\"nu0\">7</span>         \u00a0;                     q2 = <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span><br/><span class=\"kw1\">call</span> qShow  q                         ,     <span class=\"st0\">'q'</span><br/><span class=\"kw1\">call</span> qShow  q1                        ,     <span class=\"st0\">'q1'</span><br/><span class=\"kw1\">call</span> qShow  q2                        ,     <span class=\"st0\">'q2'</span><br/><span class=\"kw1\">call</span> qShow  r                         ,     <span class=\"st0\">'r'</span><br/><span class=\"kw1\">call</span> qShow  qNorm<span class=\"br0\">(</span>q<span class=\"br0\">)</span>                  ,     <span class=\"st0\">'norm q'</span>                  ,        <span class=\"st0\">\"task 1:\"</span><br/><span class=\"kw1\">call</span> qShow  qNeg<span class=\"br0\">(</span>q<span class=\"br0\">)</span>                   ,     <span class=\"st0\">'negative q'</span>              ,        <span class=\"st0\">\"task 2:\"</span><br/><span class=\"kw1\">call</span> qShow  qConj<span class=\"br0\">(</span>q<span class=\"br0\">)</span>                  ,     <span class=\"st0\">'conjugate q'</span>             ,        <span class=\"st0\">\"task 3:\"</span><br/><span class=\"kw1\">call</span> qShow  qAdd<span class=\"br0\">(</span> r, q  <span class=\"br0\">)</span>             ,     <span class=\"st0\">'addition r+q'</span>            ,        <span class=\"st0\">\"task 4:\"</span><br/><span class=\"kw1\">call</span> qShow  qAdd<span class=\"br0\">(</span>q1, q2 <span class=\"br0\">)</span>             ,     <span class=\"st0\">'addition q1+q2'</span>          ,        <span class=\"st0\">\"task 5:\"</span><br/><span class=\"kw1\">call</span> qShow  qMul<span class=\"br0\">(</span> q, r  <span class=\"br0\">)</span>             ,     <span class=\"st0\">'multiplication q*r'</span>      ,        <span class=\"st0\">\"task 6:\"</span><br/><span class=\"kw1\">call</span> qShow  qMul<span class=\"br0\">(</span>q1, q2 <span class=\"br0\">)</span>             ,     <span class=\"st0\">'multiplication q1*q2'</span>    ,        <span class=\"st0\">\"task 7:\"</span><br/><span class=\"kw1\">call</span> qShow  qMul<span class=\"br0\">(</span>q2, q1 <span class=\"br0\">)</span>             ,     <span class=\"st0\">'multiplication q2*q1'</span>    ,        <span class=\"st0\">\"task 8:\"</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>qConj: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;    <span class=\"kw1\">call</span> qXY;    <span class=\"kw1\">return</span>    x<span class=\"sy0\">.</span>1    <span class=\"br0\">(</span>-x<span class=\"sy0\">.</span>2<span class=\"br0\">)</span>    <span class=\"br0\">(</span>-x<span class=\"sy0\">.</span>3<span class=\"br0\">)</span>    <span class=\"br0\">(</span>-x<span class=\"sy0\">.</span>4<span class=\"br0\">)</span><br/>qNeg:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;    <span class=\"kw1\">call</span> qXY;    <span class=\"kw1\">return</span>   -x<span class=\"sy0\">.</span>1    <span class=\"br0\">(</span>-x<span class=\"sy0\">.</span>2<span class=\"br0\">)</span>    <span class=\"br0\">(</span>-x<span class=\"sy0\">.</span>3<span class=\"br0\">)</span>    <span class=\"br0\">(</span>-x<span class=\"sy0\">.</span>4<span class=\"br0\">)</span><br/>qNorm: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;    <span class=\"kw1\">call</span> qXY;    <span class=\"kw1\">return</span> sqrt<span class=\"br0\">(</span>x<span class=\"sy0\">.</span>1<span class=\"sy0\">**</span><span class=\"nu0\">2</span> +x<span class=\"sy0\">.</span>2<span class=\"sy0\">**</span><span class=\"nu0\">2</span> +x<span class=\"sy0\">.</span>3<span class=\"sy0\">**</span><span class=\"nu0\">2</span> +x<span class=\"sy0\">.</span>4<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>qAdd:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x,y;  <span class=\"kw1\">call</span> qXY <span class=\"nu0\">2</span>;  <span class=\"kw1\">return</span> x<span class=\"sy0\">.</span>1+y<span class=\"sy0\">.</span>1  x<span class=\"sy0\">.</span>2+y<span class=\"sy0\">.</span>2  x<span class=\"sy0\">.</span>3+y<span class=\"sy0\">.</span>3  x<span class=\"sy0\">.</span>4+y<span class=\"sy0\">.</span>4<br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>qMul:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x,y;  <span class=\"kw1\">call</span> qXY y<br/>       <span class=\"kw1\">return</span> x<span class=\"sy0\">.</span>1<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>1 -x<span class=\"sy0\">.</span>2<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>2 -x<span class=\"sy0\">.</span>3<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>3 -x<span class=\"sy0\">.</span>4<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>4     x<span class=\"sy0\">.</span>1<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>2 +x<span class=\"sy0\">.</span>2<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>1 +x<span class=\"sy0\">.</span>3<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>4 -x<span class=\"sy0\">.</span>4<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>3 ,<br/>              x<span class=\"sy0\">.</span>1<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>3 -x<span class=\"sy0\">.</span>2<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>4 +x<span class=\"sy0\">.</span>3<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>1 +x<span class=\"sy0\">.</span>4<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>2     x<span class=\"sy0\">.</span>1<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>4 +x<span class=\"sy0\">.</span>2<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>3 -x<span class=\"sy0\">.</span>3<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>2 +x<span class=\"sy0\">.</span>4<span class=\"sy0\">*</span>y<span class=\"sy0\">.</span>1<br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>qShow: <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;          <span class=\"kw1\">call</span> qXY;   $=<br/>             <span class=\"kw1\">do</span> m=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"nu0\">4</span>;  _=x<span class=\"sy0\">.</span>m;     <span class=\"kw1\">if</span> _==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>;        <span class=\"kw1\">if</span> _<span class=\"sy0\">&gt;</span>=<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> _=<span class=\"st0\">\"+\"</span>_<br/>             <span class=\"kw1\">if</span> m<span class=\"sy0\">\\</span>==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> _= _ <span class=\"sy0\">||</span> <span class=\"kw6\">substr</span><span class=\"br0\">(</span><span class=\"st0\">'~ijk'</span>, m, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;             $=<span class=\"kw6\">strip</span><span class=\"br0\">(</span>$ <span class=\"sy0\">||</span> _,,<span class=\"st0\">\"+\"</span><span class=\"br0\">)</span><br/>             <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*m*/</span><br/>       <span class=\"kw1\">say</span> <span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span>   <span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span>         <span class=\"st0\">' \u2500\u2500\u25ba '</span>        $<br/>       <span class=\"kw1\">return</span> $<br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>qXY:                      <span class=\"kw1\">do</span> n=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"nu0\">4</span>;   x<span class=\"sy0\">.</span>n= <span class=\"kw6\">word</span><span class=\"br0\">(</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span>x, n<span class=\"br0\">)</span>  <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">1</span>;    <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*n*/</span><br/>       <span class=\"kw1\">if</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"br0\">)</span>==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span>  <span class=\"kw1\">do</span> m=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"nu0\">4</span>;   y<span class=\"sy0\">.</span>m= <span class=\"kw6\">word</span><span class=\"br0\">(</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span>y, m<span class=\"br0\">)</span>  <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">1</span>;    <span class=\"kw3\">end</span> <span class=\"coMULTI\">/*m*/</span><br/>       <span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>sqrt:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> x;  <span class=\"kw1\">if</span> x=<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;   d= <span class=\"kw2\">digits</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;   i=;   m<span class=\"sy0\">.</span>=<span class=\"nu0\">9</span>;  h=d+<span class=\"nu0\">6</span><br/>       <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span>; <span class=\"kw1\">numeric</span> <span class=\"kw2\">form</span>;         <span class=\"kw1\">if</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>  <span class=\"kw3\">then</span>  <span class=\"kw1\">do</span>;  x= -x;    i= <span class=\"st0\">'i'</span>;      <span class=\"kw3\">end</span><br/>       <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"kw6\">format</span><span class=\"br0\">(</span>x, <span class=\"nu0\">2</span>, <span class=\"nu0\">1</span>, , <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"st0\">'E0'</span>   <span class=\"kw2\">with</span>   g  <span class=\"st0\">'E'</span>  _  <span class=\"sy0\">.</span>;       g= g <span class=\"sy0\">*.</span>5<span class=\"st0\">'e'</span>_\u00a0% <span class=\"nu0\">2</span><br/>          <span class=\"kw1\">do</span> j=<span class=\"nu0\">0</span>  <span class=\"kw2\">while</span> h<span class=\"sy0\">&gt;</span><span class=\"nu0\">9</span>;       m<span class=\"sy0\">.</span>j=h;                 h= h\u00a0% <span class=\"nu0\">2</span>   +  <span class=\"nu0\">1</span>;      <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*j*/</span><br/>          <span class=\"kw1\">do</span> k=j+<span class=\"nu0\">5</span>  <span class=\"kw2\">to</span> <span class=\"nu0\">0</span>  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>;   <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> m<span class=\"sy0\">.</span>k;    g= <span class=\"br0\">(</span>g + x<span class=\"sy0\">/</span>g<span class=\"br0\">)</span><span class=\"sy0\">*</span> <span class=\"sy0\">.</span>5;     <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*k*/</span><br/>       <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> d;           <span class=\"kw1\">return</span> <span class=\"br0\">(</span>g<span class=\"sy0\">/</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>i                <span class=\"coMULTI\">/*make complex if  X&lt;0. */</span></pre>"}, {"lang": "Ruby", "loc": 77, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> Quaternion<br/>  <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span><span class=\"sy0\">*</span>parts<span class=\"br0\">)</span><br/>    <span class=\"kw3\">raise</span> <span class=\"kw4\">ArgumentError</span>, <span class=\"st0\">\"wrong number of arguments (#{parts.size} for 4)\"</span> <span class=\"kw1\">unless</span> parts.<span class=\"me1\">size</span> == <span class=\"nu0\">4</span><br/>    <span class=\"kw3\">raise</span> <span class=\"kw4\">ArgumentError</span>, <span class=\"st0\">\"invalid value of quaternion parts #{parts}\"</span> <span class=\"kw1\">unless</span> parts.<span class=\"me1\">all</span>? <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x.<span class=\"me1\">is_a</span>?<span class=\"br0\">(</span><span class=\"kw4\">Numeric</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"re1\">@parts</span> = parts<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> to_a;          <span class=\"re1\">@parts</span>;                                       <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">def</span> to_s;          <span class=\"st0\">\"Quaternion#{@parts.to_s}\"</span>                    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">alias</span> inspect to_s<br/>  <span class=\"kw1\">def</span> complex_parts; <span class=\"br0\">[</span><span class=\"kw4\">Complex</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>to_a<span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"kw4\">Complex</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>to_a<span class=\"br0\">[</span><span class=\"nu0\">2</span>..<span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span>; <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> real;          <span class=\"re1\">@parts</span>.<span class=\"me1\">first</span>;                                 <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">def</span> imag;          <span class=\"re1\">@parts</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">3</span><span class=\"br0\">]</span>;                                 <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">def</span> conj;          Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span>real, <span class=\"sy0\">*</span>imag.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>:<span class=\"sy0\">-</span>@<span class=\"br0\">)</span><span class=\"br0\">)</span>;        <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">def</span> norm;          <span class=\"kw4\">Math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>to_a.<span class=\"me1\">reduce</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>sum,e<span class=\"sy0\">|</span> sum <span class=\"sy0\">+</span> e<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span> <span class=\"co1\"># In Rails: Math.sqrt(to_a.sum { e**2 })</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> ==<span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">case</span> other<br/>    <span class=\"kw1\">when</span> Quaternion; to_a == other.<span class=\"me1\">to_a</span><br/>    <span class=\"kw1\">when</span> <span class=\"kw4\">Numeric</span>;    to_a == <span class=\"br0\">[</span>other, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">else</span>             <span class=\"kw2\">false</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">-</span>@;            Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>to_a.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>:<span class=\"sy0\">-</span>@<span class=\"br0\">)</span><span class=\"br0\">)</span>;              <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span>;      <span class=\"kw2\">self</span> <span class=\"sy0\">+</span> <span class=\"sy0\">-</span>other;                                <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">+</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">case</span> other<br/>    <span class=\"kw1\">when</span> <span class=\"kw4\">Numeric</span><br/>      Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span>real <span class=\"sy0\">+</span> other, <span class=\"sy0\">*</span>imag<span class=\"br0\">)</span><br/>    <span class=\"kw1\">when</span> Quaternion<br/>      Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>to_a.<span class=\"me1\">zip</span><span class=\"br0\">(</span>other.<span class=\"me1\">to_a</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>x,y<span class=\"sy0\">|</span> x <span class=\"sy0\">+</span> y <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"co1\"># In Rails: zip(other).map(&amp;:sum)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">case</span> other<br/>    <span class=\"kw1\">when</span> <span class=\"kw4\">Numeric</span><br/>      Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>to_a.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x <span class=\"sy0\">*</span> other <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">when</span> Quaternion<br/>      <span class=\"co1\"># Multiplication of quaternions in C x C space. See \"Cayley-Dickson construction\".</span><br/>      a, b, c, d = <span class=\"sy0\">*</span>complex_parts, <span class=\"sy0\">*</span>other.<span class=\"me1\">complex_parts</span><br/>      x, y = a<span class=\"sy0\">*</span>c <span class=\"sy0\">-</span> d.<span class=\"me1\">conj</span><span class=\"sy0\">*</span>b, a<span class=\"sy0\">*</span>d <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span>c.<span class=\"me1\">conj</span><br/>      Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span>x.<span class=\"me1\">real</span>, x.<span class=\"me1\">imag</span>, y.<span class=\"me1\">real</span>, y.<span class=\"me1\">imag</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># Coerce is called by Ruby to return a compatible type/receiver when the called method/operation does not accept a Quaternion</span><br/>  <span class=\"kw1\">def</span> coerce<span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    <span class=\"kw1\">case</span> other<br/>    <span class=\"kw1\">when</span> <span class=\"kw4\">Numeric</span> <span class=\"kw1\">then</span> <span class=\"br0\">[</span>Scalar.<span class=\"me1\">new</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span>, <span class=\"kw2\">self</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw3\">raise</span> <span class=\"kw4\">TypeError</span>, <span class=\"st0\">\"#{other.class} can't be coerced into #{self.class}\"</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">class</span> Scalar<br/>    <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span>val<span class=\"br0\">)</span>; <span class=\"re1\">@val</span> = val;                            <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">def</span> <span class=\"sy0\">+</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span>;        other <span class=\"sy0\">+</span> <span class=\"re1\">@val</span>;                          <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">def</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span>;        other <span class=\"sy0\">*</span> <span class=\"re1\">@val</span>;                          <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">def</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>other<span class=\"br0\">)</span>;        Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span>@val, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> other; <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"kw2\">__FILE__</span> == $0<br/>  q  = Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  q1 = Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  q2 = Quaternion.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>  r  = <span class=\"nu0\">7</span><br/>  expressions = <span class=\"br0\">[</span><span class=\"st0\">\"q\"</span>, <span class=\"st0\">\"q1\"</span>, <span class=\"st0\">\"q2\"</span>,<br/>                 <span class=\"st0\">\"q.norm\"</span>, <span class=\"st0\">\"-q\"</span>, <span class=\"st0\">\"q.conj\"</span>, <span class=\"st0\">\"q + r\"</span>, <span class=\"st0\">\"r + q\"</span>,<span class=\"st0\">\"q1 + q2\"</span>, <span class=\"st0\">\"q2 + q1\"</span>,<br/>                 <span class=\"st0\">\"q * r\"</span>, <span class=\"st0\">\"r * q\"</span>, <span class=\"st0\">\"q1 * q2\"</span>, <span class=\"st0\">\"q2 * q1\"</span>, <span class=\"st0\">\"(q1 * q2\u00a0!= q2 * q1)\"</span>,<br/>                 <span class=\"st0\">\"q - r\"</span>, <span class=\"st0\">\"r - q\"</span><span class=\"br0\">]</span><br/>  expressions.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>exp<span class=\"sy0\">|</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"%20s =\u00a0%s\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>exp, <span class=\"kw3\">eval</span><span class=\"br0\">(</span>exp<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Rust", "loc": 173, "block": "<pre class=\"text highlighted_source\">use std::fmt::{Display, Error, Formatter};<br/>use std::ops::{Add, Mul, Neg};<br/>\u00a0<br/>#[derive(Clone,Copy,Debug)]<br/>struct Quaternion {<br/>    a: f64,<br/>    b: f64,<br/>    c: f64,<br/>    d: f64<br/>}<br/>\u00a0<br/>impl Quaternion {<br/>    pub fn new(a: f64, b: f64, c: f64, d: f64) -&gt; Quaternion {<br/>        Quaternion {<br/>            a: a,<br/>            b: b,<br/>            c: c,<br/>            d: d<br/>        }<br/>    }<br/>\u00a0<br/>    pub fn norm(&amp;self) -&gt; f64 {<br/>        (self.a.powi(2) + self.b.powi(2) + self.c.powi(2) + self.d.powi(2)).sqrt()<br/>    }<br/>\u00a0<br/>    pub fn conjugate(&amp;self) -&gt; Quaternion {<br/>        Quaternion {<br/>            a: self.a,<br/>            b: -self.b,<br/>            c: -self.c,<br/>            d: -self.d<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Add for Quaternion {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn add(self, other: Quaternion) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: self.a + other.a,<br/>            b: self.b + other.b,<br/>            c: self.c + other.c,<br/>            d: self.d + other.d<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Add&lt;f64&gt; for Quaternion {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn add(self, other: f64) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: self.a + other,<br/>            b: self.b,<br/>            c: self.c,<br/>            d: self.d<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Add&lt;Quaternion&gt; for f64 {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn add(self, other: Quaternion) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: other.a + self,<br/>            b: other.b,<br/>            c: other.c,<br/>            d: other.d<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Display for Quaternion {<br/>    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; Result&lt;(), Error&gt; {<br/>        write!(f, \"({} + {}i + {}j + {}k)\", self.a, self.b, self.c, self.d)<br/>    }<br/>}<br/>\u00a0<br/>impl Mul for Quaternion {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn mul(self, rhs: Quaternion) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: self.a * rhs.a - self.b * rhs.b - self.c * rhs.c - self.d * rhs.d,<br/>            b: self.a * rhs.b + self.b * rhs.a + self.c * rhs.d - self.d * rhs.c,<br/>            c: self.a * rhs.c - self.b * rhs.d + self.c * rhs.a + self.d * rhs.b,<br/>            d: self.a * rhs.d + self.b * rhs.c - self.c * rhs.b + self.d * rhs.a,<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Mul&lt;f64&gt; for Quaternion {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn mul(self, other: f64) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: self.a * other,<br/>            b: self.b * other,<br/>            c: self.c * other,<br/>            d: self.d * other<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Mul&lt;Quaternion&gt; for f64 {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn mul(self, other: Quaternion) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: other.a * self,<br/>            b: other.b * self,<br/>            c: other.c * self,<br/>            d: other.d * self<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>impl Neg for Quaternion {<br/>    type Output = Quaternion;<br/>\u00a0<br/>    #[inline]<br/>    fn neg(self) -&gt; Self::Output {<br/>        Quaternion {<br/>            a: -self.a,<br/>            b: -self.b,<br/>            c: -self.c,<br/>            d: -self.d<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    let q0 = Quaternion { a: 1., b: 2., c: 3., d: 4. };<br/>    let q1 = Quaternion::new(2., 3., 4., 5.);<br/>    let q2 = Quaternion::new(3., 4., 5., 6.);<br/>    let r: f64 = 7.;<br/>\u00a0<br/>    println!(\"q0 = {}\", q0);<br/>    println!(\"q1 = {}\", q1);<br/>    println!(\"q2 = {}\", q2);<br/>    println!(\"r  = {}\", r);<br/>    println!();<br/>    println!(\"-q0 = {}\", -q0);<br/>    println!(\"conjugate of q0 = {}\", q0.conjugate());<br/>    println!();<br/>    println!(\"r + q0 = {}\", r + q0);<br/>    println!(\"q0 + r = {}\", q0 + r);<br/>    println!();<br/>    println!(\"r * q0 = {}\", r * q0);<br/>    println!(\"q0 * r = {}\", q0 * r);<br/>    println!();<br/>    println!(\"q0 + q1 = {}\", q0 + q1);<br/>    println!(\"q0 * q1 = {}\", q0 * q1);<br/>    println!();<br/>    println!(\"q0 * (conjugate of q0) = {}\", q0 * q0.conjugate());<br/>    println!();<br/>    println!(\" q0 + q1  * q2 = {}\", q0 + q1 * q2);<br/>    println!(\"(q0 + q1) * q2 = {}\", (q0 + q1) * q2);<br/>    println!();<br/>    println!(\" q0 *  q1  * q2  = {}\", q0 *q1 * q2);<br/>    println!(\"(q0 *  q1) * q2  = {}\", (q0 * q1) * q2);<br/>    println!(\" q0 * (q1  * q2) = {}\", q0 * (q1 * q2));<br/>    println!();<br/>    println!(\"normal of q0 = {}\", q0.norm());<br/>}</pre>"}, {"lang": "Scala", "loc": 31, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Quaternion<span class=\"br0\">(</span>re<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>, i<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>, j<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>, k<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> im <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i, j, k<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> norm2 <span class=\"sy0\">=</span> re<span class=\"sy0\">*</span>re + i<span class=\"sy0\">*</span>i + j<span class=\"sy0\">*</span>j + k<span class=\"sy0\">*</span>k<br/>  lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> norm <span class=\"sy0\">=</span> math.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span>norm2<span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> negative <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>-re, -i, -j, -k<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> conjugate <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>re, -i, -j, -k<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> reciprocal <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>re/norm2, -i/norm2, -j/norm2, -k/norm2<span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> +<span class=\"br0\">(</span>q<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>re+q.<span class=\"me1\">re</span>, i+q.<span class=\"me1\">i</span>, j+q.<span class=\"me1\">j</span>, k+q.<span class=\"me1\">k</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> -<span class=\"br0\">(</span>q<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>re-q.<span class=\"me1\">re</span>, i-q.<span class=\"me1\">i</span>, j-q.<span class=\"me1\">j</span>, k-q.<span class=\"me1\">k</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> <span class=\"sy0\">*</span><span class=\"br0\">(</span>q<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span><br/>\t re<span class=\"sy0\">*</span>q.<span class=\"me1\">re</span> - i<span class=\"sy0\">*</span>q.<span class=\"me1\">i</span> - j<span class=\"sy0\">*</span>q.<span class=\"me1\">j</span> - k<span class=\"sy0\">*</span>q.<span class=\"me1\">k</span>,<br/>\t re<span class=\"sy0\">*</span>q.<span class=\"me1\">i</span> + i<span class=\"sy0\">*</span>q.<span class=\"me1\">re</span> + j<span class=\"sy0\">*</span>q.<span class=\"me1\">k</span> - k<span class=\"sy0\">*</span>q.<span class=\"me1\">j</span>,<br/>\t re<span class=\"sy0\">*</span>q.<span class=\"me1\">j</span> - i<span class=\"sy0\">*</span>q.<span class=\"me1\">k</span> + j<span class=\"sy0\">*</span>q.<span class=\"me1\">re</span> + k<span class=\"sy0\">*</span>q.<span class=\"me1\">i</span>,<br/>\t re<span class=\"sy0\">*</span>q.<span class=\"me1\">k</span> + i<span class=\"sy0\">*</span>q.<span class=\"me1\">j</span> - j<span class=\"sy0\">*</span>q.<span class=\"me1\">i</span> + k<span class=\"sy0\">*</span>q.<span class=\"me1\">re</span>\t <br/>  <span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> /<span class=\"br0\">(</span>q<span class=\"sy0\">:</span> Quaternion<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a> <span class=\"sy0\">*</span> q.<span class=\"me1\">reciprocal</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> unary<span class=\"sy0\">_</span>- <span class=\"sy0\">=</span> negative<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> unary<span class=\"sy0\">_</span>~ <span class=\"sy0\">=</span> conjugate<br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> toString <span class=\"sy0\">=</span> <span class=\"st0\">\"Q(%.2f,\u00a0%.2fi,\u00a0%.2fj,\u00a0%.2fk)\"</span>.<span class=\"me1\">formatLocal</span><span class=\"br0\">(</span>java.<span class=\"me1\">util</span>.<span class=\"me1\">Locale</span>.<span class=\"me1\">ENGLISH</span>, re, i, j, k<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Quaternion <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">language</span>.<span class=\"me1\">implicitConversions</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> Numeric.<span class=\"me1\">Implicits</span>.<span class=\"sy0\">_</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">implicit</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> number2Quaternion<span class=\"br0\">[</span>T<span class=\"sy0\">:</span>Numeric<span class=\"br0\">]</span><span class=\"br0\">(</span>n<span class=\"sy0\">:</span> T<span class=\"br0\">)</span> <span class=\"sy0\">=</span> Quaternion<span class=\"br0\">(</span>n.<span class=\"me1\">toDouble</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Sidef", "loc": 39, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> Quaternion<span class=\"br0\">(</span>r, i, j, k<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    func qu<span class=\"br0\">(</span><span class=\"sy0\">*</span>r<span class=\"br0\">)</span> <span class=\"br0\">{</span> Quaternion<span class=\"br0\">(</span>r...<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    method to_s  <span class=\"br0\">{</span> <span class=\"st0\">\"#{r} + #{i}i + #{j}j + #{k}k\"</span> <span class=\"br0\">}</span><br/>    method reals <span class=\"br0\">{</span> <span class=\"br0\">[</span>r, i, j, k<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    method conj  <span class=\"br0\">{</span> qu<span class=\"br0\">(</span>r, <span class=\"sy0\">-</span>i, <span class=\"sy0\">-</span>j, <span class=\"sy0\">-</span>k<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    method norm  <span class=\"br0\">{</span> <span class=\"kw2\">self</span>.<span class=\"me1\">reals</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> _<span class=\"sy0\">*</span>_ <span class=\"br0\">}</span>.<span class=\"me1\">sum</span>.<span class=\"me1\">sqrt</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    method ==<span class=\"br0\">(</span>Quaternion b<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw2\">self</span>.<span class=\"me1\">reals</span> == b.<span class=\"me1\">reals</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    method <span class=\"sy0\">+</span><span class=\"br0\">(</span>Number     b<span class=\"br0\">)</span> <span class=\"br0\">{</span> qu<span class=\"br0\">(</span>b<span class=\"sy0\">+</span>r, i, j, k<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    method <span class=\"sy0\">+</span><span class=\"br0\">(</span>Quaternion b<span class=\"br0\">)</span> <span class=\"br0\">{</span> qu<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span> ~Z<span class=\"sy0\">+</span> b.<span class=\"me1\">reals</span><span class=\"br0\">)</span>...<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    method neg <span class=\"br0\">{</span> qu<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span> .<span class=\"me1\">neg</span> <span class=\"br0\">}</span>...<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    method <span class=\"sy0\">*</span><span class=\"br0\">(</span>Number     b<span class=\"br0\">)</span> <span class=\"br0\">{</span> qu<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span>\u00bb<span class=\"sy0\">*</span>\u00bbb<span class=\"br0\">)</span>...<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    method <span class=\"sy0\">*</span><span class=\"br0\">(</span>Quaternion b<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        var <span class=\"br0\">(</span>r,i,j,k<span class=\"br0\">)</span> = b.<span class=\"me1\">reals</span>...<br/>        <span class=\"me1\">qu</span><span class=\"br0\">(</span>sum<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span> ~Z<span class=\"sy0\">*</span> <span class=\"br0\">[</span>r, <span class=\"sy0\">-</span>i, <span class=\"sy0\">-</span>j, <span class=\"sy0\">-</span>k<span class=\"br0\">]</span><span class=\"br0\">)</span>,<br/>           sum<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span> ~Z<span class=\"sy0\">*</span> <span class=\"br0\">[</span>i,  r,  k, <span class=\"sy0\">-</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span>,<br/>           sum<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span> ~Z<span class=\"sy0\">*</span> <span class=\"br0\">[</span>j, <span class=\"sy0\">-</span>k,  r,  i<span class=\"br0\">]</span><span class=\"br0\">)</span>,<br/>           sum<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reals</span> ~Z<span class=\"sy0\">*</span> <span class=\"br0\">[</span>k,  j, <span class=\"sy0\">-</span>i,  r<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>var q  = Quaternion<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>var q1 = Quaternion<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>var q2 = Quaternion<span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>var r  = <span class=\"nu0\">7</span><br/>\u00a0<br/>say <span class=\"st0\">\"1) q norm  = #{q.norm}\"</span><br/>say <span class=\"st0\">\"2) -q      = #{-q}\"</span><br/>say <span class=\"st0\">\"3) q conj  = #{q.conj}\"</span><br/>say <span class=\"st0\">\"4) q  + r  = #{q + r}\"</span><br/>say <span class=\"st0\">\"5) q1 + q2 = #{q1 + q2}\"</span><br/>say <span class=\"st0\">\"6) q  * r  = #{q  * r}\"</span><br/>say <span class=\"st0\">\"7) q1 * q2 = #{q1 * q2}\"</span><br/>say <span class=\"st0\">\"8) q1q2 #{ q1*q2 == q2*q1\u00a0? '=='\u00a0: '!=' } q2q1\"</span></pre>"}, {"lang": "Swift", "loc": 99, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>import Cocoa<br/>\u00a0<br/>class Quaternion: Equatable, CustomStringConvertible {<br/>\u00a0<br/>    let description: String<br/>\u00a0<br/>    var r: Double<br/>    var i: Double<br/>    var j: Double<br/>    var k: Double<br/>\u00a0<br/>    static func == (lhs: Quaternion, rhs: Quaternion) -&gt; Bool {<br/>        return lhs.r == rhs.r &amp;&amp; lhs.i == rhs.i &amp;&amp; lhs.j == rhs.j &amp;&amp; lhs.k == rhs.k<br/>    }<br/>\u00a0<br/>    init(r: Double, i: Double, j: Double, k: Double) {<br/>        self.r = r<br/>        self.i = i<br/>        self.j = j<br/>        self.k = k<br/>\u00a0<br/>        description = \"\\(r) + \\(i)i + \\(j)j + \\(k)k\"<br/>    }<br/>\u00a0<br/>    convenience init(r: Double) {<br/>        self.init(r: r, i: 0, j: 0, k: 0)<br/>    }<br/>\u00a0<br/>    func norm() -&gt; Double {<br/>        return sqrt(r*r + i*i + j*j + k*k)<br/>    }<br/>\u00a0<br/>    func negative() -&gt; Quaternion {<br/>        return Quaternion(r: -r, i: -i, j: -j, k: -k)<br/>    }<br/>\u00a0<br/>    func conjugate() -&gt; Quaternion {<br/>        return Quaternion(r: r, i: -i, j: -j, k: -k)<br/>    }<br/>\u00a0<br/>    func add(r: Double) -&gt; Quaternion {<br/>        return Quaternion(r: self.r + r, i: i, j: j, k: k)<br/>    }<br/>\u00a0<br/>    static func add(q: Quaternion, r: Double) -&gt; Quaternion {<br/>        return q.add(r: r)<br/>    }<br/>\u00a0<br/>    func add(q: Quaternion) -&gt; Quaternion {<br/>        return Quaternion(r: r + q.r, i: i + q.i, j: j + q.j, k: k + q.k)<br/>    }<br/>\u00a0<br/>    static func add(q1: Quaternion, q2: Quaternion) -&gt; Quaternion {<br/>        return q1.add(q: q2)<br/>    }<br/>\u00a0<br/>    func multiply(r: Double) -&gt; Quaternion {<br/>        return Quaternion(r: self.r * r, i: i * r, j: j * r, k: k * r)<br/>    }<br/>\u00a0<br/>    static func multiply(q: Quaternion, r: Double) -&gt; Quaternion {<br/>        return q.multiply(r: r)<br/>    }<br/>\u00a0<br/>    func multiply(q: Quaternion) -&gt; Quaternion {<br/>        return Quaternion(r: r * q.r - i * q.i - j * q.j - k * q.k,<br/>                          i: r * q.i + i * q.r + j * q.k - k * q.j,<br/>                          j: r * q.j - i * q.k + j * q.r  + k * q.i,<br/>                          k: r * q.k + i * q.j - j * q.i + k * q.r)<br/>    }<br/>\u00a0<br/>    static func multiply(q1: Quaternion, q2: Quaternion) -&gt; Quaternion {<br/>        return q1.multiply(q: q2)<br/>    }<br/>\u00a0<br/>}<br/>\u00a0<br/>var q = Quaternion(r: 1, i: 2, j: 3, k: 4)<br/>var q1 = Quaternion(r: 2, i: 3, j: 4, k: 5)<br/>var q2 = Quaternion(r: 3, i: 4, j: 5, k: 6)<br/>\u00a0<br/>var r = 7.0<br/>\u00a0<br/>print(\"Q = \\(q)\")<br/>print(\"Q1 = \\(q1)\")<br/>print(\"Q2 = \\(q2)\")<br/>print(\"R = \\(r)\")<br/>print()<br/>print(\"||Q|| = \\(q.norm())\")<br/>print(\"-Q = \\(q.negative())\")<br/>print(\"Q* = \\(q.conjugate())\")<br/>print(\"Q + R = \\(q.add(r: r))\")<br/>print(\"Q1 + Q2 = \\(q1.add(q: q2))\")<br/>print(\"Q * R = \\(q.multiply(r: r))\")<br/>print(\"Q1 * Q2 = \\(q1.multiply(q: q2))\")<br/>print(\"Q2 * Q1 = \\(q2.multiply(q: q1))\")<br/>print(\"Q1 * Q2\u00a0!= Q2 * Q1\")<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 99, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require TclOO<br/>\u00a0<br/><span class=\"co1\"># Support class that provides C++-like RAII lifetimes</span><br/>oo::<span class=\"me1\">class</span> create RAII-support <span class=\"br0\">{</span><br/>    constructor <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> end<br/>\t<span class=\"kw2\">lappend</span> end <span class=\"br0\">[</span>self<span class=\"br0\">]</span><br/>\ttrace add <span class=\"kw1\">variable</span> end unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my destroy<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    destructor <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">catch</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> end<br/>\t    trace remove <span class=\"kw1\">variable</span> end unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my destroy<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> <span class=\"kw1\">return</span> <span class=\"br0\">{</span><span class=\"br0\">{</span>level <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">incr</span> level<br/>\t<span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> end<br/>\t<span class=\"kw1\">upvar</span> <span class=\"re0\">$level</span> <span class=\"br0\">{</span> end <span class=\"br0\">}</span> parent<br/>\ttrace remove <span class=\"kw1\">variable</span> end unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my destroy<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">lappend</span> parent <span class=\"br0\">[</span>self<span class=\"br0\">]</span><br/>\ttrace add <span class=\"kw1\">variable</span> parent unset <span class=\"br0\">[</span><span class=\"kw1\">namespace</span> code <span class=\"br0\">{</span>my destroy<span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">return</span> -level <span class=\"re0\">$level</span> <span class=\"br0\">[</span>self<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Class of quaternions</span><br/>oo::<span class=\"me1\">class</span> create Q <span class=\"br0\">{</span><br/>    superclass RAII-support<br/>    <span class=\"kw1\">variable</span> R I J K<br/>    constructor <span class=\"br0\">{</span><span class=\"br0\">{</span>real <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>j <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>k <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\tnext<br/>\t<span class=\"kw1\">namespace</span> import\u00a0::<span class=\"me1\">tcl</span>::<span class=\"me1\">mathfunc</span>::<span class=\"sy0\">*</span>\u00a0::<span class=\"me1\">tcl</span>::<span class=\"me1\">mathop</span>::<span class=\"sy0\">*</span><br/>\t<span class=\"kw1\">variable</span> R <span class=\"br0\">[</span>double <span class=\"re0\">$real</span><span class=\"br0\">]</span> I <span class=\"br0\">[</span>double <span class=\"re0\">$i</span><span class=\"br0\">]</span> J <span class=\"br0\">[</span>double <span class=\"re0\">$j</span><span class=\"br0\">]</span> K <span class=\"br0\">[</span>double <span class=\"re0\">$k</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    self <span class=\"kw1\">method</span> <span class=\"kw1\">return</span> args <span class=\"br0\">{</span><br/>\t<span class=\"br0\">[</span>my new <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$args</span><span class=\"br0\">]</span> <span class=\"kw1\">return</span> <span class=\"nu0\">2</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> p <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"st0\">\"Q($R,$I,$J,$K)\"</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> values <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">list</span> <span class=\"re0\">$R</span> <span class=\"re0\">$I</span> <span class=\"re0\">$J</span> <span class=\"re0\">$K</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> Norm <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t+ <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$R</span> <span class=\"re0\">$R</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$I</span> <span class=\"re0\">$I</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$J</span> <span class=\"re0\">$J</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$K</span> <span class=\"re0\">$K</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">method</span> conjugate <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\tQ <span class=\"kw1\">return</span> <span class=\"re0\">$R</span> <span class=\"br0\">[</span>- <span class=\"re0\">$I</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$J</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$K</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> norm <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\tsqrt <span class=\"br0\">[</span>my Norm<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> unit <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> n <span class=\"br0\">[</span>my norm<span class=\"br0\">]</span><br/>\tQ <span class=\"kw1\">return</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$R</span> <span class=\"re0\">$n</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$I</span> <span class=\"re0\">$n</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$J</span> <span class=\"re0\">$n</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$K</span> <span class=\"re0\">$n</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> reciprocal <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> n2 <span class=\"br0\">[</span>my Norm<span class=\"br0\">]</span><br/>\tQ <span class=\"kw1\">return</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$R</span> <span class=\"re0\">$n2</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$I</span> <span class=\"re0\">$n2</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$J</span> <span class=\"re0\">$n2</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>/ <span class=\"re0\">$K</span> <span class=\"re0\">$n2</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> - <span class=\"br0\">{</span><span class=\"br0\">{</span>q <span class=\"st0\">\"\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"br0\">[</span><span class=\"kw2\">info</span> level <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span> == <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    Q <span class=\"kw1\">return</span> <span class=\"br0\">[</span>- <span class=\"re0\">$R</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$I</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$J</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>- <span class=\"re0\">$K</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">[</span>my + <span class=\"br0\">[</span><span class=\"re0\">$q</span> -<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"kw1\">return</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> + q <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> object isa object <span class=\"re0\">$q</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    lassign <span class=\"br0\">[</span><span class=\"re0\">$q</span> values<span class=\"br0\">]</span> real i j k<br/>\t    Q <span class=\"kw1\">return</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$R</span> <span class=\"re0\">$real</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$I</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$J</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$K</span> <span class=\"re0\">$k</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\tQ <span class=\"kw1\">return</span> <span class=\"br0\">[</span>+ <span class=\"re0\">$R</span> <span class=\"br0\">[</span>double <span class=\"re0\">$q</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"re0\">$I</span> <span class=\"re0\">$J</span> <span class=\"re0\">$K</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> <span class=\"sy0\">*</span> q <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> object isa object <span class=\"re0\">$q</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    lassign <span class=\"br0\">[</span>my values<span class=\"br0\">]</span> a1 b1 c1 d1<br/>\t    lassign <span class=\"br0\">[</span><span class=\"re0\">$q</span> values<span class=\"br0\">]</span> a2 b2 c2 d2<br/>\t    Q <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$a1</span><span class=\"sy0\">*</span><span class=\"re0\">$a2</span> - <span class=\"re0\">$b1</span><span class=\"sy0\">*</span><span class=\"re0\">$b2</span> - <span class=\"re0\">$c1</span><span class=\"sy0\">*</span><span class=\"re0\">$c2</span> - <span class=\"re0\">$d1</span><span class=\"sy0\">*</span><span class=\"re0\">$d2</span><span class=\"br0\">}</span><span class=\"br0\">]</span> \\<br/>\t\t<span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$a1</span><span class=\"sy0\">*</span><span class=\"re0\">$b2</span> + <span class=\"re0\">$b1</span><span class=\"sy0\">*</span><span class=\"re0\">$a2</span> + <span class=\"re0\">$c1</span><span class=\"sy0\">*</span><span class=\"re0\">$d2</span> - <span class=\"re0\">$d1</span><span class=\"sy0\">*</span><span class=\"re0\">$c2</span><span class=\"br0\">}</span><span class=\"br0\">]</span> \\<br/>\t\t<span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$a1</span><span class=\"sy0\">*</span><span class=\"re0\">$c2</span> - <span class=\"re0\">$b1</span><span class=\"sy0\">*</span><span class=\"re0\">$d2</span> + <span class=\"re0\">$c1</span><span class=\"sy0\">*</span><span class=\"re0\">$a2</span> + <span class=\"re0\">$d1</span><span class=\"sy0\">*</span><span class=\"re0\">$b2</span><span class=\"br0\">}</span><span class=\"br0\">]</span> \\<br/>\t\t<span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$a1</span><span class=\"sy0\">*</span><span class=\"re0\">$d2</span> + <span class=\"re0\">$b1</span><span class=\"sy0\">*</span><span class=\"re0\">$c2</span> - <span class=\"re0\">$c1</span><span class=\"sy0\">*</span><span class=\"re0\">$b2</span> + <span class=\"re0\">$d1</span><span class=\"sy0\">*</span><span class=\"re0\">$a2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">set</span> f <span class=\"br0\">[</span>double <span class=\"re0\">$q</span><span class=\"br0\">]</span><br/>\tQ <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$R</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$I</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$J</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span> <span class=\"re0\">$K</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> == q <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t    <span class=\"br0\">[</span><span class=\"kw2\">info</span> object isa object <span class=\"re0\">$q</span><span class=\"br0\">]</span><br/>\t    <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">[</span><span class=\"kw2\">info</span> object isa typeof <span class=\"re0\">$q</span> <span class=\"br0\">[</span>self class<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t    <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">[</span>my values<span class=\"br0\">]</span> eq <span class=\"br0\">[</span><span class=\"re0\">$q</span> values<span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    export - + <span class=\"sy0\">*</span> ==<br/><span class=\"br0\">}</span></pre>"}, {"lang": "zkl", "loc": 53, "block": "<pre class=\"text highlighted_source\">class Quat{<br/>   fcn init(real=0,i1=0,i2=0,i3=0){<br/>      var [const] vector= // Quat(r,i,j,k) or Quat( (r,i,j,k) )<br/>              (if(List.isType(real)) real else vm.arglist).apply(\"toFloat\");<br/>      var r,i,j,k; r,i,j,k=vector; // duplicate data for ease of coding<br/>      var [const]\t// properties: This is one way to do it<br/>         norm2=vector.apply(\"pow\",2).sum(0.0), // Norm squared<br/>\t abs=norm2.sqrt(),\t\t       // Norm<br/>\t arg=(r/abs()).acos(),\t\t// Theta\u00a0!!!this may be incorrect...<br/>     \u00a0;<br/>   }<br/>   fcn toString { String(\"[\",vector.concat(\",\"),\"]\") }<br/>   var [const proxy]\t// properties that need calculation (or are recursive)<br/>      conj   =fcn{ Quat(r,-i,-j,-k) },\t\t// Conjugate<br/>      recip  =fcn{ n2:=norm2; Quat(r/n2,-i/n2,-j/n2,-k/n2) },// Reciprocal<br/>      pureim =fcn{ Quat(0, i, j, k) },   \t// Pure imagery<br/>      versor =fcn{ self / abs; }, \t\t// Unit versor<br/>      iversor=fcn{ pureim / pureim.abs; },\t// Unit versor of imagery part<br/>  \u00a0;<br/>\u00a0<br/>   fcn __opEQ(z) { r == z.r and i == z.i and j == z.j and k == z.k }<br/>   fcn __opNEQ(z){ (not (self==z)) }<br/>\u00a0<br/>   fcn __opNegate{ Quat(-r, -i, -j, -k) }<br/>   fcn __opAdd(z){<br/>      if (Quat.isInstanceOf(z)) Quat(vector.zipWith('+,z.vector));<br/>      else\t\t\tQuat(r+z,i,j,k);<br/>   }<br/>   fcn __opSub(z){<br/>      if (Quat.isInstanceOf(z)) Quat(vector.zipWith('-,z.vector));<br/>      else\t\t\tQuat(r-z,vector.xplode(1)); // same as above<br/>   }<br/>   fcn __opMul(z){<br/>      if (Quat.isInstanceOf(z)){<br/>\t Quat(r*z.r - i*z.i - j*z.j - k*z.k,<br/>\t      r*z.i + i*z.r + j*z.k - k*z.j,<br/>\t      r*z.j - i*z.k + j*z.r + k*z.i,<br/>\t      r*z.k + i*z.j - j*z.i + k*z.r);<br/>      }<br/>      else Quat(vector.apply('*(z)));<br/>   }<br/>   fcn __opDiv(z){<br/>      if (Quat.isInstanceOf(z)) self*z.recip;<br/>      else\t\t\tQuat(r/z,i/z,j/z,k/z);<br/>   }<br/>\u00a0<br/>   fcn pow(r){ exp(r*iversor*arg)*abs.pow(r) }\t// Power function<br/>   fcn log{ iversor*(r / abs).acos() + abs.log() }<br/>   fcn exp{\t\t\t\t\t// e^q<br/>      inorm:=pureim.abs;<br/>      (iversor*inorm.sin() + inorm.cos()) * r.exp();<br/>   }<br/>}</pre>"}]}