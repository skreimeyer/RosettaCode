{"task": "Euler_method", "blocks": [{"lang": "Ada", "loc": 13, "block": "<pre class=\"ada highlighted_source\">\u00a0<br/><span class=\"kw3\">generic</span><br/>   <span class=\"kw3\">type</span> Number <span class=\"kw1\">is</span> <span class=\"kw3\">digits</span> &lt;&gt;;<br/><span class=\"kw3\">package</span> Euler <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">type</span> Waveform <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Integer <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Number;<br/>   <span class=\"kw3\">function</span> Solve<br/>            <span class=\"br0\">(</span>  F     \u00a0: <span class=\"kw2\">not</span> <span class=\"kw3\">null</span> <span class=\"kw3\">access</span> <span class=\"kw3\">function</span> <span class=\"br0\">(</span>T, Y\u00a0: Number<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Number;<br/>               Y0    \u00a0: Number;<br/>               T0, T1\u00a0: Number;<br/>               N     \u00a0: Positive<br/>            <span class=\"br0\">)</span>  <span class=\"kw1\">return</span> Waveform;<br/><span class=\"kw1\">end</span> Euler;<br/>\u00a0</pre>"}, {"lang": "ALGOL 68", "loc": 24, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\">#<br/>Approximates y(t) in y'(t)=f(t,y) with y(a)=y0 and<br/>t=a..b and the step size h.<br/>#</span><br/><span class=\"kw4\">PROC</span> euler <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">PROC</span><span class=\"br0\">(</span><span class=\"kw3\">REAL</span><span class=\"sy1\">,</span><span class=\"kw3\">REAL</span><span class=\"br0\">)</span><span class=\"kw3\">REAL</span> f<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span> y0<span class=\"sy1\">,</span> a<span class=\"sy1\">,</span> b<span class=\"sy1\">,</span> h<span class=\"br0\">)</span><span class=\"kw3\">REAL</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>    <span class=\"kw3\">REAL</span> y <span class=\"sy1\">:=</span> y0<span class=\"sy1\">,</span><br/>         t <span class=\"sy1\">:=</span> a<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">WHILE</span> t <span class=\"sy1\">&lt;</span> b <span class=\"kw2\">DO</span><br/>      <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"br0\">(</span><span class=\"sy1\">-</span>6<span class=\"sy1\">,</span>3<span class=\"br0\">)</span><span class=\"st0\">\": \"</span>g<span class=\"br0\">(</span><span class=\"sy1\">-</span>7<span class=\"sy1\">,</span>3<span class=\"br0\">)</span>l$<span class=\"sy1\">,</span> t<span class=\"sy1\">,</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      y <span class=\"sy1\">+:=</span> h <span class=\"sy1\">*</span> f<span class=\"br0\">(</span>t<span class=\"sy1\">,</span> y<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      t <span class=\"sy1\">+:=</span> h<br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">printf</span><span class=\"br0\">(</span>$<span class=\"st0\">\"done\"</span>l$<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    y<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># Example: Newton's cooling law #</span><br/><span class=\"kw4\">PROC</span> newton cooling law <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">REAL</span> time<span class=\"sy1\">,</span> t<span class=\"br0\">)</span><span class=\"kw3\">REAL</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>    <span class=\"re1\">-0.07</span> <span class=\"sy1\">*</span> <span class=\"br0\">(</span>t <span class=\"sy1\">-</span> 20<span class=\"br0\">)</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>main<span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>   euler<span class=\"br0\">(</span>newton cooling law<span class=\"sy1\">,</span> 100<span class=\"sy1\">,</span> 0<span class=\"sy1\">,</span> 100<span class=\"sy1\">,</span>  10<span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "BASIC", "loc": 15, "block": "<pre class=\"text highlighted_source\">      PROCeuler(\"-0.07*(y-20)\", 100, 0, 100, 2)<br/>      PROCeuler(\"-0.07*(y-20)\", 100, 0, 100, 5)<br/>      PROCeuler(\"-0.07*(y-20)\", 100, 0, 100, 10)<br/>      END<br/>\u00a0<br/>      DEF PROCeuler(df$, y, a, b, s)<br/>      LOCAL t, @%<br/>      @% = &amp;2030A<br/>      t = a<br/>      WHILE t &lt;= b<br/>        PRINT t, y<br/>        y += s * EVAL(df$)<br/>        t += s<br/>      ENDWHILE<br/>      ENDPROC</pre>"}, {"lang": "C", "loc": 44, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">double</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>deriv_f<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"sy0\">,</span> <span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"co2\">#define FMT \"\u00a0%7.3f\"</span><br/>\u00a0<br/><span class=\"kw4\">void</span> ivp_euler<span class=\"br0\">(</span>deriv_f f<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> y<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> step<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> end_t<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\" Step\u00a0%2d: \"</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>step<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>t <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>FMT<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\ty <span class=\"sy0\">+=</span> step <span class=\"sy0\">*</span> f<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>t <span class=\"sy0\">+=</span> step<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> end_t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> analytic<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> t<span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"    Time: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> t <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> t <span class=\"sy0\">+=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%7g\"</span><span class=\"sy0\">,</span> t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Analytic: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> t <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> t <span class=\"sy0\">+=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>FMT<span class=\"sy0\">,</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"nu0\">80</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu16\">0.07</span> <span class=\"sy0\">*</span> t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> cooling<span class=\"br0\">(</span><span class=\"kw4\">double</span> t<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> temp<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>temp <span class=\"sy0\">-</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tanalytic<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tivp_euler<span class=\"br0\">(</span>cooling<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tivp_euler<span class=\"br0\">(</span>cooling<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tivp_euler<span class=\"br0\">(</span>cooling<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 32, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iomanip&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">double</span> F<span class=\"br0\">(</span><span class=\"kw4\">double</span>,<span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/*<br/>Approximates y(t) in y'(t)=f(t,y) with y(a)=y0 and<br/>t=a..b and the step size h.<br/>*/</span><br/><span class=\"kw4\">void</span> euler<span class=\"br0\">(</span>F f, <span class=\"kw4\">double</span> y0, <span class=\"kw4\">double</span> a, <span class=\"kw4\">double</span> b, <span class=\"kw4\">double</span> h<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> y <span class=\"sy1\">=</span> y0<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">double</span> t <span class=\"sy1\">=</span> a<span class=\"sy4\">;</span> t <span class=\"sy1\">&lt;</span> b<span class=\"sy4\">;</span> t <span class=\"sy2\">+</span><span class=\"sy1\">=</span> h<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">fixed</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">setprecision</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> t <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" \"</span> <span class=\"sy1\">&lt;&lt;</span> y <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>        y <span class=\"sy2\">+</span><span class=\"sy1\">=</span> h <span class=\"sy2\">*</span> f<span class=\"br0\">(</span>t, y<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"done<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// Example: Newton's cooling law</span><br/><span class=\"kw4\">double</span> newtonCoolingLaw<span class=\"br0\">(</span><span class=\"kw4\">double</span>, <span class=\"kw4\">double</span> t<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy2\">-</span><span class=\"nu16\">0.07</span> <span class=\"sy2\">*</span> <span class=\"br0\">(</span>t <span class=\"sy2\">-</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    euler<span class=\"br0\">(</span>newtonCoolingLaw, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>,  <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    euler<span class=\"br0\">(</span>newtonCoolingLaw, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>,  <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    euler<span class=\"br0\">(</span>newtonCoolingLaw, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 38, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> prog<br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">class</span> MainClass<br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">const</span> <span class=\"kw4\">float</span> T0 <span class=\"sy0\">=</span> 100f<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">const</span> <span class=\"kw4\">float</span> TR <span class=\"sy0\">=</span> 20f<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">const</span> <span class=\"kw4\">float</span> k <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>07f<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">readonly</span> <span class=\"kw1\">static</span> <span class=\"kw4\">float</span><span class=\"br0\">[</span><span class=\"br0\">]</span> delta_t <span class=\"sy0\">=</span> <span class=\"br0\">{</span>2<span class=\"sy0\">.</span>0f,5<span class=\"sy0\">.</span>0f,10<span class=\"sy0\">.</span>0f<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">const</span> <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">public</span> <span class=\"kw4\">delegate</span> <span class=\"kw4\">float</span> func<span class=\"br0\">(</span><span class=\"kw4\">float</span> t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">static</span> <span class=\"kw4\">float</span> NewtonCooling<span class=\"br0\">(</span><span class=\"kw4\">float</span> t<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">return</span> <span class=\"sy0\">-</span>k <span class=\"sy0\">*</span> <span class=\"br0\">(</span>t<span class=\"sy0\">-</span>TR<span class=\"br0\">)</span><span class=\"sy0\">;</span>\t\t\t<br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main <span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\tfunc f <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> func<span class=\"br0\">(</span>NewtonCooling<span class=\"br0\">)</span><span class=\"sy0\">;</span> <br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;</span>delta_t<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tConsole<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"delta_t = \"</span> <span class=\"sy0\">+</span> delta_t<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tEuler<span class=\"br0\">(</span>f,T0,n,delta_t<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Euler<span class=\"br0\">(</span>func f, <span class=\"kw4\">float</span> y, <span class=\"kw4\">int</span> n, <span class=\"kw4\">float</span> h<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">float</span> x<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> x<span class=\"sy0\">&lt;=</span>n<span class=\"sy0\">;</span> x<span class=\"sy0\">+=</span>h<span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tConsole<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> x <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\ty <span class=\"sy0\">+=</span> h <span class=\"sy0\">*</span> f<span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span>\t<br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clay", "loc": 18, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>import printer.formatter as pf;<br/>\u00a0<br/>euler(f, y, a, b, h) {<br/>    while (a &lt; b) {<br/>        println(pf.rightAligned(2, a), \" \", y);<br/>        a += h;<br/>        y += h * f(y);<br/>    }<br/>}<br/>\u00a0<br/>main() {<br/>    for (i in [2.0, 5.0, 10.0]) {<br/>        println(\"\\nFor delta = \", i, \":\");<br/>        euler((temp) =&gt; -0.07 * (temp - 20), 100.0, 0.0, 100.0, i);<br/>    }<br/>}<br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 45, "block": "<pre class=\"cobol highlighted_source\">       DELEGATE-ID func<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">VALUE</span> t AS FLOAT-LONG<br/>           RETURNING ret AS FLOAT-LONG<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> DELEGATE<span class=\"sy0\">.</span>     <br/>\u00a0<br/>       CLASS-ID<span class=\"sy0\">.</span> MainClass<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">78</span>  T0                     <span class=\"kw3\">VALUE</span> <span class=\"nu0\">100.0</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">78</span>  TR                     <span class=\"kw3\">VALUE</span> <span class=\"nu0\">20.0</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">78</span>  k                      <span class=\"kw3\">VALUE</span> <span class=\"nu0\">0.07</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  delta-t                <span class=\"kw2\">INITIALIZE</span> ONLY STATIC<br/>                                  FLOAT-LONG <span class=\"kw3\">OCCURS</span> <span class=\"nu0\">3</span> <span class=\"kw3\">VALUES</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">78</span>  n                      <span class=\"kw3\">VALUE</span> <span class=\"nu0\">100</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       METHOD-ID NewtonCooling STATIC<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">VALUE</span> t AS FLOAT-LONG<br/>               RETURNING ret AS FLOAT-LONG<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">COMPUTE</span> ret <span class=\"sy0\">= - </span>k<span class=\"sy0\"> * </span><span class=\"br0\">(</span>t<span class=\"sy0\"> - </span>TR<span class=\"br0\">)</span><br/>       <span class=\"kw3\">END</span> METHOD<span class=\"sy0\">.</span><br/>\u00a0<br/>       METHOD-ID <span class=\"kw1\">Main</span> STATIC<span class=\"sy0\">.</span><br/>           DECLARE f AS <span class=\"kw3\">TYPE</span> func<br/>           <span class=\"kw3\">SET</span> f <span class=\"kw2\">TO</span> METHOD self::NewtonCooling<br/>\u00a0<br/>           DECLARE delta-t-len AS BINARY-LONG<br/>           <span class=\"kw2\">MOVE</span> delta-t::<span class=\"kw4\">Length</span> <span class=\"kw2\">TO</span> delta-t-len<br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> i AS BINARY-LONG <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span><br/>                   <span class=\"kw2\">UNTIL</span> i &gt; delta-t-len<br/>               DECLARE elt AS FLOAT-LONG <span class=\"sy0\">=</span> delta-t <span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>               INVOKE <span class=\"kw3\">TYPE</span> Console::WriteLine<span class=\"br0\">(</span><span class=\"st0\">\"delta-t = {0:F4}\"</span><span class=\"sy0\">,</span> elt<span class=\"br0\">)</span><br/>               INVOKE self::Euler<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> T0<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> elt<span class=\"br0\">)</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>       <span class=\"kw3\">END</span> METHOD<span class=\"sy0\">.</span><br/>\u00a0<br/>       METHOD-ID Euler STATIC<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">VALUE</span> f AS <span class=\"kw3\">TYPE</span> func<span class=\"sy0\">,</span> y AS FLOAT-LONG<span class=\"sy0\">,</span><br/>               n AS BINARY-LONG<span class=\"sy0\">,</span> h AS FLOAT-LONG<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> x AS BINARY-LONG <span class=\"kw3\">FROM</span> <span class=\"nu0\">0</span> <span class=\"kw3\">BY</span> h <span class=\"kw2\">UNTIL</span> x &gt;<span class=\"sy0\">=</span> n<br/>               INVOKE <span class=\"kw3\">TYPE</span> Console::WriteLine<span class=\"br0\">(</span><span class=\"st0\">\"x = {0:F4}, y = {1:F4}\"</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>               <span class=\"kw2\">COMPUTE</span> y <span class=\"sy0\">=</span> y<span class=\"sy0\"> + </span>h<span class=\"sy0\"> * </span><span class=\"kw3\">RUN</span> f<span class=\"br0\">(</span>y<span class=\"br0\">)</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>       <span class=\"kw3\">END</span> METHOD<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">CLASS</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Clojure", "loc": 22, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>ns newton-cooling<br/>  <span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">gen-class</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defn euler <span class=\"br0\">[</span>f y0 a b h<span class=\"br0\">]</span><br/>  <span class=\"st0\">\"Euler's Method.<br/>  Approximates y(time) in y'(time)=f(time,y) with y(a)=y0 and t=a..b and the step size h.\"</span><br/>  <span class=\"br0\">(</span>loop <span class=\"br0\">[</span>t a<br/>         y y0<br/>         result <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> t b<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>recur <span class=\"br0\">(</span>+ t h<span class=\"br0\">)</span> <span class=\"br0\">(</span>+ y <span class=\"br0\">(</span>* <span class=\"br0\">(</span>f <span class=\"br0\">(</span>+ t h<span class=\"br0\">)</span> y<span class=\"br0\">)</span> h<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>conj result <span class=\"br0\">[</span><span class=\"br0\">(</span>double t<span class=\"br0\">)</span> <span class=\"br0\">(</span>double y<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defn newton-coolling <span class=\"br0\">[</span>t temp<span class=\"br0\">]</span><br/>  <span class=\"st0\">\"Newton's cooling law, f(t,T) = -0.07*(T-20)\"</span><br/>  <span class=\"br0\">(</span>* -<span class=\"nu0\">0.07</span> <span class=\"br0\">(</span>- temp <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Run for case h = 10</span><br/><span class=\"br0\">(</span>println <span class=\"st0\">\"Example output\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>doseq <span class=\"br0\">[</span>q <span class=\"br0\">(</span>euler newton-coolling <span class=\"nu0\">100</span> <span class=\"nu0\">0</span> <span class=\"nu0\">100</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">apply</span> format <span class=\"st0\">\"%.3f\u00a0%.3f\"</span> q<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 26, "block": "<pre class=\"lisp highlighted_source\"><span class=\"co1\">;; 't' usually means \"true\" in CL, but we need 't' here for time/temperature.</span><br/><span class=\"br0\">(</span>defconstant true 'cl<span class=\"sy0\">:</span><span class=\"me1\">t</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>shadow 't<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">;; Approximates y(t) in y'(t)=f(t,y) with y(a)=y0 and t=a..b and the step size h.</span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> euler <span class=\"br0\">(</span>f y0 a b h<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\">;; Set the initial values and increments of the iteration variables.</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>t a  <span class=\"br0\">(</span>+ t h<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>y y0 <span class=\"br0\">(</span>+ y <span class=\"br0\">(</span>* h <span class=\"br0\">(</span><span class=\"kw1\">funcall</span> f t y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">;; End the iteration when t reaches the end b of the time interval.</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> t b<span class=\"br0\">)</span> 'DONE<span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">;; Print t and y(t) at every step of the do loop.</span><br/>      <span class=\"br0\">(</span>format true <span class=\"st0\">\"~6,3F  ~6,3F~%\"</span> t y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">;; Example: Newton's cooling law, f(t,T) = -0.07*(T-20) </span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> newton-cooling <span class=\"br0\">(</span>time T<span class=\"br0\">)</span> <span class=\"br0\">(</span>* -<span class=\"nu0\">0.07</span> <span class=\"br0\">(</span>- T <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; Generate the data for all three step sizes (2,5 and 10).</span><br/><span class=\"br0\">(</span>euler #'newton-cooling <span class=\"nu0\">100</span> <span class=\"nu0\">0</span> <span class=\"nu0\">100</span>  <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>euler #'newton-cooling <span class=\"nu0\">100</span> <span class=\"nu0\">0</span> <span class=\"nu0\">100</span>  <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>euler #'newton-cooling <span class=\"nu0\">100</span> <span class=\"nu0\">0</span> <span class=\"nu0\">100</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 22, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">traits</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">/// Approximates y(t) in y'(t)=f(t,y) with y(a)=y0 and t=a..b and the step size h.</span><br/><span class=\"kw4\">void</span> euler<span class=\"br0\">(</span>F<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> F f<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> y0<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> a<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> b<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> h<span class=\"br0\">)</span> @<span class=\"kw4\">safe</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>isCallable<span class=\"sy0\">!</span>F <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">__traits</span><span class=\"br0\">(</span>compiles<span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"kw4\">real</span> r <span class=\"sy0\">=</span> f<span class=\"br0\">(</span><span class=\"nu16\">0.0</span><span class=\"sy0\">,</span> <span class=\"nu16\">0.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> y <span class=\"sy0\">=</span> y0<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> t<span class=\"sy0\">;</span> iota<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"%.3f \u00a0%.3f\"</span><span class=\"sy0\">,</span> t<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        y <span class=\"sy0\">+=</span> h <span class=\"sy0\">*</span> f<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"st0\">\"done\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co2\">/// Example: Newton's cooling law.</span><br/>    <span class=\"kw4\">enum</span> newtonCoolingLaw <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">double</span> time<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">double</span> t<span class=\"br0\">)</span><br/>        <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">-</span><span class=\"nu16\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>t <span class=\"sy0\">-</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    euler<span class=\"br0\">(</span>newtonCoolingLaw<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    euler<span class=\"br0\">(</span>newtonCoolingLaw<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    euler<span class=\"br0\">(</span>newtonCoolingLaw<span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 13, "block": "<pre class=\"text highlighted_source\">defmodule Euler do<br/>  def method(_, _, t, b, _) when t&gt;b, do:\u00a0:ok<br/>  def method(f, y, t, b, h) do<br/>   \u00a0:io.format \"~7.3f ~7.3f~n\", [t,y]<br/>    method(f, y + h * f.(t,y), t + h, b, h)<br/>  end<br/>end<br/>\u00a0<br/>f = fn _time, temp -&gt; -0.07 * (temp - 20) end<br/>Enum.each([10, 5, 2], fn step -&gt;<br/>  IO.puts \"\\nStep = #{step}\"<br/>  Euler.method(f, 100.0, 0.0, 100.0, step)<br/>end)</pre>"}, {"lang": "Elixir", "loc": 13, "block": "<pre class=\"text highlighted_source\">defmodule Euler do<br/>  def method(_, _, t, b, _) when t&gt;b, do:\u00a0:ok<br/>  def method(f, y, t, b, h) do<br/>   \u00a0:io.format \"~7.3f ~7.3f~n\", [t,y]<br/>    method(f, y + h * f.(t,y), t + h, b, h)<br/>  end<br/>end<br/>\u00a0<br/>f = fn _time, temp -&gt; -0.07 * (temp - 20) end<br/>Enum.each([10, 5, 2], fn step -&gt;<br/>  IO.puts \"\\nStep = #{step}\"<br/>  Euler.method(f, 100.0, 0.0, 100.0, step)<br/>end)</pre>"}, {"lang": "Erlang", "loc": 40, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>euler<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>main<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> euler<span class=\"sy3\">/</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">cooling</span><span class=\"br0\">(</span><span class=\"re5\">_Time</span><span class=\"sy1\">,</span> <span class=\"re5\">Temperature</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0.07</span><span class=\"br0\">)</span><span class=\"sy3\">*</span><span class=\"br0\">(</span><span class=\"re5\">Temperature</span><span class=\"sy3\">-</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">euler</span><span class=\"br0\">(</span><span class=\"re5\">_</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span><span class=\"sy1\">,</span> <span class=\"re5\">T</span><span class=\"sy1\">,</span> <span class=\"re5\">_</span><span class=\"sy1\">,</span> <span class=\"re5\">End</span><span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">End</span> <span class=\"sy3\">==</span> <span class=\"re5\">T</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Y</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">euler</span><span class=\"br0\">(</span><span class=\"re5\">Func</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span><span class=\"sy1\">,</span> <span class=\"re5\">T</span><span class=\"sy1\">,</span> <span class=\"re5\">Step</span><span class=\"sy1\">,</span> <span class=\"re5\">End</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"kw1\">if</span><br/>\t\t<span class=\"re5\">T</span> <span class=\"kw2\">rem</span> <span class=\"nu0\">10</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">-&gt;</span><br/>\t\t\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"~.3f  \"</span><span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"kw3\">float</span><span class=\"br0\">(</span><span class=\"re5\">Y</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\ttrue <span class=\"sy1\">-&gt;</span><br/>\t\t\t<span class=\"me1\">ok</span><br/>\t<span class=\"kw1\">end</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">euler</span><span class=\"br0\">(</span><span class=\"re5\">Func</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span> <span class=\"sy3\">+</span> <span class=\"re5\">Step</span> <span class=\"sy3\">*</span> <span class=\"re5\">F</span><span class=\"re3\">unc</span><span class=\"br0\">(</span><span class=\"re5\">T</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">T</span> <span class=\"sy3\">+</span> <span class=\"re5\">Step</span><span class=\"sy1\">,</span> <span class=\"re5\">Step</span><span class=\"sy1\">,</span> <span class=\"re5\">End</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">analytic</span><span class=\"br0\">(</span><span class=\"re5\">T</span><span class=\"sy1\">,</span> <span class=\"re5\">End</span><span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">T</span> <span class=\"sy3\">==</span> <span class=\"re5\">End</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">T</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">analytic</span><span class=\"br0\">(</span><span class=\"re5\">T</span><span class=\"sy1\">,</span> <span class=\"re5\">End</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Y</span> <span class=\"sy3\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">20</span> <span class=\"sy3\">+</span> <span class=\"nu0\">80</span> <span class=\"sy3\">*</span> <a href=\"http://erlang.org/doc/man/math.html\"><span class=\"kw5\">math</span></a>:<span class=\"re3\">exp</span><span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy3\">*</span> <span class=\"re5\">T</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"~.3f  \"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Y</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">analytic</span><span class=\"br0\">(</span><span class=\"re5\">T</span><span class=\"sy3\">+</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"re5\">End</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Analytic:<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">analytic</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Step 2:<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">euler</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> cooling<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Step 5:<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">euler</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> cooling<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"Step 10:<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">euler</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> cooling<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\tok<span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euler Math Toolbox", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&gt;function dgleuler (f,x,y0) ...<br/>$  y=zeros(size(x)); y[1]=y0;<br/>$  for i=2 to cols(y);<br/>$  y[i]=y[i-1]+f(x[i-1],y[i-1])*(x[i]-x[i-1]);<br/>$  end;<br/>$  return y;<br/>$endfunction<br/>&gt;function f(x,y)\u00a0:= -k*(y-TR)<br/>&gt;k=0.07; TR=20; TS=100;<br/>&gt;x=0:1:100; dgleuler(\"f\",x,TS)[-1]<br/> 20.0564137335<br/>&gt;x=0:2:100; dgleuler(\"f\",x,TS)[-1]<br/> 20.0424631834<br/>&gt;TR+(TS-TR)*exp(-k*TS)<br/> 20.0729505572<br/>&gt;x=0:5:100; plot2d(x,dgleuler(\"f\",x,TS)); ...<br/>&gt;  plot2d(x,TR+(TS-TR)*exp(-k*x),&gt;add,color=red);<br/>&gt;ode(\"f\",x,TS)[-1] // Euler default solver LSODA<br/> 20.0729505568<br/>&gt;adaptiverunge(\"f\",x,TS)[-1] // Adaptive Runge Method<br/> 20.0729505572<br/>\u00a0</pre>"}, {"lang": "F#", "loc": 17, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> euler f <span class=\"br0\">(</span>h\u00a0: <span class=\"kw4\">float</span><span class=\"br0\">)</span> t0 y0 <span class=\"sy0\">=</span><br/>    <span class=\"br0\">(</span>t0, y0<span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">unfold</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>t, y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> Some<span class=\"br0\">(</span><span class=\"br0\">(</span>t,y<span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span>t <span class=\"sy0\">+</span> h<span class=\"br0\">)</span>, <span class=\"br0\">(</span>y <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> <span class=\"br0\">(</span>f t y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> newtonCool\u00edng _ y <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> <span class=\"nu0\">20.0</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> f  <span class=\"sy0\">=</span> newtonCool\u00edng<br/>    <span class=\"kw1\">let</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <span class=\"kw1\">let</span> y0 <span class=\"sy0\">=</span> <span class=\"nu0\">100.0</span><br/>    <span class=\"kw1\">let</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">100.0</span><br/>    <span class=\"kw1\">let</span> h <span class=\"sy0\">=</span> <span class=\"nu0\">10.0</span><br/>    <span class=\"br0\">(</span>euler newtonCool\u00edng h a y0<span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">takeWhile</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>t,_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> t <span class=\"sy0\">&lt;=</span> b<span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">iter</span> <span class=\"br0\">(</span>printfn <span class=\"st0\">\"%A\"</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Forth", "loc": 14, "block": "<pre class=\"text highlighted_source\">: newton-cooling-law ( f: temp -- f: temp' )<br/>  20e f-  -0.07e f*\u00a0;<br/>\u00a0<br/>: euler ( f: y0  xt step end -- )<br/>  1+ 0 do<br/>    cr i . fdup f.<br/>    fdup over execute<br/>    dup s&gt;f f* f+<br/>  dup +loop<br/>  2drop fdrop\u00a0;<br/>\u00a0<br/>100e  ' newton-cooling-law  2 100 euler cr<br/>100e  ' newton-cooling-law  5 100 euler cr<br/>100e  ' newton-cooling-law 10 100 euler cr</pre>"}, {"lang": "Fortran", "loc": 57, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> euler_method<br/><span class=\"kw3\">use</span> iso_fortran_env, <span class=\"kw1\">only</span><span class=\"sy0\">:</span> real64<br/><span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>abstract <span class=\"kw1\">interface</span><br/>  <span class=\"co1\">! a derivative dy/dt as function of y and t</span><br/>  <span class=\"kw1\">function</span> derivative<span class=\"br0\">(</span>y, t<span class=\"br0\">)</span><br/>    <span class=\"kw3\">use</span> iso_fortran_env, <span class=\"kw1\">only</span><span class=\"sy0\">:</span> real64<br/>    <span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">derivative</span><br/>    <span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">t</span>, y<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">interface</span><br/>\u00a0<br/><span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">T_0</span> <span class=\"sy0\">=</span> <span class=\"nu0\">100</span>, T_room <span class=\"sy0\">=</span> <span class=\"nu0\">20</span>, k <span class=\"sy0\">=</span> <span class=\"nu0\">0.07</span>, a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">100</span>, <span class=\"sy0\">&amp;</span><br/>    h<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">2.0</span>, <span class=\"nu0\">5.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span><br/>\u00a0<br/><span class=\"co1\">! loop over all step sizes</span><br/><span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">3</span><br/>  <span class=\"kw1\">call</span> euler<span class=\"br0\">(</span>newton_cooling, T_0, a, b, h<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/><span class=\"co1\">! Approximates y(t) in y'(t) = f(y, t) with y(a) = y0 and t = a..b and the </span><br/><span class=\"co1\">! step size h.</span><br/><span class=\"kw1\">subroutine</span> euler<span class=\"br0\">(</span>f, y0, a, b, h<span class=\"br0\">)</span><br/>  <span class=\"kw1\">procedure</span><span class=\"br0\">(</span>derivative<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">f</span><br/>  <span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">y0</span>, a, b, h<br/>  <span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">t</span>, y<br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a &gt; b<span class=\"br0\">)</span> <span class=\"kw1\">return</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>h &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">stop</span> <span class=\"st0\">\"negative step size\"</span><br/>\u00a0<br/>  print <span class=\"st0\">'(\"# h = \", F0.3)'</span>, h<br/>\u00a0<br/>  y <span class=\"sy0\">=</span> y0<br/>  t <span class=\"sy0\">=</span> a<br/>\u00a0<br/>  <span class=\"kw1\">do</span><br/>    print <span class=\"sy0\">*</span>, t, y<br/>    t <span class=\"sy0\">=</span> t <span class=\"sy0\">+</span> h<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>t &gt; b<span class=\"br0\">)</span> <span class=\"kw1\">return</span><br/>    y <span class=\"sy0\">=</span> y <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> f<span class=\"br0\">(</span>y, t<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">! Example: Newton's cooling law, f(T, _) = -k*(T - T_room) </span><br/><span class=\"kw1\">function</span> newton_cooling<span class=\"br0\">(</span>T, unused<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>dTdt<span class=\"br0\">)</span><br/>  <span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">dTdt</span><br/>  <span class=\"kw3\">real</span><span class=\"br0\">(</span>real64<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">T</span>, unused<br/>  dTdt <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>k <span class=\"sy0\">*</span> <span class=\"br0\">(</span>T <span class=\"sy0\">-</span> T_room<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span></pre>"}, {"lang": "Futhark", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>import \"futlib/math\"<br/>\u00a0<br/>fun analytic(t0: f64) (time: f64): f64 =<br/>  20.0 + (t0 - 20.0) * f64.exp(-0.07*time)<br/>\u00a0<br/>fun cooling(_time: f64) (temperature: f64): f64 =<br/>  -0.07 * (temperature-20.0)<br/>\u00a0<br/>fun main(t0: f64) (a: f64) (b: f64) (h: f64): []f64 =<br/>  let steps = i32((b-a)/h)<br/>  let temps = replicate steps 0.0<br/>  loop ((t,temps)=(t0,temps)) = for i &lt; steps do<br/>    let x = a + f64(i) * h<br/>    let temps[i] = f64.abs(t-analytic t0 x)<br/>    in (t + h * cooling x t,<br/>        temps)<br/> in temps<br/>\u00a0</pre>"}, {"lang": "Go", "loc": 68, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// fdy is a type for function f used in Euler's method.</span><br/><span class=\"kw1\">type</span> fdy <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span><br/>\u00a0<br/><span class=\"co1\">// eulerStep computes a single new value using Euler's method.</span><br/><span class=\"co1\">// Note that step size h is a parameter, so a variable step size</span><br/><span class=\"co1\">// could be used.</span><br/><span class=\"kw4\">func</span> eulerStep<span class=\"sy1\">(</span>f fdy<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span> h <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> y <span class=\"sy3\">+</span> h<span class=\"sy3\">*</span>f<span class=\"sy1\">(</span>x<span class=\"sy1\">,</span> y<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Definition of cooling rate.  Note that this has general utility and</span><br/><span class=\"co1\">// is not specific to use in Euler's method.</span><br/>\u00a0<br/><span class=\"co1\">// newCoolingRate returns a function that computes cooling rate</span><br/><span class=\"co1\">// for a given cooling rate constant k.</span><br/><span class=\"kw4\">func</span> newCoolingRate<span class=\"sy1\">(</span>k <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>deltaTemp <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy3\">-</span>k <span class=\"sy3\">*</span> deltaTemp<br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// newTempFunc returns a function that computes the analytical solution</span><br/><span class=\"co1\">// of cooling rate integrated over time.</span><br/><span class=\"kw4\">func</span> newTempFunc<span class=\"sy1\">(</span>k<span class=\"sy1\">,</span> ambientTemp<span class=\"sy1\">,</span> initialTemp <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>time <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> ambientTemp <span class=\"sy3\">+</span> <span class=\"sy1\">(</span>initialTemp<span class=\"sy3\">-</span>ambientTemp<span class=\"sy1\">)</span><span class=\"sy3\">*</span>math<span class=\"sy3\">.</span>Exp<span class=\"sy1\">(</span><span class=\"sy3\">-</span>k<span class=\"sy3\">*</span>time<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// newCoolingRateDy returns a function of the kind needed for Euler's method.</span><br/><span class=\"co1\">// That is, a function representing dy(x, y(x)).</span><br/><span class=\"co1\">//</span><br/><span class=\"co1\">// Parameters to newCoolingRateDy are cooling constant k and ambient</span><br/><span class=\"co1\">// temperature.</span><br/><span class=\"kw4\">func</span> newCoolingRateDy<span class=\"sy1\">(</span>k<span class=\"sy1\">,</span> ambientTemp <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> fdy <span class=\"sy1\">{</span><br/>    crf <span class=\"sy2\">:=</span> newCoolingRate<span class=\"sy1\">(</span>k<span class=\"sy1\">)</span><br/>    <span class=\"co1\">// note that result is dependent only on the object temperature.</span><br/>    <span class=\"co1\">// there are no additional dependencies on time, so the x parameter</span><br/>    <span class=\"co1\">// provided by eulerStep is unused.</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>_<span class=\"sy1\">,</span> objectTemp <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> crf<span class=\"sy1\">(</span>objectTemp <span class=\"sy3\">-</span> ambientTemp<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    k <span class=\"sy2\">:=</span> <span class=\"sy3\">.</span><span class=\"nu0\">07</span><br/>    tempRoom <span class=\"sy2\">:=</span> <span class=\"nu0\">20</span><span class=\"sy3\">.</span><br/>    tempObject <span class=\"sy2\">:=</span> <span class=\"nu0\">100</span><span class=\"sy3\">.</span><br/>    fcr <span class=\"sy2\">:=</span> newCoolingRateDy<span class=\"sy1\">(</span>k<span class=\"sy1\">,</span> tempRoom<span class=\"sy1\">)</span><br/>    analytic <span class=\"sy2\">:=</span> newTempFunc<span class=\"sy1\">(</span>k<span class=\"sy1\">,</span> tempRoom<span class=\"sy1\">,</span> tempObject<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> deltaTime <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> <span class=\"sy1\">[]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">}</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Step size =\u00a0%.1f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> deltaTime<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\" Time Euler's Analytic\"</span><span class=\"sy1\">)</span><br/>        temp <span class=\"sy2\">:=</span> tempObject<br/>        <span class=\"kw1\">for</span> time <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"sy1\">;</span> time &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">100</span><span class=\"sy1\">;</span> time <span class=\"sy2\">+=</span> deltaTime <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%5.1f\u00a0%7.3f\u00a0%7.3f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> time<span class=\"sy1\">,</span> temp<span class=\"sy1\">,</span> analytic<span class=\"sy1\">(</span>time<span class=\"sy1\">))</span><br/>            temp <span class=\"sy2\">=</span> eulerStep<span class=\"sy1\">(</span>fcr<span class=\"sy1\">,</span> time<span class=\"sy1\">,</span> temp<span class=\"sy1\">,</span> deltaTime<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">()</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 15, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> eulerStep <span class=\"sy0\">=</span> <span class=\"br0\">{</span> xn, yn, h, dydx <span class=\"sy0\">-&gt;</span><br/>    <span class=\"br0\">(</span>yn <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> dydx<span class=\"br0\">(</span>xn, yn<span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20as\"><span class=\"kw2\">as</span></a> <a href=\"http://www.google.de/search?as_q=BigDecimal&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">BigDecimal</span></a><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.google.de/search?as_q=Map&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Map</span></a> eulerMapping <span class=\"sy0\">=</span> <span class=\"br0\">{</span> x0, y0, h, dydx, stopCond <span class=\"sy0\">=</span> <span class=\"br0\">{</span> xx, yy, hh, xx0 <span class=\"sy0\">-&gt;</span> abs<span class=\"br0\">(</span>xx <span class=\"sy0\">-</span> xx0<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span>hh <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span>  <span class=\"br0\">}</span>.<span class=\"me1\">rcurry</span><span class=\"br0\">(</span>h, x0<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?as_q=Map&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Map</span></a> yMap <span class=\"sy0\">=</span> <span class=\"br0\">[</span>:<span class=\"br0\">]</span><br/>    yMap<span class=\"br0\">[</span>x0<span class=\"br0\">]</span> <span class=\"sy0\">=</span> y0 <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20as\"><span class=\"kw2\">as</span></a> <a href=\"http://www.google.de/search?as_q=BigDecimal&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">BigDecimal</span></a><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> x <span class=\"sy0\">=</span> x0<br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20while\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>stopCond<span class=\"br0\">(</span>x, yMap<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        yMap<span class=\"br0\">[</span>x <span class=\"sy0\">+</span> h<span class=\"br0\">]</span> <span class=\"sy0\">=</span> eulerStep<span class=\"br0\">(</span>x, yMap<span class=\"br0\">[</span>x<span class=\"br0\">]</span>, h, dydx<span class=\"br0\">)</span><br/>        x <span class=\"sy0\">+=</span> h<br/>    <span class=\"br0\">}</span><br/>    yMap<br/><span class=\"br0\">}</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20assert\"><span class=\"kw2\">assert</span></a> eulerMapping.<span class=\"me1\">maximumNumberOfParameters</span> <span class=\"sy0\">==</span> <span class=\"nu0\">5</span></pre>"}, {"lang": "Haskell", "loc": 5, "block": "<pre class=\"haskell highlighted_source\"><span class=\"co1\">-- the solver</span><br/>dsolveBy <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:error\"><span class=\"kw3\">error</span></a> <span class=\"st0\">\"empty solution interval\"</span><br/>dsolveBy method f mesh x0 <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> mesh results<br/>  <span class=\"kw1\">where</span> results <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:scanl\"><span class=\"kw3\">scanl</span></a> <span class=\"br0\">(</span>method f<span class=\"br0\">)</span> x0 intervals<br/>        intervals <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> mesh <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> mesh<span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 24, "block": "<pre class=\"icon highlighted_source\">\u00a0<br/><span class=\"kw1\">invocable</span> <span class=\"st0\">\"newton_cooling\"</span> <span class=\"co1\"># needed to use the 'proc' procedure</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> euler <span class=\"br0\">(</span>f<span class=\"sy1\">,</span> y0<span class=\"sy1\">,</span> a<span class=\"sy1\">,</span> b<span class=\"sy1\">,</span> h<span class=\"br0\">)</span><br/>  t <span class=\"sy1\">:=</span> a<br/>  y <span class=\"sy1\">:=</span> y0<br/>  <span class=\"kw1\">until</span> <span class=\"br0\">(</span>t <span class=\"sy1\">&gt;=</span> b<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">write</span> <span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span>t<span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy1\">||</span> <span class=\"st0\">\" \"</span> <span class=\"sy1\">||</span> <span class=\"kw4\">left</span><span class=\"br0\">(</span>y<span class=\"sy1\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    t <span class=\"sy1\">+:=</span> h<br/>    y <span class=\"sy1\">+:=</span> h <span class=\"sy1\">*</span> <span class=\"br0\">(</span><span class=\"kw4\">proc</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"br0\">(</span>t<span class=\"sy1\">,</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\"># 'proc' applies procedure named in f to (t, y)</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw4\">write</span> <span class=\"br0\">(</span><span class=\"st0\">\"DONE\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> newton_cooling <span class=\"br0\">(</span>time<span class=\"sy1\">,</span> <span class=\"kw7\">T</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> <span class=\"sy1\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy1\">*</span> <span class=\"br0\">(</span><span class=\"kw7\">T</span> <span class=\"sy1\">-</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"co1\"># generate data for all three step sizes [2, 5, 10]</span><br/>  <span class=\"kw1\">every</span> <span class=\"br0\">(</span>step_size <span class=\"sy1\">:=</span> <span class=\"sy1\">!</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <br/>    euler <span class=\"br0\">(</span><span class=\"st0\">\"newton_cooling\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span>  step_size<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "J", "loc": 10, "block": "<pre class=\"j highlighted_source\"><span class=\"co1\">NB.*euler a Approximates Y(t) in Y'(t)=f(t,Y) with Y(a)=Y0 and t=a..b and step size h.</span><br/>euler=: adverb define<br/> <span class=\"st_h\">'Y0 a b h'</span>=. <span class=\"nu0\">4</span>{. <span class=\"kw2\">y</span><br/> t=. <a class=\"__cf_email__\" data-cfemail=\"234a0d63\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>&gt;:&amp;.<span class=\"sy0\">(</span>%&amp;h<span class=\"sy0\">)</span> b - a<br/> Y=. <span class=\"sy0\">(</span>+ h * <span class=\"kw2\">u</span><span class=\"sy0\">)</span>^:<span class=\"sy0\">(</span>&lt;#t<span class=\"sy0\">)</span> Y0<br/> t,.Y  <br/><span class=\"sy0\">)</span><br/>\u00a0<br/>ncl=: <span class=\"nu0\">_0.07</span> * -&amp;<span class=\"nu0\">20</span>  <span class=\"co1\">NB. Newton's Cooling Law</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 35, "block": "<pre class=\"java highlighted_source\">\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Euler <span class=\"br0\">{</span><br/>  <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> euler <span class=\"br0\">(</span>Callable f, <span class=\"kw4\">double</span> y0, <span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b, <span class=\"kw4\">int</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> t <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">double</span> y <span class=\"sy0\">=</span> y0<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>t <span class=\"sy0\">&lt;</span> b<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span> <span class=\"br0\">(</span><span class=\"st0\">\"\"</span> <span class=\"sy0\">+</span> t <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      t <span class=\"sy0\">+=</span> h<span class=\"sy0\">;</span><br/>      y <span class=\"sy0\">+=</span> h <span class=\"sy0\">*</span> f.<span class=\"me1\">compute</span> <span class=\"br0\">(</span>t, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span> <span class=\"br0\">(</span><span class=\"st0\">\"DONE\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    Callable cooling <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Cooling <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> steps <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">2</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> stepSize <span class=\"sy0\">:</span> steps<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span> <span class=\"br0\">(</span><span class=\"st0\">\"Step size: \"</span> <span class=\"sy0\">+</span> stepSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      euler <span class=\"br0\">(</span>cooling, <span class=\"nu0\">100.0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>, stepSize<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// interface used so we can plug in alternative functions to Euler</span><br/><span class=\"kw1\">interface</span> Callable <span class=\"br0\">{</span><br/>  <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> compute <span class=\"br0\">(</span><span class=\"kw4\">int</span> time, <span class=\"kw4\">double</span> t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// class to implement the newton cooling equation</span><br/><span class=\"kw1\">class</span> Cooling <span class=\"kw1\">implements</span> Callable <span class=\"br0\">{</span><br/>  <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> compute <span class=\"br0\">(</span><span class=\"kw4\">int</span> time, <span class=\"kw4\">double</span> t<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>t <span class=\"sy0\">-</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "JavaScript", "loc": 31, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"co1\">// Function that takes differential-equation, initial condition,</span><br/><span class=\"co1\">// ending x, and step size as parameters</span><br/><span class=\"kw1\">function</span> eulersMethod<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> x1<span class=\"sy0\">,</span> y1<span class=\"sy0\">,</span> x2<span class=\"sy0\">,</span> h<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"co1\">// Header</span><br/>\tconsole.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>X<span class=\"es0\">\\t</span>|<span class=\"es0\">\\t</span>Y<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tconsole.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">\"------------------------------------\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"co1\">// Initial Variables</span><br/>\t<span class=\"kw1\">var</span> x<span class=\"sy0\">=</span>x1<span class=\"sy0\">,</span> y<span class=\"sy0\">=</span>y1<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"co1\">// While we're not done yet</span><br/>\t<span class=\"co1\">// Both sides of the OR let you do Euler's Method backwards</span><br/>\twhile <span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">&lt;</span>x2 <span class=\"sy0\">&amp;&amp;</span> x1<span class=\"sy0\">&lt;</span>x2<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>x<span class=\"sy0\">&gt;</span>x2 <span class=\"sy0\">&amp;&amp;</span> x1<span class=\"sy0\">&gt;</span>x2<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"co1\">// Print what we have</span><br/>\t\tconsole.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> x <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>|<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"co1\">// Calculate the next values</span><br/>\t\ty <span class=\"sy0\">+=</span> h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>\t\tx <span class=\"sy0\">+=</span> h<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> y<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> cooling<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>eulersMethod<span class=\"br0\">(</span>cooling<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "jq", "loc": 25, "block": "<pre class=\"text highlighted_source\"># euler_method takes a filter (df), initial condition<br/># (x1,y1), ending x (x2), and step size as parameters; <br/># it emits the y values at each iteration.<br/># df must take [x,y] as its input.<br/>def euler_method(df; x1; y1; x2; h):<br/>  h as $h<br/>  | [x1, y1]<br/>  | recurse( if ((.[0] &lt; x2 and x1 &lt; x2) or <br/>                 (.[0] &gt; x2 and x1 &gt; x2)) then<br/>  \t\t[ (.[0] + $h), (.[1] + $h*df) ]<br/>             else empty<br/>             end )<br/>  | .[1]\u00a0;<br/>\u00a0<br/>\u00a0<br/># We could now solve the task by writing for each step-size, $h<br/># euler_method(-0.07 * (.[1]-20); 0; 100; 100; $h)<br/># but for clarity, we shall define a function named \"cooling\":<br/>\u00a0<br/># [x,y] is input<br/>def cooling: -0.07 * (.[1]-20);<br/>\u00a0<br/># The following solves the task:<br/># (2,5,10) | [., [ euler_method(cooling; 0; 100; 100; .) ] ]<br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 16, "block": "<pre class=\"text highlighted_source\">euler(f::Function, T::Number, t0::Int, t1::Int, h::Int) = collect(begin T += h * f(T); T end for t in t0:h:t1)<br/>\u00a0<br/># Prints a series of arbitrary values in a tabular form, left aligned in cells with a given width<br/>tabular(width, cells...) = println(join(map(s -&gt; rpad(s, width), cells)))<br/>\u00a0<br/># prints the table according to the task description for h=5 and 10 sec<br/>for h in (5, 10)<br/>    print(\"Step $h:\\n\\n\")<br/>    tabular(15, \"Time\", \"Euler\", \"Analytic\")<br/>    t = 0<br/>    for T in euler(y -&gt; -0.07 * (y - 20.0), 100.0, 0, 100, h)<br/>        tabular(15, t, round(T,6), round(20.0 + 80.0 * exp(-0.07t), 6))<br/>        t += h<br/>    end<br/>    println()<br/>end</pre>"}, {"lang": "Kotlin", "loc": 32, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>typealias Deriv <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Double<span class=\"br0\">)</span> -<span class=\"sy0\">&gt;</span> Double  <span class=\"co1\">// only one parameter needed here</span><br/>\u00a0<br/>const <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> FMT <span class=\"sy0\">=</span> <span class=\"st0\">\"\u00a0%7.3f\"</span><br/>\u00a0<br/>fun euler<span class=\"br0\">(</span>f<span class=\"sy0\">:</span> Deriv, y<span class=\"sy0\">:</span> Double, step<span class=\"sy0\">:</span> Int, end<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> yy <span class=\"sy0\">=</span> y<br/>    print<span class=\"br0\">(</span><span class=\"st0\">\" Step\u00a0%2d: \"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>step<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>t in <span class=\"nu0\">0</span>..<span class=\"me1\">end</span> step step<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>t <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span>FMT.<span class=\"me1\">format</span><span class=\"br0\">(</span>yy<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        yy +<span class=\"sy0\">=</span> step <span class=\"sy0\">*</span> f<span class=\"br0\">(</span>yy<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun analytic<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"    Time: \"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>t in <span class=\"nu0\">0</span>..<span class=\"nu0\">100</span> step <span class=\"nu0\">10</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%7d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Analytic: \"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>t in <span class=\"nu0\">0</span>..<span class=\"nu0\">100</span> step <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>        print<span class=\"br0\">(</span>FMT.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">20.0</span> + <span class=\"nu0\">80.0</span> <span class=\"sy0\">*</span> Math.<span class=\"me1\">exp</span><span class=\"br0\">(</span>-<span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun cooling<span class=\"br0\">(</span>temp<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> -<span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>temp - <span class=\"nu0\">20.0</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    analytic<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in listOf<span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        euler<span class=\"br0\">(</span><span class=\"sy0\">::</span>cooling, <span class=\"nu0\">100.0</span>, i, <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 23, "block": "<pre class=\"lua highlighted_source\">T0 <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>TR <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><br/>k <span class=\"sy0\">=</span> <span class=\"nu0\">0.07</span><br/>delta_t <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span> <span class=\"br0\">}</span><br/>n <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>\u00a0<br/>NewtonCooling <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span>k <span class=\"sy0\">*</span> <span class=\"br0\">(</span> t <span class=\"sy0\">-</span> TR <span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">function</span> Euler<span class=\"br0\">(</span> f<span class=\"sy0\">,</span> y0<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> h <span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> y <span class=\"sy0\">=</span> y0<br/>    <span class=\"kw1\">for</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> h <span class=\"kw1\">do</span><br/>\t<span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y <span class=\"br0\">)</span><br/> \ty <span class=\"sy0\">=</span> y <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> f<span class=\"br0\">(</span> y <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>delta_t <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"delta_t = \"</span><span class=\"sy0\">,</span> delta_t<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">)</span><br/>    Euler<span class=\"br0\">(</span> NewtonCooling<span class=\"sy0\">,</span> T0<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> delta_t<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>euler[step_, val_]\u00a0:= NDSolve[{T'[t] == -0.07 (T[t] - 20), T[0] == 100}, T, {t, 0, 100}, Method -&gt; \"ExplicitEuler\", StartingStepSize -&gt; step][[1, 1, 2]][val]<br/>\u00a0</pre>"}, {"lang": "Maxima", "loc": 39, "block": "<pre class=\"text highlighted_source\">euler_method(f, y0, a, b, h):= block(<br/>  [t: a, y: y0, tg: [a], yg: [y0]],<br/>  unless t&gt;=b do (<br/>    t: t + h,<br/>    y: y + f(t, y)*h,<br/>    tg: endcons(t, tg),<br/>    yg: endcons(y, yg)<br/>    ),<br/>  [tg, yg]<br/>  );<br/>\u00a0<br/>/* initial temperature */<br/>T0: 100;<br/>\u00a0<br/>/* environment of temperature */<br/>Tr: 20;<br/>\u00a0<br/>/* the cooling constant */<br/>k: 0.07;<br/>\u00a0<br/>/* end of integration */<br/>tmax: 100;<br/>\u00a0<br/>/* analytical solution */<br/>Tref(t):= Tr + (T0 - Tr)*exp(-k*t);<br/>\u00a0<br/>/* cooling rate */<br/>dT(t, T):= -k*(T-Tr);<br/>\u00a0<br/>/* get numerical solution */<br/>h: 10;<br/>[tg, yg]: euler_method('dT, T0, 0, tmax,  h);<br/>\u00a0<br/>/* plot analytical and numerical solution */<br/>plot2d([Tref, [discrete, tg, yg]], ['t, 0, tmax],<br/>  [legend, \"analytical\", concat(\"h = \", h)],<br/>  [xlabel, \"t / seconds\"],<br/>  [ylabel, \"Temperature / C\"]);<br/>\u00a0</pre>"}, {"lang": "\u041c\u041a-61/52", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u041f2\t\u0421/\u041f\t\u041f3\t\u0421/\u041f\t\u041f4\t\u041f\u041f\t19\t\u0418\u041f3\t*\t\u0418\u041f4<br/>+\t\u041f4\t\u0421/\u041f\t\u0418\u041f2\t\u0418\u041f3\t+\t\u041f2\t\u0411\u041f\t05\t...<br/>...\t...\t...\t...\t...\t...\t...\t...\t...\t\u0412/\u041e</pre>"}, {"lang": "Nim", "loc": 13, "block": "<pre class=\"text highlighted_source\">import strutils<br/>\u00a0<br/>proc euler(f: proc (x,y: float): float; y0, a, b, h: float) =<br/>  var (t,y) = (a,y0)<br/>  while t &lt; b:<br/>    echo formatFloat(t, ffDecimal, 3), \" \", formatFloat(y, ffDecimal, 3)<br/>    t += h<br/>    y += h * f(t,y)<br/>\u00a0<br/>proc newtoncooling(time, temp): float =<br/>  -0.07 * (temp - 20)<br/>\u00a0<br/>euler(newtoncooling, 100.0, 0.0, 100.0, 10.0)</pre>"}, {"lang": "Objeck", "loc": 34, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span> EulerMethod <span class=\"br0\">{</span><br/>  T0 <span class=\"sy0\">:</span> <span class=\"kw1\">static</span> <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"sy0\">;</span><br/>  TR <span class=\"sy0\">:</span> <span class=\"kw1\">static</span> <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"sy0\">;</span><br/>  k <span class=\"sy0\">:</span> <span class=\"kw1\">static</span> <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"sy0\">;</span><br/>  delta_t <span class=\"sy0\">:</span> <span class=\"kw1\">static</span> <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  n <span class=\"sy0\">:</span> <span class=\"kw1\">static</span> <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    T0 <span class=\"sy0\">:=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/>    TR <span class=\"sy0\">:=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/>    k <span class=\"sy0\">:=</span> <span class=\"nu0\">0.07</span><span class=\"sy0\">;</span><br/>    delta_t <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"nu0\">2.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">5.0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10.0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    n <span class=\"sy0\">:=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    f <span class=\"sy0\">:=</span> NewtonCooling<span class=\"br0\">(</span><span class=\"kw2\">Float</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> delta_t<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> i<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      IO.Console<span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"delta_t = \"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span>delta_t<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Euler<span class=\"br0\">(</span>f<span class=\"sy0\">,</span> T0<span class=\"sy0\">,</span> n<span class=\"sy0\">-&gt;</span><span class=\"me1\">As</span><span class=\"br0\">(</span><span class=\"kw2\">Int</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> delta_t<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span>  <br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> <span class=\"kw1\">native</span> <span class=\"sy0\">:</span> NewtonCooling<span class=\"br0\">(</span>t <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">*</span> k <span class=\"sy0\">*</span> <span class=\"br0\">(</span>t<span class=\"sy0\">-</span>TR<span class=\"br0\">)</span><span class=\"sy0\">;</span>      <br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> <span class=\"kw1\">native</span> <span class=\"sy0\">:</span> Euler<span class=\"br0\">(</span>f <span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"kw2\">Float</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span><span class=\"sy0\">,</span> y <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"sy0\">,</span> n <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">,</span> h <span class=\"sy0\">:</span> <span class=\"kw2\">Float</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>x <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x<span class=\"sy0\">&lt;=</span>n<span class=\"sy0\">;</span> x<span class=\"sy0\">+=</span>h<span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      IO.Console<span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      y <span class=\"sy0\">+=</span> h <span class=\"sy0\">*</span> f<span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span>  <br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 10, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"co1\">(* Euler integration by recurrence relation.<br/> * Given a function, and stepsize, provides a function of (t,y) which<br/> * returns the next step: (t',y'). *)</span><br/><span class=\"kw1\">let</span> euler f <span class=\"re1\">~step</span> <span class=\"br0\">(</span>t,y<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> t<span class=\"sy0\">+.</span>step, y <span class=\"sy0\">+.</span> step <span class=\"sy0\">*.</span> f t y <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">(* newton_cooling doesn't use time parameter, so _ is a placeholder *)</span><br/><span class=\"kw1\">let</span> newton_cooling <span class=\"re1\">~k</span> <span class=\"re1\">~tr</span> _ y <span class=\"sy0\">=</span> <span class=\"sy0\">-.</span>k <span class=\"sy0\">*.</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-.</span> tr<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">(* analytic solution for Newton cooling *)</span><br/><span class=\"kw1\">let</span> analytic_solution <span class=\"re1\">~k</span> <span class=\"re1\">~tr</span> <span class=\"re1\">~t0</span> t <span class=\"sy0\">=</span> tr <span class=\"sy0\">+.</span> <span class=\"br0\">(</span>t0 <span class=\"sy0\">-.</span> tr<span class=\"br0\">)</span> <span class=\"sy0\">*.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexp\"><span class=\"kw3\">exp</span></a> <span class=\"br0\">(</span><span class=\"sy0\">-.</span>k <span class=\"sy0\">*.</span> t<span class=\"br0\">)</span></pre>"}, {"lang": "Oforth", "loc": 6, "block": "<pre class=\"text highlighted_source\">: euler(f, y, a, b, h)<br/>| t |<br/>   a b h step: t [ <br/>      System.Out t &lt;&lt;wjp(6, JUSTIFY_RIGHT, 3) \"\u00a0: \" &lt;&lt; y &lt;&lt; cr<br/>      t y f perform h * y + -&gt;y<br/>      ]\u00a0;</pre>"}, {"lang": "Pascal", "loc": 53, "block": "<pre class=\"pascal highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"co2\">{$mode delphi}</span><br/><span class=\"kw1\">PROGRAM</span> Euler<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">TYPE</span> TNewtonCooling <span class=\"sy3\">=</span> <span class=\"kw1\">FUNCTION</span> <span class=\"br0\">(</span>t<span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">CONST</span>\tT0\t<span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span> <span class=\"sy3\">=</span> <span class=\"nu0\">100.0</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">CONST</span>\tTR\t<span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span> <span class=\"sy3\">=</span> <span class=\"nu0\">20.0</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">CONST</span>\tk \t<span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0.07</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">CONST</span>\ttime    <span class=\"sy1\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy3\">=</span> <span class=\"nu0\">100</span><span class=\"sy1\">;</span> \t<br/><span class=\"kw1\">CONST</span>\tstep    <span class=\"sy1\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy3\">=</span> <span class=\"nu0\">10</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">CONST</span>\tdt\t<span class=\"sy1\">:</span> <span class=\"kw4\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">..</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"kw4\">REAL</span> <span class=\"sy3\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"sy1\">,</span><span class=\"nu0\">2.0</span><span class=\"sy1\">,</span><span class=\"nu0\">5.0</span><span class=\"sy1\">,</span><span class=\"nu0\">10.0</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">VAR</span>\ti\t<span class=\"sy1\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> NewtonCooling<span class=\"br0\">(</span>t<span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span><span class=\"br0\">)</span> <span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">BEGIN</span><br/>\t\tNewtonCooling <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span>k <span class=\"sy3\">*</span> <span class=\"br0\">(</span>t<span class=\"sy3\">-</span>TR<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Euler<span class=\"br0\">(</span>F<span class=\"sy1\">:</span> TNewtonCooling<span class=\"sy1\">;</span> y<span class=\"sy1\">,</span> h <span class=\"sy1\">:</span> <span class=\"kw4\">REAL</span><span class=\"sy1\">;</span> n<span class=\"sy1\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">VAR</span> i<span class=\"sy1\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">BEGIN</span><br/>\t\t<span class=\"kw3\">WRITE</span><span class=\"br0\">(</span><span class=\"st0\">'dt='</span><span class=\"sy1\">,</span>trunc<span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"st0\">':'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t<span class=\"kw1\">REPEAT</span><br/>\t\t\t<span class=\"kw1\">IF</span> <span class=\"br0\">(</span>i <span class=\"kw1\">mod</span> <span class=\"nu0\">10</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"kw3\">WRITE</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span>y<span class=\"sy1\">:</span><span class=\"nu0\">2</span><span class=\"sy1\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t\tINC<span class=\"br0\">(</span>i<span class=\"sy1\">,</span>trunc<span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t\ty <span class=\"sy1\">:</span><span class=\"sy3\">=</span> y <span class=\"sy3\">+</span> h <span class=\"sy3\">*</span> F<span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy1\">;</span>\t<br/>\t\t<span class=\"kw1\">UNTIL</span> <span class=\"br0\">(</span>i &gt;<span class=\"sy3\">=</span> n<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t<span class=\"kw3\">WRITELN</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Sigma<span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">VAR</span> t<span class=\"sy1\">:</span> <span class=\"kw4\">INTEGER</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">BEGIN</span><br/>\t\t<span class=\"kw3\">WRITE</span><span class=\"br0\">(</span><span class=\"st0\">'Sigma:'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t<span class=\"kw1\">REPEAT</span><br/>\t\t\t<span class=\"kw3\">WRITE</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span><span class=\"br0\">(</span><span class=\"nu0\">20</span> <span class=\"sy3\">+</span> <span class=\"nu0\">80</span> <span class=\"sy3\">*</span> <span class=\"kw3\">exp</span><span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy3\">*</span> t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"nu0\">2</span><span class=\"sy1\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t\tINC<span class=\"br0\">(</span>t<span class=\"sy1\">,</span>step<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t<span class=\"kw1\">UNTIL</span> <span class=\"br0\">(</span>t&gt;<span class=\"sy3\">=</span>time<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\t<span class=\"kw3\">WRITELN</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>\t<span class=\"kw3\">WRITELN</span><span class=\"br0\">(</span><span class=\"st0\">'Newton cooling function: Analytic solution (Sigma) with 3 Euler approximations.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t<span class=\"kw3\">WRITELN</span><span class=\"br0\">(</span><span class=\"st0\">'Time: '</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">10</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">20</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">30</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">40</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">50</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">60</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">70</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">80</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span><span class=\"nu0\">90</span><span class=\"sy1\">:</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\tSigma<span class=\"sy1\">;</span><br/>\t<span class=\"kw1\">FOR</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">3</span> <span class=\"kw1\">DO</span><br/>\t\tEuler<span class=\"br0\">(</span>NewtonCooling<span class=\"sy1\">,</span>T0<span class=\"sy1\">,</span>dt<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">,</span>time<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">END</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 33, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> euler_method <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$t0</span><span class=\"sy0\">,</span> <span class=\"re0\">$t1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$step_size</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@results</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$t0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"re0\">$step_size</span><span class=\"sy0\">;</span> <span class=\"re0\">$s</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> <span class=\"re0\">$s</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$step_size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$t0</span> <span class=\"sy0\">-=</span> <span class=\"br0\">(</span><span class=\"re0\">$t0</span> <span class=\"sy0\">-</span> <span class=\"re0\">$t1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$k</span> <span class=\"sy0\">*</span> <span class=\"re0\">$step_size</span><span class=\"sy0\">;</span><br/>                <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@results</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$t0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">@results</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> analytical <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$t0</span><span class=\"sy0\">,</span> <span class=\"re0\">$t1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$time</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"re0\">$t0</span> <span class=\"sy0\">-</span> <span class=\"re0\">$t1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://perldoc.perl.org/functions/exp.html\"><span class=\"kw3\">exp</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"re0\">$time</span> <span class=\"sy0\">*</span> <span class=\"re0\">$k</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$t1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$T0</span><span class=\"sy0\">,</span> <span class=\"re0\">$T1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span>07<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@r2</span>  <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> euler_method<span class=\"br0\">(</span><span class=\"re0\">$T0</span><span class=\"sy0\">,</span> <span class=\"re0\">$T1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@r5</span>  <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> euler_method<span class=\"br0\">(</span><span class=\"re0\">$T0</span><span class=\"sy0\">,</span> <span class=\"re0\">$T1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@r10</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span> euler_method<span class=\"br0\">(</span><span class=\"re0\">$T0</span><span class=\"sy0\">,</span> <span class=\"re0\">$T1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Time<span class=\"es0\">\\t</span>      2     err(%)      5     err(%)    10      err(%)  Analytic<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-\"</span> x <span class=\"nu0\">76</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">$#r2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$an</span> <span class=\"sy0\">=</span> analytical<span class=\"br0\">(</span><span class=\"re0\">$T0</span><span class=\"sy0\">,</span> <span class=\"re0\">$T1</span><span class=\"sy0\">,</span> <span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$r2</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%4d<span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"st0\">\"%9.3f\"</span> x <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$r2</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$r2</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$r2</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$an</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$r5</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$r5</span> <span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$an</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$r10</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$r10</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$an</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span><br/>                <span class=\"re0\">$an</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 37, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> euler <span class=\"br0\">(</span> <span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"re0\">$y0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@t_y</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span> <span class=\"sy0\">+</span> <span class=\"re0\">$h</span> <span class=\"sy0\">...</span> <span class=\"sy0\">*</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$b</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$t</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">@t_y</span><span class=\"br0\">[</span><span class=\"re0\">$t</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$y</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$h</span> <span class=\"sy0\">*</span> f<span class=\"br0\">(</span> <span class=\"re0\">$t</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">@t_y</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> COOLING_RATE <span class=\"sy0\">=</span> <span class=\"nu0\">0.07</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> AMBIENT_TEMP <span class=\"sy0\">=</span>   <span class=\"nu0\">20</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> INITIAL_TEMP <span class=\"sy0\">=</span>  <span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> INITIAL_TIME <span class=\"sy0\">=</span>    <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> FINAL_TIME   <span class=\"sy0\">=</span>  <span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> f <span class=\"br0\">(</span> <span class=\"re0\">$time</span><span class=\"sy0\">,</span> <span class=\"re0\">$temp</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy0\">-</span>COOLING_RATE <span class=\"sy0\">*</span> <span class=\"br0\">(</span> <span class=\"re0\">$temp</span> <span class=\"sy0\">-</span> AMBIENT_TEMP <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@e</span><span class=\"sy0\">;</span><br/><span class=\"re0\">@e</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> euler<span class=\"br0\">(</span> <span class=\"re0\">&amp;f</span><span class=\"sy0\">,</span> INITIAL_TEMP<span class=\"sy0\">,</span> INITIAL_TIME<span class=\"sy0\">,</span> FINAL_TIME<span class=\"sy0\">,</span> <span class=\"re0\">$_</span> <span class=\"br0\">)</span> <span class=\"kw1\">for</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st_h\">'Time Analytic   Step2   Step5  Step10     Err2     Err5    Err10'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> INITIAL_TIME<span class=\"sy0\">,</span> <span class=\"sy0\">*</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span> <span class=\"sy0\">...</span> <span class=\"sy0\">*</span> <span class=\"sy0\">&gt;=</span> FINAL_TIME <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$t</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$exact</span> <span class=\"sy0\">=</span> AMBIENT_TEMP <span class=\"sy0\">+</span> <span class=\"br0\">(</span>INITIAL_TEMP <span class=\"sy0\">-</span> AMBIENT_TEMP<span class=\"br0\">)</span><br/>                              <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>COOLING_RATE <span class=\"sy0\">*</span> <span class=\"re0\">$t</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">exp</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$err</span> <span class=\"sy0\">=</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span> <span class=\"re0\">@^a</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"kw3\">abs</span><span class=\"br0\">(</span> <span class=\"re0\">$_</span> <span class=\"sy0\">-</span> <span class=\"re0\">$exact</span> <span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"re0\">$exact</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"re0\">@e</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$t</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw3\">say</span> <span class=\"re0\">$t</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'%4d '</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span> <span class=\"re0\">$exact</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span> <span class=\"br0\">)</span>\u00bb<span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'\u00a0%7.3f'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                           <span class=\"re0\">$err</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">,</span> <span class=\"re0\">$c</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\u00bb<span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"st_h\">'\u00a0%7.3f%%'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 33, "block": "<pre class=\"text highlighted_source\">constant FMT = \"\u00a0%7.3f\"<br/>\u00a0<br/>procedure ivp_euler(integer f, atom y, integer step, integer end_t)<br/>integer t = 0;<br/>\u00a0<br/>    printf(1, \" Step\u00a0%2d: \", step);<br/>    while t&lt;=end_t do<br/>        if remainder(t,10)==0 then printf(1, FMT, y) end if<br/>        y += step * call_func(f,{t, y});<br/>        t += step<br/>    end while<br/>    printf(1, \"\\n\");<br/>end procedure<br/>\u00a0<br/>procedure analytic()<br/>    printf(1, \"    Time: \");<br/>    for t = 0 to 100 by 10 do printf(1,\"\u00a0%7g\", t) end for<br/>    printf(1, \"\\nAnalytic: \");<br/>    for t = 0 to 100 by 10 do<br/>        printf(1, FMT, 20 + 80 * exp(-0.07 * t))<br/>    end for<br/>    printf(1,\"\\n\");<br/>end procedure<br/>\u00a0<br/>function cooling(atom /*t*/, atom temp)<br/>    return -0.07 * (temp - 20);<br/>end function<br/>constant r_cooling = routine_id(\"cooling\")<br/>\u00a0<br/>analytic();<br/>ivp_euler(r_cooling, 100, 2, 100);<br/>ivp_euler(r_cooling, 100, 5, 100);<br/>ivp_euler(r_cooling, 100, 10, 100);</pre>"}, {"lang": "PicoLisp", "loc": 14, "block": "<pre class=\"text highlighted_source\">(load \"@lib/math.l\")<br/>\u00a0<br/>(de euler (F Y A B H)<br/>   (while (&gt; B A)<br/>      (prinl (round A) \" \" (round Y))<br/>      (inc 'Y (*/ H (F A Y) 1.0))<br/>      (inc 'A H) ) )<br/>\u00a0<br/>(de newtonCoolingLaw (A B)<br/>   (*/ -0.07 (- B 20.) 1.0) )<br/>\u00a0<br/>(euler newtonCoolingLaw 100.0 0 100.0 2.0)<br/>(euler newtonCoolingLaw 100.0 0 100.0 5.0)<br/>(euler newtonCoolingLaw 100.0 0 100.0 10.0)</pre>"}, {"lang": "PL/I", "loc": 44, "block": "<pre class=\"pli highlighted_source\">test<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span> <span class=\"kw1\">options</span> <span class=\"br0\">(</span><span class=\"kw1\">main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* 3 December 2012 */</span><br/>\u00a0<br/>   <span class=\"kw1\">declare</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">)</span> <span class=\"kw1\">float</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> <span class=\"br0\">(</span>T0 <span class=\"kw1\">initial</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> Tr <span class=\"kw1\">initial</span> <span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">float</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> k <span class=\"kw1\">float</span> <span class=\"kw1\">initial</span> <span class=\"br0\">(</span><span class=\"nu0\">0.07</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> t <span class=\"kw1\">fixed</span> <span class=\"kw1\">binary</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> h <span class=\"kw1\">fixed</span> <span class=\"kw1\">binary</span><span class=\"sy0\">;</span><br/>\u00a0<br/>   x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z <span class=\"sy0\">=</span> T0<span class=\"sy0\">;</span><br/>   <span class=\"coMULTI\">/* Step size is 2 seconds */</span><br/>   h <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">data</span> <span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"st0\">'  t    By formula'</span><span class=\"sy0\">,</span> <span class=\"st0\">'By Euler'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">do</span> t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">by</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span>t<span class=\"sy0\">,</span> Tr <span class=\"sy0\">+</span> <span class=\"br0\">(</span>T0 <span class=\"sy0\">-</span> Tr<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"kw1\">exp</span><span class=\"br0\">(</span>k<span class=\"sy0\">*</span>t<span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span> <span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> f<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      x <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">/* Step size is 5 seconds */</span><br/>   h <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">data</span> <span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"st0\">'  t    By formula'</span><span class=\"sy0\">,</span> <span class=\"st0\">'By Euler'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">do</span> t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">by</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span> t<span class=\"sy0\">,</span> Tr <span class=\"sy0\">+</span> <span class=\"br0\">(</span>T0 <span class=\"sy0\">-</span> Tr<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"kw1\">exp</span><span class=\"br0\">(</span>k<span class=\"sy0\">*</span>t<span class=\"br0\">)</span><span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> f<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      y <span class=\"sy0\">=</span> y <span class=\"sy0\">+</span> h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>\u00a0<br/>   <span class=\"coMULTI\">/* Step size is 10 seconds */</span><br/>   h <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">data</span> <span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"st0\">'  t    By formula'</span><span class=\"sy0\">,</span> <span class=\"st0\">'By Euler'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">do</span> t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">by</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">put</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">edit</span> <span class=\"br0\">(</span>t<span class=\"sy0\">,</span> Tr <span class=\"sy0\">+</span> <span class=\"br0\">(</span>T0 <span class=\"sy0\">-</span> Tr<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"kw1\">exp</span><span class=\"br0\">(</span>k<span class=\"sy0\">*</span>t<span class=\"br0\">)</span><span class=\"sy0\">,</span> z<span class=\"br0\">)</span> <span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> f<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      z <span class=\"sy0\">=</span> z <span class=\"sy0\">+</span> h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> z<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>\u00a0<br/>f<span class=\"sy0\">:</span> <span class=\"kw1\">procedure</span> <span class=\"br0\">(</span>dummy<span class=\"sy0\">,</span> T<span class=\"br0\">)</span> <span class=\"kw1\">returns</span> <span class=\"br0\">(</span><span class=\"kw1\">float</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> dummy  <span class=\"kw1\">fixed</span> <span class=\"kw1\">binary</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">declare</span> T <span class=\"kw1\">float</span><span class=\"sy0\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">return</span> <span class=\"br0\">(</span> <span class=\"sy0\">-</span>k<span class=\"sy0\">*</span><span class=\"br0\">(</span>T <span class=\"sy0\">-</span> Tr<span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">end</span> f<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span> test<span class=\"sy0\">;</span></pre>"}, {"lang": "PowerShell", "loc": 45, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> euler <span class=\"br0\">(</span>$<span class=\"br0\">{</span>f<span class=\"br0\">}</span><span class=\"sy0\">,</span> $<span class=\"br0\">{</span>y<span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> <span class=\"re0\">$t0</span><span class=\"sy0\">,</span> <span class=\"re0\">$tEnd</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">function</span> f<span class=\"sy0\">-</span>euler <span class=\"br0\">(</span><span class=\"re0\">$tn</span><span class=\"sy0\">,</span> <span class=\"re0\">$yn</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span><br/>        <span class=\"re0\">$yn</span> <span class=\"sy0\">+</span> <span class=\"re0\">$h</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>f <span class=\"re0\">$tn</span> <span class=\"re0\">$yn</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw3\">function</span> time <span class=\"br0\">(</span><span class=\"re0\">$t0</span><span class=\"sy0\">,</span> <span class=\"re0\">$h</span><span class=\"sy0\">,</span> <span class=\"re0\">$tEnd</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span><br/>        <span class=\"re0\">$end</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span>MATH<span class=\"br0\">]</span>::Floor<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$tEnd</span> <span class=\"sy0\">-</span> <span class=\"re0\">$t0</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"re0\">$h</span><span class=\"br0\">)</span><br/>        <span class=\"kw3\">foreach</span> <span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"kw3\">in</span> <span class=\"nu0\">0</span>..<span class=\"re0\">$end</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"sy0\">*</span><span class=\"re0\">$h</span> <span class=\"sy0\">+</span> <span class=\"re0\">$t0</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$time</span> <span class=\"sy0\">=</span> time <span class=\"re0\">$t0</span> <span class=\"nu0\">10</span> <span class=\"re0\">$tEnd</span> <br/>    <span class=\"re0\">$time5</span> <span class=\"sy0\">=</span> time <span class=\"re0\">$t0</span> <span class=\"nu0\">5</span> <span class=\"re0\">$tEnd</span><br/>    <span class=\"re0\">$time2</span> <span class=\"sy0\">=</span> time <span class=\"re0\">$t0</span> <span class=\"nu0\">2</span> <span class=\"re0\">$tEnd</span><br/>    <span class=\"re0\">$yn10</span> <span class=\"sy0\">=</span> <span class=\"re0\">$yn5</span> <span class=\"sy0\">=</span> <span class=\"re0\">$yn2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$y0</span><br/>    <span class=\"re0\">$i2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw3\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$tn10</span> <span class=\"kw3\">in</span> <span class=\"re0\">$time</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">while</span><span class=\"br0\">(</span><span class=\"re0\">$time2</span><span class=\"br0\">[</span><span class=\"re0\">$i2</span><span class=\"br0\">]</span> <span class=\"kw4\">-ne</span> <span class=\"re0\">$tn10</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>            <span class=\"re0\">$i2</span><span class=\"sy0\">++</span><br/>            <span class=\"re0\">$yn2</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>f<span class=\"sy0\">-</span>euler <span class=\"re0\">$time2</span><span class=\"br0\">[</span><span class=\"re0\">$i2</span><span class=\"br0\">]</span> <span class=\"re0\">$yn2</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">while</span><span class=\"br0\">(</span><span class=\"re0\">$time5</span><span class=\"br0\">[</span><span class=\"re0\">$i5</span><span class=\"br0\">]</span> <span class=\"kw4\">-ne</span> <span class=\"re0\">$tn10</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>            <span class=\"re0\">$i5</span><span class=\"sy0\">++</span><br/>            <span class=\"re0\">$yn5</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>f<span class=\"sy0\">-</span>euler <span class=\"re0\">$time5</span><span class=\"br0\">[</span><span class=\"re0\">$i5</span><span class=\"br0\">]</span> <span class=\"re0\">$yn5</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"br0\">[</span>pscustomobject<span class=\"br0\">]</span><span class=\"sy0\">@</span><span class=\"br0\">{</span><br/>            t <span class=\"sy0\">=</span> <span class=\"st0\">\"$tn10\"</span><br/>            Analytical <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f (y $tn10))\"</span><br/>            <span class=\"st0\">\"Euler h = 2\"</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f $yn2)\"</span><br/>            <span class=\"st0\">\"Euler h = 5\"</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f $yn5)\"</span><br/>            <span class=\"st0\">\"Euler h = 10\"</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f $yn10)\"</span><br/>            <span class=\"st0\">\"Error h = 2\"</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f [MATH]::abs($yn2 - (y $tn10)))\"</span><br/>            <span class=\"st0\">\"Error h = 5\"</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f [MATH]::abs($yn5 - (y $tn10)))\"</span><br/>            <span class=\"st0\">\"Error h = 10\"</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$(\"</span><span class=\"br0\">{</span><span class=\"nu0\">0</span>:N5<span class=\"br0\">}</span><span class=\"st0\">\" -f [MATH]::abs($yn10 - (y $tn10)))\"</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$yn10</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>f<span class=\"sy0\">-</span>euler <span class=\"re0\">$tn10</span> <span class=\"re0\">$yn10</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span>       <br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"re0\">$k</span><span class=\"sy0\">,</span> <span class=\"re0\">$yr</span><span class=\"sy0\">,</span> <span class=\"re0\">$y0</span><span class=\"sy0\">,</span> <span class=\"re0\">$t0</span><span class=\"sy0\">,</span> <span class=\"re0\">$tEnd</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0.07</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><br/><span class=\"kw3\">function</span> f <span class=\"br0\">(</span><span class=\"re0\">$t</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span><br/>    <span class=\"sy0\">-</span><span class=\"re0\">$k</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$yr</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"kw3\">function</span> y <span class=\"br0\">(</span><span class=\"re0\">$t</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span> <br/>    <span class=\"re0\">$yr</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$y0</span> <span class=\"sy0\">-</span> <span class=\"re0\">$yr</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">[</span>MATH<span class=\"br0\">]</span>::Exp<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"re0\">$k</span><span class=\"sy0\">*</span><span class=\"re0\">$t</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>euler f y <span class=\"re0\">$y0</span> <span class=\"re0\">$t0</span> <span class=\"re0\">$tEnd</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Format-Table</span> <span class=\"kw5\">-AutoSize</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 25, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Define</span>.d<br/><span class=\"kw1\">Prototype</span>.d Func<span class=\"br0\">(</span>Time, t<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.d Euler<span class=\"br0\">(</span><span class=\"sy0\">*</span>F.Func, y0, a, b, h<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> y<span class=\"sy0\">=</span>y0, t<span class=\"sy0\">=</span>a<br/>  <span class=\"kw1\">While</span> t<span class=\"sy0\">&lt;=</span>b<br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">StrF</span><span class=\"br0\">(</span>t,<span class=\"nu0\">3</span><span class=\"br0\">)</span>,<span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" \"</span><span class=\"sy0\">+</span><span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">StrF</span><span class=\"br0\">(</span>y,<span class=\"nu0\">3</span><span class=\"br0\">)</span>,<span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    y <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> <span class=\"sy0\">*</span>F<span class=\"br0\">(</span>t,y<span class=\"br0\">)</span><br/>    t <span class=\"sy0\">+</span> h<br/>  <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.d newtonCoolingLaw<span class=\"br0\">(</span>Time, t<span class=\"br0\">)</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.07</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>t<span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  Euler<span class=\"br0\">(</span>@newtonCoolingLaw<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  Euler<span class=\"br0\">(</span>@newtonCoolingLaw<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>  Euler<span class=\"br0\">(</span>@newtonCoolingLaw<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 12, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">def</span> euler<span class=\"br0\">(</span>f<span class=\"sy0\">,</span>y0<span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>h<span class=\"br0\">)</span>:<br/>\tt<span class=\"sy0\">,</span>y <span class=\"sy0\">=</span> a<span class=\"sy0\">,</span>y0<br/>\t<span class=\"kw1\">while</span> t <span class=\"sy0\">&lt;=</span> b:<br/>\t\t<span class=\"kw1\">print</span> <span class=\"st0\">\"%6.3f\u00a0%6.3f\"</span>\u00a0% <span class=\"br0\">(</span>t<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><br/>\t\tt +<span class=\"sy0\">=</span> h<br/>\t\ty +<span class=\"sy0\">=</span> h * f<span class=\"br0\">(</span>t<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> newtoncooling<span class=\"br0\">(</span><span class=\"kw3\">time</span><span class=\"sy0\">,</span> temp<span class=\"br0\">)</span>:<br/>\t<span class=\"kw1\">return</span> -<span class=\"nu0\">0.07</span> * <span class=\"br0\">(</span>temp - <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>\u00a0<br/>euler<span class=\"br0\">(</span>newtoncooling<span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "R", "loc": 17, "block": "<pre class=\"rsplus highlighted_source\">euler <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/function.html\"><span class=\"kw2\">function</span></a><span class=\"br0\">(</span>f, y0, a, b, h<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/t.html\"><span class=\"kw2\">t</span></a> <span class=\"sy0\">&lt;-</span> a<br/>  y <span class=\"sy0\">&lt;-</span> y0<br/>\u00a0<br/>  <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/while.html\"><span class=\"kw2\">while</span></a> <span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/t.html\"><span class=\"kw2\">t</span></a> <span class=\"sy0\">&lt;</span> b<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/cat.html\"><span class=\"kw2\">cat</span></a><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%6.3f\u00a0%6.3f<span class=\"es0\">\\n</span>\"</span>, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/t.html\"><span class=\"kw2\">t</span></a>, y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/t.html\"><span class=\"kw2\">t</span></a> <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/t.html\"><span class=\"kw2\">t</span></a> <span class=\"sy0\">+</span> h<br/>    y <span class=\"sy0\">&lt;-</span> y <span class=\"sy0\">+</span> h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/t.html\"><span class=\"kw2\">t</span></a>, y<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>newtoncooling <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/function.html\"><span class=\"kw2\">function</span></a><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/stats/html/time.html\"><span class=\"kw7\">time</span></a>, temp<span class=\"br0\">)</span><br/>  <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/return.html\"><span class=\"kw2\">return</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">0.07</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>temp<span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>euler<span class=\"br0\">(</span>newtoncooling, <span class=\"nu0\">100</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(define (ODE-solve f init <br/>                   #:x-max x-max <br/>                   #:step h <br/>                   #:method (method euler))<br/>  (reverse <br/>   (iterate-while (\u03bb (x . y) (&lt;= x x-max)) (method f h) init)))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 73, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* REXX ***************************************************************<br/>* 24.05.2013 Walter Pachl  translated from PL/I<br/>**********************************************************************/</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"nu0\">100</span><br/>  T0=<span class=\"nu0\">100</span><br/>  Tr=<span class=\"nu0\">20</span><br/>  k=<span class=\"nu0\">0.07</span><br/>\u00a0<br/>  h=<span class=\"nu0\">2</span><br/>  x=t0<br/>  <span class=\"kw1\">Call</span> head<br/>  <span class=\"kw1\">do</span> t=<span class=\"nu0\">0</span> <span class=\"kw2\">to</span> <span class=\"nu0\">100</span> <span class=\"kw2\">by</span> <span class=\"nu0\">2</span><br/>    <span class=\"kw1\">Select</span><br/>      <span class=\"kw3\">When</span> t<span class=\"sy0\">&lt;</span>=<span class=\"nu0\">4</span> <span class=\"sy0\">|</span> t<span class=\"sy0\">&gt;</span>=<span class=\"nu0\">96</span> <span class=\"kw3\">Then</span><br/>        <span class=\"kw1\">call</span> o x<br/>      <span class=\"kw3\">When</span> t=<span class=\"nu0\">8</span> <span class=\"kw3\">Then</span><br/>        <span class=\"kw1\">Say</span> <span class=\"st0\">'...'</span><br/>      <span class=\"kw3\">Otherwise</span><br/>        <span class=\"kw1\">Nop</span><br/>      <span class=\"kw3\">End</span><br/>    x=x+h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span><br/>\u00a0<br/>  h=<span class=\"nu0\">5</span><br/>  y=t0<br/>  <span class=\"kw1\">Call</span> head<br/>  <span class=\"kw1\">do</span> t=<span class=\"nu0\">0</span> <span class=\"kw2\">to</span> <span class=\"nu0\">100</span> <span class=\"kw2\">by</span> <span class=\"nu0\">5</span><br/>    <span class=\"kw1\">call</span> o y<br/>    y=y+h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>y<span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span><br/>\u00a0<br/>  h=<span class=\"nu0\">10</span><br/>  z=t0<br/>  <span class=\"kw1\">Call</span> head<br/>  <span class=\"kw1\">do</span> t=<span class=\"nu0\">0</span> <span class=\"kw2\">to</span> <span class=\"nu0\">100</span> <span class=\"kw2\">by</span> <span class=\"nu0\">10</span><br/>    <span class=\"kw1\">call</span> o z<br/>    z=z+h<span class=\"sy0\">*</span>f<span class=\"br0\">(</span>z<span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">Exit</span><br/>\u00a0<br/>f: <span class=\"kw1\">procedure</span> <span class=\"kw1\">Expose</span> k Tr<br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> t<br/>  <span class=\"kw1\">return</span> -k<span class=\"sy0\">*</span><span class=\"br0\">(</span>T-Tr<span class=\"br0\">)</span><br/>\u00a0<br/>head:<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'h='</span>h<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'  t    By formula       By Euler'</span><br/>  <span class=\"kw1\">Return</span><br/>\u00a0<br/>o:<br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> v<br/>  <span class=\"kw1\">Say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>t,<span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw6\">format</span><span class=\"br0\">(</span>Tr+<span class=\"br0\">(</span>T0-Tr<span class=\"br0\">)</span><span class=\"sy0\">/</span>exp<span class=\"br0\">(</span>k<span class=\"sy0\">*</span>t<span class=\"br0\">)</span>,<span class=\"nu0\">5</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"kw6\">format</span><span class=\"br0\">(</span>v,<span class=\"nu0\">5</span>,<span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Return</span> <br/>\u00a0<br/>exp: <span class=\"kw1\">Procedure</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> x,prec<br/>  <span class=\"kw1\">If</span> prec<span class=\"sy0\">&lt;</span><span class=\"nu0\">9</span> <span class=\"kw3\">Then</span> prec=<span class=\"nu0\">9</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>prec<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Fuzz</span>   <span class=\"nu0\">3</span><br/>  o=<span class=\"nu0\">1</span><br/>  u=<span class=\"nu0\">1</span><br/>  r=<span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">By</span> <span class=\"nu0\">1</span><br/>    ra=r<br/>    o=o<span class=\"sy0\">*</span>x<br/>    u=u<span class=\"sy0\">*</span>i<br/>    r=r+<span class=\"br0\">(</span>o<span class=\"sy0\">/</span>u<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> r=ra <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span>prec<span class=\"br0\">)</span><br/>  r=r+<span class=\"nu0\">0</span><br/>  <span class=\"kw1\">Return</span> r           <br/>\u00a0</pre>"}, {"lang": "Ring", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>decimals(3)<br/>see euler(\"return -0.07*(y-20)\", 100, 0, 100, 2) + nl<br/>see euler(\"return -0.07*(y-20)\", 100, 0, 100, 5) + nl<br/>see euler(\"return -0.07*(y-20)\", 100, 0, 100, 10) + nl<br/>\u00a0<br/>func euler df, y, a, b, s<br/>     t = a <br/>     while t &lt;= b<br/>           see \"\" + t + \" \" + y + nl               <br/>           y += s * eval(df)<br/>           t += s<br/>     end<br/>     return y</pre>"}, {"lang": "Ruby", "loc": 12, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> euler<span class=\"br0\">(</span>y, a, b, h<span class=\"br0\">)</span><br/>  a.<span class=\"me1\">step</span><span class=\"br0\">(</span>b,h<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>t<span class=\"sy0\">|</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"%7.3f\u00a0%7.3f\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>t,y<span class=\"br0\">]</span><br/>    y <span class=\"sy0\">+</span>= h <span class=\"sy0\">*</span> <span class=\"kw1\">yield</span><span class=\"br0\">(</span>t,y<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"nu0\">10</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>step<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"Step = #{step}\"</span><br/>  euler<span class=\"br0\">(</span><span class=\"nu0\">100</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">100</span>,step<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>time, temp<span class=\"sy0\">|</span> <span class=\"sy0\">-</span><span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>temp <span class=\"sy0\">-</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <span class=\"kw3\">puts</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Scala", "loc": 31, "block": "<pre class=\"scala highlighted_source\">\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> App<span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> cooling<span class=\"br0\">(</span> step <span class=\"sy0\">:</span> Int <span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>      eulerStep<span class=\"br0\">(</span> <span class=\"br0\">(</span>step , y<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span>-<span class=\"nu0\">0.07</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y - <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">}</span> , <br/>        <span class=\"nu0\">100.0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">100</span>,step<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    cooling<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>    cooling<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>    cooling<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> eulerStep<span class=\"br0\">(</span> func <span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int,Double<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Double,y0 <span class=\"sy0\">:</span> Double,<br/>    begin <span class=\"sy0\">:</span> Int, end <span class=\"sy0\">:</span> Int , step <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Step size:\u00a0%s\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>step<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> current <span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> begin<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> y <span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> y0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a><span class=\"br0\">(</span> current <span class=\"sy0\">&lt;=</span> end<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      println<span class=\"br0\">(</span> <span class=\"st0\">\"%d\u00a0%.5f\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>current,y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      current +<span class=\"sy0\">=</span> step<br/>      y +<span class=\"sy0\">=</span> step <span class=\"sy0\">*</span> func<span class=\"br0\">(</span>current,y<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"DONE\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "SequenceL", "loc": 25, "block": "<pre class=\"text highlighted_source\">import &lt;Utilities/Conversion.sl&gt;;<br/>import &lt;Utilities/Sequence.sl&gt;;<br/>\u00a0<br/>T0\u00a0:= 100.0;<br/>TR\u00a0:= 20.0;<br/>k\u00a0:= 0.07;<br/>\u00a0<br/>main(args(2))\u00a0:=<br/>\tlet<br/>\t\tresults[i]\u00a0:= euler(newtonCooling, T0, 100, stringToInt(args[i]), 0, \"delta_t = \" ++ args[i]);<br/>\tin<br/>\t\tdelimit(results, '\\n');<br/>\u00a0<br/>newtonCooling(t)\u00a0:= -k * (t - TR);<br/>\u00a0<br/>euler: (float -&gt; float) * float * int * int * int * char(1) -&gt; char(1);<br/>euler(f, y, n, h, x, output(1))\u00a0:=<br/>\tlet<br/>\t\tnewOutput\u00a0:= output ++ \"\\n\\t\" ++ intToString(x) ++ \"\\t\" ++ floatToString(y, 3);<br/>\t\tnewY\u00a0:= y + h * f(y);<br/>\t\tnewX\u00a0:= x + h;<br/>\tin<br/>\t\t\toutput when x &gt; n<br/>\t\telse<br/>\t\t\teuler(f, newY, n, h, newX, newOutput);</pre>"}, {"lang": "Sidef", "loc": 30, "block": "<pre class=\"ruby highlighted_source\">func euler_method<span class=\"br0\">(</span>t0, t1, k, step_size<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var results = <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>, t0<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> s <span class=\"kw1\">in</span> <span class=\"br0\">(</span>step_size..<span class=\"nu0\">100</span> <span class=\"sy0\">-&gt;</span> by<span class=\"br0\">(</span>step_size<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        t0 <span class=\"sy0\">-</span>= <span class=\"br0\">(</span><span class=\"br0\">(</span>t0 <span class=\"sy0\">-</span> t1<span class=\"br0\">)</span> <span class=\"sy0\">*</span> k <span class=\"sy0\">*</span> step_size<span class=\"br0\">)</span><br/>        results <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">[</span>s, t0<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">return</span> results;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func analytical<span class=\"br0\">(</span>t0, t1, k, time<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span>t0 <span class=\"sy0\">-</span> t1<span class=\"br0\">)</span> <span class=\"sy0\">*</span> exp<span class=\"br0\">(</span><span class=\"sy0\">-</span>time <span class=\"sy0\">*</span> k<span class=\"br0\">)</span> <span class=\"sy0\">+</span> t1<br/><span class=\"br0\">}</span><br/>\u00a0<br/>var <span class=\"br0\">(</span>T0, T1, k<span class=\"br0\">)</span> = <span class=\"br0\">(</span><span class=\"nu0\">100</span>, <span class=\"nu0\">20</span>, .07<span class=\"br0\">)</span><br/>var r2  = euler_method<span class=\"br0\">(</span>T0, T1, k,  <span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">grep</span> <span class=\"br0\">{</span> _<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">10</span> <span class=\"br0\">}</span><br/>var r5  = euler_method<span class=\"br0\">(</span>T0, T1, k,  <span class=\"nu0\">5</span><span class=\"br0\">)</span>.<span class=\"me1\">grep</span> <span class=\"br0\">{</span> _<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">10</span> <span class=\"br0\">}</span><br/>var r10 = euler_method<span class=\"br0\">(</span>T0, T1, k, <span class=\"nu0\">10</span><span class=\"br0\">)</span>.<span class=\"me1\">grep</span> <span class=\"br0\">{</span> _<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">10</span> <span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">\"Time<span class=\"es0\">\\t</span>      2     err(%)      5     err(%)    10      err(%)  Analytic\"</span><br/>say <span class=\"st0\">\"-\"</span><span class=\"sy0\">*</span><span class=\"nu0\">76</span><br/>\u00a0<br/>r2.<span class=\"me1\">range</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>    var an = analytical<span class=\"br0\">(</span>T0, T1, k, r2<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%4d<span class=\"es0\">\\t</span>#{'%9.3f' * 7}<span class=\"es0\">\\n</span>\"</span>,<br/>                 r2<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>,<br/>                 r2<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"br0\">(</span> r2<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> an<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> <span class=\"nu0\">100</span>,<br/>                 r5<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"br0\">(</span> r5<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> an<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> <span class=\"nu0\">100</span>,<br/>                r10<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"br0\">(</span>r10<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> an<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> <span class=\"nu0\">100</span>,<br/>                an<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Smalltalk", "loc": 14, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">ODESolver</span>&gt;&gt;eulerOf: <span class=\"re5\">f</span> init: <span class=\"re5\">y0</span> from: <span class=\"re5\">a</span> to: <span class=\"re5\">b</span> step: <span class=\"re5\">h</span><br/>\t|<span class=\"re3\"> t y </span>|<br/>\t<span class=\"re6\">t</span> <span class=\"sy0\">:=</span> <span class=\"re5\">a</span>.<br/>\t<span class=\"re5\">y</span> <span class=\"sy0\">:=</span> <span class=\"re5\">y0</span>.<br/>\t<span class=\"br0\">[</span> <span class=\"re5\">t</span> &lt; b <span class=\"br0\">]</span><br/>\t\twhileTrue: <span class=\"br0\">[</span> <br/>\t\t\t<span class=\"re0\">Transcript</span><br/>\t\t\t\tshow: <span class=\"re5\">t</span> asString, <span class=\"st0\">' '</span> , <span class=\"br0\">(</span><span class=\"re5\">y</span> printShowingDecimalPlaces: <span class=\"re5\">3</span><span class=\"br0\">)</span>;<br/>\t\t\t\tcr.<br/>\t\t\t<span class=\"re5\">t</span> <span class=\"sy0\">:=</span> <span class=\"re5\">t</span> + <span class=\"re5\">h</span>.<br/>\t\t\t<span class=\"re5\">y</span> <span class=\"sy0\">:=</span> <span class=\"re5\">y</span> + <span class=\"br0\">(</span><span class=\"re5\">h</span> * <span class=\"br0\">(</span><span class=\"re5\">f</span> value: <span class=\"re5\">t</span> value: <span class=\"re5\">y</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"re0\">ODESolver</span> new eulerOf: <span class=\"br0\">[</span>:<span class=\"re5\">time</span>\u00a0:<span class=\"re5\">temp</span>| -<span class=\"re5\">0</span>.<span class=\"re5\">07</span> * <span class=\"br0\">(</span><span class=\"re5\">temp</span> - <span class=\"re5\">20</span><span class=\"br0\">)</span><span class=\"br0\">]</span>  init: <span class=\"re5\">100</span> from: <span class=\"re5\">0</span> to: <span class=\"re5\">100</span> step: <span class=\"re5\">10</span><br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 9, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> euler <span class=\"br0\">{</span>f y0 a b h<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"computing $f over <span class=\"es0\">\\[</span>$a..$b<span class=\"es0\">\\]</span>, step $h\"</span><br/>    <span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>double<span class=\"br0\">(</span><span class=\"re0\">$y0</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> t <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>double<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$t</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$b</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> t <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$t</span> + <span class=\"re0\">$h</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"%.3f<span class=\"es0\">\\t</span>%.3f\"</span> <span class=\"re0\">$t</span> <span class=\"re0\">$y</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span> + <span class=\"re0\">$h</span> <span class=\"sy0\">*</span> double<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re0\">$f</span> <span class=\"re0\">$t</span> <span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"done\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "XPL0", "loc": 38, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;  \\intrinsic 'code' declarations<br/>\u00a0<br/>proc Euler(Step);       \\Display cooling temperatures using Euler's method<br/>int  Step;<br/>int  Time;  real Temp;<br/>[Text(0, \"Step \");  IntOut(0, Step);  Text(0, \" \");<br/>Time:= 0;  Temp:= 100.0;<br/>repeat  if rem(Time/10) = 0 then RlOut(0, Temp);<br/>        Temp:= Temp + float(Step) * (-0.07*(Temp-20.0));<br/>        Time:= Time + Step;<br/>until   Time &gt; 100;<br/>CrLf(0);<br/>];<br/>\u00a0<br/>real Time, Temp;<br/>[Format(6,0);                   \\display time heading<br/>Text(0, \"Time   \");<br/>Time:= 0.0;<br/>while Time &lt;= 100.1 do          \\(.1 avoids possible rounding error)<br/>        [RlOut(0, Time);<br/>        Time:= Time + 10.0;<br/>        ];<br/>CrLf(0);<br/>\u00a0<br/>Format(3,2);                    \\display cooling temps using differential eqn.<br/>Text(0, \"Dif eq \");             \\ dTemp(time)/dtime = -k*?Temp<br/>Time:= 0.0;<br/>while Time &lt;= 100.1 do<br/>        [Temp:= 20.0 + (100.0-20.0) * Exp(-0.07*Time);<br/>        RlOut(0, Temp);<br/>        Time:= Time + 10.0;<br/>        ];<br/>CrLf(0);<br/>\u00a0<br/>Euler(2);                       \\display cooling temps for various time steps<br/>Euler(5);<br/>Euler(10);<br/>]</pre>"}, {"lang": "zkl", "loc": 25, "block": "<pre class=\"text highlighted_source\">const FMT=\"\u00a0%7.3f\";<br/>\u00a0<br/>fcn ivp_euler(f,y,step,end_t){<br/>   print(\" Step\u00a0%2d: \".fmt(step));<br/>   foreach t in ([0..end_t,step]){<br/>      if (t\u00a0% 10 == 0) print(FMT.fmt(y));<br/>      y += f(t,y) * step;<br/>   }<br/>   println();<br/>}<br/>\u00a0<br/>fcn analytic{<br/>   print(\"    Time: \");<br/>   foreach t in  ([0..100,10]){ print(\"\u00a0%7g\".fmt(t)) }<br/>   print(\"\\nAnalytic: \");<br/>   foreach t in ([0..100,10]){ print(FMT.fmt(20.0 + 80.0 * (-0.07 * t).exp())) }<br/>   println();<br/>}<br/>\u00a0<br/>fcn cooling(_,temp){ return(-0.07 * (temp - 20)) }<br/>\u00a0<br/>analytic();<br/>ivp_euler(cooling, 100.0, 2,  100);<br/>ivp_euler(cooling, 100.0, 5,  100);<br/>ivp_euler(cooling, 100.0, 10, 100);</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 3, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">LET</span> d$=<span class=\"st0\">\"-0.07*(y-20)\"</span>: <span class=\"kw1\">LET</span> y=<span class=\"nu0\">100</span>: <span class=\"kw1\">LET</span> a=<span class=\"nu0\">0</span>: <span class=\"kw1\">LET</span> b=<span class=\"nu0\">100</span>: <span class=\"kw1\">LET</span> s=<span class=\"nu0\">10</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> t=a<br/><span class=\"nu0\">30</span> <span class=\"kw1\">IF</span> t&lt;=b <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> t;TAB <span class=\"nu0\">10</span>;y: <span class=\"kw1\">LET</span> y=y+s*<span class=\"kw3\">VAL</span> d$: <span class=\"kw1\">LET</span> t=t+s: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">30</span></pre>"}]}