{"task": "Greatest_subsequential_sum", "blocks": [{"lang": "Ada", "loc": 38, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Max_Subarray <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">type</span> Int_Array <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Integer;<br/>   Empty_Error\u00a0: <span class=\"kw1\">Exception</span>;<br/>   <span class=\"kw3\">function</span> Max<span class=\"br0\">(</span>Item\u00a0: Int_Array<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Int_Array <span class=\"kw1\">is</span><br/>      Start\u00a0: Positive;<br/>      Finis\u00a0: Positive;<br/>      Max_Sum\u00a0: Integer\u00a0:= Integer'First;<br/>      Sum\u00a0: Integer;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> Item'Length = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         <span class=\"kw3\">raise</span> Empty_Error;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>\u00a0<br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Item'<span class=\"kw3\">range</span> <span class=\"kw1\">loop</span><br/>         Sum\u00a0:= <span class=\"nu0\">0</span>;<br/>         <span class=\"kw1\">for</span> J <span class=\"kw3\">in</span> I..<span class=\"me1\">Item</span>'Last <span class=\"kw1\">loop</span><br/>            Sum\u00a0:= Sum + Item<span class=\"br0\">(</span>J<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">if</span> Sum &gt; Max_Sum <span class=\"kw1\">then</span><br/>               Max_Sum\u00a0:= Sum;<br/>               Start\u00a0:= I;<br/>               Finis\u00a0:= J;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Item<span class=\"br0\">(</span>Start..<span class=\"me1\">Finis</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Max;<br/>   A\u00a0: Int_Array\u00a0:= <span class=\"br0\">(</span>-<span class=\"nu0\">1</span>, -<span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, -<span class=\"nu0\">2</span>, -<span class=\"nu0\">1</span>, <span class=\"nu0\">4</span>, -<span class=\"nu0\">4</span>, <span class=\"nu0\">2</span>, -<span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>   B\u00a0: Int_Array\u00a0:= Max<span class=\"br0\">(</span>A<span class=\"br0\">)</span>;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> B'<span class=\"kw3\">range</span> <span class=\"kw1\">loop</span><br/>      Put_Line<span class=\"br0\">(</span>Integer'Image<span class=\"br0\">(</span>B<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">exception</span><br/>   <span class=\"kw3\">when</span> Empty_Error =&gt;<br/>      Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"Array being analyzed has no elements.\"</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Max_Subarray;</pre>"}, {"lang": "ALGOL 68", "loc": 29, "block": "<pre class=\"algol68 highlighted_source\">main<span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>        <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">INT</span> a <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"sy1\">-</span>1 <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>2 <span class=\"sy1\">,</span> 3 <span class=\"sy1\">,</span> 5 <span class=\"sy1\">,</span> 6 <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>2 <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>1 <span class=\"sy1\">,</span> 4 <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>4 <span class=\"sy1\">,</span> 2 <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>        <span class=\"kw3\">INT</span> begin max<span class=\"sy1\">,</span> end max<span class=\"sy1\">,</span> max sum<span class=\"sy1\">,</span> sum<span class=\"sy1\">;</span><br/>\u00a0<br/>        sum <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>        begin max <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>        end max <span class=\"sy1\">:=</span> <span class=\"sy1\">-</span>1<span class=\"sy1\">;</span><br/>        max sum <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>\u00a0<br/>\u00a0<br/>        <span class=\"kw2\">FOR</span> begin <span class=\"kw2\">FROM</span> <span class=\"kw8\">LWB</span> a <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> a <span class=\"kw2\">DO</span><br/>                sum <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>                <span class=\"kw2\">FOR</span> end <span class=\"kw2\">FROM</span> begin <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> a <span class=\"kw2\">DO</span><br/>                        sum <span class=\"sy1\">+:=</span> a<span class=\"br0\">[</span>end<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>                        <span class=\"kw2\">IF</span> sum <span class=\"sy1\">&gt;</span> max sum <span class=\"kw2\">THEN</span><br/>                                max sum <span class=\"sy1\">:=</span> sum<span class=\"sy1\">;</span><br/>                                begin max <span class=\"sy1\">:=</span> begin<span class=\"sy1\">;</span><br/>                                end max <span class=\"sy1\">:=</span> end<br/>                        <span class=\"kw2\">FI</span><br/>                <span class=\"kw2\">OD</span><br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/>        <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> begin max <span class=\"kw2\">TO</span> end max <span class=\"kw2\">DO</span><br/>                <span class=\"kw22\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">OD</span><br/>\u00a0<br/><span class=\"br0\">)</span></pre>"}, {"lang": "ATS", "loc": 73, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(*<br/>** This one is<br/>** translated into ATS from the Ocaml entry<br/>*)<br/>\u00a0<br/>(* ****** ****** *)<br/>//<br/>// How to compile:<br/>// patscc -DATS_MEMALLOC_LIBC -o maxsubseq maxsubseq.dats<br/>//<br/>(* ****** ****** *)<br/>//<br/>#include<br/>\"share/atspre_staload.hats\"<br/>//<br/>(* ****** ****** *)<br/>\u00a0<br/>typedef ints = List0(int)<br/>\u00a0<br/>(* ****** ****** *)<br/>\u00a0<br/>fun<br/>maxsubseq<br/>  (xs: ints): (int, ints) = let<br/>//<br/>fun<br/>loop<br/>(<br/>  sum: int, seq: ints<br/>, maxsum: int, maxseq: ints, xs: ints<br/>)\u00a0: (int, ints) =<br/>(<br/>case+ xs of<br/>| nil () =&gt;<br/>  (<br/>    maxsum<br/>  , list_vt2t(list_reverse(maxseq))<br/>  ) (* end of [nil] *)<br/>| cons (x, xs) =&gt; let<br/>    val sum = sum + x<br/>    and seq = cons (x, seq)<br/>  in<br/>    if sum &lt; 0<br/>      then loop (0, nil, maxsum, maxseq, xs)<br/>      else (<br/>        if sum &gt; maxsum<br/>          then loop (sum, seq, sum, seq, xs)<br/>          else loop (sum, seq, maxsum, maxseq, xs)<br/>      ) (* end of [else] *)<br/>  end // end of [cons]<br/>)<br/>//<br/>in<br/>  loop (0, nil, 0, nil, xs)<br/>end // end of [maxsubseq]<br/>\u00a0<br/>implement<br/>main0 () = () where<br/>{<br/>val<br/>(maxsum<br/>,maxseq) =<br/>maxsubseq<br/>(<br/>  $list{int}(~1,~2,3,5,6,~2,~1,4,~4,2,~1)<br/>)<br/>//<br/>val () = println! (\"maxsum = \", maxsum)<br/>val () = println! (\"maxseq = \", maxseq)<br/>//<br/>} (* end of [main0] *)<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 11, "block": "<pre class=\"autohotkey highlighted_source\">seq <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><br/>max <span class=\"sy0\">:=</span> sum <span class=\"sy0\">:=</span> start <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> seq<span class=\"sy0\">,</span> `<span class=\"sy0\">,</span><br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>max <span class=\"sy0\">&lt;</span> sum<span class=\"sy0\">+=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"br0\">)</span><br/>      max <span class=\"sy0\">:=</span> sum<span class=\"sy0\">,</span> a <span class=\"sy0\">:=</span> start<span class=\"sy0\">,</span> b <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/>   <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> sum <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><br/>      sum <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> start <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><br/><span class=\"co1\">; read out the best subsequence</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> seq<span class=\"sy0\">,</span> `<span class=\"sy0\">,</span><br/>   s <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">&gt;</span> a <span class=\"sy0\">&amp;&amp;</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">&lt;=</span> b\u00a0? <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"st0\">\",\"</span>\u00a0: <span class=\"st0\">\"\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"Max = \"</span> max <span class=\"st0\">\"`n[\"</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"st0\">\"]\"</span></pre>"}, {"lang": "AutoIt", "loc": 38, "block": "<pre class=\"autoit highlighted_source\">\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>GREAT_SUB<span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><br/>GREAT_SUB<span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><br/>GREAT_SUB<span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Func</span></a> GREAT_SUB<span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Local</span></a> <span class=\"re0\">$iSUM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$iBEGIN_MAX</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$iEND_MAX</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$iMAX_SUM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">For</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/UBound.htm\"><span class=\"kw3\">UBound</span></a><span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\t\t<span class=\"re0\">$iSUM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">For</span></a> <span class=\"re0\">$k</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/UBound.htm\"><span class=\"kw3\">UBound</span></a><span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"re0\">$iSUM</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><br/>\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$iSUM</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$iMAX_SUM</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t\t\t<span class=\"re0\">$iMAX_SUM</span> <span class=\"sy0\">=</span> <span class=\"re0\">$iSUM</span><br/>\t\t\t\t<span class=\"re0\">$iEND_MAX</span> <span class=\"sy0\">=</span> <span class=\"re0\">$k</span><br/>\t\t\t\t<span class=\"re0\">$iBEGIN_MAX</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span><br/>\t\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"&gt; Array: [\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">For</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/UBound.htm\"><span class=\"kw3\">UBound</span></a><span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"+\"</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;&gt;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/UBound.htm\"><span class=\"kw3\">UBound</span></a><span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"]\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@CRLF</span></span></a> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"+&gt;Maximal subsequence: [\"</span><span class=\"br0\">)</span><br/>\t<span class=\"re0\">$iSUM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">For</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$iBEGIN_MAX</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <span class=\"re0\">$iEND_MAX</span><br/>\t\t<span class=\"re0\">$iSUM</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"+\"</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"re0\">$iArray</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"re0\">$iEND_MAX</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/ConsoleWrite.htm\"><span class=\"kw3\">ConsoleWrite</span></a><span class=\"br0\">(</span><span class=\"st0\">\"]\"</span> <span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@CRLF</span></span></a> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"!&gt;SUM of subsequence: \"</span> <span class=\"sy0\">&amp;</span> <span class=\"re0\">$iSUM</span> <span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@CRLF</span></span></a><span class=\"br0\">)</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndFunc</span></a>   <span class=\"co0\">;==&gt;GREAT_SUB</span><br/>\u00a0</pre>"}, {"lang": "AWK", "loc": 28, "block": "<pre class=\"awk highlighted_source\"><span class=\"co1\"># Finds the subsequence of ary[1] to ary[len] with the greatest sum.</span><br/><span class=\"co1\"># Sets subseq[1] to subseq[n] and returns n. Also sets subseq[\"sum\"].</span><br/><span class=\"co1\"># An empty subsequence has sum 0.</span><br/><span class=\"kw6\">function</span> maxsubseq<span class=\"br0\">(</span>subseq, ary, len,    b, bp, bs, c, cp, i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tb = <span class=\"nu0\">0</span>\t\t<span class=\"co1\"># best sum</span><br/>\tc = <span class=\"nu0\">0</span>\t\t<span class=\"co1\"># current sum</span><br/>\tbp = <span class=\"nu0\">0</span>\t\t<span class=\"co1\"># position of best subsequence</span><br/>\tbn = <span class=\"nu0\">0</span>\t\t<span class=\"co1\"># length of best subsequence</span><br/>\tcp = <span class=\"nu0\">1</span>\t\t<span class=\"co1\"># position of current subsequence</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i = <span class=\"nu0\">1</span>; i <span class=\"sy2\">&lt;=</span> len; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tc <span class=\"sy3\">+</span>= ary<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy2\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tc = <span class=\"nu0\">0</span><br/>\t\t\tcp = i <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy2\">&gt;</span> b<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tb = c<br/>\t\t\tbp = cp<br/>\t\t\tbn = i <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"sy3\">-</span> cp<br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i = <span class=\"nu0\">1</span>; i <span class=\"sy2\">&lt;=</span> bn; i<span class=\"sy3\">++</span><span class=\"br0\">)</span><br/>\t\tsubseq<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = ary<span class=\"br0\">[</span>bp <span class=\"sy3\">+</span> i <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>\tsubseq<span class=\"br0\">[</span><span class=\"st0\">\"sum\"</span><span class=\"br0\">]</span> = b<br/>\t<span class=\"kw6\">return</span> bn<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BBC BASIC", "loc": 36, "block": "<pre class=\"text highlighted_source\">      DIM A%(11)\u00a0: A%() = 0, 1, 2, -3, 3, -1, 0, -4, 0, -1, -4, 2<br/>      PRINT FNshowarray(A%()) \" -&gt; \" FNmaxsubsequence(A%())<br/>      DIM B%(10)\u00a0: B%() = -1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1<br/>      PRINT FNshowarray(B%()) \" -&gt; \" FNmaxsubsequence(B%())<br/>      DIM C%(4)\u00a0: C%() = -1, -2, -3, -4, -5<br/>      PRINT FNshowarray(C%()) \" -&gt; \" FNmaxsubsequence(C%())<br/>      END<br/>\u00a0<br/>      DEF FNmaxsubsequence(a%())<br/>      LOCAL a%, b%, i%, j%, m%, s%, a$<br/>      a% = 1<br/>      FOR i% = 0 TO DIM(a%(),1)<br/>        s% = 0<br/>        FOR j% = i% TO DIM(a%(),1)<br/>          s% += a%(j%)<br/>          IF s% &gt; m% THEN<br/>            m% = s%<br/>            a% = i%<br/>            b% = j%<br/>          ENDIF<br/>        NEXT<br/>      NEXT i%<br/>      IF a% &gt; b% THEN = \"[]\"<br/>      a$ = \"[\"<br/>      FOR i% = a% TO b%<br/>        a$ += STR$(a%(i%)) + \", \"<br/>      NEXT<br/>      = LEFT$(LEFT$(a$)) + \"]\"<br/>\u00a0<br/>      DEF FNshowarray(a%())<br/>      LOCAL i%, a$<br/>      a$ = \"[\"<br/>      FOR i% = 0 TO DIM(a%(),1)<br/>        a$ += STR$(a%(i%)) + \", \"<br/>      NEXT<br/>      = LEFT$(LEFT$(a$)) + \"]\"</pre>"}, {"lang": "Component Pascal", "loc": 47, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> OvctGreatestSubsequentialSum;<br/><span class=\"kw1\">IMPORT</span> StdLog<span class=\"sy0\">,</span> Strings<span class=\"sy0\">,</span> Args;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Gss<span class=\"br0\">(</span>iseq<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">INTEGER</span>;OUT start<span class=\"sy0\">,</span> end<span class=\"sy0\">,</span> maxsum<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">VAR</span><br/>\ti<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>sum<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>\ti <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; maxsum <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; start <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; end <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/>\t<span class=\"kw1\">WHILE</span> i &lt; <span class=\"kw3\">LEN</span><span class=\"br0\">(</span>iseq<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>\t\tsum <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; j <span class=\"sy0\">:=</span> i;<br/>\t\t<span class=\"kw1\">WHILE</span> j &lt; <span class=\"kw3\">LEN</span><span class=\"br0\">(</span>iseq<span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>\t\t\t<span class=\"kw3\">INC</span><span class=\"br0\">(</span>sum <span class=\"sy0\">,</span>iseq<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\t\t\t<span class=\"kw1\">IF</span> sum &gt; maxsum <span class=\"kw1\">THEN</span><br/>\t\t\t\tmaxsum <span class=\"sy0\">:=</span> sum;<br/>\t\t\t\tstart <span class=\"sy0\">:=</span> i;<br/>\t\t\t\tend <span class=\"sy0\">:=</span> j<br/>\t\t\t<span class=\"kw1\">END</span>;<br/>\t\t\t<span class=\"kw3\">INC</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>;<br/>\t\t<span class=\"kw1\">END</span>;<br/>\t\t<span class=\"kw3\">INC</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">END</span><br/><span class=\"kw1\">END</span> Gss;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Do<span class=\"sy0\">*</span>;<br/><span class=\"kw1\">VAR</span><br/>\tp<span class=\"sy0\">:</span> Args.<span class=\"me1\">Params</span>;<br/>\tiseq<span class=\"sy0\">:</span> <span class=\"kw1\">POINTER</span> <span class=\"kw1\">TO</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">INTEGER</span>;<br/>\ti<span class=\"sy0\">,</span> res<span class=\"sy0\">,</span> start<span class=\"sy0\">,</span> end<span class=\"sy0\">,</span> sum<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>\tArgs.<span class=\"me1\">Get</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span>; <span class=\"coMULTI\">(* Get Params *)</span><br/>\t<span class=\"kw3\">NEW</span><span class=\"br0\">(</span>iseq<span class=\"sy0\">,</span>p.<span class=\"me1\">argc</span><span class=\"br0\">)</span>;<br/>\t<span class=\"coMULTI\">(* Transform params to INTEGERs *)</span><br/>\t<span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> p.<span class=\"me1\">argc</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>\t\tStrings.<span class=\"me1\">StringToInt</span><span class=\"br0\">(</span>p.<span class=\"me1\">args</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span>iseq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span>res<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">END</span>;<br/>\tGss<span class=\"br0\">(</span>iseq<span class=\"sy0\">,</span>start<span class=\"sy0\">,</span>end<span class=\"sy0\">,</span>sum<span class=\"br0\">)</span>;<br/>\tStdLog.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"br0\">)</span>;<br/>\t<span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> start <span class=\"kw1\">TO</span>  end <span class=\"kw1\">DO</span><br/>\t\tStdLog.<span class=\"me1\">Int</span><span class=\"br0\">(</span>iseq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\t\t<span class=\"kw1\">IF</span> i &lt; end <span class=\"kw1\">THEN</span> StdLog.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span> <span class=\"kw1\">END</span><br/>\t<span class=\"kw1\">END</span>;<br/>\tStdLog.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"]=\"</span><span class=\"br0\">)</span>;StdLog.<span class=\"me1\">Int</span><span class=\"br0\">(</span>sum<span class=\"br0\">)</span>;StdLog.<span class=\"me1\">Ln</span>;<br/><span class=\"kw1\">END</span> Do;<br/>\u00a0<br/><span class=\"kw1\">END</span> OvctGreatestSubsequentialSum.<br/>\u00a0</pre>"}, {"lang": "Bracmat", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(   0:?max<br/>  &amp;\u00a0:?seq<br/>  &amp;   -1 -2 3 5 6 -2 -1 4 -4 2 -1<br/>   \u00a0:  \u00a0?<br/>        [%(   (<br/>              =   s sum<br/>                .   ( sum<br/>                    =   A<br/>                      .  \u00a0!arg:%?A\u00a0?arg&amp;!A+sum$!arg<br/>                        | 0<br/>                    )<br/>                  &amp; (   sum$!sjt:&gt;!max:?max<br/>                      &amp;\u00a0!sjt:?seq<br/>                    |<br/>                    )<br/>              )<br/>            $<br/>          &amp; ~<br/>          )<br/>       \u00a0?<br/>|\u00a0!seq<br/>)<br/>\u00a0</pre>"}, {"lang": "C", "loc": 48, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include \"stdio.h\"</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> Range <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> start<span class=\"sy0\">,</span> end<span class=\"sy0\">,</span> sum<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> Range<span class=\"sy0\">;</span><br/>\u00a0<br/>Range maxSubseq<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> sequence<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> maxSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> thisSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> start <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> j<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        thisSum <span class=\"sy0\">+=</span> sequence<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>thisSum <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            i <span class=\"sy0\">=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            thisSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>thisSum <span class=\"sy0\">&gt;</span> maxSum<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            maxSum <span class=\"sy0\">=</span> thisSum<span class=\"sy0\">;</span><br/>            start <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            end   <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Range r<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>start <span class=\"sy0\">&lt;=</span> end <span class=\"sy0\">&amp;&amp;</span> start <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> end <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        r.<span class=\"me1\">start</span> <span class=\"sy0\">=</span> start<span class=\"sy0\">;</span><br/>        r.<span class=\"me1\">end</span> <span class=\"sy0\">=</span> end <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        r.<span class=\"me1\">sum</span> <span class=\"sy0\">=</span> maxSum<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        r.<span class=\"me1\">start</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        r.<span class=\"me1\">end</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        r.<span class=\"me1\">sum</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> r<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argc<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>argv<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> a<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">,</span> <span class=\"nu0\">3</span> <span class=\"sy0\">,</span> <span class=\"nu0\">5</span> <span class=\"sy0\">,</span> <span class=\"nu0\">6</span> <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span> <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> alength <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    Range r <span class=\"sy0\">=</span> maxSubseq<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> alength<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Max sum =\u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> r.<span class=\"me1\">sum</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> r.<span class=\"me1\">start</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> r.<span class=\"me1\">end</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d \"</span><span class=\"sy0\">,</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 89, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;utility&gt;   // for std::pair</span><br/><span class=\"co2\">#include &lt;iterator&gt;  // for std::iterator_traits</span><br/><span class=\"co2\">#include &lt;iostream&gt;  // for std::cout</span><br/><span class=\"co2\">#include &lt;ostream&gt;   // for output operator and std::endl</span><br/><span class=\"co2\">#include &lt;algorithm&gt; // for std::copy</span><br/><span class=\"co2\">#include &lt;iterator&gt;  // for std::output_iterator</span><br/>\u00a0<br/><span class=\"co1\">// Function template max_subseq</span><br/><span class=\"co1\">//</span><br/><span class=\"co1\">// Given a sequence of integers, find a subsequence which maximizes</span><br/><span class=\"co1\">// the sum of its elements, that is, the elements of no other single</span><br/><span class=\"co1\">// subsequence add up to a value larger than this one.</span><br/><span class=\"co1\">//</span><br/><span class=\"co1\">// Requirements:</span><br/><span class=\"co1\">// * ForwardIterator is a forward iterator</span><br/><span class=\"co1\">// * ForwardIterator's value_type is less-than comparable and addable</span><br/><span class=\"co1\">// * default-construction of value_type gives the neutral element</span><br/><span class=\"co1\">//   (zero)</span><br/><span class=\"co1\">// * operator+ and operator&lt; are compatible (i.e. if a&gt;zero and</span><br/><span class=\"co1\">//   b&gt;zero, then a+b&gt;zero, and if a&lt;zero and b&lt;zero, then a+b&lt;zero)</span><br/><span class=\"co1\">// * [begin,end) is a valid range</span><br/><span class=\"co1\">//</span><br/><span class=\"co1\">// Returns:</span><br/><span class=\"co1\">//   a pair of iterators describing the begin and end of the</span><br/><span class=\"co1\">//   subsequence</span><br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">typename</span> ForwardIterator<span class=\"sy1\">&gt;</span><br/> std<span class=\"sy4\">::</span><span class=\"me2\">pair</span><span class=\"sy1\">&lt;</span>ForwardIterator, ForwardIterator<span class=\"sy1\">&gt;</span><br/> max_subseq<span class=\"br0\">(</span>ForwardIterator begin, ForwardIterator end<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">typedef</span> <span class=\"kw2\">typename</span> std<span class=\"sy4\">::</span><span class=\"me2\">iterator_traits</span><span class=\"sy1\">&lt;</span>ForwardIterator<span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">value_type</span><br/>    value_type<span class=\"sy4\">;</span><br/>\u00a0<br/>  ForwardIterator seq_begin <span class=\"sy1\">=</span> begin, seq_end <span class=\"sy1\">=</span> seq_begin<span class=\"sy4\">;</span><br/>  value_type seq_sum <span class=\"sy1\">=</span> value_type<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  ForwardIterator current_begin <span class=\"sy1\">=</span> begin<span class=\"sy4\">;</span><br/>  value_type current_sum <span class=\"sy1\">=</span> value_type<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  value_type zero <span class=\"sy1\">=</span> value_type<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>ForwardIterator iter <span class=\"sy1\">=</span> begin<span class=\"sy4\">;</span> iter <span class=\"sy3\">!</span><span class=\"sy1\">=</span> end<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>iter<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    value_type value <span class=\"sy1\">=</span> <span class=\"sy2\">*</span>iter<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>zero <span class=\"sy1\">&lt;</span> value<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>current_sum <span class=\"sy1\">&lt;</span> zero<span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span><br/>        current_sum <span class=\"sy1\">=</span> zero<span class=\"sy4\">;</span><br/>        current_begin <span class=\"sy1\">=</span> iter<span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>seq_sum <span class=\"sy1\">&lt;</span> current_sum<span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span><br/>        seq_begin <span class=\"sy1\">=</span> current_begin<span class=\"sy4\">;</span><br/>        seq_end <span class=\"sy1\">=</span> iter<span class=\"sy4\">;</span><br/>        seq_sum <span class=\"sy1\">=</span> current_sum<span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    current_sum <span class=\"sy2\">+</span><span class=\"sy1\">=</span> value<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>seq_sum <span class=\"sy1\">&lt;</span> current_sum<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    seq_begin <span class=\"sy1\">=</span> current_begin<span class=\"sy4\">;</span><br/>    seq_end <span class=\"sy1\">=</span> end<span class=\"sy4\">;</span><br/>    seq_sum <span class=\"sy1\">=</span> current_sum<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> std<span class=\"sy4\">::</span><span class=\"me2\">make_pair</span><span class=\"br0\">(</span>seq_begin, seq_end<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// the test array</span><br/><span class=\"kw4\">int</span> array<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"br0\">{</span> <span class=\"sy2\">-</span><span class=\"nu0\">1</span>, <span class=\"sy2\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"sy2\">-</span><span class=\"nu0\">2</span>, <span class=\"sy2\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">4</span>, <span class=\"sy2\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">2</span>, <span class=\"sy2\">-</span><span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">// function template to find the one-past-end pointer to the array</span><br/><span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">typename</span> T, <span class=\"kw4\">int</span> N<span class=\"sy1\">&gt;</span> <span class=\"kw4\">int</span><span class=\"sy2\">*</span> end<span class=\"br0\">(</span>T <span class=\"br0\">(</span><span class=\"sy3\">&amp;</span>arr<span class=\"br0\">)</span><span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> arr<span class=\"sy2\">+</span>N<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"co1\">// find the subsequence</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">pair</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy2\">*</span>, <span class=\"kw4\">int</span><span class=\"sy2\">*</span><span class=\"sy1\">&gt;</span> seq <span class=\"sy1\">=</span> max_subseq<span class=\"br0\">(</span>array, end<span class=\"br0\">(</span>array<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// output it</span><br/>  std<span class=\"sy4\">::</span><span class=\"me2\">copy</span><span class=\"br0\">(</span>seq.<span class=\"me1\">first</span>, seq.<span class=\"me1\">second</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ostream_iterator</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 33, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> Tests_With_Framework_4<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> integers <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"kw4\">int</span> length <span class=\"sy0\">=</span> integers<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> maxsum, beginmax, endmax, sum<span class=\"sy0\">;</span> maxsum <span class=\"sy0\">=</span> beginmax <span class=\"sy0\">=</span> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> endmax <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> length<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                sum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> length<span class=\"sy0\">;</span> k<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    sum <span class=\"sy0\">+=</span> integers<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>sum <span class=\"sy0\">&gt;</span> maxsum<span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        maxsum <span class=\"sy0\">=</span> sum<span class=\"sy0\">;</span><br/>                        beginmax <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>                        endmax <span class=\"sy0\">=</span> k<span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> beginmax<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> endmax<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>integers<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadKey</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 4, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defn</span> max<span class=\"sy0\">-</span>subseq<span class=\"sy0\">-</span>sum <span class=\"br0\">[</span>coll<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">take-while</span> seq <span class=\"br0\">(</span><span class=\"kw1\">iterate</span> <span class=\"kw1\">rest</span> coll<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; tails</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">mapcat</span> #<span class=\"br0\">(</span>reductions <span class=\"kw1\">conj</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; inits</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">apply</span> max<span class=\"sy0\">-</span>key #<span class=\"br0\">(</span><span class=\"kw1\">reduce</span> <span class=\"sy0\">+</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; max sum</span></pre>"}, {"lang": "CoffeeScript", "loc": 20, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>max_sum_seq = <span class=\"br0\">(</span>sequence<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"co1\"># This runs in linear time.</span><br/>  <span class=\"br0\">[</span>sum_start<span class=\"sy0\">,</span> sum<span class=\"sy0\">,</span> max_sum<span class=\"sy0\">,</span> max_start<span class=\"sy0\">,</span> max_end<span class=\"br0\">]</span> = <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">for</span> n<span class=\"sy0\">,</span> i <span class=\"kw1\">in</span> sequence<br/>    sum <span class=\"sy0\">+</span>= n<br/>    <span class=\"kw1\">if</span> sum <span class=\"sy0\">&gt;</span> max_sum<br/>      max_sum = sum<br/>      max_start = sum_start<br/>      max_end = i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">if</span> sum <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"co1\"># start new sequence</span><br/>      sum = <span class=\"nu0\">0</span><br/>      sum_start = i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  sequence<span class=\"br0\">[</span>max_start...<span class=\"me1\">max_end</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\"># tests</span><br/>console.<span class=\"me1\">log</span> max_sum_seq <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>console.<span class=\"me1\">log</span> max_sum_seq <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>console.<span class=\"me1\">log</span> max_sum_seq <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 19, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> max-subseq <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>best-sum <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>current-sum <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>end <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">;; determine the best sum, and the end of the max subsequence</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span>rest <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>i <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span>endp <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> current-sum <span class=\"br0\">(</span><span class=\"kw1\">max</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span>+ current-sum <span class=\"br0\">(</span>first <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> current-sum best-sum<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">setf</span> end i<br/>              best-sum current-sum<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">;; take the subsequence of list ending at end, and remove elements</span><br/>    <span class=\"co1\">;; from the beginning until the subsequence sums to best-sum.</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>sublist <span class=\"br0\">(</span>subseq <span class=\"kw1\">list</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>sum <span class=\"br0\">(</span>reduce #'+ sublist<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>start <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ start<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>sublist sublist <span class=\"br0\">(</span>rest sublist<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>sum sum <span class=\"br0\">(</span>- sum <span class=\"br0\">(</span>first sublist<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span>endp sublist<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">eql</span> sum best-sum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>values best-sum sublist start <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ end<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 30, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">inout</span><span class=\"br0\">(</span>T<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> maxSubseq<span class=\"br0\">(</span>T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">inout</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span> sequence<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> maxSum<span class=\"sy0\">,</span> thisSum<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> start<span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> j<span class=\"sy0\">,</span> <span class=\"kw4\">immutable</span> x<span class=\"sy0\">;</span> sequence<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        thisSum <span class=\"sy0\">+=</span> x<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>thisSum <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            i <span class=\"sy0\">=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            thisSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>thisSum <span class=\"sy0\">&gt;</span> maxSum<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            maxSum <span class=\"sy0\">=</span> thisSum<span class=\"sy0\">;</span><br/>            start <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            end   <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>start <span class=\"sy0\">&lt;=</span> end <span class=\"sy0\">&amp;&amp;</span> start <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> end <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> sequence<span class=\"br0\">[</span>start <span class=\"sy0\">..</span> <span class=\"me1\">end</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">const</span> a1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Maximal subsequence: \"</span><span class=\"sy0\">,</span> a1.<span class=\"me1\">maxSubseq</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">const</span> a2 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Maximal subsequence: \"</span><span class=\"sy0\">,</span> a2.<span class=\"me1\">maxSubseq</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 37, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'struct<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>struct result <span class=\"br0\">(</span>score starter<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; the score of  i in sequence ( .. i j ...)  is max (i , i + score (j))</span><br/><span class=\"co1\">;; to compute score of (a b .. x y z)\u00a0:</span><br/><span class=\"co1\">;; start with score(z) and compute scores of y , z , ..c, b , a.</span><br/><span class=\"co1\">;; this is O(n)</span><br/>\u00a0<br/><span class=\"co1\">;; return value of sub-sequence</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>max<span class=\"sy0\">-</span><span class=\"kw1\">max</span> <span class=\"kw1\">L</span> into: result<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> value <br/>\t<span class=\"br0\">(</span><span class=\"kw1\">if</span><br/>\t<span class=\"br0\">(</span>empty? <span class=\"kw1\">L</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span>Infinity<br/>\t<span class=\"br0\">(</span><span class=\"kw1\">max</span> <span class=\"br0\">(</span>first <span class=\"kw1\">L</span><span class=\"br0\">)</span>  <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>first <span class=\"kw1\">L</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>max<span class=\"sy0\">-</span><span class=\"kw1\">max</span> <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">L</span><span class=\"br0\">)</span> result <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span>when <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> value <span class=\"br0\">(</span>result<span class=\"sy0\">-</span>score result<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\t\t<span class=\"br0\">(</span>set<span class=\"sy0\">-</span>result<span class=\"sy0\">-</span>score<span class=\"sy0\">!</span> result value<span class=\"br0\">)</span> <span class=\"co1\">;; remember best score</span><br/>\t\t<span class=\"br0\">(</span>set<span class=\"sy0\">-</span>result<span class=\"sy0\">-</span>starter<span class=\"sy0\">!</span> result <span class=\"kw1\">L</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\">;; and its location</span><br/>\tvalue<span class=\"br0\">)</span> <br/>\u00a0<br/><span class=\"co1\">;; return (best-score (best sequence))</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>max<span class=\"sy0\">-</span>seq <span class=\"kw1\">L</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">define</span> best <span class=\"br0\">(</span>result <span class=\"sy0\">-</span>Infinity null<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>max<span class=\"sy0\">-</span><span class=\"kw1\">max</span> <span class=\"kw1\">L</span> into: best<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">define</span> score <span class=\"br0\">(</span>result<span class=\"sy0\">-</span>score best<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"br0\">(</span><span class=\"kw1\">list</span> score<br/>\t<span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"br0\">(</span>result<span class=\"sy0\">-</span>starter best<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t   #:break <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> score<span class=\"br0\">)</span><br/>\t\t\t   <span class=\"br0\">(</span><span class=\"kw1\">set!</span> score <span class=\"br0\">(</span><span class=\"sy0\">-</span> score n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t   n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"kw1\">L</span> '<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"nu0\">4</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>max<span class=\"sy0\">-</span>seq <span class=\"kw1\">L</span><span class=\"br0\">)</span><br/>    \u2192 <span class=\"br0\">(</span><span class=\"nu0\">15</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 11, "block": "<pre class=\"text highlighted_source\">defmodule Greatest do<br/>  def subseq_sum(list) do<br/>    limit = length(list) - 1<br/>    ij = for i &lt;- 0..limit, j &lt;- i..limit, do: {i,j}<br/>    Enum.reduce(ij, {0, []}, fn {i,j},{max, subseq} -&gt;<br/>      slice = Enum.slice(list, i..j)<br/>      sum = Enum.sum(slice)<br/>      if sum &gt; max, do: {sum, slice}, else: {max, subseq}<br/>    end)<br/>  end<br/>end</pre>"}, {"lang": "ERRE", "loc": 69, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>PROGRAM MAX_SUM<br/>\u00a0<br/>DIM A%[11],B%[10],C%[4]<br/>\u00a0<br/>!$DYNAMIC<br/>DIM P%[0]<br/>\u00a0<br/>PROCEDURE MAX_SUBSEQUENCE(P%[],N%-&gt;A$)<br/>      LOCAL A%,B%,I%,J%,M%,S%<br/>      A%=1<br/>      FOR I%=0 TO N% DO<br/>        S%=0<br/>        FOR J%=I% TO N% DO<br/>          S%+=P%[J%]<br/>          IF S%&gt;M% THEN<br/>            M%=S%<br/>            A%=I%<br/>            B%=J%<br/>          END IF<br/>        END FOR<br/>      END FOR<br/>      IF A%&gt;B% THEN A$=\"[]\" EXIT PROCEDURE END IF<br/>      A$=\"[\"<br/>      FOR I%=A% TO B% DO<br/>        A$+=STR$(P%[I%])+\",\"<br/>      END FOR<br/>      A$=LEFT$(A$,LEN(A$)-1)+\"]\"<br/>END PROCEDURE<br/>\u00a0<br/>PROCEDURE SHOW_ARRAY(P%[],N%-&gt;A$)<br/>      LOCAL I%<br/>      A$=\"[\"<br/>      FOR I%=0 TO N% DO<br/>        A$+=STR$(P%[I%])+\",\"<br/>      END FOR<br/>      A$=LEFT$(A$,LEN(A$)-1)+\"]\"<br/>END PROCEDURE<br/>\u00a0<br/>BEGIN<br/>\u00a0<br/>   A%[]=(0,1,2,-3,3,-1,0,-4,0,-1,-4,2)<br/>   N%=UBOUND(A%,1)<br/>  \u00a0!$DIM P%[N%]<br/>   SHOW_ARRAY(A%[],N%-&gt;A$)<br/>   PRINT(A$;\" -&gt; \";)<br/>   MAX_SUBSEQUENCE(A%[],N%-&gt;A$)<br/>   PRINT(A$)<br/>  \u00a0!$ERASE P%<br/>\u00a0<br/>   B%[]=(-1,-2,3,5,6,-2,-1,4,-4,2,-1)<br/>   N%=UBOUND(B%,1)<br/>  \u00a0!$DIM P%[N%]<br/>   SHOW_ARRAY(B%[],N%-&gt;A$)<br/>   PRINT(A$;\" -&gt; \";)<br/>   MAX_SUBSEQUENCE(B%[],N%-&gt;A$)<br/>   PRINT(A$)<br/>  \u00a0!$ERASE P%<br/>\u00a0<br/>   C%[]=(-1,-2,-3,-4,-5)<br/>   N%=UBOUND(C%,1)<br/>  \u00a0!$DIM P%[N%]<br/>   SHOW_ARRAY(C%[],N%-&gt;A$)<br/>   PRINT(A$;\" -&gt; \";)<br/>   MAX_SUBSEQUENCE(C%[],N%-&gt;A$)<br/>   PRINT(A$)<br/>  \u00a0!$ERASE P%<br/>END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Euler Math Toolbox", "loc": 25, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&gt;function\u00a0%maxsubs (v,n) ...<br/>$if n==1 then <br/>$  if (v[1]&lt;0) then return {zeros(1,0),zeros(1,0)}<br/>$  else return {v,v}; <br/>$  endif;<br/>$endif;<br/>${v1,v2}=%maxsubs(v[1:n-1],n-1);<br/>$m1=sum(v1); m2=sum(v2); m3=m2+v[n]; <br/>$if m3&gt;0 then v3=v2|v[n]; else v3=zeros(1,0); endif;<br/>$if m3&gt;m1 then return {v2|v[n],v3};<br/>$else return {v1,v3};<br/>$endif;<br/>$endfunction<br/>&gt;function maxsubs (v) ...<br/>${v1,v2}=%maxsubs(v,cols(v));<br/>$return v1<br/>$endfunction<br/>&gt;maxsubs([0, 1, 2, -3, 3, -1, 0, -4, 0, -1, -4])<br/> [ 0  1  2 ]<br/>&gt;maxsubs([-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1])<br/> [ 3  5  6  -2  -1  4 ]<br/>&gt;maxsubs([-1, -2, -3, -4, -5])<br/> Empty matrix of size 1x0<br/>\u00a0</pre>"}, {"lang": "E", "loc": 44, "block": "<pre class=\"e highlighted_source\">pragma.<span class=\"me1\">enable</span><span class=\"br0\">(</span><span class=\"st0\">\"accumulator\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> maxSubseq<span class=\"br0\">(</span>seq<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> size <span class=\"sy0\">:=</span> seq.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\"># Collect all intervals of indexes whose values are positive</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> intervals <span class=\"sy0\">:=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> intervals <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> first <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://wiki.erights.org/wiki/while\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>first <span class=\"sy0\">&lt;</span> size<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> next <span class=\"sy0\">:=</span> first<br/>      <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> seeing <span class=\"sy0\">:=</span> seq<span class=\"br0\">[</span>first<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>      <a href=\"http://wiki.erights.org/wiki/while\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>next <span class=\"sy0\">&lt;</span> size <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>seq<span class=\"br0\">[</span>next<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> seeing<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        next <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>      <span class=\"br0\">}</span><br/>      <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>seeing<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\"># record every positive interval</span><br/>        intervals with<span class=\"sy0\">=</span> first..<span class=\"sy0\">!</span>next<br/>      <span class=\"br0\">}</span><br/>      first <span class=\"sy0\">:=</span> next<br/>    <span class=\"br0\">}</span><br/>    intervals<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\"># For recording the best result found</span><br/>  <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> maxValue <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>  <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> maxInterval <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>..<span class=\"sy0\">!</span><span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"co1\"># Try all subsequences beginning and ending with such intervals.</span><br/>  <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> firstIntervalIx <span class=\"sy0\">=&gt;</span> firstInterval <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> intervals <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> lastInterval <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> intervals<span class=\"br0\">(</span>firstIntervalIx<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> interval <span class=\"sy0\">:=</span><br/>        <span class=\"br0\">(</span>firstInterval.<span class=\"me1\">getOptStart</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>..<span class=\"sy0\">!</span><span class=\"br0\">(</span>lastInterval.<span class=\"me1\">getOptBound</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> value <span class=\"sy0\">:=</span><br/>        <a href=\"http://wiki.erights.org/wiki/accum\"><span class=\"kw1\">accum</span></a> <span class=\"nu0\">0</span> <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> i <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> interval <span class=\"br0\">{</span> _ <span class=\"sy0\">+</span> seq<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>      <a href=\"http://wiki.erights.org/wiki/if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>value <span class=\"sy0\">&gt;</span> maxValue<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        maxValue <span class=\"sy0\">:=</span> value<br/>        maxInterval <span class=\"sy0\">:=</span> interval<br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  return <span class=\"br0\">[</span><span class=\"st0\">\"value\"</span> <span class=\"sy0\">=&gt;</span> maxValue<span class=\"sy0\">,</span><br/>          <span class=\"st0\">\"indexes\"</span> <span class=\"sy0\">=&gt;</span> maxInterval<span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Euphoria", "loc": 22, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">function</span> maxSubseq<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> s<span class=\"br0\">)</span><br/>    <span class=\"kw2\">integer</span> sum<span class=\"sy2\">,</span> maxsum<span class=\"sy2\">,</span> first<span class=\"sy2\">,</span> last<br/>    maxsum <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>    first <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><br/>    last <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        sum <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy1\">=</span> i <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>            sum <span class=\"sy1\">+=</span> s<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>            <span class=\"kw1\">if</span> sum &gt; maxsum <span class=\"kw1\">then</span><br/>                maxsum <span class=\"sy1\">=</span> sum<br/>                first <span class=\"sy1\">=</span> i<br/>                last <span class=\"sy1\">=</span> j<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>    <span class=\"kw1\">return</span> s<span class=\"br0\">[</span>first..last<span class=\"br0\">]</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"sy2\">?</span> maxSubseq<span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">2</span><span class=\"sy2\">,</span> <span class=\"nu0\">3</span><span class=\"sy2\">,</span> <span class=\"nu0\">5</span><span class=\"sy2\">,</span> <span class=\"nu0\">6</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">2</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"nu0\">4</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">4</span><span class=\"sy2\">,</span> <span class=\"nu0\">2</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"sy2\">?</span> maxSubseq<span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"sy2\">?</span> maxSubseq<span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">5</span><span class=\"sy2\">,</span> <span class=\"sy1\">-</span><span class=\"nu0\">3</span><span class=\"br0\">}</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 11, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> maxsubseq s <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> <span class=\"br0\">(</span>_, _, maxsum, maxseq<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">fold</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>sum, <span class=\"kw4\">seq</span>, maxsum, maxseq<span class=\"br0\">)</span> x <span class=\"sy0\">-&gt;</span><br/>            <span class=\"kw1\">let</span> <span class=\"br0\">(</span>sum, <span class=\"kw4\">seq</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>sum <span class=\"sy0\">+</span> x, x\u00a0:: <span class=\"kw4\">seq</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> sum <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span>, maxsum, maxseq<span class=\"br0\">)</span><br/>            <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> sum <span class=\"sy0\">&gt;</span> maxsum <span class=\"kw1\">then</span> <span class=\"br0\">(</span>sum, <span class=\"kw4\">seq</span>, sum, <span class=\"kw4\">seq</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">(</span>sum, <span class=\"kw4\">seq</span>, maxsum, maxseq<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span>, <span class=\"nu0\">0</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> s<br/>    <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">rev</span> maxseq<br/>\u00a0<br/>printfn <span class=\"st0\">\"%A\"</span> <span class=\"br0\">(</span>maxsubseq  <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">;</span> <span class=\"nu0\">3</span> <span class=\"sy0\">;</span> <span class=\"nu0\">5</span> <span class=\"sy0\">;</span> <span class=\"nu0\">6</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span> <span class=\"sy0\">;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 9, "block": "<pre class=\"text highlighted_source\">USING: kernel locals math math.order sequences\u00a0;<br/>\u00a0<br/>:: max-with-index ( elt0 ind0 elt1 ind1 -- elt ind )<br/>elt0 elt1 &lt;  [ elt1 ind1 ] [ elt0 ind0 ] if\u00a0;<br/>: last-of-max ( accseq -- ind ) -1 swap -1 [ max-with-index ] reduce-index nip\u00a0;<br/>\u00a0<br/>: max-subseq ( seq -- subseq )<br/>dup 0 [ + 0 max ] accumulate swap suffix last-of-max head<br/>dup 0 [ + ] accumulate swap suffix [ neg ] map last-of-max tail\u00a0;</pre>"}, {"lang": "Forth", "loc": 23, "block": "<pre class=\"text highlighted_source\">2variable best<br/>variable best-sum<br/>\u00a0<br/>: sum ( array len -- sum )<br/>  0 -rot cells over + swap do i @ + cell +loop\u00a0;<br/>\u00a0<br/>: max-sub ( array len -- sub len )<br/>  over 0 best 2!  0 best-sum\u00a0!<br/>  dup 1 do                  \\ foreach length<br/>    2dup i - 1+ cells over + swap do   \\ foreach start<br/>      i j sum<br/>      dup best-sum @ &gt; if<br/>        best-sum\u00a0!<br/>        i j best 2!<br/>      else drop then<br/>    cell +loop<br/>  loop<br/>  2drop best <a class=\"__cf_email__\" data-cfemail=\"b684f6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0;<br/>\u00a0<br/>: .array  .\" [\" dup 0\u00a0?do over i cells + @ . loop .\" ] = \" sum .\u00a0;<br/>\u00a0<br/>create test  -1 , -2 , 3 , 5 , 6 , -2 , -1 , 4 , -4 , 2 , -1 ,<br/>create test2 -1 , -2 , 3 , 5 , 6 , -2 , -1 , 4 , -4 , 2 , 99 ,</pre>"}, {"lang": "Fortran", "loc": 16, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> MaxSubSeq<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">an</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span>an<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span>an,an<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">mix</span><br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, j<br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">m</span><br/>\u00a0<br/>  forall<span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>an,j<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>an<span class=\"br0\">)</span> mix<span class=\"br0\">(</span>i,j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> sum<span class=\"br0\">(</span>a<span class=\"br0\">(</span>i<span class=\"sy0\">:</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  m <span class=\"sy0\">=</span> <span class=\"kw4\">maxloc</span><span class=\"br0\">(</span>mix<span class=\"br0\">)</span><br/>  <span class=\"co1\">! a(m(1):m(2)) is the wanted subsequence</span><br/>  print <span class=\"sy0\">*</span>, a<span class=\"br0\">(</span>m<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>m<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> MaxSubSeq</pre>"}, {"lang": "FreeBASIC", "loc": 36, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> seq<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> = <span class=\"br0\">{</span>-<span class=\"nu0\">1</span> , -<span class=\"nu0\">2</span> , <span class=\"nu0\">3</span> , <span class=\"nu0\">5</span> , <span class=\"nu0\">6</span> , -<span class=\"nu0\">2</span> , -<span class=\"nu0\">1</span> , <span class=\"nu0\">4</span> , -<span class=\"nu0\">4</span> , <span class=\"nu0\">2</span> , -<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> i, j, sum, maxSum, first, last<br/>\u00a0<br/>maxSum = <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">For</span> i = <span class=\"kw1\">LBound</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span> <span class=\"kw1\">To</span> <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span><br/>  sum = <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">For</span> j = i <span class=\"kw1\">To</span> <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span><br/>    <span class=\"co1\">' only proper sub-sequences are considered</span><br/>    <span class=\"kw1\">If</span> i = <span class=\"kw1\">LBound</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span> AndAlso j = <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>    sum += seq<span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> sum &gt; maxSum <span class=\"kw1\">Then</span><br/>      maxSum = sum<br/>      first = i<br/>      last = j <br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Next</span> j<br/><span class=\"kw1\">Next</span> i<br/>\u00a0<br/><span class=\"kw1\">If</span> maxSum &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>  <span class=\"kw1\">Print</span> <span class=\"st0\">\"Maximum subsequence is from indices\"</span>; first; <span class=\"st0\">\" to\"</span>; last<br/>  <span class=\"kw1\">Print</span> <span class=\"st0\">\"Elements are\u00a0: \"</span>;<br/>  <span class=\"kw1\">For</span> i = first <span class=\"kw1\">To</span> last<br/>    <span class=\"kw1\">Print</span> seq<span class=\"br0\">(</span>i<span class=\"br0\">)</span>; <span class=\"st0\">\" \"</span>;<br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Print</span><br/>  <span class=\"kw1\">Print</span> <span class=\"st0\">\"Sum is\"</span>; maxSum<br/><span class=\"kw1\">Else</span><br/>  <span class=\"kw1\">Print</span> <span class=\"st0\">\"Maximum subsequence is the empty sequence which has a sum of 0\"</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Go", "loc": 36, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> gss<span class=\"sy1\">(</span>s <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">var</span> best<span class=\"sy1\">,</span> start<span class=\"sy1\">,</span> end<span class=\"sy1\">,</span> sum<span class=\"sy1\">,</span> sumStart <span class=\"kw4\">int</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> x <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> s <span class=\"sy1\">{</span><br/>        sum <span class=\"sy2\">+=</span> x<br/>        <span class=\"kw1\">switch</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">case</span> sum &gt; best<span class=\"sy1\">:</span><br/>            best <span class=\"sy2\">=</span> sum<br/>            start <span class=\"sy2\">=</span> sumStart<br/>            end <span class=\"sy2\">=</span> <span class=\"nu2\">i</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">case</span> sum &lt; <span class=\"nu0\">0</span><span class=\"sy1\">:</span><br/>            sum <span class=\"sy2\">=</span> <span class=\"nu0\">0</span><br/>            sumStart <span class=\"sy2\">=</span> <span class=\"nu2\">i</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> s<span class=\"sy1\">[</span>start<span class=\"sy1\">:</span>end<span class=\"sy1\">],</span> best<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> testCases <span class=\"sy2\">=</span> <span class=\"sy1\">[][]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><br/>    <span class=\"sy1\">{</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">},</span><br/>    <span class=\"sy1\">{</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">6</span><span class=\"sy1\">},</span><br/>    <span class=\"sy1\">{},</span><br/>    <span class=\"sy1\">{</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">},</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> testCases <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Input:  \"</span><span class=\"sy1\">,</span> c<span class=\"sy1\">)</span><br/>        subSeq<span class=\"sy1\">,</span> sum <span class=\"sy2\">:=</span> gss<span class=\"sy1\">(</span>c<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Sub seq:\"</span><span class=\"sy1\">,</span> subSeq<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Sum:    \"</span><span class=\"sy1\">,</span> sum<span class=\"sy1\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 10, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span>inits<span class=\"sy0\">,</span> tails<span class=\"sy0\">,</span> maximumBy<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a> <span class=\"br0\">(</span>comparing<span class=\"br0\">)</span><br/>\u00a0<br/>subseqs <span class=\"sy0\">::</span> <span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>subseqs <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concatMap\"><span class=\"kw3\">concatMap</span></a> inits <span class=\"sy0\">.</span> tails<br/>\u00a0<br/>maxsubseq <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a> a<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> a<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span>a<span class=\"br0\">]</span><br/>maxsubseq <span class=\"sy0\">=</span> maximumBy <span class=\"br0\">(</span>comparing <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a><span class=\"br0\">)</span> <span class=\"sy0\">.</span> subseqs<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span> maxsubseq <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre>"}, {"lang": "Icon and Unicon", "loc": 22, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>L1 <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span><span class=\"nu0\">6</span><span class=\"sy1\">,-</span><span class=\"nu0\">2</span><span class=\"sy1\">,-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,-</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>     <span class=\"co1\"># sample list</span><br/>L  <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">4</span><span class=\"sy1\">,-</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy1\">|||</span>L1             <span class=\"co1\"># prepend a local maximum into the mix</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span>ximage<span class=\"br0\">(</span>maxsubseq<span class=\"br0\">(</span>L<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">link</span> ximage      <span class=\"co1\"># to show lists</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> maxsubseq<span class=\"br0\">(</span>L<span class=\"br0\">)</span>                    <span class=\"co1\">#: return the subsequence of L with maximum positive sum </span><br/><span class=\"kw2\">local</span> i<span class=\"sy1\">,</span>maxglobal<span class=\"sy1\">,</span>maxglobalI<span class=\"sy1\">,</span>maxlocal<span class=\"sy1\">,</span>maxlocalI<br/>\u00a0<br/>maxglobal <span class=\"sy1\">:=</span> maxlocal <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span>                                           <span class=\"co1\"># global and local maxima</span><br/>\u00a0<br/><span class=\"kw1\">every</span> i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"sy1\">*</span>L <span class=\"kw1\">do</span>  <span class=\"br0\">{</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span>maxlocal <span class=\"sy1\">:=</span> max<span class=\"br0\">(</span>maxlocal <span class=\"sy1\">+</span>L<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <br/>      <span class=\"kw1\">if</span> <span class=\"sy1\">/</span>maxlocalI <span class=\"kw1\">then</span> maxlocalI <span class=\"sy1\">:=</span> <span class=\"br0\">[</span>i<span class=\"sy1\">,</span>i<span class=\"br0\">]</span> <span class=\"kw1\">else</span> maxlocalI<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> i   <span class=\"co1\"># local maxima subscripts</span><br/>   <span class=\"kw1\">else</span> maxlocalI <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span>                                           <span class=\"co1\"># reset subsequence</span><br/>   <span class=\"kw1\">if</span> maxglobal <span class=\"sy1\">&lt;:=</span> maxlocal <span class=\"kw1\">then</span>                                    <span class=\"co1\"># global maxima</span><br/>      maxglobalI <span class=\"sy1\">:=</span> <span class=\"kw4\">copy</span><span class=\"br0\">(</span>maxlocalI<span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/><span class=\"kw1\">return</span> L<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy1\">\\</span>maxglobalI<span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">:</span>maxglobalI<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>                        <span class=\"co1\"># return sub-sequence or empty list</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 5, "block": "<pre class=\"j highlighted_source\">maxss=: monad define<br/> AS =. <span class=\"nu0\">0</span>,; &lt;:/<a class=\"__cf_email__\" data-cfemail=\"bbc5fbd295\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>&amp;.&gt; #\\<span class=\"kw2\">y</span><br/> MX =. <span class=\"sy0\">(</span>= &gt;./<span class=\"sy0\">)</span> AS +/ . * <span class=\"kw2\">y</span><br/> <span class=\"kw2\">y</span> #~ {. MX#AS<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 57, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Scanner</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.ArrayList</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Sub<span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> indices<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span> array<span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">//the main set</span><br/>        Scanner in <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Scanner<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span><span class=\"br0\">(</span>in.<span class=\"me1\">hasNextLong</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> array.<span class=\"me1\">add</span><span class=\"br0\">(</span>in.<span class=\"me1\">nextLong</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">long</span> highSum<span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Along+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Long</span></a>.<span class=\"me1\">MIN_VALUE</span><span class=\"sy0\">;</span><span class=\"co1\">//start the sum at the lowest possible value</span><br/>        ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span> highSet<span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">//loop through all possible subarray sizes including 0</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> subSize<span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>subSize<span class=\"sy0\">&lt;=</span> array.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>subSize<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            indices<span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>subSize<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span> subSize<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span> indices<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">do</span><span class=\"br0\">{</span><br/>                <span class=\"kw4\">long</span> sum<span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"co1\">//this subarray sum variable</span><br/>                ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span> temp<span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">//this subarray</span><br/>                <span class=\"co1\">//sum it and save it</span><br/>                <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">long</span> index<span class=\"sy0\">:</span>indices<span class=\"br0\">)</span> <span class=\"br0\">{</span>sum<span class=\"sy0\">+=</span> array.<span class=\"me1\">get</span><span class=\"br0\">(</span>index<span class=\"br0\">)</span><span class=\"sy0\">;</span> temp.<span class=\"me1\">add</span><span class=\"br0\">(</span>array.<span class=\"me1\">get</span><span class=\"br0\">(</span>index<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span>sum <span class=\"sy0\">&gt;</span> highSum<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"co1\">//if we found a higher sum</span><br/>                    highSet<span class=\"sy0\">=</span> temp<span class=\"sy0\">;</span>    <span class=\"co1\">//keep track of it</span><br/>                    highSum<span class=\"sy0\">=</span> sum<span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><span class=\"kw1\">while</span><span class=\"br0\">(</span>nextIndices<span class=\"br0\">(</span>array<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">//while we haven't tested all subarrays</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Sum: \"</span> <span class=\"sy0\">+</span> highSum <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Set: \"</span> <span class=\"sy0\">+</span> <br/>        \t\thighSet<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co3\">/**<br/>     * Computes the next set of choices from the previous. The<br/>     * algorithm tries to increment the index of the final choice<br/>     * first. Should that fail (index goes out of bounds), it<br/>     * tries to increment the next-to-the-last index, and resets<br/>     * the last index to one more than the next-to-the-last.<br/>     * Should this fail the algorithm keeps starting at an earlier<br/>     * choice until it runs off the start of the choice list without<br/>     * Finding a legal set of indices for all the choices.<br/>     *<br/>     * @return true unless all choice sets have been exhausted.<br/>     * @author James Heliotis<br/>     */</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> nextIndices<span class=\"br0\">(</span>ArrayList<span class=\"sy0\">&lt;</span>Long<span class=\"sy0\">&gt;</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span> indices.<span class=\"me1\">length</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;--</span>i<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            indices<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">++;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j<span class=\"sy0\">=</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>j <span class=\"sy0\">&lt;</span> indices.<span class=\"me1\">length</span><span class=\"sy0\">;++</span>j<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>                indices<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">=</span> indices<span class=\"br0\">[</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"co1\">//reset the last failed try</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>indices<span class=\"br0\">[</span>indices.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> a.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"co1\">//if this try went out of bounds</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 25, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> MaximumSubsequence<span class=\"br0\">(</span>population<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> maxValue <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> subsequence <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> len <span class=\"sy0\">=</span> population.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> j <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> len<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">var</span> subsequence <span class=\"sy0\">=</span> population.<span class=\"me1\">slice</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">var</span> value <span class=\"sy0\">=</span> sumValues<span class=\"br0\">(</span>subsequence<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>value <span class=\"sy0\">&gt;</span> maxValue<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                maxValue <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>                greatest <span class=\"sy0\">=</span> subsequence<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> greatest<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> sumValues<span class=\"br0\">(</span>arr<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> result <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> len <span class=\"sy0\">=</span> arr.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        result <span class=\"sy0\">+=</span> arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "jq", "loc": 11, "block": "<pre class=\"text highlighted_source\">def subarray_sum:<br/>  . as $arr<br/>  | reduce range(0; length) as $i<br/>      ( {\"first\": length, \"last\": 0, \"curr\": 0, \"curr_first\": 0, \"max\": 0};<br/>        $arr[$i] as $e<br/>        | (.curr + $e) as $curr<br/>        | . + (if $e &gt; $curr then {\"curr\": $e, \"curr_first\": $i} else {\"curr\": $curr} end)<br/>        | if .curr &gt; .max then . + {\"max\": $curr, \"first\": .curr_first, \"last\": $i}<br/>          else .<br/>          end)<br/>  | [ .max, $arr[ .first\u00a0: (1 + .last)] ];</pre>"}, {"lang": "Julia", "loc": 17, "block": "<pre class=\"text highlighted_source\">function gss(arr::Vector{&lt;:Number})<br/>    smax = hmax = tmax = 0<br/>    for head in eachindex(arr), tail in head:length(arr)<br/>        s = sum(arr[head:tail])<br/>        if s &gt; smax<br/>            smax = s<br/>            hmax, tmax = head, tail<br/>        end<br/>    end<br/>    return arr[hmax:tmax]<br/>end<br/>\u00a0<br/>arr = [-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1]<br/>subseq = gss(arr)<br/>s = sum(subseq)<br/>\u00a0<br/>println(\"Greatest subsequential sum of $arr:\\n \u2192 $subseq with sum $s\")</pre>"}, {"lang": "Kotlin", "loc": 34, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1</span><br/>\u00a0<br/>fun gss<span class=\"br0\">(</span>seq<span class=\"sy0\">:</span> IntArray<span class=\"br0\">)</span><span class=\"sy0\">:</span> Triple<span class=\"sy0\">&lt;</span>Int, Int, Int<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>seq.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">throw</span></a> IllegalArgumentException<span class=\"br0\">(</span><span class=\"st0\">\"Array cannot be empty\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sum<span class=\"sy0\">:</span> Int<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> maxSum <span class=\"sy0\">=</span> seq<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> first <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> last <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span> until seq.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        sum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in i until seq.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            sum +<span class=\"sy0\">=</span> seq<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>sum <span class=\"sy0\">&gt;</span> maxSum<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                maxSum <span class=\"sy0\">=</span> sum<br/>                first <span class=\"sy0\">=</span> i<br/>                last <span class=\"sy0\">=</span> j<br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Triple<span class=\"br0\">(</span>maxSum, first, last<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> seq <span class=\"sy0\">=</span> intArrayOf<span class=\"br0\">(</span>-<span class=\"nu0\">1</span> , -<span class=\"nu0\">2</span> , <span class=\"nu0\">3</span> , <span class=\"nu0\">5</span> , <span class=\"nu0\">6</span> , -<span class=\"nu0\">2</span> , -<span class=\"nu0\">1</span> , <span class=\"nu0\">4</span> , -<span class=\"nu0\">4</span> , <span class=\"nu0\">2</span> , -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a><span class=\"br0\">(</span>maxSum, first, last<span class=\"br0\">)</span> <span class=\"sy0\">=</span> gss<span class=\"br0\">(</span>seq<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>maxSum <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      println<span class=\"br0\">(</span><span class=\"st0\">\"Maximum subsequence is from indices $first to $last\"</span><span class=\"br0\">)</span><br/>      print<span class=\"br0\">(</span><span class=\"st0\">\"Elements are\u00a0: \"</span><span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in first .. <span class=\"me1\">last</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"${seq[i]} \"</span><span class=\"br0\">)</span><br/>      println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Sum is $maxSum\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>      println<span class=\"br0\">(</span><span class=\"st0\">\"Maximum subsequence is the empty sequence which has a sum of 0\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 54, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"co1\">'Greatest_subsequential_sum</span><br/>\u00a0<br/>N<span class=\"sy0\">=</span> <span class=\"nu0\">20</span>   <span class=\"co1\">'number of elements</span><br/>\u00a0<br/><span class=\"kw1\">randomize</span> <span class=\"nu0\">0.52</span><br/><span class=\"kw1\">for</span> K <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">5</span><br/>    a$ <span class=\"sy0\">=</span> <span class=\"kw2\">using</span><span class=\"br0\">(</span><span class=\"st0\">\"##\"</span><span class=\"sy0\">,</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">2</span> <span class=\"kw1\">to</span> N<br/>        a$ <span class=\"sy0\">=</span> a$ <span class=\"sy0\">+</span><span class=\"st0\">\",\"</span><span class=\"sy0\">+</span><span class=\"kw2\">using</span><span class=\"br0\">(</span><span class=\"st0\">\"##\"</span><span class=\"sy0\">,</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">next</span><br/>    <span class=\"kw1\">call</span> maxsumseq a$<br/><span class=\"kw1\">next</span> K<br/>\u00a0<br/><span class=\"kw1\">sub</span> maxsumseq a$<br/>    sum<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    maxsum<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    sumStart<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>    end1 <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    start1 <span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>\u00a0<br/>    token$<span class=\"sy0\">=</span><span class=\"st0\">\"*\"</span><br/>    i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span><br/>        i<span class=\"sy0\">=</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>        token$<span class=\"sy0\">=</span><span class=\"kw1\">word</span>$<span class=\"br0\">(</span>a$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> token$ <span class=\"sy0\">=</span><span class=\"st0\">\"\"</span> <span class=\"kw1\">then</span> <span class=\"kw1\">exit</span> <span class=\"kw1\">while</span>    <span class=\"co1\">'end of stream</span><br/>        x<span class=\"sy0\">=</span><span class=\"kw2\">val</span><span class=\"br0\">(</span>token$<span class=\"br0\">)</span><br/>        sum<span class=\"sy0\">=</span>sum<span class=\"sy0\">+</span>x<br/>        <span class=\"kw1\">if</span> maxsum<span class=\"sy0\">&lt;</span>sum <span class=\"kw1\">then</span><br/>             maxsum <span class=\"sy0\">=</span> sum<br/>             start1 <span class=\"sy0\">=</span> sumStart<br/>             end1 <span class=\"sy0\">=</span> i<br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">if</span> sum <span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>                sum<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>                sumStart <span class=\"sy0\">=</span> i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">wend</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"sequence: \"</span>;a$<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"          \"</span>;<br/>    <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> start1<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>   <span class=\"kw1\">print</span> <span class=\"st0\">\"   \"</span>; <span class=\"sy0\">:</span><span class=\"kw1\">next</span><br/>    <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span> start1 <span class=\"kw1\">to</span> end1<span class=\"sy0\">:</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"---\"</span>; <span class=\"sy0\">:</span><span class=\"kw1\">next</span><br/>    <span class=\"kw1\">print</span><br/>    <span class=\"kw1\">if</span> end1 <span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"Maximum sum subsequense: \"</span>;start1\u00a0;<span class=\"st0\">\" to \"</span>; end1<br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"Maximum sum subsequense: is empty\"</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"Maximum sum \"</span>;maxsum<br/>    <span class=\"kw1\">print</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">sub</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 14, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> sumt<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> start<span class=\"sy0\">,</span> last<span class=\"br0\">)</span> <span class=\"kw1\">return</span> start <span class=\"sy0\">&lt;=</span> last <span class=\"kw2\">and</span> t<span class=\"br0\">[</span>start<span class=\"br0\">]</span> <span class=\"sy0\">+</span> sumt<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> start<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> last<span class=\"br0\">)</span> <span class=\"kw2\">or</span> <span class=\"nu0\">0</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> maxsub<span class=\"br0\">(</span>ary<span class=\"sy0\">,</span> idx<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> idx <span class=\"sy0\">=</span> idx <span class=\"kw2\">or</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> ary<span class=\"br0\">[</span>idx<span class=\"br0\">]</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> maxsum<span class=\"sy0\">,</span> last <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> idx<br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> idx<span class=\"sy0\">,</span> <span class=\"sy0\">#</span>ary <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">if</span> sumt<span class=\"br0\">(</span>ary<span class=\"sy0\">,</span> idx<span class=\"sy0\">,</span> i<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> maxsum <span class=\"kw1\">then</span> maxsum<span class=\"sy0\">,</span> last <span class=\"sy0\">=</span> sumt<span class=\"br0\">(</span>ary<span class=\"sy0\">,</span> idx<span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"sy0\">,</span> i <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> v <span class=\"sy0\">=</span> maxsub<span class=\"br0\">(</span>ary<span class=\"sy0\">,</span> idx <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> maxsum <span class=\"sy0\">&lt;</span> sumt<span class=\"br0\">(</span>v<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>v<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> v <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> ret <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> idx<span class=\"sy0\">,</span> last <span class=\"kw1\">do</span> ret<span class=\"br0\">[</span><span class=\"sy0\">#</span>ret<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> ary<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> ret<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "M4", "loc": 16, "block": "<pre class=\"text highlighted_source\">divert(-1)<br/>define(`setrange',`ifelse(`$3',`',$2,`define($1[$2],$3)`'setrange($1,<br/>   incr($2),shift(shift(shift(<a class=\"__cf_email__\" data-cfemail=\"200460\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>))))')')<br/>define(`asize',decr(setrange(`a',1,-1,-2,3,5,6,-2,-1,4,-4,2,-1)))<br/>define(`get',`defn(`$1[$2]')')<br/>define(`for',<br/>   `ifelse($#,0,``$0'',<br/>   `ifelse(eval($2&lt;=$3),1,<br/>   `pushdef(`$1',$2)$4`'popdef(`$1')$0(`$1',incr($2),$3,`$4')')')')<br/>define(`maxsum',0)<br/>for(`x',1,asize,<br/>   `define(`sum',0)`'for(`y',x,asize,<br/>      `define(`sum',eval(sum+get(`a',y)))`'ifelse(eval(sum&gt;maxsum),1,<br/>         `define(`maxsum',sum)`'define(`xmax',x)`'define(`ymax',y)')')')<br/>divert<br/>for(`x',xmax,ymax,`get(`a',x) ')</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 5, "block": "<pre class=\"text highlighted_source\">Sequences[m_]:=Prepend[Flatten[Table[Partition[Range[m],n,1],{n,m}],1],{}]<br/>MaximumSubsequence[x_List]:=Module[{sums},<br/> sums={x[[#]],Total[x[[#]]]}&amp;/@Sequences[Length[x]];<br/> First[First[sums[[Ordering[sums,-1,#1[[2]]&lt;#2[[2]]&amp;]]]]]<br/>]</pre>"}, {"lang": "Mathprog", "loc": 38, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/*Special ordered set of type N<br/>\u00a0<br/>  Nigel_Galloway<br/>  January 26th, 2012<br/>*/<br/>\u00a0<br/>param Lmax;<br/>param Lmin;<br/>set SOS;<br/>param Sx{SOS};<br/>var db{Lmin..Lmax,SOS}, binary;<br/>\u00a0<br/>maximize s\u00a0: sum{q in (Lmin..Lmax),t in (0..q-1), z in SOS: z &gt; (q-1)} Sx[z-t]*db[q,z];<br/>sos1\u00a0: sum{t in (Lmin..Lmax),z in SOS: z &gt; (t-1)} db[t,z] = 1;<br/>solve;<br/>\u00a0<br/>for{t in (Lmin..Lmax),z in SOS: db[t,z] == 1} {<br/>  printf \"\\nA sub-sequence of length\u00a0%d sums to\u00a0%f:\\n\", t,s;<br/>  printf{q in (z-t+1)..z} \" \u00a0%f\", Sx[q];<br/>}<br/>printf \"\\n\\n\";<br/>\u00a0<br/>data;<br/>param Lmin\u00a0:= 1;<br/>param Lmax\u00a0:= 6;<br/>param:<br/>SOS:  Sx\u00a0:=<br/> 1     7<br/> 2     4 <br/> 3   -11 <br/> 4     6<br/> 5     3<br/> 6     1<br/>;<br/>\u00a0<br/>end;<br/>\u00a0</pre>"}, {"lang": "MATLAB / Octave", "loc": 15, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> <span class=\"br0\">[</span>S,GS<span class=\"br0\">]</span>=gss<span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/><span class=\"co1\">% Greatest subsequential sum </span><br/>a =<span class=\"br0\">[</span><span class=\"nu0\">0</span>;a<span class=\"br0\">(</span>:<span class=\"br0\">)</span>;<span class=\"nu0\">0</span><span class=\"br0\">]</span>';<br/>ix1 = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/find.html\"><span class=\"kw2\">find</span></a><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">2</span>:<span class=\"kw1\">end</span><span class=\"br0\">)</span> &gt;<span class=\"nu0\">0</span> &amp; a<span class=\"br0\">(</span><span class=\"nu0\">1</span>:end-<span class=\"nu0\">1</span><span class=\"br0\">)</span> &lt;= <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>ix2 = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/find.html\"><span class=\"kw2\">find</span></a><span class=\"br0\">(</span>a<span class=\"br0\">(</span><span class=\"nu0\">2</span>:<span class=\"kw1\">end</span><span class=\"br0\">)</span>&lt;=<span class=\"nu0\">0</span> &amp; a<span class=\"br0\">(</span><span class=\"nu0\">1</span>:end-<span class=\"nu0\">1</span><span class=\"br0\">)</span> &gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>K = <span class=\"nu0\">0</span>;<br/>S = <span class=\"nu0\">0</span>;<br/><span class=\"kw1\">for</span> k = <span class=\"nu0\">1</span>:<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>ix1<span class=\"br0\">)</span><br/>\ts = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sum.html\"><span class=\"kw2\">sum</span></a><span class=\"br0\">(</span>a<span class=\"br0\">(</span>ix1<span class=\"br0\">(</span>k<span class=\"br0\">)</span>+<span class=\"nu0\">1</span>:ix2<span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>s&gt;S<span class=\"br0\">)</span> <br/>\t\tS=s; K=k;<br/>\t<span class=\"kw1\">end</span>;<br/><span class=\"kw1\">end</span>; <br/>GS = a<span class=\"br0\">(</span>ix1<span class=\"br0\">(</span>K<span class=\"br0\">)</span>+<span class=\"nu0\">1</span>:ix2<span class=\"br0\">(</span>K<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>\u00a0</pre>"}, {"lang": "NetRexx", "loc": 32, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* REXX ***************************************************************<br/>* 10.08.2012 Walter Pachl Pascal algorithm -&gt; Rexx -&gt; NetRexx<br/>**********************************************************************/</span><br/>  s=<span class=\"st0\">' -1 -2  3  5  6 -2 -1  4 -4  2 -1'</span><br/>  maxSum   = <span class=\"nu0\">0</span><br/>  seqStart = <span class=\"nu0\">0</span><br/>  seqEnd   = -<span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Loop</span> i = <span class=\"nu0\">1</span> To s.<span class=\"kw6\">words</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    seqSum = <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">Loop</span> j = i to s.<span class=\"kw6\">words</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      seqSum = seqSum + s.<span class=\"kw6\">word</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>      <span class=\"kw1\">if</span> seqSum <span class=\"sy0\">&gt;</span> maxSum <span class=\"kw3\">then</span> <span class=\"kw1\">Do</span><br/>        maxSum   = seqSum<br/>        seqStart = i<br/>        seqEnd   = j<br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">end</span><br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'Sequence:'</span><br/>  <span class=\"kw1\">Say</span> s<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'Subsequence with greatest sum: '</span><br/>  <span class=\"kw1\">If</span> seqend<span class=\"sy0\">&lt;</span>seqstart <span class=\"kw3\">Then</span><br/>    <span class=\"kw1\">Say</span> <span class=\"st0\">'empty'</span><br/>  <span class=\"kw3\">Else</span> <span class=\"kw1\">Do</span><br/>    ol=<span class=\"st0\">'   '</span>.<span class=\"kw6\">copies</span><span class=\"br0\">(</span>seqStart-<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Loop</span> i = seqStart to seqEnd<br/>      w=s.<span class=\"kw6\">word</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>      ol=ol<span class=\"sy0\">||</span>w.<span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw1\">Say</span> ol<br/>    <span class=\"kw1\">Say</span> <span class=\"st0\">'Sum:'</span> maxSum<br/>    <span class=\"kw3\">End</span></pre>"}, {"lang": "Nim", "loc": 7, "block": "<pre class=\"text highlighted_source\">proc maxsum(s: openArray[int]): int =<br/>  var maxendinghere = 0<br/>  for x in s:<br/>    maxendinghere = max(maxendinghere + x, 0)<br/>    result = max(result, maxendinghere)<br/>\u00a0<br/>echo maxsum(@[-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1])</pre>"}, {"lang": "Oberon-2", "loc": 88, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> GreatestSubsequentialSum;<br/><span class=\"kw1\">IMPORT</span> <br/>  Out<span class=\"sy0\">,</span> <br/>  Err<span class=\"sy0\">,</span><br/>  IntStr<span class=\"sy0\">,</span><br/>  ProgramArgs<span class=\"sy0\">,</span><br/>  TextRider;<br/><span class=\"kw1\">TYPE</span>  <br/>  IntSeq<span class=\"sy0\">=</span> <span class=\"kw1\">POINTER</span> <span class=\"kw1\">TO</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">LONGINT</span>;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> ShowUsage<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">BEGIN</span><br/>  Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"Usage: GreatestSubsequentialSum {int}+\"</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Ln</span><br/><span class=\"kw1\">END</span> ShowUsage;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Gss<span class=\"br0\">(</span>iseq<span class=\"sy0\">:</span> IntSeq; <span class=\"kw1\">VAR</span> start<span class=\"sy0\">,</span> end<span class=\"sy0\">,</span> maxsum<span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">VAR</span><br/>  i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> sum<span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/><span class=\"kw1\">BEGIN</span><br/>  i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; maxsum <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; start <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; end <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>;<br/>  <span class=\"kw1\">WHILE</span> <span class=\"br0\">(</span>i &lt; <span class=\"kw3\">LEN</span><span class=\"br0\">(</span>iseq^<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">DO</span><br/>    sum <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span>; j <span class=\"sy0\">:=</span> i;<br/>    <span class=\"kw1\">WHILE</span> <span class=\"br0\">(</span>j &lt; <span class=\"kw3\">LEN</span><span class=\"br0\">(</span>iseq^<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">DO</span><br/>      <span class=\"kw3\">INC</span><span class=\"br0\">(</span>sum<span class=\"sy0\">,</span>iseq<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">IF</span> sum &gt; maxsum <span class=\"kw1\">THEN</span><br/>        maxsum <span class=\"sy0\">:=</span> sum;<br/>        start <span class=\"sy0\">:=</span> i;<br/>        end <span class=\"sy0\">:=</span> j<br/>      <span class=\"kw1\">END</span>;<br/>      <span class=\"kw3\">INC</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span>;<br/>    <span class=\"kw3\">INC</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">END</span><br/><span class=\"kw1\">END</span> Gss;<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> GetParams<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>IntSeq;<br/><span class=\"kw1\">VAR</span><br/>  reader<span class=\"sy0\">:</span> TextRider.<span class=\"me1\">Reader</span>;<br/>  iseq<span class=\"sy0\">:</span> IntSeq;<br/>  param<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"nu0\">32</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>  argc<span class=\"sy0\">,</span>i<span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/>  res<span class=\"sy0\">:</span> <span class=\"kw4\">SHORTINT</span>;<br/><span class=\"kw1\">BEGIN</span><br/>  iseq <span class=\"sy0\">:=</span> <span class=\"kw2\">NIL</span>;<br/>  reader <span class=\"sy0\">:=</span> TextRider.<span class=\"me1\">ConnectReader</span><span class=\"br0\">(</span>ProgramArgs.<span class=\"me1\">args</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">IF</span> reader <span class=\"sy0\">#</span> <span class=\"kw2\">NIL</span> <span class=\"kw1\">THEN</span><br/>    argc <span class=\"sy0\">:=</span> ProgramArgs.<span class=\"me1\">args</span>.<span class=\"me1\">ArgNumber</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">IF</span> argc &lt; <span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span><br/>      Err.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"There is no enough arguments.\"</span><span class=\"br0\">)</span>;Err.<span class=\"me1\">Ln</span>;<br/>      ShowUsage;<br/>      <span class=\"kw3\">HALT</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    reader.<span class=\"me1\">ReadLn</span>; <span class=\"coMULTI\">(* Skips program name *)</span><br/>\u00a0<br/>    <span class=\"kw3\">NEW</span><span class=\"br0\">(</span>iseq<span class=\"sy0\">,</span>argc<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> argc <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>      reader.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span>param<span class=\"br0\">)</span>;<br/>      IntStr.<span class=\"me1\">StrToInt</span><span class=\"br0\">(</span>param<span class=\"sy0\">,</span>iseq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span>res<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">END</span>   <br/> <span class=\"kw1\">END</span>;<br/> <span class=\"kw1\">RETURN</span> iseq<br/><span class=\"kw1\">END</span> GetParams;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Do;<br/><span class=\"kw1\">VAR</span><br/>  iseq<span class=\"sy0\">:</span> IntSeq;<br/>  start<span class=\"sy0\">,</span> end<span class=\"sy0\">,</span> sum<span class=\"sy0\">,</span> i<span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/><span class=\"kw1\">BEGIN</span><br/>  iseq <span class=\"sy0\">:=</span> GetParams<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>  Gss<span class=\"br0\">(</span>iseq<span class=\"sy0\">,</span> start<span class=\"sy0\">,</span> end<span class=\"sy0\">,</span> sum<span class=\"br0\">)</span>;<br/>  i <span class=\"sy0\">:=</span> start;<br/>  Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">WHILE</span> <span class=\"br0\">(</span>i &lt;<span class=\"sy0\">=</span> end<span class=\"br0\">)</span> <span class=\"kw1\">DO</span><br/>    Out.<span class=\"me1\">LongInt</span><span class=\"br0\">(</span>iseq<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>i &lt; end<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> Out.<span class=\"me1\">Char</span><span class=\"br0\">(</span><span class=\"st_h\">','</span><span class=\"br0\">)</span> <span class=\"kw1\">END</span>;<br/>    <span class=\"kw3\">INC</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">END</span>;<br/>  Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"]: \"</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">LongInt</span><span class=\"br0\">(</span>sum<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Ln</span><br/><span class=\"kw1\">END</span> Do;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  Do<br/><span class=\"kw1\">END</span> GreatestSubsequentialSum.<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 17, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> maxsubseq <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> loop sum seq maxsum maxseq <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>    <span class=\"sy0\">|</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> maxsum, <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>rev maxseq<br/>    <span class=\"sy0\">|</span> x<span class=\"sy0\">::</span>xs <span class=\"sy0\">-&gt;</span><br/>        <span class=\"kw1\">let</span> sum <span class=\"sy0\">=</span> sum <span class=\"sy0\">+</span> x<br/>        <span class=\"kw1\">and</span> seq <span class=\"sy0\">=</span> x <span class=\"sy0\">::</span> seq <span class=\"kw1\">in</span><br/>          <span class=\"kw1\">if</span> sum <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            loop <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> maxsum maxseq xs<br/>          <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> sum <span class=\"sy0\">&gt;</span> maxsum <span class=\"kw1\">then</span><br/>            loop sum seq sum seq xs<br/>          <span class=\"kw1\">else</span><br/>            loop sum seq maxsum maxseq xs<br/>  <span class=\"kw1\">in</span><br/>    loop <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span><br/>  maxsubseq <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">;</span> <span class=\"nu0\">3</span> <span class=\"sy0\">;</span> <span class=\"nu0\">5</span> <span class=\"sy0\">;</span> <span class=\"nu0\">6</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span> <span class=\"sy0\">;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre>"}, {"lang": "Oz", "loc": 24, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">MaxSubSeq</span> Xs<span class=\"br0\">}</span><br/>\u00a0<br/>     <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Step</span> <span class=\"br0\">[</span>Sum0 Seq0 MaxSum MaxSeq<span class=\"br0\">]</span> X<span class=\"br0\">}</span><br/>        Sum = Sum0 <span class=\"sy0\">+</span> X<br/>        Seq = X<span class=\"sy0\">|</span>Seq0<br/>     <span class=\"kw1\">in</span><br/>        <span class=\"kw1\">if</span> Sum <span class=\"sy0\">&gt;</span> MaxSum <span class=\"kw1\">then</span><br/>           <span class=\"co1\">%% found new maximum</span><br/>           <span class=\"br0\">[</span>Sum Seq Sum Seq<span class=\"br0\">]</span><br/>        <span class=\"kw1\">elseif</span> Sum <span class=\"sy0\">&lt;</span> 0 <span class=\"kw1\">then</span><br/>           <span class=\"co1\">%% discard negative subseqs</span><br/>           <span class=\"br0\">[</span>0 nil MaxSum MaxSeq<span class=\"br0\">]</span><br/>        <span class=\"kw1\">else</span><br/>           <span class=\"br0\">[</span>Sum Seq MaxSum MaxSeq<span class=\"br0\">]</span><br/>        <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>\u00a0<br/>     <span class=\"br0\">[</span>_ _ _ MaxSeq<span class=\"br0\">]</span> = <span class=\"br0\">{</span>FoldL Xs Step <span class=\"br0\">[</span>0 nil 0 nil<span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>Reverse MaxSeq<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>MaxSubSeq <span class=\"br0\">[</span><span class=\"sy0\">~</span>1 <span class=\"sy0\">~</span>2 3 5 6 <span class=\"sy0\">~</span>2 <span class=\"sy0\">~</span>1 4 <span class=\"sy0\">~</span>4 2 1<span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 14, "block": "<pre class=\"parigp highlighted_source\">grsub<span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  my<span class=\"br0\">(</span>mn<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>mx<span class=\"sy0\">=</span>#v<span class=\"sy0\">,</span>r<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>at<span class=\"sy0\">,</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw1\">vecmax</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"sy0\">&lt;=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"kw1\">return</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>mn<span class=\"br0\">]</span><span class=\"sy0\">&lt;=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>mn<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>mx<span class=\"br0\">]</span><span class=\"sy0\">&lt;=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>mx<span class=\"sy0\">--</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>a<span class=\"sy0\">=</span>mn<span class=\"sy0\">,</span>mx<span class=\"sy0\">,</span><br/>    c<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>b<span class=\"sy0\">=</span>a<span class=\"sy0\">,</span>mx<span class=\"sy0\">,</span><br/>      c<span class=\"sy0\">+=</span>v<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>c<span class=\"sy0\">&gt;</span>r<span class=\"sy0\">,</span>r<span class=\"sy0\">=</span>c<span class=\"sy0\">;</span>at<span class=\"sy0\">=</span><span class=\"br0\">[</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  at<br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pascal", "loc": 40, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">Program</span> GreatestSubsequentialSum<span class=\"br0\">(</span>output<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  a<span class=\"sy1\">:</span> <span class=\"kw4\">array</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">..</span><span class=\"nu0\">11</span><span class=\"br0\">]</span> <span class=\"kw1\">of</span> <span class=\"kw4\">integer</span> <span class=\"sy3\">=</span> <span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  i<span class=\"sy1\">,</span> j<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  seqStart<span class=\"sy1\">,</span> seqEnd<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  maxSum<span class=\"sy1\">,</span> seqSum<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  maxSum   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  seqStart <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  seqEnd   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> low<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">to</span> high<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    seqSum <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">for</span> j <span class=\"sy1\">:</span><span class=\"sy3\">=</span> i <span class=\"kw1\">to</span> high<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">begin</span><br/>      seqSum <span class=\"sy1\">:</span><span class=\"sy3\">=</span> seqSum <span class=\"sy3\">+</span> a<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">if</span> seqSum &gt; maxSum <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">begin</span><br/>        maxSum   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> seqSum<span class=\"sy1\">;</span><br/>        seqStart <span class=\"sy1\">:</span><span class=\"sy3\">=</span> i<span class=\"sy1\">;</span><br/>        seqEnd   <span class=\"sy1\">:</span><span class=\"sy3\">=</span> j<span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw3\">writeln</span> <span class=\"br0\">(</span><span class=\"st0\">'Sequence: '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> low<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">to</span> high<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">write</span> <span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span> <span class=\"br0\">(</span><span class=\"st0\">'Subsequence with greatest sum: '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> low<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">to</span> seqStart <span class=\"sy3\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">write</span> <span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> seqStart <span class=\"kw1\">to</span> seqEnd <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">write</span> <span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span> <span class=\"br0\">(</span><span class=\"st0\">'Sum:'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span> <span class=\"br0\">(</span>maxSum<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 21, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> max_sub<span class=\"br0\">(</span>\\<span class=\"sy0\">@</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$maxs</span><span class=\"sy0\">,</span> <span class=\"re0\">$maxe</span><span class=\"sy0\">,</span> <span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$sum</span><span class=\"sy0\">,</span> <span class=\"re0\">$maxsum</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">my</span> <span class=\"re0\">$t</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sum</span> <span class=\"sy0\">+</span> <span class=\"re0\">$a</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$sum</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">$t</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$t</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"co5\">$_</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$maxsum</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$sum</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"re0\">$maxsum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sum</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">(</span><span class=\"re0\">$maxs</span><span class=\"sy0\">,</span> <span class=\"re0\">$maxe</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"re0\">@$a</span><span class=\"br0\">[</span><span class=\"re0\">$maxs</span> <span class=\"sy0\">..</span> <span class=\"re0\">$maxe</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@a</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@b</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> x <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"seq: @a<span class=\"es0\">\\n</span>max: [ @{[max_sub @a]} ]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"seq: @b<span class=\"es0\">\\n</span>max: [ @{[max_sub @b]} ]<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 13, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> max<span class=\"sy0\">-</span>subseq <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"re0\">@a</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$start</span><span class=\"sy0\">,</span> <span class=\"re0\">$end</span><span class=\"sy0\">,</span> <span class=\"re0\">$sum</span><span class=\"sy0\">,</span> <span class=\"re0\">$maxsum</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"re0\">@a</span><span class=\"sy0\">.</span><span class=\"kw3\">kv</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$sum</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"re0\">$maxsum</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$sum</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">(</span><span class=\"re0\">$maxsum</span><span class=\"sy0\">,</span> <span class=\"re0\">$end</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sum</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"re0\">$sum</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">(</span><span class=\"re0\">$sum</span><span class=\"sy0\">,</span> <span class=\"re0\">$start</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$start</span> <span class=\"sy0\">^..</span> <span class=\"re0\">$end</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 16, "block": "<pre class=\"text highlighted_source\">function maxSubseq(sequence s)<br/>integer this, maxsum = 0, first = 1, last = 0<br/>    for i=1 to length(s) do<br/>        this = 0<br/>        for j=i to length(s) do<br/>            this += s[j]<br/>            if this&gt;maxsum then<br/>                {maxsum,first,last} = {this,i,j}<br/>            end if<br/>        end for<br/>    end for<br/>    return s[first..last]<br/>end function<br/>? maxSubseq({-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1})<br/>? maxSubseq({})<br/>? maxSubseq({-1, -5, -3})</pre>"}, {"lang": "PHP", "loc": 40, "block": "<pre class=\"php highlighted_source\">\u00a0<br/><span class=\"kw2\">&lt;?php</span><br/>\u00a0<br/><span class=\"kw2\">function</span> max_sum_seq<span class=\"br0\">(</span><span class=\"re0\">$sequence</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"co1\">// This runs in linear time.</span><br/>  <span class=\"re0\">$sum_start</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$max_sum</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$max_start</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$max_len</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <a href=\"http://www.php.net/count\"><span class=\"kw3\">count</span></a><span class=\"br0\">(</span><span class=\"re0\">$sequence</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sequence</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$sum</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$n</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$sum</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$max_sum</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"re0\">$max_sum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sum</span><span class=\"sy0\">;</span><br/>      <span class=\"re0\">$max_start</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sum_start</span><span class=\"sy0\">;</span><br/>      <span class=\"re0\">$max_len</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"re0\">$max_start</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$sum</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co2\"># start new sequence<br/></span>      <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>      <span class=\"re0\">$sum_start</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <a href=\"http://www.php.net/array_slice\"><span class=\"kw3\">array_slice</span></a><span class=\"br0\">(</span><span class=\"re0\">$sequence</span><span class=\"sy0\">,</span> <span class=\"re0\">$max_start</span><span class=\"sy0\">,</span> <span class=\"re0\">$max_len</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">function</span> print_array<span class=\"br0\">(</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/count\"><span class=\"kw3\">count</span></a><span class=\"br0\">(</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">echo</span> <a href=\"http://www.php.net/join\"><span class=\"kw3\">join</span></a><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st0\">\"(empty)\"</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">echo</span> <span class=\"st_h\">'&lt;br&gt;'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span>  <br/><span class=\"co1\">// tests</span><br/>print_array<span class=\"br0\">(</span>max_sum_seq<span class=\"br0\">(</span><a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>print_array<span class=\"br0\">(</span>max_sum_seq<span class=\"br0\">(</span><a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>print_array<span class=\"br0\">(</span>max_sum_seq<span class=\"br0\">(</span><a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span><br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 3, "block": "<pre class=\"text highlighted_source\">(maxi '((L) (apply + L))<br/>   (mapcon '((L) (maplist reverse (reverse L)))<br/>      (-1 -2 3 5 6 -2 -1 4 -4 2 -1) ) )</pre>"}, {"lang": "PL/I", "loc": 41, "block": "<pre class=\"pli highlighted_source\"><span class=\"sy0\">*</span>process source attributes xref<span class=\"sy0\">;</span><br/> ss<span class=\"sy0\">:</span> <span class=\"kw1\">Proc</span> <span class=\"kw1\">Options</span><span class=\"br0\">(</span><span class=\"kw1\">Main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"coMULTI\">/* REXX ***************************************************************<br/> * 26.08.2013 Walter Pachl translated from REXX version 3<br/> **********************************************************************/</span><br/>  <span class=\"kw1\">Dcl</span> <span class=\"kw1\">HBOUND</span> <span class=\"kw1\">builtin</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Dcl</span> <span class=\"kw1\">SYSPRINT</span> <span class=\"kw1\">Print</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>I<span class=\"sy0\">,</span>J<span class=\"sy0\">,</span>LB<span class=\"sy0\">,</span>MAXSUM<span class=\"sy0\">,</span>SEQEND<span class=\"sy0\">,</span>SEQSTART<span class=\"sy0\">,</span>SEQSUM<span class=\"br0\">)</span> <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Dcl</span> s<span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,-</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  maxSum   <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  seqStart <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  seqEnd   <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw1\">hbound</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    seqSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">Do</span> j <span class=\"sy0\">=</span> i <span class=\"kw1\">to</span> <span class=\"kw1\">hbound</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      seqSum <span class=\"sy0\">=</span> seqSum <span class=\"sy0\">+</span> s<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span> seqSum <span class=\"sy0\">&gt;</span> maxSum <span class=\"kw1\">then</span> <span class=\"kw1\">Do</span><span class=\"sy0\">;</span><br/>        maxSum   <span class=\"sy0\">=</span> seqSum<span class=\"sy0\">;</span><br/>        seqStart <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>        seqEnd   <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">'Sequence:'</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw1\">hbound</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>s<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">'Subsequence with greatest sum:'</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">If</span> seqend<span class=\"sy0\">&lt;</span>seqstart <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">'empty'</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Else</span> <span class=\"kw1\">Do</span><span class=\"sy0\">;</span><br/>    <span class=\"coMULTI\">/*ol=copies('   ',seqStart-1)*/</span><br/>    lb<span class=\"sy0\">=</span><span class=\"br0\">(</span>seqStart<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"br0\">(</span>lb<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">Do</span> i <span class=\"sy0\">=</span> seqStart <span class=\"kw1\">to</span> seqEnd<span class=\"sy0\">;</span><br/>      <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span>s<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">'Sum:'</span><span class=\"sy0\">,</span>maxSum<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Potion", "loc": 30, "block": "<pre class=\"text highlighted_source\">gss = (lst)\u00a0:<br/>   # Find discrete integral<br/>   integral = (0)<br/>   accum = 0<br/>   lst each (n): accum = accum + n, integral append(accum).<br/>   # Check integral[b + 1] - integral[a] for all 0 &lt;= a &lt;= b &lt; N<br/>   max = -1<br/>   max_a = 0<br/>   max_b = 0<br/>   lst length times (b)\u00a0:<br/>      b times (a)\u00a0:<br/>         if (integral(b + 1) - integral(a) &gt; max)\u00a0:<br/>            max = integral(b + 1) - integral(a)<br/>            max_a = a<br/>            max_b = b<br/>         .<br/>      .<br/>   .<br/>   # Print the results<br/>   if (max &gt;= 0)\u00a0:<br/>      (lst slice(max_a, max_b) join(\" + \"), \" = \", max, \"\\n\") join print<br/>   .<br/>   else\u00a0:<br/>      \"No subsequence larger than 0\\n\" print<br/>   .<br/>.<br/>\u00a0<br/>gss((-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1))<br/>gss((-1, -2, -3, -4, -5))<br/>gss((7,-6, -8, 5, -2, -6, 7, 4, 8, -9, -3, 2, 6, -4, -6))</pre>"}, {"lang": "Prolog", "loc": 55, "block": "<pre class=\"prolog highlighted_source\"><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>chr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> chr_constraint<br/>\tinit_chr<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span><br/>\tseq<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span><br/>\t<span class=\"co1\">% gss(Deb, Len, TT)</span><br/>\tgss<span class=\"sy3\">/</span><span class=\"nu0\">3</span><span class=\"sy4\">,</span><br/>\t<span class=\"co1\">% gsscur(Deb, Len, TT, IdCur)</span><br/>\tgsscur<span class=\"sy3\">/</span><span class=\"nu0\">4</span><span class=\"sy4\">,</span><br/>\tmemoseq<span class=\"sy3\">/</span><span class=\"nu0\">3</span><span class=\"sy4\">,</span><br/>\tclean<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><br/>\tgreatest_subsequence<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>greatest_subsequence <span class=\"sy6\">&lt;=&gt;</span><br/>\tL <span class=\"sy6\">=</span> <span class=\"br0\">[</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span> <span class=\"sy4\">,</span> <span class=\"nu0\">3</span> <span class=\"sy4\">,</span> <span class=\"nu0\">5</span> <span class=\"sy4\">,</span> <span class=\"nu0\">6</span> <span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span> <span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span> <span class=\"sy4\">,</span> <span class=\"nu0\">4</span> <span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">4</span> <span class=\"sy4\">,</span> <span class=\"nu0\">2</span> <span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>\tinit_chr<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tfind_chr_constraint<span class=\"br0\">(</span>gss<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> V<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tclean<span class=\"sy4\">,</span><br/>\twriteln<span class=\"br0\">(</span>L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tforall<span class=\"br0\">(</span>between<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> I<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       <span class=\"br0\">(</span>   J <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I<span class=\"sy3\">+</span>Deb<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> nth1<span class=\"br0\">(</span>J<span class=\"sy4\">,</span> L<span class=\"sy4\">,</span> N<span class=\"br0\">)</span><span class=\"sy4\">,</span> format<span class=\"br0\">(</span><span class=\"st_h\">'~w '</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tformat<span class=\"br0\">(</span><span class=\"st_h\">'==&gt; ~w ~n'</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>V<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% destroy last constraint gss</span><br/>clean \\ gss<span class=\"br0\">(</span>_<span class=\"sy4\">,</span>_<span class=\"sy4\">,</span>_<span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">true</span></a><span class=\"sy4\">.</span><br/>clean <span class=\"sy6\">&lt;=&gt;</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">true</span></a><span class=\"sy4\">.</span><br/>\u00a0<br/>init_chr_end <span class=\"sy5\">@</span> init_chr<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> gss<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> gsscur<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>init_chr_loop <span class=\"sy5\">@</span> init_chr<span class=\"br0\">(</span>N<span class=\"sy4\">,</span> <span class=\"br0\">[</span>H<span class=\"sy5\">|</span>T<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> seq<span class=\"br0\">(</span>N<span class=\"sy4\">,</span> H<span class=\"br0\">)</span><span class=\"sy4\">,</span> N1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> init_chr<span class=\"br0\">(</span>N1<span class=\"sy4\">,</span> T<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% here, we memorize the list</span><br/>gsscur_with_negative <span class=\"sy5\">@</span> gsscur<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> TT<span class=\"sy4\">,</span> N<span class=\"br0\">)</span><span class=\"sy4\">,</span>  seq<span class=\"br0\">(</span>N<span class=\"sy4\">,</span> V<span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> V <span class=\"sy6\">=&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy5\">|</span><br/>             memoseq<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> TT<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t     TT1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> TT <span class=\"sy3\">+</span> V<span class=\"sy4\">,</span><br/>\t     N1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\t     <span class=\"co1\">% if TT1 becomes negative,</span><br/>\t     <span class=\"co1\">% we begin a new subsequence</span><br/>\t     <span class=\"br0\">(</span>\t TT1 <span class=\"sy6\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> gsscur<span class=\"br0\">(</span>N1<span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span>N1<span class=\"br0\">)</span><br/>\t     <span class=\"sy4\">;</span>\t Len1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Len <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span> gsscur<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len1<span class=\"sy4\">,</span> TT1<span class=\"sy4\">,</span> N1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>gsscur_with_positive <span class=\"sy5\">@</span> gsscur<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> TT<span class=\"sy4\">,</span> N<span class=\"br0\">)</span><span class=\"sy4\">,</span>  seq<span class=\"br0\">(</span>N<span class=\"sy4\">,</span> V<span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> V <span class=\"sy6\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy5\">|</span><br/>             TT1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> TT <span class=\"sy3\">+</span> V<span class=\"sy4\">,</span><br/>\t     N1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> N<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\t     Len1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Len <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>\t     gsscur<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len1<span class=\"sy4\">,</span> TT1<span class=\"sy4\">,</span> N1<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>gsscur_end <span class=\"sy5\">@</span> gsscur<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> TT<span class=\"sy4\">,</span> _N<span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> memoseq<span class=\"br0\">(</span>Deb<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> TT<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>memoseq<span class=\"br0\">(</span>_DC<span class=\"sy4\">,</span> _LC<span class=\"sy4\">,</span> TTC<span class=\"br0\">)</span><span class=\"sy4\">,</span> gss<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> L<span class=\"sy4\">,</span> TT<span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> TTC <span class=\"sy6\">=&lt;</span> TT <span class=\"sy5\">|</span><br/>\t       gss<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> L<span class=\"sy4\">,</span> TT<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>memoseq<span class=\"br0\">(</span>DC<span class=\"sy4\">,</span> LC<span class=\"sy4\">,</span> TTC<span class=\"br0\">)</span><span class=\"sy4\">,</span> gss<span class=\"br0\">(</span>_D<span class=\"sy4\">,</span> _L<span class=\"sy4\">,</span> TT<span class=\"br0\">)</span> <span class=\"sy6\">&lt;=&gt;</span> TTC <span class=\"sy6\">&gt;</span> TT <span class=\"sy5\">|</span><br/>\t\tgss<span class=\"br0\">(</span>DC<span class=\"sy4\">,</span> LC<span class=\"sy4\">,</span> TTC<span class=\"br0\">)</span><span class=\"sy4\">.</span></pre>"}, {"lang": "PureBasic", "loc": 35, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span> s$, a, b, p1, p2, sum, max, dm<span class=\"sy0\">=</span><span class=\"br0\">(</span>?EndOfMyData<span class=\"sy0\">-</span>?MyData<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> Seq.i<span class=\"br0\">(</span>dm<span class=\"sy0\">/</span><span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Integer<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CopyMemory</span><span class=\"br0\">(</span>?MyData,@seq<span class=\"br0\">(</span><span class=\"br0\">)</span>,dm<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> a<span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>seq<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    sum<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>    <span class=\"kw1\">For</span> b<span class=\"sy0\">=</span>a <span class=\"kw1\">To</span> ArraySize<span class=\"br0\">(</span>seq<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      sum<span class=\"sy0\">+</span>seq<span class=\"br0\">(</span>b<span class=\"br0\">)</span><br/>      <span class=\"kw1\">If</span> sum<span class=\"sy0\">&gt;</span>max<br/>        max<span class=\"sy0\">=</span>sum<br/>        p1<span class=\"sy0\">=</span>a<br/>        p2<span class=\"sy0\">=</span>b<br/>      <span class=\"kw1\">EndIf</span><br/>    <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> a<span class=\"sy0\">=</span>p1 <span class=\"kw1\">To</span> p2<br/>    s$<span class=\"sy0\">+</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>seq<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> a<span class=\"sy0\">&lt;</span>p2 <br/>      s$<span class=\"sy0\">+</span><span class=\"st0\">\"+\"</span><br/>    <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>s$<span class=\"sy0\">+</span><span class=\"st0\">\" = \"</span><span class=\"sy0\">+</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>max<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"Press ENTER to quit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">DataSection</span><br/>  MyData:<br/>  <span class=\"kw1\">Data</span>.i  <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>  EndOfMyData:<br/><span class=\"kw1\">EndDataSection</span></pre>"}, {"lang": "Python", "loc": 4, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">def</span> maxsubseq<span class=\"br0\">(</span>seq<span class=\"br0\">)</span>:<br/>  <span class=\"kw1\">return</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span><span class=\"br0\">(</span>seq<span class=\"br0\">[</span>begin:end<span class=\"br0\">]</span> <span class=\"kw1\">for</span> begin <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                             <span class=\"kw1\">for</span> end <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span>begin<span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>seq<span class=\"br0\">)</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>             key<span class=\"sy0\">=</span><span class=\"kw2\">sum</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 7, "block": "<pre class=\"text highlighted_source\">max.subseq &lt;- function(x) {<br/>  cumulative &lt;- cumsum(x)<br/>  min.cumulative.so.far &lt;- Reduce(min, cumulative, accumulate=TRUE)<br/>  end &lt;- which.max(cumulative-min.cumulative.so.far)<br/>  begin &lt;- which.min(c(0, cumulative[1:end]))<br/>  if (end &gt;= begin) x[begin:end] else x[c()]<br/>}</pre>"}, {"lang": "Racket", "loc": 13, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(define (max-subseq l)<br/>  (define-values (_ result _1 max-sum)<br/>    (for/fold ([seq '()] [max-seq '()] [sum 0] [max-sum 0])<br/>      ([i l])<br/>      (cond [(&gt; (+ sum i) max-sum) <br/>             (values (cons i seq) (cons i seq) (+ sum i) (+ sum i))]<br/>            [(&lt; (+ sum i) 0)<br/>             (values '() max-seq 0 max-sum)]<br/>            [else<br/>             (values (cons i seq) max-seq (+ sum i) max-sum)])))<br/>  (values (reverse result) max-sum))<br/>\u00a0</pre>"}, {"lang": "Raven", "loc": 18, "block": "<pre class=\"text highlighted_source\">[ -1 -2 3 5 6 -2 -1 4 -4 2 -1 ] as $seq<br/>\u00a0<br/>1 31 shl as $max<br/>\u00a0<br/>0   $seq length   1 range each as $i<br/>    0 as $sum<br/>    $i   $seq length  1 range each as $j<br/>        $seq $j get   $sum +  as $sum<br/>        $sum $max &gt; if<br/>            $sum as $max<br/>            $i as $i1<br/>            $j as $j1<br/>\u00a0<br/>\"Sum: \" print<br/>$i1 $j1 1 range each<br/>    #dup \"$seq[%d]\\n\" print<br/>    $seq swap get \"%d,\" print<br/>$max   $seq $j1 get   \"%d  = \u00a0%d\\n\" print</pre>"}, {"lang": "REXX", "loc": 14, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  finds and displays  the  shortest  greatest continuous subsequence  sum.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> @;         w=<span class=\"kw6\">words</span><span class=\"br0\">(</span>@<span class=\"br0\">)</span>                  <span class=\"coMULTI\">/*get arg list;  number words in list. */</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'words='</span>w    <span class=\"st0\">\"   list=\"</span>@                     <span class=\"coMULTI\">/*show number words &amp; LIST to terminal.*/</span><br/>sum=<span class=\"nu0\">0</span>;      at=w+<span class=\"nu0\">1</span>                               <span class=\"coMULTI\">/*default sum, length, and \"starts at\".*/</span><br/>L=<span class=\"nu0\">0</span>                                              <span class=\"coMULTI\">/* [\u2193]  process the list of numbers.   */</span><br/>     <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> w;     f=<span class=\"kw6\">word</span><span class=\"br0\">(</span>@, j<span class=\"br0\">)</span>             <span class=\"coMULTI\">/*select one number at a time from list*/</span><br/>         <span class=\"kw1\">do</span> k=j  <span class=\"kw2\">to</span> w;  s=f                      <span class=\"coMULTI\">/* [\u2193]  process a sub\u2500list of numbers. */</span><br/>                        <span class=\"kw1\">do</span> m=j+<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> k;    s=s+<span class=\"kw6\">word</span><span class=\"br0\">(</span>@, m<span class=\"br0\">)</span>;    <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*m*/</span><br/>         <span class=\"kw1\">if</span> s<span class=\"sy0\">&gt;</span>sum  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;       sum=s;   at=j;  L=k-j+<span class=\"nu0\">1</span>;    <span class=\"kw3\">end</span><br/>         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span>                             <span class=\"coMULTI\">/* [\u2191]  chose greatest sum of numbers. */</span><br/>     <span class=\"kw3\">end</span>       <span class=\"coMULTI\">/*j*/</span><br/><span class=\"kw1\">say</span><br/>$=<span class=\"kw6\">subword</span><span class=\"br0\">(</span>@,at,L<span class=\"br0\">)</span>;    <span class=\"kw1\">if</span> $==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> $=<span class=\"st0\">\"[NULL]\"</span>  <span class=\"coMULTI\">/*Englishize the  null  (value).       */</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'sum='</span>sum<span class=\"sy0\">/</span><span class=\"nu0\">1</span>             <span class=\"st0\">\"   sequence=\"</span>$      <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 50, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Greatest subsequential sum<br/>\u00a0<br/>aList1 = [0, 1, 2, -3, 3, -1, 0, -4, 0, -1, -4, 2]<br/>see \"[0, 1, 2, -3, 3, -1, 0, -4, 0, -1, -4, 2]  -&gt; \" + sum(aList1) + nl<br/>aList2 = [-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1]<br/>see \"[-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1] -&gt; \" + sum(aList2) + nl<br/>aList3 = [-1, -2, -3, -4, -5] <br/>see \"[-1, -2, -3, -4, -5] -&gt; \" + sum(aList3) + nl<br/>aList4 = [] <br/>see \"[] - &gt; \" + sum(aList4) + nl<br/>\u00a0<br/>func sum aList<br/>     sumold = []<br/>     sumnew = []<br/>     snew = 0<br/>     flag = 0<br/>     if len(aList) = 0<br/>        return 0<br/>     ok<br/>     for s=1 to len(aList)<br/>         if aList[s] &gt; -1<br/>            flag = 1<br/>         ok<br/>     next<br/>     if flag = 0<br/>        return \"[]\"<br/>     ok<br/>     for n=1 to len(aList)<br/>         sumold = []<br/>         sold = 0<br/>         for m=n to len(aList)<br/>             add(sumold, aList[m])<br/>             sold = sold + aList[m]<br/>             if sold &gt; snew<br/>                snew = sold<br/>                sumnew = sumold<br/>             ok<br/>         next<br/>     next<br/>     return showarray(sumnew)<br/>\u00a0<br/>func showarray(a)<br/>     conv = \"[\"<br/>     for i = 1 to len(a)<br/>         conv = conv + string(a[i]) + \", \"<br/>     next<br/>     conv = left(conv, len(conv) - 2) + \"]\"<br/>     return conv<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 10, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> subarray_sum<span class=\"br0\">(</span>arr<span class=\"br0\">)</span><br/>  max, slice = <span class=\"nu0\">0</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  arr.<span class=\"me1\">each_index</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>    <span class=\"br0\">(</span>i...<span class=\"me1\">arr</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>j<span class=\"sy0\">|</span><br/>      sum = arr<span class=\"br0\">[</span>i..<span class=\"me1\">j</span><span class=\"br0\">]</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,\u00a0:<span class=\"sy0\">+</span><span class=\"br0\">)</span><br/>      max, slice = sum, arr<span class=\"br0\">[</span>i..<span class=\"me1\">j</span><span class=\"br0\">]</span>  <span class=\"kw1\">if</span> sum <span class=\"sy0\">&gt;</span> max<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"br0\">[</span>max, slice<span class=\"br0\">]</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Run BASIC", "loc": 18, "block": "<pre class=\"text highlighted_source\">seq$ = \"-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1\"<br/>max = -999<br/>for i = 1 to 11<br/>sum = 0<br/>   for j = i to 11<br/>      sum = sum + val(word$(seq$,j,\",\"))<br/>      If sum &gt; max then<br/>         max = sum<br/>         i1  = i<br/>         j1  = j<br/>      end if<br/>   next j<br/>next i<br/>print \"Sum:\";<br/>for i = i1 to j1<br/>   print word$(seq$,i,\",\");\",\";<br/>next i<br/>print \" = \";max</pre>"}, {"lang": "Rust", "loc": 19, "block": "<pre class=\"text highlighted_source\">fn main() {<br/>    let nums = [1,2,39,34,20, -20, -16, 35, 0];<br/>\u00a0<br/>    let mut max = 0;<br/>    let mut boundaries = 0..0;<br/>\u00a0<br/>    for length in 0..nums.len() {<br/>        for start in 0..nums.len()-length {<br/>            let sum = (&amp;nums[start..start+length]).iter()<br/>                .fold(0, |sum, elem| sum+elem);<br/>            if sum &gt; max {<br/>                max = sum;<br/>                boundaries = start..start+length;<br/>            }<br/>        }<br/>    }<br/>\u00a0<br/>    println!(\"Max subsequence sum: {} for {:?}\", max, &amp;nums[boundaries]);;<br/>}</pre>"}, {"lang": "Scala", "loc": 25, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> maxSubseq<span class=\"br0\">(</span>l<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> l.<span class=\"me1\">scanRight</span><span class=\"br0\">(</span>Nil <span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, acc<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> acc.<span class=\"me1\">sum</span> + el <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=&gt;</span> Nil<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, acc<span class=\"br0\">)</span>                     <span class=\"sy0\">=&gt;</span> el <span class=\"sy0\">::</span> acc<br/><span class=\"br0\">}</span> max Ordering.<span class=\"me1\">by</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">_:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">sum</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> biggestMaxSubseq<span class=\"br0\">(</span>l<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> l.<span class=\"me1\">scanRight</span><span class=\"br0\">(</span>Nil <span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, acc<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> acc.<span class=\"me1\">sum</span> + el <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=&gt;</span> Nil<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, acc<span class=\"br0\">)</span>                     <span class=\"sy0\">=&gt;</span> el <span class=\"sy0\">::</span> acc<br/><span class=\"br0\">}</span> max Ordering.<span class=\"me1\">by</span><span class=\"br0\">(</span><span class=\"br0\">(</span>ss<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>Int<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>ss.<span class=\"me1\">sum</span>, ss.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> biggestMaxSubseq<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">(</span>l<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">implicit</span></a> n<span class=\"sy0\">:</span> Numeric<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> n.<span class=\"sy0\">_</span><br/>  l.<span class=\"me1\">scanRight</span><span class=\"br0\">(</span>Nil <span class=\"sy0\">:</span> List<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, acc<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> acc.<span class=\"me1\">sum</span> + el <span class=\"sy0\">&lt;</span> zero <span class=\"sy0\">=&gt;</span> Nil<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, acc<span class=\"br0\">)</span>                        <span class=\"sy0\">=&gt;</span> el <span class=\"sy0\">::</span> acc<br/>  <span class=\"br0\">}</span> max Ordering.<span class=\"me1\">by</span><span class=\"br0\">(</span><span class=\"br0\">(</span>ss<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>ss.<span class=\"me1\">sum</span>, ss.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> linearBiggestMaxSubseq<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">(</span>l<span class=\"sy0\">:</span> List<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">implicit</span></a> n<span class=\"sy0\">:</span> Numeric<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> n.<span class=\"sy0\">_</span><br/>  l.<span class=\"me1\">scanRight</span><span class=\"br0\">(</span><span class=\"br0\">(</span>zero, Nil <span class=\"sy0\">:</span> List<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, <span class=\"br0\">(</span>acc, <span class=\"sy0\">_</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> acc + el <span class=\"sy0\">&lt;</span> zero <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>zero, Nil<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>el, <span class=\"br0\">(</span>acc, ss<span class=\"br0\">)</span><span class=\"br0\">)</span>                   <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>acc + el, el <span class=\"sy0\">::</span> ss<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span> max Ordering.<span class=\"me1\">by</span><span class=\"br0\">(</span><span class=\"br0\">(</span>t<span class=\"sy0\">:</span> <span class=\"br0\">(</span>N, List<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>t.<span class=\"sy0\">_</span>1, t.<span class=\"sy0\">_</span>2.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">_</span>2<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 11, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>maxsubseq in<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> loop<br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>_sum <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>_seq <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>maxsum <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>maxseq <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">l</span> in<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">null?</span> <span class=\"kw1\">l</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">cons</span> maxsum <span class=\"br0\">(</span><span class=\"kw1\">reverse</span> maxseq<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x <span class=\"br0\">(</span><span class=\"kw1\">car</span> <span class=\"kw1\">l</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>sum <span class=\"br0\">(</span><span class=\"sy0\">+</span> _sum x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>seq <span class=\"br0\">(</span><span class=\"kw1\">cons</span> x _seq<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> sum <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> sum maxsum<span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span>loop sum seq    sum    seq <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">l</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span>loop sum seq maxsum maxseq <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">l</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span>loop <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span><span class=\"br0\">)</span> maxsum maxseq <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">l</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 47, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const func array integer: maxSubseq (in array integer: sequence) is func<br/>  result<br/>    var array integer: maxSequence is 0 times 0;<br/>  local<br/>    var integer: number is 0;<br/>    var integer: index is 0;<br/>    var integer: currentSum is 0;<br/>    var integer: currentStart is 1;<br/>    var integer: maxSum is 0;<br/>    var integer: startPos is 0;<br/>    var integer: endPos is 0;<br/>  begin<br/>    for number key index range sequence do<br/>      currentSum +:= number;<br/>      if currentSum &lt; 0 then<br/>        currentStart\u00a0:= succ(index);<br/>        currentSum\u00a0:= 0;<br/>      elsif currentSum &gt; maxSum then<br/>        maxSum\u00a0:= currentSum;<br/>        startPos\u00a0:= currentStart;<br/>        endPos\u00a0:= index;<br/>      end if;<br/>    end for;<br/>    if startPos &lt;= endPos and startPos &gt;= 1 and endPos &gt;= 1 then<br/>      maxSequence\u00a0:= sequence[startPos .. endPos];<br/>    end if;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    const array integer: a1 is [] (-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1);<br/>    const array integer: a2 is [] (-1, -2, -3, -5, -6, -2, -1, -4, -4, -2, -1);<br/>    var integer: number is 0;<br/>  begin<br/>    write(\"Maximal subsequence:\");<br/>    for number range maxSubseq(a1) do<br/>      write(\" \" &lt;&amp; number);<br/>    end for;<br/>    writeln;<br/>    write(\"Maximal subsequence:\");<br/>    for number range maxSubseq(a2) do<br/>      write(\" \" &lt;&amp; number);<br/>    end for;<br/>    writeln;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 19, "block": "<pre class=\"ruby highlighted_source\">func maxsubseq<span class=\"br0\">(</span><span class=\"sy0\">*</span>a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var <span class=\"br0\">(</span>start, <span class=\"kw1\">end</span>, sum, maxsum<span class=\"br0\">)</span> = <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>    a.<span class=\"me1\">each_kv</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>i, x<span class=\"sy0\">|</span><br/>        sum <span class=\"sy0\">+</span>= x;<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>maxsum <span class=\"sy0\">&lt;</span> sum<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            maxsum = sum;<br/>            <span class=\"kw1\">end</span> = i;<br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span>sum <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            sum = <span class=\"nu0\">0</span>;<br/>            start = i;<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span>;<br/>    a.<span class=\"me1\">ft</span><span class=\"br0\">(</span>start<span class=\"sy0\">+</span><span class=\"nu0\">1</span>, <span class=\"kw1\">end</span><span class=\"br0\">)</span>;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>say maxsubseq<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>,  <span class=\"nu0\">3</span>,  <span class=\"nu0\">5</span>,  <span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>,  <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>say maxsubseq<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">3</span>,  <span class=\"nu0\">5</span>,  <span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>,  <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>say maxsubseq<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">5</span>, <span class=\"sy0\">-</span><span class=\"nu0\">6</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Standard ML", "loc": 18, "block": "<pre class=\"text highlighted_source\">val maxsubseq = let<br/>  fun loop (_, _, maxsum, maxseq) [] = (maxsum, rev maxseq)<br/>    | loop (sum, seq, maxsum, maxseq) (x::xs) = let<br/>        val sum = sum + x<br/>        val seq = x\u00a0:: seq<br/>      in<br/>        if sum &lt; 0 then<br/>          loop (0, [], maxsum, maxseq) xs<br/>        else if sum &gt; maxsum then<br/>          loop (sum, seq, sum, seq) xs<br/>        else<br/>          loop (sum, seq, maxsum, maxseq) xs<br/>      end<br/>in<br/>  loop (0, [], 0, [])<br/>end;<br/>\u00a0<br/>maxsubseq [~1, ~2, 3, 5, 6, ~2, ~1, 4, ~4, 2, ~1]</pre>"}, {"lang": "Tcl", "loc": 69, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/><span class=\"kw1\">set</span> a <span class=\"br0\">{</span>-<span class=\"nu0\">1</span> -<span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">5</span> <span class=\"nu0\">6</span> -<span class=\"nu0\">2</span> -<span class=\"nu0\">1</span> <span class=\"nu0\">4</span> -<span class=\"nu0\">4</span> <span class=\"nu0\">2</span> -<span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># from the Perl solution</span><br/><span class=\"kw1\">proc</span> maxsumseq1 <span class=\"br0\">{</span>a<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> len <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$a</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> maxsum <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> start <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$start</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$len</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> start<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> end <span class=\"re0\">$start</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$end</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$len</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> end<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">set</span> sum <span class=\"nu0\">0</span><br/>            <span class=\"kw2\">incr</span> sum <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$a</span> <span class=\"re0\">$start</span> <span class=\"re0\">$end</span><span class=\"br0\">]</span> +<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$sum</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$maxsum</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">set</span> maxsum <span class=\"re0\">$sum</span><br/>                <span class=\"kw1\">set</span> maxsumseq <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$a</span> <span class=\"re0\">$start</span> <span class=\"re0\">$end</span><span class=\"br0\">]</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$maxsumseq</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># from the Python solution</span><br/><span class=\"kw1\">proc</span> maxsumseq2 <span class=\"br0\">{</span>sequence<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> start -<span class=\"nu0\">1</span><br/>    <span class=\"kw1\">set</span> end -<span class=\"nu0\">1</span><br/>    <span class=\"kw1\">set</span> maxsum_ <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> sum_ <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$sequence</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$sequence</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span><br/>        <span class=\"kw2\">incr</span> sum_ <span class=\"re0\">$x</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$maxsum_</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$sum_</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <br/>            <span class=\"kw1\">set</span> maxsum_ <span class=\"re0\">$sum_</span><br/>            <span class=\"kw1\">set</span> end <span class=\"re0\">$i</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$sum_</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">set</span> sum_ <span class=\"nu0\">0</span><br/>            <span class=\"kw1\">set</span> start <span class=\"re0\">$i</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    assert <span class=\"br0\">{</span><span class=\"re0\">$maxsum_</span> == <span class=\"br0\">[</span>maxsum <span class=\"re0\">$sequence</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    assert <span class=\"br0\">{</span><span class=\"re0\">$maxsum_</span> == <span class=\"br0\">[</span>sum <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$sequence</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$start</span> + <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$end</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$sequence</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$start</span> + <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"re0\">$end</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> maxsum <span class=\"br0\">{</span>sequence<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> maxsofar <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> maxendinghere <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">foreach</span> x <span class=\"re0\">$sequence</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> maxendinghere <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>max<span class=\"br0\">(</span><span class=\"re0\">$maxendinghere</span> + <span class=\"re0\">$x</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">set</span> maxsofar <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>max<span class=\"br0\">(</span><span class=\"re0\">$maxsofar</span>, <span class=\"re0\">$maxendinghere</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$maxsofar</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> assert <span class=\"br0\">{</span>condition <span class=\"br0\">{</span>message <span class=\"st0\">\"Assertion failed!\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"sy0\">!</span> <span class=\"br0\">[</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"kw1\">expr</span> <span class=\"re0\">$condition</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> -code <span class=\"kw1\">error</span> <span class=\"re0\">$message</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> sum <span class=\"kw2\">list</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">expr</span> <span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"re0\">$list</span> +<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"sequence:  $a\"</span><br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"maxsumseq1: [maxsumseq1 $a]\"</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">time</span> <span class=\"br0\">{</span>maxsumseq1 <span class=\"re0\">$a</span><span class=\"br0\">}</span> <span class=\"nu0\">1000</span><span class=\"br0\">]</span><br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"maxsumseq2: [maxsumseq2 $a]\"</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">time</span> <span class=\"br0\">{</span>maxsumseq2 <span class=\"re0\">$a</span><span class=\"br0\">}</span> <span class=\"nu0\">1000</span><span class=\"br0\">]</span></pre>"}, {"lang": "Ursala", "loc": 8, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import int<br/>\u00a0<br/>max_subsequence = zleq$^l&amp;r/&amp;+ *aayK33PfatPRTaq ^/~&amp; sum:-0<br/>\u00a0<br/>#cast\u00a0%zL<br/>\u00a0<br/>example = max_subsequence &lt;-1,-2,3,5,6,-2,-1,4,-4,2,-1&gt;</pre>"}, {"lang": "XPL0", "loc": 24, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;<br/>int Array, Size, Sum, Best, I, Lo, Hi, BLo, BHi;<br/>\u00a0<br/>[Array:= [-1, -2, 3, 5, 6, -2, -1, 4, -4, 2, -1];<br/>Size:= 11;<br/>Best:= -100000;<br/>for Lo:= 0 to Size-1 do<br/>    for Hi:= Lo to Size-1 do<br/>        [Sum:= 0;<br/>        for I:= Lo to Hi do<br/>                Sum:= Sum + Array(I);<br/>        if Sum &gt; Best then<br/>                [Best:= Sum;  BLo:= Lo;  BHi:= Hi];<br/>        ];<br/>Text(0, \"Sequence = \");<br/>for I:= 0 to Size-1 do<br/>        [IntOut(0, Array(I)); Text(0, \" \")];<br/>CrLf(0);<br/>Text(0, \"Greatest = \");<br/>for I:= BLo to BHi do<br/>        [IntOut(0, Array(I)); Text(0, \" \")];<br/>CrLf(0);<br/>Text(0, \"Sum = \");  IntOut(0, Best);  CrLf(0);<br/>]</pre>"}, {"lang": "zkl", "loc": 9, "block": "<pre class=\"text highlighted_source\">fcn maxsubseq(s){<br/>   s.reduce(fcn([(sum, seq, maxsum, maxseq)], x){<br/>      sum=sum+x; seq=T(x).extend(seq);<br/>      if(sum &lt; 0)     return(0,T,maxsum,maxseq);<br/>      if (sum&gt;maxsum) return(sum, seq, sum, seq);<br/>\t\t      return(sum, seq, maxsum, maxseq);<br/>   },<br/>   T(0,T,0,T))[3].reverse();   // --&gt;maxseq.reverse()<br/>}</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 28, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> DATA <span class=\"nu0\">12</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,-<span class=\"nu0\">3</span>,<span class=\"nu0\">3</span>,-<span class=\"nu0\">1</span>,<span class=\"nu0\">0</span>,-<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span>,-<span class=\"nu0\">1</span>,-<span class=\"nu0\">4</span>,<span class=\"nu0\">2</span><br/><span class=\"nu0\">20</span> DATA <span class=\"nu0\">11</span>,-<span class=\"nu0\">1</span>,-<span class=\"nu0\">2</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">5</span>,<span class=\"nu0\">6</span>,-<span class=\"nu0\">2</span>,-<span class=\"nu0\">1</span>,<span class=\"nu0\">4</span>,-<span class=\"nu0\">4</span>,<span class=\"nu0\">2</span>,-<span class=\"nu0\">1</span><br/><span class=\"nu0\">30</span> DATA <span class=\"nu0\">5</span>,-<span class=\"nu0\">1</span>,-<span class=\"nu0\">2</span>,-<span class=\"nu0\">3</span>,-<span class=\"nu0\">4</span>,-<span class=\"nu0\">5</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">FOR</span> n=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3</span><br/><span class=\"nu0\">50</span> READ l<br/><span class=\"nu0\">60</span> <span class=\"kw1\">DIM</span> a<span class=\"br0\">(</span>l<span class=\"br0\">)</span><br/><span class=\"nu0\">70</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> l<br/><span class=\"nu0\">80</span> READ a<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">90</span> <span class=\"kw1\">PRINT</span> a<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/><span class=\"nu0\">100</span> <span class=\"kw1\">IF</span> i&lt;l <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\", \"</span>;<br/><span class=\"nu0\">110</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">120</span> <span class=\"kw1\">PRINT</span> <br/><span class=\"nu0\">130</span> <span class=\"kw1\">LET</span> a=<span class=\"nu0\">1</span>: <span class=\"kw1\">LET</span> m=<span class=\"nu0\">0</span>: <span class=\"kw1\">LET</span> b=<span class=\"nu0\">0</span><br/><span class=\"nu0\">140</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> l<br/><span class=\"nu0\">150</span> <span class=\"kw1\">LET</span> s=<span class=\"nu0\">0</span><br/><span class=\"nu0\">160</span> <span class=\"kw1\">FOR</span> j=i <span class=\"kw1\">TO</span> l<br/><span class=\"nu0\">170</span> <span class=\"kw1\">LET</span> s=s+a<span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/><span class=\"nu0\">180</span> <span class=\"kw1\">IF</span> s&gt;m <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> m=s: <span class=\"kw1\">LET</span> a=i: <span class=\"kw1\">LET</span> b=j<br/><span class=\"nu0\">190</span> <span class=\"kw1\">NEXT</span> j<br/><span class=\"nu0\">200</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">210</span> <span class=\"kw1\">IF</span> a&gt;b <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"[]\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">280</span><br/><span class=\"nu0\">220</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"[\"</span>;<br/><span class=\"nu0\">230</span> <span class=\"kw1\">FOR</span> i=a <span class=\"kw1\">TO</span> b<br/><span class=\"nu0\">240</span> <span class=\"kw1\">PRINT</span> a<span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/><span class=\"nu0\">250</span> <span class=\"kw1\">IF</span> i&lt;b <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\", \"</span>;<br/><span class=\"nu0\">260</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">270</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"]\"</span><br/><span class=\"nu0\">280</span> <span class=\"kw1\">NEXT</span> n</pre>"}]}