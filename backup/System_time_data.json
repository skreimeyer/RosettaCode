{"task": "System_time", "blocks": [{"lang": "ABAP", "loc": 3, "block": "<pre class=\"text highlighted_source\">REPORT system_time.<br/>\u00a0<br/>WRITE: sy-uzeit.</pre>"}, {"lang": "Ada", "loc": 10, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Calendar</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Formatting</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Formatting</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Time_Zones</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Calendar</span>.<span class=\"me1\">Time_Zones</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> System_Time <span class=\"kw1\">is</span><br/>   Now\u00a0: Time\u00a0:= Clock;<br/><span class=\"kw1\">begin</span><br/>   Put_line<span class=\"br0\">(</span>Image<span class=\"br0\">(</span>Date =&gt; Now, Time_Zone =&gt; -<span class=\"nu0\">7</span>*<span class=\"nu0\">60</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> System_Time;</pre>"}, {"lang": "Aime", "loc": 6, "block": "<pre class=\"text highlighted_source\">date d;<br/>\u00a0<br/>d_now(d);<br/>\u00a0<br/>o_form(\"~-/f2/-/f2/ /f2/:/f2/:/f2/\\n\", d_year(d), d_y_month(d), d_m_day(d),<br/>       d_d_hour(d), d_h_minute(d), d_m_second(d));</pre>"}, {"lang": "ALGOL 68", "loc": 5, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw6\">FORMAT</span> time repr <span class=\"sy1\">=</span> $<span class=\"st0\">\"year=\"</span>4d<span class=\"sy1\">,</span><span class=\"st0\">\", month=\"</span>2d<span class=\"sy1\">,</span><span class=\"st0\">\", day=\"</span>2d<span class=\"sy1\">,</span><span class=\"st0\">\", hours=\"</span>2d<span class=\"sy1\">,</span><span class=\"st0\">\",  \\<br/>                   minutes=\"</span>2d<span class=\"sy1\">,</span><span class=\"st0\">\", seconds=\"</span>2d<span class=\"sy1\">,</span><span class=\"st0\">\", day of week=\"</span>d<span class=\"sy1\">,</span><span class=\"st0\">\",  \\<br/>                   daylight-saving-time flag=\"</span>dl$<span class=\"sy1\">;</span><br/><span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>time repr<span class=\"sy1\">,</span> <span class=\"kw27\">local time</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>time repr<span class=\"sy1\">,</span> <span class=\"kw27\">utc time</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "AppleScript", "loc": 1, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw1\">display dialog</span> <span class=\"br0\">(</span>current date<span class=\"br0\">)</span></pre>"}, {"lang": "AutoHotkey", "loc": 2, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/FormatTime.htm\"><span class=\"kw3\">FormatTime</span></a><span class=\"sy0\">,</span> t<br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span>% t</pre>"}, {"lang": "AutoIt", "loc": 1, "block": "<pre class=\"autoit highlighted_source\"><a href=\"http://www.autoitscript.com/autoit3/docs/functions/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"st0\">\"Time\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Year: \"</span><span class=\"sy0\">&amp;</span><span class=\"re0\">@YEAR</span><span class=\"sy0\">&amp;</span><span class=\"st0\">\",Day: \"</span> <span class=\"sy0\">&amp;</span><span class=\"re0\">@MDAY</span><span class=\"sy0\">&amp;</span> <span class=\"st0\">\",Hours: \"</span><span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@HOUR</span></span></a> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\", Minutes: \"</span><span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@MIN</span></span></a> <span class=\"sy0\">&amp;</span><span class=\"st0\">\", Seconds: \"</span><span class=\"sy0\">&amp;</span> <a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@SEC</span></span></a><span class=\"br0\">)</span></pre>"}, {"lang": "AWK", "loc": 1, "block": "<pre class=\"awk highlighted_source\">$ awk '<span class=\"kw2\">BEGIN</span><span class=\"br0\">{</span><span class=\"kw5\">print</span> systime<span class=\"br0\">(</span><span class=\"br0\">)</span>,strftime<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">}</span>'</pre>"}, {"lang": "BaCon", "loc": 5, "block": "<pre class=\"qbasic highlighted_source\"><span class=\"co1\">' BaCon time</span><br/>n <span class=\"sy0\">=</span> NOW<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> n<span class=\"sy0\">,</span> <span class=\"st0\">\" seconds since January 1st, 1970\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> YEAR<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> MONTH<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> DAY<span class=\"br0\">(</span>n<span class=\"br0\">)</span> FORMAT <span class=\"st0\">\"%04d/%02d/%02d \"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> HOUR<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> MINUTE<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">,</span> SECOND<span class=\"br0\">(</span>n<span class=\"br0\">)</span> FORMAT <span class=\"st0\">\"%02d:%02d:%02d\\n\"</span></pre>"}, {"lang": "BASIC", "loc": 1, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcktimer.shtml\"><span class=\"kw3\">TIMER</span></a></pre>"}, {"lang": "Batch File", "loc": 2, "block": "<pre class=\"dos highlighted_source\">date /t<br/>time /t</pre>"}, {"lang": "BBC BASIC", "loc": 1, "block": "<pre class=\"text highlighted_source\">      PRINT TIME$</pre>"}, {"lang": "C", "loc": 8, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include&lt;time.h&gt;</span><br/><span class=\"co2\">#include&lt;stdio.h&gt;</span><br/><span class=\"co2\">#include&lt;stdlib.h&gt;</span><br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  time_t my_time <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/ctime.html\"><span class=\"kw3\">ctime</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>my_time<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 8, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;boost/date_time/posix_time/posix_time.hpp&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   boost<span class=\"sy4\">::</span><span class=\"me2\">posix_time</span><span class=\"sy4\">::</span><span class=\"me2\">ptime</span> t <span class=\"br0\">(</span> boost<span class=\"sy4\">::</span><span class=\"me2\">posix_time</span><span class=\"sy4\">::</span><span class=\"me2\">second_clock</span><span class=\"sy4\">::</span><span class=\"me2\">local_time</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> to_simple_string<span class=\"br0\">(</span> t <span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 1, "block": "<pre class=\"csharp highlighted_source\">Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>DateTime<span class=\"sy0\">.</span><span class=\"me1\">Now</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Clojure", "loc": 7, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>import '<span class=\"br0\">[</span>java<span class=\"sy0\">.</span>util Date<span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"co1\">; the current system date time string</span><br/><span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"br0\">(</span>new Date<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">; the system time as milliseconds since 1970</span><br/><span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span> <span class=\"br0\">(</span>new Date<span class=\"br0\">)</span> getTime<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">; or</span><br/><span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"br0\">(</span>System/currentTimeMillis<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 15, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  WS-CURRENT-DATE-FIELDS<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">05</span>  WS-CURRENT-<span class=\"kw3\">DATE</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-YEAR    <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-MONTH   <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-<span class=\"kw3\">DAY</span>     <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">05</span>  WS-CURRENT-<span class=\"kw3\">TIME</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-HOUR    <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-MINUTE  <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-SECOND  <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>               <span class=\"nu0\">10</span>  WS-CURRENT-MS      <span class=\"kw3\">PIC</span>  <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">05</span>  WS-DIFF-FROM-GMT       <span class=\"kw3\">PIC</span> S9<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">FUNCTION</span> CURRENT-<span class=\"kw3\">DATE</span> <span class=\"kw2\">TO</span> WS-CURRENT-DATE-FIELDS<span class=\"sy0\">.</span></pre>"}, {"lang": "ColdFusion", "loc": 11, "block": "<pre class=\"cfm highlighted_source\"><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">cfscript</span><span class=\"sy0\">&gt;</span></span><br/>  // Date Time<br/>  currentTime = Now();<br/>  writeOutput( currentTime );<br/>\u00a0<br/>  // Epoch<br/>  // Credit for Epoch time should go to Ben Nadel<br/>  // bennadel.com is his blog<br/>  utcDate = dateConvert( \"local2utc\", currentTime );<br/>  writeOutput( utcDate.getTime() );<br/><span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">cfscript</span><span class=\"sy0\">&gt;</span></span></pre>"}, {"lang": "Common Lisp", "loc": 2, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>multiple-value-bind <span class=\"br0\">(</span>second minute hour day month year<span class=\"br0\">)</span> <span class=\"br0\">(</span>get-decoded-time<span class=\"br0\">)</span><br/> \t  <span class=\"br0\">(</span>format t <span class=\"st0\">\"~4,'0D-~2,'0D-~2,'0D ~2,'0D:~2,'0D:~2,'0D\"</span> year month day hour minute second<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 1, "block": "<pre class=\"d highlighted_source\">Stdout<span class=\"br0\">(</span>Clock.<span class=\"me1\">now</span>.<span class=\"me1\">span</span>.<span class=\"me1\">days</span> <span class=\"sy0\">/</span> <span class=\"nu0\">365</span><span class=\"br0\">)</span>.<span class=\"me1\">newline</span><span class=\"sy0\">;</span></pre>"}, {"lang": "DCL", "loc": 6, "block": "<pre class=\"dcl highlighted_source\">$ start_time <span class=\"sy0\">=</span> <span class=\"kw2\">f$time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>$ <span class=\"kw1\">wait</span> <span class=\"nu0\">0</span>::<span class=\"nu0\">10</span><br/>$ end_time <span class=\"sy0\">=</span> <span class=\"kw2\">f$time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>$ <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"start time was \"</span>, start_time<br/>$ <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"end time was   \"</span>, end_time<br/>$ <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"delta time is         \"</span>, <span class=\"kw2\">f$delta_time</span><span class=\"br0\">(</span> start_time, end_time <span class=\"br0\">)</span></pre>"}, {"lang": "Delphi", "loc": 1, "block": "<pre class=\"delphi highlighted_source\">lblDateTime<span class=\"sy1\">.</span><span class=\"me1\">Caption</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">FormatDateTime</span><span class=\"br0\">(</span><span class=\"st0\">'dd mmmm yyyy hh:mm:ss'</span><span class=\"sy1\">,</span> Now<span class=\"br0\">)</span><span class=\"sy1\">;</span></pre>"}, {"lang": "DWScript", "loc": 1, "block": "<pre class=\"delphi highlighted_source\">PrintLn<span class=\"br0\">(</span><span class=\"kw3\">FormatDateTime</span><span class=\"br0\">(</span><span class=\"st0\">'dd mmmm yyyy hh:mm:ss'</span><span class=\"sy1\">,</span> Now<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span></pre>"}, {"lang": "E", "loc": 1, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/timer\"><span class=\"kw7\">timer</span></a>.<span class=\"me1\">now</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Elena", "loc": 6, "block": "<pre class=\"text highlighted_source\">import extensions.<br/>\u00a0<br/>program =<br/>[<br/>    console printLine(system'calendar'Date now).<br/>].</pre>"}, {"lang": "Elixir", "loc": 8, "block": "<pre class=\"text highlighted_source\">:os.timestamp                   # =&gt; {MegaSecs, Secs, MicroSecs}<br/>:erlang.time                    # =&gt; {Hour, Minute, Second}<br/>:erlang.date                    # =&gt; {Year, Month, Day}<br/>:erlang.localtime               # =&gt; {{Year, Month, Day}, {Hour, Minute, Second}}<br/>:erlang.universaltime           # =&gt; {{Year, Month, Day}, {Hour, Minute, Second}}<br/>\u00a0<br/>:calendar.local_time            # =&gt; {{Year, Month, Day}, {Hour, Minute, Second}}<br/>:calendar.universal_time        # =&gt; {{Year, Month, Day}, {Hour, Minute, Second}}</pre>"}, {"lang": "Emacs Lisp", "loc": 3, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>message <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>current-time-string<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"sy0\">=&gt;</span><br/><span class=\"st0\">\"Wed Oct 14 22:21:05 1987\"</span></pre>"}, {"lang": "Erlang", "loc": 2, "block": "<pre class=\"erlang highlighted_source\"><span class=\"nu0\">1</span><span class=\"sy3\">&gt;</span> <a href=\"http://erlang.org/doc/man/os.html\"><span class=\"kw5\">os</span></a>:<span class=\"kw3\">time</span><span class=\"re3\">stamp</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"br0\">{</span><span class=\"nu0\">1250</span><span class=\"sy1\">,</span><span class=\"nu0\">222584</span><span class=\"sy1\">,</span><span class=\"nu0\">635452</span><span class=\"br0\">}</span></pre>"}, {"lang": "Excel", "loc": 1, "block": "<pre class=\"text highlighted_source\">=NOW()</pre>"}, {"lang": "F#", "loc": 1, "block": "<pre class=\"fsharp highlighted_source\">printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>System.<span class=\"me1\">DateTime</span>.<span class=\"me1\">Now</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"u\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 3, "block": "<pre class=\"text highlighted_source\">USE: calendar<br/>\u00a0<br/>now .</pre>"}, {"lang": "Falcon", "loc": 6, "block": "<pre class=\"falcon highlighted_source\">\u00a0<br/><span class=\"coMULTI\">/* Added by Aykayayciti Earl Lamont Montgomery<br/>April 10th, 2018 */</span><br/>\u00a0<br/><span class=\"sy0\">&gt;</span> <a href=\"http://falconpl.org/project_docs/core/functions.html#CurrentTime\"><span class=\"kw6\">CurrentTime</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span>.<a href=\"http://falconpl.org/project_docs/core/functions.html#toString\"><span class=\"kw6\">toString</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Fantom", "loc": 6, "block": "<pre class=\"text highlighted_source\">fansh&gt; DateTime.nowTicks<br/>351823905158000000<br/>fansh&gt; DateTime.now<br/>2011-02-24T00:51:47.066Z London<br/>fansh&gt; DateTime.now.toJava<br/>1298508885979</pre>"}, {"lang": "Forth", "loc": 18, "block": "<pre class=\"text highlighted_source\">[UNDEFINED] <a class=\"__cf_email__\" data-cfemail=\"703d2330\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> [IF]                                   \\ Win32Forth (rolls over daily)<br/> [DEFINED]\u00a0?MS [IF] ( -- ms )<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"fc918fbc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\u00a0?MS\u00a0;                                         \\ iForth<br/> [ELSE] [DEFINED] cputime [IF] ( -- Dusec )<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"066b7546\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> cputime d+ 1000 um/mod nip\u00a0;                  \\ gforth: Anton Ertl<br/> [ELSE] [DEFINED] <a class=\"__cf_email__\" data-cfemail=\"c4b0ada9a1b684\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> [IF] ( -- Dusec )<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"c9a4ba89\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> <a class=\"__cf_email__\" data-cfemail=\"67130e0a021527\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> &gt;us 1000 um/mod nip\u00a0;                  \\ bigForth<br/> [ELSE] [DEFINED] gettimeofday [IF] ( -- usec sec )<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"88e5fbc8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> gettimeofday 1000 MOD 1000 * SWAP 1000 / +\u00a0;  \\ PFE<br/> [ELSE] [DEFINED] counter [IF]<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"09647a49\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> counter\u00a0;                                     \\ SwiftForth<br/> [ELSE] [DEFINED] GetTickCount [IF]<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"84e9f7c4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> GetTickCount\u00a0;                                \\ VFX Forth<br/> [ELSE] [DEFINED] MICROSECS [IF]<br/>  \u00a0: <a class=\"__cf_email__\" data-cfemail=\"127f6152\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>  microsecs 1000 UM/MOD nip\u00a0;                  \\  MacForth<br/>[THEN] [THEN] [THEN] [THEN] [THEN] [THEN] [THEN]<br/>\u00a0<br/><a class=\"__cf_email__\" data-cfemail=\"773a2437\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> .   \\ print millisecond counter</pre>"}, {"lang": "Fortran", "loc": 13, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">start</span>, <span class=\"kw1\">stop</span>, rate<br/><span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"kw3\">result</span><br/>\u00a0<br/><span class=\"co1\">! optional 1st integer argument (COUNT) is current raw system clock counter value (not UNIX epoch millis!!)</span><br/><span class=\"co1\">! optional 2nd integer argument (COUNT_RATE) is clock cycles per second</span><br/><span class=\"co1\">! optional 3rd integer argument (COUNT_MAX) is maximum clock counter value</span><br/><span class=\"co1\">call system_clock( start, rate )</span><br/>\u00a0<br/><span class=\"kw3\">result</span> <span class=\"sy0\">=</span> do_timed_work<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">call system_clock( stop )</span><br/>\u00a0<br/>print <span class=\"sy0\">*</span>, <span class=\"st0\">\"elapsed time: \"</span>, <span class=\"kw3\">real</span><span class=\"br0\">(</span><span class=\"kw1\">stop</span> <span class=\"sy0\">-</span> start<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"kw3\">real</span><span class=\"br0\">(</span>rate<span class=\"br0\">)</span></pre>"}, {"lang": "FreeBASIC", "loc": 4, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"kw1\">Date</span> + <span class=\"st0\">\" \"</span> + <span class=\"kw1\">Time</span>  <span class=\"co1\">'' returns system date/time in format\u00a0: mm-dd-yyyy hh:mm:ss</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Gambas", "loc": 5, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/now\"><span class=\"kw2\">Now</span></a>, <span class=\"st0\">\"dddd dd mmmm yyyy hh:nn:ss\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 10, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"time\"</span><br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    t <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>t<span class=\"sy1\">)</span>                                    <span class=\"co1\">// default format</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span>t<span class=\"sy3\">.</span><span class=\"me1\">Format</span><span class=\"sy1\">(</span><span class=\"st0\">\"Mon Jan  2 15:04:05 2006\"</span><span class=\"sy1\">))</span> <span class=\"co1\">// some custom format</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 2, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> nowMillis <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=Date&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Date</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">time</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">'Milliseconds since the start of the UNIX Epoch (Jan 1, 1970) == '</span> <span class=\"sy0\">+</span> nowMillis</pre>"}, {"lang": "GUISS", "loc": 1, "block": "<pre class=\"text highlighted_source\">Taskbar</pre>"}, {"lang": "Haskell", "loc": 11, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Time<br/>       <span class=\"br0\">(</span>getClockTime<span class=\"sy0\">,</span> toCalendarTime<span class=\"sy0\">,</span> formatCalendarTime<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Locale <span class=\"br0\">(</span>defaultTimeLocale<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  ct <span class=\"sy0\">&lt;-</span> getClockTime<br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> ct <span class=\"co1\">-- print default format, or</span><br/>  cal <span class=\"sy0\">&lt;-</span> toCalendarTime ct<br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> formatCalendarTime defaultTimeLocale <span class=\"st0\">\"%a\u00a0%b\u00a0%e\u00a0%H:%M:%S\u00a0%Y\"</span> cal</pre>"}, {"lang": "HicEst", "loc": 4, "block": "<pre class=\"hicest highlighted_source\">seconds_since_midnight <span class=\"sy1\">=</span> <span class=\"kw1\">TIME</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">! msec as fraction</span><br/>\u00a0<br/>seconds_since_midnight <span class=\"sy1\">=</span> <span class=\"kw1\">TIME</span><span class=\"br0\">(</span>Year<span class=\"sy1\">=</span>yr<span class=\"sy1\">,</span> Day<span class=\"sy1\">=</span>day<span class=\"sy1\">,</span> WeekDay<span class=\"sy1\">=</span>wday<span class=\"sy1\">,</span> Gregorian<span class=\"sy1\">=</span>gday<span class=\"br0\">)</span><br/>                             <span class=\"co1\">! other options e.g. Excel, YYYYMMDD (num or text)</span></pre>"}, {"lang": "HolyC", "loc": 5, "block": "<pre class=\"text highlighted_source\">CDateStruct ds;<br/>Date2Struct(&amp;ds, Now + local_time_offset);<br/>\u00a0<br/>Print(\"%04d-%02d-%02d\u00a0%02d:%02d:%02d\\n\", ds.year, ds.mon, ds.day_of_mon, ds.hour, ds.min, ds.sec);<br/>\u00a0</pre>"}, {"lang": "Hoon", "loc": 1, "block": "<pre class=\"text highlighted_source\">now</pre>"}, {"lang": "IDL", "loc": 1, "block": "<pre> print,systime(0)\n    Wed Feb 10 09:41:14 2010\n print,systime(1)\n      1.2658237e+009\n</pre>"}, {"lang": "Io", "loc": 1, "block": "<pre class=\"io highlighted_source\"><span class=\"kw3\">Date</span> now println</pre>"}, {"lang": "Icon and Unicon", "loc": 11, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"&amp;time - milliseconds of CPU time = \"</span><span class=\"sy0\">,&amp;</span><span class=\"kw3\">time</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"&amp;clock - Time of day as hh:mm:ss (24-hour format) = \"</span><span class=\"sy0\">,&amp;</span><span class=\"kw3\">clock</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"&amp;date - current date in yyyy/mm/dd format = \"</span><span class=\"sy0\">,&amp;</span><span class=\"kw3\">date</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"&amp;dateline - timestamp with day of the week, date, and current time to the minute = \"</span><span class=\"sy0\">,&amp;</span><span class=\"kw3\">dateline</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"kw4\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"Unicon\"</span><span class=\"sy0\">,&amp;</span><span class=\"kw3\">version</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span>  <br/>       <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"&amp;now - time in seconds since the epoch = \"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span><span class=\"kw3\">now</span><span class=\"br0\">)</span>  <span class=\"co1\"># Unicon only</span><br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\">   <span class=\"nu0\">6</span>!:<span class=\"nu0\">0</span> <span class=\"st_h\">''</span><br/><span class=\"nu0\">2008</span> <span class=\"nu0\">1</span> <span class=\"nu0\">23</span> <span class=\"nu0\">12</span> <span class=\"nu0\">52</span> <span class=\"nu0\">10.341</span></pre>"}, {"lang": "Java", "loc": 5, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> SystemTime<span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"%tc%n\"</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">currentTimeMillis</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 2, "block": "<pre class=\"javascript highlighted_source\">console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <span class=\"kw4\">Date</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">// =&gt; Sat, 28 May 2011 08:22:53 GMT</span><br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"kw4\">Date</span>.<span class=\"me1\">now</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">// =&gt; 1306571005417 // Unix epoch</span></pre>"}, {"lang": "jq", "loc": 5, "block": "<pre class=\"text highlighted_source\">$ jq -n 'now | [., todate]'<br/>[<br/>  1437619000.970498,<br/>  \"2015-07-23T02:36:40Z\"<br/>]</pre>"}, {"lang": "Julia", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>ts = time()<br/>\u00a0<br/>println(\"The system time is (in ISO 8601 format):\")<br/>println(strftime(\"   \u00a0%F\u00a0%T\u00a0%Z\", ts))<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 6, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"%tc\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>System.<span class=\"me1\">currentTimeMillis</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Lasso", "loc": 2, "block": "<pre class=\"text highlighted_source\">date-&gt;format('%Q\u00a0%T')<br/>date-&gt;asInteger</pre>"}, {"lang": "LFE", "loc": 4, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span>os<span class=\"sy0\">:</span><span class=\"me1\">timestamp</span><span class=\"br0\">)</span><br/>#<span class=\"br0\">(</span><span class=\"nu0\">1423</span> <span class=\"nu0\">786308</span> <span class=\"nu0\">145798</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Liberty BASIC", "loc": 4, "block": "<pre class=\"lb highlighted_source\"><span class=\"kw1\">print</span> <span class=\"kw2\">time$</span><span class=\"br0\">(</span><span class=\"br0\">)</span>               <span class=\"co1\">'time now as string \"16:21:44\"</span><br/><span class=\"kw1\">print</span> <span class=\"kw2\">time$</span><span class=\"br0\">(</span><span class=\"st0\">\"seconds\"</span><span class=\"br0\">)</span>      <span class=\"co1\">'seconds since midnight as number 32314</span><br/><span class=\"kw1\">print</span> <span class=\"kw2\">time$</span><span class=\"br0\">(</span><span class=\"st0\">\"milliseconds\"</span><span class=\"br0\">)</span> <span class=\"co1\">'milliseconds since midnight as number 33221342</span><br/><span class=\"kw1\">print</span> <span class=\"kw2\">time$</span><span class=\"br0\">(</span><span class=\"st0\">\"ms\"</span><span class=\"br0\">)</span>           <span class=\"co1\">'milliseconds since midnight as number 33221342</span></pre>"}, {"lang": "Lingo", "loc": 15, "block": "<pre class=\"text highlighted_source\">put time()<br/>-- \"03:45\"<br/>\u00a0<br/>put date()<br/>-- \"01.10.2016\"<br/>\u00a0<br/>put the systemdate<br/>-- date( 2016, 10, 1 )<br/>\u00a0<br/>put the systemdate.seconds<br/>-- 13950<br/>\u00a0<br/>-- milliseconds since last boot, due to higher resolution better suited for random number seeding<br/>put _system.milliseconds<br/>-- 41746442</pre>"}, {"lang": "LiveCode", "loc": 1, "block": "<pre class=\"text highlighted_source\">put the system time</pre>"}, {"lang": "Locomotive Basic", "loc": 2, "block": "<pre class=\"locobasic highlighted_source\"><span class=\"kw1\">print</span> <span class=\"kw1\">time</span><br/><span class=\"kw1\">print</span> <span class=\"kw1\">time</span>/<span class=\"nu0\">300</span>;<span class=\"st0\">\"s since last reboot\"</span></pre>"}, {"lang": "Logo", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>to time<br/>  output first first shell [date +%s]<br/>end<br/>\u00a0<br/>make \"start time<br/>wait 300             \u00a0; 60ths of a second<br/>print time -\u00a0:start  \u00a0; 5</pre>"}, {"lang": "Lua", "loc": 1, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">os.date</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>print str$(now,\"long time\"), time$(now)<br/>\u00a0</pre>"}, {"lang": "Mathematica", "loc": 2, "block": "<pre class=\"text highlighted_source\">Print[DateList[]]<br/>Print[AbsoluteTime[]]</pre>"}, {"lang": "MATLAB / Octave", "loc": 1, "block": "<pre class=\"matlab highlighted_source\"> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/datestr.html\"><span class=\"kw2\">datestr</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/now.html\"><span class=\"kw2\">now</span></a><span class=\"br0\">)</span></pre>"}, {"lang": "Maxima", "loc": 10, "block": "<pre class=\"text highlighted_source\">/* Time and date in a formatted string */<br/>timedate();<br/>\"2012-08-27 20:26:23+10:00\"<br/>\u00a0<br/>/* Time in seconds elapsed since 1900/1/1 0:0:0 */<br/>absolute_real_time();<br/>\u00a0<br/>/* Time in seconds since Maxima was started */<br/>elapsed_real_time();<br/>elapsed_run_time();</pre>"}, {"lang": "Modula-2", "loc": 23, "block": "<pre class=\"modula2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> Mytime;<br/>\u00a0<br/><span class=\"kw1\">FROM</span> SysClock <span class=\"kw1\">IMPORT</span><br/>  GetClock<span class=\"sy0\">,</span> DateTime;<br/><span class=\"kw1\">FROM</span> STextIO <span class=\"kw1\">IMPORT</span><br/>  WriteString<span class=\"sy0\">,</span> WriteLn;<br/><span class=\"kw1\">FROM</span> FormatDT <span class=\"kw1\">IMPORT</span><br/>  DateTimeToString;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>  CurrentTime<span class=\"sy0\">:</span> DateTime;<br/>  DateStr<span class=\"sy0\">,</span> TimeStr<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> .. <span class=\"nu0\">20</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/><span class=\"kw1\">BEGIN</span><br/>  GetClock<span class=\"br0\">(</span>CurrentTime<span class=\"br0\">)</span>;<br/>  DateTimeToString<span class=\"br0\">(</span>CurrentTime<span class=\"sy0\">,</span> DateStr<span class=\"sy0\">,</span> TimeStr<span class=\"br0\">)</span>;<br/>  WriteString<span class=\"br0\">(</span><span class=\"st0\">\"Current time: \"</span><span class=\"br0\">)</span>;<br/>  WriteString<span class=\"br0\">(</span>DateStr<span class=\"br0\">)</span>;<br/>  WriteString<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span>;<br/>  WriteString<span class=\"br0\">(</span>TimeStr<span class=\"br0\">)</span>;<br/>  WriteLn;<br/><span class=\"kw1\">END</span> Mytime.<br/>\u00a0</pre>"}, {"lang": "Modula-3", "loc": 7, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> MyTime <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">IMPORT</span> IO<span class=\"sy0\">,</span> FmtTime<span class=\"sy0\">,</span> Time;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"Current time: \"</span> &amp; FmtTime.<span class=\"me1\">Long</span><span class=\"br0\">(</span>Time.<span class=\"me1\">Now</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> MyTime.</pre>"}, {"lang": "MUMPS", "loc": 6, "block": "<pre class=\"text highlighted_source\">SYSTIME<br/> NEW PH<br/> SET PH=$PIECE($HOROLOG,\",\",2)<br/> WRITE \"The system time is \",PH\\3600,\":\",PH\\60#60,\":\",PH#60<br/> KILL PH<br/> QUIT</pre>"}, {"lang": "Nemerle", "loc": 1, "block": "<pre class=\"text highlighted_source\">System.Console.Write(System.DateTime.Now);</pre>"}, {"lang": "NetRexx", "loc": 3, "block": "<pre class=\"netrexx highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> java.<span class=\"me0\">text</span>.<span class=\"me0\">SimpleDateFormat</span><br/><span class=\"kw1\">say</span> SimpleDateFormat<span class=\"br0\">(</span><span class=\"st0\">\"yyyy-MM-dd-HH.mm.ss.SSS\"</span><span class=\"br0\">)</span>.<span class=\"me0\">format</span><span class=\"br0\">(</span>Date<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "NewLISP", "loc": 2, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"sy1\">&gt;</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#date\"><span class=\"kw1\">date</span></a><span class=\"br0\">)</span><br/><span class=\"st0\">\"Sun Sep 28 20:17:55 2014\"</span></pre>"}, {"lang": "Nim", "loc": 5, "block": "<pre class=\"text highlighted_source\">import times<br/>\u00a0<br/>echo(getDateStr())<br/>echo(getClockStr())<br/>echo(getTime())</pre>"}, {"lang": "Objective-C", "loc": 1, "block": "<pre class=\"objc highlighted_source\">NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%@\"</span>, <span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSDate_Class/\"><span class=\"kw5\">NSDate</span></a> date<span class=\"br0\">]</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Objeck", "loc": 4, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Time<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>  t <span class=\"sy0\">:=</span> Time<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  IO.Console<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetInstance</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span>t<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetHours</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\":\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span>t<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetMinutes</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\":\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span>t<span class=\"sy0\">-&gt;</span><span class=\"me1\">GetSeconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 12, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"sy0\">#</span>load <span class=\"st0\">\"unix.cma\"</span><span class=\"sy0\">;;</span><br/><span class=\"kw1\">open</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html\"><span class=\"kw2\">Unix</span></a><span class=\"sy0\">;;</span><br/><span class=\"kw1\">let</span> <span class=\"br0\">{</span>tm_sec <span class=\"sy0\">=</span> sec<span class=\"sy0\">;</span><br/>     tm_min <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmin\"><span class=\"kw3\">min</span></a><span class=\"sy0\">;</span><br/>     tm_hour <span class=\"sy0\">=</span> hour<span class=\"sy0\">;</span><br/>     tm_mday <span class=\"sy0\">=</span> mday<span class=\"sy0\">;</span><br/>     tm_mon <span class=\"sy0\">=</span> mon<span class=\"sy0\">;</span><br/>     tm_year <span class=\"sy0\">=</span> year<span class=\"sy0\">;</span><br/>     tm_wday <span class=\"sy0\">=</span> wday<span class=\"sy0\">;</span><br/>     tm_yday <span class=\"sy0\">=</span> yday<span class=\"sy0\">;</span><br/>     tm_isdst <span class=\"sy0\">=</span> isdst<span class=\"br0\">}</span> <span class=\"sy0\">=</span> localtime <span class=\"br0\">(</span>time <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%04d-%02d-%02d\u00a0%02d:%02d:%02d\\n\"</span> <span class=\"br0\">(</span>year <span class=\"sy0\">+</span> <span class=\"nu0\">1900</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>mon <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> mday hour <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmin\"><span class=\"kw3\">min</span></a> sec<span class=\"sy0\">;</span></pre>"}, {"lang": "Oforth", "loc": 2, "block": "<pre class=\"text highlighted_source\">System.tick println<br/>#[ #sqrt 1000000 seq map sum println ] bench</pre>"}, {"lang": "Oz", "loc": 8, "block": "<pre class=\"oz highlighted_source\"><span class=\"br0\">{</span>Show <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>time<span class=\"br0\">}</span><span class=\"br0\">}</span>      <span class=\"co1\">%% posix time (seconds since 1970-01-01)</span><br/><span class=\"br0\">{</span>Show <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>gmTime<span class=\"br0\">}</span><span class=\"br0\">}</span>    <span class=\"co1\">%% current UTC as a record</span><br/><span class=\"br0\">{</span>Show <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>localTime<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"co1\">%% current local time as record</span><br/>\u00a0<br/><span class=\"co1\">%% Also interesting: undocumented module OsTime</span><br/><span class=\"co1\">%% When did posix time reach 1 billion?</span><br/><span class=\"br0\">{</span>Show <span class=\"br0\">{</span>OsTime<span class=\"sy0\">.</span>gmtime 1000000000<span class=\"br0\">}</span><span class=\"br0\">}</span><br/><span class=\"br0\">{</span>Show <span class=\"br0\">{</span>OsTime<span class=\"sy0\">.</span>localtime 1000000000<span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">system</span><span class=\"br0\">(</span><span class=\"st0\">\"date\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 43, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> systime<span class=\"sy1\">;</span><br/><span class=\"kw1\">uses</span> DOS<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">{ Format digit with leading zero }</span><br/><span class=\"kw1\">function</span> lz<span class=\"br0\">(</span>w<span class=\"sy1\">:</span> <span class=\"kw4\">word</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  s<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  str<span class=\"br0\">(</span>w<span class=\"sy1\">,</span>s<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">if</span> length<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>    s <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">'0'</span> <span class=\"sy3\">+</span> s<span class=\"sy1\">;</span><br/>  lz <span class=\"sy1\">:</span><span class=\"sy3\">=</span> s<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  h<span class=\"sy1\">,</span>m<span class=\"sy1\">,</span>s<span class=\"sy1\">,</span>c<span class=\"sy1\">:</span> <span class=\"kw4\">word</span><span class=\"sy1\">;</span><br/>  yr<span class=\"sy1\">,</span>mo<span class=\"sy1\">,</span>da<span class=\"sy1\">,</span>dw<span class=\"sy1\">:</span> <span class=\"kw4\">word</span><span class=\"sy1\">;</span><br/>  dt<span class=\"sy1\">:</span> datetime<span class=\"sy1\">;</span><br/>  t<span class=\"sy1\">,</span>ssm<span class=\"sy1\">:</span> <span class=\"kw4\">longint</span><span class=\"sy1\">;</span><br/>  regs<span class=\"sy1\">:</span> registers<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>  <span class=\"coMULTI\">{ Time and Date }</span><br/>  GetTime<span class=\"br0\">(</span>h<span class=\"sy1\">,</span>m<span class=\"sy1\">,</span>s<span class=\"sy1\">,</span>c<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>lz<span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">':'</span><span class=\"sy1\">,</span>lz<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">':'</span><span class=\"sy1\">,</span>lz<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">'.'</span><span class=\"sy1\">,</span>c<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  GetDate<span class=\"br0\">(</span>yr<span class=\"sy1\">,</span>mo<span class=\"sy1\">,</span>da<span class=\"sy1\">,</span>dw<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>yr<span class=\"sy1\">,</span><span class=\"st0\">'-'</span><span class=\"sy1\">,</span>lz<span class=\"br0\">(</span>mo<span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">'-'</span><span class=\"sy1\">,</span>lz<span class=\"br0\">(</span>da<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"coMULTI\">{ Turbo Epoch, seconds }</span><br/>  <span class=\"kw1\">with</span> dt <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>    year <span class=\"sy1\">:</span><span class=\"sy3\">=</span> yr<span class=\"sy1\">;</span> month <span class=\"sy1\">:</span><span class=\"sy3\">=</span> mo<span class=\"sy1\">;</span> day <span class=\"sy1\">:</span><span class=\"sy3\">=</span> da<span class=\"sy1\">;</span><br/>    hour <span class=\"sy1\">:</span><span class=\"sy3\">=</span> h<span class=\"sy1\">;</span> min <span class=\"sy1\">:</span><span class=\"sy3\">=</span> m<span class=\"sy1\">;</span> sec <span class=\"sy1\">:</span><span class=\"sy3\">=</span> s<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  packtime<span class=\"br0\">(</span>dt<span class=\"sy1\">,</span>t<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"coMULTI\">{ Seconds since midnight, PC-BIOS 1Ah }</span><br/>  regs<span class=\"sy1\">.</span><span class=\"me1\">ah</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> Intr<span class=\"br0\">(</span><span class=\"re0\">$1A</span><span class=\"sy1\">,</span>regs<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  ssm <span class=\"sy1\">:</span><span class=\"sy3\">=</span> round<span class=\"br0\">(</span><span class=\"br0\">(</span>regs<span class=\"sy1\">.</span><span class=\"me1\">cx</span> <span class=\"sy3\">*</span> <span class=\"nu0\">65536</span> <span class=\"sy3\">+</span> regs<span class=\"sy1\">.</span><span class=\"me1\">dx</span><span class=\"br0\">)</span> <span class=\"sy3\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">65536</span> <span class=\"sy3\">/</span> <span class=\"nu0\">1192180</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>ssm<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 1, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <a href=\"http://perldoc.perl.org/functions/scalar.html\"><span class=\"kw3\">scalar</span></a> <a href=\"http://perldoc.perl.org/functions/localtime.html\"><span class=\"kw3\">localtime</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 2, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw3\">say</span> DateTime<span class=\"sy0\">.</span><span class=\"me1\">now</span><span class=\"sy0\">;</span><br/>dd DateTime<span class=\"sy0\">.</span><span class=\"me1\">now</span><span class=\"sy0\">.</span><span class=\"me1\">Instant</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 6, "block": "<pre class=\"text highlighted_source\">include timedate.e<br/>?format_timedate(date(),\"Dddd, Mmmm dth, YYYY, h:mm:ss pm\")<br/>\u00a0<br/>atom t0 = time()<br/>sleep(0.9)<br/>?time()-t0</pre>"}, {"lang": "PHP", "loc": 1, "block": "<pre class=\"php highlighted_source\"><span class=\"kw1\">echo</span> <a href=\"http://www.php.net/time\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PicoLisp", "loc": 1, "block": "<pre class=\"text highlighted_source\">(stamp)</pre>"}, {"lang": "PL/I", "loc": 4, "block": "<pre class=\"text highlighted_source\">put (datetime()); /* writes out the date and time */<br/>                  /* The time is given to thousandths of a second, */<br/>                  /* in the format hhmiss999 */<br/>put (time());     /* gives the time in the format hhmiss999. */</pre>"}, {"lang": "PowerShell", "loc": 1, "block": "<pre class=\"powershell highlighted_source\"><span class=\"kw1\">Get-Date</span></pre>"}, {"lang": "PureBasic", "loc": 6, "block": "<pre class=\"purebasic highlighted_source\">time<span class=\"sy0\">=</span><span class=\"kw2\">Date</span><span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\">; Unix timestamp</span><br/>time$<span class=\"sy0\">=</span><span class=\"kw2\">FormatDate</span><span class=\"br0\">(</span><span class=\"st0\">\"%mm.%dd.%yyyy\u00a0%hh:%ii:%ss\"</span>,time<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; following value is only reasonable accurate, on Windows it can differ by +/- 20 ms</span><br/>ms_counter<span class=\"sy0\">=</span><span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"co1\">; could use API like QueryPerformanceCounter_() on Windows for more accurate values</span></pre>"}, {"lang": "Python", "loc": 2, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/><span class=\"kw1\">print</span> <span class=\"kw3\">time</span>.<span class=\"me1\">ctime</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Q", "loc": 12, "block": "<pre class=\"q highlighted_source\">q<span class=\"br0\">)</span><span class=\"sy0\">.</span>z<span class=\"sy0\">.</span>D<br/>2010<span class=\"sy0\">.</span>01<span class=\"sy0\">.</span>25<br/>q<span class=\"br0\">)</span><span class=\"sy0\">.</span>z<span class=\"sy0\">.</span>N<br/>0D14:<span class=\"nu0\">17</span>:<span class=\"nu16\">45.519682000</span><br/>q<span class=\"br0\">)</span><span class=\"sy0\">.</span>z<span class=\"sy0\">.</span>P<br/>2010<span class=\"sy0\">.</span>01<span class=\"sy0\">.</span>25D14:<span class=\"nu0\">17</span>:<span class=\"nu16\">46.962375000</span><br/>q<span class=\"br0\">)</span><span class=\"sy0\">.</span>z<span class=\"sy0\">.</span>T<br/><span class=\"nu0\">14</span>:<span class=\"nu0\">17</span>:<span class=\"nu16\">47.817</span><br/>q<span class=\"br0\">)</span><span class=\"sy0\">.</span>z<span class=\"sy0\">.</span>Z<br/>2010<span class=\"sy0\">.</span>01<span class=\"sy0\">.</span>25T14:<span class=\"nu0\">17</span>:<span class=\"nu16\">48.711</span><br/>q<span class=\"br0\">)</span><span class=\"sy0\">.</span>z<span class=\"sy0\">.</span>z<br/>2010<span class=\"sy0\">.</span>01<span class=\"sy0\">.</span>25T19:<span class=\"nu0\">17</span>:<span class=\"nu16\">59.445</span></pre>"}, {"lang": "R", "loc": 1, "block": "<pre class=\"text highlighted_source\">Sys.time()</pre>"}, {"lang": "Racket", "loc": 3, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(require racket/date)<br/>(date-&gt;string (current-date))</pre>"}, {"lang": "Raven", "loc": 1, "block": "<pre class=\"text highlighted_source\">time dup print \"\\n\" print int '%a\u00a0%b\u00a0%e\u00a0%H:%M:%S\u00a0%Y' date</pre>"}, {"lang": "REBOL", "loc": 2, "block": "<pre class=\"rebol highlighted_source\"><span class=\"kw3\">now</span><br/><span class=\"kw3\">print</span> <span class=\"kw3\">rejoin</span> <span class=\"br0\">[</span><span class=\"kw3\">now</span><span class=\"sy0\">/</span>year <span class=\"st0\">\"-\"</span> <span class=\"kw3\">now</span><span class=\"sy0\">/</span>month <span class=\"st0\">\"-\"</span> <span class=\"kw3\">now</span><span class=\"sy0\">/</span>day <span class=\"st0\">\" \"</span> <span class=\"kw3\">now</span><span class=\"sy0\">/</span>time<span class=\"br0\">]</span></pre>"}, {"lang": "Retro", "loc": 1, "block": "<pre class=\"text highlighted_source\">time putn</pre>"}, {"lang": "REXX", "loc": 46, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program shows various ways to display the system time, including other options.  */</span><br/>\u00a0<br/><span class=\"kw1\">say</span> <span class=\"st0\">'\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 Normal format of time'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mm:ss        \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh= is  00 \u2500\u2500\u25ba 23'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mm:ss        \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh= hour   mm= minute   ss= second'</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'n'</span><span class=\"br0\">)</span>                                    <span class=\"coMULTI\">/*    (same as the previous example.)  */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'N'</span><span class=\"br0\">)</span>                                    <span class=\"coMULTI\">/*       \"   \"  \"      \"       \"       */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'Normal'</span><span class=\"br0\">)</span>                               <span class=\"coMULTI\">/*       \"   \"  \"      \"       \"       */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'nitPick'</span><span class=\"br0\">)</span>                              <span class=\"coMULTI\">/*       \"   \"  \"      \"       \"       */</span><br/>\u00a0<br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 Civil format of time'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mmcc         \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh= is   1 \u2500\u2500\u25ba 12'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mmam         \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh= hour   mm= minute   am= ante meridiem'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mmpm         \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                         pm= post meridiem'</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'C'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'civil'</span><span class=\"br0\">)</span>                                <span class=\"coMULTI\">/*    (same as the previous example.)  */</span><br/>                                                 <span class=\"coMULTI\">/*ante meridiem\u2261Latin for before midday*/</span><br/>                                                 <span class=\"coMULTI\">/*post    \"       \"    \"   after   \"   */</span><br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 long format of time'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mm:ss        \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh= is   0 \u2500\u2500\u25ba 23'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh:mm:ss.ffffff \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh= hour   mm= minute   fffff= fractional seconds'</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'L'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'long'</span><span class=\"br0\">)</span>                                 <span class=\"coMULTI\">/*    (same as the previous example.)  */</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'long time no see'</span><span class=\"br0\">)</span>                     <span class=\"coMULTI\">/*       \"   \"  \"      \"       \"       */</span><br/>\u00a0<br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 complete hours since midnight'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'hh              \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hh =  0 \u2500\u2500\u2500\u25ba 23'</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'H'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'hours'</span><span class=\"br0\">)</span>                                <span class=\"coMULTI\">/*    (same as the previous example.)  */</span><br/>\u00a0<br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 complete minutes since midnight'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'mmmm            \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 mmmm =  0 \u2500\u2500\u2500\u25ba 1439'</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'M'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'minutes'</span><span class=\"br0\">)</span>                              <span class=\"coMULTI\">/*    (same as the previous example.)  */</span><br/>\u00a0<br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550  complete seconds since midnight'</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'sssss           \u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 sssss =  0 \u2500\u2500\u2500\u25ba 86399'</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'S'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'seconds'</span><span class=\"br0\">)</span>                              <span class=\"coMULTI\">/*    (same as the previous example.)  */</span><br/>                                                 <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/* Output:<br/>** Sun                  abbreviated weekday name<br/>** Sunday               full weekday name<br/>** May                  abbreviated month name<br/>** May                  full month name<br/>** 05/24/15 09:58:38    Date &amp; Time<br/>** 24                   Day of the month<br/>** 09                   Hour (24)<br/>** 09                   Hour (12)<br/>** 144                  Day of the year<br/>** 05                   Month of the year<br/>** 58                   Minutes after hour<br/>** AM                   AM or PM<br/>** 38                   Seconds after the hour<br/>** 21                   Week of the year (sun-sat)<br/>** 0                    day of the week<br/>** 05/24/15             date<br/>** 09:58:38             time<br/>** 15                   year of the century<br/>** 2015                 year<br/>** Arab Standard Time   time zone<br/>**\u00a0%                    percent sign<br/>*/<br/>\u00a0<br/>See TimeList()<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 14, "block": "<pre class=\"ruby highlighted_source\">t = <span class=\"kw4\">Time</span>.<span class=\"me1\">now</span><br/>\u00a0<br/><span class=\"co1\"># textual</span><br/><span class=\"kw3\">puts</span> t        <span class=\"co1\"># =&gt; 2013-12-27 18:00:23 +0900</span><br/>\u00a0<br/><span class=\"co1\"># epoch time</span><br/><span class=\"kw3\">puts</span> t.<span class=\"me1\">to_i</span>   <span class=\"co1\"># =&gt; 1388134823</span><br/>\u00a0<br/><span class=\"co1\"># epoch time with fractional seconds</span><br/><span class=\"kw3\">puts</span> t.<span class=\"me1\">to_f</span>   <span class=\"co1\"># =&gt; 1388134823.9801579</span><br/>\u00a0<br/><span class=\"co1\"># epoch time as a rational (more precision):</span><br/><span class=\"kw3\">puts</span> <span class=\"kw4\">Time</span>.<span class=\"me1\">now</span>.<span class=\"me1\">to_r</span>  <span class=\"co1\"># 1424900671883862959/1000000000</span><br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 1, "block": "<pre class=\"scala highlighted_source\">println<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Date</span><span class=\"br0\">)</span></pre>"}, {"lang": "Scheme", "loc": 2, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span>use posix<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>seconds<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span>current<span class=\"sy0\">-</span>seconds<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 7, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"time.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(time(NOW));<br/>  end func;</pre>"}, {"lang": "SETL", "loc": 5, "block": "<pre class=\"text highlighted_source\">$ Unix time<br/>print(tod);<br/>\u00a0<br/>$ Human readable time and date<br/>print(date);</pre>"}, {"lang": "Sidef", "loc": 8, "block": "<pre class=\"ruby highlighted_source\"><span class=\"co1\"># textual</span><br/>say <span class=\"kw4\">Time</span>.<span class=\"me1\">local</span>.<span class=\"me1\">ctime</span>;        <span class=\"co1\"># =&gt; Thu Mar 19 15:10:41 2015</span><br/>\u00a0<br/><span class=\"co1\"># epoch time</span><br/>say <span class=\"kw4\">Time</span>.<span class=\"me1\">sec</span>;                <span class=\"co1\"># =&gt; 1426770641</span><br/>\u00a0<br/><span class=\"co1\"># epoch time with fractional seconds</span><br/>say <span class=\"kw4\">Time</span>.<span class=\"me1\">micro_sec</span>;          <span class=\"co1\"># =&gt; 1426770641.68409</span></pre>"}, {"lang": "Smalltalk", "loc": 1, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">DateTime</span> now displayNl.</pre>"}, {"lang": "SNOBOL4", "loc": 2, "block": "<pre class=\"text highlighted_source\">     OUTPUT = DATE()<br/>END</pre>"}, {"lang": "SPL", "loc": 5, "block": "<pre class=\"text highlighted_source\">hour,min,sec = #.now()<br/>day,month,year = #.today()<br/>\u00a0<br/>#.output(#.str(hour,\"00:\"),#.str(min,\"00:\"),#.str(sec,\"00.000\"))<br/>#.output(day,\".\",#.str(month,\"00\"),\".\",year)</pre>"}, {"lang": "Swift", "loc": 4, "block": "<pre class=\"text highlighted_source\">import Foundation<br/>\u00a0<br/>var \u231a\ufe0f = NSDate()<br/>println(\u231a\ufe0f)</pre>"}, {"lang": "Standard ML", "loc": 1, "block": "<pre class=\"text highlighted_source\">print (Date.toString (Date.fromTimeLocal (Time.now ())) ^ \"\\n\")</pre>"}, {"lang": "SQL PL", "loc": 3, "block": "<pre class=\"sql highlighted_source\">\u00a0<br/><span class=\"kw1\">SELECT</span> <span class=\"kw1\">CURRENT</span> <span class=\"kw1\">DATE</span><span class=\"sy0\">,</span> <span class=\"kw1\">CURRENT</span> <span class=\"kw1\">TIME</span><span class=\"sy0\">,</span> <span class=\"kw1\">CURRENT</span> <span class=\"kw1\">TIMESTAMP</span> <span class=\"kw1\">FROM</span> SYSIBM<span class=\"sy0\">.</span>SYSDUMMY1;<br/>\u00a0</pre>"}, {"lang": "Stata", "loc": 2, "block": "<pre class=\"text highlighted_source\">di c(current_date)<br/>di c(current_time)</pre>"}, {"lang": "Tcl", "loc": 1, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">clock</span> seconds<span class=\"br0\">]</span></pre>"}, {"lang": "TI-89 BASIC", "loc": 2, "block": "<pre class=\"text highlighted_source\">\u25a0 getTime()      {13  28  55}<br/>\u25a0 getDate()       {2009  8  13}</pre>"}, {"lang": "TUSCRIPT", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>time=time()<br/>PRINT time</pre>"}, {"lang": "UNIX Shell", "loc": 3, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw2\">date</span>       <span class=\"co0\"># Thu Dec  3 15:38:06 PST 2009</span><br/>\u00a0<br/><span class=\"kw2\">date</span> +<span class=\"sy0\">%</span>s   <span class=\"co0\"># 1259883518, seconds since the epoch, like C stdlib time(0)</span></pre>"}, {"lang": "Ursa", "loc": 3, "block": "<pre class=\"text highlighted_source\"># outputs time in milliseconds<br/>import \"time\"<br/>out (time.getcurrent) endl console</pre>"}, {"lang": "Ursala", "loc": 5, "block": "<pre class=\"text highlighted_source\">#import cli<br/>\u00a0<br/>#cast\u00a0%s<br/>\u00a0<br/>main = now 0</pre>"}, {"lang": "Vala", "loc": 3, "block": "<pre class=\"vala highlighted_source\">\u00a0<br/><span class=\"kw1\">var</span> now <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> DateTime.<span class=\"me1\">now_local</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">string</span> now_string <span class=\"sy0\">=</span> now.<span class=\"me1\">to_string</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "VBA", "loc": 1, "block": "<pre class=\"vb highlighted_source\">Debug.<span class=\"kw4\">Print</span> Now()</pre>"}, {"lang": "VBScript", "loc": 1, "block": "<pre class=\"vb highlighted_source\">WScript.Echo Now</pre>"}, {"lang": "XPL0", "loc": 21, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;          \\include intrinsic 'code' declarations<br/>\u00a0<br/>proc NumOut(N);                 \\Output a 2-digit number, including leading zero<br/>int  N;<br/>[if N &lt;= 9 then ChOut(0, ^0);<br/>IntOut(0, N);<br/>]; \\NumOut<br/>\u00a0<br/>int Reg;<br/>[Reg:= GetReg;                  \\get address of array with copy of CPU registers<br/>Reg(0):= $2C00;                 \\call DOS function 2C (hex)<br/>SoftInt($21);                   \\DOS calls are interrupt 21 (hex)<br/>NumOut(Reg(2) &gt;&gt; 8);            \\the high byte of register CX contains the hours<br/>ChOut(0, ^:);<br/>NumOut(Reg(2) &amp; $00FF);         \\the low byte of CX contains the minutes<br/>ChOut(0, ^:);<br/>NumOut(Reg(3) &gt;&gt; 8);            \\the high byte of DX contains the seconds<br/>ChOut(0, ^.);<br/>NumOut(Reg(3) &amp; $00FF);         \\the low byte of DX contains hundreths<br/>CrLf(0);<br/>]</pre>"}, {"lang": "Yabasic", "loc": 1, "block": "<pre class=\"text highlighted_source\">print time$</pre>"}, {"lang": "zkl", "loc": 1, "block": "<pre class=\"text highlighted_source\">Time.Clock.time //--&gt;seconds since the epoch (C/OS defined)</pre>"}]}