{"task": "Matrix_arithmetic", "blocks": [{"lang": "360 Assembly", "loc": 152, "block": "<pre class=\"text highlighted_source\">*        Matrix arithmetic         13/05/2016<br/>MATARI   START<br/>         STM    R14,R12,12(R13)    save caller's registers<br/>         LR     R12,R15            set R12 as base register<br/>         USING  MATARI,R12         notify assembler<br/>         LA     R11,SAVEAREA       get the address of my savearea<br/>         ST     R13,4(R11)         save caller's savearea pointer<br/>         ST     R11,8(R13)         save my savearea pointer<br/>         LR     R13,R11            set R13 to point to my savearea<br/>         LA     R1,TT              @tt<br/>         BAL    R14,DETER          call deter(tt)<br/>         LR     R2,R0              R2=deter(tt)<br/>         LR     R3,R1              R3=perm(tt)<br/>         XDECO  R2,PG1+12          edit determinant<br/>         XPRNT  PG1,80             print determinant<br/>         XDECO  R3,PG2+12          edit permanent<br/>         XPRNT  PG2,80             print permanent<br/>EXITALL  L      R13,SAVEAREA+4     restore caller's savearea address<br/>         LM     R14,R12,12(R13)    restore caller's registers<br/>         XR     R15,R15            set return code to 0<br/>         BR     R14                return to caller<br/>SAVEAREA DS     18F                main savearea<br/>TT       DC     F'3'               matrix size <br/>         DC     F'2',F'9',F'4',F'7',F'5',F'3',F'6',F'1',F'8' &lt;==input<br/>PG1      DC     CL80'determinant='<br/>PG2      DC     CL80'permanent='<br/>XDEC     DS     CL12<br/>*        recursive function        (R0,R1)=deter(t)   (python style)<br/>DETER    CNOP   0,4                  returns determinant and permanent<br/>         STM    R14,R12,12(R13)    save all registers<br/>         LR     R9,R1              save R1<br/>         L      R2,0(R1)           n<br/>         BCTR   R2,0               n-1<br/>         LR     R11,R2             n-1<br/>         MR     R10,R2             (n-1)*(n-1)<br/>         SLA    R11,2              (n-1)*(n-1)*4<br/>         LA     R11,1(R11)         size of q array<br/>         A      R11,=A(STACKLEN)   R11 storage amount required<br/>         GETMAIN RU,LV=(R11)       allocate storage for stack<br/>         USING  STACK,R10          make storage addressable<br/>         LR     R10,R1             establish stack addressability<br/>         LA     R1,SAVEAREB        get the address of my savearea<br/>         ST     R13,4(R1)          save caller's savearea pointer<br/>         ST     R1,8(R13)          save my savearea pointer<br/>         LR     R13,R1             set R13 to point to my savearea<br/>         LR     R1,R9              restore R1<br/>         LR     R9,R1              @t<br/>         L      R4,0(R9)           t(0)<br/>         ST     R4,N               n=t(0)<br/>IF1      CH     R4,=H'1'           if n=1<br/>         BNE    SIF1               then<br/>         L      R2,4(R9)             t(1)<br/>         ST     R2,R                 r=t(1)<br/>         ST     R2,S                 s=t(1)<br/>         B      EIF1               else<br/>SIF1     L      R2,N                 n<br/>         BCTR   R2,0                 n-1<br/>         ST     R2,Q                 q(0)=n-1<br/>         ST     R2,NM1               nm1=n-1<br/>         LA     R0,1                 1<br/>         ST     R0,SGN               sgn=1<br/>         SR     R0,R0                0<br/>         ST     R0,R                 r=0<br/>         ST     R0,S                 s=0<br/>         LA     R6,1                 k=1<br/>LOOPK    C      R6,N                 do k=1 to n<br/>         BH     ELOOPK               leave k<br/>         SR     R0,R0                  0<br/>         ST     R0,JQ                  jq=0<br/>         ST     R0,KTI                 kti=0<br/>         LA     R7,1                   iq=1<br/>LOOPIQ   C      R7,NM1                 do iq=1 to n-1<br/>         BH     ELOOPIQ                leave iq<br/>         LR     R2,R7                    iq<br/>         LA     R2,1(R2)                 iq+1<br/>         ST     R2,IT                    it=iq+1<br/>         L      R2,KTI                   kti<br/>         A      R2,N                     kti+n<br/>         ST     R2,KTI                   kti=kti+n<br/>         ST     R2,KT                    kt=kti<br/>         LA     R8,1                     jt=1<br/>LOOPJT   C      R8,N                     do jt=1 to n<br/>         BH     ELOOPJT                  leave jt<br/>         L      R2,KT                      kt<br/>         LA     R2,1(R2)                   kt+1<br/>         ST     R2,KT                      kt=kt+1<br/>IF2      CR     R8,R6                      if jt&lt;&gt;k<br/>         BE     EIF2                       then<br/>         L      R2,JQ                        jq<br/>         LA     R2,1(R2)                     jq+1<br/>         ST     R2,JQ                        jq=jq+1<br/>         L      R1,KT                        kt<br/>         SLA    R1,2                         *4<br/>         L      R2,0(R1,R9)                  t(kt)<br/>         L      R1,JQ                        jq<br/>         SLA    R1,2                         *4<br/>         ST     R2,Q(R1)                     q(jq)=t(kt)<br/>EIF2     EQU    *                          end if<br/>         LA     R8,1(R8)                   jt=jt+1<br/>         B      LOOPJT                   next jt<br/>ELOOPJT  LA     R7,1(R7)                 iq=iq+1<br/>         B      LOOPIQ                 next iq<br/>ELOOPIQ  LR     R1,R6                  k<br/>         SLA    R1,2                   *4<br/>         L      R5,0(R1,R9)            t(k)<br/>         LR     R2,R5                  R2,R5=t(k)<br/>         LA     R1,Q                   @q<br/>         BAL    R14,DETER              call deter(q)<br/>         LR     R3,R0                  R3=deter(q)<br/>         ST     R1,P                   p=perm(q)<br/>         MR     R4,R3                  R5=t(k)*deter(q)<br/>         M      R4,SGN                 R5=sgn*t(k)*deter(q)<br/>         A      R5,R                   +r<br/>         ST     R5,R                   r=r+sgn*t(k)*deter(q)<br/>         LR     R5,R2                  t(k)<br/>         M      R4,P                   R5=t(k)*perm(q)<br/>         A      R5,S                   +s<br/>         ST     R5,S                   s=s+t(k)*perm(q)<br/>         L      R2,SGN                 sgn<br/>         LCR    R2,R2                  -sgn<br/>         ST     R2,SGN                 sgn=-sgn<br/>         LA     R6,1(R6)               k=k+1<br/>         B      LOOPK                next k<br/>ELOOPK   EQU    *                    end do<br/>EIF1     EQU    *                  end if <br/>EXIT     L      R13,SAVEAREB+4     restore caller's savearea address<br/>         L      R2,R               return value (determinant)<br/>         L      R3,S               return value (permanent)<br/>         XR     R15,R15            set return code to 0        <br/>         FREEMAIN A=(R10),LV=(R11) free allocated storage<br/>         LR     R0,R2              first return value<br/>         LR     R1,R3              second return value<br/>         L      R14,12(R13)        restore caller's return address<br/>         LM     R2,R12,28(R13)     restore registers R2 to R12<br/>         BR     R14                return to caller<br/>IT       DS     F                  static area (out of stack)<br/>KT       DS     F                  \"<br/>JQ       DS     F                  \"<br/>KTI      DS     F                  \"<br/>P        DS     F                  \"<br/>         DROP   R12                base no longer needed<br/>STACK    DSECT                     dynamic area (stack)<br/>SAVEAREB DS     18F                function savearea<br/>N        DS     F                  n<br/>NM1      DS     F                  n-1<br/>R        DS     F                  determinant accu<br/>S        DS     F                  permanent accu<br/>SGN      DS     F                  sign<br/>STACKLEN EQU    *-STACK<br/>Q        DS     F                  sub matrix q((n-1)*(n-1)+1)<br/>         YREGS  <br/>         END    MATARI</pre>"}, {"lang": "C", "loc": 45, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">double</span> det_in<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">**</span>in<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> n<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> perm<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> in<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw4\">double</span> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span>m<span class=\"br0\">[</span><span class=\"sy0\">--</span>n<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\tm<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> in<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> sgn <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tsum <span class=\"sy0\">+=</span> sgn <span class=\"sy0\">*</span> <span class=\"br0\">(</span>in<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> det_in<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> perm<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> n<span class=\"br0\">)</span> <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tm<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> in<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>perm<span class=\"br0\">)</span> sgn <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>sgn<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> sum<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* wrapper function */</span><br/><span class=\"kw4\">double</span> det<span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span>in<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> n<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> perm<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> <span class=\"sy0\">*</span>m<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\tm<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> in <span class=\"sy0\">+</span> <span class=\"br0\">(</span>n <span class=\"sy0\">*</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> det_in<span class=\"br0\">(</span>m<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> perm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> x<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span>\t<span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"det: \u00a0%14.12g<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> det<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"perm:\u00a0%14.12g<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> det<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 55, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">traits</span><span class=\"sy0\">,</span> permutations2<span class=\"sy0\">,</span><br/>       permutations_by_swapping1<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">auto</span> prod<span class=\"br0\">(</span>Range<span class=\"br0\">)</span><span class=\"br0\">(</span>Range r<span class=\"br0\">)</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> @nogc <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> reduce<span class=\"sy0\">!</span>q<span class=\"br0\">{</span>a <span class=\"sy0\">*</span> b<span class=\"br0\">}</span><span class=\"br0\">(</span>ForeachType<span class=\"sy0\">!</span>Range<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>T permanent<span class=\"br0\">(</span>T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span><br/><span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>a.<span class=\"me1\">all</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>row <span class=\"sy0\">=&gt;</span> row.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> r <span class=\"sy0\">=</span> a.<span class=\"me1\">length</span>.<span class=\"me1\">iota</span><span class=\"sy0\">;</span><br/>    T tot <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> sigma<span class=\"sy0\">;</span> r.<span class=\"me1\">array</span>.<span class=\"me1\">permutations</span><span class=\"br0\">)</span><br/>        tot <span class=\"sy0\">+=</span> r.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>sigma<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">prod</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> tot<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>T determinant<span class=\"br0\">(</span>T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span> <span class=\"kw4\">nothrow</span><br/><span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>a.<span class=\"me1\">all</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>row <span class=\"sy0\">=&gt;</span> row.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> n <span class=\"sy0\">=</span> a.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> r <span class=\"sy0\">=</span> n.<span class=\"me1\">iota</span><span class=\"sy0\">;</span><br/>    T tot <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\">//foreach (sigma, sign; n.spermutations) {</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> sigma_sign<span class=\"sy0\">;</span> n.<span class=\"me1\">spermutations</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">const</span> sigma <span class=\"sy0\">=</span> sigma_sign<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">immutable</span> sign <span class=\"sy0\">=</span> sigma_sign<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        tot <span class=\"sy0\">+=</span> sign <span class=\"sy0\">*</span> r.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">=&gt;</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>sigma<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">prod</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> tot<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"coMULTI\">/*immutable*/</span> <span class=\"kw4\">const</span> a<span class=\"sy0\">;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\u00a0<br/>                                     <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\u00a0<br/>                                     <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span>  <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>                                      <span class=\"br0\">[</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"[%([%(%2s,\u00a0%)],<span class=\"es1\">\\n</span>\u00a0%)]]\"</span><span class=\"sy0\">,</span> a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"Permanent:\u00a0%s, determinant:\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>                 a.<span class=\"me1\">permanent</span><span class=\"sy0\">,</span> a.<span class=\"me1\">determinant</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 30, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib '<span class=\"kw1\">list</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>lib 'matrix<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; adapted from Racket</span><br/><span class=\"br0\">(</span>define <span class=\"br0\">(</span>permanent M<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"br0\">(</span>matrix-row-num M<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>for/sum <span class=\"br0\">(</span><span class=\"br0\">[</span>\u03c3 <span class=\"br0\">(</span>in-permutations n<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>for/product <span class=\"br0\">(</span><span class=\"br0\">[</span>i n<span class=\"br0\">]</span> <span class=\"br0\">[</span>\u03c3i \u03c3<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>array-ref M i \u03c3i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; output</span><br/><span class=\"br0\">(</span>define A <span class=\"br0\">(</span>list-<span class=\"sy0\">&gt;</span><span class=\"kw1\">array</span> '<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"nu0\">2</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>array-<span class=\"kw1\">print</span> A<span class=\"br0\">)</span><br/>  <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span><br/>  <span class=\"nu0\">3</span>  <span class=\"nu0\">4</span><br/><span class=\"br0\">(</span>determinant A<span class=\"br0\">)</span> \u2192 -<span class=\"nu0\">2</span><br/><span class=\"br0\">(</span>permanent A<span class=\"br0\">)</span> \u2192 <span class=\"nu0\">10</span><br/>\u00a0<br/><span class=\"br0\">(</span>define M <span class=\"br0\">(</span>list-<span class=\"sy0\">&gt;</span><span class=\"kw1\">array</span> <span class=\"br0\">(</span>iota <span class=\"nu0\">25</span><span class=\"br0\">)</span> <span class=\"nu0\">5</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>array-<span class=\"kw1\">print</span> M<span class=\"br0\">)</span><br/>   <span class=\"nu0\">0</span>   <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>   <span class=\"nu0\">3</span>   <span class=\"nu0\">4</span><br/>   <span class=\"nu0\">5</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">7</span>   <span class=\"nu0\">8</span>   <span class=\"nu0\">9</span><br/>  <span class=\"nu0\">10</span>  <span class=\"nu0\">11</span>  <span class=\"nu0\">12</span>  <span class=\"nu0\">13</span>  <span class=\"nu0\">14</span><br/>  <span class=\"nu0\">15</span>  <span class=\"nu0\">16</span>  <span class=\"nu0\">17</span>  <span class=\"nu0\">18</span>  <span class=\"nu0\">19</span><br/>  <span class=\"nu0\">20</span>  <span class=\"nu0\">21</span>  <span class=\"nu0\">22</span>  <span class=\"nu0\">23</span>  <span class=\"nu0\">24</span><br/><span class=\"br0\">(</span>determinant M<span class=\"br0\">)</span> \u2192 <span class=\"nu0\">0</span><br/><span class=\"br0\">(</span>permanent M<span class=\"br0\">)</span> \u2192 <span class=\"nu0\">6778800</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 38, "block": "<pre class=\"text highlighted_source\">S\" fsl-util.fs\" REQUIRED<br/>S\" fsl/dynmem.seq\" REQUIRED<br/>[UNDEFINED] defines [IF] SYNONYM defines IS [THEN]<br/>S\" fsl/structs.seq\" REQUIRED<br/>S\" fsl/lufact.seq\" REQUIRED<br/>S\" fsl/dets.seq\" REQUIRED<br/>S\" permute.fs\" REQUIRED<br/>\u00a0<br/>VARIABLE the-mat<br/>: add-perm ( p0 p1 p2 ... pn n s -- )<br/>  DROP  \\ sign<br/>  1E<br/>  1 DO<br/>    the-mat @ SWAP 1- I 1- }} <a class=\"__cf_email__\" data-cfemail=\"541214\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> F*<br/>  LOOP<br/>  DROP  \\ Dummy element because we're using 1-based indexing<br/>  F+\u00a0;<br/>: permanent ( len mat -- ) ( F: -- perm )<br/>  the-mat\u00a0!<br/>  0E<br/>  ['] add-perm perms\u00a0;<br/>\u00a0<br/>3 SET-PRECISION<br/>2 2 float matrix m2{{<br/>1e 2e  3e 4e  2 2 m2{{ }}fput<br/>lumatrix lmat<br/>3 3 float matrix m3{{<br/>2e 9e 4e  7e 5e 3e  6e 1e 8e  3 3 m3{{ }}fput<br/>\u00a0<br/>lmat 2 lu-malloc<br/>m2{{ lmat lufact<br/>lmat det F. 2 m2{{ permanent F. CR<br/>lmat lu-free<br/>\u00a0<br/>lmat 3 lu-malloc<br/>m3{{ lmat lufact<br/>lmat det F. 3 m3{{ permanent F. CR<br/>lmat lu-free</pre>"}, {"lang": "Fortran", "loc": 73, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/><span class=\"co1\">!-*- mode: compilation; default-directory: \"/tmp/\" -*-</span><br/><span class=\"co1\">!Compilation started at Sat May 18 23:25:42</span><br/><span class=\"co1\">!</span><br/><span class=\"co1\">!a=./F &amp;&amp; make $a &amp;&amp; $a &lt; unixdict.txt</span><br/><span class=\"co1\">!f95 -Wall -ffree-form F.F -o F</span><br/><span class=\"co1\">! j example, determinant:    7.00000000    </span><br/><span class=\"co1\">! j example, permanent:      5.00000000    </span><br/><span class=\"co1\">! maxima, determinant:      -360.000000    </span><br/><span class=\"co1\">! maxima, permanent:         900.000000    </span><br/><span class=\"co1\">!</span><br/><span class=\"co1\">!Compilation finished at Sat May 18 23:25:43</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">!   NB. example computed by J</span><br/><span class=\"co1\">!   NB. fixed seed random matrix</span><br/><span class=\"co1\">!   _2+3 <a class=\"__cf_email__\" data-cfemail=\"f9cac6d7b9\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>$5</span><br/><span class=\"co1\">! 2 _1  1</span><br/><span class=\"co1\">!_1 _2  1</span><br/><span class=\"co1\">!_1 _1 _1</span><br/><span class=\"co1\">!</span><br/><span class=\"co1\">!   (-/ .*)_2+3 <a class=\"__cf_email__\" data-cfemail=\"95a6aabbd5\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>$5  NB. determinant</span><br/><span class=\"co1\">!7</span><br/><span class=\"co1\">!   (+/ .*)_2+3 <a class=\"__cf_email__\" data-cfemail=\"6c5f53422c\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>$5  NB. permanent</span><br/><span class=\"co1\">!5</span><br/>\u00a0<br/><span class=\"co1\">!maxima example</span><br/><span class=\"co1\">!a: matrix([2, 9, 4], [7, 5, 3], [6, 1, 8])$</span><br/><span class=\"co1\">!determinant(a);</span><br/><span class=\"co1\">!-360</span><br/><span class=\"co1\">! </span><br/><span class=\"co1\">!permanent(a);</span><br/><span class=\"co1\">!900</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">! compute permanent or determinant</span><br/><span class=\"kw1\">program</span> f<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>  <span class=\"kw3\">real</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">j</span>, m<br/>  <span class=\"kw3\">data</span> j<span class=\"sy0\">/</span> <span class=\"nu0\">2</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span><br/>  <span class=\"kw3\">data</span> m<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">8</span><span class=\"sy0\">/</span><br/>  write<span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">'j example, determinant: '</span>,det<span class=\"br0\">(</span>j,<span class=\"nu0\">3</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  write<span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">'j example, permanent:   '</span>,det<span class=\"br0\">(</span>j,<span class=\"nu0\">3</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  write<span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">'maxima, determinant:    '</span>,det<span class=\"br0\">(</span>m,<span class=\"nu0\">3</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  write<span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">'maxima, permanent:      '</span>,det<span class=\"br0\">(</span>m,<span class=\"nu0\">3</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/>  <span class=\"kw1\">recursive</span> <span class=\"kw1\">function</span> det<span class=\"br0\">(</span>a,n,permanent<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>accumulation<span class=\"br0\">)</span><br/>    <span class=\"co1\">! setting permanent to 1 computes the permanent.</span><br/>    <span class=\"co1\">! setting permanent to -1 computes the determinant.</span><br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span>n,n<span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">a</span><br/>    <span class=\"kw3\">integer</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">n</span>, permanent<br/>    <span class=\"kw3\">real</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">b</span><br/>    <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">accumulation</span><br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, sgn<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw2\">.<span class=\"me1\">eq</span>.</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      accumulation <span class=\"sy0\">=</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      accumulation <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>      sgn <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, n<br/>        b<span class=\"br0\">(</span><span class=\"sy0\">:</span>, <span class=\"sy0\">:</span><span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> a<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">:</span>, <span class=\"sy0\">:</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        b<span class=\"br0\">(</span><span class=\"sy0\">:</span>, i<span class=\"sy0\">:</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> a<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">:</span>, i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"br0\">)</span><br/>        accumulation <span class=\"sy0\">=</span> accumulation <span class=\"sy0\">+</span> sgn <span class=\"sy0\">*</span> a<span class=\"br0\">(</span><span class=\"nu0\">1</span>, i<span class=\"br0\">)</span> <span class=\"sy0\">*</span> det<span class=\"br0\">(</span>b, n<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, permanent<span class=\"br0\">)</span><br/>        sgn <span class=\"sy0\">=</span> sgn <span class=\"sy0\">*</span> permanent<br/>      <span class=\"kw1\">enddo</span><br/>    <span class=\"kw1\">endif</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> det<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> f<br/>\u00a0</pre>"}, {"lang": "FunL", "loc": 5, "block": "<pre class=\"text highlighted_source\">def sgn( p ) = product( (if s(0) &lt; s(1) xor i(0) &lt; i(1) then -1 else 1) | (s, i) &lt;- p.combinations(2).zip( (0:p.length()).combinations(2) ) )<br/>\u00a0<br/>def perm( m ) = sum( product(m(i, sigma(i)) | i &lt;- 0:m.length()) | sigma &lt;- (0:m.length()).permutations() )<br/>\u00a0<br/>def det( m ) = sum( sgn(sigma)*product(m(i, sigma(i)) | i &lt;- 0:m.length()) | sigma &lt;- (0:m.length()).permutations() )</pre>"}, {"lang": "Go", "loc": 52, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"permute\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> determinant<span class=\"sy1\">(</span>m <span class=\"sy1\">[][]</span><span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>d <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    p <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>m<span class=\"sy1\">))</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> p <span class=\"sy1\">{</span><br/>        p<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"nu2\">i</span><br/>    <span class=\"sy1\">}</span><br/>    it <span class=\"sy2\">:=</span> permute<span class=\"sy3\">.</span>Iter<span class=\"sy1\">(</span>p<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> s <span class=\"sy2\">:=</span> it<span class=\"sy1\">();</span> s <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> s <span class=\"sy2\">=</span> it<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        pr <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> \u03c3 <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> p <span class=\"sy1\">{</span><br/>            pr <span class=\"sy2\">*=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>\u03c3<span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        d <span class=\"sy2\">+=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> pr<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> permanent<span class=\"sy1\">(</span>m <span class=\"sy1\">[][]</span><span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>d <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    p <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>m<span class=\"sy1\">))</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> p <span class=\"sy1\">{</span><br/>        p<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"nu2\">i</span><br/>    <span class=\"sy1\">}</span><br/>    it <span class=\"sy2\">:=</span> permute<span class=\"sy3\">.</span>Iter<span class=\"sy1\">(</span>p<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> s <span class=\"sy2\">:=</span> it<span class=\"sy1\">();</span> s <span class=\"sy2\">!=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> s <span class=\"sy2\">=</span> it<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        pr <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> \u03c3 <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> p <span class=\"sy1\">{</span><br/>            pr <span class=\"sy2\">*=</span> m<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>\u03c3<span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        d <span class=\"sy2\">+=</span> pr<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> m2 <span class=\"sy2\">=</span> <span class=\"sy1\">[][]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">},</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">}}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> m3 <span class=\"sy2\">=</span> <span class=\"sy1\">[][]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">9</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">},</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">},</span><br/>    <span class=\"sy1\">{</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">}}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>determinant<span class=\"sy1\">(</span>m2<span class=\"sy1\">),</span> permanent<span class=\"sy1\">(</span>m2<span class=\"sy1\">))</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>determinant<span class=\"sy1\">(</span>m3<span class=\"sy1\">),</span> permanent<span class=\"sy1\">(</span>m3<span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 59, "block": "<pre class=\"haskell highlighted_source\">sPermutations <span class=\"sy0\">::</span> <span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>sPermutations <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:flip\"><span class=\"kw3\">flip</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:cycle\"><span class=\"kw3\">cycle</span></a> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:foldl\"><span class=\"kw3\">foldl</span></a> aux <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">where</span><br/>    aux items x <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>      <span class=\"br0\">(</span>f<span class=\"sy0\">,</span> item<span class=\"br0\">)</span> <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:cycle\"><span class=\"kw3\">cycle</span></a> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:reverse\"><span class=\"kw3\">reverse</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:id\"><span class=\"kw3\">id</span></a><span class=\"br0\">]</span><span class=\"br0\">)</span> items<br/>      f <span class=\"br0\">(</span>insertEv x item<span class=\"br0\">)</span><br/>    insertEv x <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    insertEv x l<span class=\"sy0\">@</span><span class=\"br0\">(</span>y:ys<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>x\u00a0: l<span class=\"br0\">)</span>\u00a0: <span class=\"br0\">(</span><span class=\"br0\">(</span>y\u00a0:<span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>insertEv x ys<span class=\"br0\">)</span><br/>\u00a0<br/>elemPos <span class=\"sy0\">::</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> a<br/>elemPos ms i j <span class=\"sy0\">=</span> <span class=\"br0\">(</span>ms <span class=\"sy0\">!!</span> i<span class=\"br0\">)</span> <span class=\"sy0\">!!</span> j<br/>\u00a0<br/>prod<br/>  <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> a<br/>  <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> a<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> a<br/>prod f ms <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:product\"><span class=\"kw3\">product</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zipWith\"><span class=\"kw3\">zipWith</span></a> <span class=\"br0\">(</span>f ms<span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span><span class=\"br0\">]</span><br/>\u00a0<br/>sDeterminant<br/>  <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> a<br/>  <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> a<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> a<br/>sDeterminant f ms <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>\\<span class=\"br0\">(</span>is<span class=\"sy0\">,</span> s<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> s <span class=\"sy0\">*</span> prod f ms is<span class=\"br0\">)</span><br/>\u00a0<br/>determinant<br/>  <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> a<br/>  <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> a<br/>determinant ms <span class=\"sy0\">=</span><br/>  sDeterminant elemPos ms <span class=\"sy0\">.</span> sPermutations <span class=\"sy0\">$</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pred\"><span class=\"kw3\">pred</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> <span class=\"sy0\">$</span> ms<span class=\"br0\">]</span><br/>\u00a0<br/>permanent<br/>  <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> a<br/>  <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> a<br/>permanent ms <span class=\"sy0\">=</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>prod elemPos ms <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fst\"><span class=\"kw3\">fst</span></a><span class=\"br0\">)</span> <span class=\"sy0\">.</span> sPermutations <span class=\"sy0\">$</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pred\"><span class=\"kw3\">pred</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> <span class=\"sy0\">$</span> ms<span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\">-- TEST -----------------------------------------------------------------------</span><br/>result<br/>  <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Num\"><span class=\"kw4\">Num</span></a> a<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Show\"><span class=\"kw4\">Show</span></a> a<span class=\"br0\">)</span><br/>  <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>result ms <span class=\"sy0\">=</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unlines\"><span class=\"kw3\">unlines</span></a><br/>    <span class=\"br0\">[</span> <span class=\"st0\">\"Matrix:\"</span><br/>    <span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unlines\"><span class=\"kw3\">unlines</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"sy0\">&lt;$&gt;</span> ms<span class=\"br0\">)</span><br/>    <span class=\"sy0\">,</span> <span class=\"st0\">\"Determinant:\"</span><br/>    <span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>determinant ms<span class=\"br0\">)</span><br/>    <span class=\"sy0\">,</span> <span class=\"st0\">\"Permanent:\"</span><br/>    <span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>permanent ms<span class=\"br0\">)</span><br/>    <span class=\"br0\">]</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a><br/>    <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">.</span> result<span class=\"br0\">)</span><br/>    <span class=\"br0\">[</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 6, "block": "<pre class=\"j highlighted_source\">   i. <span class=\"nu0\">5</span> <span class=\"nu0\">5</span><br/> <span class=\"nu0\">0</span>  <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span>  <span class=\"nu0\">3</span>  <span class=\"nu0\">4</span><br/> <span class=\"nu0\">5</span>  <span class=\"nu0\">6</span>  <span class=\"nu0\">7</span>  <span class=\"nu0\">8</span>  <span class=\"nu0\">9</span><br/><span class=\"nu0\">10</span> <span class=\"nu0\">11</span> <span class=\"nu0\">12</span> <span class=\"nu0\">13</span> <span class=\"nu0\">14</span><br/><span class=\"nu0\">15</span> <span class=\"nu0\">16</span> <span class=\"nu0\">17</span> <span class=\"nu0\">18</span> <span class=\"nu0\">19</span><br/><span class=\"nu0\">20</span> <span class=\"nu0\">21</span> <span class=\"nu0\">22</span> <span class=\"nu0\">23</span> <span class=\"nu0\">24</span></pre>"}, {"lang": "Java", "loc": 55, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Scanner</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> MatrixArithmetic <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> minor<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a, <span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw4\">int</span> length <span class=\"sy0\">=</span> a.<span class=\"me1\">length</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> result <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>length<span class=\"br0\">]</span><span class=\"br0\">[</span>length<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>length<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>j<span class=\"sy0\">&lt;</span>length<span class=\"sy0\">;</span>j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">&lt;</span>x <span class=\"sy0\">&amp;&amp;</span> j<span class=\"sy0\">&lt;</span>y<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tresult<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">&gt;=</span>x <span class=\"sy0\">&amp;&amp;</span> j<span class=\"sy0\">&lt;</span>y<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tresult<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">&lt;</span>x <span class=\"sy0\">&amp;&amp;</span> j<span class=\"sy0\">&gt;=</span>y<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tresult<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span><span class=\"br0\">{</span> <span class=\"co1\">//i&gt;x &amp;&amp; j&gt;y</span><br/>\t\t\t\tresult<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> det<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>a.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">return</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span> sign <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">double</span> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>a.<span class=\"me1\">length</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tsum <span class=\"sy0\">+=</span> sign <span class=\"sy0\">*</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> det<span class=\"br0\">(</span>minor<span class=\"br0\">(</span>a,<span class=\"nu0\">0</span>,i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tsign <span class=\"sy0\">*=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">return</span> sum<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> perm<span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>a.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">return</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">double</span> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>a.<span class=\"me1\">length</span><span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tsum <span class=\"sy0\">+=</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> perm<span class=\"br0\">(</span>minor<span class=\"br0\">(</span>a,<span class=\"nu0\">0</span>,i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">return</span> sum<span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\tScanner sc <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Scanner<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">in</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">int</span> size <span class=\"sy0\">=</span> sc.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>size<span class=\"br0\">]</span><span class=\"br0\">[</span>size<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>size<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>j<span class=\"sy0\">&lt;</span>size<span class=\"sy0\">;</span>j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\ta<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> sc.<span class=\"me1\">nextDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\tsc.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Determinant: \"</span><span class=\"sy0\">+</span>det<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Permanent: \"</span><span class=\"sy0\">+</span>perm<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "jq", "loc": 18, "block": "<pre class=\"text highlighted_source\"># Eliminate row i and row j<br/>def except(i;j):<br/>  reduce del(.[i])[] as $row ([]; . + [$row | del(.[j]) ] );<br/>\u00a0<br/>def det:<br/>  def parity(i): if i\u00a0% 2 == 0 then 1 else -1 end;<br/>  if length == 1 and (.[0] | length) == 1 then .[0][0]<br/>  else . as $m<br/>    | reduce range(0; length) as $i<br/>        (0; . + parity($i) * $m[0][$i] * ( $m | except(0;$i) | det) )<br/>  end\u00a0;<br/>\u00a0<br/>def perm:<br/>  if length == 1 and (.[0] | length) == 1 then .[0][0]<br/>  else . as $m<br/>    | reduce range(0; length) as $i<br/>        (0; . + $m[0][$i] * ( $m | except(0;$i) | perm) )<br/>  end\u00a0;</pre>"}, {"lang": "Julia", "loc": 1, "block": "<pre class=\"text highlighted_source\">det(A)</pre>"}, {"lang": "Kotlin", "loc": 87, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>typealias Matrix <span class=\"sy0\">=</span> Array<span class=\"sy0\">&lt;</span>DoubleArray<span class=\"sy0\">&gt;</span><br/>\u00a0<br/>fun johnsonTrotter<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Pair<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>IntArray<span class=\"sy0\">&gt;</span>, List<span class=\"sy0\">&lt;</span>Int<span class=\"sy0\">&gt;&gt;</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> it <span class=\"br0\">}</span>  <span class=\"co1\">// permutation</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> it <span class=\"br0\">}</span>  <span class=\"co1\">// inverse permutation</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> -<span class=\"nu0\">1</span> <span class=\"br0\">}</span>  <span class=\"co1\">// direction = 1 or -1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sign <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> perms <span class=\"sy0\">=</span> mutableListOf<span class=\"sy0\">&lt;</span>IntArray<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> signs <span class=\"sy0\">=</span> mutableListOf<span class=\"sy0\">&lt;</span>Int<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    fun permute<span class=\"br0\">(</span>k<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>k <span class=\"sy0\">&gt;=</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            perms.<span class=\"me1\">add</span><span class=\"br0\">(</span>p.<span class=\"me1\">copyOf</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            signs.<span class=\"me1\">add</span><span class=\"br0\">(</span>sign<span class=\"br0\">)</span><br/>            sign <span class=\"sy0\">*=</span> -<span class=\"nu0\">1</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>        <span class=\"br0\">}</span> <br/>        permute<span class=\"br0\">(</span>k + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until k<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> z <span class=\"sy0\">=</span> p<span class=\"br0\">[</span>q<span class=\"br0\">[</span>k<span class=\"br0\">]</span> + d<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>            p<span class=\"br0\">[</span>q<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> z<br/>            p<span class=\"br0\">[</span>q<span class=\"br0\">[</span>k<span class=\"br0\">]</span> + d<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> k<br/>            q<span class=\"br0\">[</span>z<span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<span class=\"br0\">[</span>k<span class=\"br0\">]</span><br/>            q<span class=\"br0\">[</span>k<span class=\"br0\">]</span> +<span class=\"sy0\">=</span> d<span class=\"br0\">[</span>k<span class=\"br0\">]</span><br/>            permute<span class=\"br0\">(</span>k + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        d<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">*=</span> -<span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span> <br/>\u00a0<br/>    permute<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> perms to signs<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun determinant<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> Matrix<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>sigmas, signs<span class=\"br0\">)</span> <span class=\"sy0\">=</span> johnsonTrotter<span class=\"br0\">(</span>m.<span class=\"me1\">size</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span>    <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>i, sigma<span class=\"br0\">)</span> in sigmas.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> prod <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>j, s<span class=\"br0\">)</span> in sigma.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> prod <span class=\"sy0\">*=</span> m<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>s<span class=\"br0\">]</span><br/>        sum +<span class=\"sy0\">=</span> signs<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> prod<br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> sum<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun permanent<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> Matrix<span class=\"br0\">)</span> <span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>sigmas, <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> johnsonTrotter<span class=\"br0\">(</span>m.<span class=\"me1\">size</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>sigma in sigmas<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> prod <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>i, s<span class=\"br0\">)</span> in sigma.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> prod <span class=\"sy0\">*=</span> m<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>s<span class=\"br0\">]</span><br/>        sum +<span class=\"sy0\">=</span> prod<br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> sum<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> m1 <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">1.0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> m2 <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">2.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">3.0</span>, <span class=\"nu0\">4.0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> m3 <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">2.0</span>, <span class=\"nu0\">9.0</span>, <span class=\"nu0\">4.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">7.0</span>, <span class=\"nu0\">5.0</span>, <span class=\"nu0\">3.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">6.0</span>, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">8.0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> m4 <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>        doubleArrayOf<span class=\"br0\">(</span> <span class=\"nu0\">1.0</span>,  <span class=\"nu0\">2.0</span>,  <span class=\"nu0\">3.0</span>,  <span class=\"nu0\">4.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span> <span class=\"nu0\">4.0</span>,  <span class=\"nu0\">5.0</span>,  <span class=\"nu0\">6.0</span>,  <span class=\"nu0\">7.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span> <span class=\"nu0\">7.0</span>,  <span class=\"nu0\">8.0</span>,  <span class=\"nu0\">9.0</span>, <span class=\"nu0\">10.0</span><span class=\"br0\">)</span>,     <br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">10.0</span>, <span class=\"nu0\">11.0</span>, <span class=\"nu0\">12.0</span>, <span class=\"nu0\">13.0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span>      <br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> matrices <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span>m1, m2, m3, m4<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>m in matrices<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"m${m.size} -&gt; \"</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"  determinant = ${determinant(m)}\"</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"  permanent   = ${permanent(m)}<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> <br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 87, "block": "<pre class=\"lua highlighted_source\"><span class=\"co1\">-- Johnson\u2013Trotter permutations generator</span><br/>_JT<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> JT<span class=\"br0\">(</span>dim<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> n<span class=\"sy0\">=</span><span class=\"br0\">{</span> values<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> positions<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> directions<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> sign<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>  <span class=\"kw3\">setmetatable</span><span class=\"br0\">(</span>n<span class=\"sy0\">,</span><span class=\"br0\">{</span>__index<span class=\"sy0\">=</span>_JT<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>dim <span class=\"kw1\">do</span><br/>    n<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span>i<br/>    n<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span>i<br/>    n<span class=\"sy0\">.</span>directions<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=-</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> n<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> _JT<span class=\"sy0\">:</span>largestMobile<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">for</span> i<span class=\"sy0\">=#</span>self<span class=\"sy0\">.</span>values<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">local</span> loc<span class=\"sy0\">=</span>self<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">+</span>self<span class=\"sy0\">.</span>directions<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <span class=\"kw1\">if</span> loc <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span> <span class=\"kw2\">and</span> loc <span class=\"sy0\">&lt;=</span> <span class=\"sy0\">#</span>self<span class=\"sy0\">.</span>values <span class=\"kw2\">and</span> self<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>loc<span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> i <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">return</span> i<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> _JT<span class=\"sy0\">:</span><span class=\"kw3\">next</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> r<span class=\"sy0\">=</span>self<span class=\"sy0\">:</span>largestMobile<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> r<span class=\"sy0\">==</span><span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"kw4\">false</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> rloc<span class=\"sy0\">=</span>self<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>r<span class=\"br0\">]</span><br/>  <span class=\"kw1\">local</span> lloc<span class=\"sy0\">=</span>rloc<span class=\"sy0\">+</span>self<span class=\"sy0\">.</span>directions<span class=\"br0\">[</span>r<span class=\"br0\">]</span><br/>  <span class=\"kw1\">local</span> l<span class=\"sy0\">=</span>self<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>lloc<span class=\"br0\">]</span><br/>  self<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>lloc<span class=\"br0\">]</span><span class=\"sy0\">,</span>self<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>rloc<span class=\"br0\">]</span> <span class=\"sy0\">=</span> self<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>rloc<span class=\"br0\">]</span><span class=\"sy0\">,</span>self<span class=\"sy0\">.</span>values<span class=\"br0\">[</span>lloc<span class=\"br0\">]</span><br/>  self<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>l<span class=\"br0\">]</span><span class=\"sy0\">,</span>self<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> self<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"sy0\">,</span>self<span class=\"sy0\">.</span>positions<span class=\"br0\">[</span>l<span class=\"br0\">]</span><br/>  self<span class=\"sy0\">.</span>sign<span class=\"sy0\">=-</span>self<span class=\"sy0\">.</span>sign<br/>  <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span>r<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,#</span>self<span class=\"sy0\">.</span>directions <span class=\"kw1\">do</span> self<span class=\"sy0\">.</span>directions<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=-</span>self<span class=\"sy0\">.</span>directions<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw4\">true</span><br/><span class=\"kw1\">end</span>  <br/>\u00a0<br/><span class=\"co1\">-- matrix class</span><br/>\u00a0<br/>_MTX<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw1\">function</span> MTX<span class=\"br0\">(</span>matrix<span class=\"br0\">)</span><br/>  <span class=\"kw3\">setmetatable</span><span class=\"br0\">(</span>matrix<span class=\"sy0\">,</span><span class=\"br0\">{</span>__index<span class=\"sy0\">=</span>_MTX<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  matrix<span class=\"sy0\">.</span>rows<span class=\"sy0\">=#</span>matrix<br/>  matrix<span class=\"sy0\">.</span>cols<span class=\"sy0\">=#</span>matrix<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">return</span> matrix<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> _MTX<span class=\"sy0\">:</span>dump<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">for</span> _<span class=\"sy0\">,</span>r <span class=\"kw2\">in</span> <span class=\"kw3\">ipairs</span><span class=\"br0\">(</span>self<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">unpack</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> _MTX<span class=\"sy0\">:</span>perm<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> self<span class=\"sy0\">:</span>det<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">function</span> _MTX<span class=\"sy0\">:</span>det<span class=\"br0\">(</span>perm<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> det<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>  <span class=\"kw1\">local</span> jt<span class=\"sy0\">=</span>JT<span class=\"br0\">(</span>self<span class=\"sy0\">.</span>cols<span class=\"br0\">)</span><br/>  <span class=\"kw1\">repeat</span><br/>    <span class=\"kw1\">local</span> pi<span class=\"sy0\">=</span>perm <span class=\"kw2\">or</span> jt<span class=\"sy0\">.</span>sign<br/>    <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span>v <span class=\"kw2\">in</span> <span class=\"kw3\">ipairs</span><span class=\"br0\">(</span>jt<span class=\"sy0\">.</span>values<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>      pi<span class=\"sy0\">=</span>pi<span class=\"sy0\">*</span>self<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>v<span class=\"br0\">]</span><br/>    <span class=\"kw1\">end</span><br/>    det<span class=\"sy0\">=</span>det<span class=\"sy0\">+</span>pi<br/>  <span class=\"kw1\">until</span> <span class=\"kw2\">not</span> jt<span class=\"sy0\">:</span><span class=\"kw3\">next</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> det<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- test</span><br/>\u00a0<br/>matrix<span class=\"sy0\">=</span>MTX<br/><span class=\"br0\">{</span><br/>  <span class=\"br0\">{</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span>  <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>matrix<span class=\"sy0\">:</span>dump<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"det:\"</span><span class=\"sy0\">,</span>matrix<span class=\"sy0\">:</span>det<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"permanent:\"</span><span class=\"sy0\">,</span>matrix<span class=\"sy0\">:</span>perm<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>matrix2<span class=\"sy0\">=</span>MTX<br/><span class=\"br0\">{</span><br/>  <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">3</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>matrix2<span class=\"sy0\">:</span>dump<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"det:\"</span><span class=\"sy0\">,</span>matrix2<span class=\"sy0\">:</span>det<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"permanent:\"</span><span class=\"sy0\">,</span>matrix2<span class=\"sy0\">:</span>perm<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "\u041c\u041a-61/52", "loc": 1, "block": "<pre>\u041f4\t\u0418\u041fE\t\u041f2\t\u041a\u0418\u041f0\t\u0418\u041f0\t\u041f1\t\u0421/\u041f\t\u0418\u041f4\t/\t\u041a\u041f2\nL1\t06\t\u0418\u041fE\t\u041f3\t\u0418\u041f0\t\u041f1\t\u0421x\t\u041a\u041f2\tL1\t17\n\u0418\u041f0\t\u0418\u041f2\t+\t\u041f1\t\u041f2\t\u0418\u041f3\t-\tx#0\t34\t\u0421/\u041f\n\u041f\u041f\t80\t\u0411\u041f\t21\t\u041a\u0418\u041f0\t\u0418\u041f4\t\u0421/\u041f\t\u041a\u0418\u041f2\t-\t*\n\u041f4\t\u0418\u041f0\t\u041f3\tx#0\t35\t\u0412x\t\u0421/\u041f\t\u041a\u0418\u041f2\t-\t&lt;-&gt;\n/\t\u041a\u041f1\tL3\t45\t\u0418\u041f1\t\u0418\u041f0\t+\t\u041f3\t\u0418\u041fE\t\u041f1\n\u041f2\t\u041a\u0418\u041f1\t/-/\t\u041f\u041f\t80\t\u0418\u041f3\t+\t\u041f3\t\u0418\u041f1\t-\nx=0\t61\t\u0418\u041f0\t\u041f1\t\u041a\u0418\u041f3\t\u041a\u041f2\tL1\t74\t\u0411\u041f\t12\n\u0418\u041f0\t&lt;-&gt;\t^\t\u041a\u0418\u041f3\t*\t\u041a\u0418\u041f1\t+\t\u041a\u041f2\t-&gt;\tL0\n82\t-&gt;\t\u041f0\t\u0412/\u041e\n</pre>"}, {"lang": "Maple", "loc": 6, "block": "<pre class=\"text highlighted_source\">M:=&lt;&lt;2|9|4&gt;,&lt;7|5|3&gt;,&lt;6|1|8&gt;&gt;:<br/>\u00a0<br/>with(LinearAlgebra):<br/>\u00a0<br/>Determinant(M);<br/>Permanent(M);</pre>"}, {"lang": "Mathematica", "loc": 4, "block": "<pre class=\"text highlighted_source\">Permanent[m_List]\u00a0:=<br/>    With[{v = Array[x, Length[m]]},<br/>      Coefficient[Times @@ (m.v), Times @@ v]<br/>  ]</pre>"}, {"lang": "Maxima", "loc": 7, "block": "<pre class=\"text highlighted_source\">a: matrix([2, 9, 4], [7, 5, 3], [6, 1, 8])$<br/>\u00a0<br/>determinant(a);<br/>-360<br/>\u00a0<br/>permanent(a);<br/>900</pre>"}, {"lang": "Nim", "loc": 37, "block": "<pre class=\"text highlighted_source\">import sequtils, permutationsswap<br/>\u00a0<br/>type Matrix[M,N: static[int]] = array[M, array[N, float]]<br/>\u00a0<br/>proc det[M,N](a: Matrix[M,N]): float =<br/>  let n = toSeq 0..a.high<br/>  for sigma, sign in n.permutations:<br/>    var x = sign.float<br/>    for i in n: x *= a[i][sigma[i]]<br/>    result += x<br/>\u00a0<br/>proc perm[M,N](a: Matrix[M,N]): float =<br/>  let n = toSeq 0..a.high<br/>  for sigma, sign in n.permutations:<br/>    var x = 1.0<br/>    for i in n: x *= a[i][sigma[i]]<br/>    result += x<br/>\u00a0<br/>const<br/>  a = [ [1.0, 2.0]<br/>      , [3.0, 4.0]<br/>      ]<br/>  b = [ [ 1.0,  2,  3,  4]<br/>      , [ 4.0,  5,  6,  7]<br/>      , [ 7.0,  8,  9, 10]<br/>      , [10.0, 11, 12, 13]<br/>      ]<br/>  c = [ [ 0.0,  1,  2,  3,  4]<br/>      , [ 5.0,  6,  7,  8,  9]<br/>      , [10.0, 11, 12, 13, 14]<br/>      , [15.0, 16, 17, 18, 19]<br/>      , [20.0, 21, 22, 23, 24]<br/>      ]<br/>\u00a0<br/>echo \"perm: \", a.perm, \" det: \", a.det<br/>echo \"perm: \", b.perm, \" det: \", b.det<br/>echo \"perm: \", c.perm, \" det: \", c.det</pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">matdet</span><span class=\"br0\">(</span>M<span class=\"br0\">)</span></pre>"}, {"lang": "Perl", "loc": 27, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> PDL<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> PDL<span class=\"sy0\">::</span><span class=\"me2\">NiceSlice</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> permanent<span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$mat</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"sy0\">//</span> <span class=\"re0\">$mat</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">dim</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/undef.html\"><span class=\"kw3\">undef</span></a> <span class=\"kw1\">if</span> <span class=\"re0\">$mat</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">dim</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$mat</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">dim</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$mat</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$n</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"sy0\">--</span><span class=\"re0\">$n</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$m</span> <span class=\"sy0\">=</span> <span class=\"re0\">$mat</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:,</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">copy</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"re0\">$sum</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$mat</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> permanent<span class=\"br0\">(</span><span class=\"re0\">$m</span><span class=\"sy0\">,</span> <span class=\"re0\">$n</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"re0\">$n</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$m</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,:</span><span class=\"br0\">)</span> <span class=\"sy0\">.=</span> <span class=\"re0\">$mat</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> sclr<span class=\"br0\">(</span><span class=\"re0\">$sum</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$M</span> <span class=\"sy0\">=</span> pdl<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"M = $M<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"det(M) = \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$M</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">determinant</span> <span class=\"sy0\">.</span> <span class=\"st0\">\".<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"det(M) = \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$M</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">det</span> <span class=\"sy0\">.</span> <span class=\"st0\">\".<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"perm(M) = \"</span> <span class=\"sy0\">.</span> permanent<span class=\"br0\">(</span><span class=\"re0\">$M</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\".<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 54, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> insert <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">@xs</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span><span class=\"br0\">[</span>flat <span class=\"re0\">@xs</span><span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..^</span> <span class=\"re0\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">@xs</span><span class=\"br0\">[</span><span class=\"re0\">$_</span> <span class=\"sy0\">..</span> <span class=\"sy0\">*</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"re0\">@xs</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw2\">sub</span> order <span class=\"br0\">(</span><span class=\"re0\">$sg</span><span class=\"sy0\">,</span> <span class=\"re0\">@xs</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$sg</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">??</span> <span class=\"re0\">@xs</span> <span class=\"sy0\">!!</span> <span class=\"re0\">@xs</span><span class=\"sy0\">.</span><span class=\"kw3\">reverse</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> \u03c3_permutations <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">multi</span> \u03c3_permutations <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span><span class=\"re0\">@xs</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    \u03c3_permutations<span class=\"br0\">(</span><span class=\"re0\">@xs</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span> <span class=\"sy0\">|</span>order<span class=\"br0\">(</span><span class=\"re0\">$_</span><span class=\"sy0\">.</span><span class=\"me1\">value</span><span class=\"sy0\">,</span> insert<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$_</span><span class=\"sy0\">.</span><span class=\"me1\">key</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"kw1\">Z</span><span class=\"sy0\">=&gt;</span> <span class=\"sy0\">|</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">xx</span> <span class=\"sy0\">*</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> m_arith <span class=\"br0\">(</span> <span class=\"re0\">@a</span><span class=\"sy0\">,</span> <span class=\"re0\">$op</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    note <span class=\"st0\">\"Not a square matrix\"</span> <span class=\"kw1\">and</span> <span class=\"kw1\">return</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"sy0\">||</span><span class=\"br0\">]</span> <span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"re0\">@a</span><span class=\"sy0\">.</span><span class=\"kw3\">elems</span> <span class=\"kw1\">cmp</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">elems</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">^</span><span class=\"re0\">@a</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"kw3\">map</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$permutation</span> <span class=\"sy0\">=</span> <span class=\"sy0\">.</span><span class=\"me1\">key</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$term</span> <span class=\"sy0\">=</span> <span class=\"re0\">$op</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'perm'</span> <span class=\"sy0\">??</span> <span class=\"nu0\">1</span> <span class=\"sy0\">!!</span> <span class=\"sy0\">.</span><span class=\"me1\">value</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"re0\">$permutation</span><span class=\"sy0\">.</span><span class=\"kw3\">kv</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span> <span class=\"re0\">$term</span> <span class=\"sy0\">*=</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$term</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">,</span> \u03c3_permutations <span class=\"br0\">[</span><span class=\"sy0\">^</span><span class=\"re0\">@a</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">########### Testing ###########</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@tests</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>    <span class=\"br0\">[</span><br/>        <span class=\"br0\">[</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><br/>        <span class=\"br0\">[</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span>  <span class=\"nu0\">4</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span>  <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><br/>        <span class=\"br0\">[</span>  <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span>  <span class=\"nu0\">9</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span> <span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">[</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> dump <span class=\"br0\">(</span><span class=\"re0\">@matrix</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"re0\">$_</span>\u00bb<span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"sy0\">:</span> <span class=\"st0\">\"%3s\"</span> <span class=\"kw1\">for</span> <span class=\"re0\">@matrix</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st_h\">''</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"re0\">@tests</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">@matrix</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"st_h\">'Matrix:'</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@matrix</span><span class=\"sy0\">.</span><span class=\"re0\">&amp;dump</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"Determinant:<span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span> <span class=\"re0\">@matrix</span><span class=\"sy0\">.</span><span class=\"re0\">&amp;m_arith</span><span class=\"sy0\">:</span> <span class=\"sy0\">&lt;</span>det<span class=\"sy0\">&gt;;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"Permanent:  <span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span> <span class=\"re0\">@matrix</span><span class=\"sy0\">.</span><span class=\"re0\">&amp;m_arith</span><span class=\"sy0\">:</span> <span class=\"sy0\">&lt;</span>perm<span class=\"sy0\">&gt;;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st_h\">'-'</span> <span class=\"kw1\">x</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 88, "block": "<pre class=\"text highlighted_source\">function minor(sequence a, integer x, integer y)<br/>integer l = length(a)-1<br/>sequence result = repeat(repeat(0,l),l)<br/>    for i=1 to l do<br/>        for j=1 to l do<br/>            result[i][j] = a[i+(i&gt;=x)][j+(j&gt;=y)]<br/>        end for<br/>    end for<br/>    return result<br/>end function<br/>\u00a0<br/>function det(sequence a)<br/>    if length(a)=1 then<br/>        return a[1][1]<br/>    end if<br/>    integer sgn = 1<br/>    integer res = 0<br/>    for i=1 to length(a) do<br/>        res += sgn*a[1][i]*det(minor(a,1,i))<br/>        sgn *= -1<br/>    end for<br/>    return res<br/>end function<br/>\u00a0<br/>function perm(sequence a)<br/>    if length(a)=1 then<br/>        return a[1][1]<br/>    end if<br/>    integer res = 0<br/>    for i=1 to length(a) do<br/>        res += a[1][i]*perm(minor(a,1,i))<br/>    end for<br/>    return res<br/>end function<br/>\u00a0<br/>constant tests = {<br/>{{1,  2},<br/> {3,  4}},<br/>--Determinant: -2, permanent: 10<br/>{{2, 9, 4},<br/> {7, 5, 3},<br/> {6, 1, 8}},<br/>--Determinant: -360, permanent: 900<br/>{{ 1,  2,  3,  4},<br/> { 4,  5,  6,  7},<br/> { 7,  8,  9, 10},<br/> {10, 11, 12, 13}},<br/>--Determinant: 0, permanent: 29556<br/>{{ 0,  1,  2,  3,  4},<br/> { 5,  6,  7,  8,  9},<br/> {10, 11, 12, 13, 14},<br/> {15, 16, 17, 18, 19},<br/> {20, 21, 22, 23, 24}},<br/>--Determinant: 0, permanent: 6778800<br/>{{5}},<br/>--Determinant: 5, permanent: 5 <br/>{{1,0,0},<br/> {0,1,0},<br/> {0,0,1}},<br/>--Determinant: 1, permanent: 1<br/>{{0,0,1},<br/> {0,1,0},<br/> {1,0,0}},<br/>--Determinant: -1, Permanent: 1<br/>{{4,3},<br/> {2,5}},<br/>--Determinant: 14, Permanent: 26<br/>{{2,5},<br/> {4,3}},<br/>--Determinant: -14, Permanent: 26<br/>{{4,4},<br/> {2,2}},<br/>--Determinant: 0, Permanent: 16<br/>{{7,    2,      -2,     4},<br/> {4,    4,      1,      7},<br/> {11,   -8,     9,      10},<br/> {10,   5,      12,     13}},<br/>--det:  -4319   permanent:      10723<br/>\u00a0<br/>{{-2,   2,      -3},<br/> {-1,   1,      3},<br/> {2 ,   0,      -1}}<br/>--det:  18      permanent:      10<br/>}<br/>for i=1 to length(tests) do<br/>    sequence ti = tests[i]<br/>   \u00a0?{det(ti),perm(ti)}<br/>end for</pre>"}, {"lang": "PowerShell", "loc": 46, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> det<span class=\"sy0\">-</span>perm <span class=\"br0\">(</span><span class=\"re0\">$array</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$array</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$size</span> <span class=\"sy0\">=</span> <span class=\"re0\">$array</span>.Count<br/>        <span class=\"kw3\">function</span> prod<span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$prod</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">$A</span> <span class=\"sy0\">|</span> <span class=\"kw3\">foreach</span><span class=\"br0\">{</span><span class=\"re0\">$prod</span> <span class=\"sy0\">*=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>            <span class=\"re0\">$prod</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">function</span> generate<span class=\"br0\">(</span><span class=\"re0\">$sign</span><span class=\"sy0\">,</span> <span class=\"re0\">$n</span><span class=\"sy0\">,</span> <span class=\"re0\">$A</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>               <br/>                <span class=\"re0\">$prod</span> <span class=\"sy0\">=</span> prod <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"re0\">$A</span> <span class=\"sy0\">|</span> <span class=\"kw3\">foreach</span><span class=\"br0\">{</span><span class=\"re0\">$array</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"br0\">[</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">[</span>pscustomobject<span class=\"br0\">]</span><span class=\"sy0\">@</span><span class=\"br0\">{</span>det <span class=\"sy0\">=</span> <span class=\"re0\">$sign</span><span class=\"sy0\">*</span><span class=\"re0\">$prod</span>; perm <span class=\"sy0\">=</span> <span class=\"re0\">$prod</span><span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw3\">else</span><span class=\"br0\">{</span><br/>                <span class=\"kw3\">for</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>; <span class=\"re0\">$i</span> <span class=\"kw4\">-lt</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>; <span class=\"re0\">$i</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    generate <span class=\"re0\">$sign</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"re0\">$A</span><br/>                    <span class=\"kw3\">if</span><span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>                        <span class=\"re0\">$i1</span><span class=\"sy0\">,</span> <span class=\"re0\">$i2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                        <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i1</span><span class=\"br0\">]</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"kw3\">else</span><span class=\"br0\">{</span><br/>                        <span class=\"re0\">$i1</span><span class=\"sy0\">,</span> <span class=\"re0\">$i2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                        <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$A</span><span class=\"br0\">[</span><span class=\"re0\">$i1</span><span class=\"br0\">]</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"re0\">$sign</span> <span class=\"sy0\">*=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>                <span class=\"br0\">}</span><br/>                generate <span class=\"re0\">$sign</span> <span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"re0\">$A</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$det</span> <span class=\"sy0\">=</span> <span class=\"re0\">$perm</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        generate <span class=\"nu0\">1</span> <span class=\"re0\">$size</span> <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"br0\">(</span><span class=\"re0\">$size</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw3\">foreach</span><span class=\"br0\">{</span><br/>            <span class=\"re0\">$det</span> <span class=\"sy0\">+=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.det<br/>            <span class=\"re0\">$perm</span> <span class=\"sy0\">+=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.perm<br/>        <span class=\"br0\">}</span><br/>        <span class=\"br0\">[</span>pscustomobject<span class=\"br0\">]</span><span class=\"sy0\">@</span><span class=\"br0\">{</span>det <span class=\"sy0\">=</span>  <span class=\"st0\">\"$det\"</span>; perm <span class=\"sy0\">=</span> <span class=\"st0\">\"$perm\"</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw3\">else</span> <span class=\"br0\">{</span><span class=\"kw1\">Write-Error</span> <span class=\"st0\">\"empty array\"</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>det<span class=\"sy0\">-</span>perm <span class=\"nu0\">5</span><br/>det<span class=\"sy0\">-</span>perm <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>det<span class=\"sy0\">-</span>perm <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>det<span class=\"sy0\">-</span>perm <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>det<span class=\"sy0\">-</span>perm <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>det<span class=\"sy0\">-</span>perm <span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">,@</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 45, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">itertools</span> <span class=\"kw1\">import</span> permutations<br/><span class=\"kw1\">from</span> <span class=\"kw3\">operator</span> <span class=\"kw1\">import</span> mul<br/><span class=\"kw1\">from</span> <span class=\"kw3\">math</span> <span class=\"kw1\">import</span> fsum<br/><span class=\"kw1\">from</span> spermutations <span class=\"kw1\">import</span> spermutations<br/>\u00a0<br/><span class=\"kw1\">def</span> prod<span class=\"br0\">(</span>lst<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">reduce</span><span class=\"br0\">(</span>mul<span class=\"sy0\">,</span> lst<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> perm<span class=\"br0\">(</span>a<span class=\"br0\">)</span>:<br/>    n <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>    r <span class=\"sy0\">=</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    s <span class=\"sy0\">=</span> permutations<span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> fsum<span class=\"br0\">(</span>prod<span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>sigma<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> r<span class=\"br0\">)</span> <span class=\"kw1\">for</span> sigma <span class=\"kw1\">in</span> s<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> det<span class=\"br0\">(</span>a<span class=\"br0\">)</span>:<br/>    n <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>    r <span class=\"sy0\">=</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    s <span class=\"sy0\">=</span> spermutations<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> fsum<span class=\"br0\">(</span>sign * prod<span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>sigma<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> r<span class=\"br0\">)</span><br/>                <span class=\"kw1\">for</span> sigma<span class=\"sy0\">,</span> sign <span class=\"kw1\">in</span> s<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">from</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">import</span> <span class=\"kw3\">pprint</span> <span class=\"kw1\">as</span> pp<br/>\u00a0<br/>    <span class=\"kw1\">for</span> a <span class=\"kw1\">in</span> <span class=\"br0\">(</span> <br/>            <span class=\"br0\">[</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>             <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <br/>\u00a0<br/>            <span class=\"br0\">[</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>        <br/>\u00a0<br/>            <span class=\"br0\">[</span><br/>             <span class=\"br0\">[</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">6</span><span class=\"sy0\">,</span>  <span class=\"nu0\">7</span><span class=\"sy0\">,</span>  <span class=\"nu0\">8</span><span class=\"sy0\">,</span>  <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>             <span class=\"br0\">[</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><br/>        pp<span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Perm:\u00a0%s Det:\u00a0%s'</span>\u00a0% <span class=\"br0\">(</span>perm<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">,</span> det<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 11, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require math)<br/>(define determinant matrix-determinant)<br/>\u00a0<br/>(define (permanent M)<br/>  (define n (matrix-num-rows M))<br/>  (for/sum ([\u03c3 (in-permutations (range n))])<br/>    (for/product ([i n] [\u03c3i \u03c3])<br/>      (matrix-ref M i \u03c3i))))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 39, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* REXX ***************************************************************<br/>* Test the two functions determinant and permanent<br/>* using the matrix specifications shown for other languages<br/>* 21.05.2013 Walter Pachl<br/>**********************************************************************/</span><br/><span class=\"kw1\">Call</span> test <span class=\"st0\">' 1  2'</span>,<br/>          <span class=\"st0\">' 3  4'</span>,<span class=\"nu0\">2</span><br/>\u00a0<br/><span class=\"kw1\">Call</span> test <span class=\"st0\">' 1  2  3  4'</span>,<br/>          <span class=\"st0\">' 4  5  6  7'</span>,<br/>          <span class=\"st0\">' 7  8  9 10'</span>,<br/>          <span class=\"st0\">'10 11 12 13'</span>,<span class=\"nu0\">4</span><br/>\u00a0<br/><span class=\"kw1\">Call</span> test <span class=\"st0\">' 0  1  2  3  4'</span>,<br/>          <span class=\"st0\">' 5  6  7  8  9'</span>,<br/>          <span class=\"st0\">'10 11 12 13 14'</span>,<br/>          <span class=\"st0\">'15 16 17 18 19'</span>,<br/>          <span class=\"st0\">'20 21 22 23 24'</span>,<span class=\"nu0\">5</span><br/>\u00a0<br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>test:<br/><span class=\"coMULTI\">/**********************************************************************<br/>* Show the given matrix and compute and show determinant and permanent<br/>**********************************************************************/</span><br/><span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> as,n<br/>asc=as<br/><span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> n<br/>  ol=<span class=\"st0\">''</span><br/>  <span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> n<br/>    <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> asc a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j asc<br/>    ol=ol <span class=\"kw6\">right</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j,<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>   <span class=\"kw1\">Say</span> ol<br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'determinant='</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>determinant<span class=\"br0\">(</span>as<span class=\"br0\">)</span>,<span class=\"nu0\">7</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'  permanent='</span><span class=\"kw6\">right</span><span class=\"br0\">(</span>permanent<span class=\"br0\">(</span>as<span class=\"br0\">)</span>,<span class=\"nu0\">7</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Say</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'-'</span>,<span class=\"nu0\">50</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Return</span></pre>"}, {"lang": "Ruby", "loc": 26, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'matrix'</span><br/>\u00a0<br/><span class=\"kw1\">class</span> <span class=\"kw4\">Matrix</span><br/>  <span class=\"co1\"># Add \"permanent\" method to Matrix class</span><br/>  <span class=\"kw1\">def</span> permanent<br/>    r = <span class=\"br0\">(</span><span class=\"nu0\">0</span>...<span class=\"me1\">row_count</span><span class=\"br0\">)</span>.<span class=\"me1\">to_a</span> <span class=\"co1\"># [0,1] (first example), [0,1,2,3] (second example)</span><br/>    r.<span class=\"me1\">permutation</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>sum, sigma<span class=\"sy0\">|</span><br/>       sum <span class=\"sy0\">+</span>= sigma.<span class=\"me1\">zip</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>prod, <span class=\"br0\">(</span>row, col<span class=\"br0\">)</span><span class=\"sy0\">|</span> prod <span class=\"sy0\">*</span>= <span class=\"kw2\">self</span><span class=\"br0\">[</span>row, col<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>m1 = <span class=\"kw4\">Matrix</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">]</span>,<span class=\"br0\">[</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"co1\"># testcases from Python version</span><br/>\u00a0<br/>m2 = <span class=\"kw4\">Matrix</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/>m3 = <span class=\"kw4\">Matrix</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span>,<br/>            <span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span><span class=\"br0\">]</span>,<br/>            <span class=\"br0\">[</span><span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">14</span><span class=\"br0\">]</span>,<br/>            <span class=\"br0\">[</span><span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span><span class=\"br0\">]</span>, <br/>            <span class=\"br0\">[</span><span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"br0\">[</span>m1, m2, m3<span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>m<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"determinant:<span class=\"es0\">\\t</span> #{m.determinant}\"</span>, <span class=\"st0\">\"permanent:<span class=\"es0\">\\t</span> #{m.permanent}\"</span><br/>  <span class=\"kw3\">puts</span> <br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Sidef", "loc": 31, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> <span class=\"kw3\">Array</span> <span class=\"br0\">{</span><br/>    method permanent <span class=\"br0\">{</span><br/>        var r = @^self.<span class=\"me1\">len</span><br/>\u00a0<br/>        var sum = <span class=\"nu0\">0</span><br/>        r.<span class=\"me1\">permutations</span> <span class=\"br0\">{</span> <span class=\"sy0\">|*</span>a<span class=\"sy0\">|</span><br/>            var prod = <span class=\"nu0\">1</span><br/>            <span class=\"br0\">[</span>a,r<span class=\"br0\">]</span>.<span class=\"me1\">zip</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>row,col<span class=\"sy0\">|</span> prod <span class=\"sy0\">*</span>= <span class=\"kw2\">self</span><span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">[</span>col<span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>            sum <span class=\"sy0\">+</span>= prod<br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw2\">return</span> sum<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>var m1 = <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">]</span>,<span class=\"br0\">[</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/>var m2 = <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">13</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/>var m3 = <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">14</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span><span class=\"br0\">]</span>,<br/>          <span class=\"br0\">[</span><span class=\"nu0\">20</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">24</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"br0\">[</span>m1, m2, m3<span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>m<span class=\"sy0\">|</span><br/>  say <span class=\"st0\">\"determinant:<span class=\"es0\">\\t</span> #{m.determinant}<span class=\"es0\">\\n</span>permanent:<span class=\"es0\">\\t</span> #{m.permanent}<span class=\"es0\">\\n</span>\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Simula", "loc": 92, "block": "<pre class=\"text highlighted_source\">! MATRIX ARITHMETIC\u00a0;<br/>BEGIN<br/>\u00a0<br/>    INTEGER PROCEDURE LENGTH(A); ARRAY A;<br/>        LENGTH\u00a0:= UPPERBOUND(A, 1) - LOWERBOUND(A, 1) + 1;<br/>\u00a0<br/>   \u00a0! Set MAT to the first minor of A dropping row X and column Y\u00a0;<br/>    PROCEDURE MINOR(A, X, Y, MAT); ARRAY A, MAT; INTEGER X, Y;<br/>    BEGIN<br/>        INTEGER I, J, rowA, M; M\u00a0:= LENGTH(A) - 1;\u00a0! not a constant;<br/>        FOR I\u00a0:= 1 STEP 1 UNTIL M DO BEGIN<br/>            rowA\u00a0:= IF I &lt; X THEN I ELSE I + 1;<br/>            FOR J\u00a0:= 1 STEP 1 UNTIL M DO<br/>                MAT(I, J)\u00a0:= A(rowA, IF J &lt; Y THEN J else J + 1);<br/>        END<br/>    END MINOR;<br/>\u00a0<br/>    REAL PROCEDURE DET(A); REAL ARRAY A;<br/>    BEGIN<br/>        INTEGER N; N\u00a0:= LENGTH(A);<br/>        IF N = 1 THEN<br/>            DET\u00a0:= A(1, 1)<br/>        ELSE <br/>        BEGIN<br/>            INTEGER I, SIGN;<br/>            REAL SUM;<br/>            SIGN\u00a0:= 1;<br/>            FOR I\u00a0:= 1 STEP 1 UNTIL N DO<br/>            BEGIN<br/>                REAL ARRAY MAT(1:N-1, 1:N-1);<br/>                MINOR(A, 1, I, MAT);<br/>                SUM\u00a0:= SUM + SIGN * A(1, I) * DET(MAT);<br/>                SIGN\u00a0:= SIGN * -1<br/>            END;<br/>            DET\u00a0:= SUM<br/>        END<br/>    END DET;<br/>\u00a0<br/>    REAL PROCEDURE PERM(A); REAL ARRAY A;<br/>    BEGIN<br/>        INTEGER N; N\u00a0:= LENGTH(A);<br/>        IF N = 1 THEN<br/>            PERM\u00a0:= A(1, 1)<br/>        ELSE <br/>        BEGIN<br/>            REAL SUM;<br/>            INTEGER I;<br/>\u00a0<br/>            FOR I\u00a0:= 1 STEP 1 UNTIL N DO<br/>            BEGIN<br/>                REAL ARRAY MAT(1:N-1, 1:N-1);<br/>                MINOR(A, 1, I, MAT);<br/>                SUM\u00a0:= SUM  + A(1, I) * PERM(MAT)<br/>            END;<br/>            PERM\u00a0:= SUM<br/>        END<br/>    END PERM;<br/>\u00a0<br/>    INTEGER SIZE;<br/>    SIZE\u00a0:= ININT;<br/>    BEGIN<br/>        REAL ARRAY A(1:SIZE, 1:SIZE);<br/>        INTEGER I, J;<br/>\u00a0<br/>        FOR I\u00a0:= 1 STEP 1 UNTIL SIZE DO BEGIN<br/>           \u00a0! may be need here: INIMAGE;<br/>            FOR J\u00a0:= 1 STEP 1 UNTIL SIZE DO<br/>                A(I, J)\u00a0:= INREAL<br/>        END;<br/>        OUTTEXT(\"DETERMINANT ...\u00a0: \"); OUTREAL(DET (A), 10, 20); OUTIMAGE;<br/>        OUTTEXT(\"PERMANENT .....\u00a0: \"); OUTREAL(PERM(A), 10, 20); OUTIMAGE;<br/>    END<br/>\u00a0<br/>    COMMENT  THE FIRST INPUT IS THE SIZE OF THE MATRIX, FOR EXAMPLE:<br/>\u00a0<br/>   \u00a0! 2<br/>   \u00a0! 1 2<br/>   \u00a0! 3 4<br/>   \u00a0! DETERMINANT: -2.0<br/>   \u00a0! PERMANENT: 10.0\u00a0;<br/>\u00a0<br/>    COMMENT<br/>   \u00a0! 5<br/>   \u00a0! 0 1 2 3 4<br/>   \u00a0! 5 6 7 8 9<br/>   \u00a0! 10 11 12 13 14<br/>   \u00a0! 15 16 17 18 19<br/>   \u00a0! 20 21 22 23 24<br/>   \u00a0! DETERMINANT: 0.0<br/>   \u00a0! PERMANENT: 6778800.0\u00a0;<br/>\u00a0<br/>END</pre>"}, {"lang": "SPAD", "loc": 16, "block": "<pre class=\"text highlighted_source\">(1) -&gt; M:=matrix [[2, 9, 4], [7, 5, 3], [6, 1, 8]]<br/>\u00a0<br/>        +2  9  4+<br/>        |       |<br/>   (1)  |7  5  3|<br/>        |       |<br/>        +6  1  8+<br/>                                                        Type: Matrix(Integer)<br/>(2) -&gt; determinant M<br/>\u00a0<br/>   (2)  - 360<br/>                                                                Type: Integer<br/>(3) -&gt; permanent M<br/>\u00a0<br/>   (3)  900<br/>                                                        Type: PositiveInteger</pre>"}, {"lang": "Stata", "loc": 28, "block": "<pre class=\"text highlighted_source\">real vector range1(real scalar n, real scalar i) {<br/>\tif (i &lt; 1 | i &gt; n) {<br/>\t\treturn(1::n)<br/>\t} else if (i == 1) {<br/>\t\treturn(2::n)<br/>\t} else if (i == n) {<br/>\t\treturn(1::n-1)<br/>\t} else {<br/>\t\treturn(1::i-1\\i+1::n)<br/>\t}<br/>}<br/>\u00a0<br/>real matrix submat(real matrix a, real scalar i, real scalar j) {<br/>\treturn(a[range1(rows(a), i), range1(cols(a), j)])<br/>}<br/>\u00a0<br/>real scalar sumrec(real matrix a, real scalar x) {<br/>\treal scalar n, s, p<br/>\tn = rows(a)<br/>\tif (n==1) return(a[1,1])<br/>\ts = 0<br/>\tp = 1<br/>\tfor (i=1; i&lt;=n; i++) {<br/>\t\ts = s+p*a[i,1]*sumrec(submat(a, i, 1), x)<br/>\t\tp = p*x<br/>\t}<br/>\treturn(s)<br/>}</pre>"}, {"lang": "Tcl", "loc": 15, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require math::<span class=\"me1\">linearalgebra</span><br/><span class=\"kw2\">package</span> require struct::<span class=\"kw2\">list</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> permanent <span class=\"br0\">{</span>matrix<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> plist <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$matrix</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">lappend</span> plist <span class=\"re0\">$i</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">foreach</span> p <span class=\"br0\">[</span>::<span class=\"me1\">struct</span>::<span class=\"kw2\">list</span> permutations <span class=\"re0\">$plist</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">foreach</span> i <span class=\"re0\">$plist</span> j <span class=\"re0\">$p</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> prod <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$matrix</span> <span class=\"re0\">$i</span> <span class=\"re0\">$j</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">lappend</span> sum <span class=\"br0\">[</span>::<span class=\"me1\">tcl</span>::<span class=\"me1\">mathop</span>::<span class=\"sy0\">*</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$prod</span><span class=\"br0\">[</span><span class=\"kw1\">set</span> prod <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span>::<span class=\"me1\">tcl</span>::<span class=\"me1\">mathop</span>::+ <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$sum</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "zkl", "loc": 11, "block": "<pre class=\"text highlighted_source\">var [const] GSL=Import(\"zklGSL\");\t// libGSL (GNU Scientific Library)<br/>fcn perm(A){  // should verify A is square<br/>   numRows:=A.rows;<br/>   Utils.Helpers.permute(numRows.toList()).reduce(  // permute(0,1,..numRows)<br/>      'wrap(s,pm){ s + numRows.reduce('wrap(x,i){ x*A[i,pm[i]] },1.0) },<br/>      0.0)<br/>}<br/>test:=fcn(A){<br/>   println(A.format());<br/>   println(\"Permanent:\u00a0%.2f, determinant:\u00a0%.2f\".fmt(perm(A),A.det()));<br/>};</pre>"}]}