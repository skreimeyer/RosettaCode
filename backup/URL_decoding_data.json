{"task": "URL_decoding", "blocks": [{"lang": "ABAP", "loc": 12, "block": "<pre class=\"abap highlighted_source\"><a href=\"http://help.sap.com/abapdocu/en/ABAPREPORT.htm\"><span class=\"kw3\">REPORT</span></a> Z_DECODE_URL<span class=\"sy0\">.</span><br/>\u00a0<br/><a href=\"http://help.sap.com/abapdocu/en/ABAPDATA.htm\"><span class=\"kw2\">DATA</span></a><span class=\"sy0\">:</span> lv_encoded_url <span class=\"kw4\">TYPE</span> <span class=\"kw4\">string</span> <span class=\"kw4\">VALUE</span> <span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span><span class=\"sy0\">,</span><br/>      lv_decoded_url <span class=\"kw4\">TYPE</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw8\">CALL METHOD</span> CL_HTTP_UTILITY<span class=\"sy0\">=&gt;</span><span class=\"me2\">UNESCAPE_URL</span><br/>  <span class=\"kw4\">EXPORTING</span><br/>    ESCAPED   <span class=\"sy1\">=</span> lv_encoded_url<br/>  <span class=\"kw4\">RECEIVING</span><br/>    UNESCAPED <span class=\"sy1\">=</span> lv_decoded_url<span class=\"sy0\">.</span><br/>\u00a0<br/><a href=\"http://help.sap.com/abapdocu/en/ABAPWRITE.htm\"><span class=\"kw3\">WRITE</span></a><span class=\"sy0\">:</span> <span class=\"st0\">'Encoded URL: '</span><span class=\"sy0\">,</span> lv_encoded_url<span class=\"sy0\">,</span> <span class=\"sy0\">/,</span> <span class=\"st0\">'Decoded URL: '</span><span class=\"sy0\">,</span> lv_decoded_url<span class=\"sy0\">.</span></pre>"}, {"lang": "Ada", "loc": 8, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> AWS.<span class=\"me1\">URL</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">procedure</span> Decode <span class=\"kw1\">is</span><br/>   Encoded\u00a0: <span class=\"kw3\">constant</span> String\u00a0:= <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span>;<br/><span class=\"kw1\">begin</span><br/>   Put_Line <span class=\"br0\">(</span>AWS.<span class=\"me1\">URL</span>.<span class=\"me1\">Decode</span> <span class=\"br0\">(</span>Encoded<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Decode;<br/>\u00a0</pre>"}, {"lang": "Apex", "loc": 2, "block": "<pre class=\"text highlighted_source\">EncodingUtil.urlDecode('http%3A%2F%2Ffoo%20bar%2F', 'UTF-8');<br/>EncodingUtil.urlDecode('google.com/search?q=%60Abdu%27l-Bah%C3%A1', 'UTF-8');</pre>"}, {"lang": "AppleScript", "loc": 1, "block": "<pre class=\"applescript highlighted_source\">AST URL decode <span class=\"st0\">\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\"</span></pre>"}, {"lang": "AutoHotkey", "loc": 14, "block": "<pre class=\"autohotkey highlighted_source\">encURL <span class=\"sy0\">:=</span> <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/SetFormat.htm\"><span class=\"kw3\">SetFormat</span></a><span class=\"sy0\">,</span> Integer<span class=\"sy0\">,</span> hex<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> encURL<br/>   <span class=\"kw1\">If</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"sy0\">=</span> `%<br/>      reading <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> read <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><br/>   <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> reading<br/>   <span class=\"br0\">{</span><br/>      read <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">--</span>reading<br/>      <span class=\"kw1\">if</span> not reading<br/>         out <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Chr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"0x\"</span> <span class=\"sy0\">.</span> read<span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">else</span> out <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% out <span class=\"co1\">; http://foo bar/</span><br/>\u00a0</pre>"}, {"lang": "AWK", "loc": 24, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax:</span><br/>awk ' <br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    str = <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span> <span class=\"co1\"># \"http://foo bar/\"</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es0\">\\n</span>\"</span>,str<span class=\"br0\">)</span><br/>    len=<span class=\"kw4\">length</span><span class=\"br0\">(</span>str<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>;i<span class=\"sy2\">&lt;=</span>len;i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"kw4\">substr</span><span class=\"br0\">(</span>str,i,<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy2\">==</span> <span class=\"st0\">\"%\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        L = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>str,<span class=\"nu0\">1</span>,i<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\"># chars to left of \"%\"</span><br/>        M = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>str,i<span class=\"sy3\">+</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"co1\"># 2 chars to right of \"%\"</span><br/>        R = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>str,i<span class=\"sy3\">+</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>   <span class=\"co1\"># chars to right of \"%xx\"</span><br/>        str = <span class=\"kw4\">sprintf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s%c%s\"</span>,L,hex2dec<span class=\"br0\">(</span>M<span class=\"br0\">)</span>,R<span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es0\">\\n</span>\"</span>,str<span class=\"br0\">)</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> hex2dec<span class=\"br0\">(</span>s,  num<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    num = <span class=\"kw4\">index</span><span class=\"br0\">(</span><span class=\"st0\">\"0123456789ABCDEF\"</span>,<span class=\"kw4\">toupper</span><span class=\"br0\">(</span><span class=\"kw4\">substr</span><span class=\"br0\">(</span>s,<span class=\"kw4\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw4\">sub</span><span class=\"br0\">(</span><span class=\"sy3\">/</span>.$<span class=\"sy3\">/</span>,<span class=\"st0\">\"\"</span>,s<span class=\"br0\">)</span><br/>    <span class=\"kw6\">return</span> num <span class=\"sy3\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">length</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy5\">?</span> <span class=\"nu0\">16</span><span class=\"sy3\">*</span>hex2dec<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy5\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span> '<br/>\u00a0</pre>"}, {"lang": "BaCon", "loc": 14, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"kw1\">FUNCTION</span> Url_Decode$<span class=\"br0\">(</span>url$<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">LOCAL</span> result$<br/>\u00a0<br/>    SPLIT url$ BY <span class=\"st0\">\"%\"</span> <span class=\"kw1\">TO</span> item$ SIZE total<br/>    <span class=\"kw1\">FOR</span> x = <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> total-<span class=\"nu0\">1</span><br/>        result$ = result$ &amp; <span class=\"kw1\">CHR</span>$<span class=\"br0\">(</span>DEC<span class=\"br0\">(</span><span class=\"kw1\">LEFT</span>$<span class=\"br0\">(</span>item$<span class=\"br0\">[</span>x<span class=\"br0\">]</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> &amp; <span class=\"kw1\">MID</span>$<span class=\"br0\">(</span>item$<span class=\"br0\">[</span>x<span class=\"br0\">]</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">NEXT</span><br/>    <span class=\"kw1\">RETURN</span> item$<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> &amp; result$<br/>\u00a0<br/><span class=\"kw1\">END</span> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">PRINT</span> Url_Decode$<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">PRINT</span> Url_Decode$<span class=\"br0\">(</span><span class=\"st0\">\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "BBC BASIC", "loc": 22, "block": "<pre class=\"text highlighted_source\">      PRINT FNurldecode(\"http%3A%2F%2Ffoo%20bar%2F\")<br/>      END<br/>\u00a0<br/>      DEF FNurldecode(url$)<br/>      LOCAL i%<br/>      REPEAT<br/>        i% = INSTR(url$, \"%\", i%+1)<br/>        IF i% THEN<br/>          url$ = LEFT$(url$,i%-1) + \\<br/>          \\      CHR$EVAL(\"&amp;\"+FNupper(MID$(url$,i%+1,2))) + \\<br/>          \\      MID$(url$,i%+3)<br/>        ENDIF<br/>      UNTIL i% = 0<br/>      = url$<br/>\u00a0<br/>      DEF FNupper(A$)<br/>      LOCAL A%,C%<br/>      FOR A% = 1 TO LEN(A$)<br/>        C% = ASCMID$(A$,A%)<br/>        IF C% &gt;= 97 IF C% &lt;= 122 MID$(A$,A%,1) = CHR$(C%-32)<br/>      NEXT<br/>      = A$</pre>"}, {"lang": "Bracmat", "loc": 11, "block": "<pre class=\"text highlighted_source\">(     ( decode<br/>      =   decoded hexcode notencoded<br/>        .  \u00a0:?decoded<br/>          &amp;   whl<br/>            ' ( @(!arg:?notencoded \"%\" (%\u00a0%:?hexcode)\u00a0?arg)<br/>              &amp;\u00a0!decoded\u00a0!notencoded chr$(x2d$!hexcode):?decoded<br/>              )<br/>          &amp; str$(!decoded\u00a0!arg)<br/>      )<br/>    &amp; out$(decode$http%3A%2F%2Ffoo%20bar%2F)<br/>);</pre>"}, {"lang": "C", "loc": 40, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"kw2\">inline</span> <span class=\"kw4\">int</span> ishex<span class=\"br0\">(</span><span class=\"kw4\">int</span> x<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span>\t<span class=\"br0\">(</span>x <span class=\"sy0\">&gt;=</span> <span class=\"st0\">'0'</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"st0\">'9'</span><span class=\"br0\">)</span>\t<span class=\"sy0\">||</span><br/>\t\t<span class=\"br0\">(</span>x <span class=\"sy0\">&gt;=</span> <span class=\"st0\">'a'</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"st0\">'f'</span><span class=\"br0\">)</span>\t<span class=\"sy0\">||</span><br/>\t\t<span class=\"br0\">(</span>x <span class=\"sy0\">&gt;=</span> <span class=\"st0\">'A'</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"st0\">'F'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> decode<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>dec<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">char</span> <span class=\"sy0\">*</span>o<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>end <span class=\"sy0\">=</span> s <span class=\"sy0\">+</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> c<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>o <span class=\"sy0\">=</span> dec<span class=\"sy0\">;</span> s <span class=\"sy0\">&lt;=</span> end<span class=\"sy0\">;</span> o<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tc <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>s<span class=\"sy0\">++;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">==</span> <span class=\"st0\">'+'</span><span class=\"br0\">)</span> c <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">==</span> <span class=\"st0\">'%'</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>\t<span class=\"sy0\">!</span>ishex<span class=\"br0\">(</span><span class=\"sy0\">*</span>s<span class=\"sy0\">++</span><span class=\"br0\">)</span>\t<span class=\"sy0\">||</span><br/>\t\t\t\t\t<span class=\"sy0\">!</span>ishex<span class=\"br0\">(</span><span class=\"sy0\">*</span>s<span class=\"sy0\">++</span><span class=\"br0\">)</span>\t<span class=\"sy0\">||</span><br/>\t\t\t\t\t<span class=\"sy0\">!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sscanf.html\"><span class=\"kw3\">sscanf</span></a><span class=\"br0\">(</span>s <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"st0\">\"%2x\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>dec<span class=\"br0\">)</span> <span class=\"sy0\">*</span>o <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> o <span class=\"sy0\">-</span> dec<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>url <span class=\"sy0\">=</span> <span class=\"st0\">\"http%3A%2F%2ffoo+bar%2fabcd\"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">char</span> out<span class=\"br0\">[</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>url<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"length:\u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> decode<span class=\"br0\">(</span>url<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span>decode<span class=\"br0\">(</span>url<span class=\"sy0\">,</span> out<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"bad string\"</span> <span class=\"sy0\">:</span> out<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 11, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include \"Poco/URI.h\"</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> encoded<span class=\"br0\">(</span> <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> decoded <span class=\"sy4\">;</span><br/>   Poco<span class=\"sy4\">::</span><span class=\"me2\">URI</span><span class=\"sy4\">::</span><span class=\"me2\">decode</span> <span class=\"br0\">(</span> encoded , decoded <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> encoded <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" is decoded: \"</span> <span class=\"sy1\">&lt;&lt;</span> decoded <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"\u00a0!\"</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 17, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> URLEncode<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">internal</span> <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Decode<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">string</span> Decode<span class=\"br0\">(</span><span class=\"kw4\">string</span> uri<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> Uri<span class=\"sy0\">.</span><span class=\"me1\">UnescapeDataString</span><span class=\"br0\">(</span>uri<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Cach\u00e9 ObjectScript", "loc": 1, "block": "<pre>USER&gt;Write $ZConvert(\"http%3A%2F%2Ffoo%20bar%2F\", \"I\", \"URL\")\nhttp://foo bar/</pre>"}, {"lang": "Clojure", "loc": 1, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span>java<span class=\"sy0\">.</span>net<span class=\"sy0\">.</span>URLDecoder<span class=\"sy0\">/</span>decode <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "CoffeeScript", "loc": 3, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>console.<span class=\"me1\">log</span> decodeURIComponent <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F?name=Foo%20Barson\"</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 23, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> decode <span class=\"br0\">(</span>string <span class=\"sy0\">&amp;</span>key start<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>assert <span class=\"br0\">(</span>char<span class=\"sy0\">=</span> <span class=\"br0\">(</span>char string start<span class=\"br0\">)</span> #\\<span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> string<span class=\"br0\">)</span> <span class=\"br0\">(</span>+ start <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>multiple-value-bind <span class=\"br0\">(</span>code pos<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">parse-integer</span> string <span class=\"sy0\">:</span><span class=\"me1\">start</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ start<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">end</span> <span class=\"br0\">(</span>+ start <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">radix</span> <span class=\"nu0\">16</span> <span class=\"sy0\">:</span><span class=\"me1\">junk-allowed</span> t<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> pos <span class=\"br0\">(</span>+ start <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>values <span class=\"br0\">(</span>code-char code<span class=\"br0\">)</span> pos<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>values #\\<span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ start<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>values #\\<span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ start<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> url-decode <span class=\"br0\">(</span>url<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop with start <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        for pos <span class=\"sy0\">=</span> <span class=\"br0\">(</span>position #\\<span class=\"sy0\">%</span> url <span class=\"sy0\">:</span><span class=\"me1\">start</span> start<span class=\"br0\">)</span><br/>        collect <span class=\"br0\">(</span>subseq url start pos<span class=\"br0\">)</span> into chunks<br/>        <span class=\"kw1\">when</span> pos<br/>          collect <span class=\"br0\">(</span>multiple-value-bind <span class=\"br0\">(</span>decoded next<span class=\"br0\">)</span> <span class=\"br0\">(</span>decode url <span class=\"sy0\">:</span><span class=\"me1\">start</span> pos<span class=\"br0\">)</span><br/>                    <span class=\"br0\">(</span><span class=\"kw1\">setf</span> start next<span class=\"br0\">)</span><br/>                    <span class=\"br0\">(</span>string decoded<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            into chunks<br/>        while pos<br/>        finally <span class=\"br0\">(</span><span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw1\">apply</span> #'concatenate 'string chunks<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>url-decode <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 5, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">uri</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    writeln<span class=\"br0\">(</span>decodeComponent<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 9, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> URLEncoding<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> IdURI<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>TIdURI<span class=\"sy1\">.</span><span class=\"me1\">URLDecode</span><span class=\"br0\">(</span><span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Elixir", "loc": 2, "block": "<pre class=\"text highlighted_source\">IO.inspect URI.decode(\"http%3A%2F%2Ffoo%20bar%2F\")<br/>IO.inspect URI.decode(\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\")</pre>"}, {"lang": "Erlang", "loc": 1, "block": "<pre>34&gt; http_uri:decode(\"http%3A%2F%2Ffoo%20bar%2F\").\n\"http://foo bar/\"\n</pre>"}, {"lang": "F#", "loc": 8, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/>\u00a0<br/><span class=\"kw1\">let</span> decode uri <span class=\"sy0\">=</span> Uri.<span class=\"me1\">UnescapeDataString</span><span class=\"br0\">(</span>uri<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>decode <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Factor", "loc": 6, "block": "<pre class=\"text highlighted_source\">USING: io kernel urls.encoding\u00a0;<br/>IN: rosetta-code.url-decoding<br/>\u00a0<br/>\"http%3A%2F%2Ffoo%20bar%2F\"<br/>\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\"<br/>[ url-decode print ] <a class=\"__cf_email__\" data-cfemail=\"23414a63\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></pre>"}, {"lang": "Go", "loc": 21, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"log\"</span><br/>\t<span class=\"st0\">\"net/url\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> escaped <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span><br/>\t\t<span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"sy1\">,</span><br/>\t\t<span class=\"st0\">\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\"</span><span class=\"sy1\">,</span><br/>\t<span class=\"sy1\">}</span> <span class=\"sy1\">{</span><br/>\t\tu<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> url<span class=\"sy3\">.</span>QueryUnescape<span class=\"sy1\">(</span>escaped<span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\tlog<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"kw1\">continue</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>u<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 1, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20assert\"><span class=\"kw2\">assert</span></a> <a href=\"http://www.google.de/search?as_q=URLDecoder&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">URLDecoder</span></a>.<span class=\"me1\">decode</span><span class=\"br0\">(</span><span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">'http://foo bar/'</span></pre>"}, {"lang": "Haskell", "loc": 15, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw1\">qualified</span> Data<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Char\"><span class=\"kw4\">Char</span></a> <span class=\"kw1\">as</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Char\"><span class=\"kw4\">Char</span></a><br/>\u00a0<br/>urlDecode <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>urlDecode <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Just <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>urlDecode <span class=\"br0\">(</span><span class=\"st0\">'%'</span>:xs<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">case</span> xs <span class=\"kw1\">of</span><br/>    <span class=\"br0\">(</span>a:b:xss<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>      urlDecode xss<br/>      <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Char\"><span class=\"kw4\">Char</span></a><span class=\"sy0\">.</span>chr <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"0x\"</span> <span class=\"sy0\">++</span> <span class=\"br0\">[</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">]</span><span class=\"br0\">)</span>\u00a0:<span class=\"br0\">)</span><br/>    <span class=\"sy0\">_</span> <span class=\"sy0\">-&gt;</span> Nothing<br/>urlDecode <span class=\"br0\">(</span><span class=\"st0\">'+'</span>:xs<span class=\"br0\">)</span> <span class=\"sy0\">=</span> urlDecode xs <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">' '</span>\u00a0:<span class=\"br0\">)</span><br/>urlDecode <span class=\"br0\">(</span>x:xs<span class=\"br0\">)</span> <span class=\"sy0\">=</span> urlDecode xs <span class=\"sy0\">&gt;&gt;=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"sy0\">.</span> <span class=\"br0\">(</span>x\u00a0:<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:maybe\"><span class=\"kw3\">maybe</span></a> <span class=\"st0\">\"Bad decode\"</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:id\"><span class=\"kw3\">id</span></a> <span class=\"sy0\">$</span> urlDecode <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span></pre>"}, {"lang": "Icon and Unicon", "loc": 22, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> hexcvt<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>ue <span class=\"sy1\">:=</span> <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><br/>ud <span class=\"sy1\">:=</span> decodeURL<span class=\"br0\">(</span>ue<span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Improperly encoded string \"</span><span class=\"sy1\">,</span><span class=\"kw4\">image</span><span class=\"br0\">(</span>ue<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"encoded = \"</span><span class=\"sy1\">,</span><span class=\"kw4\">image</span><span class=\"br0\">(</span>ue<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"decoded = \"</span><span class=\"sy1\">,</span><span class=\"kw4\">image</span><span class=\"br0\">(</span>ue<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> decodeURL<span class=\"br0\">(</span>s<span class=\"br0\">)</span>              <span class=\"co1\">#: decode URL/URI encoded data</span><br/><span class=\"kw2\">static</span> de<br/><span class=\"kw1\">initial</span> <span class=\"br0\">{</span>                           <span class=\"co1\"># build lookup table for everything</span><br/>  de <span class=\"sy1\">:=</span> <span class=\"kw4\">table</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">every</span> de<span class=\"br0\">[</span>hexstring<span class=\"br0\">(</span><span class=\"kw4\">ord</span><span class=\"br0\">(</span>c <span class=\"sy1\">:=</span> <span class=\"sy1\">!</span><span class=\"kw4\">string</span><span class=\"br0\">(</span><span class=\"sy1\">&amp;</span><span class=\"kw3\">ascii</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> c<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>c <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><br/>s <span class=\"sy1\">?</span> <span class=\"kw1\">until</span> <span class=\"kw4\">pos</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span>                 <span class=\"co1\"># decode every\u00a0%xx or fail</span><br/>   c <span class=\"sy1\">||:=</span> <span class=\"kw1\">if</span> <span class=\"sy1\">=</span><span class=\"st0\">\"%\"</span> <span class=\"kw1\">then</span> <span class=\"sy1\">\\</span>de<span class=\"br0\">[</span><span class=\"kw4\">move</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span><br/>   <span class=\"kw1\">else</span> <span class=\"kw4\">move</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">return</span> c<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\">require<span class=\"st_h\">'strings convert'</span><br/>urldecode=: rplc&amp;<span class=\"sy0\">(</span>~.,/;\"<span class=\"nu0\">_1</span>&amp;a.\"<span class=\"nu0\">2</span><span class=\"sy0\">(</span>,:tolower<span class=\"sy0\">)</span><span class=\"st_h\">'%'</span>,.toupper hfd i.#a.<span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 12, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.UnsupportedEncodingException</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.net.URLDecoder</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Main<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aunsupportedencodingexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">UnsupportedEncodingException</span></a><br/>    <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> encoded <span class=\"sy0\">=</span> <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> normal <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aurldecoder+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">URLDecoder</span></a>.<span class=\"me1\">decode</span><span class=\"br0\">(</span>encoded, <span class=\"st0\">\"utf-8\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>normal<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 1, "block": "<pre class=\"javascript highlighted_source\">decodeURIComponent<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "jq", "loc": 27, "block": "<pre class=\"text highlighted_source\"># Emit . and stop as soon as \"condition\" is true.<br/>def until(condition; next):<br/>  def u: if condition then . else (next|u) end;<br/>  u;<br/>\u00a0<br/>def url_decode:<br/>  # The helper function converts the input string written in the given<br/>  # \"base\" to an integer<br/>  def to_i(base):<br/>    explode<br/>    | reverse<br/>    | map(if 65 &lt;= . and . &lt;= 90 then . + 32  else . end)   # downcase<br/>    | map(if . &gt; 96  then . - 87 else . - 48 end)  # \"a\" ~ 97 =&gt; 10 ~ 87<br/>    | reduce .[] as $c<br/>        # base: [power, ans]<br/>        ([1,0]; (.[0] * base) as $b | [$b, .[1] + (.[0] * $c)]) | .[1];<br/>\u00a0<br/>  .  as $in<br/>  | length as $length<br/>  | [0, \"\"]  # i, answer<br/>  | until ( .[0] &gt;= $length;<br/>      .[0] as $i<br/>      |  if $in[$i:$i+1] == \"%\"<br/>         then [ $i + 3, .[1] + ([$in[$i+1:$i+3] | to_i(16)] | implode) ]<br/>         else [ $i + 1, .[1] + $in[$i:$i+1] ]<br/>         end)<br/>  | .[1];  # answer</pre>"}, {"lang": "Julia", "loc": 9, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>using URIParser<br/>\u00a0<br/>enc = \"http%3A%2F%2Ffoo%20bar%2F\"<br/>\u00a0<br/>dcd = unescape(enc)<br/>\u00a0<br/>println(enc, \" =&gt; \", dcd)<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 8, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">URLDecoder</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> encoded <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span>, <span class=\"st0\">\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>e in encoded<span class=\"br0\">)</span> println<span class=\"br0\">(</span>URLDecoder.<span class=\"me1\">decode</span><span class=\"br0\">(</span>e, <span class=\"st0\">\"UTF-8\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 1, "block": "<pre class=\"text highlighted_source\">bytes('http%3A%2F%2Ffoo%20bar%2F') -&gt; decodeurl</pre>"}, {"lang": "Liberty BASIC", "loc": 27, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/>    <span class=\"kw1\">dim</span> lookUp$<span class=\"br0\">(</span> <span class=\"nu0\">256</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"nu0\">256</span><br/>        lookUp$<span class=\"br0\">(</span> i<span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"st0\">\"%\"</span> <span class=\"sy0\">+</span><span class=\"kw2\">dechex$</span><span class=\"br0\">(</span> i<span class=\"br0\">)</span><br/>    <span class=\"kw1\">next</span> i<br/>\u00a0<br/>    url$ <span class=\"sy0\">=</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><br/>\u00a0<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"Supplied URL '\"</span>; url$; <span class=\"st0\">\"'\"</span><br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"As string    '\"</span>; url2string$<span class=\"br0\">(</span> url$<span class=\"br0\">)</span>; <span class=\"st0\">\"'\"</span><br/>\u00a0<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> url2string$<span class=\"br0\">(</span> i$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span> i$<span class=\"br0\">)</span><br/>        c$ <span class=\"sy0\">=</span><span class=\"kw2\">mid$</span><span class=\"br0\">(</span> i$<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> c$ <span class=\"sy0\">=</span><span class=\"st0\">\"%\"</span> <span class=\"kw1\">then</span><br/>            nc$         <span class=\"sy0\">=</span><span class=\"kw2\">chr$</span><span class=\"br0\">(</span> <span class=\"kw2\">hexdec</span><span class=\"br0\">(</span> <span class=\"kw2\">mid$</span><span class=\"br0\">(</span> i$<span class=\"sy0\">,</span> j <span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            url2string$ <span class=\"sy0\">=</span>url2string$ <span class=\"sy0\">+</span>nc$ <br/>            j <span class=\"sy0\">=</span>j <span class=\"sy0\">+</span><span class=\"nu0\">2</span><br/>        <span class=\"kw1\">else</span><br/>            url2string$ <span class=\"sy0\">=</span>url2string$ <span class=\"sy0\">+</span>c$<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">next</span> j<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0</pre>"}, {"lang": "Lingo", "loc": 24, "block": "<pre class=\"text highlighted_source\">----------------------------------------<br/>-- URL decodes a string<br/>-- @param {string} str<br/>-- @return {string}<br/>----------------------------------------<br/>on urldecode (str)<br/>    res = \"\"<br/>    ba = bytearray()<br/>    len = str.length<br/>    repeat with i = 1 to len<br/>        c = str.char[i]<br/>        if (c = \"%\") then<br/>            -- fastest hex-to-dec conversion hack based on Lingo's rgb object<br/>            ba.writeInt8(rgb(str.char[i+1..i+2]).blue)<br/>            i = i + 2<br/>        else if (c = \"+\") then<br/>            ba.writeInt8(32)<br/>        else<br/>            ba.writeInt8(chartonum(c))<br/>        end if<br/>    end repeat<br/>    ba.position = 1<br/>    return ba.readRawString(ba.length)<br/>end</pre>"}, {"lang": "LiveCode", "loc": 2, "block": "<pre class=\"text highlighted_source\">put urlDecode(\"http%3A%2F%2Ffoo%20bar%2F\") &amp; cr &amp; \\<br/>    urlDecode(\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\")</pre>"}, {"lang": "Lua", "loc": 11, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> decodeChar<span class=\"br0\">(</span>hex<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> <span class=\"kw3\">string.char</span><span class=\"br0\">(</span><span class=\"kw3\">tonumber</span><span class=\"br0\">(</span>hex<span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> decodeString<span class=\"br0\">(</span>str<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">local</span> output<span class=\"sy0\">,</span> t <span class=\"sy0\">=</span> <span class=\"kw3\">string.gsub</span><span class=\"br0\">(</span>str<span class=\"sy0\">,</span><span class=\"st0\">\"%%(%x%x)\"</span><span class=\"sy0\">,</span>decodeChar<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> output<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-- will print \"http://foo bar/\"</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span>decodeString<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Maple", "loc": 1, "block": "<pre class=\"text highlighted_source\">StringTools:-Decode(\"http%3A%2F%2Ffoo%20bar%2F\", encoding=percent);</pre>"}, {"lang": "Mathematica", "loc": 4, "block": "<pre class=\"text highlighted_source\">URLDecoding[url_]\u00a0:= <br/> StringReplace[url, \"%\" ~~ x_ ~~ y_\u00a0:&gt; FromDigits[x ~~ y, 16]] //. <br/>  StringExpression[x___, Longest[n__Integer], y___]\u00a0:&gt; <br/>   StringExpression[x, FromCharacterCode[{n}, \"UTF8\"], y]</pre>"}, {"lang": "MATLAB / Octave", "loc": 13, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> u = urldecoding<span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>    u = <span class=\"co2\">''</span>;<br/>    k = <span class=\"nu0\">1</span>;<br/>    <span class=\"kw1\">while</span> k&lt;=<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> s<span class=\"br0\">(</span>k<span class=\"br0\">)</span> == <span class=\"co2\">'%'</span> &amp;&amp; k+<span class=\"nu0\">2</span> &lt;= <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>            u = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%s%c'</span>, u, <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/char.html\"><span class=\"kw2\">char</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/hex2dec.html\"><span class=\"kw2\">hex2dec</span></a><span class=\"br0\">(</span>s<span class=\"br0\">(</span><span class=\"br0\">(</span>k+<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<span class=\"br0\">(</span>k+<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>            k = k + <span class=\"nu0\">3</span>;<br/>        <span class=\"kw1\">else</span><br/>            u = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%s%c'</span>, u, s<span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>            k = k + <span class=\"nu0\">1</span>;<br/>        <span class=\"kw1\">end</span>        <br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "NetRexx", "loc": 44, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref savelog symbols nobinary<br/>\u00a0<br/>url = <span class=\"br0\">[</span> -<br/>  <span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span>, -<br/>  <span class=\"st0\">'mailto%3A%22Ivan%20Aim%22%20%3Civan%2Eaim%40email%2Ecom%3E'</span>, -<br/>  <span class=\"st0\">'%6D%61%69%6C%74%6F%3A%22%49%72%6D%61%20%55%73%65%72%22%20%3C%69%72%6D%61%2E%75%73%65%72%40%6D%61%69%6C%2E%63%6F%6D%3E'</span> -<br/>  <span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">loop</span> u_ = <span class=\"nu0\">0</span> to url.<span class=\"me0\">length</span> - <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">say</span> url<span class=\"br0\">[</span>u_<span class=\"br0\">]</span><br/>  <span class=\"kw1\">say</span> DecodeURL<span class=\"br0\">(</span>url<span class=\"br0\">[</span>u_<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">say</span><br/>  <span class=\"kw3\">end</span> u_<br/>\u00a0<br/><span class=\"kw1\">return</span><br/>\u00a0<br/>method DecodeURL<span class=\"br0\">(</span>arg<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>\u00a0<br/>  <span class=\"kw1\">Parse</span> arg encoded<br/>  decoded = <span class=\"st0\">''</span><br/>  PCT = <span class=\"st0\">'%'</span><br/>\u00a0<br/>  <span class=\"kw1\">loop</span> <span class=\"kw2\">label</span> e_ while encoded.<span class=\"me0\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">parse</span> encoded head <span class=\"br0\">(</span>PCT<span class=\"br0\">)</span> +<span class=\"nu0\">1</span> code +<span class=\"nu0\">2</span> tail<br/>    decoded = decoded <span class=\"sy0\">||</span> head<br/>    <span class=\"kw1\">select</span><br/>      <span class=\"kw3\">when</span> code.<span class=\"kw6\">strip</span><span class=\"br0\">(</span><span class=\"st0\">'T'</span><span class=\"br0\">)</span>.<span class=\"me0\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> = <span class=\"nu0\">2</span> <span class=\"sy0\">&amp;</span> code.<span class=\"kw6\">datatype</span><span class=\"br0\">(</span><span class=\"st0\">'X'</span><span class=\"br0\">)</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>        code = code.<span class=\"kw6\">x2c</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        decoded = decoded <span class=\"sy0\">||</span> code<br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">when</span> code.<span class=\"kw6\">strip</span><span class=\"br0\">(</span><span class=\"st0\">'T'</span><span class=\"br0\">)</span>.<span class=\"me0\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">\\</span>= <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>        decoded = decoded <span class=\"sy0\">||</span> PCT<br/>        tail = code <span class=\"sy0\">||</span> tail<br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">otherwise</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">nop</span><br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">end</span><br/>    encoded = tail<br/>    <span class=\"kw3\">end</span> e_<br/>\u00a0<br/>  <span class=\"kw1\">return</span> decoded<br/>\u00a0</pre>"}, {"lang": "NewLISP", "loc": 7, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"co1\">;; universal decoder, works for ASCII and UTF-8</span><br/><span class=\"co1\">;; (source http://www.newlisp.org/index.cgi?page=Code_Snippets)</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>url<span class=\"sy1\">-</span>decode url <span class=\"br0\">(</span>opt <a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#nil\"><span class=\"kw1\">nil</span></a><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#if\"><span class=\"kw1\">if</span></a> opt <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#replace\"><span class=\"kw1\">replace</span></a> <span class=\"st0\">\"+\"</span> url <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#replace\"><span class=\"kw1\">replace</span></a> <span class=\"st0\">\"%([0-9a-f][0-9a-f])\"</span> url <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#pack\"><span class=\"kw1\">pack</span></a> <span class=\"st0\">\"b\"</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#int\"><span class=\"kw1\">int</span></a> <span class=\"re1\">$1</span> <span class=\"nu0\">0</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>url<span class=\"sy1\">-</span>decode <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Nim", "loc": 3, "block": "<pre class=\"text highlighted_source\">import cgi<br/>\u00a0<br/>echo decodeUrl(\"http%3A%2F%2Ffoo%20bar%2F\")</pre>"}, {"lang": "Oberon-2", "loc": 10, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> URLDecoding;<br/><span class=\"kw1\">IMPORT</span> <br/>  URI <span class=\"sy0\">:=</span> URI<span class=\"sy0\">:</span>String<span class=\"sy0\">,</span><br/>  Out <span class=\"sy0\">:=</span> NPCT<span class=\"sy0\">:</span>Console;<br/><span class=\"kw1\">BEGIN</span><br/>  Out.<span class=\"me1\">String</span><span class=\"br0\">(</span>URI.<span class=\"me1\">Unescape</span><span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Ln</span>;<br/>  Out.<span class=\"me1\">String</span><span class=\"br0\">(</span>URI.<span class=\"me1\">Unescape</span><span class=\"br0\">(</span><span class=\"st0\">\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Ln</span>;  <br/><span class=\"kw1\">END</span> URLDecoding.<br/>\u00a0</pre>"}, {"lang": "Objeck", "loc": 7, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span> UrlDecode <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    Net.UrlUtility<span class=\"sy0\">-&gt;</span><span class=\"me1\">Decode</span><span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Objective-C", "loc": 3, "block": "<pre class=\"objc highlighted_source\"><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"sy0\">*</span>encoded <span class=\"sy0\">=</span> <span class=\"co3\">@</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span>;<br/><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"sy0\">*</span>normal <span class=\"sy0\">=</span> <span class=\"br0\">[</span>encoded stringByReplacingPercentEscapesUsingEncoding<span class=\"sy0\">:</span>NSUTF8StringEncoding<span class=\"br0\">]</span>;<br/>NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%@\"</span>, normal<span class=\"br0\">)</span>;</pre>"}, {"lang": "OCaml", "loc": 6, "block": "<pre class=\"ocaml highlighted_source\">$ ocaml<br/><span class=\"sy0\">#</span> <span class=\"sy0\">#</span>use <span class=\"st0\">\"topfind\"</span><span class=\"sy0\">;;</span><br/><span class=\"sy0\">#</span> <span class=\"sy0\">#</span>require <span class=\"st0\">\"netstring\"</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"sy0\">#</span> Netencoding<span class=\"sy0\">.</span>Url<span class=\"sy0\">.</span>decode <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span> <span class=\"sy0\">;;</span><br/><span class=\"sy0\">-</span> <span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEstring\"><span class=\"kw4\">string</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"http://foo bar/\"</span></pre>"}, {"lang": "ooRexx", "loc": 40, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"coMULTI\">/* Rexx */</span><br/>  X = <span class=\"nu0\">0</span><br/>  url<span class=\"sy0\">.</span> = <span class=\"st0\">''</span><br/>  X = X + <span class=\"nu0\">1</span>; url<span class=\"sy0\">.</span>0 = X; url<span class=\"sy0\">.</span>X = <span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span><br/>  X = X + <span class=\"nu0\">1</span>; url<span class=\"sy0\">.</span>0 = X; url<span class=\"sy0\">.</span>X = <span class=\"st0\">'mailto%3A%22Ivan%20Aim%22%20%3Civan%2Eaim%40email%2Ecom%3E'</span><br/>  X = X + <span class=\"nu0\">1</span>; url<span class=\"sy0\">.</span>0 = X; url<span class=\"sy0\">.</span>X = <span class=\"st0\">'%6D%61%69%6C%74%6F%3A%22%49%72%6D%61%20%55%73%65%72%22%20%3C%69%72%6D%61%2E%75%73%65%72%40%6D%61%69%6C%2E%63%6F%6D%3E'</span><br/>\u00a0<br/>  <span class=\"kw1\">Do</span> u_ = <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> url<span class=\"sy0\">.</span>0<br/>    <span class=\"kw1\">Say</span> url<span class=\"sy0\">.</span>u_<br/>    <span class=\"kw1\">Say</span> DecodeURL<span class=\"br0\">(</span>url<span class=\"sy0\">.</span>u_<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Say</span><br/>    <span class=\"kw3\">End</span> u_<br/>\u00a0<br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>DecodeURL: <span class=\"kw1\">Procedure</span><br/>\u00a0<br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> encoded<br/>  decoded = <span class=\"st0\">''</span><br/>  PCT = <span class=\"st0\">'%'</span><br/>\u00a0<br/>  <span class=\"kw1\">Do</span> label e_ <span class=\"kw2\">while</span> encoded~<span class=\"kw6\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> encoded head <span class=\"br0\">(</span>PCT<span class=\"br0\">)</span> +<span class=\"nu0\">1</span> code +<span class=\"nu0\">2</span> tail<br/>    decoded = decoded <span class=\"sy0\">||</span> head<br/>    <span class=\"kw1\">Select</span><br/>      <span class=\"kw3\">when</span> code~<span class=\"kw6\">strip</span><span class=\"br0\">(</span><span class=\"st0\">'T'</span><span class=\"br0\">)</span>~<span class=\"kw6\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> = <span class=\"nu0\">2</span> <span class=\"sy0\">&amp;</span> code~<span class=\"kw6\">datatype</span><span class=\"br0\">(</span><span class=\"st0\">'X'</span><span class=\"br0\">)</span> <span class=\"kw3\">then</span> <span class=\"kw1\">Do</span><br/>        code = code~<span class=\"kw6\">x2c</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        decoded = decoded <span class=\"sy0\">||</span> code<br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">when</span> code~<span class=\"kw6\">strip</span><span class=\"br0\">(</span><span class=\"st0\">'T'</span><span class=\"br0\">)</span>~<span class=\"kw6\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">\\</span>= <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">Do</span><br/>        decoded = decoded <span class=\"sy0\">||</span> PCT<br/>        tail = code <span class=\"sy0\">||</span> tail<br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">otherwise</span> <br/>        <span class=\"kw1\">Nop</span><br/>      <span class=\"kw3\">End</span><br/>    encoded = tail<br/>    <span class=\"kw3\">End</span> e_<br/>\u00a0<br/>  <span class=\"kw1\">Return</span> decoded</pre>"}, {"lang": "Perl", "loc": 9, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> urldecode <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$s</span> <span class=\"sy0\">=~</span> <span class=\"co2\">tr/\\+/ /</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$s</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/\\%([A-Fa-f0-9]{2})/pack('C', hex($1))/eg</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> urldecode<span class=\"br0\">(</span><span class=\"st_h\">'http%3A%2F%2Ffoo+bar%2F'</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 9, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$url</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"re0\">$url</span><span class=\"sy0\">.</span><span class=\"kw3\">subst</span><span class=\"sy0\">:</span> <span class=\"sy0\">:</span>g<span class=\"sy0\">,</span><br/>    <span class=\"co2\">/'%'(&lt;:hexdigit&gt;**2)/</span><span class=\"sy0\">,</span><br/>    <span class=\"sy0\">-&gt;</span>  <span class=\"br0\">(</span><span class=\"re0\">$ord</span>          <span class=\"br0\">)</span> <span class=\"br0\">{</span> chr<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"nu0\">16</span><span class=\"br0\">(</span><span class=\"sy0\">~</span><span class=\"re0\">$ord</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Alternately, you can use an in-place substitution:</span><br/><span class=\"re0\">$url</span> <span class=\"sy0\">~~</span> s<span class=\"sy0\">:</span>g<span class=\"br0\">[</span> <span class=\"st_h\">'%'</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;:</span>hexdigit<span class=\"sy0\">&gt;</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"sy0\">=</span> chr <span class=\"sy0\">:</span><span class=\"nu0\">16</span><span class=\"br0\">(</span><span class=\"sy0\">~</span><span class=\"co3\">$0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"re0\">$url</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 33, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\decode_url.exw<br/>-- ===========================<br/>--<br/>function decode_url(string s)<br/>integer skip = 0<br/>string res = \"\"<br/>    for i=1 to length(s) do<br/>        if skip then<br/>            skip -= 1<br/>        else<br/>            integer ch = s[i]<br/>            if ch='%' then<br/>                sequence scanres = {}<br/>                if i+2&lt;=length(s) then<br/>                    scanres = scanf(\"#\"&amp;s[i+1..i+2],\"%x\")<br/>                end if<br/>                if length(scanres)!=1 then<br/>                    return \"decode error\"<br/>                end if<br/>                skip = 2<br/>                ch = scanres[1][1]<br/>            elsif ch='+' then<br/>                ch = ' '<br/>            end if<br/>            res &amp;= ch<br/>        end if<br/>    end for<br/>    return res<br/>end function<br/>\u00a0<br/>printf(1,\"%s\\n\",{decode_url(\"http%3A%2F%2Ffoo%20bar%2F\")})<br/>printf(1,\"%s\\n\",{decode_url(\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\")})</pre>"}, {"lang": "PHP", "loc": 5, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"re0\">$encoded</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"http%3A<span class=\"es6\">%2F</span><span class=\"es6\">%2F</span>foo<span class=\"es6\">%20b</span>ar<span class=\"es6\">%2F</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$unencoded</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/rawurldecode\"><span class=\"kw3\">rawurldecode</span></a><span class=\"br0\">(</span><span class=\"re0\">$encoded</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">echo</span> <span class=\"st0\">\"The unencoded string is <span class=\"es4\">$unencoded</span>\u00a0!<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 1, "block": "<pre>: (ht:Pack (chop \"http%3A%2F%2Ffoo%20bar%2F\") T)\n-&gt; \"http://foo bar/\"</pre>"}, {"lang": "PowerShell", "loc": 3, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"br0\">[</span>System.Web.HttpUtility<span class=\"br0\">]</span>::UrlDecode<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 3, "block": "<pre class=\"purebasic highlighted_source\">URL$ <span class=\"sy0\">=</span> URLDecoder<span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Debug</span> URL$  <span class=\"co1\">; http://foo bar/</span></pre>"}, {"lang": "Python", "loc": 8, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"co1\">#Python 2.X</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">urllib</span><br/><span class=\"kw1\">print</span> <span class=\"kw3\">urllib</span>.<span class=\"me1\">unquote</span><span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><br/><span class=\"co1\">#Python 3.5+</span><br/><span class=\"kw1\">from</span> <span class=\"kw3\">urllib</span>.<span class=\"me1\">parse</span> <span class=\"kw1\">import</span> unquote<br/><span class=\"kw1\">print</span><span class=\"br0\">(</span>unquote<span class=\"br0\">(</span><span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "R", "loc": 1, "block": "<pre class=\"text highlighted_source\">URLdecode(\"http%3A%2F%2Ffoo%20bar%2F\")</pre>"}, {"lang": "Racket", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require net/uri-codec)<br/>(uri-decode \"http%3A%2F%2Ffoo%20bar%2F\")<br/>\u00a0</pre>"}, {"lang": "Retro", "loc": 16, "block": "<pre class=\"text highlighted_source\">create buffer 32000 allot<br/>\u00a0<br/>{{<br/>  create bit 5 allot<br/> \u00a0: extract  ( $c-$a ) drop @+ bit\u00a0! @+ bit 1+\u00a0! bit\u00a0;<br/> \u00a0: render   ( $c-$n )<br/>    dup '+ = [ drop 32 ] ifTrue<br/>    dup 13 = [ drop 32 ] ifTrue<br/>    dup 10 = [ drop 32 ] ifTrue<br/>    dup '% = [ extract hex toNumber decimal ] ifTrue\u00a0;<br/> \u00a0: &lt;decode&gt; (  $-$  ) repeat @+ 0; render ^buffer'add again\u00a0;<br/>---reveal---<br/> \u00a0: decode   (  $-   ) buffer ^buffer'set &lt;decode&gt; drop\u00a0;<br/>}}<br/>\u00a0<br/>\"http%3A%2F%2Ffoo%20bar%2F\" decode buffer puts</pre>"}, {"lang": "REXX", "loc": 49, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* Rexx */</span><br/>\u00a0<br/><span class=\"kw1\">Do</span><br/>  X = <span class=\"nu0\">0</span><br/>  url<span class=\"sy0\">.</span> = <span class=\"st0\">''</span><br/>  X = X + <span class=\"nu0\">1</span>; url<span class=\"sy0\">.</span>0 = X; url<span class=\"sy0\">.</span>X = <span class=\"st0\">'http%3A%2F%2Ffoo%20bar%2F'</span><br/>  X = X + <span class=\"nu0\">1</span>; url<span class=\"sy0\">.</span>0 = X; url<span class=\"sy0\">.</span>X = <span class=\"st0\">'mailto%3A%22Ivan%20Aim%22%20%3Civan%2Eaim%40email%2Ecom%3E'</span><br/>  X = X + <span class=\"nu0\">1</span>; url<span class=\"sy0\">.</span>0 = X; url<span class=\"sy0\">.</span>X = <span class=\"st0\">'%6D%61%69%6C%74%6F%3A%22%49%72%6D%61%20%55%73%65%72%22%20%3C%69%72%6D%61%2E%75%73%65%72%40%6D%61%69%6C%2E%63%6F%6D%3E'</span><br/>\u00a0<br/>  <span class=\"kw1\">Do</span> u_ = <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> url<span class=\"sy0\">.</span>0<br/>    <span class=\"kw1\">Say</span> url<span class=\"sy0\">.</span>u_<br/>    <span class=\"kw1\">Say</span> DecodeURL<span class=\"br0\">(</span>url<span class=\"sy0\">.</span>u_<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Say</span><br/>    <span class=\"kw3\">End</span> u_<br/>\u00a0<br/>  <span class=\"kw1\">Return</span><br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>DecodeURL:<br/><span class=\"kw1\">Procedure</span><br/><span class=\"kw1\">Do</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> encoded<br/>  decoded = <span class=\"st0\">''</span><br/>  PCT = <span class=\"st0\">'%'</span><br/>\u00a0<br/>  <span class=\"kw1\">Do</span> <span class=\"kw2\">while</span> <span class=\"kw6\">length</span><span class=\"br0\">(</span>encoded<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> encoded head <span class=\"br0\">(</span>PCT<span class=\"br0\">)</span> +<span class=\"nu0\">1</span> code +<span class=\"nu0\">2</span> tail<br/>    decoded = decoded <span class=\"sy0\">||</span> head<br/>    <span class=\"kw1\">Select</span><br/>      <span class=\"kw3\">When</span> <span class=\"kw6\">length</span><span class=\"br0\">(</span><span class=\"kw6\">strip</span><span class=\"br0\">(</span>code, <span class=\"st0\">'T'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"nu0\">2</span> <span class=\"sy0\">&amp;</span> <span class=\"kw6\">datatype</span><span class=\"br0\">(</span>code, <span class=\"st0\">'X'</span><span class=\"br0\">)</span> <span class=\"kw3\">then</span> <span class=\"kw1\">Do</span><br/>        code = <span class=\"kw6\">x2c</span><span class=\"br0\">(</span>code<span class=\"br0\">)</span><br/>        decoded = decoded <span class=\"sy0\">||</span> code<br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">When</span> <span class=\"kw6\">length</span><span class=\"br0\">(</span><span class=\"kw6\">strip</span><span class=\"br0\">(</span>code, <span class=\"st0\">'T'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">\\</span>= <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">Do</span><br/>        decoded = decoded <span class=\"sy0\">||</span> PCT<br/>        tail = code <span class=\"sy0\">||</span> tail<br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">Otherwise</span> <span class=\"kw1\">Do</span><br/>        <span class=\"kw1\">Nop</span><br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">End</span><br/>    encoded = tail<br/>    <span class=\"kw3\">End</span><br/>\u00a0<br/>  <span class=\"kw1\">Return</span> decoded<br/><span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 3, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'cgi'</span><br/><span class=\"kw3\">puts</span> <span class=\"kw4\">CGI</span>.<span class=\"me1\">unescape</span><span class=\"br0\">(</span><span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span><span class=\"br0\">)</span><br/><span class=\"co1\"># =&gt; \"http://foo bar/\"</span></pre>"}, {"lang": "Scala", "loc": 16, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"br0\">{</span>URLDecoder, URLEncoder<span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">compat</span>.<span class=\"me1\">Platform</span>.<span class=\"me1\">currentTime</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> UrlCoded <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> original <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"http://foo bar/\"</span><span class=\"st0\">\"\"</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> encoded<span class=\"sy0\">:</span> String <span class=\"sy0\">=</span> URLEncoder.<span class=\"me1\">encode</span><span class=\"br0\">(</span>original, <span class=\"st0\">\"UTF-8\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  assert<span class=\"br0\">(</span>encoded <span class=\"sy0\">==</span> <span class=\"st0\">\"http%3A%2F%2Ffoo+bar%2F\"</span>, s<span class=\"st0\">\"Original: $original not properly encoded: $encoded\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> percentEncoding <span class=\"sy0\">=</span> encoded.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">\"+\"</span>, <span class=\"st0\">\"%20\"</span><span class=\"br0\">)</span><br/>  assert<span class=\"br0\">(</span>percentEncoding <span class=\"sy0\">==</span> <span class=\"st0\">\"http%3A%2F%2Ffoo%20bar%2F\"</span>, s<span class=\"st0\">\"Original: $original not properly percent-encoded: $percentEncoding\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  assert<span class=\"br0\">(</span>URLDecoder.<span class=\"me1\">decode</span><span class=\"br0\">(</span>encoded, <span class=\"st0\">\"UTF-8\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> URLDecoder.<span class=\"me1\">decode</span><span class=\"br0\">(</span>percentEncoding, <span class=\"st0\">\"UTF-8\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span>s<span class=\"st0\">\"Successfully completed without errors. [total ${currentTime - executionStart} ms]\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 8, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"encoding.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(fromPercentEncoded(\"http%3A%2F%2Ffoo%20bar%2F\"));<br/>    writeln(fromUrlEncoded(\"http%3A%2F%2Ffoo+bar%2F\"));<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 7, "block": "<pre class=\"ruby highlighted_source\">func urldecode<span class=\"br0\">(</span>str<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    str.<span class=\"kw3\">gsub!</span><span class=\"br0\">(</span><span class=\"st0\">'+'</span>, <span class=\"st0\">' '</span><span class=\"br0\">)</span>;<br/>    str.<span class=\"kw3\">gsub!</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>\\<span class=\"sy0\">%</span><span class=\"br0\">(</span><span class=\"br0\">[</span>A<span class=\"sy0\">-</span>Fa<span class=\"sy0\">-</span>f0<span class=\"sy0\">-</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>, <span class=\"br0\">{</span><span class=\"sy0\">|</span>a<span class=\"sy0\">|</span> <span class=\"st0\">'C'</span>.<span class=\"me1\">pack</span><span class=\"br0\">(</span>a.<span class=\"me1\">hex</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw2\">return</span> str;<br/><span class=\"br0\">}</span><br/>\u00a0<br/>say urldecode<span class=\"br0\">(</span><span class=\"st0\">'http%3A%2F%2Ffoo+bar%2F'</span><span class=\"br0\">)</span>;  <span class=\"co1\"># =&gt; \"http://foo bar/\"</span></pre>"}, {"lang": "Swift", "loc": 6, "block": "<pre class=\"text highlighted_source\">import Foundation<br/>\u00a0<br/>let encoded = \"http%3A%2F%2Ffoo%20bar%2F\"<br/>if let normal = encoded.stringByReplacingPercentEscapesUsingEncoding(NSUTF8StringEncoding) {<br/>  println(normal)<br/>}</pre>"}, {"lang": "Tcl", "loc": 7, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> urlDecode <span class=\"br0\">{</span>str<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> specialMap <span class=\"br0\">{</span><span class=\"st0\">\"[\"</span> <span class=\"st0\">\"%5B\"</span> <span class=\"st0\">\"]\"</span> <span class=\"st0\">\"%5D\"</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> seqRE <span class=\"br0\">{</span><span class=\"sy0\">%</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>-9a-fA-F<span class=\"br0\">]</span><span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> replacement <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"%c\"</span> <span class=\"br0\">[</span><span class=\"kw2\">scan</span> <span class=\"st0\">\"<span class=\"es0\">\\1</span>\"</span> <span class=\"st0\">\"%2x\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> modStr <span class=\"br0\">[</span><span class=\"kw2\">regsub</span> -all <span class=\"re0\">$seqRE</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> map <span class=\"re0\">$specialMap</span> <span class=\"re0\">$str</span><span class=\"br0\">]</span> <span class=\"re0\">$replacement</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span>encoding convertfrom utf-<span class=\"nu0\">8</span> <span class=\"br0\">[</span><span class=\"kw2\">subst</span> -nobackslash -novariable <span class=\"re0\">$modStr</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TUSCRIPT", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>url_encoded=\"http%3A%2F%2Ffoo%20bar%2F\"<br/>BUILD S_TABLE hex=\":%&gt;&lt;:&gt;&lt;2&lt;&gt;2&lt;%:\"<br/>hex=STRINGS (url_encoded,hex), hex=SPLIT(hex)<br/>hex=DECODE (hex,hex)<br/>url_decoded=SUBSTITUTE(url_encoded,\":%&gt;&lt;2&lt;&gt;2&lt;%:\",0,0,hex)<br/>PRINT \"encoded: \", url_encoded<br/>PRINT \"decoded: \", url_decoded<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 1, "block": "<pre class=\"bash highlighted_source\">urldecode<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">local</span> <span class=\"re2\">u</span>=<span class=\"st0\">\"<span class=\"es3\">${1//+/ }</span>\"</span>; <span class=\"kw3\">printf</span> <span class=\"st_h\">'%b'</span> <span class=\"st0\">\"<span class=\"es3\">${u//%/\\\\x}</span>\"</span>; <span class=\"br0\">}</span></pre>"}, {"lang": "VBScript", "loc": 14, "block": "<pre class=\"text highlighted_source\">Function UrlDecode(s)<br/>\tFor i = 1 To Len(s)<br/>\t\tIf Mid(s,i,1) = \"%\" Then<br/>\t\t\tUrlDecode = UrlDecode &amp; Chr(\"&amp;H\" &amp; Mid(s,i+1,2))<br/>\t\t\ti = i + 2<br/>\t\tElse<br/>\t\t\tUrlDecode = UrlDecode &amp; Mid(s,i,1)<br/>\t\tEnd If<br/>\tNext<br/>End Function<br/>\u00a0<br/>url = \"http%3A%2F%2Ffoo%20bar%2F\"<br/>WScript.Echo \"Encoded URL: \" &amp; url &amp; vbCrLf &amp;_<br/>\t\"Decoded URL: \" &amp; UrlDecode(url)</pre>"}, {"lang": "XPL0", "loc": 23, "block": "<pre class=\"text highlighted_source\">code Text=12;<br/>string 0;               \\use zero-terminated strings<br/>\u00a0<br/>func Decode(S0);        \\Decode URL string and return its address<br/>char S0;<br/>char S1(80);            \\BEWARE: very temporary string space returned<br/>int  C, N, I, J;<br/>[I:= 0;  J:= 0;<br/>repeat  C:= S0(I);  I:= I+1;                    \\get char<br/>        if C=^% then                            \\convert hex to char<br/>                [C:= S0(I);  I:= I+1;<br/>                if C&gt;=^a then C:= C &amp; ~$20;     \\convert to uppercase<br/>                N:= C - (if C&lt;=^9 then ^0 else ^A-10);<br/>                C:= S0(I);  I:= I+1;<br/>                if C&gt;=^a then C:= C &amp; ~$20;<br/>                C:= N*16 + C - (if C&lt;=^9 then ^0 else ^A-10);<br/>                ];<br/>        S1(J):= C;  J:= J+1;                    \\put char in output string<br/>until   C=0;<br/>return S1;<br/>];<br/>\u00a0<br/>Text(0, Decode(\"http%3A%2F%2Ffoo%20bar%2f\"))</pre>"}, {"lang": "Yabasic", "loc": 19, "block": "<pre class=\"text highlighted_source\">sub decode_url$(s$)<br/>    local res$, ch$<br/>\u00a0<br/>    while(s$ &lt;&gt; \"\")<br/>        ch$ = left$(s$, 1)<br/>        if ch$ = \"%\" then<br/>            ch$ = chr$(dec(mid$(s$, 2, 2)))<br/>            s$ = right$(s$, len(s$) - 3)<br/>        else<br/>            if ch$ = \"+\" ch$ = \" \"<br/>            s$ = right$(s$, len(s$) - 1)<br/>\tendif<br/>        res$ = res$ + ch$<br/>    wend<br/>    return res$<br/>end sub<br/>\u00a0<br/>print decode_url$(\"http%3A%2F%2Ffoo%20bar%2F\")<br/>print decode_url$(\"google.com/search?q=%60Abdu%27l-Bah%C3%A1\")</pre>"}, {"lang": "zkl", "loc": 3, "block": "<pre class=\"text highlighted_source\">\"http%3A%2F%2Ffoo%20bar%2F\".pump(String,  // push each char through these fcns:<br/>   fcn(c){ if(c==\"%\") return(Void.Read,2); return(Void.Skip,c) },//\u00a0%--&gt;read 2 chars else pass through<br/>   fcn(_,b,c){ (b+c).toInt(16).toChar() })  // \"%\" (ignored)  \"3\"+\"1\"--&gt;0x31--&gt;\"1\"</pre>"}]}