{"task": "Animate_a_pendulum", "blocks": [{"lang": "Ada", "loc": 19, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">generic</span><br/>   <span class=\"kw3\">type</span> Float_Type <span class=\"kw1\">is</span> <span class=\"kw3\">digits</span> &lt;&gt;;<br/>   Gravitation\u00a0: Float_Type;<br/><span class=\"kw3\">package</span> Pendulums <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">type</span> Pendulum <span class=\"kw1\">is</span> <span class=\"kw3\">private</span>;<br/>   <span class=\"kw3\">function</span> New_Pendulum <span class=\"br0\">(</span>Length\u00a0: Float_Type;<br/>                          Theta0\u00a0: Float_Type<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Pendulum;<br/>   <span class=\"kw3\">function</span> Get_X <span class=\"br0\">(</span>From\u00a0: Pendulum<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Float_Type;<br/>   <span class=\"kw3\">function</span> Get_Y <span class=\"br0\">(</span>From\u00a0: Pendulum<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Float_Type;<br/>   <span class=\"kw3\">procedure</span> Update_Pendulum <span class=\"br0\">(</span>Item\u00a0: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> Pendulum; Time\u00a0: <span class=\"kw3\">in</span> Duration<span class=\"br0\">)</span>;<br/><span class=\"kw3\">private</span><br/>   <span class=\"kw3\">type</span> Pendulum <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      Length  \u00a0: Float_Type;<br/>      Theta   \u00a0: Float_Type;<br/>      X       \u00a0: Float_Type;<br/>      Y       \u00a0: Float_Type;<br/>      Velocity\u00a0: Float_Type;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/><span class=\"kw1\">end</span> Pendulums;</pre>"}, {"lang": "AutoHotkey", "loc": 39, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/SetBatchLines.htm\"><span class=\"kw3\">SetBatchlines</span></a><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><br/><span class=\"co1\">;settings</span><br/>SizeGUI<span class=\"sy0\">:=</span><span class=\"br0\">{</span>w:<span class=\"nu0\">650</span><span class=\"sy0\">,</span>h:<span class=\"nu0\">400</span><span class=\"br0\">}</span> <span class=\"co1\">;Guisize</span><br/>pendulum<span class=\"sy0\">:=</span><span class=\"br0\">{</span>length:<span class=\"nu0\">300</span><span class=\"sy0\">,</span>maxangle:<span class=\"nu0\">90</span><span class=\"sy0\">,</span>speed:<span class=\"nu0\">2</span><span class=\"sy0\">,</span>size:<span class=\"nu0\">30</span><span class=\"sy0\">,</span>center:<span class=\"br0\">{</span>x:Sizegui<span class=\"sy0\">.</span>w<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>y:<span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"co1\">;pendulum length, size, center, speed and maxangle</span><br/>\u00a0<br/>pendulum<span class=\"sy0\">.</span>maxangle<span class=\"sy0\">:=</span>pendulum<span class=\"sy0\">.</span>maxangle<span class=\"sy0\">*</span><span class=\"nu0\">0.01745329252</span><br/>p_Token<span class=\"sy0\">:=</span>Gdip_Startup<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,+</span>LastFound<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a><span class=\"sy0\">,</span>% <span class=\"st0\">\"w\"</span> SizeGUI<span class=\"sy0\">.</span>w  <span class=\"st0\">\" h\"</span> SizeGUI<span class=\"sy0\">.</span>h<br/>hwnd<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">WinActive</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>hdc<span class=\"sy0\">:=</span>GetDC<span class=\"br0\">(</span>hwnd<span class=\"br0\">)</span><br/>start<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_TickCount\"><span class=\"kw2\">A_TickCount</span></a><span class=\"sy0\">/</span><span class=\"nu0\">1000</span><br/>G<span class=\"sy0\">:=</span>Gdip_GraphicsFromHDC<span class=\"br0\">(</span>hdc<span class=\"br0\">)</span><br/>pBitmap<span class=\"sy0\">:=</span>Gdip_CreateBitmap<span class=\"br0\">(</span><span class=\"nu0\">650</span><span class=\"sy0\">,</span> <span class=\"nu0\">450</span><span class=\"br0\">)</span><br/>G2<span class=\"sy0\">:=</span>Gdip_GraphicsFromImage<span class=\"br0\">(</span>pBitmap<span class=\"br0\">)</span><br/>Gdip_SetSmoothingMode<span class=\"br0\">(</span>G2<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>pBrush <span class=\"sy0\">:=</span> Gdip_BrushCreateSolid<span class=\"br0\">(</span>0xff0000FF<span class=\"br0\">)</span><br/>pBrush2 <span class=\"sy0\">:=</span> Gdip_BrushCreateSolid<span class=\"br0\">(</span>0xFF777700<span class=\"br0\">)</span><br/>pPen<span class=\"sy0\">:=</span>Gdip_CreatePenFromBrush<span class=\"br0\">(</span>pBrush2<span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/SetTimer.htm\"><span class=\"kw3\">SetTimer</span></a><span class=\"sy0\">,</span>Update<span class=\"sy0\">,</span><span class=\"nu0\">10</span><br/>\u00a0<br/><span class=\"re2\">Update:<br/></span>Gdip_GraphicsClear<span class=\"br0\">(</span>G2<span class=\"sy0\">,</span>0xFFFFFFFF<span class=\"br0\">)</span><br/>time<span class=\"sy0\">:=</span>start<span class=\"sy0\">-</span><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_TickCount\"><span class=\"kw2\">A_TickCount</span></a><span class=\"sy0\">/</span><span class=\"nu0\">1000</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">.</span>speed<span class=\"br0\">)</span><br/>angle<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">sin</span></a><span class=\"br0\">(</span>time<span class=\"br0\">)</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">.</span>maxangle<br/>x2<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">sin</span></a><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">.</span>length<span class=\"sy0\">+</span>pendulum<span class=\"sy0\">.</span>center<span class=\"sy0\">.</span>x<br/>y2<span class=\"sy0\">:=</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">cos</span></a><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">.</span>length<span class=\"sy0\">+</span>pendulum<span class=\"sy0\">.</span>center<span class=\"sy0\">.</span>y<br/>Gdip_DrawLine<span class=\"br0\">(</span>G2<span class=\"sy0\">,</span>pPen<span class=\"sy0\">,</span>pendulum<span class=\"sy0\">.</span>center<span class=\"sy0\">.</span>x<span class=\"sy0\">,</span>pendulum<span class=\"sy0\">.</span>center<span class=\"sy0\">.</span>y<span class=\"sy0\">,</span>x2<span class=\"sy0\">,</span>y2<span class=\"br0\">)</span><br/>GDIP_DrawCircle<span class=\"br0\">(</span>G2<span class=\"sy0\">,</span>pBrush<span class=\"sy0\">,</span>pendulum<span class=\"sy0\">.</span>center<span class=\"sy0\">.</span>x<span class=\"sy0\">,</span>pendulum<span class=\"sy0\">.</span>center<span class=\"sy0\">.</span>y<span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>GDIP_DrawCircle<span class=\"br0\">(</span>G2<span class=\"sy0\">,</span>pBrush2<span class=\"sy0\">,</span>x2<span class=\"sy0\">,</span>y2<span class=\"sy0\">,</span>pendulum<span class=\"sy0\">.</span>size<span class=\"br0\">)</span><br/>Gdip_DrawImage<span class=\"br0\">(</span>G<span class=\"sy0\">,</span> pBitmap<span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/>GDIP_DrawCircle<span class=\"br0\">(</span>g<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span>r<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\tGdip_FillEllipse<span class=\"br0\">(</span>g<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> x<span class=\"sy0\">-</span>r<span class=\"sy0\">//</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>y<span class=\"sy0\">-</span>r<span class=\"sy0\">//</span><span class=\"nu0\">2</span> <span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> r<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a></pre>"}, {"lang": "BASIC", "loc": 29, "block": "<pre class=\"text highlighted_source\">      MODE 8<br/>      *FLOAT 64<br/>      VDU 23,23,4;0;0;0;\u00a0: REM Set line thickness<br/>\u00a0<br/>      theta = RAD(40)\u00a0: REM initial displacement<br/>      g = 9.81\u00a0: REM acceleration due to gravity<br/>      l = 0.50\u00a0: REM length of pendulum in metres<br/>\u00a0<br/>      REPEAT<br/>        PROCpendulum(theta, l)<br/>        WAIT 1<br/>        PROCpendulum(theta, l)<br/>        accel = - g * SIN(theta) / l / 100<br/>        speed += accel / 100<br/>        theta += speed<br/>      UNTIL FALSE<br/>      END<br/>\u00a0<br/>      DEF PROCpendulum(a, l)<br/>      LOCAL pivotX, pivotY, bobX, bobY<br/>      pivotX = 640<br/>      pivotY = 800<br/>      bobX = pivotX + l * 1000 * SIN(a)<br/>      bobY = pivotY - l * 1000 * COS(a)<br/>      GCOL 3,6<br/>      LINE pivotX, pivotY, bobX, bobY<br/>      GCOL 3,11<br/>      CIRCLE FILL bobX + 24 * SIN(a), bobY - 24 * COS(a), 24<br/>      ENDPROC</pre>"}, {"lang": "C", "loc": 77, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;math.h&gt;</span><br/><span class=\"co2\">#include &lt;GL/glut.h&gt;</span><br/><span class=\"co2\">#include &lt;GL/gl.h&gt;</span><br/><span class=\"co2\">#include &lt;sys/time.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define length 5</span><br/><span class=\"co2\">#define g 9.8</span><br/><span class=\"kw4\">double</span> alpha<span class=\"sy0\">,</span> accl<span class=\"sy0\">,</span> omega <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> E<span class=\"sy0\">;</span><br/><span class=\"kw4\">struct</span> timeval tv<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">double</span> elappsed<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">struct</span> timeval now<span class=\"sy0\">;</span><br/>\tgettimeofday<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>now<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> ret <span class=\"sy0\">=</span> <span class=\"br0\">(</span>now.<span class=\"me1\">tv_sec</span> <span class=\"sy0\">-</span> tv.<span class=\"me1\">tv_sec</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000000</span><br/>\t\t<span class=\"sy0\">+</span> now.<span class=\"me1\">tv_usec</span> <span class=\"sy0\">-</span> tv.<span class=\"me1\">tv_usec</span><span class=\"sy0\">;</span><br/>\ttv <span class=\"sy0\">=</span> now<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> ret <span class=\"sy0\">/</span> <span class=\"nu19\">1.<span class=\"me1\">e6</span></span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> resize<span class=\"br0\">(</span><span class=\"kw4\">int</span> w<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> h<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tglViewport<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglMatrixMode<span class=\"br0\">(</span>GL_PROJECTION<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglLoadIdentity<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tglMatrixMode<span class=\"br0\">(</span>GL_MODELVIEW<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglLoadIdentity<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglOrtho<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> w<span class=\"sy0\">,</span> h<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> render<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">320</span> <span class=\"sy0\">+</span> <span class=\"nu0\">300</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span>alpha<span class=\"br0\">)</span><span class=\"sy0\">,</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">300</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>alpha<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tresize<span class=\"br0\">(</span><span class=\"nu0\">640</span><span class=\"sy0\">,</span> <span class=\"nu0\">320</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> \tglClear<span class=\"br0\">(</span>GL_COLOR_BUFFER_BIT<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tglBegin<span class=\"br0\">(</span>GL_LINES<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglVertex2d<span class=\"br0\">(</span><span class=\"nu0\">320</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglVertex2d<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglEnd<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglFlush<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw4\">double</span> us <span class=\"sy0\">=</span> elappsed<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\talpha <span class=\"sy0\">+=</span> <span class=\"br0\">(</span>omega <span class=\"sy0\">+</span> us <span class=\"sy0\">*</span> accl <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> us<span class=\"sy0\">;</span><br/>\tomega <span class=\"sy0\">+=</span> accl <span class=\"sy0\">*</span> us<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"coMULTI\">/* don't let precision error go out of hand */</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>length <span class=\"sy0\">*</span> g <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>alpha<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> E<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\talpha <span class=\"sy0\">=</span> <span class=\"br0\">(</span>alpha <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/acos.html\"><span class=\"kw3\">acos</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> E <span class=\"sy0\">/</span> length <span class=\"sy0\">/</span> g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tomega <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\taccl <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>g <span class=\"sy0\">/</span> length <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span>alpha<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> init_gfx<span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span>c<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>v<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\tglutInit<span class=\"br0\">(</span>c<span class=\"sy0\">,</span> v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglutInitDisplayMode<span class=\"br0\">(</span>GLUT_RGB<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglutInitWindowSize<span class=\"br0\">(</span><span class=\"nu0\">640</span><span class=\"sy0\">,</span> <span class=\"nu0\">320</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglutIdleFunc<span class=\"br0\">(</span>render<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglutCreateWindow<span class=\"br0\">(</span><span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> c<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>v<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\talpha <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atan2.html\"><span class=\"kw3\">atan2</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu16\">2.1</span><span class=\"sy0\">;</span><br/>\tE <span class=\"sy0\">=</span> length <span class=\"sy0\">*</span> g <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>alpha<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\taccl <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>g <span class=\"sy0\">/</span> length <span class=\"sy0\">*</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span>alpha<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tomega <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tgettimeofday<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>tv<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tinit_gfx<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>c<span class=\"sy0\">,</span> v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tglutMainLoop<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 68, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#ifndef __wxPendulumDlg_h__<br/>#define __wxPendulumDlg_h__<br/>\u00a0<br/>// ---------------------<br/>/// @author Martin Ettl<br/>/// @date   2013-02-03<br/>// ---------------------<br/>\u00a0<br/>#ifdef __BORLANDC__<br/>#pragma hdrstop<br/>#endif<br/>\u00a0<br/>#ifndef WX_PRECOMP<br/>#include &lt;wx/wx.h&gt;<br/>#include &lt;wx/dialog.h&gt;<br/>#else<br/>#include &lt;wx/wxprec.h&gt;<br/>#endif<br/>#include &lt;wx/timer.h&gt;<br/>#include &lt;wx/dcbuffer.h&gt;<br/>#include &lt;cmath&gt;<br/>\u00a0<br/>class wxPendulumDlgApp\u00a0: public wxApp<br/>{<br/>    public:<br/>        bool OnInit();<br/>        int OnExit();<br/>};<br/>\u00a0<br/>class wxPendulumDlg\u00a0: public wxDialog<br/>{<br/>    public:<br/>\u00a0<br/>        wxPendulumDlg(wxWindow *parent, wxWindowID id = 1, const wxString &amp;title = wxT(\"wxPendulum\"), <br/>\t\t\t\t const wxPoint&amp; pos = wxDefaultPosition, const wxSize&amp; size = wxDefaultSize, <br/>\t\t\t\t long style = wxSUNKEN_BORDER | wxCAPTION | wxRESIZE_BORDER | wxSYSTEM_MENU | wxDIALOG_NO_PARENT | wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxCLOSE_BOX);<br/>\u00a0<br/>        virtual ~wxPendulumDlg();<br/>\u00a0<br/>\t\t// Event handler<br/>        void wxPendulumDlgPaint(wxPaintEvent&amp; event);<br/>        void wxPendulumDlgSize(wxSizeEvent&amp; event);<br/>        void OnTimer(wxTimerEvent&amp; event);<br/>\u00a0<br/>    private:<br/>\u00a0<br/>\t\t// a pointer to a timer object<br/>        wxTimer *m_timer;<br/>\u00a0<br/>\t\tunsigned int m_uiLength;<br/>\t\tdouble  \t m_Angle;<br/>\t\tdouble       m_AngleVelocity;<br/>\u00a0<br/>        enum wxIDs<br/>        {<br/>            ID_WXTIMER1 = 1001,<br/>            ID_DUMMY_VALUE_ <br/>        };<br/>\u00a0<br/>        void OnClose(wxCloseEvent&amp; event);<br/>        void CreateGUIControls();<br/>\u00a0<br/>        DECLARE_EVENT_TABLE()<br/>};<br/>\u00a0<br/>#endif // __wxPendulumDlg_h__<br/>\u00a0</pre>"}, {"lang": "C#", "loc": 56, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Windows.Forms</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> CSharpPendulum<br/><span class=\"br0\">{</span><br/>    Form _form<span class=\"sy0\">;</span><br/>    Timer _timer<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">double</span> _angle <span class=\"sy0\">=</span> Math<span class=\"sy0\">.</span><span class=\"me1\">PI</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, <br/>           _angleAccel, <br/>           _angleVelocity <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, <br/>           _dt <span class=\"sy0\">=</span> <span class=\"nu0\">0.1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> _length <span class=\"sy0\">=</span> <span class=\"nu0\">50</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"br0\">[</span>STAThread<span class=\"br0\">]</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> p <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> CSharpPendulum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> CSharpPendulum<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        _form <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Form<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Text <span class=\"sy0\">=</span> <span class=\"st0\">\"Pendulum\"</span>, Width <span class=\"sy0\">=</span> <span class=\"nu0\">200</span>, Height <span class=\"sy0\">=</span> <span class=\"nu0\">200</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        _timer <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Timer<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Interval <span class=\"sy0\">=</span> <span class=\"nu0\">30</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        _timer<span class=\"sy0\">.</span><span class=\"me1\">Tick</span> <span class=\"sy0\">+=</span> <span class=\"kw4\">delegate</span><span class=\"br0\">(</span><span class=\"kw4\">object</span> sender, EventArgs e<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> anchorX <span class=\"sy0\">=</span> <span class=\"br0\">(</span>_form<span class=\"sy0\">.</span><span class=\"me1\">Width</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">12</span>,<br/>                anchorY <span class=\"sy0\">=</span> _form<span class=\"sy0\">.</span><span class=\"me1\">Height</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span>,<br/>                ballX <span class=\"sy0\">=</span> anchorX <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Sin</span><span class=\"br0\">(</span>_angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> _length<span class=\"br0\">)</span>,<br/>                ballY <span class=\"sy0\">=</span> anchorY <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Cos</span><span class=\"br0\">(</span>_angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> _length<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            _angleAccel <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">9.81</span> <span class=\"sy0\">/</span> _length <span class=\"sy0\">*</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Sin</span><span class=\"br0\">(</span>_angle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            _angleVelocity <span class=\"sy0\">+=</span> _angleAccel <span class=\"sy0\">*</span> _dt<span class=\"sy0\">;</span><br/>            _angle <span class=\"sy0\">+=</span> _angleVelocity <span class=\"sy0\">*</span> _dt<span class=\"sy0\">;</span><br/>\u00a0<br/>            Bitmap dblBuffer <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Bitmap<span class=\"br0\">(</span>_form<span class=\"sy0\">.</span><span class=\"me1\">Width</span>, _form<span class=\"sy0\">.</span><span class=\"me1\">Height</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Graphics g <span class=\"sy0\">=</span> Graphics<span class=\"sy0\">.</span><span class=\"me1\">FromImage</span><span class=\"br0\">(</span>dblBuffer<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Graphics f <span class=\"sy0\">=</span> Graphics<span class=\"sy0\">.</span><span class=\"me1\">FromHwnd</span><span class=\"br0\">(</span>_form<span class=\"sy0\">.</span><span class=\"me1\">Handle</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            g<span class=\"sy0\">.</span><span class=\"me1\">DrawLine</span><span class=\"br0\">(</span>Pens<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span>anchorX, anchorY<span class=\"br0\">)</span>, <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span>ballX, ballY<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">Black</span>, anchorX <span class=\"sy0\">-</span> <span class=\"nu0\">3</span>, anchorY <span class=\"sy0\">-</span> <span class=\"nu0\">4</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>Brushes<span class=\"sy0\">.</span><span class=\"me1\">DarkGoldenrod</span>, ballX <span class=\"sy0\">-</span> <span class=\"nu0\">7</span>, ballY <span class=\"sy0\">-</span> <span class=\"nu0\">7</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">14</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            f<span class=\"sy0\">.</span><span class=\"me1\">Clear</span><span class=\"br0\">(</span>Color<span class=\"sy0\">.</span><span class=\"me1\">White</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f<span class=\"sy0\">.</span><span class=\"me1\">DrawImage</span><span class=\"br0\">(</span>dblBuffer, <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    <br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        _timer<span class=\"sy0\">.</span><span class=\"me1\">Start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Application<span class=\"sy0\">.</span><span class=\"me1\">Run</span><span class=\"br0\">(</span>_form<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span>     <br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 65, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">ns</span> pendulum<br/>  <span class=\"br0\">(</span>:<span class=\"kw1\">import</span><br/>    <span class=\"br0\">(</span>javax<span class=\"sy0\">.</span>swing JFrame<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>java<span class=\"sy0\">.</span>awt Canvas Graphics Color<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> length <span class=\"nu0\">200</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> width <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">50</span> length<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> height <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">3</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> length <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> dt <span class=\"nu0\">0.1</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> g <span class=\"nu0\">9.812</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> k <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> g length<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> anchor<span class=\"sy0\">-</span>x <span class=\"br0\">(</span><span class=\"sy0\">/</span> width <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> anchor<span class=\"sy0\">-</span>y <span class=\"br0\">(</span><span class=\"sy0\">/</span> height <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> angle <span class=\"br0\">(</span>atom <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>PI<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> draw <span class=\"br0\">[</span>#<span class=\"sy0\">^</span>Canvas canvas angle<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>buffer  <span class=\"br0\">(</span><span class=\"sy0\">.</span>getBufferStrategy canvas<span class=\"br0\">)</span><br/>        g       <span class=\"br0\">(</span><span class=\"sy0\">.</span>getDrawGraphics buffer<span class=\"br0\">)</span><br/>        ball<span class=\"sy0\">-</span>x <span class=\"br0\">(</span><span class=\"sy0\">+</span> anchor<span class=\"sy0\">-</span>x <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>sin angle<span class=\"br0\">)</span> length<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        ball<span class=\"sy0\">-</span>y <span class=\"br0\">(</span><span class=\"sy0\">+</span> anchor<span class=\"sy0\">-</span>y <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>cos angle<span class=\"br0\">)</span> length<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">try</span>      <br/>      <span class=\"br0\">(</span><span class=\"kw1\">doto</span> g<br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>setColor Color<span class=\"sy0\">/</span>BLACK<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>fillRect <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> width height<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>setColor Color<span class=\"sy0\">/</span>RED<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>drawLine anchor<span class=\"sy0\">-</span>x anchor<span class=\"sy0\">-</span>y ball<span class=\"sy0\">-</span>x ball<span class=\"sy0\">-</span>y<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>setColor Color<span class=\"sy0\">/</span>YELLOW<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>fillOval <span class=\"br0\">(</span><span class=\"sy0\">-</span> anchor<span class=\"sy0\">-</span>x <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> anchor<span class=\"sy0\">-</span>y <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"nu0\">7</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">.</span>fillOval <span class=\"br0\">(</span><span class=\"sy0\">-</span> ball<span class=\"sy0\">-</span>x <span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> ball<span class=\"sy0\">-</span>y <span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"nu0\">14</span> <span class=\"nu0\">14</span><span class=\"br0\">)</span><span class=\"br0\">)</span>      <br/>      <span class=\"br0\">(</span><span class=\"kw1\">finally</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>dispose g<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if-not</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>contentsLost buffer<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>show buffer<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> start<span class=\"sy0\">-</span>renderer <span class=\"br0\">[</span>canvas<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">fn</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">(</span>draw canvas @angle<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">recur</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>new Thread<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">.</span>start<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> <span class=\"sy0\">-</span>main <span class=\"br0\">[</span><span class=\"sy0\">&amp;</span> args<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>frame  <span class=\"br0\">(</span>JFrame<span class=\"sy0\">.</span> <span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><br/>        canvas <span class=\"br0\">(</span>Canvas<span class=\"sy0\">.</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"br0\">(</span><span class=\"kw1\">doto</span> frame<br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>setSize width height<span class=\"br0\">)</span>      <br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>setDefaultCloseOperation JFrame<span class=\"sy0\">/</span>EXIT_ON_CLOSE<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>setResizable false<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>add canvas<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>setVisible true<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span><span class=\"kw1\">doto</span> canvas<br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>createBufferStrategy <span class=\"nu0\">2</span><span class=\"br0\">)</span>      <br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>setVisible true<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>requestFocus<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span>start<span class=\"sy0\">-</span>renderer canvas<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span><span class=\"kw1\">loop</span> <span class=\"br0\">[</span>v <span class=\"nu0\">0</span><span class=\"br0\">]</span>      <br/>      <span class=\"br0\">(</span>swap<span class=\"sy0\">!</span> angle #<span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> v dt<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>Thread<span class=\"sy0\">/</span>sleep <span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">recur</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> v <span class=\"br0\">(</span><span class=\"sy0\">*</span> k <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>sin @angle<span class=\"br0\">)</span> dt<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"sy0\">-</span>main<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 45, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>defvar *frame-rate* <span class=\"nu0\">30</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>defvar *damping* <span class=\"nu0\">0.99</span> <span class=\"st0\">\"Deceleration factor.\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> make-pendulum <span class=\"br0\">(</span><span class=\"kw1\">length</span> theta0 x<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Returns an anonymous function with enclosed state representing a pendulum.\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>theta <span class=\"br0\">(</span>* <span class=\"br0\">(</span>/ theta0 <span class=\"nu0\">180</span><span class=\"br0\">)</span> pi<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>acceleration <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> <span class=\"kw1\">length</span> <span class=\"nu0\">40</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"kw1\">length</span> <span class=\"nu0\">40</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;;avoid a divide-by-zero</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"co1\">;;Draws the pendulum, updating its location and speed.</span><br/>      <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">draw-line</span> <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">point</span> <span class=\"sy0\">:</span><span class=\"me1\">x</span> x <span class=\"sy0\">:</span><span class=\"me1\">y</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">point</span> <span class=\"sy0\">:</span><span class=\"me1\">x</span> <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* <span class=\"br0\">(</span><span class=\"kw1\">sin</span> theta<span class=\"br0\">)</span> <span class=\"kw1\">length</span><span class=\"br0\">)</span> x<span class=\"br0\">)</span><br/>                                <span class=\"sy0\">:</span><span class=\"me1\">y</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span><span class=\"kw1\">cos</span> theta<span class=\"br0\">)</span> <span class=\"kw1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">draw-filled-circle</span> <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">point</span> <span class=\"sy0\">:</span><span class=\"me1\">x</span> <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* <span class=\"br0\">(</span><span class=\"kw1\">sin</span> theta<span class=\"br0\">)</span> <span class=\"kw1\">length</span><span class=\"br0\">)</span> x<span class=\"br0\">)</span><br/>                                         <span class=\"sy0\">:</span><span class=\"me1\">y</span> <span class=\"br0\">(</span>* <span class=\"br0\">(</span><span class=\"kw1\">cos</span> theta<span class=\"br0\">)</span> <span class=\"kw1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                              <span class=\"nu0\">20</span><br/>                              <span class=\"sy0\">:</span><span class=\"me1\">color</span> sdl<span class=\"sy0\">:</span>*yellow*<br/>                              <span class=\"sy0\">:</span><span class=\"me1\">stroke-color</span> sdl<span class=\"sy0\">:</span>*white*<span class=\"br0\">)</span><br/>      <span class=\"co1\">;;The magic constant approximates the speed we want for a given frame-rate.</span><br/>      <span class=\"br0\">(</span>incf acceleration <span class=\"br0\">(</span>* <span class=\"br0\">(</span><span class=\"kw1\">sin</span> theta<span class=\"br0\">)</span> <span class=\"br0\">(</span>* *frame-rate* -<span class=\"nu0\">0.001</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>incf theta acceleration<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> acceleration <span class=\"br0\">(</span>* acceleration *damping*<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> main <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>w <span class=\"nu0\">640</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>h <span class=\"nu0\">480</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">with-init</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">window</span> w h <span class=\"sy0\">:</span><span class=\"me1\">title-caption</span> <span class=\"st0\">\"Pendulums\"</span><br/>                <span class=\"sy0\">:</span><span class=\"me1\">fps</span> <span class=\"br0\">(</span>make-instance 'sdl<span class=\"sy0\">:</span><span class=\"me1\">fps-fixed</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">frame-rate</span><span class=\"br0\">)</span> *frame-rate*<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>pendulums <span class=\"kw1\">nil</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">with-events</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">quit-event</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> t<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">idle</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">clear-display</span> sdl<span class=\"sy0\">:</span>*black*<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">mapcar</span> #'<span class=\"kw1\">funcall</span> pendulums<span class=\"br0\">)</span> <span class=\"co1\">;;Draw all the pendulums</span><br/>\u00a0<br/>               <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">update-display</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">key-down-event</span> <span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">key</span> key<span class=\"br0\">)</span><br/>                         <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">key</span><span class=\"sy0\">=</span> key <span class=\"sy0\">:</span><span class=\"me1\">sdl-key-escape</span><span class=\"br0\">)</span><br/>                                <span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">push-quit-event</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                               <span class=\"br0\">(</span><span class=\"br0\">(</span>sdl<span class=\"sy0\">:</span><span class=\"me1\">key</span><span class=\"sy0\">=</span> key <span class=\"sy0\">:</span><span class=\"me1\">sdl-key-space</span><span class=\"br0\">)</span><br/>                                <span class=\"br0\">(</span>push <span class=\"br0\">(</span>make-pendulum <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"br0\">(</span>- h <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                                     <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">90</span><span class=\"br0\">)</span><br/>                                                     <span class=\"br0\">(</span>round w <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                      pendulums<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "E", "loc": 88, "block": "<pre class=\"e highlighted_source\"><span class=\"co1\">#!/usr/bin/env rune</span><br/>pragma.<span class=\"me1\">syntax</span><span class=\"br0\">(</span><span class=\"st0\">\"0.9\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> pi <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1.0</span><span class=\"br0\">)</span>.<span class=\"me1\">acos</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> makeEPainter <span class=\"sy0\">:=</span> <span class=\"sy0\">&lt;</span>unsafe<span class=\"sy0\">:</span>com.<span class=\"me1\">zooko</span>.<span class=\"me1\">tray</span>.<span class=\"me1\">makeEPainter</span><span class=\"sy0\">&gt;</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> makeLamportSlot <span class=\"sy0\">:=</span> <span class=\"sy0\">&lt;</span>import<span class=\"sy0\">:</span>org.<span class=\"me1\">erights</span>.<span class=\"me1\">e</span>.<span class=\"me1\">elib</span>.<span class=\"me1\">slot</span>.<span class=\"me1\">makeLamportSlot</span><span class=\"sy0\">&gt;</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> whenever <span class=\"sy0\">:=</span> <span class=\"sy0\">&lt;</span>import<span class=\"sy0\">:</span>org.<span class=\"me1\">erights</span>.<span class=\"me1\">e</span>.<span class=\"me1\">elib</span>.<span class=\"me1\">slot</span>.<span class=\"me1\">whenever</span><span class=\"sy0\">&gt;</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> colors <span class=\"sy0\">:=</span> <span class=\"sy0\">&lt;</span>import<span class=\"sy0\">:</span>java.<span class=\"me1\">awt</span>.<span class=\"me1\">makeColor</span><span class=\"sy0\">&gt;</span><br/>\u00a0<br/><span class=\"co1\"># --------------------------------------------------------------</span><br/><span class=\"co1\"># --- Definitions</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> makePendulumSim<span class=\"br0\">(</span>length_m <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/float64\"><span class=\"kw6\">float64</span></a><span class=\"sy0\">,</span><br/>                    gravity_mps2 <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/float64\"><span class=\"kw6\">float64</span></a><span class=\"sy0\">,</span><br/>                    initialAngle_rad <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/float64\"><span class=\"kw6\">float64</span></a><span class=\"sy0\">,</span><br/>                    timestep_ms <span class=\"sy0\">:</span><a href=\"http://wiki.erights.org/wiki/int\"><span class=\"kw6\">int</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> velocity <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> <span class=\"sy0\">&amp;</span>angle <span class=\"sy0\">:=</span> makeLamportSlot<span class=\"br0\">(</span>initialAngle_rad<span class=\"br0\">)</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> k <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span>gravity_mps2<span class=\"sy0\">/</span>length_m<br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> timestep_s <span class=\"sy0\">:=</span> timestep_ms <span class=\"sy0\">/</span> <span class=\"nu0\">1000</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> clock <span class=\"sy0\">:=</span> <a href=\"http://wiki.erights.org/wiki/timer\"><span class=\"kw7\">timer</span></a>.<span class=\"me1\">every</span><span class=\"br0\">(</span>timestep_ms<span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> _ <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> acceleration <span class=\"sy0\">:=</span> k <span class=\"sy0\">*</span> angle.<span class=\"me1\">sin</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    velocity <span class=\"sy0\">+=</span> acceleration <span class=\"sy0\">*</span> timestep_s<br/>    angle    <span class=\"sy0\">+=</span> velocity     <span class=\"sy0\">*</span> timestep_s<br/>  <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  return <span class=\"br0\">[</span>clock<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>angle<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> makeDisplayComponent<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>angle<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> c<br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> updater <span class=\"sy0\">:=</span> whenever<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">&amp;</span>angle<span class=\"br0\">]</span><span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> <span class=\"br0\">{</span> c.<span class=\"me1\">repaint</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://wiki.erights.org/wiki/bind\"><span class=\"kw4\">bind</span></a> c <span class=\"sy0\">:=</span> makeEPainter<span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> paintCallback <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> paintComponent<span class=\"br0\">(</span>g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://wiki.erights.org/wiki/try\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> originX <span class=\"sy0\">:=</span> c.<span class=\"me1\">getWidth</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">//</span> <span class=\"nu0\">2</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> originY <span class=\"sy0\">:=</span> c.<span class=\"me1\">getHeight</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">//</span> <span class=\"nu0\">2</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> pendRadius <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>originX.<span class=\"me1\">min</span><span class=\"br0\">(</span>originY<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.95</span><span class=\"br0\">)</span>.<span class=\"me1\">round</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> ballRadius <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>originX.<span class=\"me1\">min</span><span class=\"br0\">(</span>originY<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.04</span><span class=\"br0\">)</span>.<span class=\"me1\">round</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> ballX <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>originX <span class=\"sy0\">+</span> angle.<span class=\"me1\">sin</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> pendRadius<span class=\"br0\">)</span>.<span class=\"me1\">round</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> ballY <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>originY <span class=\"sy0\">+</span> angle.<span class=\"me1\">cos</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> pendRadius<span class=\"br0\">)</span>.<span class=\"me1\">round</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>colors.<span class=\"me1\">getWhite</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        g.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> c.<span class=\"me1\">getWidth</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> c.<span class=\"me1\">getHeight</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>colors.<span class=\"me1\">getBlack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>originX <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> originY <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>        g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>originX<span class=\"sy0\">,</span> originY<span class=\"sy0\">,</span> ballX<span class=\"sy0\">,</span> ballY<span class=\"br0\">)</span><br/>        g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>ballX <span class=\"sy0\">-</span> ballRadius<span class=\"sy0\">,</span> ballY <span class=\"sy0\">-</span> ballRadius<span class=\"sy0\">,</span> ballRadius <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> ballRadius <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>        updater<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"co1\"># provoke interest provided that we did get drawn (window not closed)</span><br/>      <span class=\"br0\">}</span> <a href=\"http://wiki.erights.org/wiki/catch\"><span class=\"kw2\">catch</span></a> p <span class=\"br0\">{</span><br/>        <a href=\"http://wiki.erights.org/wiki/stderr\"><span class=\"kw7\">stderr</span></a>.<a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`In paint callback: $p${p.eStack()}`</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>  c.<span class=\"me1\">setPreferredSize</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;</span>awt<span class=\"sy0\">:</span>makeDimension<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">,</span> <span class=\"nu0\">300</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  return c<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># --------------------------------------------------------------</span><br/><span class=\"co1\"># --- Application setup</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> <span class=\"br0\">[</span>clock<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>angle<span class=\"br0\">]</span> <span class=\"sy0\">:=</span> makePendulumSim<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">9.80665</span><span class=\"sy0\">,</span> pi<span class=\"sy0\">*</span><span class=\"nu0\">99</span><span class=\"sy0\">/</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\"># Initialize AWT, move to AWT event thread</span><br/>when <span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/currentVat\"><span class=\"kw7\">currentVat</span></a>.<span class=\"me1\">morphInto</span><span class=\"br0\">(</span><span class=\"st0\">\"awt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"co1\"># Create the window</span><br/>  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> frame <span class=\"sy0\">:=</span> <span class=\"sy0\">&lt;</span>unsafe<span class=\"sy0\">:</span>javax.<span class=\"me1\">swing</span>.<span class=\"me1\">makeJFrame</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><br/>  frame.<span class=\"me1\">setContentPane</span><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> display <span class=\"sy0\">:=</span> makeDisplayComponent<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>angle<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  frame.<span class=\"me1\">addWindowListener</span><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> mainWindowListener <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/to\"><span class=\"kw5\">to</span></a> windowClosing<span class=\"br0\">(</span>_<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      clock.<span class=\"me1\">stop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <a href=\"http://wiki.erights.org/wiki/interp\"><span class=\"kw7\">interp</span></a>.<span class=\"me1\">continueAtTop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> _ <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  frame.<span class=\"me1\">setLocation</span><span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span><br/>  frame.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\"># Start and become visible</span><br/>  frame.<span class=\"me1\">show</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  clock.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/interp\"><span class=\"kw7\">interp</span></a>.<span class=\"me1\">blockAtTop</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Elm", "loc": 73, "block": "<pre class=\"text highlighted_source\">import Color exposing (..)<br/>import Collage exposing (..)<br/>import Element exposing (..)<br/>import Html exposing (..)<br/>import Time exposing (..)<br/>import Html.App exposing (program)<br/>\u00a0<br/>dt = 0.01<br/>scale = 100<br/>\u00a0<br/>type alias Model =<br/>  { angle\u00a0: Float<br/>  , angVel\u00a0: Float<br/>  , length\u00a0: Float<br/>  , gravity\u00a0: Float<br/>  }<br/>\u00a0<br/>type Msg <br/>    = Tick Time<br/>\u00a0<br/>init\u00a0: (Model,Cmd Msg)<br/>init =<br/>  ( { angle = 3 * pi / 4<br/>    , angVel = 0.0<br/>    , length = 2<br/>    , gravity = -9.81<br/>    }<br/>  , Cmd.none)<br/>\u00a0<br/>update\u00a0: Msg -&gt; Model -&gt; (Model, Cmd Msg)<br/>update _ model =<br/>  let<br/>    angAcc = -1.0 * (model.gravity / model.length) * sin (model.angle)<br/>    angVel' = model.angVel + angAcc * dt<br/>    angle' = model.angle + angVel' * dt<br/>  in<br/>    ( { model<br/>        | angle = angle'<br/>        , angVel = angVel'<br/>      }<br/>    , Cmd.none )<br/>\u00a0<br/>view\u00a0: Model -&gt; Html Msg<br/>view model =<br/>  let<br/>    endPoint = ( 0, scale * model.length )<br/>    pendulum =<br/>      group<br/>        [ segment ( 0, 0 ) endPoint<br/>            |&gt; traced { defaultLine | width = 2, color = red }<br/>        , circle 8<br/>            |&gt; filled blue<br/>        , ngon 3 10<br/>            |&gt; filled green<br/>            |&gt; rotate (pi/2)<br/>            |&gt; move endPoint<br/>        ]<br/>  in<br/>    toHtml &lt;|<br/>      collage 700 500<br/>        [ pendulum |&gt; rotate model.angle ]<br/>\u00a0<br/>subscriptions\u00a0: Model -&gt; Sub Msg<br/>subscriptions _ = <br/>    Time.every (dt * second) Tick<br/>\u00a0<br/>main =<br/>  program <br/>      { init = init<br/>      , view = view<br/>      , update = update<br/>      , subscriptions = subscriptions<br/>      }</pre>"}, {"lang": "ERRE", "loc": 37, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>PROGRAM PENDULUM<br/>\u00a0<br/>!<br/>! for rosettacode.org<br/>!<br/>\u00a0<br/>!$KEY<br/>\u00a0<br/>!$INCLUDE=\"PC.LIB\"<br/>\u00a0<br/>PROCEDURE PENDULUM(A,L)<br/>      PIVOTX=320<br/>      PIVOTY=0<br/>      BOBX=PIVOTX+L*500*SIN(a)<br/>      BOBY=PIVOTY+L*500*COS(a)<br/>      LINE(PIVOTX,PIVOTY,BOBX,BOBY,6,FALSE)<br/>      CIRCLE(BOBX+24*SIN(A),BOBY+24*COS(A),27,11)<br/>      PAUSE(0.01)<br/>      LINE(PIVOTX,PIVOTY,BOBX,BOBY,0,FALSE)<br/>      CIRCLE(BOBX+24*SIN(A),BOBY+24*COS(A),27,0)<br/>END PROCEDURE<br/>\u00a0<br/>BEGIN<br/>      SCREEN(9)<br/>      THETA=40*p/180    \u00a0! initial displacement<br/>      G=9.81            \u00a0! acceleration due to gravity<br/>      L=0.5             \u00a0! length of pendulum in metres<br/>      LINE(0,0,639,0,5,FALSE)<br/>      LOOP<br/>        PENDULUM(THETA,L)<br/>        ACCEL=-G*SIN(THETA)/L/100<br/>        SPEED=SPEED+ACCEL/100<br/>        THETA=THETA+SPEED<br/>      END LOOP<br/>END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 57, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">include</span> graphics.e<br/><span class=\"kw1\">include</span> misc.e<br/>\u00a0<br/><span class=\"kw1\">constant</span> dt <span class=\"sy1\">=</span> 1E<span class=\"sy1\">-</span>3<br/><span class=\"kw1\">constant</span> g <span class=\"sy1\">=</span> <span class=\"nu0\">50</span><br/>\u00a0<br/><span class=\"kw2\">sequence</span> vc<br/><span class=\"kw2\">sequence</span> suspension<br/><span class=\"kw2\">atom</span> len<br/>\u00a0<br/><span class=\"kw1\">procedure</span> draw_pendulum<span class=\"br0\">(</span><span class=\"kw2\">atom</span> color<span class=\"sy2\">,</span> <span class=\"kw2\">atom</span> len<span class=\"sy2\">,</span> <span class=\"kw2\">atom</span> alfa<span class=\"br0\">)</span><br/>    <span class=\"kw2\">sequence</span> point<br/>    point <span class=\"sy1\">=</span> <span class=\"br0\">(</span>len<span class=\"sy1\">*</span><span class=\"br0\">{</span><span class=\"kw2\">sin</span><span class=\"br0\">(</span>alfa<span class=\"br0\">)</span><span class=\"sy2\">,</span><span class=\"kw2\">cos</span><span class=\"br0\">(</span>alfa<span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"sy1\">+</span> suspension<span class=\"br0\">)</span><br/>    draw_line<span class=\"br0\">(</span>color<span class=\"sy2\">,</span> <span class=\"br0\">{</span>suspension<span class=\"sy2\">,</span> point<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    ellipse<span class=\"br0\">(</span>color<span class=\"sy2\">,</span><span class=\"nu0\">0</span><span class=\"sy2\">,</span>point<span class=\"sy1\">-</span><span class=\"br0\">{</span><span class=\"nu0\">10</span><span class=\"sy2\">,</span><span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy2\">,</span>point<span class=\"sy1\">+</span><span class=\"br0\">{</span><span class=\"nu0\">10</span><span class=\"sy2\">,</span><span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">procedure</span><br/>\u00a0<br/><span class=\"kw1\">function</span> wait<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">atom</span> t0<br/>    t0 <span class=\"sy1\">=</span> <span class=\"kw2\">time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> <span class=\"kw2\">time</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> t0 <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">get_key</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\u00a0!<span class=\"sy1\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">while</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> animation<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">atom</span> alfa<span class=\"sy2\">,</span> omega<span class=\"sy2\">,</span> epsilon<br/>\u00a0<br/>    <span class=\"kw1\">if</span> graphics_mode<span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    vc <span class=\"sy1\">=</span> video_config<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    suspension <span class=\"sy1\">=</span> <span class=\"br0\">{</span>vc<span class=\"br0\">[</span>VC_XPIXELS<span class=\"br0\">]</span><span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy2\">,</span>vc<span class=\"br0\">[</span>VC_YPIXELS<span class=\"br0\">]</span><span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><br/>    len <span class=\"sy1\">=</span> vc<span class=\"br0\">[</span>VC_YPIXELS<span class=\"br0\">]</span><span class=\"sy1\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">-</span><span class=\"nu0\">20</span><br/>\u00a0<br/>    alfa <span class=\"sy1\">=</span> PI<span class=\"sy1\">/</span><span class=\"nu0\">2</span><br/>    omega <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>        draw_pendulum<span class=\"br0\">(</span>BRIGHT_WHITE<span class=\"sy2\">,</span>len<span class=\"sy2\">,</span>alfa<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> wait<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">exit</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        draw_pendulum<span class=\"br0\">(</span>BLACK<span class=\"sy2\">,</span>len<span class=\"sy2\">,</span>alfa<span class=\"br0\">)</span><br/>        epsilon <span class=\"sy1\">=</span> <span class=\"sy1\">-</span>len<span class=\"sy1\">*</span><span class=\"kw2\">sin</span><span class=\"br0\">(</span>alfa<span class=\"br0\">)</span><span class=\"sy1\">*</span>g<br/>        omega <span class=\"sy1\">+=</span> dt<span class=\"sy1\">*</span>epsilon<br/>        alfa <span class=\"sy1\">+=</span> dt<span class=\"sy1\">*</span>omega<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">while</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> graphics_mode<span class=\"br0\">(</span><span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">procedure</span><br/>\u00a0<br/>animation<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Euler Math Toolbox", "loc": 1, "block": "<pre>&gt;g=gearth$; l=1m;\n&gt;function f(x,y)\u00a0:= [y[2],-g*sin(y[1])/l]\n&gt;function h(a)\u00a0:= ode(\"f\",linspace(0,a,100),[0,2])[1,-1]\n&gt;period=solve(\"h\",2)\n 2.06071780729\n&gt;t=linspace(0,period,30); s=ode(\"f\",t,[0,2])[1];\n&gt;function anim (t,s) ...\n$  setplot(-1,1,-1,1);\n$  markerstyle(\"o#\");\n$  repeat\n$  for i=1 to cols(t)-1;\n$    clg; \n$    hold on;\n$    plot([0,sin(s[i])],[1,1-cos(s[i])]);\n$    mark([0,sin(s[i])],[1,1-cos(s[i])]);\n$    hold off;\n$    wait(t[i+1]-t[i]);\n$  end;\n$  until testkey();\n$  end\n$endfunction\n&gt;anim(t,s);\n&gt;\n</pre>"}, {"lang": "FBSL", "loc": 57, "block": "<pre class=\"qbasic highlighted_source\">#INCLUDE <span class=\"sy0\">&lt;</span>Include\\Windows.inc<span class=\"sy0\">&gt;</span><br/>\u00a0<br/>FBSLSETTEXT<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> <span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><br/>FBSL.SETTIMER<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> <span class=\"nu0\">1000</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>RESIZE<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">300</span><span class=\"sy0\">,</span> <span class=\"nu0\">200</span><span class=\"br0\">)</span><br/>CENTER<span class=\"br0\">(</span>ME<span class=\"br0\">)</span><br/>SHOW<span class=\"br0\">(</span>ME<span class=\"br0\">)</span><br/>\u00a0<br/>BEGIN EVENTS<br/>\t<span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span> CBMSG<br/>\t\t<span class=\"kw1\">CASE</span> WM_TIMER<br/>\t\t\t<span class=\"co1\">' Request redraw</span><br/>\t\t\tInvalidateRect<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> NULL<span class=\"sy0\">,</span> FALSE<span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw1\">RETURN</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"kw1\">CASE</span> WM_PAINT<br/>\t\t\tSwing<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">CASE</span> WM_CLOSE<br/>\t\t\tFBSL.KILLTIMER<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SELECT</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> EVENTS<br/>\u00a0<br/><span class=\"kw1\">SUB</span> Swing<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qcktype.shtml\"><span class=\"kw3\">TYPE</span></a> RECT:\u00a0%rcLeft<span class=\"sy0\">,</span>\u00a0%rcTop<span class=\"sy0\">,</span>\u00a0%rcRight<span class=\"sy0\">,</span>\u00a0%rcBottom: <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcktype.shtml\"><span class=\"kw3\">TYPE</span></a><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckstatic.shtml\"><span class=\"kw3\">STATIC</span></a> rc <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> RECT<span class=\"sy0\">,</span>\u00a0!!acceleration<span class=\"sy0\">,</span>\u00a0!!velocity<span class=\"sy0\">,</span>\u00a0!!angle <span class=\"sy0\">=</span> M_PI_2<span class=\"sy0\">,</span>\u00a0%pendulum <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>\u00a0<br/>\tGetClientRect<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> @rc<span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"co1\">' Recalculate</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> headX <span class=\"sy0\">=</span> rc.rcRight <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> headY <span class=\"sy0\">=</span> rc.rcBottom <span class=\"sy0\">/</span> <span class=\"nu0\">4</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> tailX <span class=\"sy0\">=</span> headX <span class=\"sy0\">+</span> <a href=\"http://www.qbasicnews.com/qboho/qcksin.shtml\"><span class=\"kw3\">SIN</span></a><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> pendulum<br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> tailY <span class=\"sy0\">=</span> headY <span class=\"sy0\">+</span> <a href=\"http://www.qbasicnews.com/qboho/qckcos.shtml\"><span class=\"kw3\">COS</span></a><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> pendulum<br/>\u00a0<br/>\tacceleration <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">9.81</span> <span class=\"sy0\">/</span> pendulum <span class=\"sy0\">*</span> <a href=\"http://www.qbasicnews.com/qboho/qcksin.shtml\"><span class=\"kw3\">SIN</span></a><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><br/>\tINCR<span class=\"br0\">(</span>velocity<span class=\"sy0\">,</span> acceleration <span class=\"sy0\">*</span> <span class=\"nu0\">0.1</span><span class=\"br0\">)</span><span class=\"br0\">(</span>angle<span class=\"sy0\">,</span> velocity <span class=\"sy0\">*</span> <span class=\"nu0\">0.1</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"co1\">' Create backbuffer</span><br/>\tCreateCompatibleDC<span class=\"br0\">(</span>GetDC<span class=\"br0\">(</span>ME<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\tSelectObject<span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> CreateCompatibleBitmap<span class=\"br0\">(</span>GetDC<span class=\"sy0\">,</span> rc.rcRight<span class=\"sy0\">,</span> rc.rcBottom<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"co1\">' Draw to backbuffer</span><br/>\tFILLSTYLE<span class=\"br0\">(</span>FILL_SOLID<span class=\"br0\">)</span>: FILLCOLOR<span class=\"br0\">(</span>RGB<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a><span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> rc.rcRight<span class=\"sy0\">,</span> rc.rcBottom<span class=\"sy0\">,</span> GetSysColor<span class=\"br0\">(</span>COLOR_BTNHILIGHT<span class=\"br0\">)</span><span class=\"sy0\">,</span> TRUE<span class=\"sy0\">,</span> TRUE<span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a><span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> headY<span class=\"sy0\">,</span> rc.rcRight<span class=\"sy0\">,</span> headY<span class=\"sy0\">,</span> GetSysColor<span class=\"br0\">(</span>COLOR_3DSHADOW<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\tDRAWWIDTH<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a><span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> headX<span class=\"sy0\">,</span> headY<span class=\"sy0\">,</span> tailX<span class=\"sy0\">,</span> tailY<span class=\"sy0\">,</span> RGB<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\tDRAWWIDTH<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckcircle.shtml\"><span class=\"kw3\">CIRCLE</span></a><span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> headX<span class=\"sy0\">,</span> headY<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> GetSysColor<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">360</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> TRUE<span class=\"br0\">)</span><br/>\t<a href=\"http://www.qbasicnews.com/qboho/qckcircle.shtml\"><span class=\"kw3\">CIRCLE</span></a><span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> tailX<span class=\"sy0\">,</span> tailY<span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> GetSysColor<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">360</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> FALSE<span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"co1\">' Blit to window</span><br/>\tBitBlt<span class=\"br0\">(</span>GetDC<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> rc.rcRight<span class=\"sy0\">,</span> rc.rcBottom<span class=\"sy0\">,</span> CreateCompatibleDC<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> SRCCOPY<span class=\"br0\">)</span><br/>\tReleaseDC<span class=\"br0\">(</span>ME<span class=\"sy0\">,</span> GetDC<span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"co1\">' Delete backbuffer\t</span><br/>\tDeleteObject<span class=\"br0\">(</span>SelectObject<span class=\"br0\">(</span>CreateCompatibleDC<span class=\"sy0\">,</span> SelectObject<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\tDeleteDC<span class=\"br0\">(</span>CreateCompatibleDC<span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span></pre>"}, {"lang": "Factor", "loc": 41, "block": "<pre class=\"text highlighted_source\">USING: accessors alarms arrays calendar colors.constants kernel<br/>locals math math.constants math.functions math.rectangles<br/>math.vectors opengl sequences system ui ui.gadgets ui.render\u00a0;<br/>IN: pendulum<br/>\u00a0<br/>CONSTANT: g 9.81<br/>CONSTANT: l 20<br/>CONSTANT: theta0 0.5<br/>\u00a0<br/>: current-time ( -- time ) nano-count -9 10^ *\u00a0;<br/>\u00a0<br/>: T0 ( -- T0 ) 2 pi l g / sqrt * *\u00a0;<br/>: omega0 ( -- omega0 ) 2 pi * T0 /\u00a0;<br/>: theta ( -- theta ) current-time omega0 * cos theta0 *\u00a0;<br/>\u00a0<br/>: relative-xy ( theta l -- xy ) <br/>    swap [ sin * ] [ cos * ] 2bi 2array\u00a0;<br/>: theta-to-xy ( origin theta l -- xy ) relative-xy v+\u00a0;<br/>\u00a0<br/>TUPLE: pendulum-gadget &lt; gadget alarm\u00a0;<br/>\u00a0<br/>: O ( gadget -- origin ) rect-bounds [ drop ] [ first 2 / ] bi* 0 2array\u00a0;<br/>: window-l ( gadget -- l ) rect-bounds [ drop ] [ second ] bi*\u00a0;<br/>: gadget-xy ( gadget -- xy ) [ O ] [ drop theta ] [ window-l ] tri theta-to-xy\u00a0;<br/>\u00a0<br/>M: pendulum-gadget draw-gadget* <br/>    COLOR: black gl-color<br/>    [ O ] [ gadget-xy ] bi gl-line\u00a0;<br/>\u00a0<br/>M:: pendulum-gadget graft* ( gadget -- )<br/>    [ gadget relayout-1 ]<br/>    20 milliseconds every gadget (&gt;&gt;alarm)\u00a0;<br/>M: pendulum-gadget ungraft* alarm&gt;&gt; cancel-alarm\u00a0;<br/>\u00a0<br/>: &lt;pendulum-gadget&gt; ( -- gadget ) <br/>    pendulum-gadget new <br/>    { 500 500 } &gt;&gt;pref-dim\u00a0;<br/>: pendulum-main ( -- )<br/>    [ &lt;pendulum-gadget&gt; \"pendulum\" open-window ] with-ui\u00a0;<br/>MAIN: pendulum-main<br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 76, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/><span class=\"co1\">!Implemented by Anant Dixit (October, 2014)</span><br/><span class=\"kw1\">program</span> animated_pendulum<br/><span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/><span class=\"kw3\">double</span> <span class=\"kw4\">precision</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">pi</span> <span class=\"sy0\">=</span> 4.0D0<span class=\"sy0\">*</span><span class=\"kw4\">atan</span><span class=\"br0\">(</span>1.0D0<span class=\"br0\">)</span>, l <span class=\"sy0\">=</span> 1.0D<span class=\"sy0\">-</span><span class=\"nu0\">1</span>, dt <span class=\"sy0\">=</span> 1.0D<span class=\"sy0\">-</span><span class=\"nu0\">2</span>, g <span class=\"sy0\">=</span> 9.8D0<br/><span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">io</span><br/><span class=\"kw3\">double</span> <span class=\"kw4\">precision</span> <span class=\"sy0\">::</span> <span class=\"me2\">s_ang</span>, c_ang, p_ang, n_ang<br/>\u00a0<br/>write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">'Enter starting angle (in degrees):'</span><br/><span class=\"kw1\">do</span><br/>  read<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span>,<span class=\"kw1\">iostat</span><span class=\"sy0\">=</span>io<span class=\"br0\">)</span> s_ang<br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span>io.<span class=\"me1\">ne</span>.0 <span class=\"kw2\">.<span class=\"me1\">or</span>.</span> s_ang.<span class=\"me1\">lt</span>.<span class=\"sy0\">-</span>90.0D0 <span class=\"kw2\">.<span class=\"me1\">or</span>.</span> s_ang.<span class=\"me1\">gt</span>.90.0D0<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">'Please enter an angle between 90 and -90 degrees:'</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw1\">exit</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/><span class=\"co1\">call execute_command_line('cls')</span><br/>\u00a0<br/><span class=\"co1\">c_ang = s_ang*pi/180.0D0</span><br/>p_ang <span class=\"sy0\">=</span> c_ang<br/>\u00a0<br/><span class=\"co1\">call display(c_ang)</span><br/><span class=\"kw1\">do</span><br/>  <span class=\"kw1\">call</span> next_time_step<span class=\"br0\">(</span>c_ang,p_ang,g,l,dt,n_ang<span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw4\">abs</span><span class=\"br0\">(</span>c_ang<span class=\"sy0\">-</span>p_ang<span class=\"br0\">)</span>.<span class=\"me1\">ge</span>.0.05D0<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">call</span> execute_command_line<span class=\"br0\">(</span><span class=\"st0\">'cls'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">call</span> display<span class=\"br0\">(</span>c_ang<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span><br/>\u00a0<br/><span class=\"kw1\">subroutine</span> next_time_step<span class=\"br0\">(</span>c_ang,p_ang,g,l,dt,n_ang<span class=\"br0\">)</span><br/><span class=\"kw3\">double</span> <span class=\"kw4\">precision</span> <span class=\"sy0\">::</span> <span class=\"me2\">c_ang</span>, p_ang, g, l, dt, n_ang<br/>n_ang <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>g<span class=\"sy0\">*</span><span class=\"kw4\">sin</span><span class=\"br0\">(</span>c_ang<span class=\"br0\">)</span><span class=\"sy0\">/</span>l<span class=\"br0\">)</span><span class=\"sy0\">*</span>2.0D0<span class=\"sy0\">*</span>dt<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> 2.0D0<span class=\"sy0\">*</span>c_ang <span class=\"sy0\">-</span> p_ang<br/>p_ang <span class=\"sy0\">=</span> c_ang<br/><span class=\"co1\">c_ang = n_ang</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span><br/>\u00a0<br/><span class=\"kw1\">subroutine</span> display<span class=\"br0\">(</span>c_ang<span class=\"br0\">)</span><br/><span class=\"kw3\">double</span> <span class=\"kw4\">precision</span> <span class=\"sy0\">::</span> <span class=\"me2\">c_ang</span><br/><span class=\"co1\">character (len=*), parameter\u00a0:: cfmt = '(A1)'</span><br/><span class=\"kw3\">double</span> <span class=\"kw4\">precision</span> <span class=\"sy0\">::</span> <span class=\"me2\">rx</span>, ry<br/><span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span>, y, i, j<br/>rx <span class=\"sy0\">=</span> 45.0D0<span class=\"sy0\">*</span><span class=\"kw4\">sin</span><span class=\"br0\">(</span>c_ang<span class=\"br0\">)</span><br/>ry <span class=\"sy0\">=</span> 22.5D0<span class=\"sy0\">*</span><span class=\"kw4\">cos</span><span class=\"br0\">(</span>c_ang<span class=\"br0\">)</span><br/>x <span class=\"sy0\">=</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span>rx<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">51</span><br/>y <span class=\"sy0\">=</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span>ry<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">2</span><br/><span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">32</span><br/>  <span class=\"kw1\">do</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">100</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"me1\">y</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> j.<span class=\"me1\">eq</span>.<span class=\"me1\">x</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'O'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"me1\">y</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> <span class=\"br0\">(</span>j.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">or</span>.<span class=\"me1\">j</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'G'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>j.<span class=\"me1\">eq</span>.<span class=\"me1\">x</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> <span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">or</span>.<span class=\"me1\">i</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'G'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"me1\">y</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> <span class=\"br0\">(</span>j.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">or</span>.<span class=\"me1\">j</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'#'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>j.<span class=\"me1\">eq</span>.<span class=\"me1\">x</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> <span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">or</span>.<span class=\"me1\">i</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'G'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">and</span>.<span class=\"me1\">j</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">.<span class=\"me1\">or</span>.</span> <span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">and</span>.<span class=\"me1\">j</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'#'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">and</span>.<span class=\"me1\">j</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">.<span class=\"me1\">or</span>.</span> <span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">and</span>.<span class=\"me1\">j</span>.<span class=\"me1\">eq</span>.<span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'#'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>j.<span class=\"me1\">eq</span>.50<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'|'</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i.<span class=\"me1\">eq</span>.2<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">'-'</span><br/>    <span class=\"kw1\">else</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,cfmt,<span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">'no'</span><span class=\"br0\">)</span> <span class=\"st0\">' '</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span><br/>\u00a0</pre>"}, {"lang": "F#", "loc": 82, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Drawing</span><br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Windows</span>.<span class=\"me1\">Forms</span><br/>\u00a0<br/><span class=\"co1\">// define units of measurement</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Measure<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span> <span class=\"kw1\">type</span> m<span class=\"sy0\">;</span>  <span class=\"co1\">// metres</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Measure<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span> <span class=\"kw1\">type</span> s<span class=\"sy0\">;</span>  <span class=\"co1\">// seconds</span><br/>\u00a0<br/><span class=\"co1\">// a pendulum is represented as a record of physical quantities</span><br/><span class=\"kw1\">type</span> Pendulum <span class=\"sy0\">=</span><br/> <span class=\"br0\">{</span> length  \u00a0: <span class=\"kw4\">float</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">&gt;</span><br/>   gravity \u00a0: <span class=\"kw4\">float</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">/</span>s^<span class=\"nu0\">2</span><span class=\"sy0\">&gt;</span><br/>   velocity\u00a0: <span class=\"kw4\">float</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">/</span>s<span class=\"sy0\">&gt;</span><br/>   angle   \u00a0: <span class=\"kw4\">float</span><br/> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// calculate the next state of a pendulum</span><br/><span class=\"kw1\">let</span> next pendulum deltaT\u00a0: Pendulum <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> k <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>pendulum.<span class=\"me1\">gravity</span> <span class=\"sy0\">/</span> pendulum.<span class=\"me1\">length</span><br/>  <span class=\"kw1\">let</span> acceleration <span class=\"sy0\">=</span> k <span class=\"sy0\">*</span> Math.<span class=\"me1\">Sin</span> pendulum.<span class=\"me1\">angle</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">&gt;</span> <br/>  <span class=\"kw1\">let</span> newVelocity <span class=\"sy0\">=</span> pendulum.<span class=\"me1\">velocity</span> <span class=\"sy0\">+</span> acceleration <span class=\"sy0\">*</span> deltaT<br/>  <span class=\"kw1\">let</span> newAngle <span class=\"sy0\">=</span> pendulum.<span class=\"me1\">angle</span> <span class=\"sy0\">+</span> newVelocity <span class=\"sy0\">*</span> deltaT <span class=\"sy0\">/</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">&gt;</span><br/>  <span class=\"br0\">{</span> pendulum <span class=\"kw1\">with</span> velocity <span class=\"sy0\">=</span> newVelocity<span class=\"sy0\">;</span> angle <span class=\"sy0\">=</span> newAngle <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// paint a pendulum (using hard-coded screen coordinates)</span><br/><span class=\"kw1\">let</span> paint pendulum <span class=\"br0\">(</span>gr: System.<span class=\"me1\">Drawing</span>.<span class=\"me1\">Graphics</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> homeX <span class=\"sy0\">=</span> <span class=\"nu0\">160</span><br/>  <span class=\"kw1\">let</span> homeY <span class=\"sy0\">=</span> <span class=\"nu0\">50</span><br/>  <span class=\"kw1\">let</span> length <span class=\"sy0\">=</span> <span class=\"nu0\">140.0</span><br/>  <span class=\"co1\">// draw plate</span><br/>  gr.<span class=\"me1\">DrawLine</span><span class=\"br0\">(</span> <span class=\"kw1\">new</span> Pen<span class=\"br0\">(</span>Brushes.<span class=\"me1\">Gray</span>, width<span class=\"sy0\">=</span>2.0f<span class=\"br0\">)</span>, <span class=\"nu0\">0</span>, homeY, <span class=\"nu0\">320</span>, homeY <span class=\"br0\">)</span><br/>  <span class=\"co1\">// draw pivot</span><br/>  gr.<span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span> Brushes.<span class=\"me1\">Gray</span>,           homeX<span class=\"sy0\">-</span><span class=\"nu0\">5</span>, homeY<span class=\"sy0\">-</span><span class=\"nu0\">5</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">10</span> <span class=\"br0\">)</span><br/>  gr.<span class=\"me1\">DrawEllipse</span><span class=\"br0\">(</span> <span class=\"kw1\">new</span> Pen<span class=\"br0\">(</span>Brushes.<span class=\"me1\">Black</span><span class=\"br0\">)</span>, homeX<span class=\"sy0\">-</span><span class=\"nu0\">5</span>, homeY<span class=\"sy0\">-</span><span class=\"nu0\">5</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">10</span> <span class=\"br0\">)</span><br/>  <span class=\"co1\">// draw the pendulum itself</span><br/>  <span class=\"kw1\">let</span> x <span class=\"sy0\">=</span> homeX <span class=\"sy0\">+</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span> length <span class=\"sy0\">*</span> Math.<span class=\"me1\">Sin</span> pendulum.<span class=\"me1\">angle</span> <span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> y <span class=\"sy0\">=</span> homeY <span class=\"sy0\">+</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span> length <span class=\"sy0\">*</span> Math.<span class=\"me1\">Cos</span> pendulum.<span class=\"me1\">angle</span> <span class=\"br0\">)</span><br/>  <span class=\"co1\">// draw rod</span><br/>  gr.<span class=\"me1\">DrawLine</span><span class=\"br0\">(</span> <span class=\"kw1\">new</span> Pen<span class=\"br0\">(</span>Brushes.<span class=\"me1\">Black</span>, width<span class=\"sy0\">=</span>3.0f<span class=\"br0\">)</span>, homeX, homeY, x, y <span class=\"br0\">)</span><br/>  <span class=\"co1\">// draw bob</span><br/>  gr.<span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span> Brushes.<span class=\"me1\">Yellow</span>,         x<span class=\"sy0\">-</span><span class=\"nu0\">15</span>, y<span class=\"sy0\">-</span><span class=\"nu0\">15</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">30</span> <span class=\"br0\">)</span><br/>  gr.<span class=\"me1\">DrawEllipse</span><span class=\"br0\">(</span> <span class=\"kw1\">new</span> Pen<span class=\"br0\">(</span>Brushes.<span class=\"me1\">Black</span><span class=\"br0\">)</span>, x<span class=\"sy0\">-</span><span class=\"nu0\">15</span>, y<span class=\"sy0\">-</span><span class=\"nu0\">15</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">30</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">// defines an operator \"-?\" that calculates the time from t2 to t1  </span><br/><span class=\"co1\">// where t2 is optional</span><br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>?<span class=\"br0\">)</span> <span class=\"br0\">(</span>t1: DateTime<span class=\"br0\">)</span> <span class=\"br0\">(</span>t2: DateTime <span class=\"kw4\">option</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw4\">float</span><span class=\"sy0\">&lt;</span>s<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">match</span> t2 <span class=\"kw1\">with</span><br/>  | None   <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">&lt;</span>s<span class=\"sy0\">&gt;</span> <span class=\"co1\">// only one timepoint given -&gt; difference is 0</span><br/>  | Some t <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span>t1 <span class=\"sy0\">-</span> t<span class=\"br0\">)</span>.<span class=\"me1\">TotalSeconds</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">&lt;</span>s<span class=\"sy0\">&gt;</span><br/>\u00a0<br/><span class=\"co1\">// our main window is double-buffered form that reacts to paint events</span><br/><span class=\"kw1\">type</span> PendulumForm<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> self <span class=\"sy0\">=</span> <br/>  <span class=\"kw1\">inherit</span> Form<span class=\"br0\">(</span>Width<span class=\"sy0\">=</span><span class=\"nu0\">325</span>, Height<span class=\"sy0\">=</span><span class=\"nu0\">240</span>, Text<span class=\"sy0\">=</span><span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">mutable</span> pendulum <span class=\"sy0\">=</span> <span class=\"br0\">{</span> length   <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">&gt;;</span><br/>                           gravity  <span class=\"sy0\">=</span> <span class=\"nu0\">9.81</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">/</span>s^<span class=\"nu0\">2</span><span class=\"sy0\">&gt;</span><br/>                           velocity <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">&lt;</span>m<span class=\"sy0\">/</span>s<span class=\"sy0\">&gt;</span><br/>                           angle    <span class=\"sy0\">=</span> Math.<span class=\"me1\">PI</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span><br/>                         <span class=\"br0\">}</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">mutable</span> lastPaintedAt <span class=\"sy0\">=</span> None<br/>  <span class=\"kw1\">let</span> updateFreq <span class=\"sy0\">=</span> <span class=\"nu0\">0.01</span><span class=\"sy0\">&lt;</span>s<span class=\"sy0\">&gt;</span><br/>\u00a0<br/>  <span class=\"kw1\">do</span> self.<span class=\"me1\">DoubleBuffered</span> <span class=\"sy0\">&lt;-</span> <span class=\"kw1\">true</span><br/>     self.<span class=\"me1\">Paint</span>.<span class=\"me1\">Add</span><span class=\"br0\">(</span> <span class=\"kw1\">fun</span> args <span class=\"sy0\">-&gt;</span><br/>       <span class=\"kw1\">let</span> now <span class=\"sy0\">=</span> DateTime.<span class=\"me1\">Now</span><br/>       <span class=\"kw1\">let</span> deltaT <span class=\"sy0\">=</span> now <span class=\"sy0\">-</span>? lastPaintedAt <span class=\"sy0\">|&gt;</span> <span class=\"kw3\">min</span> <span class=\"nu0\">0.01</span><span class=\"sy0\">&lt;</span>s<span class=\"sy0\">&gt;</span> <br/>       lastPaintedAt <span class=\"sy0\">&lt;-</span> Some now<br/>\u00a0<br/>       pendulum <span class=\"sy0\">&lt;-</span> next pendulum deltaT<br/>\u00a0<br/>       <span class=\"kw1\">let</span> gr <span class=\"sy0\">=</span> args.<span class=\"me1\">Graphics</span><br/>       gr.<span class=\"me1\">Clear</span><span class=\"br0\">(</span> Color.<span class=\"me1\">LightGray</span> <span class=\"br0\">)</span><br/>       paint pendulum gr<br/>\u00a0<br/>       <span class=\"co1\">// initiate a new paint event after a while (non-blocking)</span><br/>       <span class=\"kw4\">async</span> <span class=\"br0\">{</span> <span class=\"kw1\">do</span><span class=\"sy0\">!</span> Async.<span class=\"me1\">Sleep</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">1000.0</span> <span class=\"sy0\">*</span> updateFreq <span class=\"sy0\">/</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">&lt;</span>s<span class=\"sy0\">&gt;</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>               self.<span class=\"me1\">Invalidate</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>       <span class=\"sy0\">|&gt;</span> Async.<span class=\"me1\">Start</span> <br/>     <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>STAThread<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/>Application.<span class=\"me1\">Run</span><span class=\"br0\">(</span> <span class=\"kw1\">new</span> PendulumForm<span class=\"br0\">(</span> Visible<span class=\"sy0\">=</span><span class=\"kw1\">true</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span></pre>"}, {"lang": "Go", "loc": 116, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"github.com/google/gxui\"</span><br/>\t<span class=\"st0\">\"github.com/google/gxui/drivers/gl\"</span><br/>\t<span class=\"st0\">\"github.com/google/gxui/math\"</span><br/>\t<span class=\"st0\">\"github.com/google/gxui/themes/dark\"</span><br/>\tomath <span class=\"st0\">\"math\"</span><br/>\t<span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">//Two pendulums animated</span><br/><span class=\"co1\">//Top: Mathematical pendulum with small-angle approxmiation (not appropiate with PHI_ZERO=pi/2)</span><br/><span class=\"co1\">//Bottom: Simulated with differential equation phi'' = g/l * sin(phi)</span><br/>\u00a0<br/><span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>\tANIMATION_WIDTH  <span class=\"kw4\">int</span>     <span class=\"sy2\">=</span> <span class=\"nu0\">480</span><br/>\tANIMATION_HEIGHT <span class=\"kw4\">int</span>     <span class=\"sy2\">=</span> <span class=\"nu0\">320</span><br/>\tBALL_RADIUS      <span class=\"kw4\">float32</span> <span class=\"sy2\">=</span> <span class=\"nu0\">25</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>\tMETER_PER_PIXEL  <span class=\"kw4\">float64</span> <span class=\"sy2\">=</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span> <span class=\"sy3\">/</span> <span class=\"nu0\">20</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>\tPHI_ZERO         <span class=\"kw4\">float64</span> <span class=\"sy2\">=</span> omath<span class=\"sy3\">.</span>Pi <span class=\"sy3\">*</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> <span class=\"sy1\">(</span><br/>\tl    <span class=\"kw4\">float64</span> <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>ANIMATION_HEIGHT<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">5</span><br/>\tfreq <span class=\"kw4\">float64</span> <span class=\"sy2\">=</span> omath<span class=\"sy3\">.</span>Sqrt<span class=\"sy1\">(</span><span class=\"nu0\">9</span><span class=\"sy3\">.</span><span class=\"nu0\">81</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span>l <span class=\"sy3\">*</span> METER_PER_PIXEL<span class=\"sy1\">))</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Pendulum <span class=\"kw4\">interface</span> <span class=\"sy1\">{</span><br/>\tGetPhi<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> mathematicalPendulum <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\tstart <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>mathematicalPendulum<span class=\"sy1\">)</span> GetPhi<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>start <span class=\"sy3\">==</span> <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><span class=\"sy1\">{})</span> <span class=\"sy1\">{</span><br/>\t\tp<span class=\"sy3\">.</span>start <span class=\"sy2\">=</span> time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><br/>\t<span class=\"sy1\">}</span><br/>\tt <span class=\"sy2\">:=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Since<span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>start<span class=\"sy1\">)</span><span class=\"sy3\">.</span>Nanoseconds<span class=\"sy1\">())</span> <span class=\"sy3\">/</span> omath<span class=\"sy3\">.</span>Pow10<span class=\"sy1\">(</span><span class=\"nu0\">9</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">return</span> PHI_ZERO <span class=\"sy3\">*</span> omath<span class=\"sy3\">.</span>Cos<span class=\"sy1\">(</span>t<span class=\"sy3\">*</span>freq<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">type</span> numericalPendulum <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\tcurrentPhi <span class=\"kw4\">float64</span><br/>\tangAcc     <span class=\"kw4\">float64</span><br/>\tangVel     <span class=\"kw4\">float64</span><br/>\tlastTime   <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>p <span class=\"sy3\">*</span>numericalPendulum<span class=\"sy1\">)</span> GetPhi<span class=\"sy1\">()</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>\tdt <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">if</span> <span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>lastTime <span class=\"sy2\">!=</span> <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><span class=\"sy1\">{})</span> <span class=\"sy1\">{</span><br/>\t\tdt <span class=\"sy2\">=</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Since<span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>lastTime<span class=\"sy1\">)</span><span class=\"sy3\">.</span>Nanoseconds<span class=\"sy1\">())</span> <span class=\"sy3\">/</span> omath<span class=\"sy3\">.</span>Pow10<span class=\"sy1\">(</span><span class=\"nu0\">9</span><span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\tp<span class=\"sy3\">.</span>lastTime <span class=\"sy2\">=</span> time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><br/>\u00a0<br/>\tp<span class=\"sy3\">.</span>angAcc <span class=\"sy2\">=</span> <span class=\"sy3\">-</span><span class=\"nu0\">9</span><span class=\"sy3\">.</span><span class=\"nu0\">81</span> <span class=\"sy3\">/</span> <span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">(</span>l<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> METER_PER_PIXEL<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> omath<span class=\"sy3\">.</span>Sin<span class=\"sy1\">(</span>p<span class=\"sy3\">.</span>currentPhi<span class=\"sy1\">)</span><br/>\tp<span class=\"sy3\">.</span>angVel <span class=\"sy2\">+=</span> p<span class=\"sy3\">.</span>angAcc <span class=\"sy3\">*</span> dt<br/>\tp<span class=\"sy3\">.</span>currentPhi <span class=\"sy2\">+=</span> p<span class=\"sy3\">.</span>angVel <span class=\"sy3\">*</span> dt<br/>\u00a0<br/>\t<span class=\"kw1\">return</span> p<span class=\"sy3\">.</span>currentPhi<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> draw<span class=\"sy1\">(</span>p Pendulum<span class=\"sy1\">,</span> canvas gxui<span class=\"sy3\">.</span>Canvas<span class=\"sy1\">,</span> x<span class=\"sy1\">,</span> y <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\tattachment <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>Point<span class=\"sy1\">{</span>X<span class=\"sy1\">:</span> ANIMATION_WIDTH<span class=\"sy3\">/</span><span class=\"nu0\">2</span> <span class=\"sy3\">+</span> x<span class=\"sy1\">,</span> Y<span class=\"sy1\">:</span> y<span class=\"sy1\">}</span><br/>\u00a0<br/>\tphi <span class=\"sy2\">:=</span> p<span class=\"sy3\">.</span>GetPhi<span class=\"sy1\">()</span><br/>\tball <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>Point<span class=\"sy1\">{</span>X<span class=\"sy1\">:</span> x <span class=\"sy3\">+</span> ANIMATION_WIDTH<span class=\"sy3\">/</span><span class=\"nu0\">2</span> <span class=\"sy3\">+</span> math<span class=\"sy3\">.</span>Round<span class=\"sy1\">(</span><span class=\"kw4\">float32</span><span class=\"sy1\">(</span>l<span class=\"sy3\">*</span>omath<span class=\"sy3\">.</span>Sin<span class=\"sy1\">(</span>phi<span class=\"sy1\">))),</span> Y<span class=\"sy1\">:</span> y <span class=\"sy3\">+</span> math<span class=\"sy3\">.</span>Round<span class=\"sy1\">(</span><span class=\"kw4\">float32</span><span class=\"sy1\">(</span>l<span class=\"sy3\">*</span>omath<span class=\"sy3\">.</span>Cos<span class=\"sy1\">(</span>phi<span class=\"sy1\">)))}</span><br/>\u00a0<br/>\tline <span class=\"sy2\">:=</span> gxui<span class=\"sy3\">.</span>Polygon<span class=\"sy1\">{</span>gxui<span class=\"sy3\">.</span>PolygonVertex<span class=\"sy1\">{</span>attachment<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">},</span> gxui<span class=\"sy3\">.</span>PolygonVertex<span class=\"sy1\">{</span>ball<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}}</span><br/>\u00a0<br/>\tcanvas<span class=\"sy3\">.</span>DrawLines<span class=\"sy1\">(</span>line<span class=\"sy1\">,</span> gxui<span class=\"sy3\">.</span>DefaultPen<span class=\"sy1\">)</span><br/>\u00a0<br/>\tm <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>Point<span class=\"sy1\">{</span><span class=\"kw4\">int</span><span class=\"sy1\">(</span>BALL_RADIUS<span class=\"sy1\">),</span> <span class=\"kw4\">int</span><span class=\"sy1\">(</span>BALL_RADIUS<span class=\"sy1\">)}</span><br/>\trect <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>Rect<span class=\"sy1\">{</span>ball<span class=\"sy3\">.</span>Sub<span class=\"sy1\">(</span>m<span class=\"sy1\">),</span> ball<span class=\"sy3\">.</span>Add<span class=\"sy1\">(</span>m<span class=\"sy1\">)}</span><br/>\tcanvas<span class=\"sy3\">.</span>DrawRoundedRect<span class=\"sy1\">(</span>rect<span class=\"sy1\">,</span> BALL_RADIUS<span class=\"sy1\">,</span> BALL_RADIUS<span class=\"sy1\">,</span> BALL_RADIUS<span class=\"sy1\">,</span> BALL_RADIUS<span class=\"sy1\">,</span> gxui<span class=\"sy3\">.</span>TransparentPen<span class=\"sy1\">,</span> gxui<span class=\"sy3\">.</span>CreateBrush<span class=\"sy1\">(</span>gxui<span class=\"sy3\">.</span>Yellow<span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> appMain<span class=\"sy1\">(</span>driver gxui<span class=\"sy3\">.</span>Driver<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\ttheme <span class=\"sy2\">:=</span> dark<span class=\"sy3\">.</span>CreateTheme<span class=\"sy1\">(</span>driver<span class=\"sy1\">)</span><br/>\u00a0<br/>\twindow <span class=\"sy2\">:=</span> theme<span class=\"sy3\">.</span>CreateWindow<span class=\"sy1\">(</span>ANIMATION_WIDTH<span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy3\">*</span>ANIMATION_HEIGHT<span class=\"sy1\">,</span> <span class=\"st0\">\"Pendulum\"</span><span class=\"sy1\">)</span><br/>\twindow<span class=\"sy3\">.</span>SetBackgroundBrush<span class=\"sy1\">(</span>gxui<span class=\"sy3\">.</span>CreateBrush<span class=\"sy1\">(</span>gxui<span class=\"sy3\">.</span>Gray50<span class=\"sy1\">))</span><br/>\u00a0<br/>\timage <span class=\"sy2\">:=</span> theme<span class=\"sy3\">.</span>CreateImage<span class=\"sy1\">()</span><br/>\u00a0<br/>\tticker <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>NewTicker<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Millisecond <span class=\"sy3\">*</span> <span class=\"nu0\">15</span><span class=\"sy1\">)</span><br/>\tpendulum <span class=\"sy2\">:=</span> &amp;mathematicalPendulum<span class=\"sy1\">{}</span><br/>\tpendulum2 <span class=\"sy2\">:=</span> &amp;numericalPendulum<span class=\"sy1\">{</span>PHI_ZERO<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><span class=\"sy1\">{}}</span><br/>\u00a0<br/>\t<span class=\"kw1\">go</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">for</span> _ <span class=\"sy2\">=</span> <span class=\"kw1\">range</span> ticker<span class=\"sy3\">.</span>C <span class=\"sy1\">{</span><br/>\t\t\tcanvas <span class=\"sy2\">:=</span> driver<span class=\"sy3\">.</span>CreateCanvas<span class=\"sy1\">(</span>math<span class=\"sy3\">.</span>Size<span class=\"sy1\">{</span>ANIMATION_WIDTH<span class=\"sy1\">,</span> <span class=\"nu0\">2</span> <span class=\"sy3\">*</span> ANIMATION_HEIGHT<span class=\"sy1\">})</span><br/>\t\t\tcanvas<span class=\"sy3\">.</span>Clear<span class=\"sy1\">(</span>gxui<span class=\"sy3\">.</span>White<span class=\"sy1\">)</span><br/>\u00a0<br/>\t\t\tdraw<span class=\"sy1\">(</span>pendulum<span class=\"sy1\">,</span> canvas<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">)</span><br/>\t\t\tdraw<span class=\"sy1\">(</span>pendulum2<span class=\"sy1\">,</span> canvas<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> ANIMATION_HEIGHT<span class=\"sy1\">)</span><br/>\u00a0<br/>\t\t\tcanvas<span class=\"sy3\">.</span>Complete<span class=\"sy1\">()</span><br/>\t\t\tdriver<span class=\"sy3\">.</span>Call<span class=\"sy1\">(</span><span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t\t\t\timage<span class=\"sy3\">.</span>SetCanvas<span class=\"sy1\">(</span>canvas<span class=\"sy1\">)</span><br/>\t\t\t<span class=\"sy1\">})</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}()</span><br/>\u00a0<br/>\twindow<span class=\"sy3\">.</span>AddChild<span class=\"sy1\">(</span>image<span class=\"sy1\">)</span><br/>\u00a0<br/>\twindow<span class=\"sy3\">.</span>OnClose<span class=\"sy1\">(</span>ticker<span class=\"sy3\">.</span>Stop<span class=\"sy1\">)</span><br/>\twindow<span class=\"sy3\">.</span>OnClose<span class=\"sy1\">(</span>driver<span class=\"sy3\">.</span>Terminate<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tgl<span class=\"sy3\">.</span>StartDriver<span class=\"sy1\">(</span>appMain<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 28, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Graphics<span class=\"sy0\">.</span>HGL<span class=\"sy0\">.</span>Draw<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a> <span class=\"br0\">(</span>Graphic<span class=\"sy0\">,</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Graphics<span class=\"sy0\">.</span>HGL<span class=\"sy0\">.</span>Draw<span class=\"sy0\">.</span>Picture<br/><span class=\"kw1\">import</span> Graphics<span class=\"sy0\">.</span>HGL<span class=\"sy0\">.</span>Utils<br/><span class=\"kw1\">import</span> Graphics<span class=\"sy0\">.</span>HGL<span class=\"sy0\">.</span>Window<br/><span class=\"kw1\">import</span> Graphics<span class=\"sy0\">.</span>HGL<span class=\"sy0\">.</span>Run<br/>\u00a0<br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Exception <span class=\"br0\">(</span>bracket<span class=\"sy0\">,</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Arrow<br/>\u00a0<br/>toInt <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a><span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:round\"><span class=\"kw3\">round</span></a><br/>\u00a0<br/>pendulum <span class=\"sy0\">=</span> runGraphics <span class=\"sy0\">$</span><br/>  bracket<br/>    <span class=\"br0\">(</span>openWindowEx <span class=\"st0\">\"Pendulum animation task\"</span> Nothing <span class=\"br0\">(</span><span class=\"nu0\">600</span><span class=\"sy0\">,</span><span class=\"nu0\">400</span><span class=\"br0\">)</span> DoubleBuffered <span class=\"br0\">(</span>Just <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    closeWindow<br/>    <span class=\"br0\">(</span>\\w <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>\\ g <span class=\"sy0\">-&gt;</span> setGraphic w g <span class=\"sy0\">&gt;&gt;</span> getWindowTick w<span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>                    <span class=\"br0\">(</span>\\ <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> overGraphic <span class=\"br0\">(</span>line <span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                    <span class=\"br0\">(</span>ellipse <span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> y <span class=\"sy0\">+</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> y <span class=\"sy0\">-</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> pts<span class=\"br0\">)</span><br/> <span class=\"kw1\">where</span><br/>    dt <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">30</span><br/>    t <span class=\"sy0\">=</span> <span class=\"sy0\">-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pi\"><span class=\"kw3\">pi</span></a><span class=\"sy0\">/</span><span class=\"nu0\">4</span><br/>    l <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    g <span class=\"sy0\">=</span> <span class=\"nu0\">9.812</span> <br/>    nextAVT <span class=\"br0\">(</span>a<span class=\"sy0\">,</span>v<span class=\"sy0\">,</span>t<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>a<span class=\"st0\">', v'</span><span class=\"sy0\">,</span> t <span class=\"sy0\">+</span> v<span class=\"st0\">' * dt) where<br/>        a'</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>g <span class=\"sy0\">/</span> l<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sin\"><span class=\"kw3\">sin</span></a> t<br/>        v<span class=\"st0\">' = v + a'</span> <span class=\"sy0\">*</span> dt<br/>    pts <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <span class=\"br0\">(</span>\\<span class=\"br0\">(</span><span class=\"sy0\">_,</span>t<span class=\"sy0\">,_</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span>toInt<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">+</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:cos\"><span class=\"kw3\">cos</span></a> <span class=\"sy0\">&amp;&amp;</span>&amp; toInt<span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sin\"><span class=\"kw3\">sin</span></a><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:pi\"><span class=\"kw3\">pi</span></a><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><span class=\"nu0\">0.6</span><span class=\"sy0\">*</span>t<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:iterate\"><span class=\"kw3\">iterate</span></a> nextAVT <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span>g <span class=\"sy0\">/</span> l<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sin\"><span class=\"kw3\">sin</span></a> t<span class=\"sy0\">,</span> t<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre>"}, {"lang": "HicEst", "loc": 33, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">REAL</span> <span class=\"sy1\">::</span> msec<span class=\"sy1\">=</span><span class=\"nu0\">10</span><span class=\"sy1\">,</span> Lrod<span class=\"sy1\">=</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> dBob<span class=\"sy1\">=</span><span class=\"nu0\">0.03</span><span class=\"sy1\">,</span> g<span class=\"sy1\">=</span><span class=\"nu0\">9.81</span><span class=\"sy1\">,</span> Theta<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> dTheta<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>BobMargins <span class=\"sy1\">=</span> <span class=\"kw1\">ALIAS</span><span class=\"br0\">(</span>ls<span class=\"sy1\">,</span> rs<span class=\"sy1\">,</span> ts<span class=\"sy1\">,</span> bs<span class=\"br0\">)</span> <span class=\"co1\">! box margins to draw the bob</span><br/>\u00a0<br/>\u00a0<br/>Theta <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>        <span class=\"co1\">! initial angle and velocity</span><br/>start_t <span class=\"sy1\">=</span> <span class=\"kw1\">TIME</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">DO</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> 1E100       <span class=\"co1\">! \"forever\"</span><br/>   end_t <span class=\"sy1\">=</span> <span class=\"kw1\">TIME</span><span class=\"br0\">(</span><span class=\"br0\">)</span>     <span class=\"co1\">! to integrate in real-time sections:</span><br/>   <span class=\"kw1\">DIFFEQ</span><span class=\"br0\">(</span>Callback<span class=\"sy1\">=</span><span class=\"st0\">\"pendulum\"</span><span class=\"sy1\">,</span> T<span class=\"sy1\">=</span>end_t<span class=\"sy1\">,</span> Y<span class=\"sy1\">=</span>Theta<span class=\"sy1\">,</span> DY<span class=\"sy1\">=</span>dTheta<span class=\"sy1\">,</span> T0<span class=\"sy1\">=</span>start_t<span class=\"br0\">)</span><br/>   xBob <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">SIN</span><span class=\"br0\">(</span>Theta<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">/</span> <span class=\"nu0\">2</span><br/>   yBob <span class=\"sy1\">=</span> <span class=\"kw1\">COS</span><span class=\"br0\">(</span>Theta<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">-</span> dBob<br/>\u00a0<br/>   <span class=\"co1\">! create or clear window and draw pendulum bob at (xBob, yBob):</span><br/>   <span class=\"kw1\">WINDOW</span><span class=\"br0\">(</span>WIN<span class=\"sy1\">=</span>wh<span class=\"sy1\">,</span> LeftSpace<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> RightSpace<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> TopSpace<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> BottomSpace<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> Up<span class=\"sy1\">=</span><span class=\"nu0\">999</span><span class=\"br0\">)</span><br/>   BobMargins <span class=\"sy1\">=</span> <span class=\"br0\">(</span>xBob<span class=\"sy1\">-</span>dBob<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">-</span>xBob<span class=\"sy1\">-</span>dBob<span class=\"sy1\">,</span> yBob<span class=\"sy1\">-</span>dBob<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">-</span>yBob<span class=\"sy1\">-</span>dBob<span class=\"br0\">)</span><br/>   <span class=\"kw1\">WINDOW</span><span class=\"br0\">(</span>WIN<span class=\"sy1\">=</span>wh<span class=\"sy1\">,</span> LeftSpace<span class=\"sy1\">=</span>ls<span class=\"sy1\">,</span> RightSpace<span class=\"sy1\">=</span>rs<span class=\"sy1\">,</span> TopSpace<span class=\"sy1\">=</span>ts<span class=\"sy1\">,</span> BottomSpace<span class=\"sy1\">=</span>bs<span class=\"br0\">)</span><br/>   <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>WIN<span class=\"sy1\">=</span>wh<span class=\"sy1\">,</span> DeCoRation<span class=\"sy1\">=</span><span class=\"st0\">'EL=4, BC=4'</span><span class=\"br0\">)</span> <span class=\"co1\">! flooded red ellipse as bob</span><br/>\u00a0<br/>   <span class=\"co1\">! draw the rod hanging from the center of the window:</span><br/>   <span class=\"kw1\">WINDOW</span><span class=\"br0\">(</span>WIN<span class=\"sy1\">=</span>wh<span class=\"sy1\">,</span> LeftSpace<span class=\"sy1\">=</span><span class=\"nu0\">0.5</span><span class=\"sy1\">,</span> TopSpace<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> RightSpace<span class=\"sy1\">=</span>rs<span class=\"sy1\">+</span>dBob<span class=\"br0\">)</span><br/>   <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>WIN<span class=\"sy1\">=</span>wh<span class=\"sy1\">,</span> DeCoRation<span class=\"sy1\">=</span><span class=\"st0\">'LI=0 0; 1 1, FC=4.02'</span><span class=\"br0\">)</span> <span class=\"co1\">! red pendulum rod</span><br/>\u00a0<br/>   <span class=\"kw1\">SYSTEM</span><span class=\"br0\">(</span>WAIT<span class=\"sy1\">=</span>msec<span class=\"br0\">)</span><br/>   start_t <span class=\"sy1\">=</span> end_t<br/><span class=\"kw1\">ENDDO</span><br/>\u00a0<br/><span class=\"kw1\">END</span><br/>\u00a0<br/><span class=\"kw1\">SUBROUTINE</span> pendulum                 <span class=\"co1\">! Theta\" = - (g/Lrod) * SIN(Theta)</span><br/>  dTheta<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> Theta<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>              <span class=\"co1\">! Theta' = Theta(2)  substitution</span><br/>  dTheta<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"sy1\">-</span>g<span class=\"sy1\">/</span>Lrod<span class=\"sy1\">*</span><span class=\"kw1\">SIN</span><span class=\"br0\">(</span>Theta<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">! Theta\" = Theta(2)' = -g/Lrod*SIN(Theta(1))</span><br/><span class=\"kw1\">END</span></pre>"}, {"lang": "Icon and Unicon", "loc": 95, "block": "<pre class=\"unicon highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> gui<br/>$<span class=\"kw6\">include</span> <span class=\"st0\">\"guih.icn\"</span><br/>\u00a0<br/><span class=\"co1\"># some constants to define the display and pendulum</span><br/>$<span class=\"kw6\">define</span> HEIGHT <span class=\"nu0\">400</span><br/>$<span class=\"kw6\">define</span> WIDTH <span class=\"nu0\">500</span><br/>$<span class=\"kw6\">define</span> STRING_LENGTH <span class=\"nu0\">200</span><br/>$<span class=\"kw6\">define</span> HOME_X <span class=\"nu0\">250</span><br/>$<span class=\"kw6\">define</span> HOME_Y <span class=\"nu0\">21</span><br/>$<span class=\"kw6\">define</span> SIZE <span class=\"nu0\">30</span><br/>$<span class=\"kw6\">define</span> START_ANGLE <span class=\"nu0\">80</span><br/>\u00a0<br/><span class=\"kw1\">class</span> WindowApp <span class=\"sy0\">:</span> Dialog <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\"># draw the pendulum on given context_window, at position (x,y)</span><br/>  <span class=\"kw1\">method</span> draw_pendulum <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>    <span class=\"co1\"># reference to current screen area to draw on</span><br/>    cw <span class=\"sy0\">:=</span> <span class=\"kw5\">Clone</span><span class=\"br0\">(</span>self<span class=\"sy0\">.</span><span class=\"me1\">cwin</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># clear screen</span><br/>    <span class=\"kw5\">WAttrib</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> <span class=\"st0\">\"bg=grey\"</span><span class=\"br0\">)</span><br/>    EraseRectangle <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> WIDTH<span class=\"sy0\">,</span> HEIGHT<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># draw the display</span><br/>    <span class=\"kw5\">WAttrib</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> <span class=\"st0\">\"fg=dark gray\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">DrawLine</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> WIDTH<span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">WAttrib</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> <span class=\"st0\">\"fg=black\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">DrawLine</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> HOME_X<span class=\"sy0\">,</span> HOME_Y<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>    <span class=\"kw5\">FillCircle</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> SIZE<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">WAttrib</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> <span class=\"st0\">\"fg=yellow\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw5\">FillCircle</span> <span class=\"br0\">(</span>cw<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> SIZE<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># free reference to screen area</span><br/>    <span class=\"kw5\">Uncouple</span> <span class=\"br0\">(</span>cw<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># find the average of given two arguments</span><br/>  <span class=\"kw1\">method</span> avg <span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>a <span class=\"sy0\">+</span> b<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># this method gets called by the ticker</span><br/>  <span class=\"co1\"># it computes the next position of the pendulum and</span><br/>  <span class=\"co1\"># requests a redraw</span><br/>  <span class=\"kw1\">method</span> tick <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">static</span> x<span class=\"sy0\">,</span> y<br/>    <span class=\"kw2\">static</span> theta <span class=\"sy0\">:=</span> START_ANGLE<br/>    <span class=\"kw2\">static</span> d_theta <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"co1\"># update x,y of pendulum</span><br/>    scaling <span class=\"sy0\">:=</span> <span class=\"nu0\">3000.0</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>STRING_LENGTH <span class=\"sy0\">*</span> STRING_LENGTH<span class=\"br0\">)</span><br/>    <span class=\"co1\"># -- first estimate</span><br/>    first_dd_theta <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>sin <span class=\"br0\">(</span><span class=\"kw4\">dtor</span> <span class=\"br0\">(</span>theta<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    mid_d_theta <span class=\"sy0\">:=</span> d_theta <span class=\"sy0\">+</span> first_dd_theta<br/>    mid_theta <span class=\"sy0\">:=</span> theta <span class=\"sy0\">+</span> avg <span class=\"br0\">(</span>d_theta<span class=\"sy0\">,</span> mid_d_theta<span class=\"br0\">)</span><br/>    <span class=\"co1\"># -- second estimate</span><br/>    mid_dd_theta <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>sin <span class=\"br0\">(</span><span class=\"kw4\">dtor</span> <span class=\"br0\">(</span>mid_theta<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    mid_d_theta_2 <span class=\"sy0\">:=</span> d_theta <span class=\"sy0\">+</span> avg <span class=\"br0\">(</span>first_dd_theta<span class=\"sy0\">,</span> mid_dd_theta<span class=\"br0\">)</span><br/>    mid_theta_2 <span class=\"sy0\">:=</span> theta <span class=\"sy0\">+</span> avg <span class=\"br0\">(</span>d_theta<span class=\"sy0\">,</span> mid_d_theta_2<span class=\"br0\">)</span><br/>    <span class=\"co1\"># -- again first</span><br/>    mid_dd_theta_2 <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>sin <span class=\"br0\">(</span><span class=\"kw4\">dtor</span> <span class=\"br0\">(</span>mid_theta_2<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    last_d_theta <span class=\"sy0\">:=</span> mid_d_theta_2 <span class=\"sy0\">+</span> mid_dd_theta_2<br/>    last_theta <span class=\"sy0\">:=</span> mid_theta_2 <span class=\"sy0\">+</span> avg <span class=\"br0\">(</span>mid_d_theta_2<span class=\"sy0\">,</span> last_d_theta<span class=\"br0\">)</span><br/>    <span class=\"co1\"># -- again second</span><br/>    last_dd_theta <span class=\"sy0\">:=</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>sin <span class=\"br0\">(</span><span class=\"kw4\">dtor</span> <span class=\"br0\">(</span>last_theta<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    last_d_theta_2 <span class=\"sy0\">:=</span> mid_d_theta_2 <span class=\"sy0\">+</span> avg <span class=\"br0\">(</span>mid_dd_theta_2<span class=\"sy0\">,</span> last_dd_theta<span class=\"br0\">)</span><br/>    last_theta_2 <span class=\"sy0\">:=</span> mid_theta_2 <span class=\"sy0\">+</span> avg <span class=\"br0\">(</span>mid_d_theta_2<span class=\"sy0\">,</span> last_d_theta_2<span class=\"br0\">)</span><br/>    <span class=\"co1\"># -- update stored angles</span><br/>    d_theta <span class=\"sy0\">:=</span> last_d_theta_2<br/>    theta <span class=\"sy0\">:=</span> last_theta_2<br/>    <span class=\"co1\"># -- update x, y</span><br/>    pendulum_angle <span class=\"sy0\">:=</span> <span class=\"kw4\">dtor</span> <span class=\"br0\">(</span>theta<span class=\"br0\">)</span><br/>    x <span class=\"sy0\">:=</span> HOME_X <span class=\"sy0\">+</span> STRING_LENGTH <span class=\"sy0\">*</span> sin <span class=\"br0\">(</span>pendulum_angle<span class=\"br0\">)</span><br/>    y <span class=\"sy0\">:=</span> HOME_Y <span class=\"sy0\">+</span> STRING_LENGTH <span class=\"sy0\">*</span> <span class=\"kw4\">cos</span> <span class=\"br0\">(</span>pendulum_angle<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># draw pendulum</span><br/>    draw_pendulum <span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># set up the window</span><br/>  <span class=\"kw1\">method</span> component_setup <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"co1\"># some cosmetic settings for the window</span><br/>    attrib<span class=\"br0\">(</span><span class=\"st0\">\"size=\"</span><span class=\"sy0\">||</span>WIDTH<span class=\"sy0\">||</span><span class=\"st0\">\",\"</span><span class=\"sy0\">||</span>HEIGHT<span class=\"sy0\">,</span> <span class=\"st0\">\"bg=light gray\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"label=Pendulum\"</span><span class=\"br0\">)</span><br/>    <span class=\"co1\"># make sure we respond to window close event</span><br/>    connect <span class=\"br0\">(</span>self<span class=\"sy0\">,</span> <span class=\"st0\">\"dispose\"</span><span class=\"sy0\">,</span> CLOSE_BUTTON_EVENT<span class=\"br0\">)</span><br/>    <span class=\"co1\"># start the ticker, to update the display periodically</span><br/>    self<span class=\"sy0\">.</span><span class=\"me1\">set_ticker</span> <span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  w <span class=\"sy0\">:=</span> WindowApp <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  w<span class=\"sy0\">.</span><span class=\"me1\">show_modal</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "J", "loc": 43, "block": "<pre class=\"j highlighted_source\">require <span class=\"st_h\">'gl2 trig'</span><br/>coinsert <span class=\"st_h\">'jgl2'</span><br/>\u00a0<br/>DT   =:\u00a0%<span class=\"nu0\">30</span>      <span class=\"co1\">NB. seconds</span><br/>ANGLE=: <span class=\"nu0\">0.45p1</span>   <span class=\"co1\">NB. radians</span><br/>L    =: <span class=\"nu0\">1</span>        <span class=\"co1\">NB. metres</span><br/>G    =: <span class=\"nu0\">9.80665</span>  <span class=\"co1\">NB. ms_2</span><br/>VEL  =: <span class=\"nu0\">0</span>        <span class=\"co1\">NB. ms_1</span><br/>\u00a0<br/>PEND=: noun define<br/>pc pend;pn \"Pendulum\";<br/>xywh <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">320</span> <span class=\"nu0\">200</span>;cc isi isigraph rightmove bottommove;<br/>pas <span class=\"nu0\">0</span> <span class=\"nu0\">0</span>;pcenter;<br/>rem form end;<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>pend_run      =: verb def <span class=\"st_h\">' wd PEND,'</span><span class=\"st_h\">';pshow;timer '</span><span class=\"st_h\">',\":DT * 1000 '</span><br/>pend_close    =: verb def <span class=\"st_h\">' wd '</span><span class=\"st_h\">'timer 0; pclose'</span><span class=\"st_h\">' '</span><br/>pend_isi_paint=: verb def <span class=\"st_h\">' drawPendulum ANGLE '</span><br/>\u00a0<br/>sys_timer_z_=: verb define<br/>  recalcAngle <span class=\"st_h\">''</span><br/>  wd <span class=\"st_h\">'psel pend; setinvalid isi'</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>recalcAngle=: verb define<br/>  accel=. - <span class=\"sy0\">(</span>G\u00a0% L<span class=\"sy0\">)</span> * sin ANGLE<br/>  VEL  =: VEL + accel * DT<br/>  ANGLE=: ANGLE + VEL * DT<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>drawPendulum=: verb define<br/>  width=. {. glqwh<span class=\"st_h\">''</span><br/>  ps=. <span class=\"sy0\">(</span>-: width<span class=\"sy0\">)</span> , <span class=\"nu0\">40</span><br/>  pe=. ps + <span class=\"nu0\">280</span> &lt;<a class=\"__cf_email__\" data-cfemail=\"301e70\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>* <span class=\"sy0\">(</span>cos , sin<span class=\"sy0\">)</span> <span class=\"nu0\">0.5p1</span> + <span class=\"kw2\">y</span>    <span class=\"co1\">NB. adjust orientation</span><br/>  glbrush glrgb <span class=\"nu0\">91</span> <span class=\"nu0\">91</span> <span class=\"nu0\">91</span><br/>  gllines ps , pe<br/>  glellipse <span class=\"sy0\">(</span>,~ ps - -:<span class=\"sy0\">)</span> <span class=\"nu0\">40</span> <span class=\"nu0\">15</span><br/>  glellipse <span class=\"sy0\">(</span>,~ pe - -:<span class=\"sy0\">)</span> <span class=\"nu0\">20</span> <span class=\"nu0\">20</span><br/>  glrect <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> ,width, <span class=\"nu0\">40</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>pend_run<span class=\"st_h\">''</span>                                    <span class=\"co1\">NB. run animation</span></pre>"}, {"lang": "Java", "loc": 52, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Pendulum <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a> <span class=\"kw1\">implements</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arunnable+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Runnable</span></a> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">double</span> angle <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">PI</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> Pendulum<span class=\"br0\">(</span><span class=\"kw4\">int</span> length<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">this</span>.<span class=\"me1\">length</span> <span class=\"sy0\">=</span> length<span class=\"sy0\">;</span><br/>        setDoubleBuffered<span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> paint<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">WHITE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span>, getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">BLACK</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> anchorX <span class=\"sy0\">=</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, anchorY <span class=\"sy0\">=</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> ballX <span class=\"sy0\">=</span> anchorX <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> length<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> ballY <span class=\"sy0\">=</span> anchorY <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">cos</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> length<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>anchorX, anchorY, ballX, ballY<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>anchorX <span class=\"sy0\">-</span> <span class=\"nu0\">3</span>, anchorY <span class=\"sy0\">-</span> <span class=\"nu0\">4</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>ballX <span class=\"sy0\">-</span> <span class=\"nu0\">7</span>, ballY <span class=\"sy0\">-</span> <span class=\"nu0\">7</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">14</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> angleAccel, angleVelocity <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, dt <span class=\"sy0\">=</span> <span class=\"nu0\">0.1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            angleAccel <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">9.81</span> <span class=\"sy0\">/</span> length <span class=\"sy0\">*</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            angleVelocity <span class=\"sy0\">+=</span> angleAccel <span class=\"sy0\">*</span> dt<span class=\"sy0\">;</span><br/>            angle <span class=\"sy0\">+=</span> angleVelocity <span class=\"sy0\">*</span> dt<span class=\"sy0\">;</span><br/>            repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">try</span> <span class=\"br0\">{</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Athread+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Thread</span></a>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainterruptedexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">InterruptedException</span></a> ex<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a> getPreferredSize<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> length <span class=\"sy0\">+</span> <span class=\"nu0\">50</span>, length <span class=\"sy0\">/</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a> f <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Pendulum p <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Pendulum<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        f.<span class=\"me1\">add</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        f.<span class=\"me1\">setDefaultCloseOperation</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        f.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        f.<span class=\"me1\">setVisible</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Athread+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Thread</span></a><span class=\"br0\">(</span>p<span class=\"br0\">)</span>.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 58, "block": "<pre class=\"javascript highlighted_source\"><span class=\"sy0\">&lt;</span>html<span class=\"sy0\">&gt;&lt;</span>head<span class=\"sy0\">&gt;</span><br/>  <span class=\"sy0\">&lt;</span>title<span class=\"sy0\">&gt;</span>Pendulum<span class=\"sy0\">&lt;/</span>title<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;/</span>head<span class=\"sy0\">&gt;&lt;</span>body style<span class=\"sy0\">=</span><span class=\"st0\">\"background: gray;\"</span><span class=\"sy0\">&gt;</span><br/>\u00a0<br/><span class=\"sy0\">&lt;</span>canvas id<span class=\"sy0\">=</span><span class=\"st0\">\"canvas\"</span> width<span class=\"sy0\">=</span><span class=\"st0\">\"600\"</span> height<span class=\"sy0\">=</span><span class=\"st0\">\"600\"</span><span class=\"sy0\">&gt;</span><br/>  <span class=\"sy0\">&lt;</span>p<span class=\"sy0\">&gt;</span>Sorry<span class=\"sy0\">,</span> your browser does not support the <span class=\"sy0\">&amp;</span>lt<span class=\"sy0\">;</span>canvas<span class=\"sy0\">&amp;</span>gt<span class=\"sy0\">;</span> used to display the pendulum animation.<span class=\"sy0\">&lt;/</span>p<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;/</span>canvas<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>script<span class=\"sy0\">&gt;</span><br/>  <span class=\"kw1\">function</span> PendulumSim<span class=\"br0\">(</span>length_m<span class=\"sy0\">,</span> gravity_mps2<span class=\"sy0\">,</span> initialAngle_rad<span class=\"sy0\">,</span> timestep_ms<span class=\"sy0\">,</span> callback<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> velocity <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> angle <span class=\"sy0\">=</span> initialAngle_rad<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> k <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>gravity_mps2<span class=\"sy0\">/</span>length_m<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> timestep_s <span class=\"sy0\">=</span> timestep_ms <span class=\"sy0\">/</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> setInterval<span class=\"br0\">(</span><span class=\"kw1\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">var</span> acceleration <span class=\"sy0\">=</span> k <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      velocity <span class=\"sy0\">+=</span> acceleration <span class=\"sy0\">*</span> timestep_s<span class=\"sy0\">;</span><br/>      angle    <span class=\"sy0\">+=</span> velocity     <span class=\"sy0\">*</span> timestep_s<span class=\"sy0\">;</span><br/>      callback<span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">,</span> timestep_ms<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">var</span> canvas <span class=\"sy0\">=</span> document.<span class=\"me1\">getElementById</span><span class=\"br0\">(</span><span class=\"st0\">'canvas'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> context <span class=\"sy0\">=</span> canvas.<span class=\"me1\">getContext</span><span class=\"br0\">(</span><span class=\"st0\">'2d'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> prev<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> sim <span class=\"sy0\">=</span> PendulumSim<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">9.80665</span><span class=\"sy0\">,</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">*</span><span class=\"nu0\">99</span><span class=\"sy0\">/</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"kw1\">function</span> <span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> rPend <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">min</span><span class=\"br0\">(</span>canvas.<span class=\"me1\">width</span><span class=\"sy0\">,</span> canvas.<span class=\"me1\">height</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.47</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> rBall <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">min</span><span class=\"br0\">(</span>canvas.<span class=\"me1\">width</span><span class=\"sy0\">,</span> canvas.<span class=\"me1\">height</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.02</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> rBar <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">min</span><span class=\"br0\">(</span>canvas.<span class=\"me1\">width</span><span class=\"sy0\">,</span> canvas.<span class=\"me1\">height</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">0.005</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> ballX <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> rPend<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">var</span> ballY <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">cos</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> rPend<span class=\"sy0\">;</span><br/>\u00a0<br/>    context.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"rgba(255,255,255,0.51)\"</span><span class=\"sy0\">;</span><br/>    context.<span class=\"me1\">globalCompositeOperation</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"destination-out\"</span><span class=\"sy0\">;</span><br/>    context.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> canvas.<span class=\"me1\">width</span><span class=\"sy0\">,</span> canvas.<span class=\"me1\">height</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    context.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"yellow\"</span><span class=\"sy0\">;</span><br/>    context.<span class=\"me1\">strokeStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"rgba(0,0,0,\"</span><span class=\"sy0\">+</span><span class=\"kw4\">Math</span>.<span class=\"me1\">max</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span><span class=\"kw4\">Math</span>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>prev<span class=\"sy0\">-</span>angle<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\")\"</span><span class=\"sy0\">;</span><br/>    context.<span class=\"me1\">globalCompositeOperation</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"source-over\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    context.<span class=\"me1\">save</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">translate</span><span class=\"br0\">(</span>canvas.<span class=\"me1\">width</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> canvas.<span class=\"me1\">height</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">rotate</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      context.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">rect</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>rBar<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>rBar<span class=\"sy0\">,</span> rBar<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> rPend<span class=\"sy0\">+</span>rBar<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">stroke</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      context.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">arc</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> rPend<span class=\"sy0\">,</span> rBall<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      context.<span class=\"me1\">stroke</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    context.<span class=\"me1\">restore</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    prev<span class=\"sy0\">=</span>angle<span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"sy0\">&lt;/</span>script<span class=\"sy0\">&gt;</span><br/>\u00a0<br/><span class=\"sy0\">&lt;/</span>body<span class=\"sy0\">&gt;&lt;/</span>html<span class=\"sy0\">&gt;</span></pre>"}, {"lang": "Julia", "loc": 48, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>using Luxor<br/>using Colors<br/>using BoundaryValueDiffEq<br/>\u00a0<br/># constants for differential equations and movie<br/>const g = 9.81<br/>const L = 1.0                         # pendulum length in meters<br/>const bobd = 0.10                     # pendulum bob diameter in meters<br/>const framerate = 50.0                # intended frame rate/sec<br/>const t0 = 0.0                        # start time (s)<br/>const tf = 2.3                        # end simulation time (s)<br/>const dtframe = 1.0/framerate         # time increment per frame<br/>const tspan = linspace(t0, tf, Int(floor(tf*framerate)))  # array of time points in animation<br/>\u00a0<br/>const bgcolor = \"black\"               # gif background<br/>const leaderhue = (0.80, 0.70, 0.20)  # gif swing arm hue light gold<br/>const hslcolors = [HSL(col) for col in (distinguishable_colors(<br/>                   Int(floor(tf*framerate)+3),[RGB(1,1,1)])[2:end])]<br/>const giffilename = \"pendulum.gif\"    # output file<br/>\u00a0<br/># differential equations<br/>simplependulum(t,u,du) = (\u03b8=u[1]; d\u03b8=u[2]; du[1]=d\u03b8; du[2]=-(g/L)*sin(\u03b8))<br/>bc2(residual, ua, ub) = (residual[1] = ua[1] + pi/2; residual[2] = ub[1] + pi/2)<br/>bvp2 = TwoPointBVProblem(simplependulum, bc2, [pi/2,pi/2], (tspan[1],tspan[end]))<br/>sol2 = solve(bvp2, MIRK4(), dt=dtframe) # use the MIRK4 solver for TwoPointBVProblem<br/>\u00a0<br/># movie making background<br/>backdrop(scene, framenumber) = background(bgcolor)<br/>\u00a0<br/>function frame(scene, framenumber)<br/>    u1, u2 = sol2.u[framenumber]<br/>    y, x = L*cos(u1), L*sin(u1)<br/>    sethue(leaderhue)<br/>    poly([Point(-4.0, 0.0), Point(4.0, 0.0),<br/>          Point(160.0x,160.0y)],\u00a0:fill)<br/>    sethue(Colors.HSV(framenumber*4.0, 1, 1))<br/>    circle(Point(160.0x,160.0y), 160bobd,\u00a0:fill)<br/>    text(string(\"frame $framenumber of $(scene.framerange.stop)\"),<br/>        Point(0.0, -190.0),<br/>        halign=:center)<br/>end<br/>\u00a0<br/>muv = Movie(400, 400, \"Pendulum Demo\", 1:length(tspan))<br/>animate(muv, [Scene(muv, backdrop),<br/>              Scene(muv, frame, easingfunction=easeinoutcubic)],<br/>              creategif=true, pathname=giffilename)<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 46, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">concurrent</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"sy0\">*</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Pendulum<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> length<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> JPanel<span class=\"br0\">(</span><span class=\"br0\">)</span>, Runnable <span class=\"br0\">{</span><br/>    init <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> JFrame<span class=\"br0\">(</span><span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><br/>        f.<span class=\"me1\">add</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">this</span></a><span class=\"br0\">)</span><br/>        f.<span class=\"me1\">defaultCloseOperation</span> <span class=\"sy0\">=</span> JFrame.<span class=\"me1\">EXIT_ON_CLOSE</span><br/>        f.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        f.<span class=\"me1\">isVisible</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        isDoubleBuffered <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun paint<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a><span class=\"br0\">(</span>g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">WHITE</span><br/>            fillRect<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, width, height<span class=\"br0\">)</span><br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">BLACK</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> anchor <span class=\"sy0\">=</span> Element<span class=\"br0\">(</span>width / <span class=\"nu0\">2</span>, height / <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ball <span class=\"sy0\">=</span> Element<span class=\"br0\">(</span><span class=\"br0\">(</span>anchor.<span class=\"me1\">x</span> + Math.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> length<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span>anchor.<span class=\"me1\">y</span> + Math.<span class=\"me1\">cos</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> length<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            drawLine<span class=\"br0\">(</span>anchor.<span class=\"me1\">x</span>, anchor.<span class=\"me1\">y</span>, ball.<span class=\"me1\">x</span>, ball.<span class=\"me1\">y</span><span class=\"br0\">)</span><br/>            fillOval<span class=\"br0\">(</span>anchor.<span class=\"me1\">x</span> - <span class=\"nu0\">3</span>, anchor.<span class=\"me1\">y</span> - <span class=\"nu0\">4</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>            fillOval<span class=\"br0\">(</span>ball.<span class=\"me1\">x</span> - <span class=\"nu0\">7</span>, ball.<span class=\"me1\">y</span> - <span class=\"nu0\">7</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">14</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun run<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        angleVelocity +<span class=\"sy0\">=</span> -<span class=\"nu0\">9.81</span> / length <span class=\"sy0\">*</span> Math.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> dt<br/>        angle +<span class=\"sy0\">=</span> angleVelocity <span class=\"sy0\">*</span> dt<br/>        repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun getPreferredSize<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Dimension<span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> length + <span class=\"nu0\">50</span>, length / <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> data <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Element<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x<span class=\"sy0\">:</span> Int, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dt <span class=\"sy0\">=</span> <span class=\"nu0\">0.1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> angle <span class=\"sy0\">=</span> Math.<span class=\"me1\">PI</span> / <span class=\"nu0\">2</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> angleVelocity <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> executor <span class=\"sy0\">=</span> Executors.<span class=\"me1\">newSingleThreadScheduledExecutor</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    executor.<span class=\"me1\">scheduleAtFixedRate</span><span class=\"br0\">(</span>Pendulum<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">15</span>, TimeUnit.<span class=\"me1\">MILLISECONDS</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 42, "block": "<pre class=\"lb highlighted_source\"><span class=\"kw1\">nomainwin</span><br/>    <span class=\"kw3\">WindowWidth</span> <span class=\"sy0\">=</span> <span class=\"nu0\">400</span><br/>    <span class=\"kw3\">WindowHeight</span> <span class=\"sy0\">=</span> <span class=\"nu0\">300</span><br/>\u00a0<br/>    <span class=\"kw1\">open</span> <span class=\"st0\">\"Pendulum\"</span> <span class=\"kw1\">for</span> graphics_nsb_nf <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>main<br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"down;fill white; flush\"</span><br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"color black\"</span><br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"trapclose [quit.main]\"</span><br/>\u00a0<br/>    Angle <span class=\"sy0\">=</span> <span class=\"kw2\">asn</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    DeltaT <span class=\"sy0\">=</span> <span class=\"nu0\">0.1</span><br/>    PendLength <span class=\"sy0\">=</span> <span class=\"nu0\">150</span><br/>    FixX <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw3\">WindowWidth</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    FixY <span class=\"sy0\">=</span> <span class=\"nu0\">40</span><br/>\u00a0<br/>    <span class=\"kw1\">timer</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>swing<span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>swing<span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"cls\"</span><br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"discard\"</span><br/>\u00a0<br/>    PlumbobX <span class=\"sy0\">=</span> FixX <span class=\"sy0\">+</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">sin</span><span class=\"br0\">(</span>Angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> PendLength<span class=\"br0\">)</span><br/>    PlumbobY <span class=\"sy0\">=</span> FixY <span class=\"sy0\">+</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">cos</span><span class=\"br0\">(</span>Angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> PendLength<span class=\"br0\">)</span><br/>    AngAccel <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">9.81</span> <span class=\"sy0\">/</span> PendLength <span class=\"sy0\">*</span> <span class=\"kw2\">sin</span><span class=\"br0\">(</span>Angle<span class=\"br0\">)</span><br/>    AngVelocity <span class=\"sy0\">=</span> AngVelocity <span class=\"sy0\">+</span> AngAccel <span class=\"sy0\">*</span> DeltaT<br/>    Angle <span class=\"sy0\">=</span> Angle <span class=\"sy0\">+</span> AngVelocity <span class=\"sy0\">*</span> DeltaT<br/>\u00a0<br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"backcolor black\"</span><br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"place \"</span>;FixX;<span class=\"st0\">\" \"</span>;FixY<br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"circlefilled 3\"</span><br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"line \"</span>;FixX;<span class=\"st0\">\" \"</span>;FixY;<span class=\"st0\">\" \"</span>;PlumbobX;<span class=\"st0\">\" \"</span>;PlumbobY<br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"backcolor red\"</span><br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"circlefilled 10\"</span><br/>\u00a0<br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>quit.main<span class=\"br0\">]</span><br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>main<br/>    <span class=\"kw1\">end</span></pre>"}, {"lang": "Lingo", "loc": 43, "block": "<pre class=\"text highlighted_source\">global RODLEN, GRAVITY, DT<br/>global velocity, acceleration, angle, posX, posY<br/>\u00a0<br/>on startMovie<br/>\u00a0<br/>    -- window properties<br/>    _movie.stage.title = \"Pendulum\"<br/>    _movie.stage.titlebarOptions.visible = TRUE<br/>    _movie.stage.rect = rect(0, 0, 400, 400)<br/>    _movie.centerStage = TRUE<br/>    _movie.puppetTempo(30)<br/>\u00a0<br/>    RODLEN = 180<br/>    GRAVITY = -9.8<br/>    DT = 0.03<br/>\u00a0<br/>    velocity = 0.0<br/>    acceleration = 0.0<br/>    angle = PI/3<br/>    posX = 200 - sin(angle) * RODLEN<br/>    posY = 100 + cos(angle) * RODLEN    <br/>    paint()<br/>\u00a0<br/>    -- show the window<br/>    _movie.stage.visible = TRUE<br/>end<br/>\u00a0<br/>on enterFrame<br/>    acceleration = GRAVITY * sin(angle)<br/>    velocity = velocity + acceleration * DT<br/>    angle = angle + velocity * DT<br/>    posX = 200 - sin(angle) * rodLen<br/>    posY = 100 + cos(angle) * rodLen<br/>    paint()<br/>end<br/>\u00a0<br/>on paint<br/>    img = _movie.stage.image<br/>    img.fill(img.rect, rgb(255,255,255))<br/>    img.fill(point(200-5, 100-5), point(200+5, 100+5), [#shapeType:#oval,#color:rgb(0,0,0)])<br/>    img.draw(point(200, 100), point(posX, posY), [#color:rgb(0,0,0)])<br/>    img.fill(point(posX-20, posY-20), point(posX+20, posY+20), [#shapeType:#oval,#lineSize:1,#bgColor:rgb(0,0,0),#color:rgb(255,255,0)])<br/>end</pre>"}, {"lang": "Logo", "loc": 29, "block": "<pre class=\"text highlighted_source\">make \"angle 45<br/>make \"L 1<br/>make \"bob 10<br/>\u00a0<br/>to draw.pendulum<br/>  clearscreen<br/>  seth\u00a0:angle+180\t\t; down on screen is 180<br/>  forward\u00a0:L*100-:bob<br/>  penup<br/>  forward\u00a0:bob<br/>  pendown<br/>  arc 360\u00a0:bob<br/>end<br/>\u00a0<br/>make \"G   9.80665<br/>make \"dt  1/30<br/>make \"acc 0<br/>make \"vel 0<br/>\u00a0<br/>to step.pendulum<br/>  make \"acc  -:G /\u00a0:L * sin\u00a0:angle<br/>  make \"vel  \u00a0:vel   +\u00a0:acc *\u00a0:dt<br/>  make \"angle\u00a0:angle +\u00a0:vel *\u00a0:dt<br/>  wait\u00a0:dt*60<br/>  draw.pendulum<br/>end<br/>\u00a0<br/>hideturtle<br/>until [key?] [step.pendulum]</pre>"}, {"lang": "Lua", "loc": 30, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> degToRad<span class=\"br0\">(</span> d <span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> d <span class=\"sy0\">*</span> <span class=\"nu0\">0.01745329251</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> love<span class=\"sy0\">.</span>load<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    g <span class=\"sy0\">=</span> love<span class=\"sy0\">.</span>graphics<br/>    rodLen<span class=\"sy0\">,</span> gravity<span class=\"sy0\">,</span> velocity<span class=\"sy0\">,</span> acceleration <span class=\"sy0\">=</span> <span class=\"nu0\">260</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><br/>    halfWid<span class=\"sy0\">,</span> damp <span class=\"sy0\">=</span> g<span class=\"sy0\">.</span>getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">.989</span><br/>    posX<span class=\"sy0\">,</span> posY<span class=\"sy0\">,</span> angle <span class=\"sy0\">=</span> halfWid<br/>    TWO_PI<span class=\"sy0\">,</span> angle <span class=\"sy0\">=</span> <span class=\"kw3\">math.pi</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> degToRad<span class=\"br0\">(</span> <span class=\"nu0\">90</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> love<span class=\"sy0\">.</span>update<span class=\"br0\">(</span> dt <span class=\"br0\">)</span><br/>    acceleration <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>gravity <span class=\"sy0\">/</span> rodLen <span class=\"sy0\">*</span> <span class=\"kw3\">math.sin</span><span class=\"br0\">(</span> angle <span class=\"br0\">)</span><br/>    angle <span class=\"sy0\">=</span> angle <span class=\"sy0\">+</span> velocity<span class=\"sy0\">;</span> <span class=\"kw1\">if</span> angle <span class=\"sy0\">&gt;</span> TWO_PI <span class=\"kw1\">then</span> angle <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">end</span><br/>    velocity <span class=\"sy0\">=</span> velocity <span class=\"sy0\">+</span> acceleration<br/>    velocity <span class=\"sy0\">=</span> velocity <span class=\"sy0\">*</span> damp<br/>    posX <span class=\"sy0\">=</span> halfWid <span class=\"sy0\">+</span> <span class=\"kw3\">math.sin</span><span class=\"br0\">(</span> angle <span class=\"br0\">)</span> <span class=\"sy0\">*</span> rodLen<br/>    posY <span class=\"sy0\">=</span> <span class=\"kw3\">math.cos</span><span class=\"br0\">(</span> angle <span class=\"br0\">)</span> <span class=\"sy0\">*</span> rodLen<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> love<span class=\"sy0\">.</span>draw<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    g<span class=\"sy0\">.</span>setColor<span class=\"br0\">(</span> <span class=\"nu0\">250</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">250</span> <span class=\"br0\">)</span><br/>    g<span class=\"sy0\">.</span>circle<span class=\"br0\">(</span> <span class=\"st0\">\"fill\"</span><span class=\"sy0\">,</span> halfWid<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span> <span class=\"br0\">)</span><br/>    g<span class=\"sy0\">.</span>line<span class=\"br0\">(</span> halfWid<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> posX<span class=\"sy0\">,</span> posY <span class=\"br0\">)</span><br/>    g<span class=\"sy0\">.</span>setColor<span class=\"br0\">(</span> <span class=\"nu0\">250</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span> <span class=\"br0\">)</span><br/>    g<span class=\"sy0\">.</span>circle<span class=\"br0\">(</span> <span class=\"st0\">\"fill\"</span><span class=\"sy0\">,</span> posX<span class=\"sy0\">,</span> posY<span class=\"sy0\">,</span> <span class=\"nu0\">20</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 5, "block": "<pre class=\"text highlighted_source\">freq = 8; length = freq^(-1/2);<br/>Animate[Graphics[<br/>  List[{Line[{{0, 0}, length {Sin[T], -Cos[T]}} /. {T -&gt; (Pi/6) Cos[2 Pi freq t]}], PointSize[Large], <br/>               Point[{length {Sin[T], -Cos[T]}} /. {T -&gt; (Pi/6) Cos[2 Pi freq t]}]}], <br/>  PlotRange -&gt; {{-0.3, 0.3}, {-0.5, 0}}], {t, 0, 1}, AnimationRate -&gt; 0.07]</pre>"}, {"lang": "MATLAB", "loc": 68, "block": "<pre class=\"matlab highlighted_source\"><span class=\"co1\">%This is a numerical simulation of a pendulum with a massless pivot arm.</span><br/>\u00a0<br/><span class=\"co1\">%% User Defined Parameters</span><br/><span class=\"co1\">%Define external parameters</span><br/>g = -<span class=\"nu0\">9.8</span>;<br/>deltaTime = <span class=\"nu0\">1</span>/<span class=\"nu0\">50</span>; <span class=\"co1\">%Decreasing this will increase simulation accuracy</span><br/>endTime = <span class=\"nu0\">16</span>;<br/>\u00a0<br/><span class=\"co1\">%Define pendulum</span><br/>rodPivotPoint = <span class=\"br0\">[</span><span class=\"nu0\">2</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span>; <span class=\"co1\">%rectangular coordinates</span><br/>rodLength = <span class=\"nu0\">1</span>;<br/>mass = <span class=\"nu0\">1</span>; <span class=\"co1\">%of the bob</span><br/>radius = .2; <span class=\"co1\">%of the bob</span><br/>theta = <span class=\"nu0\">45</span>; <span class=\"co1\">%degrees, defines initial position of the bob</span><br/>velocity = <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span>; <span class=\"co1\">%cylindrical coordinates; first entry is radial velocity,</span><br/>                  <span class=\"co1\">%second entry is angular velocity</span><br/>\u00a0<br/><span class=\"co1\">%% Simulation</span><br/>assert<span class=\"br0\">(</span>radius &lt; rodLength,<span class=\"co2\">'Pendulum bob radius must be less than the length of the rod.'</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>position = rodPivotPoint - <span class=\"br0\">(</span>rodLength*<span class=\"br0\">[</span>-sind<span class=\"br0\">(</span>theta<span class=\"br0\">)</span> cosd<span class=\"br0\">(</span>theta<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>; <span class=\"co1\">%in rectangular coordinates</span><br/>\u00a0<br/><span class=\"co1\">%Generate graphics, render pendulum</span><br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/figure.html\"><span class=\"kw2\">figure</span></a>;<br/>axesHandle = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/gca.html\"><span class=\"kw2\">gca</span></a>;<br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/xlim.html\"><span class=\"kw2\">xlim</span></a><span class=\"br0\">(</span>axesHandle, <span class=\"br0\">[</span><span class=\"br0\">(</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> - rodLength - radius<span class=\"br0\">)</span> <span class=\"br0\">(</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> + rodLength + radius<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span>;<br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/ylim.html\"><span class=\"kw2\">ylim</span></a><span class=\"br0\">(</span>axesHandle, <span class=\"br0\">[</span><span class=\"br0\">(</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> - rodLength - radius<span class=\"br0\">)</span> <span class=\"br0\">(</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> + rodLength + radius<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span>;<br/>\u00a0<br/>rectHandle = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/rectangle.html\"><span class=\"kw2\">rectangle</span></a><span class=\"br0\">(</span><span class=\"co2\">'Position'</span>,<span class=\"br0\">[</span><span class=\"br0\">(</span>position - radius/<span class=\"nu0\">2</span><span class=\"br0\">)</span> radius radius<span class=\"br0\">]</span>,<span class=\"sy0\">...</span><br/>    <span class=\"co2\">'Curvature'</span>,<span class=\"br0\">[</span><span class=\"nu0\">1</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span>,<span class=\"co2\">'FaceColor'</span>,<span class=\"co2\">'g'</span><span class=\"br0\">)</span>; <span class=\"co1\">%Pendulum bob</span><br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/hold.html\"><span class=\"kw2\">hold</span></a> on<br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/plot.html\"><span class=\"kw2\">plot</span></a><span class=\"br0\">(</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>,rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>,<span class=\"co2\">'^'</span><span class=\"br0\">)</span>; <span class=\"co1\">%pendulum pivot</span><br/>lineHandle = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/line.html\"><span class=\"kw2\">line</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> position<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span>,<span class=\"sy0\">...</span><br/>    <span class=\"br0\">[</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> position<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>; <span class=\"co1\">%pendulum rod</span><br/><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/hold.html\"><span class=\"kw2\">hold</span></a> off<br/>\u00a0<br/><span class=\"co1\">%Run simulation, all calculations are performed in cylindrical coordinates</span><br/><span class=\"kw1\">for</span> time = <span class=\"br0\">(</span>deltaTime:deltaTime:endTime<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/drawnow.html\"><span class=\"kw2\">drawnow</span></a>; <span class=\"co1\">%Forces MATLAB to render the pendulum</span><br/>\u00a0<br/>    <span class=\"co1\">%Find total force</span><br/>    gravitationalForceCylindrical = <span class=\"br0\">[</span>mass*g*cosd<span class=\"br0\">(</span>theta<span class=\"br0\">)</span> mass*g*sind<span class=\"br0\">(</span>theta<span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>\u00a0<br/>    <span class=\"co1\">%This code is just incase you want to add more forces,e.g friction</span><br/>    totalForce = gravitationalForceCylindrical; <br/>\u00a0<br/>    <span class=\"co1\">%If the rod isn't massless or is a spring, etc., modify this line</span><br/>    <span class=\"co1\">%accordingly</span><br/>    rodForce = <span class=\"br0\">[</span>-totalForce<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span>; <span class=\"co1\">%cylindrical coordinates</span><br/>\u00a0<br/>    totalForce = totalForce + rodForce;<br/>\u00a0<br/>    acceleration = totalForce / mass; <span class=\"co1\">%F = ma</span><br/>    velocity = velocity + acceleration * deltaTime;<br/>    rodLength = rodLength + velocity<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> * deltaTime;<br/>    theta = theta + velocity<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> * deltaTime; <span class=\"co1\">% Attention!! Mistake here. </span><br/>    <span class=\"co1\">% Velocity needs to be divided by pendulum length and scaled to degrees:</span><br/>    <span class=\"co1\">% theta = theta + velocity(2) * deltaTime/rodLength/pi*180;</span><br/>\u00a0<br/>    position = rodPivotPoint - <span class=\"br0\">(</span>rodLength*<span class=\"br0\">[</span>-sind<span class=\"br0\">(</span>theta<span class=\"br0\">)</span> cosd<span class=\"br0\">(</span>theta<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>    <span class=\"co1\">%Update figure with new position info</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/set.html\"><span class=\"kw2\">set</span></a><span class=\"br0\">(</span>rectHandle,<span class=\"co2\">'Position'</span>,<span class=\"br0\">[</span><span class=\"br0\">(</span>position - radius/<span class=\"nu0\">2</span><span class=\"br0\">)</span> radius radius<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/set.html\"><span class=\"kw2\">set</span></a><span class=\"br0\">(</span>lineHandle,<span class=\"co2\">'XData'</span>,<span class=\"br0\">[</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> position<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span>,<span class=\"co2\">'YData'</span>,<span class=\"sy0\">...</span><br/>        <span class=\"br0\">[</span>rodPivotPoint<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> position<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "ooRexx", "loc": 38, "block": "<pre class=\"oorexx highlighted_source\">\u00a0<br/>pendulum = <span class=\"sy0\">.</span>pendulum~new<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><br/>\u00a0<br/>before = <span class=\"sy0\">.</span>datetime~new<br/><span class=\"kw1\">do</span> <span class=\"nu0\">100</span>         <span class=\"co1\">-- somewhat arbitrary loop count</span><br/>  <span class=\"kw1\">call</span> syssleep <span class=\"sy0\">.</span>2<br/>  now = <span class=\"sy0\">.</span>datetime~new<br/>  pendulum~update<span class=\"br0\">(</span>now - before<span class=\"br0\">)</span><br/>  before = now<br/>  <span class=\"kw1\">say</span> <span class=\"st0\">\" X:\"</span> pendulum~x <span class=\"st0\">\" Y:\"</span> pendulum~y<br/><span class=\"kw3\">end</span><br/>\u00a0<br/>::class pendulum<br/>::method init<br/>  <span class=\"kw1\">expose</span> <span class=\"kw6\">length</span> theta x y velocity<br/>  <span class=\"kw1\">use</span> <span class=\"kw1\">arg</span> <span class=\"kw6\">length</span>, theta<br/>  x = rxcalcsin<span class=\"br0\">(</span>theta<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw6\">length</span><br/>  y = rxcalccos<span class=\"br0\">(</span>theta<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"kw6\">length</span><br/>  velocity = <span class=\"nu0\">0</span><br/>\u00a0<br/>::<span class=\"kw1\">attribute</span> x GET<br/>::<span class=\"kw1\">attribute</span> y GET<br/>\u00a0<br/>::<span class=\"kw1\">constant</span> g -<span class=\"nu0\">9.81</span>   <span class=\"co1\">-- acceleration due to gravity</span><br/>\u00a0<br/>::method update<br/>  <span class=\"kw1\">expose</span> <span class=\"kw6\">length</span> theta x y velocity<br/>  <span class=\"kw1\">use</span> <span class=\"kw1\">arg</span> duration<br/>  acceleration = self~g <span class=\"sy0\">/</span> <span class=\"kw6\">length</span> <span class=\"sy0\">*</span> rxcalcsin<span class=\"br0\">(</span>theta<span class=\"br0\">)</span><br/>  durationSeconds = duration~microseconds <span class=\"sy0\">/</span> <span class=\"nu0\">1000000</span><br/>  x = rxcalcsin<span class=\"br0\">(</span>theta, <span class=\"kw6\">length</span><span class=\"br0\">)</span><br/>  y = rxcalccos<span class=\"br0\">(</span>theta, <span class=\"kw6\">length</span><span class=\"br0\">)</span><br/>  velocity = velocity + acceleration <span class=\"sy0\">*</span> durationSeconds<br/>  theta = theta + velocity <span class=\"sy0\">*</span> durationSeconds<br/>\u00a0<br/>::requires rxmath library<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Oz", "loc": 82, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"br0\">[</span>QTk<span class=\"br0\">]</span> = <span class=\"br0\">{</span>Link <span class=\"br0\">[</span><span class=\"st0\">'x-oz://system/wp/QTk.ozf'</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>\u00a0<br/>  Pi = 3<span class=\"sy0\">.</span>14159265<br/>\u00a0<br/>  <span class=\"kw1\">class</span> <span class=\"re2\">PendulumModel</span><br/>     <span class=\"kw1\">feat</span><br/>\tK<br/>     <span class=\"kw1\">attr</span><br/>\tangle<br/>\tvelocity<br/>\u00a0<br/>     <span class=\"kw1\">meth</span> <span class=\"re4\">init</span><span class=\"br0\">(</span>length:L       <span class=\"sy0\">&lt;=</span> 1<span class=\"sy0\">.</span>0    <span class=\"co1\">%% meters</span><br/>\t       gravity:G      <span class=\"sy0\">&lt;=</span> 9<span class=\"sy0\">.</span>81   <span class=\"co1\">%% m/s\u00b2</span><br/>\t       initialAngle:A <span class=\"sy0\">&lt;=</span> Pi<span class=\"sy0\">/</span>2<span class=\"sy0\">.</span><span class=\"br0\">)</span> <span class=\"co1\">%% radians</span><br/>\t<span class=\"kw1\">self</span><span class=\"sy0\">.</span>K = <span class=\"sy0\">~</span>G <span class=\"sy0\">/</span> L<br/>\tangle <span class=\"sy0\">:=</span> A<br/>\tvelocity <span class=\"sy0\">:=</span> 0<span class=\"sy0\">.</span>0<br/>     <span class=\"kw1\">end</span><br/>\u00a0<br/>     <span class=\"kw1\">meth</span> <span class=\"re4\">nextAngle</span><span class=\"br0\">(</span>deltaT:DeltaTMS <span class=\"co1\">%% milliseconds</span><br/>\t\t   \u00a0?Angle<span class=\"br0\">)</span>         <span class=\"co1\">%% radians</span><br/>        DeltaT = <span class=\"br0\">{</span>Int<span class=\"sy0\">.</span>toFloat DeltaTMS<span class=\"br0\">}</span> <span class=\"sy0\">/</span> 1000<span class=\"sy0\">.</span>0 <span class=\"co1\">%% seconds</span><br/>        Acceleration = <span class=\"kw1\">self</span><span class=\"sy0\">.</span>K <span class=\"sy0\">*</span> <span class=\"br0\">{</span>Sin <span class=\"sy0\">@</span>angle<span class=\"br0\">}</span><br/>     <span class=\"kw1\">in</span><br/>        velocity <span class=\"sy0\">:=</span> <span class=\"sy0\">@</span>velocity <span class=\"sy0\">+</span> Acceleration <span class=\"sy0\">*</span> DeltaT<br/>        angle <span class=\"sy0\">:=</span> <span class=\"sy0\">@</span>angle <span class=\"sy0\">+</span> <span class=\"sy0\">@</span>velocity <span class=\"sy0\">*</span> DeltaT<br/>        Angle = <span class=\"sy0\">@</span>angle<br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\">%% Animates a pendulum on a given canvas.</span><br/>  <span class=\"kw1\">class</span> <span class=\"re2\">PendulumAnimation</span> <span class=\"kw1\">from</span> Time<span class=\"sy0\">.</span>repeat<br/>     <span class=\"kw1\">feat</span><br/>        Pend<br/>        Rod<br/>        Bob<br/>        home:pos<span class=\"br0\">(</span>x:160 y:50<span class=\"br0\">)</span><br/>        length:140<span class=\"sy0\">.</span>0<br/>\tdelay<br/>\u00a0<br/>     <span class=\"kw1\">meth</span> <span class=\"re4\">init</span><span class=\"br0\">(</span>Pendulum Canvas delay:Delay <span class=\"sy0\">&lt;=</span> 25<span class=\"br0\">)</span> <span class=\"co1\">%% milliseconds</span><br/>\t<span class=\"kw1\">self</span><span class=\"sy0\">.</span>Pend = Pendulum<br/>\t<span class=\"kw1\">self</span><span class=\"sy0\">.</span>delay = Delay<br/>\t<span class=\"co1\">%% plate and pivot</span><br/>        <span class=\"br0\">{</span>Canvas create<span class=\"br0\">(</span>line 0 <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>y 320 <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>y width:2 fill:grey50<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">{</span>Canvas create<span class=\"br0\">(</span>oval 155 <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>y<span class=\"sy0\">-</span>5 165 <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>y<span class=\"sy0\">+</span>5 fill:grey50 outline:black<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\t<span class=\"co1\">%% the pendulum itself</span><br/>\t<span class=\"kw1\">self</span><span class=\"sy0\">.</span>Rod = <span class=\"br0\">{</span>Canvas create<span class=\"br0\">(</span>line 1 1 1 1 width:3 fill:black handle:$<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"kw1\">self</span><span class=\"sy0\">.</span>Bob = <span class=\"br0\">{</span>Canvas create<span class=\"br0\">(</span>oval 1 1 2 2 fill:yellow outline:black handle:$<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>        <span class=\"co1\">%%</span><br/>        <span class=\"br0\">{</span><span class=\"kw1\">self</span> setRepAll<span class=\"br0\">(</span>action:Animate delay:Delay<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>     <span class=\"kw1\">end</span><br/>\u00a0<br/>     <span class=\"kw1\">meth</span> <span class=\"re4\">Animate</span><br/>\tTheta = <span class=\"br0\">{</span><span class=\"kw1\">self</span><span class=\"sy0\">.</span>Pend nextAngle<span class=\"br0\">(</span>deltaT:<span class=\"kw1\">self</span><span class=\"sy0\">.</span>delay $<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\t<span class=\"co1\">%% calculate x and y from angle</span><br/>\tX = <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>x <span class=\"sy0\">+</span> <span class=\"br0\">{</span>Float<span class=\"sy0\">.</span>toInt <span class=\"kw1\">self</span><span class=\"sy0\">.</span>length <span class=\"sy0\">*</span> <span class=\"br0\">{</span>Sin Theta<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\tY = <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>y <span class=\"sy0\">+</span> <span class=\"br0\">{</span>Float<span class=\"sy0\">.</span>toInt <span class=\"kw1\">self</span><span class=\"sy0\">.</span>length <span class=\"sy0\">*</span> <span class=\"br0\">{</span>Cos Theta<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>     <span class=\"kw1\">in</span><br/>\t<span class=\"co1\">%% update canvas</span><br/>\t<span class=\"kw1\">try</span><br/>\t   <span class=\"br0\">{</span><span class=\"kw1\">self</span><span class=\"sy0\">.</span>Rod setCoords<span class=\"br0\">(</span><span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>x <span class=\"kw1\">self</span><span class=\"sy0\">.</span>home<span class=\"sy0\">.</span>y X Y<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\t   <span class=\"br0\">{</span><span class=\"kw1\">self</span><span class=\"sy0\">.</span>Bob setCoords<span class=\"br0\">(</span>X<span class=\"sy0\">-</span>15 Y<span class=\"sy0\">-</span>15 X<span class=\"sy0\">+</span>15 Y<span class=\"sy0\">+</span>15<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">catch</span> system<span class=\"br0\">(</span>tk<span class=\"br0\">(</span>alreadyClosed <span class=\"sy0\">...</span><span class=\"br0\">)</span> <span class=\"sy0\">...</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"kw1\">skip</span> <span class=\"kw1\">end</span><br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  Pendulum = <span class=\"br0\">{</span>New PendulumModel init<span class=\"br0\">}</span><br/>\u00a0<br/>  Canvas<br/>  GUI = td<span class=\"br0\">(</span>title:<span class=\"st0\">\"Pendulum\"</span><br/>           canvas<span class=\"br0\">(</span>width:320 height:210 handle:?Canvas<span class=\"br0\">)</span><br/>           action:<span class=\"kw1\">proc</span> <span class=\"br0\">{</span><span class=\"re1\">$</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>Animation stop<span class=\"br0\">}</span> <span class=\"br0\">{</span>Window close<span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>          <span class=\"br0\">)</span><br/>  Window = <span class=\"br0\">{</span>QTk<span class=\"sy0\">.</span>build GUI<span class=\"br0\">}</span><br/>\u00a0<br/>  Animation = <span class=\"br0\">{</span>New PendulumAnimation init<span class=\"br0\">(</span>Pendulum Canvas<span class=\"br0\">)</span><span class=\"br0\">}</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Window show<span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Animation go<span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 70, "block": "<pre class=\"perl highlighted_source\">\u00a0<br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Tk<span class=\"sy0\">;</span> <br/><span class=\"kw2\">use</span> Math<span class=\"sy0\">::</span><span class=\"me2\">Trig</span> <span class=\"co2\">qw/:pi/</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$root</span> <span class=\"sy0\">=</span>  <span class=\"kw2\">new</span> MainWindow<span class=\"br0\">(</span> <span class=\"sy0\">-</span>title <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'Pendulum Animation'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$canvas</span> <span class=\"sy0\">=</span> <span class=\"re0\">$root</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Canvas</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>width <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">320</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>height <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$after_id</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$canvas</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">createLine</span><span class=\"br0\">(</span>   <span class=\"nu0\">0</span><span class=\"sy0\">,</span>  <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">320</span><span class=\"sy0\">,</span>  <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>tags <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"sy0\">/</span>plate<span class=\"sy0\">/</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>width <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'grey50'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">createOval</span><span class=\"br0\">(</span> <span class=\"nu0\">155</span><span class=\"sy0\">,</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">165</span><span class=\"sy0\">,</span>  <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>tags <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"sy0\">/</span>pivot outline<span class=\"sy0\">/</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'grey50'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">createLine</span><span class=\"br0\">(</span>   <span class=\"nu0\">1</span><span class=\"sy0\">,</span>   <span class=\"nu0\">1</span><span class=\"sy0\">,</span>    <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>tags <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"sy0\">/</span>rod width<span class=\"sy0\">/</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>width <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'black'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"co5\">$_</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">createOval</span><span class=\"br0\">(</span>   <span class=\"nu0\">1</span><span class=\"sy0\">,</span>   <span class=\"nu0\">1</span><span class=\"sy0\">,</span>    <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>tags <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"sy0\">/</span>bob outline<span class=\"sy0\">/</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'yellow'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$canvas</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">raise</span><span class=\"br0\">(</span><span class=\"st_h\">'pivot'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$canvas</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/pack.html\"><span class=\"kw3\">pack</span></a><span class=\"br0\">(</span><span class=\"sy0\">-</span>fill <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'both'</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>expand <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$Theta</span><span class=\"sy0\">,</span> <span class=\"re0\">$dTheta</span><span class=\"sy0\">,</span> <span class=\"re0\">$length</span><span class=\"sy0\">,</span> <span class=\"re0\">$homeX</span><span class=\"sy0\">,</span> <span class=\"re0\">$homeY</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>\t<span class=\"br0\">(</span><span class=\"nu0\">45</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">150</span><span class=\"sy0\">,</span> <span class=\"nu0\">160</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> show_pendulum <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$angle</span> <span class=\"sy0\">=</span> <span class=\"re0\">$Theta</span> <span class=\"sy0\">*</span> pi<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"re0\">$homeX</span> <span class=\"sy0\">+</span> <span class=\"re0\">$length</span> <span class=\"sy0\">*</span> <a href=\"http://perldoc.perl.org/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span><span class=\"re0\">$angle</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"re0\">$homeY</span> <span class=\"sy0\">+</span> <span class=\"re0\">$length</span> <span class=\"sy0\">*</span> <a href=\"http://perldoc.perl.org/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span><span class=\"re0\">$angle</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$canvas</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">coords</span><span class=\"br0\">(</span><span class=\"st_h\">'rod'</span><span class=\"sy0\">,</span> <span class=\"re0\">$homeX</span><span class=\"sy0\">,</span> <span class=\"re0\">$homeY</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$canvas</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">coords</span><span class=\"br0\">(</span><span class=\"st_h\">'bob'</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">sub</span> recompute_angle <span class=\"br0\">{</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$scaling</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3000.0</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"re0\">$length</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"co1\"># first estimate</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$firstDDTheta</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><a href=\"http://perldoc.perl.org/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span><span class=\"re0\">$Theta</span> <span class=\"sy0\">*</span> pi <span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$scaling</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$midDTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$dTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$firstDDTheta</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$midTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$Theta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$dTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$midDTheta</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"co1\"># second estimate</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$midDDTheta</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><a href=\"http://perldoc.perl.org/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span><span class=\"re0\">$midTheta</span> <span class=\"sy0\">*</span> pi<span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$scaling</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$midDTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$dTheta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$firstDDTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$midDDTheta</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$midTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$Theta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$dTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$midDTheta</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"co1\"># again, first</span><br/>  <span class=\"re0\">$midDDTheta</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><a href=\"http://perldoc.perl.org/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span><span class=\"re0\">$midTheta</span> <span class=\"sy0\">*</span> pi<span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$scaling</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$lastDTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$midDTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$midDDTheta</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$lastTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$midTheta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$midDTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$lastDTheta</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"co1\"># again, second</span><br/>  <span class=\"kw1\">my</span> <span class=\"re0\">$lastDDTheta</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><a href=\"http://perldoc.perl.org/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span><span class=\"re0\">$lastTheta</span> <span class=\"sy0\">*</span> pi<span class=\"sy0\">/</span><span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"re0\">$scaling</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$lastDTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$midDTheta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$midDDTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$lastDDTheta</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$lastTheta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$midTheta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$midDTheta</span> <span class=\"sy0\">+</span> <span class=\"re0\">$lastDTheta</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>  <span class=\"co1\"># Now put the values back in our globals</span><br/>  <span class=\"re0\">$dTheta</span>  <span class=\"sy0\">=</span> <span class=\"re0\">$lastDTheta</span><span class=\"sy0\">;</span><br/>  <span class=\"re0\">$Theta</span> <span class=\"sy0\">=</span> <span class=\"re0\">$lastTheta</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">sub</span> animate <span class=\"br0\">{</span><br/>  recompute_angle<span class=\"sy0\">;</span><br/>  show_pendulum<span class=\"sy0\">;</span><br/>  <span class=\"re0\">$after_id</span> <span class=\"sy0\">=</span> <span class=\"re0\">$root</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">15</span> <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span>animate<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>show_pendulum<span class=\"sy0\">;</span><br/><span class=\"re0\">$after_id</span> <span class=\"sy0\">=</span> <span class=\"re0\">$root</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">500</span> <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span>animate<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">$canvas</span><span class=\"sy0\">-&gt;</span><a href=\"http://perldoc.perl.org/functions/bind.html\"><span class=\"kw3\">bind</span></a><span class=\"br0\">(</span><span class=\"st_h\">'&lt;Destroy&gt;'</span> <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span><span class=\"re0\">$after_id</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">cancel</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>MainLoop<span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Phix", "loc": 92, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\animate_pendulum2.exw<br/>-- ==================================<br/>--<br/>include pGUI.e<br/>\u00a0<br/>Ihandle dlg, canvas, timer<br/>cdCanvas cdcanvas<br/>\u00a0<br/>constant g = 50<br/>\u00a0<br/>atom angle = PI/2,<br/>     velocity = 0<br/>integer w, h, len = 0<br/>\u00a0<br/>function redraw_cb(Ihandle /*ih*/, integer /*posx*/, integer /*posy*/)<br/>    {w, h} = IupGetIntInt(canvas, \"DRAWSIZE\")<br/>    cdCanvasActivate(cdcanvas)<br/>    cdCanvasClear(cdcanvas)<br/>    -- new suspension point:<br/>    integer sX = floor(w/2)<br/>    integer sY = floor(h/16)<br/>    -- repaint:<br/>    integer eX = floor(len*sin(angle)+sX)<br/>    integer eY = floor(len*cos(angle)+sY)<br/>    cdCanvasSetForeground(cdcanvas, CD_CYAN)<br/>    cdCanvasLine(cdcanvas, sX, h-sY, eX, h-eY)<br/>    cdCanvasSetForeground(cdcanvas, CD_DARK_GREEN)<br/>    cdCanvasSector(cdcanvas, sX, h-sY, 5, 5, 0, 360)<br/>    cdCanvasSetForeground(cdcanvas, CD_BLUE)<br/>    cdCanvasSector(cdcanvas, eX, h-eY, 35, 35, 0, 360)<br/>    cdCanvasFlush(cdcanvas)<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function timer_cb(Ihandle /*ih*/)<br/>    integer newlen = floor(w/2)-30<br/>    if newlen!=len then<br/>        len = newlen<br/>        atom tmp = 2*g*len*(cos(angle))<br/>        velocity = iff(tmp&lt;0?0:sqrt(tmp)*sign(velocity))<br/>    end if<br/>    atom dt = 0.2/w<br/>    atom delta = -len*sin(angle)*g<br/>    velocity += dt*delta<br/>    angle += dt*velocity<br/>    IupUpdate(canvas)<br/>    return IUP_IGNORE<br/>end function<br/>\u00a0<br/>function map_cb(Ihandle ih)<br/>    atom res = IupGetDouble(NULL, \"SCREENDPI\")/25.4<br/>    IupGLMakeCurrent(canvas)<br/>    cdcanvas = cdCreateCanvas(CD_GL, \"10x10\u00a0%g\", {res})<br/>    cdCanvasSetBackground(cdcanvas, CD_PARCHMENT)<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function canvas_resize_cb(Ihandle /*canvas*/)<br/>    integer {canvas_width, canvas_height} = IupGetIntInt(canvas, \"DRAWSIZE\")<br/>    atom res = IupGetDouble(NULL, \"SCREENDPI\")/25.4<br/>    cdCanvasSetAttribute(cdcanvas, \"SIZE\", \"%dx%d\u00a0%g\", {canvas_width, canvas_height, res})<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function esc_close(Ihandle /*ih*/, atom c)<br/>    if c=K_ESC then return IUP_CLOSE end if<br/>    return IUP_CONTINUE<br/>end function<br/>\u00a0<br/>procedure main()<br/>    IupOpen()<br/>\u00a0<br/>    canvas = IupGLCanvas()<br/>    IupSetAttribute(canvas, \"RASTERSIZE\", \"640x380\")<br/>    IupSetCallback(canvas, \"MAP_CB\", Icallback(\"map_cb\"))<br/>    IupSetCallback(canvas, \"ACTION\", Icallback(\"redraw_cb\"))<br/>    IupSetCallback(canvas, \"RESIZE_CB\", Icallback(\"canvas_resize_cb\"))<br/>\u00a0<br/>    timer = IupTimer(Icallback(\"timer_cb\"), 20)<br/>\u00a0<br/>    dlg = IupDialog(canvas)<br/>    IupSetAttribute(dlg, \"TITLE\", \"Animated Pendulum\")<br/>    IupSetCallback(dlg, \"K_ANY\", Icallback(\"esc_close\"))<br/>\u00a0<br/>    IupShow(dlg)<br/>    IupSetAttribute(canvas, \"RASTERSIZE\", NULL)<br/>    IupMainLoop()<br/>    IupClose()<br/>end procedure<br/>\u00a0<br/>main()</pre>"}, {"lang": "PicoLisp", "loc": 15, "block": "<pre class=\"text highlighted_source\">(load \"@lib/math.l\")<br/>\u00a0<br/>(de pendulum (X Y Len)<br/>   (let (Angle pi/2  V 0)<br/>      (call 'clear)<br/>      (call 'tput \"cup\" Y X)<br/>      (prin '+)<br/>      (call 'tput \"cup\" 1 (+ X Len))<br/>      (until (key 25)                        # 25 ms<br/>         (let A (*/ (sin Angle) -9.81 1.0)<br/>            (inc 'V (*/ A 40))               # DT = 25 ms = 1/40 sec<br/>            (inc 'Angle (*/ V 40)) )<br/>         (call 'tput \"cup\"<br/>            (+ Y (*/ Len (cos Angle) 2.2))   # Compensate for aspect ratio<br/>            (+ X (*/ Len (sin Angle) 1.0)) ) ) ) )</pre>"}, {"lang": "Prolog", "loc": 81, "block": "<pre class=\"prolog highlighted_source\"><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>pce<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>pendulum <span class=\"sy1\">:-</span><br/>\tnew<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> window<span class=\"br0\">(</span><span class=\"st_h\">'Pendulum'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> size<span class=\"sy4\">,</span> size<span class=\"br0\">(</span><span class=\"nu0\">560</span><span class=\"sy4\">,</span> <span class=\"nu0\">300</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Line<span class=\"sy4\">,</span> line<span class=\"br0\">(</span><span class=\"nu0\">80</span><span class=\"sy4\">,</span> <span class=\"nu0\">50</span><span class=\"sy4\">,</span> <span class=\"nu0\">480</span><span class=\"sy4\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> Line<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Circle<span class=\"sy4\">,</span> circle<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Circle<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span>  colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Boule<span class=\"sy4\">,</span> circle<span class=\"br0\">(</span><span class=\"nu0\">60</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Boule<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span>  colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> Circle<span class=\"sy4\">,</span> point<span class=\"br0\">(</span><span class=\"nu0\">270</span><span class=\"sy4\">,</span><span class=\"nu0\">40</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Circle<span class=\"sy4\">,</span> handle<span class=\"sy4\">,</span> handle<span class=\"br0\">(</span>h<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span> w<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span> in<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Boule<span class=\"sy4\">,</span> handle<span class=\"sy4\">,</span> handle<span class=\"br0\">(</span>h<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span> w<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span> out<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Circle<span class=\"sy4\">,</span> connect<span class=\"sy4\">,</span> Boule<span class=\"sy4\">,</span> link<span class=\"br0\">(</span>in<span class=\"sy4\">,</span> out<span class=\"sy4\">,</span> line<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span><span class=\"nu0\">0</span><span class=\"sy4\">,</span>none<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnew<span class=\"br0\">(</span>Anim<span class=\"sy4\">,</span> animation<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> <span class=\"nu0\">0.0</span><span class=\"sy4\">,</span> Boule<span class=\"sy4\">,</span> <span class=\"nu0\">200.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> done_message<span class=\"sy4\">,</span> and<span class=\"br0\">(</span>message<span class=\"br0\">(</span>Anim<span class=\"sy4\">,</span> free<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span>Boule<span class=\"sy4\">,</span> free<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span>Circle<span class=\"sy4\">,</span> free<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t\t\t  message<span class=\"br0\">(</span><span class=\"sy5\">@</span>receiver<span class=\"sy4\">,</span>destroy<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>Anim?mytimer<span class=\"sy4\">,</span> start<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">open</span></a><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_begin_class<span class=\"br0\">(</span>animation<span class=\"br0\">(</span>window<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> boule<span class=\"sy4\">,</span> len_pendulum<span class=\"br0\">)</span><span class=\"sy4\">,</span> object<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>window<span class=\"sy4\">,</span> object<span class=\"sy4\">,</span>  both<span class=\"sy4\">,</span> \"Display window\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>boule<span class=\"sy4\">,</span>  object<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span>  \"bowl of the pendulum\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>len_pendulum<span class=\"sy4\">,</span>    object<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span>  \"len of the pendulum\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>angle<span class=\"sy4\">,</span>  object<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span>  \"angle with the horizontal\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>delta<span class=\"sy4\">,</span>    object<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span>  \"increment of the angle\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>variable<span class=\"br0\">(</span>mytimer<span class=\"sy4\">,</span> timer<span class=\"sy4\">,</span> both<span class=\"sy4\">,</span> \"timer of the animation\"<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>initialise<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> W<span class=\"sy4\">:</span>object<span class=\"sy4\">,</span> A<span class=\"sy4\">:</span>object<span class=\"sy4\">,</span> B <span class=\"sy4\">:</span> object<span class=\"sy4\">,</span> L<span class=\"sy4\">:</span>object<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>        \"Creation of the object\"<span class=\"sy4\">::</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> window<span class=\"sy4\">,</span> W<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> A<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> boule<span class=\"sy4\">,</span> B<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> len_pendulum<span class=\"sy4\">,</span> L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>        send<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> delta<span class=\"sy4\">,</span> <span class=\"nu0\">0.01</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> mytimer<span class=\"sy4\">,</span> new<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> timer<span class=\"br0\">(</span><span class=\"nu0\">0.01</span><span class=\"sy4\">,</span>message<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> anim_message<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% method called when the object is destroyed</span><br/><span class=\"co1\">% first the timer is stopped</span><br/><span class=\"co1\">% then all the resources are freed</span><br/>unlink<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tsend<span class=\"br0\">(</span>P?mytimer<span class=\"sy4\">,</span> stop<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> send_super<span class=\"sy4\">,</span> unlink<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">% message processed by the timer</span><br/>anim_message<span class=\"br0\">(</span>P<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><span class=\"sy6\">&gt;</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> A<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> len_pendulum<span class=\"sy4\">,</span> L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tcalc<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> L<span class=\"sy4\">,</span> X<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> window<span class=\"sy4\">,</span> W<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> boule<span class=\"sy4\">,</span> B<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>W<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> point<span class=\"br0\">(</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<span class=\"co1\">% computation of the next position</span><br/>\tget<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> delta<span class=\"sy4\">,</span> D<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnext_Angle<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> D<span class=\"sy4\">,</span> NA<span class=\"sy4\">,</span> ND<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> angle<span class=\"sy4\">,</span> NA<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>P<span class=\"sy4\">,</span> delta<span class=\"sy4\">,</span> ND<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"sy1\">:-</span> pce_end_class<span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% computation of the position of the bowl.</span><br/>calc<span class=\"br0\">(</span>Ang<span class=\"sy4\">,</span> Len<span class=\"sy4\">,</span> X<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tX <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Len <span class=\"sy3\">*</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">cos</span></a><span class=\"br0\">(</span>Ang<span class=\"br0\">)</span><span class=\"sy3\">+</span> <span class=\"nu0\">250</span><span class=\"sy4\">,</span><br/>\tY <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Len <span class=\"sy3\">*</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">sin</span></a><span class=\"br0\">(</span>Ang<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"nu0\">20</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">% computation of the next angle</span><br/><span class=\"co1\">% if we reach 0 or pi, delta change.</span><br/>next_Angle<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> D<span class=\"sy4\">,</span> NA<span class=\"sy4\">,</span> ND<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tNA <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> D <span class=\"sy3\">+</span> A<span class=\"sy4\">,</span><br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>D <span class=\"sy6\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span>   <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">abs</span></a><span class=\"br0\">(</span>pi<span class=\"sy3\">-</span>NA<span class=\"br0\">)</span> <span class=\"sy6\">&lt;</span> <span class=\"nu0\">0.01</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">(</span>D <span class=\"sy6\">&lt;</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">abs</span></a><span class=\"br0\">(</span>NA<span class=\"br0\">)</span> <span class=\"sy6\">&lt;</span> <span class=\"nu0\">0.01</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span><br/>\t  ND <span class=\"sy6\">=</span> <span class=\"sy3\">-</span> D<span class=\"sy4\">;</span><br/>\t  ND <span class=\"sy6\">=</span> D<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 107, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span> handleError<span class=\"br0\">(</span>x, msg.s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> x<br/>    <span class=\"kw2\">MessageRequester</span><span class=\"br0\">(</span><span class=\"st0\">\"Error\"</span>, msg<span class=\"br0\">)</span><br/>    <span class=\"kw1\">End</span><br/>  <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>#ScreenW <span class=\"sy0\">=</span> <span class=\"nu0\">320</span><br/>#ScreenH <span class=\"sy0\">=</span> <span class=\"nu0\">210</span><br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">OpenWindow</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, #ScreenW, #ScreenH, <span class=\"st0\">\"Animated Pendulum\"</span>, #PB_Window_SystemMenu<span class=\"br0\">)</span>, <span class=\"st0\">\"Can't open window.\"</span><span class=\"br0\">)</span><br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">InitSprite</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"st0\">\"Can't setup sprite display.\"</span><span class=\"br0\">)</span><br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">OpenWindowedScreen</span><span class=\"br0\">(</span><span class=\"kw2\">WindowID</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, #ScreenW, #ScreenH, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>, <span class=\"st0\">\"Can't open screen.\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Enumeration</span> <span class=\"co1\">;sprites</span><br/>  #bob_spr<br/>  #ceiling_spr<br/>  #pivot_spr<br/><span class=\"kw1\">EndEnumeration</span><br/>\u00a0<br/><span class=\"kw2\">TransparentSpriteColor</span><span class=\"br0\">(</span>#PB_Default, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">CreateSprite</span><span class=\"br0\">(</span>#bob_spr, <span class=\"nu0\">32</span>, <span class=\"nu0\">32</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">SpriteOutput</span><span class=\"br0\">(</span>#bob_spr<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Box</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">32</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span><span class=\"nu0\">16</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">15</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">253</span>, <span class=\"nu0\">252</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">DrawingMode</span><span class=\"br0\">(</span>#PB_2DDrawing_Outlined<span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span><span class=\"nu0\">16</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">15</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw2\">CreateSprite</span><span class=\"br0\">(</span>#pivot_spr, <span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">SpriteOutput</span><span class=\"br0\">(</span>#pivot_spr<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Box</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">10</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">4</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">125</span>, <span class=\"nu0\">125</span>, <span class=\"nu0\">125</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">DrawingMode</span><span class=\"br0\">(</span>#PB_2DDrawing_Outlined<span class=\"br0\">)</span><br/>  <span class=\"kw2\">Circle</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">4</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span> , <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw2\">CreateSprite</span><span class=\"br0\">(</span>#ceiling_spr,#ScreenW,<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">SpriteOutput</span><span class=\"br0\">(</span>#ceiling_spr<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">Box</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"kw2\">SpriteWidth</span><span class=\"br0\">(</span>#ceiling_spr<span class=\"br0\">)</span>, <span class=\"kw2\">SpriteHeight</span><span class=\"br0\">(</span>#ceiling_spr<span class=\"br0\">)</span>, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">126</span>, <span class=\"nu0\">126</span>, <span class=\"nu0\">126</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Structure</span> pendulum<br/>  length.d   <span class=\"co1\">; meters</span><br/>  constant.d <span class=\"co1\">; -g/l</span><br/>  gravity.d  <span class=\"co1\">; m/s\u00b2</span><br/>  angle.d    <span class=\"co1\">; radians</span><br/>  velocity.d <span class=\"co1\">; m/s</span><br/><span class=\"kw1\">EndStructure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> initPendulum<span class=\"br0\">(</span><span class=\"sy0\">*</span>pendulum.pendulum, length.d <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span>, gravity.d <span class=\"sy0\">=</span> <span class=\"nu0\">9.81</span>, initialAngle.d <span class=\"sy0\">=</span> #PI <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">With</span> <span class=\"sy0\">*</span>pendulum<br/>    <span class=\"sy0\">\\</span>length <span class=\"sy0\">=</span> length<br/>    <span class=\"sy0\">\\</span>gravity <span class=\"sy0\">=</span> gravity<br/>    <span class=\"sy0\">\\</span>angle <span class=\"sy0\">=</span> initialAngle<br/>    <span class=\"sy0\">\\</span>constant <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>gravity <span class=\"sy0\">/</span> length<br/>    <span class=\"sy0\">\\</span>velocity <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>  <span class=\"kw1\">EndWith</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">Procedure</span> updatePendulum<span class=\"br0\">(</span><span class=\"sy0\">*</span>pendulum.pendulum, deltaTime.d<span class=\"br0\">)</span> <br/>  deltaTime <span class=\"sy0\">=</span> deltaTime <span class=\"sy0\">/</span> <span class=\"nu0\">1000.0</span> <span class=\"co1\">;ms</span><br/>  <span class=\"kw1\">Protected</span> acceleration.d <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>constant <span class=\"sy0\">*</span> <span class=\"kw2\">Sin</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>angle<span class=\"br0\">)</span><br/>  <span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>velocity <span class=\"sy0\">+</span> acceleration <span class=\"sy0\">*</span> deltaTime<br/>  <span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>angle <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>velocity <span class=\"sy0\">*</span> deltaTime<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> drawBackground<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">ClearScreen</span><span class=\"br0\">(</span><span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">190</span>,<span class=\"nu0\">190</span>,<span class=\"nu0\">190</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;draw ceiling</span><br/>  <span class=\"kw2\">DisplaySprite</span><span class=\"br0\">(</span>#ceiling_spr, <span class=\"nu0\">0</span>, <span class=\"nu0\">47</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">;draw pivot</span><br/>  <span class=\"kw2\">DisplayTransparentSprite</span><span class=\"br0\">(</span>#pivot_spr, <span class=\"nu0\">154</span>,<span class=\"nu0\">43</span><span class=\"br0\">)</span> <span class=\"co1\">;origin in upper-left</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> drawPendulum<span class=\"br0\">(</span><span class=\"sy0\">*</span>pendulum.pendulum<span class=\"br0\">)</span><br/>  <span class=\"co1\">;draw rod</span><br/>  <span class=\"kw1\">Protected</span> x <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>length <span class=\"sy0\">*</span> <span class=\"nu0\">140</span> <span class=\"sy0\">*</span> <span class=\"kw2\">Sin</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>angle<span class=\"br0\">)</span> <span class=\"co1\">;scale = 1 m/140 pixels</span><br/>  <span class=\"kw1\">Protected</span> y <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>length <span class=\"sy0\">*</span> <span class=\"nu0\">140</span> <span class=\"sy0\">*</span> <span class=\"kw2\">Cos</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>pendulum<span class=\"sy0\">\\</span>angle<span class=\"br0\">)</span><br/>  <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">ScreenOutput</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">LineXY</span><span class=\"br0\">(</span><span class=\"nu0\">154</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>,<span class=\"nu0\">43</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span>, <span class=\"nu0\">154</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span> <span class=\"sy0\">+</span> x, <span class=\"nu0\">43</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span> <span class=\"co1\">;draw from pivot-center to bob-center, adjusting for origins</span><br/>  <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\">;draw bob</span><br/>  <span class=\"kw2\">DisplayTransparentSprite</span><span class=\"br0\">(</span>#bob_spr, <span class=\"nu0\">154</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span> <span class=\"sy0\">-</span> <span class=\"nu0\">16</span> <span class=\"sy0\">+</span> x, <span class=\"nu0\">43</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span> <span class=\"sy0\">-</span> <span class=\"nu0\">16</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span> <span class=\"co1\">;adj for origin in upper-left</span><br/><span class=\"kw1\">EndProcedure</span> <br/>\u00a0<br/><span class=\"kw1\">Define</span> pendulum.pendulum, event<br/>initPendulum<span class=\"br0\">(</span>pendulum<span class=\"br0\">)</span><br/>drawPendulum<span class=\"br0\">(</span>pendulum<span class=\"br0\">)</span><br/>\u00a0<br/>AddWindowTimer<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Repeat</span><br/>  event <span class=\"sy0\">=</span> <span class=\"kw2\">WindowEvent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Select</span> event<br/>    <span class=\"kw1\">Case</span> #pb_event_timer<br/>      drawBackground<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Select</span> EventTimer<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Case</span> <span class=\"nu0\">1</span><br/>          updatePendulum<span class=\"br0\">(</span>pendulum, <span class=\"nu0\">50</span><span class=\"br0\">)</span><br/>          drawPendulum<span class=\"br0\">(</span>pendulum<span class=\"br0\">)</span><br/>      <span class=\"kw1\">EndSelect</span><br/>      <span class=\"kw2\">FlipBuffers</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">Case</span> #PB_Event_CloseWindow<br/>      <span class=\"kw1\">Break</span><br/>  <span class=\"kw1\">EndSelect</span><br/><span class=\"kw1\">ForEver</span></pre>"}, {"lang": "Python", "loc": 82, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> pygame<span class=\"sy0\">,</span> <span class=\"kw3\">sys</span><br/><span class=\"kw1\">from</span> pygame.<span class=\"kw2\">locals</span> <span class=\"kw1\">import</span> *<br/><span class=\"kw1\">from</span> <span class=\"kw3\">math</span> <span class=\"kw1\">import</span> sin<span class=\"sy0\">,</span> cos<span class=\"sy0\">,</span> radians<br/>\u00a0<br/>pygame.<span class=\"me1\">init</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>WINDOWSIZE <span class=\"sy0\">=</span> <span class=\"nu0\">250</span><br/>TIMETICK <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>BOBSIZE <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><br/>\u00a0<br/>window <span class=\"sy0\">=</span> pygame.<span class=\"me1\">display</span>.<span class=\"me1\">set_mode</span><span class=\"br0\">(</span><span class=\"br0\">(</span>WINDOWSIZE<span class=\"sy0\">,</span> WINDOWSIZE<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>pygame.<span class=\"me1\">display</span>.<span class=\"me1\">set_caption</span><span class=\"br0\">(</span><span class=\"st0\">\"Pendulum\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>screen <span class=\"sy0\">=</span> pygame.<span class=\"me1\">display</span>.<span class=\"me1\">get_surface</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>screen.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">255</span><span class=\"sy0\">,</span><span class=\"nu0\">255</span><span class=\"sy0\">,</span><span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>PIVOT <span class=\"sy0\">=</span> <span class=\"br0\">(</span>WINDOWSIZE/<span class=\"nu0\">2</span><span class=\"sy0\">,</span> WINDOWSIZE/<span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>SWINGLENGTH <span class=\"sy0\">=</span> PIVOT<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>*<span class=\"nu0\">4</span><br/>\u00a0<br/><span class=\"kw1\">class</span> BobMass<span class=\"br0\">(</span>pygame.<span class=\"me1\">sprite</span>.<span class=\"me1\">Sprite</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        pygame.<span class=\"me1\">sprite</span>.<span class=\"me1\">Sprite</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">theta</span> <span class=\"sy0\">=</span> <span class=\"nu0\">45</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">dtheta</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">rect</span> <span class=\"sy0\">=</span> pygame.<span class=\"me1\">Rect</span><span class=\"br0\">(</span>PIVOT<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>-SWINGLENGTH*cos<span class=\"br0\">(</span>radians<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">theta</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                                PIVOT<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>+SWINGLENGTH*sin<span class=\"br0\">(</span>radians<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">theta</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                                <span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">draw</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> recomputeAngle<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        scaling <span class=\"sy0\">=</span> <span class=\"nu0\">3000.0</span>/<span class=\"br0\">(</span>SWINGLENGTH**<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>        firstDDtheta <span class=\"sy0\">=</span> -sin<span class=\"br0\">(</span>radians<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">theta</span><span class=\"br0\">)</span><span class=\"br0\">)</span>*scaling<br/>        midDtheta <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">dtheta</span> + firstDDtheta<br/>        midtheta <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">theta</span> + <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">dtheta</span> + midDtheta<span class=\"br0\">)</span>/<span class=\"nu0\">2.0</span><br/>\u00a0<br/>        midDDtheta <span class=\"sy0\">=</span> -sin<span class=\"br0\">(</span>radians<span class=\"br0\">(</span>midtheta<span class=\"br0\">)</span><span class=\"br0\">)</span>*scaling<br/>        midDtheta <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">dtheta</span> + <span class=\"br0\">(</span>firstDDtheta + midDDtheta<span class=\"br0\">)</span>/<span class=\"nu0\">2</span><br/>        midtheta <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">theta</span> + <span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">dtheta</span> + midDtheta<span class=\"br0\">)</span>/<span class=\"nu0\">2</span><br/>\u00a0<br/>        midDDtheta <span class=\"sy0\">=</span> -sin<span class=\"br0\">(</span>radians<span class=\"br0\">(</span>midtheta<span class=\"br0\">)</span><span class=\"br0\">)</span> * scaling<br/>        lastDtheta <span class=\"sy0\">=</span> midDtheta + midDDtheta<br/>        lasttheta <span class=\"sy0\">=</span> midtheta + <span class=\"br0\">(</span>midDtheta + lastDtheta<span class=\"br0\">)</span>/<span class=\"nu0\">2.0</span><br/>\u00a0<br/>        lastDDtheta <span class=\"sy0\">=</span> -sin<span class=\"br0\">(</span>radians<span class=\"br0\">(</span>lasttheta<span class=\"br0\">)</span><span class=\"br0\">)</span> * scaling<br/>        lastDtheta <span class=\"sy0\">=</span> midDtheta + <span class=\"br0\">(</span>midDDtheta + lastDDtheta<span class=\"br0\">)</span>/<span class=\"nu0\">2.0</span><br/>        lasttheta <span class=\"sy0\">=</span> midtheta + <span class=\"br0\">(</span>midDtheta + lastDtheta<span class=\"br0\">)</span>/<span class=\"nu0\">2.0</span><br/>\u00a0<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">dtheta</span> <span class=\"sy0\">=</span> lastDtheta<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">theta</span> <span class=\"sy0\">=</span> lasttheta<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">rect</span> <span class=\"sy0\">=</span> pygame.<span class=\"me1\">Rect</span><span class=\"br0\">(</span>PIVOT<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>-<br/>                                SWINGLENGTH*sin<span class=\"br0\">(</span>radians<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">theta</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <br/>                                PIVOT<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>+<br/>                                SWINGLENGTH*cos<span class=\"br0\">(</span>radians<span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">theta</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw1\">def</span> draw<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        pygame.<span class=\"me1\">draw</span>.<span class=\"me1\">circle</span><span class=\"br0\">(</span>screen<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> PIVOT<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        pygame.<span class=\"me1\">draw</span>.<span class=\"me1\">circle</span><span class=\"br0\">(</span>screen<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">rect</span>.<span class=\"me1\">center</span><span class=\"sy0\">,</span> BOBSIZE<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        pygame.<span class=\"me1\">draw</span>.<span class=\"me1\">aaline</span><span class=\"br0\">(</span>screen<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> PIVOT<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">rect</span>.<span class=\"me1\">center</span><span class=\"br0\">)</span><br/>        pygame.<span class=\"me1\">draw</span>.<span class=\"me1\">line</span><span class=\"br0\">(</span>screen<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> PIVOT<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>WINDOWSIZE<span class=\"sy0\">,</span> PIVOT<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">def</span> update<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">recomputeAngle</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        screen.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">255</span><span class=\"sy0\">,</span><span class=\"nu0\">255</span><span class=\"sy0\">,</span><span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">draw</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>bob <span class=\"sy0\">=</span> BobMass<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>TICK <span class=\"sy0\">=</span> USEREVENT + <span class=\"nu0\">2</span><br/>pygame.<span class=\"kw3\">time</span>.<span class=\"me1\">set_timer</span><span class=\"br0\">(</span>TICK<span class=\"sy0\">,</span> TIMETICK<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> <span class=\"kw2\">input</span><span class=\"br0\">(</span>events<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">for</span> event <span class=\"kw1\">in</span> events:<br/>        <span class=\"kw1\">if</span> event.<span class=\"kw2\">type</span> <span class=\"sy0\">==</span> QUIT:<br/>            <span class=\"kw3\">sys</span>.<span class=\"me1\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">elif</span> event.<span class=\"kw2\">type</span> <span class=\"sy0\">==</span> TICK:<br/>            bob.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>    <span class=\"kw2\">input</span><span class=\"br0\">(</span>pygame.<span class=\"me1\">event</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    pygame.<span class=\"me1\">display</span>.<span class=\"me1\">flip</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 21, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(require 2htdp/image 2htdp/universe)<br/>\u00a0<br/>(define (pendulum)<br/>  (define (accel \u03b8) (- (sin \u03b8)))<br/>  (define \u03b8 (/ pi 2.5))<br/>  (define \u03b8\u2032 0)<br/>  (define \u03b8\u2032\u2032 (accel (/ pi 2.5)))<br/>  (define (x \u03b8) (+ 200 (* 150 (sin \u03b8))))<br/>  (define (y \u03b8) (* 150 (cos \u03b8)))<br/>  (\u03bb (n)<br/>    (define p-image (underlay/xy (add-line (empty-scene 400 200) 200 0 (x \u03b8) (y \u03b8) \"black\") <br/>                                 (- (x \u03b8) 5) (- (y \u03b8) 5) (circle 5 \"solid\" \"blue\")))<br/>    (set! \u03b8 (+ \u03b8 (* \u03b8\u2032 0.04)))<br/>    (set! \u03b8\u2032 (+ \u03b8\u2032 (* (accel \u03b8) 0.04)))<br/>    p-image))<br/>\u00a0<br/>(animate (pendulum))<br/>\u00a0</pre>"}, {"lang": "Ring", "loc": 81, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Animate a pendulum<br/>\u00a0<br/>load \"guilib.ring\"<br/>load \"stdlib.ring\"<br/>\u00a0<br/>CounterMan = 1<br/>paint = null<br/>pi = 22/7<br/>theta = pi/180*40 <br/>g = 9.81 <br/>l = 0.50 <br/>speed = 0 <br/>\u00a0<br/>new qapp <br/>        {<br/>        win1 = new qwidget() {<br/>                  setwindowtitle(\"Animate a pendulum\")<br/>                  setgeometry(100,100,800,600)<br/>                  label1 = new qlabel(win1) {<br/>                              setgeometry(10,10,800,600)<br/>                              settext(\"\")<br/>                  }<br/>                  new qpushbutton(win1) {<br/>                          setgeometry(150,500,100,30)<br/>                          settext(\"draw\")<br/>                          setclickevent(\"draw()\")<br/>                  }<br/>                  TimerMan = new qtimer(win1)<br/>                  {<br/>                                    setinterval(1000)<br/>                                    settimeoutevent(\"draw()\")<br/>                                    start()<br/>                  }<br/>                  show()<br/>        }<br/>        exec()<br/>        }<br/>\u00a0<br/>func draw<br/>        p1 = new qpicture()<br/>               color = new qcolor() {<br/>               setrgb(0,0,255,255)<br/>        }<br/>        pen = new qpen() {<br/>                 setcolor(color)<br/>                 setwidth(1)<br/>        }<br/>        paint = new qpainter() {<br/>                  begin(p1)<br/>                  setpen(pen)<br/>        ptime()<br/>        endpaint()<br/>        }<br/>        label1 { setpicture(p1) show() }<br/>        return<br/>\u00a0<br/> func ptime()<br/>         TimerMan.start()<br/>         pPlaySleep()<br/>         sleep(0.1)<br/>         CounterMan++<br/>         if CounterMan = 20<br/>            TimerMan.stop()<br/>         ok<br/>\u00a0<br/>func pPlaySleep()<br/>       pendulum(theta, l)<br/>       pendulum(theta, l)<br/>       accel = - g * sin(theta) / l / 100<br/>       speed = speed + accel / 100<br/>       theta = theta + speed<br/>\u00a0<br/>func pendulum(a, l)<br/>       pivotx = 640<br/>       pivoty = 800<br/>       bobx = pivotx + l * 1000 * sin(a)<br/>       boby = pivoty - l * 1000 * cos(a)<br/>       paint.drawline(pivotx, pivoty, bobx, boby)<br/>       paint.drawellipse(bobx + 24 * sin(a), boby - 24 * cos(a), 24, 24)<br/>\u00a0</pre>"}, {"lang": "RLaB", "loc": 62, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>//<br/>// example: solve ODE for pendulum<br/>//<br/>\u00a0<br/>// we first define the first derivative function for the solver<br/>dudt = function(t, u, p)<br/>{<br/>  // t-&gt; time<br/>  // u-&gt;[theta, dtheta/dt ]<br/>  // p-&gt; g/L, parameter<br/>  rval = zeros(2,1);<br/>  rval[1] =  u[2];<br/>  rval[2] = -p[1] * sin(u[1]);<br/>  return rval;<br/>};<br/>\u00a0<br/>// now we solve the problem<br/>// physical parameters<br/>L  = 5;  // (m), the length of the arm of the pendulum<br/>p  = mks.g / L;  // RLaB has a built-in list 'mks' which contains large number of physical constants and conversion factors<br/>T0 = 2*const.pi*sqrt(L/mks.g); // approximate period of the pendulum<br/>\u00a0<br/>// initial conditions<br/>theta0 = 30;  // degrees, initial angle of deflection of pendulum<br/>u0 = [theta0*const.pi/180, 0];  // RLaB has a built-in list 'const' of mathematical constants.<br/>\u00a0<br/>// times at which we want solution<br/>t = [0:4:1/64] * T0;  // solve for 4 approximate periods with at time points spaced at T0/64<br/>\u00a0<br/>// prepare ODEIV solver<br/>optsode = &lt;&lt;&gt;&gt;;<br/>optsode.eabs   = 1e-6;      // relative error for step size<br/>optsode.erel   = 1e-6;      // absolute error for step size<br/>optsode.delta_t = 1e-6;     // maximum dt that code is allowed<br/>optsode.stdout = stderr();  // open the text console and in it print the results of each step of calculation<br/>optsode.imethod = 5;        // use method No. 5 from the odeiv toolkit, Runge-Kutta 8th order Prince-Dormand method<br/>//optsode.phase_space = 0;    // the solver returns [t, u1(t), u2(t)] which is default behavior<br/>optsode.phase_space = 1;    // the solver returns [t, u1(t), u2(t), d(u1)/dt(t), d(u2)/dt]<br/>\u00a0<br/>// solver do my bidding<br/>y = odeiv(dudt, p, t, u0, optsode);<br/>\u00a0<br/>// Make an animation. We choose to use 'pgplot' rather then 'gnuplot' interface because the former is<br/>// faster and thus less cache-demanding, while the latter can be very cache-demanding (it may slow your<br/>// linux system quite down if one sends lots of plots for gnuplot to plot).<br/>plwins (1); // we will use one pgplot-window<br/>\u00a0<br/>plwin(1);  // plot to pgplot-window No. 1; necessary if using more than one pgplot window<br/>plimits (-L,L, -1.25*L, 0.25*L);<br/>xlabel (\"x-coordinate\");<br/>ylabel (\"z-coordinate\");<br/>plegend (\"Arm\");<br/>for (i in 1:y.nr)<br/>{<br/>  // plot a line between the pivot point at (0,0) and the current position of the pendulum<br/>  arm_line = [0,0; L*sin(y[i;2]), -L*cos(y[i;2])]; // this is because theta is between the arm and the z-coordinate<br/>  plot  (arm_line); <br/>  sleep (0.1); // sleep 0.1 seconds between plots<br/>}<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 63, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'tk'</span><br/>\u00a0<br/><span class=\"re0\">$root</span> = TkRoot.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"st0\">\"title\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Pendulum Animation\"</span><span class=\"br0\">)</span><br/><span class=\"re0\">$canvas</span> = TkCanvas.<span class=\"me1\">new</span><span class=\"br0\">(</span>$root<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  width <span class=\"nu0\">320</span><br/>  height <span class=\"nu0\">200</span><br/>  create TkcLine, <span class=\"nu0\">0</span>,<span class=\"nu0\">25</span>,<span class=\"nu0\">320</span>,<span class=\"nu0\">25</span>,   <span class=\"st0\">'tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'plate'</span>, <span class=\"st0\">'width'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span>, <span class=\"st0\">'fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'grey50'</span><br/>  create TkcOval, <span class=\"nu0\">155</span>,<span class=\"nu0\">20</span>,<span class=\"nu0\">165</span>,<span class=\"nu0\">30</span>, <span class=\"st0\">'tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'pivot'</span>, <span class=\"st0\">'outline'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"\"</span>, <span class=\"st0\">'fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'grey50'</span><br/>  create TkcLine, <span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>, <span class=\"st0\">'tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'rod'</span>, <span class=\"st0\">'width'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span>, <span class=\"st0\">'fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'black'</span><br/>  create TkcOval, <span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">2</span>, <span class=\"st0\">'tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'bob'</span>, <span class=\"st0\">'outline'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'black'</span>, <span class=\"st0\">'fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'yellow'</span><br/><span class=\"kw1\">end</span><br/><span class=\"re0\">$canvas</span>.<span class=\"kw3\">raise</span><span class=\"br0\">(</span><span class=\"st0\">'pivot'</span><span class=\"br0\">)</span><br/><span class=\"re0\">$canvas</span>.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"st0\">'fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'both'</span>, <span class=\"st0\">'expand'</span> <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">true</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"re0\">$Theta</span> = <span class=\"nu0\">45.0</span><br/><span class=\"re0\">$dTheta</span> = <span class=\"nu0\">0.0</span><br/><span class=\"re0\">$length</span> = <span class=\"nu0\">150</span><br/><span class=\"re0\">$homeX</span> = <span class=\"nu0\">160</span><br/><span class=\"re0\">$homeY</span> = <span class=\"nu0\">25</span><br/>\u00a0<br/><span class=\"kw1\">def</span> show_pendulum<br/>  angle = <span class=\"re0\">$Theta</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::PI <span class=\"sy0\">/</span> <span class=\"nu0\">180</span><br/>  x = <span class=\"re0\">$homeX</span> <span class=\"sy0\">+</span> <span class=\"re0\">$length</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><br/>  y = <span class=\"re0\">$homeY</span> <span class=\"sy0\">+</span> <span class=\"re0\">$length</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">cos</span><span class=\"br0\">(</span>angle<span class=\"br0\">)</span><br/>  <span class=\"re0\">$canvas</span>.<span class=\"me1\">coords</span><span class=\"br0\">(</span><span class=\"st0\">'rod'</span>, <span class=\"re0\">$homeX</span>, <span class=\"re0\">$homeY</span>, x, y<span class=\"br0\">)</span><br/>  <span class=\"re0\">$canvas</span>.<span class=\"me1\">coords</span><span class=\"br0\">(</span><span class=\"st0\">'bob'</span>, x<span class=\"sy0\">-</span><span class=\"nu0\">15</span>, y<span class=\"sy0\">-</span><span class=\"nu0\">15</span>, x<span class=\"sy0\">+</span><span class=\"nu0\">15</span>, y<span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> recompute_angle<br/>  scaling = <span class=\"nu0\">3000.0</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>$length <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"co1\"># first estimate</span><br/>  firstDDTheta = <span class=\"sy0\">-</span><span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>$Theta <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::PI <span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<br/>  midDTheta = <span class=\"re0\">$dTheta</span> <span class=\"sy0\">+</span> firstDDTheta<br/>  midTheta = <span class=\"re0\">$Theta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>$dTheta <span class=\"sy0\">+</span> midDTheta<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>  <span class=\"co1\"># second estimate</span><br/>  midDDTheta = <span class=\"sy0\">-</span><span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>midTheta <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::PI <span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<br/>  midDTheta = <span class=\"re0\">$dTheta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>firstDDTheta <span class=\"sy0\">+</span> midDDTheta<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>  midTheta = <span class=\"re0\">$Theta</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>$dTheta <span class=\"sy0\">+</span> midDTheta<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>  <span class=\"co1\"># again, first</span><br/>  midDDTheta = <span class=\"sy0\">-</span><span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>midTheta <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::PI <span class=\"sy0\">/</span> <span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<br/>  lastDTheta = midDTheta <span class=\"sy0\">+</span> midDDTheta<br/>  lastTheta = midTheta <span class=\"sy0\">+</span> <span class=\"br0\">(</span>midDTheta <span class=\"sy0\">+</span> lastDTheta<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>  <span class=\"co1\"># again, second</span><br/>  lastDDTheta = <span class=\"sy0\">-</span><span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span>lastTheta <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::PI<span class=\"sy0\">/</span><span class=\"nu0\">180</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<br/>  lastDTheta = midDTheta <span class=\"sy0\">+</span> <span class=\"br0\">(</span>midDDTheta <span class=\"sy0\">+</span> lastDDTheta<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>  lastTheta = midTheta <span class=\"sy0\">+</span> <span class=\"br0\">(</span>midDTheta <span class=\"sy0\">+</span> lastDTheta<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>  <span class=\"co1\"># Now put the values back in our globals</span><br/>  <span class=\"re0\">$dTheta</span>  = lastDTheta<br/>  <span class=\"re0\">$Theta</span> = lastTheta<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> animate<br/>  recompute_angle<br/>  show_pendulum<br/>  <span class=\"re0\">$after_id</span> = <span class=\"re0\">$root</span>.<span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>animate<span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>show_pendulum<br/><span class=\"re0\">$after_id</span> = <span class=\"re0\">$root</span>.<span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">500</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>animate<span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$canvas</span>.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"st0\">'&lt;Destroy&gt;'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>$root.<span class=\"me1\">after_cancel</span><span class=\"br0\">(</span>$after_id<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/>Tk.<span class=\"me1\">mainloop</span></pre>"}, {"lang": "Scala", "loc": 54, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">Color</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">actors</span>.<span class=\"me1\">Actor</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"br0\">{</span> Graphics2D, MainFrame, Panel, SimpleSwingApplication <span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"me1\">Swing</span>.<span class=\"me1\">pair2Dimension</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Pendulum <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> SimpleSwingApplication <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> length <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>\u00a0<br/>  lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ui <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Panel <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">math</span>.<span class=\"br0\">{</span> cos, Pi, sin <span class=\"br0\">}</span><br/>    background <span class=\"sy0\">=</span> Color.<span class=\"me1\">white</span><br/>    preferredSize <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> length + <span class=\"nu0\">50</span>, length / <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    peer.<span class=\"me1\">setDoubleBuffered</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> angle<span class=\"sy0\">:</span> Double <span class=\"sy0\">=</span> Pi / <span class=\"nu0\">2</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> pendular <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Actor <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> angleVelocity <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dt <span class=\"sy0\">=</span> <span class=\"nu0\">0.1</span><br/>\u00a0<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> act<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          angleVelocity +<span class=\"sy0\">=</span> <span class=\"br0\">(</span>-<span class=\"nu0\">9.81</span> / length <span class=\"sy0\">*</span> sin<span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> dt<br/>          angle +<span class=\"sy0\">=</span> angleVelocity <span class=\"sy0\">*</span> dt<br/>          repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>          Thread.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> paintComponent<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>\u00a0<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>anchorX, anchorY<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>size.<span class=\"me1\">width</span> / <span class=\"nu0\">2</span>, size.<span class=\"me1\">height</span> / <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>ballX, ballY<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <span class=\"br0\">(</span>anchorX + <span class=\"br0\">(</span>sin<span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> length<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span>, anchorY + <span class=\"br0\">(</span>cos<span class=\"br0\">(</span>angle<span class=\"br0\">)</span> <span class=\"sy0\">*</span> length<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">lightGray</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>anchorX - <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> length, anchorY, anchorX + <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> length, anchorY<span class=\"br0\">)</span><br/>      g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">black</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>anchorX, anchorY, ballX, ballY<span class=\"br0\">)</span><br/>      g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>anchorX - <span class=\"nu0\">3</span>, anchorY - <span class=\"nu0\">4</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">7</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">drawOval</span><span class=\"br0\">(</span>ballX - <span class=\"nu0\">7</span>, ballY - <span class=\"nu0\">7</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">14</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">yellow</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">fillOval</span><span class=\"br0\">(</span>ballX - <span class=\"nu0\">7</span>, ballY - <span class=\"nu0\">7</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">14</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> top <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> MainFrame <span class=\"br0\">{</span><br/>    title <span class=\"sy0\">=</span> <span class=\"st0\">\"Rosetta Code &gt;&gt;&gt; Task: Animate a pendulum | Language: Scala\"</span><br/>    contents <span class=\"sy0\">=</span> ui<br/>    centerOnScreen<br/>    ui.<span class=\"me1\">pendular</span>.<span class=\"me1\">start</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 72, "block": "<pre class=\"scheme highlighted_source\">#<span class=\"sy0\">!</span>r6rs<br/>\u00a0<br/><span class=\"co1\">;;; R6RS implementation of Pendulum Animation</span><br/>\u00a0<br/><span class=\"br0\">(</span>import <span class=\"br0\">(</span>rnrs<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>lib pstk main<span class=\"br0\">)</span> <span class=\"co1\">; change this for your pstk installation</span><br/>        <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> PI <span class=\"nu0\">3.14159</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>conv<span class=\"sy0\">-</span>radians<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> PI <span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>theta<span class=\"sy0\">*</span> <span class=\"nu0\">45.0</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">*</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span><span class=\"kw1\">length</span><span class=\"sy0\">*</span> <span class=\"nu0\">150</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>home<span class=\"sy0\">-</span>x<span class=\"sy0\">*</span> <span class=\"nu0\">160</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"sy0\">*</span>home<span class=\"sy0\">-</span>y<span class=\"sy0\">*</span> <span class=\"nu0\">25</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;;; estimates new angle of pendulum</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>recompute<span class=\"sy0\">-</span><span class=\"kw1\">angle</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>avg a b<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> a b<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>scaling <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"nu0\">3000.0</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span><span class=\"kw1\">length</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span><span class=\"kw1\">length</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"co1\">; first estimate</span><br/>         <span class=\"br0\">(</span>first<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sin</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span>theta<span class=\"sy0\">*</span> <span class=\"sy0\">*</span>conv<span class=\"sy0\">-</span>radians<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span> scaling<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">*</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">*</span> first<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>mid<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">*</span>theta<span class=\"sy0\">*</span> <span class=\"br0\">(</span>avg <span class=\"sy0\">*</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">*</span> mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"co1\">; second estimate</span><br/>         <span class=\"br0\">(</span>mid<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sin</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> mid<span class=\"sy0\">-</span>theta <span class=\"sy0\">*</span>conv<span class=\"sy0\">-</span>radians<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span> scaling<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">*</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">*</span> <span class=\"br0\">(</span>avg first<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta mid<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>mid<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">*</span>theta<span class=\"sy0\">*</span> <span class=\"br0\">(</span>avg <span class=\"sy0\">*</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">*</span> mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"co1\">; again first</span><br/>         <span class=\"br0\">(</span>mid<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sin</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> mid<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span>conv<span class=\"sy0\">-</span>radians<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span> scaling<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>last<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">+</span> mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> mid<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>last<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">+</span> mid<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span>avg mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> last<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"co1\">; again second</span><br/>         <span class=\"br0\">(</span>last<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sin</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> last<span class=\"sy0\">-</span>theta <span class=\"sy0\">*</span>conv<span class=\"sy0\">-</span>radians<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span> scaling<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>last<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span>avg mid<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> last<span class=\"sy0\">-</span>dd<span class=\"sy0\">-</span>theta<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>last<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> mid<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">(</span>avg mid<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span> last<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">; put values back in globals</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">set!</span> <span class=\"sy0\">*</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">*</span> last<span class=\"sy0\">-</span>d<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">set!</span> <span class=\"sy0\">*</span>theta<span class=\"sy0\">*</span> last<span class=\"sy0\">-</span>theta<span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;;; The main event loop and graphics context</span><br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>tk <span class=\"br0\">(</span>tk<span class=\"sy0\">-</span>start<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>tk<span class=\"sy0\">/</span>wm 'title tk <span class=\"st0\">\"Pendulum Animation\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>canvas <span class=\"br0\">(</span>tk 'create<span class=\"sy0\">-</span>widget 'canvas<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">;;; redraw the pendulum on canvas</span><br/>    <span class=\"co1\">;;; - uses angle and length to compute new (x,y) position of bob</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>show<span class=\"sy0\">-</span>pendulum canvas<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>pendulum<span class=\"sy0\">-</span><span class=\"kw1\">angle</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span>conv<span class=\"sy0\">-</span>radians<span class=\"sy0\">*</span> <span class=\"sy0\">*</span>theta<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>x <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">*</span>home<span class=\"sy0\">-</span>x<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span><span class=\"kw1\">length</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">sin</span> pendulum<span class=\"sy0\">-</span><span class=\"kw1\">angle</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>y <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"sy0\">*</span>home<span class=\"sy0\">-</span>y<span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"sy0\">*</span><span class=\"kw1\">length</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw1\">cos</span> pendulum<span class=\"sy0\">-</span><span class=\"kw1\">angle</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>canvas 'coords 'rod <span class=\"sy0\">*</span>home<span class=\"sy0\">-</span>x<span class=\"sy0\">*</span> <span class=\"sy0\">*</span>home<span class=\"sy0\">-</span>y<span class=\"sy0\">*</span> x y<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>canvas 'coords 'bob <span class=\"br0\">(</span><span class=\"sy0\">-</span> x <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> y <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> x <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> y <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">;;; move the pendulum and repeat after 20ms</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>animate<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>recompute<span class=\"sy0\">-</span><span class=\"kw1\">angle</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>show<span class=\"sy0\">-</span>pendulum canvas<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>tk<span class=\"sy0\">/</span>after <span class=\"nu0\">20</span> animate<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">;; layout the canvas</span><br/>    <span class=\"br0\">(</span>tk<span class=\"sy0\">/</span>grid canvas 'column: <span class=\"nu0\">0</span> 'row: <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>canvas 'create 'line <span class=\"nu0\">0</span> <span class=\"nu0\">25</span> <span class=\"nu0\">320</span> <span class=\"nu0\">25</span> 'tags: 'plate 'width: <span class=\"nu0\">2</span> 'fill: 'grey50<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>canvas 'create 'oval <span class=\"nu0\">155</span> <span class=\"nu0\">20</span> <span class=\"nu0\">165</span> <span class=\"nu0\">30</span> 'tags: 'pivot 'outline: <span class=\"st0\">\"\"</span> 'fill: 'grey50<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>canvas 'create 'line <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> 'tags: 'rod 'width: <span class=\"nu0\">3</span> 'fill: 'black<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>canvas 'create 'oval <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">2</span> 'tags: 'bob 'outline: 'black 'fill: 'yellow<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">;; get everything started</span><br/>    <span class=\"br0\">(</span>show<span class=\"sy0\">-</span>pendulum canvas<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>tk<span class=\"sy0\">/</span>after <span class=\"nu0\">500</span> animate<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>tk<span class=\"sy0\">-</span>event<span class=\"sy0\">-</span>loop tk<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Scilab", "loc": 85, "block": "<pre class=\"text highlighted_source\">//Input variables (Assumptions: massless pivot, no energy loss)<br/>bob_mass=10;<br/>g=-9.81;<br/>L=2;<br/>theta0=-%pi/6;<br/>v0=0;<br/>t0=0;<br/>\u00a0<br/>//No. of steps<br/>steps=300;<br/>\u00a0<br/>//Setting deltaT or duration (comment either of the lines below)<br/>//deltaT=0.1; t_max=t0+deltaT*steps;<br/>t_max=5; deltaT=(t_max-t0)/steps;<br/>\u00a0<br/>if t_max&lt;=t0 then<br/>    error(\"Check duration (t0 and t_f), number of steps and deltaT.\");<br/>end<br/>\u00a0<br/>//Initial position<br/>not_a_pendulum=%F;<br/>t=zeros(1,steps); t(1)=t0;                      //time<br/>theta=zeros(1,steps); theta(1)=theta0;          //angle<br/>F=zeros(1,steps); F(1)=bob_mass*g*sin(theta0);  //force<br/>A=zeros(1,steps); A(1)=F(1)/bob_mass;           //acceleration<br/>V=zeros(1,steps); V(1)=v0;                      //linear speed<br/>W=zeros(1,steps); W(1)=v0/L;                    //angular speed<br/>\u00a0<br/>for i=2:steps<br/>    t(i)=t(i-1)+deltaT;<br/>    V(i)=A(i-1)*deltaT+V(i-1);<br/>    W(i)=V(i)/L;<br/>    theta(i)=theta(i-1)+W(i)*deltaT;<br/>    F(i)=bob_mass*g*sin(theta(i));<br/>    A(i)=F(i)/bob_mass;<br/>    if (abs(theta(i))&gt;=%pi | (abs(theta(i))==0 &amp; V(i)==0)) &amp; ~not_a_pendulum  then<br/>        disp(\"Initial conditions do not describe a pendulum.\");<br/>        not_a_pendulum =\u00a0%T;<br/>    end<br/>end<br/>clear i<br/>\u00a0<br/>//Ploting the pendulum<br/>bob_r=0.08*L;<br/>bob_shape=bob_r*exp(%i.*linspace(0,360,20)/180*%pi);<br/>\u00a0<br/>bob_pos=zeros(20,steps);<br/>rod_pos=zeros(1,steps);<br/>for i=1:steps<br/>    rod_pos(i)=L*exp(%i*(-%pi/2+theta(i)));<br/>    bob_pos(:,i)=bob_shape'+rod_pos(i);<br/>end<br/>clear i<br/>\u00a0<br/>scf(0); clf(); xname(\"Simple gravity pendulum\");<br/>plot2d(real([0 rod_pos(1)]),imag([0 rod_pos(1)]));<br/>axes=gca(); <br/>axes.isoview=\"on\";<br/>axes.children(1).children.mark_style=3;<br/>axes.children(1).children.mark_size=1;<br/>axes.children(1).children.thickness=3;<br/>\u00a0<br/>plot2d(real(bob_pos(:,1)),imag(bob_pos(:,1)));<br/>axes=gca();<br/>axes.children(1).children.fill_mode=\"on\";<br/>axes.children(1).children.foreground=2;<br/>axes.children(1).children.background=2;<br/>\u00a0<br/>if max(imag(bob_pos))&gt;0 then<br/>    axes.data_bounds=[-L-bob_r,-L-1.01*bob_r;L+bob_r,max(imag(bob_pos))];<br/>else<br/>    axes.data_bounds=[-L-bob_r,-L-1.01*bob_r;L+bob_r,bob_r];<br/>end<br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>//Animating the plot<br/>disp(\"Duration: \"+string(max(t)+deltaT-t0)+\"s.\");<br/>sleep(850);<br/>for i=2:steps<br/>    axes.children(1).children.data=[real(bob_pos(:,i)), imag(bob_pos(:,i))];<br/>    axes.children(2).children.data=[0, 0; real(rod_pos(i)), imag(rod_pos(i))];<br/>    sleep(deltaT*1000)<br/>end<br/>clear i</pre>"}, {"lang": "SequenceL", "loc": 68, "block": "<pre class=\"text highlighted_source\">import &lt;Utilities/Sequence.sl&gt;;<br/>import &lt;Utilities/Conversion.sl&gt;;<br/>import &lt;Utilities/Math.sl&gt;;<br/>\u00a0<br/>//region Types<br/>\u00a0<br/>Point\u00a0::= (x: int(0), y: int(0));<br/>Color\u00a0::= (red: int(0), green: int(0), blue: int(0));<br/>Image\u00a0::= (kind: char(1), iColor: Color(0), vert1: Point(0), vert2: Point(0), vert3: Point(0), center: Point(0),<br/>           radius: int(0), height: int(0), width: int(0), message: char(1), source: char(1));<br/>Click\u00a0::= (clicked: bool(0), clPoint: Point(0));<br/>Input\u00a0::= (iClick: Click(0), keys: char(1));<br/>\u00a0<br/>//endregion<br/>\u00a0<br/>\u00a0<br/>//region Helpers======================================================================<br/>//region Constructor-Functions-------------------------------------------------<br/>point(a(0), b(0))\u00a0:= (x: a, y: b);<br/>color(r(0), g(0), b(0))\u00a0:= (red: r, green: g, blue: b);<br/>segment(e1(0), e2(0), c(0))\u00a0:= (kind: \"segment\", vert1: e1, vert2: e2, iColor: c);<br/>disc(ce(0), rad(0), c(0))\u00a0:= (kind: \"disc\", center: ce, radius: rad, iColor: c);<br/>//endregion----------------------------------------------------------------------<br/>\u00a0<br/>//region Colors----------------------------------------------------------------<br/>dBlack\u00a0:= color(0, 0, 0);<br/>dYellow\u00a0:= color(255, 255, 0);<br/>//endregion----------------------------------------------------------------------<br/>//endregion=============================================================================<br/>\u00a0<br/>\u00a0<br/>//=================Easel=Functions=============================================<br/>\u00a0<br/>State\u00a0::= (angle: float(0), angleVelocity: float(0), angleAccel: float(0));<br/>\u00a0<br/>initialState\u00a0:= (angle: pi/2, angleVelocity: 0.0, angleAccel: 0.0);<br/>\u00a0<br/>dt\u00a0:= 0.3;<br/>length\u00a0:= 450;<br/>\u00a0<br/>anchor\u00a0:= point(500, 750);<br/>\u00a0<br/>newState(I(0), S(0))\u00a0:= <br/>    let<br/>        newAngle\u00a0:= S.angle + newAngleVelocity * dt;<br/>        newAngleVelocity\u00a0:= S.angleVelocity + newAngleAccel * dt;<br/>        newAngleAccel\u00a0:= -9.81 / length * sin(S.angle);<br/>    in<br/>    (angle: newAngle, angleVelocity: newAngleVelocity, angleAccel: newAngleAccel);<br/>\u00a0<br/>sounds(I(0), S(0))\u00a0:= [\"ding\"] when I.iClick.clicked else [];<br/>\u00a0<br/>images(S(0))\u00a0:= <br/>    let<br/>        pendulum\u00a0:= pendulumLocation(S.angle);<br/>    in<br/>        [segment(anchor, pendulum, dBlack),<br/>         disc(pendulum, 30, dYellow),<br/>         disc(anchor, 5, dBlack)];<br/>\u00a0<br/>pendulumLocation(angle)\u00a0:= <br/>    let<br/>        x\u00a0:= anchor.x + round(sin(angle) * length);<br/>        y\u00a0:= anchor.y - round(cos(angle) * length);<br/>    in<br/>        point(x, y);<br/>\u00a0<br/>//=============End=Easel=Functions=============================================</pre>"}, {"lang": "Sidef", "loc": 61, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span><span class=\"br0\">(</span><span class=\"st0\">'Tk'</span><span class=\"br0\">)</span><br/>\u00a0<br/>var root = <span class=\"sy0\">%</span>s<span class=\"sy0\">&lt;</span>MainWindow<span class=\"sy0\">&gt;</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"st0\">'-title'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'Pendulum Animation'</span><span class=\"br0\">)</span><br/>var canvas = root.<span class=\"me1\">Canvas</span><span class=\"br0\">(</span><span class=\"st0\">'-width'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">320</span>, <span class=\"st0\">'-height'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">200</span><span class=\"br0\">)</span><br/>\u00a0<br/>canvas.<span class=\"me1\">createLine</span><span class=\"br0\">(</span>  <span class=\"nu0\">0</span>,  <span class=\"nu0\">25</span>, <span class=\"nu0\">320</span>,  <span class=\"nu0\">25</span>, <span class=\"st0\">'-tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">&lt;</span>plate<span class=\"sy0\">&gt;</span>,     <span class=\"st0\">'-width'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span>, <span class=\"st0\">'-fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re3\">:grey50</span><span class=\"br0\">)</span><br/>canvas.<span class=\"me1\">createOval</span><span class=\"br0\">(</span><span class=\"nu0\">155</span>,  <span class=\"nu0\">20</span>, <span class=\"nu0\">165</span>,  <span class=\"nu0\">30</span>, <span class=\"st0\">'-tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">&lt;</span>pivot outline<span class=\"sy0\">&gt;</span>,            <span class=\"st0\">'-fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re3\">:grey50</span><span class=\"br0\">)</span><br/>canvas.<span class=\"me1\">createLine</span><span class=\"br0\">(</span>  <span class=\"nu0\">1</span>,   <span class=\"nu0\">1</span>,    <span class=\"nu0\">1</span>,  <span class=\"nu0\">1</span>, <span class=\"st0\">'-tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">&lt;</span>rod width<span class=\"sy0\">&gt;</span>, <span class=\"st0\">'-width'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">3</span>, <span class=\"st0\">'-fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re3\">:black</span><span class=\"br0\">)</span><br/>canvas.<span class=\"me1\">createOval</span><span class=\"br0\">(</span>  <span class=\"nu0\">1</span>,   <span class=\"nu0\">1</span>,    <span class=\"nu0\">2</span>,  <span class=\"nu0\">2</span>, <span class=\"st0\">'-tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"sy0\">&lt;</span>bob outline<span class=\"sy0\">&gt;</span>,              <span class=\"st0\">'-fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re3\">:yellow</span><span class=\"br0\">)</span><br/>\u00a0<br/>canvas.<span class=\"kw3\">raise</span><span class=\"br0\">(</span><span class=\"re3\">:pivot</span><span class=\"br0\">)</span><br/>canvas.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"st0\">'-fill'</span> <span class=\"sy0\">=&gt;</span> <span class=\"re3\">:both</span>, <span class=\"st0\">'-expand'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>var<span class=\"br0\">(</span>\u03b8 = <span class=\"nu0\">45</span>, \u0394\u03b8 = <span class=\"nu0\">0</span>, length = <span class=\"nu0\">150</span>, homeX = <span class=\"nu0\">160</span>, homeY = <span class=\"nu0\">25</span><span class=\"br0\">)</span><br/>\u00a0<br/>func show_pendulum<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var angle = \u03b8.<span class=\"me1\">deg2rad</span><br/>    var x = <span class=\"br0\">(</span>homeX <span class=\"sy0\">+</span> length<span class=\"sy0\">*</span>sin<span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    var y = <span class=\"br0\">(</span>homeY <span class=\"sy0\">+</span> length<span class=\"sy0\">*</span>cos<span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    canvas.<span class=\"me1\">coords</span><span class=\"br0\">(</span><span class=\"re3\">:rod</span>, homeX,  homeY,  x,      y<span class=\"br0\">)</span><br/>    canvas.<span class=\"me1\">coords</span><span class=\"br0\">(</span><span class=\"re3\">:bob</span>, x <span class=\"sy0\">-</span> <span class=\"nu0\">15</span>, y <span class=\"sy0\">-</span> <span class=\"nu0\">15</span>, x <span class=\"sy0\">+</span> <span class=\"nu0\">15</span>, y <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>func recompute_angle<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var scaling = <span class=\"nu0\">3000</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>length<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># first estimate</span><br/>    var first\u0394\u0394\u03b8 = <span class=\"br0\">(</span><span class=\"sy0\">-</span>sin<span class=\"br0\">(</span>\u03b8.<span class=\"me1\">deg2rad</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    var mid\u0394\u03b8    = <span class=\"br0\">(</span>\u0394\u03b8 <span class=\"sy0\">+</span> first\u0394\u0394\u03b8<span class=\"br0\">)</span><br/>    var mid\u03b8     = <span class=\"br0\">(</span><span class=\"br0\">(</span>\u0394\u03b8 <span class=\"sy0\">+</span> mid\u0394\u03b8<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> \u03b8<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># second estimate</span><br/>    var mid\u0394\u0394\u03b8 = <span class=\"br0\">(</span><span class=\"sy0\">-</span>sin<span class=\"br0\">(</span>mid\u03b8.<span class=\"me1\">deg2rad</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    mid\u0394\u03b8      = <span class=\"br0\">(</span><span class=\"br0\">(</span>first\u0394\u0394\u03b8 <span class=\"sy0\">+</span> mid\u0394\u0394\u03b8<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> \u0394\u03b8<span class=\"br0\">)</span><br/>    mid\u03b8       = <span class=\"br0\">(</span><span class=\"br0\">(</span>\u0394\u03b8 <span class=\"sy0\">+</span> mid\u0394\u03b8<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> \u03b8<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># again, first</span><br/>    mid\u0394\u0394\u03b8     = <span class=\"br0\">(</span><span class=\"sy0\">-</span>sin<span class=\"br0\">(</span>mid\u03b8.<span class=\"me1\">deg2rad</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    var last\u0394\u03b8 = <span class=\"br0\">(</span>mid\u0394\u03b8 <span class=\"sy0\">+</span> mid\u0394\u0394\u03b8<span class=\"br0\">)</span><br/>    var last\u03b8  = <span class=\"br0\">(</span><span class=\"br0\">(</span>mid\u0394\u03b8 <span class=\"sy0\">+</span> last\u0394\u03b8<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> mid\u03b8<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># again, second</span><br/>    var last\u0394\u0394\u03b8 = <span class=\"br0\">(</span><span class=\"sy0\">-</span>sin<span class=\"br0\">(</span>last\u03b8.<span class=\"me1\">deg2rad</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> scaling<span class=\"br0\">)</span><br/>    last\u0394\u03b8      = <span class=\"br0\">(</span><span class=\"br0\">(</span>mid\u0394\u0394\u03b8 <span class=\"sy0\">+</span> last\u0394\u0394\u03b8<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> mid\u0394\u03b8<span class=\"br0\">)</span><br/>    last\u03b8       = <span class=\"br0\">(</span><span class=\"br0\">(</span>mid\u0394\u03b8 <span class=\"sy0\">+</span> last\u0394\u03b8<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> mid\u03b8<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\"># Now put the values back in our globals</span><br/>    \u0394\u03b8 = last\u0394\u03b8<br/>    \u03b8  = last\u03b8<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func animate<span class=\"br0\">(</span>Ref id<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    recompute_angle<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    show_pendulum<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">*</span>id = root.<span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">15</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> animate<span class=\"br0\">(</span>id<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>show_pendulum<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>var after_id = root.<span class=\"me1\">after</span><span class=\"br0\">(</span><span class=\"nu0\">500</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> animate<span class=\"br0\">(</span>\\after_id<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>canvas.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"st0\">'&lt;Destroy&gt;'</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> after_id.<span class=\"me1\">cancel</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"sy0\">%</span>S<span class=\"sy0\">&lt;</span>Tk<span class=\"sy0\">&gt;</span>.<span class=\"me1\">MainLoop</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "smart BASIC", "loc": 36, "block": "<pre class=\"text highlighted_source\">'Pendulum<br/>'By Dutchman<br/>' --- constants<br/>g=9.81 ' accelleration of gravity<br/>l=1 ' length of pendulum<br/>GET SCREEN SIZE sw,sh<br/>pivotx=sw/2<br/>pivoty=150<br/>' --- initialise graphics<br/>GRAPHICS<br/>DRAW COLOR 1,0,0<br/>FILL COLOR 0,0,1<br/>DRAW SIZE 2<br/>' --- initialise pendulum<br/>theta=1 ' initial displacement in radians<br/>speed=0<br/>' --- loop<br/>DO<br/>  bobx=pivotx+100*l*SIN(theta)<br/>  boby=pivoty-100*l*COS(theta)<br/>  GOSUB Plot<br/>  PAUSE 0.01<br/>  accel=g*SIN(theta)/l/100<br/>  speed=speed+accel<br/>  theta=theta+speed<br/>UNTIL 0<br/>END<br/>' --- subroutine<br/>Plot:<br/>REFRESH OFF<br/>GRAPHICS CLEAR 1,1,0.5<br/>DRAW LINE pivotx,pivoty TO bobx,boby<br/>FILL CIRCLE bobx,boby SIZE 10<br/>REFRESH ON<br/>RETURN<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 80, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/><span class=\"kw2\">package</span> require Tk<br/>\u00a0<br/><span class=\"co1\"># Make the graphical entities</span><br/>pack <span class=\"br0\">[</span>canvas .c -width <span class=\"nu0\">320</span> -height <span class=\"nu0\">200</span><span class=\"br0\">]</span> -fill both -expand <span class=\"nu0\">1</span><br/>.c create line <span class=\"nu0\">0</span> <span class=\"nu0\">25</span> <span class=\"nu0\">320</span> <span class=\"nu0\">25</span> -width <span class=\"nu0\">2</span> -fill grey50 -tags plate<br/>.c create line <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> -tags rod -width <span class=\"nu0\">3</span> -fill black<br/>.c create oval <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">2</span> -tags bob -fill yellow -outline black<br/>.c create oval <span class=\"nu0\">155</span> <span class=\"nu0\">20</span> <span class=\"nu0\">165</span> <span class=\"nu0\">30</span> -fill grey50 -outline <span class=\"br0\">{</span><span class=\"br0\">}</span> -tags pivot<br/>\u00a0<br/><span class=\"co1\"># Set some vars</span><br/><span class=\"kw1\">set</span> points <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw1\">set</span> Theta   <span class=\"nu0\">45.0</span><br/><span class=\"kw1\">set</span> dTheta   <span class=\"nu0\">0.0</span><br/><span class=\"kw1\">set</span> pi       <span class=\"nu0\">3.1415926535897933</span><br/><span class=\"kw1\">set</span> length <span class=\"nu0\">150</span><br/><span class=\"kw1\">set</span> homeX  <span class=\"nu0\">160</span><br/>\u00a0<br/><span class=\"co1\"># How to respond to a changing in size of the window</span><br/><span class=\"kw1\">proc</span> resized <span class=\"br0\">{</span>width<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> homeX<br/>    .c coords plate <span class=\"nu0\">0</span> <span class=\"nu0\">25</span> <span class=\"re0\">$width</span> <span class=\"nu0\">25</span><br/>    <span class=\"kw1\">set</span> homeX <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$width</span> / <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    .c coords pivot <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$homeX</span>-<span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">20</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$homeX</span>+<span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">30</span><br/>    showPendulum<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># How to actually arrange the pendulum, mapping the model to the display</span><br/><span class=\"kw1\">proc</span> showPendulum <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> Theta dTheta pi length homeX<br/>    <span class=\"kw1\">set</span> angle <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$Theta</span> <span class=\"sy0\">*</span> <span class=\"re0\">$pi</span>/<span class=\"nu0\">180</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$homeX</span> + <span class=\"re0\">$length</span><span class=\"sy0\">*</span>sin<span class=\"br0\">(</span><span class=\"re0\">$angle</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">25</span> + <span class=\"re0\">$length</span><span class=\"sy0\">*</span>cos<span class=\"br0\">(</span><span class=\"re0\">$angle</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    .c coords rod <span class=\"re0\">$homeX</span> <span class=\"nu0\">25</span> <span class=\"re0\">$x</span> <span class=\"re0\">$y</span><br/>    .c coords bob <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span>-<span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span>-<span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span>+<span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$y</span>+<span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># The dynamic part of the display</span><br/><span class=\"kw1\">proc</span> recomputeAngle <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> Theta dTheta pi length<br/>    <span class=\"kw1\">set</span> scaling <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">3000.0</span>/<span class=\"re0\">$length</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <span class=\"co1\"># first estimate</span><br/>    <span class=\"kw1\">set</span> firstDDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>-sin<span class=\"br0\">(</span><span class=\"re0\">$Theta</span> <span class=\"sy0\">*</span> <span class=\"re0\">$pi</span>/<span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$scaling</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> midDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$dTheta</span> + <span class=\"re0\">$firstDDTheta</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> midTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$Theta</span> + <span class=\"br0\">(</span><span class=\"re0\">$dTheta</span> + <span class=\"re0\">$midDTheta</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># second estimate</span><br/>    <span class=\"kw1\">set</span> midDDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>-sin<span class=\"br0\">(</span><span class=\"re0\">$midTheta</span> <span class=\"sy0\">*</span> <span class=\"re0\">$pi</span>/<span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$scaling</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> midDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$dTheta</span> + <span class=\"br0\">(</span><span class=\"re0\">$firstDDTheta</span> + <span class=\"re0\">$midDDTheta</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> midTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$Theta</span> + <span class=\"br0\">(</span><span class=\"re0\">$dTheta</span> + <span class=\"re0\">$midDTheta</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Now we do a double-estimate approach for getting the final value</span><br/>    <span class=\"co1\"># first estimate</span><br/>    <span class=\"kw1\">set</span> midDDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>-sin<span class=\"br0\">(</span><span class=\"re0\">$midTheta</span> <span class=\"sy0\">*</span> <span class=\"re0\">$pi</span>/<span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$scaling</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> lastDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$midDTheta</span> + <span class=\"re0\">$midDDTheta</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> lastTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$midTheta</span> + <span class=\"br0\">(</span><span class=\"re0\">$midDTheta</span> + <span class=\"re0\">$lastDTheta</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># second estimate</span><br/>    <span class=\"kw1\">set</span> lastDDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>-sin<span class=\"br0\">(</span><span class=\"re0\">$lastTheta</span> <span class=\"sy0\">*</span> <span class=\"re0\">$pi</span>/<span class=\"nu0\">180</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"re0\">$scaling</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> lastDTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$midDTheta</span> + <span class=\"br0\">(</span><span class=\"re0\">$midDDTheta</span> + <span class=\"re0\">$lastDDTheta</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> lastTheta <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$midTheta</span> + <span class=\"br0\">(</span><span class=\"re0\">$midDTheta</span> + <span class=\"re0\">$lastDTheta</span><span class=\"br0\">)</span>/<span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Now put the values back in our globals</span><br/>    <span class=\"kw1\">set</span> dTheta <span class=\"re0\">$lastDTheta</span><br/>    <span class=\"kw1\">set</span> Theta <span class=\"re0\">$lastTheta</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Run the animation by updating the physical model then the display</span><br/><span class=\"kw1\">proc</span> animate <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> animation<br/>\u00a0<br/>    recomputeAngle<br/>    showPendulum<br/>\u00a0<br/>    <span class=\"co1\"># Reschedule</span><br/>    <span class=\"kw1\">set</span> animation <span class=\"br0\">[</span>after <span class=\"nu0\">15</span> animate<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">set</span> animation <span class=\"br0\">[</span>after <span class=\"nu0\">500</span> animate<span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"co1\"># Extra initial delay is visually pleasing</span><br/>\u00a0<br/><span class=\"co1\"># Callback to handle resizing of the canvas</span><br/>bind .c <span class=\"sy0\">&lt;</span>Configure<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span>resized <span class=\"sy0\">%</span>w<span class=\"br0\">}</span><br/><span class=\"co1\"># Callback to stop the animation cleanly when the GUI goes away</span><br/>bind .c <span class=\"sy0\">&lt;</span>Destroy<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span>after cancel <span class=\"re0\">$animation</span><span class=\"br0\">}</span></pre>"}, {"lang": "XPL0", "loc": 36, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;          \\intrinsic 'code' declarations<br/>\u00a0<br/>proc    Ball(X0, Y0, R, C);     \\Draw a filled circle<br/>int     X0, Y0, R, C;           \\center coordinates, radius, color<br/>int     X, Y;<br/>for Y:= -R to R do<br/>    for X:= -R to R do<br/>        if X*X + Y*Y &lt;= R*R then Point(X+X0, Y+Y0, C);<br/>\u00a0<br/>\u00a0<br/>def     L  = 2.0,               \\pendulum arm length (meters)<br/>        G  = 9.81,              \\acceleration due to gravity (meters/second^2)<br/>        Pi = 3.14,<br/>        DT = 1.0/72.0;          \\delta time = screen refresh rate (seconds)<br/>def     X0=640/2, Y0=480/2;     \\anchor point = center coordinate<br/>real    S, V, A, T;             \\arc length, velocity, acceleration, theta angle<br/>int     X, Y;                   \\ball coordinates<br/>\u00a0<br/>[SetVid($101);                  \\set 640x480x8 graphic display mode<br/>T:= Pi*0.75;  V:= 0.0;          \\starting angle and velocity<br/>S:= T*L;<br/>repeat  A:= -G*Sin(T);<br/>        V:= V + A*DT;<br/>        S:= S + V*DT;<br/>        T:= S/L;<br/>        X:= X0 + fix(L*100.0*Sin(T));   \\100 scales to fit screen<br/>        Y:= Y0 + fix(L*100.0*Cos(T));<br/>        Move(X0, Y0); Line(X, Y, 7);    \\draw pendulum<br/>        Ball(X, Y, 10, $E\\yellow\\);<br/>        while port($3DA) &amp; $08 do [];   \\wait for vertical retrace to go away<br/>        repeat until port($3DA) &amp; $08;  \\wait for vertical retrace signal<br/>        Move(X0, Y0); Line(X, Y, 0);    \\erase pendulum<br/>        Ball(X, Y, 10, 0\\black\\);<br/>until   KeyHit;                         \\keystroke terminates program<br/>SetVid(3);                              \\restore normal text screen<br/>]</pre>"}, {"lang": "Yabasic", "loc": 27, "block": "<pre class=\"text highlighted_source\">clear screen<br/>open window 400, 300<br/>window origin \"cc\"<br/>\u00a0<br/>rodLen = 160<br/>gravity = 2<br/>damp = .989<br/>TWO_PI = pi * 2<br/>angle = 90 * 0.01745329251 // convert degree to radian<br/>\u00a0<br/>repeat<br/>    acceleration = -gravity / rodLen * sin(angle)<br/>    angle = angle + velocity\u00a0: if angle &gt; TWO_PI angle = 0<br/>    velocity = velocity + acceleration<br/>    velocity = velocity * damp<br/>    posX = sin(angle) * rodLen<br/>    posY = cos(angle) * rodLen - 70<br/>    clear window<br/>    text -50, -100, \"Press 'q' to quit\"<br/>    color 250, 0, 250<br/>    fill circle 0, -70, 4<br/>    line 0, -70, posX, posY<br/>    color 250, 100, 20<br/>    fill circle posX, posY, 10<br/>until(lower$(inkey$(0.02)) = \"q\")<br/>\u00a0<br/>exit</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 17, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">OVER</span> <span class=\"nu0\">1</span>: <span class=\"kw1\">CLS</span> <br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> theta=<span class=\"nu0\">1</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> g=<span class=\"nu0\">9.81</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">LET</span> l=<span class=\"nu0\">0.5</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">LET</span> speed=<span class=\"nu0\">0</span><br/><span class=\"nu0\">100</span> <span class=\"kw1\">LET</span> pivotx=<span class=\"nu0\">120</span><br/><span class=\"nu0\">110</span> <span class=\"kw1\">LET</span> pivoty=<span class=\"nu0\">140</span><br/><span class=\"nu0\">120</span> <span class=\"kw1\">LET</span> bobx=pivotx+l*<span class=\"nu0\">100</span>*<span class=\"kw3\">SIN</span> <span class=\"br0\">(</span>theta<span class=\"br0\">)</span><br/><span class=\"nu0\">130</span> <span class=\"kw1\">LET</span> boby=pivoty+l*<span class=\"nu0\">100</span>*<span class=\"kw3\">COS</span> <span class=\"br0\">(</span>theta<span class=\"br0\">)</span><br/><span class=\"nu0\">140</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span>: <span class=\"kw1\">PAUSE</span> <span class=\"nu0\">1</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">190</span> <span class=\"kw1\">LET</span> accel=g*<span class=\"kw3\">SIN</span> <span class=\"br0\">(</span>theta<span class=\"br0\">)</span>/l/<span class=\"nu0\">100</span><br/><span class=\"nu0\">200</span> <span class=\"kw1\">LET</span> speed=speed+accel/<span class=\"nu0\">100</span><br/><span class=\"nu0\">210</span> <span class=\"kw1\">LET</span> theta=theta+speed<br/><span class=\"nu0\">220</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">100</span><br/><span class=\"nu0\">1000</span> <span class=\"kw1\">PLOT</span> pivotx,pivoty: <span class=\"kw1\">DRAW</span> bobx-pivotx,boby-pivoty<br/><span class=\"nu0\">1010</span> <span class=\"kw1\">CIRCLE</span> bobx,boby,<span class=\"nu0\">3</span><br/><span class=\"nu0\">1020</span> <span class=\"kw1\">RETURN</span></pre>"}]}