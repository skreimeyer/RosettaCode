{"task": "Update_a_configuration_file", "blocks": [{"lang": "AutoHotkey", "loc": 92, "block": "<pre class=\"autohotkey highlighted_source\"><span class=\"co1\">; Author: AlephX, Aug 17 2011</span><br/>data <span class=\"sy0\">=</span> <span class=\"re0\">%A_scriptdir%</span>\\rosettaconfig<span class=\"sy0\">.</span>txt<br/>outdata <span class=\"sy0\">=</span> <span class=\"re0\">%A_scriptdir%</span>\\rosettaconfig<span class=\"sy0\">.</span>tmp<br/><a href=\"http://www.autohotkey.com/docs/commands/FileDelete.htm\"><span class=\"kw3\">FileDelete</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%outdata%</span><br/>\u00a0<br/>NUMBEROFBANANAS <span class=\"sy0\">:=</span> <span class=\"nu0\">1024</span><br/>numberofstrawberries <span class=\"sy0\">:=</span> <span class=\"nu0\">560</span><br/>NEEDSPEELING <span class=\"sy0\">=</span> <span class=\"st0\">\"0\"</span><br/>FAVOURITEFRUIT <span class=\"sy0\">:=</span> <span class=\"st0\">\"bananas\"</span><br/>SEEDSREMOVED <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><br/>BOOL0 <span class=\"sy0\">=</span> <span class=\"st0\">\"0\"</span><br/>BOOL1 <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><br/>NUMBER1 <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><br/>number0 <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>STRINGA <span class=\"sy0\">:=</span> <span class=\"st0\">\"string here\"</span><br/>\u00a0<br/>parameters <span class=\"sy0\">=</span> bool0|bool1|NUMBER1|number0|stringa|NEEDSPEELING|seedsremoved|numberofbananas|numberofstrawberries<br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Read<span class=\"sy0\">,</span> <span class=\"re0\">%data%</span><span class=\"sy0\">,</span> <span class=\"re0\">%outdata%</span><br/>\t<span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">instr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\"#\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"kw1\">OR</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a> <span class=\"sy0\">==</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\tLine <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">else</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">instr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\";\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\tparameter <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/RegExReplace.htm\"><span class=\"kw3\">RegExReplace</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Substr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"^[ \\s]+|[ \\s]+$\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\tparametervalue <span class=\"sy0\">=</span> <span class=\"re0\">%parameter%</span><br/>\t\t\tvalue <span class=\"sy0\">:=</span> <span class=\"re0\">%parametervalue%</span><br/>\t\t\t<span class=\"kw1\">if</span> value <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><br/>\t\t\t\tLine <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_loopReadLine</span></a><br/>\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\tLine <span class=\"sy0\">:=</span> Parameter<br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">else</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\tparameter <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/commands/RegExReplace.htm\"><span class=\"kw3\">RegExReplace</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><span class=\"sy0\">,</span> <span class=\"st0\">\"^[ \\s]+|[ \\s]+$\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">instr</span></a><span class=\"br0\">(</span>parameter<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Space\"><span class=\"kw2\">A_Space</span></a><span class=\"br0\">)</span><br/>\t\t\t\tparameter <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">substr</span></a><span class=\"br0\">(</span>parameter<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">instr</span></a><span class=\"br0\">(</span>parameter<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Space\"><span class=\"kw2\">A_Space</span></a><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">instr</span></a><span class=\"br0\">(</span>parameters<span class=\"sy0\">,</span> parameter<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tparametervalue <span class=\"sy0\">=</span> <span class=\"re0\">%parameter%</span><br/>\t\t\t\tvalue <span class=\"sy0\">:=</span> <span class=\"re0\">%parametervalue%</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>value <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"0\"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\tLine <span class=\"sy0\">:=</span> <span class=\"st0\">\"; \"</span> <span class=\"sy0\">.</span> Parameter<br/>\t\t\t\t<span class=\"kw1\">else</span>\t<br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>value <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"1\"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t\tLine <span class=\"sy0\">:=</span> Parameter<br/>\t\t\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\t\t\tLine <span class=\"sy0\">=</span> <span class=\"re0\">%parametervalue%</span> <span class=\"re0\">%value%</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\tLine <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><br/>\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/StringReplace.htm\"><span class=\"kw3\">StringReplace</span></a><span class=\"sy0\">,</span> parameters<span class=\"sy0\">,</span> parameters<span class=\"sy0\">,</span> <span class=\"re0\">%parametervalue%</span><span class=\"sy0\">,,</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/StringReplace.htm\"><span class=\"kw3\">StringReplace</span></a><span class=\"sy0\">,</span> parameters<span class=\"sy0\">,</span> parameters<span class=\"sy0\">,</span>||<span class=\"sy0\">,</span>|<br/>\u00a0<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%Line%</span>`n<br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> parse<span class=\"sy0\">,</span> parameters<span class=\"sy0\">,</span>|<br/>\t<span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_Loopfield</span></a> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/StringUpper.htm\"><span class=\"kw3\">StringUpper</span></a><span class=\"sy0\">,</span> parameter<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>\t\tparametervalue <span class=\"sy0\">=</span> <span class=\"re0\">%parameter%</span><br/>\t\tvalue <span class=\"sy0\">:=</span> <span class=\"re0\">%parametervalue%</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>value <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"0\"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\tLine <span class=\"sy0\">:=</span> <span class=\"st0\">\"; \"</span> <span class=\"sy0\">.</span> parameter<br/>\t\t<span class=\"kw1\">else</span>\t<br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>value <span class=\"sy0\">=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"1\"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">chr</span></a><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\tLine <span class=\"sy0\">:=</span> parameter<br/>\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\tLine <span class=\"sy0\">=</span> <span class=\"re0\">%parametervalue%</span> <span class=\"re0\">%value%</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%Line%</span>`n<span class=\"sy0\">,</span> <span class=\"re0\">%outdata%</span>\t\t<br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/FileCopy.htm\"><span class=\"kw3\">FileCopy</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%A_scriptdir%</span>\\rosettaconfig<span class=\"sy0\">.</span>tmp<span class=\"sy0\">,</span> <span class=\"re0\">%A_scriptdir%</span>\\rosettaconfig<span class=\"sy0\">.</span>txt<span class=\"sy0\">,</span> <span class=\"nu0\">1</span></pre>"}, {"lang": "BASIC", "loc": 682, "block": "<pre class=\"qbasic highlighted_source\">\u00a0<br/><span class=\"co1\">' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' '</span><br/><span class=\"co1\">' Read a Configuration File V1.0                    '</span><br/><span class=\"co1\">'                                                   '</span><br/><span class=\"co1\">' Developed by A. David Garza Mar\u00edn in VB-DOS for   '</span><br/><span class=\"co1\">' RosettaCode. December 2, 2016.                    '</span><br/><span class=\"co1\">' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' '</span><br/>\u00a0<br/><span class=\"co1\">' OPTION EXPLICIT  ' For VB-DOS, PDS 7.1</span><br/><span class=\"co1\">' OPTION _EXPLICIT  ' For QB64</span><br/>\u00a0<br/><span class=\"co1\">' SUBs and FUNCTIONs</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">SUB</span> AppendCommentToConfFile <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> LeaveALine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">SUB</span> setNValToVarArr <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckdouble.shtml\"><span class=\"kw3\">DOUBLE</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">SUB</span> setSValToVar <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">SUB</span> setSValToVarArr <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">SUB</span> doModifyArrValueFromConfFile <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Separator <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> ToComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">SUB</span> doModifyValueFromConfFile <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Separator <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> ToComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> CreateConfFile% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> ErrorMessage$ <span class=\"br0\">(</span>WhichError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> FileExists% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> FindVarPos% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> FindVarPosArr% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> getArrayVariable$ <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> getVariable$ <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> getVarType% <span class=\"br0\">(</span>WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> GetDummyFile$ <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> HowManyElementsInTheArray% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> IsItAnArray% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> IsItTheVariableImLookingFor% <span class=\"br0\">(</span>TextToAnalyze <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> NewValueForTheVariable$ <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Separator <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> ReadConfFile% <span class=\"br0\">(</span>NameOfConfFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> YorN$ <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">' Register for values located</span><br/><a href=\"http://www.qbasicnews.com/qboho/qcktype.shtml\"><span class=\"kw3\">TYPE</span></a> regVarValue<br/>  VarName <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">20</span><br/>  VarType <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a> <span class=\"co1\">' 1=String, 2=Integer, 3=Real, 4=Comment</span><br/>  VarValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">30</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcktype.shtml\"><span class=\"kw3\">TYPE</span></a><br/>\u00a0<br/><span class=\"co1\">' Var</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<span class=\"sy0\">,</span> iErr <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iArrayElements <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iWhichElement <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iCommentStat <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iAnArray <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iSave <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> otherfamily<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckconst.shtml\"><span class=\"kw3\">CONST</span></a> ConfFileName <span class=\"sy0\">=</span> <span class=\"st0\">\"config2.fil\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckconst.shtml\"><span class=\"kw3\">CONST</span></a> False <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> True <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> False<br/>\u00a0<br/><span class=\"co1\">' ------------------- Main Program ------------------------</span><br/><span class=\"kw1\">DO</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckcls.shtml\"><span class=\"kw3\">CLS</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckerase.shtml\"><span class=\"kw3\">ERASE</span></a> rVarValue<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"This program reads a configuration file and shows the result.\"</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Default file name: \"</span>; ConfFileName<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>  iErr <span class=\"sy0\">=</span> ReadConfFile<span class=\"br0\">(</span>ConfFileName<span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> iErr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    iHMV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Variables found in file:\"</span><br/>    <span class=\"kw1\">FOR</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> iHMV<br/>      <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarName<span class=\"br0\">)</span>; <span class=\"st0\">\" = \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span>; <span class=\"st0\">\" (\"</span>;<br/>      <span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span> rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarType<br/>        <span class=\"kw1\">CASE</span> <span class=\"nu0\">0</span>: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Undefined\"</span>;<br/>        <span class=\"kw1\">CASE</span> <span class=\"nu0\">1</span>: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"String\"</span>;<br/>        <span class=\"kw1\">CASE</span> <span class=\"nu0\">2</span>: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Integer\"</span>;<br/>        <span class=\"kw1\">CASE</span> <span class=\"nu0\">3</span>: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Real\"</span>;<br/>        <span class=\"kw1\">CASE</span> <span class=\"nu0\">4</span>: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Is a commented variable\"</span>;<br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SELECT</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\")\"</span><br/>    <span class=\"kw1\">NEXT</span> i<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>\u00a0<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <span class=\"st0\">\"Type the variable name to modify (Blank=End)\"</span>; sVar<br/>    sVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>sVar<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sVar<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>       i <span class=\"sy0\">=</span> FindVarPos%<span class=\"br0\">(</span>sVar<span class=\"br0\">)</span><br/>       <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"co1\">' Variable found</span><br/>         iAnArray <span class=\"sy0\">=</span> IsItAnArray%<span class=\"br0\">(</span>sVar<span class=\"br0\">)</span><br/>         <span class=\"kw1\">IF</span> iAnArray <span class=\"kw1\">THEN</span><br/>           iArrayElements <span class=\"sy0\">=</span> HowManyElementsInTheArray%<span class=\"br0\">(</span>sVar<span class=\"br0\">)</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"This is an array of\"</span>; iArrayElements; <span class=\"st0\">\" elements.\"</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <span class=\"st0\">\"Which one do you want to modify (Default=1)\"</span>; iWhichElement<br/>           <span class=\"kw1\">IF</span> iWhichElement <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> iWhichElement <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>         <span class=\"kw1\">ELSE</span><br/>           iArrayElements <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>           iWhichElement <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"The current value of the variable is: \"</span><br/>         <span class=\"kw1\">IF</span> iAnArray <span class=\"kw1\">THEN</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> sVar; <span class=\"st0\">\"(\"</span>; iWhichElement; <span class=\"st0\">\") = \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"br0\">(</span>iWhichElement <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span><br/>         <span class=\"kw1\">ELSE</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> sVar; <span class=\"st0\">\" = \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"br0\">(</span>iWhichElement <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <span class=\"kw1\">ELSE</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"The variable was not found. It will be added.\"</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <span class=\"st0\">\"Please, set the new value for the variable (Blank=Unmodified)\"</span>; sVal<br/>       sVal <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>sVal<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>         <span class=\"kw1\">IF</span> rVarValue<span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"br0\">(</span>iWhichElement <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.VarType <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"kw1\">THEN</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Do you want to remove the comment status to the variable? (Y/N)\"</span><br/>           iCommentStat <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> <span class=\"br0\">(</span>YorN <span class=\"sy0\">=</span> <span class=\"st0\">\"Y\"</span><span class=\"br0\">)</span><br/>           iCommentStat <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckabs.shtml\"><span class=\"kw3\">ABS</span></a><span class=\"br0\">(</span>iCommentStat<span class=\"br0\">)</span> <span class=\"co1\">' Gets 0 (Toggle) or 1 (Leave unmodified)</span><br/>           iSave <span class=\"sy0\">=</span> <span class=\"br0\">(</span>iCommentStat <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">ELSE</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Do you want to toggle the variable as a comment? (Y/N)\"</span><br/>           iCommentStat <span class=\"sy0\">=</span> <span class=\"br0\">(</span>YorN <span class=\"sy0\">=</span> <span class=\"st0\">\"Y\"</span><span class=\"br0\">)</span> <span class=\"co1\">' Gets 0 (Uncommented) or -1 (Toggle as a Comment)</span><br/>           iSave <span class=\"sy0\">=</span> iCommentStat<br/>         <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>       <span class=\"co1\">' Now, update or add the variable to the conf file</span><br/>       <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>         <span class=\"kw1\">IF</span> sVal <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>           sVal <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <span class=\"kw1\">ELSE</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"The variable will be added to the configuration file.\"</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Do you want to add a remark for it? (Y/N)\"</span><br/>         <span class=\"kw1\">IF</span> YorN$ <span class=\"sy0\">=</span> <span class=\"st0\">\"Y\"</span> <span class=\"kw1\">THEN</span><br/>           <a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <span class=\"st0\">\"Please, write your remark: \"</span><span class=\"sy0\">,</span> sComment<br/>           sComment <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>sComment<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"kw1\">IF</span> sComment <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>             AppendCommentToConfFile ConfFileName<span class=\"sy0\">,</span> sComment<span class=\"sy0\">,</span> True<br/>           <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>       <span class=\"co1\">' Verifies if the variable will be modified, and applies the modification</span><br/>       <span class=\"kw1\">IF</span> sVal <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> iSave <span class=\"kw1\">THEN</span><br/>         <span class=\"kw1\">IF</span> iWhichElement <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span><br/>           setSValToVarArr sVar<span class=\"sy0\">,</span> iWhichElement<span class=\"sy0\">,</span> sVal<br/>           doModifyArrValueFromConfFile ConfFileName<span class=\"sy0\">,</span> sVar<span class=\"sy0\">,</span> iWhichElement<span class=\"sy0\">,</span> sVal<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> iCommentStat<br/>         <span class=\"kw1\">ELSE</span><br/>           setSValToVar sVar<span class=\"sy0\">,</span> sVal<br/>           doModifyValueFromConfFile ConfFileName<span class=\"sy0\">,</span> sVar<span class=\"sy0\">,</span> sVal<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> iCommentStat<br/>         <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <span class=\"kw1\">ELSE</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> ErrorMessage$<span class=\"br0\">(</span>iErr<span class=\"br0\">)</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Do you want to add or modify another variable? (Y/N)\"</span><br/><span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> YorN$ <span class=\"sy0\">=</span> <span class=\"st0\">\"N\"</span><br/><span class=\"co1\">' --------- End of Main Program -----------------------</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"End of program.\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a><br/>\u00a0<br/>FileError:<br/>  iErr <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckerr.shtml\"><span class=\"kw3\">ERR</span></a><br/><span class=\"kw1\">RESUME</span> <span class=\"kw1\">NEXT</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> AppendCommentToConfFile <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> LeaveALine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>   <span class=\"co1\">' Parameters:</span><br/>   <span class=\"co1\">' WhichFile: Name of the file where a comment will be appended.</span><br/>   <span class=\"co1\">' WhichComment: A comment. It is suggested to add a comment no larger than 75 characters.</span><br/>   <span class=\"co1\">'               This procedure adds a # at the beginning of the string if there is no #</span><br/>   <span class=\"co1\">'               sign on it in order to ensure it will be added as a comment.</span><br/>\u00a0<br/>   <span class=\"co1\">' Var</span><br/>   <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFil <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>   iFil <span class=\"sy0\">=</span> FileExists%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span><br/>   <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> iFil <span class=\"kw1\">THEN</span><br/>     iFil <span class=\"sy0\">=</span> CreateConfFile%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span>  <span class=\"co1\">' Here, iFil is used as dummy to save memory</span><br/>   <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>   <span class=\"kw1\">IF</span> iFil <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Everything is Ok</span><br/>     iFil <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a> <span class=\"co1\">' Now, iFil is used to be the ID of the file</span><br/>     WhichComment <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>WhichComment<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>     <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>WhichComment<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"#\"</span> <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Is it in comment format?</span><br/>       WhichComment <span class=\"sy0\">=</span> <span class=\"st0\">\"# \"</span> <span class=\"sy0\">+</span> WhichComment<br/>     <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>     <span class=\"co1\">' Append the comment to the file</span><br/>     <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckappend.shtml\"><span class=\"kw3\">APPEND</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFil<br/>       <span class=\"kw1\">IF</span> LeaveALine <span class=\"kw1\">THEN</span><br/>         <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> #iFil<span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>       <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> #iFil<span class=\"sy0\">,</span> WhichComment<br/>     <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> #iFil<br/>   <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> CreateConfFile% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> FileError<br/>\u00a0<br/>  iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckoutput.shtml\"><span class=\"kw3\">OUTPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> iFile<br/>\u00a0<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>  CreateConfFile <span class=\"sy0\">=</span> FileExists%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> doModifyArrValueFromConfFile <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Separator <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> ToComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Parameters:</span><br/>    <span class=\"co1\">' WhichFile: The name of the Configuration File. It can include the full path.</span><br/>    <span class=\"co1\">' WhichVariable: The name of the variable to be modified or added to the conf file.</span><br/>    <span class=\"co1\">' WhichIndex: The index number of the element to be modified in a matrix (Default=1)</span><br/>    <span class=\"co1\">' WhatValue: The new value to set in the variable specified in WhichVariable.</span><br/>    <span class=\"co1\">' Separator: The separator between the variable name and its value in the conf file. Defaults to a space \" \".</span><br/>    <span class=\"co1\">' ToComment: A value to set or remove the comment mode of a variable: -1=Toggle to Comment, 0=Toggle to not comment, 1=Leave as it is.</span><br/>\u00a0<br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iFile2 <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iMod <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iIsComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sDummyFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sChar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>    <span class=\"co1\">' If conf file doesn't exists, create one.</span><br/>    iError <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    iMod <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> FileExists%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>      iError <span class=\"sy0\">=</span> CreateConfFile%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> iError <span class=\"kw1\">THEN</span>  <span class=\"co1\">' File exists or it was created</span><br/>      Separator <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>Separator<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">IF</span> Separator <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>        Separator <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span>  <span class=\"co1\">' Defaults to Space</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>      sDummyFile <span class=\"sy0\">=</span> GetDummyFile$<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"co1\">' It is assumed a text file</span><br/>      iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>\u00a0<br/>      iFile2 <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> sDummyFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckoutput.shtml\"><span class=\"kw3\">OUTPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile2<br/>\u00a0<br/>      <span class=\"co1\">' Goes through the file to find the variable</span><br/>      <span class=\"kw1\">DO</span> <span class=\"kw1\">WHILE</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckeof.shtml\"><span class=\"kw3\">EOF</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> #iFile<span class=\"sy0\">,</span> sLine<br/>        sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        sChar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        iIsComment <span class=\"sy0\">=</span> <span class=\"br0\">(</span>sChar <span class=\"sy0\">=</span> <span class=\"st0\">\";\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> iIsComment <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Variable is commented</span><br/>          sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>        <span class=\"kw1\">IF</span> sChar <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"#\"</span> <a href=\"http://www.qbasicnews.com/qboho/qckand.shtml\"><span class=\"kw3\">AND</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"co1\">' Is not a comment?</span><br/>          <span class=\"kw1\">IF</span> IsItTheVariableImLookingFor%<span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> WhichVariable<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>             sLine <span class=\"sy0\">=</span> NewValueForTheVariable$<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> WhichIndex<span class=\"sy0\">,</span> WhatValue<span class=\"sy0\">,</span> Separator<span class=\"br0\">)</span><br/>             iMod <span class=\"sy0\">=</span> True<br/>             <span class=\"kw1\">IF</span> ToComment <span class=\"sy0\">=</span> True <span class=\"kw1\">THEN</span><br/>               sLine <span class=\"sy0\">=</span> <span class=\"st0\">\"; \"</span> <span class=\"sy0\">+</span> sLine<br/>             <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>          <span class=\"kw1\">ELSEIF</span> iIsComment <span class=\"kw1\">THEN</span><br/>             sLine <span class=\"sy0\">=</span> <span class=\"st0\">\"; \"</span> <span class=\"sy0\">+</span> sLine<br/>          <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> #iFile2<span class=\"sy0\">,</span> sLine<br/>      <span class=\"kw1\">LOOP</span><br/>\u00a0<br/>      <span class=\"co1\">' Reviews if a modification was done, if not, then it will</span><br/>      <span class=\"co1\">'   add the variable to the file.</span><br/>      <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> iMod <span class=\"kw1\">THEN</span><br/>        sLine <span class=\"sy0\">=</span> NewValueForTheVariable$<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> WhatValue<span class=\"sy0\">,</span> Separator<span class=\"br0\">)</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> #iFile2<span class=\"sy0\">,</span> sLine<br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> iFile2<span class=\"sy0\">,</span> iFile<br/>\u00a0<br/>      <span class=\"co1\">' Removes the conf file and sets the dummy file as the conf file</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckkill.shtml\"><span class=\"kw3\">KILL</span></a> WhichFile<br/>      <a href=\"http://www.qbasicnews.com/qboho/qckname.shtml\"><span class=\"kw3\">NAME</span></a> sDummyFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> WhichFile<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> doModifyValueFromConfFile <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Separator <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> ToComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' To see details of parameters, please see doModifyArrValueFromConfFile</span><br/>  doModifyArrValueFromConfFile WhichFile<span class=\"sy0\">,</span> WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> WhatValue<span class=\"sy0\">,</span> Separator<span class=\"sy0\">,</span> ToComment<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> ErrorMessage$ <span class=\"br0\">(</span>WhichError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>    <span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span> WhichError<br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">0</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"Everything went ok.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">1</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"Configuration file doesn't exist.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">2</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"There are no variables in the given file.\"</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SELECT</span><br/>\u00a0<br/>    ErrorMessage$ <span class=\"sy0\">=</span> sError<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> FileExists% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iItExists <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> iErr <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> FileError<br/>    iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>    iErr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckbinary.shtml\"><span class=\"kw3\">BINARY</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>    <span class=\"kw1\">IF</span> iErr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        iItExists <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qcklof.shtml\"><span class=\"kw3\">LOF</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> #iFile<br/>\u00a0<br/>        <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> iItExists <span class=\"kw1\">THEN</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckkill.shtml\"><span class=\"kw3\">KILL</span></a> WhichFile<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> <span class=\"nu0\">0</span><br/>    FileExists% <span class=\"sy0\">=</span> iItExists<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> FindVarPos% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Will find the position of the variable</span><br/>  FindVarPos% <span class=\"sy0\">=</span> FindVarPosArr%<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> FindVarPosArr% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iCount <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iPos <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sWV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>\u00a0<br/>  <span class=\"co1\">' Looks for a variable name and returns its position</span><br/>  iHMV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span><br/>  sWV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  sVal <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>  iCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">DO</span><br/>    i <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    sVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarName<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> sVar <span class=\"sy0\">=</span> sWV <span class=\"kw1\">THEN</span><br/>      iCount <span class=\"sy0\">=</span> iCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">IF</span> iCount <span class=\"sy0\">=</span> WhichIndex <span class=\"kw1\">THEN</span><br/>        iPos <span class=\"sy0\">=</span> i<br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> i <span class=\"sy0\">&gt;=</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> iPos <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>  FindVarPosArr% <span class=\"sy0\">=</span> iPos<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> getArrayVariable$ <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>\u00a0<br/>  i <span class=\"sy0\">=</span> FindVarPosArr%<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> WhichIndex<span class=\"br0\">)</span><br/>  sVal <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    sVal <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  <span class=\"co1\">' Found it or not, it will return the result.</span><br/>  <span class=\"co1\">' If the result is \"\" then it didn't found the requested variable.</span><br/>  getArrayVariable$ <span class=\"sy0\">=</span> sVal<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> GetDummyFile$ <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> j <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>    <span class=\"co1\">' Gets the path specified in WhichFile</span><br/>    i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">DO</span><br/>        j <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> WhichFile<span class=\"sy0\">,</span> <span class=\"st0\">\"\\\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> i <span class=\"sy0\">=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    GetDummyFile$ <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>WhichFile<span class=\"sy0\">,</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"$dummyf$.tmp\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> getVariable$ <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>  <span class=\"co1\">' For a single variable, looks in the first (and only)</span><br/>  <span class=\"co1\">'   element of the array that contains the name requested.</span><br/>  sVal <span class=\"sy0\">=</span> getArrayVariable$<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>  getVariable$ <span class=\"sy0\">=</span> sVal<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> getVarType% <span class=\"br0\">(</span>WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> dValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckdouble.shtml\"><span class=\"kw3\">DOUBLE</span></a><span class=\"sy0\">,</span> iType <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>  sValue <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>WhatValue<span class=\"br0\">)</span><br/>  iType <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sValue<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckasc.shtml\"><span class=\"kw3\">ASC</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sValue<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">48</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckasc.shtml\"><span class=\"kw3\">ASC</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sValue<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">57</span> <span class=\"kw1\">THEN</span><br/>      iType <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>  <span class=\"co1\">' String</span><br/>    <span class=\"kw1\">ELSE</span><br/>      dValue <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckval.shtml\"><span class=\"kw3\">VAL</span></a><span class=\"br0\">(</span>sValue<span class=\"br0\">)</span><br/>      <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckclng.shtml\"><span class=\"kw3\">CLNG</span></a><span class=\"br0\">(</span>dValue<span class=\"br0\">)</span> <span class=\"sy0\">=</span> dValue <span class=\"kw1\">THEN</span><br/>        iType <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"co1\">' Integer</span><br/>      <span class=\"kw1\">ELSE</span><br/>        iType <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <span class=\"co1\">' Real</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  getVarType% <span class=\"sy0\">=</span> iType<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> HowManyElementsInTheArray% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iCount <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iPos <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iQuit <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sWV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>\u00a0<br/>  <span class=\"co1\">' Looks for a variable name and returns its value</span><br/>  iHMV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span><br/>  sWV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  sVal <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>\u00a0<br/>  <span class=\"co1\">' Look for all instances of WhichVariable in the</span><br/>  <span class=\"co1\">'  list. This is because elements of an array will not alwasy</span><br/>  <span class=\"co1\">'  be one after another, but alternate.</span><br/>  <span class=\"kw1\">FOR</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> iHMV<br/>    sVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarName<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> sVar <span class=\"sy0\">=</span> sWV <span class=\"kw1\">THEN</span><br/>      iCount <span class=\"sy0\">=</span> iCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <span class=\"kw1\">NEXT</span> i<br/>\u00a0<br/>  HowManyElementsInTheArray <span class=\"sy0\">=</span> iCount<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> IsItAnArray% <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Returns if a Variable is an Array</span><br/>  IsItAnArray% <span class=\"sy0\">=</span> <span class=\"br0\">(</span>HowManyElementsInTheArray%<span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> IsItTheVariableImLookingFor% <span class=\"br0\">(</span>TextToAnalyze <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sDT <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sDV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iSep <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>  sDT <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>TextToAnalyze<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  sDV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  iSep <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>sDT<span class=\"sy0\">,</span> <span class=\"st0\">\"=\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> iSep <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> iSep <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>sDT<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> iSep <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    sVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sDT<span class=\"sy0\">,</span> iSep <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ELSE</span><br/>    sVar <span class=\"sy0\">=</span> sDT<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  <span class=\"co1\">' It will return True or False</span><br/>  IsItTheVariableImLookingFor% <span class=\"sy0\">=</span> <span class=\"br0\">(</span>sVar <span class=\"sy0\">=</span> sDV<span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> NewValueForTheVariable$ <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Separator <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iItem <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iItems <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iFirstItem <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iCount <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sVar2 <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>\u00a0<br/>  <span class=\"kw1\">IF</span> IsItAnArray%<span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>    iItems <span class=\"sy0\">=</span> HowManyElementsInTheArray<span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span><br/>    iFirstItem <span class=\"sy0\">=</span> FindVarPosArr%<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ELSE</span><br/>    iItems <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    iFirstItem <span class=\"sy0\">=</span> FindVarPos%<span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  iItem <span class=\"sy0\">=</span> FindVarPosArr%<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> WhichIndex<span class=\"br0\">)</span><br/>  sLine <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>  sVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span>WhichVariable<span class=\"br0\">)</span><br/>  iHMV <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">IF</span> iItem <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    i <span class=\"sy0\">=</span> iFirstItem<br/>    <span class=\"kw1\">DO</span><br/>      sVar2 <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarName<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"kw1\">IF</span> sVar <span class=\"sy0\">=</span> sVar2 <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Does it found an element of the array?</span><br/>        iCount <span class=\"sy0\">=</span> iCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"co1\">' Add a comma</span><br/>          sLine <span class=\"sy0\">=</span> sLine <span class=\"sy0\">+</span> <span class=\"st0\">\", \"</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>        <span class=\"kw1\">IF</span> i <span class=\"sy0\">=</span> iItem <span class=\"kw1\">THEN</span><br/>          sLine <span class=\"sy0\">=</span> sLine <span class=\"sy0\">+</span> WhatValue<br/>        <span class=\"kw1\">ELSE</span><br/>          sLine <span class=\"sy0\">=</span> sLine <span class=\"sy0\">+</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>      i <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> i <span class=\"sy0\">&gt;</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> iCount <span class=\"sy0\">=</span> iItems<br/>\u00a0<br/>    sLine <span class=\"sy0\">=</span> WhichVariable <span class=\"sy0\">+</span> Separator <span class=\"sy0\">+</span> sLine<br/>  <span class=\"kw1\">ELSE</span><br/>    sLine <span class=\"sy0\">=</span> WhichVariable <span class=\"sy0\">+</span> Separator <span class=\"sy0\">+</span> WhatValue<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  NewValueForTheVariable$ <span class=\"sy0\">=</span> sLine<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> ReadConfFile% <span class=\"br0\">(</span>NameOfConfFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iType <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iHMV <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iCurVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iErr <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> dValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckdouble.shtml\"><span class=\"kw3\">DOUBLE</span></a><span class=\"sy0\">,</span> iIsComment <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sValue  <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>\u00a0<br/>  <span class=\"co1\">' This procedure reads a configuration file with variables</span><br/>  <span class=\"co1\">'  and values separated by the equal sign (=) or a space.</span><br/>  <span class=\"co1\">'  It needs the FileExists% function.</span><br/>  <span class=\"co1\">'  Lines begining with # or blank will be ignored.</span><br/>  <span class=\"kw1\">IF</span> FileExists%<span class=\"br0\">(</span>NameOfConfFile<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>    iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckredim.shtml\"><span class=\"kw3\">REDIM</span></a> rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> NameOfConfFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>      <span class=\"kw1\">WHILE</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckeof.shtml\"><span class=\"kw3\">EOF</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> #iFile<span class=\"sy0\">,</span> sLine<br/>        sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"co1\">' Does it have any content?</span><br/>          <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"#\"</span> <span class=\"kw1\">THEN</span>   <span class=\"co1\">' Is not a comment?</span><br/>            iIsComment <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\";\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">IF</span> iIsComment <span class=\"kw1\">THEN</span> <span class=\"co1\">' It is a commented variable</span><br/>              sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>            iVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"st0\">\"=\"</span><span class=\"br0\">)</span>  <span class=\"co1\">' Is there an equal sign?</span><br/>            <span class=\"kw1\">IF</span> iVar <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> iVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"co1\">' if not then is there a space?</span><br/>\u00a0<br/>            <span class=\"kw1\">GOSUB</span> AddASpaceForAVariable<br/>            iCurVar <span class=\"sy0\">=</span> iHMV<br/>            <span class=\"kw1\">IF</span> iVar <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Is a variable and a value</span><br/>              rVarValue<span class=\"br0\">(</span>iHMV<span class=\"br0\">)</span>.VarName <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> iVar <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">ELSE</span>              <span class=\"co1\">' Is just a variable name</span><br/>              rVarValue<span class=\"br0\">(</span>iHMV<span class=\"br0\">)</span>.VarName <span class=\"sy0\">=</span> sLine<br/>              rVarValue<span class=\"br0\">(</span>iHMV<span class=\"br0\">)</span>.VarValue <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>            <span class=\"kw1\">IF</span> iVar <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Get the value(s)</span><br/>              sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> iVar <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <span class=\"kw1\">DO</span>  <span class=\"co1\">' Look for commas</span><br/>                iVal <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">IF</span> iVal <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span>  <span class=\"co1\">' There is a comma</span><br/>                  rVarValue<span class=\"br0\">(</span>iHMV<span class=\"br0\">)</span>.VarValue <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> iVal <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                  <span class=\"kw1\">GOSUB</span> AddASpaceForAVariable<br/>                  rVarValue<span class=\"br0\">(</span>iHMV<span class=\"br0\">)</span>.VarName <span class=\"sy0\">=</span> rVarValue<span class=\"br0\">(</span>iHMV <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.VarName  <span class=\"co1\">' Repeats the variable name</span><br/>                  sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>sLine<span class=\"sy0\">,</span> iVal <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>              <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> iVal <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>              rVarValue<span class=\"br0\">(</span>iHMV<span class=\"br0\">)</span>.VarValue <span class=\"sy0\">=</span> sLine<br/>\u00a0<br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>            <span class=\"co1\">' Determine the variable type of each variable found in this step</span><br/>            <span class=\"kw1\">FOR</span> i <span class=\"sy0\">=</span> iCurVar <span class=\"kw1\">TO</span> iHMV<br/>              <span class=\"kw1\">IF</span> iIsComment <span class=\"kw1\">THEN</span><br/>                rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarType <span class=\"sy0\">=</span> <span class=\"nu0\">4</span>  <span class=\"co1\">' Is a comment</span><br/>              <span class=\"kw1\">ELSE</span><br/>                <span class=\"kw1\">GOSUB</span> DetermineVariableType<br/>              <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>            <span class=\"kw1\">NEXT</span> i<br/>\u00a0<br/>          <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>      <span class=\"kw1\">WEND</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> iFile<br/>    <span class=\"kw1\">IF</span> iHMV <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckredim.shtml\"><span class=\"kw3\">REDIM</span></a> PRESERVE rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> iHMV<span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>      iErr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">' Everything ran ok.</span><br/>    <span class=\"kw1\">ELSE</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckredim.shtml\"><span class=\"kw3\">REDIM</span></a> rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>      iErr <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"co1\">' No variables found in configuration file</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <span class=\"kw1\">ELSE</span><br/>    iErr <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"co1\">' File doesn't exist</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  ReadConfFile <span class=\"sy0\">=</span> iErr<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckexit.shtml\"><span class=\"kw3\">EXIT</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/>AddASpaceForAVariable:<br/>  iHMV <span class=\"sy0\">=</span> iHMV <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>  <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> iHMV <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Are there space for a new one?</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckredim.shtml\"><span class=\"kw3\">REDIM</span></a> PRESERVE rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> iHMV <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><span class=\"kw1\">RETURN</span><br/>\u00a0<br/>DetermineVariableType:<br/>  sValue <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarValue<span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sValue<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckasc.shtml\"><span class=\"kw3\">ASC</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sValue<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">48</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckasc.shtml\"><span class=\"kw3\">ASC</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>sValue<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">57</span> <span class=\"kw1\">THEN</span><br/>      rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarType <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>  <span class=\"co1\">' String</span><br/>    <span class=\"kw1\">ELSE</span><br/>      dValue <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckval.shtml\"><span class=\"kw3\">VAL</span></a><span class=\"br0\">(</span>sValue<span class=\"br0\">)</span><br/>      <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckclng.shtml\"><span class=\"kw3\">CLNG</span></a><span class=\"br0\">(</span>dValue<span class=\"br0\">)</span> <span class=\"sy0\">=</span> dValue <span class=\"kw1\">THEN</span><br/>        rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarType <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"co1\">' Integer</span><br/>      <span class=\"kw1\">ELSE</span><br/>        rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarType <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <span class=\"co1\">' Real</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><span class=\"kw1\">RETURN</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> setNValToVar <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckdouble.shtml\"><span class=\"kw3\">DOUBLE</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Sets a numeric value to a variable</span><br/>  setNValToVarArr WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> WhatValue<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> setNValToVarArr <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckdouble.shtml\"><span class=\"kw3\">DOUBLE</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Sets a numeric value to a variable array</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVal <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  sVal <span class=\"sy0\">=</span> FORMAT$<span class=\"br0\">(</span>WhatValue<span class=\"br0\">)</span><br/>  setSValToVarArr WhichVariable<span class=\"sy0\">,</span> WhichIndex<span class=\"sy0\">,</span> sVal<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> setSValToVar <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>   <span class=\"co1\">' Sets a string value to a variable</span><br/>   setSValToVarArr WhichVariable<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> WhatValue<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">SUB</span> setSValToVarArr <span class=\"br0\">(</span>WhichVariable <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> WhichIndex <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> WhatValue <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Sets a string value to a variable array</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sVar <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> rVarValue<span class=\"br0\">(</span><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>\u00a0<br/>  i <span class=\"sy0\">=</span> FindVarPosArr%<span class=\"br0\">(</span>WhichVariable<span class=\"sy0\">,</span> WhichIndex<span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span>  <span class=\"co1\">' Should add the variable</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>      sVar <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.VarName<span class=\"br0\">)</span><br/>      <span class=\"kw1\">IF</span> sVar <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>        i <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckubound.shtml\"><span class=\"kw3\">UBOUND</span></a><span class=\"br0\">(</span>rVarValue<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckredim.shtml\"><span class=\"kw3\">REDIM</span></a> PRESERVE rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> i<span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>      <span class=\"kw1\">ELSE</span><br/>        i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <span class=\"kw1\">ELSE</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckredim.shtml\"><span class=\"kw3\">REDIM</span></a> rVarValue<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> i<span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> regVarValue<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarName <span class=\"sy0\">=</span> WhichVariable<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  <span class=\"co1\">' Sets the new value to the variable</span><br/>  rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarValue <span class=\"sy0\">=</span> WhatValue<br/>  rVarValue<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.VarType <span class=\"sy0\">=</span> getVarType%<span class=\"br0\">(</span>WhatValue<span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SUB</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> YorN$ <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sYorN <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>    <span class=\"kw1\">DO</span><br/>      sYorN <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckucase%24.shtml\"><span class=\"kw3\">UCASE$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckinput%24.shtml\"><span class=\"kw3\">INPUT$</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span><span class=\"st0\">\"YN\"</span><span class=\"sy0\">,</span> sYorN<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckbeep.shtml\"><span class=\"kw3\">BEEP</span></a><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> sYorN <span class=\"sy0\">=</span> <span class=\"st0\">\"Y\"</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> sYorN <span class=\"sy0\">=</span> <span class=\"st0\">\"N\"</span><br/>\u00a0<br/>    YorN$ <span class=\"sy0\">=</span> sYorN<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0</pre>"}, {"lang": "C", "loc": 67, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define strcomp(X, Y) strcasecmp(X, Y)</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> option<br/><span class=\"br0\">{</span> <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>name<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>value<span class=\"sy0\">;</span> <br/>  <span class=\"kw4\">int</span> flag<span class=\"sy0\">;</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* TODO: dynamically obtain these */</span><br/><span class=\"kw4\">struct</span> option updlist<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span><br/><span class=\"br0\">{</span> <span class=\"br0\">{</span> <span class=\"st0\">\"NEEDSPEELING\"</span><span class=\"sy0\">,</span> NULL <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"st0\">\"SEEDSREMOVED\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"st0\">\"NUMBEROFBANANAS\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"1024\"</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> <span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"62000\"</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>  <span class=\"br0\">{</span> NULL<span class=\"sy0\">,</span> NULL <span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> output_opt<span class=\"br0\">(</span>FILE <span class=\"sy0\">*</span>to<span class=\"sy0\">,</span> <span class=\"kw4\">struct</span> option <span class=\"sy0\">*</span>opt<span class=\"br0\">)</span><br/><span class=\"br0\">{</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>opt<span class=\"sy0\">-&gt;</span>value <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>to<span class=\"sy0\">,</span> <span class=\"st0\">\";\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> opt<span class=\"sy0\">-&gt;</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>opt<span class=\"sy0\">-&gt;</span>value<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>to<span class=\"sy0\">,</span> <span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> opt<span class=\"sy0\">-&gt;</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">else</span> <br/>    <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>to<span class=\"sy0\">,</span> <span class=\"st0\">\"%s\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> opt<span class=\"sy0\">-&gt;</span>name<span class=\"sy0\">,</span> opt<span class=\"sy0\">-&gt;</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> update<span class=\"br0\">(</span>FILE <span class=\"sy0\">*</span>from<span class=\"sy0\">,</span> FILE <span class=\"sy0\">*</span>to<span class=\"sy0\">,</span> <span class=\"kw4\">struct</span> option <span class=\"sy0\">*</span>updlist<span class=\"br0\">)</span> <br/><span class=\"br0\">{</span> <span class=\"kw4\">char</span> line_buf<span class=\"br0\">[</span><span class=\"nu0\">256</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> opt_name<span class=\"br0\">[</span><span class=\"nu0\">128</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;;</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span> <span class=\"kw4\">size_t</span> len<span class=\"sy0\">,</span> space_span<span class=\"sy0\">,</span> span_to_hash<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fgets.html\"><span class=\"kw3\">fgets</span></a><span class=\"br0\">(</span>line_buf<span class=\"sy0\">,</span> <span class=\"kw4\">sizeof</span> line_buf<span class=\"sy0\">,</span> from<span class=\"br0\">)</span> <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span><br/>      <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>    len <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>line_buf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    space_span <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strspn.html\"><span class=\"kw3\">strspn</span></a><span class=\"br0\">(</span>line_buf<span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span> \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    span_to_hash <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcspn.html\"><span class=\"kw3\">strcspn</span></a><span class=\"br0\">(</span>line_buf<span class=\"sy0\">,</span> <span class=\"st0\">\"#\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>space_span <span class=\"sy0\">==</span> span_to_hash<span class=\"br0\">)</span><br/>      <span class=\"kw1\">goto</span> line_out<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>space_span <span class=\"sy0\">==</span> len<span class=\"br0\">)</span><br/>      <span class=\"kw1\">goto</span> line_out<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sscanf.html\"><span class=\"kw3\">sscanf</span></a><span class=\"br0\">(</span>line_buf<span class=\"sy0\">,</span> <span class=\"st0\">\";\u00a0%127s\"</span><span class=\"sy0\">,</span> opt_name<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span><br/>        <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sscanf.html\"><span class=\"kw3\">sscanf</span></a><span class=\"br0\">(</span>line_buf<span class=\"sy0\">,</span> <span class=\"st0\">\"%127s\"</span><span class=\"sy0\">,</span> opt_name<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span> <span class=\"kw4\">int</span> flag <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">{</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>strcomp<span class=\"br0\">(</span>updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"sy0\">,</span> opt_name<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>output_opt<span class=\"br0\">(</span>to<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>          updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">flag</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>          flag <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>flag <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">goto</span> line_out<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><br/>  line_out<span class=\"sy0\">:</span> <br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>to<span class=\"sy0\">,</span> <span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span> line_buf<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">continue</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span> <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">name</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">flag</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>output_opt<span class=\"br0\">(</span>to<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>updlist<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/feof.html\"><span class=\"kw3\">feof</span></a><span class=\"br0\">(</span>from<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>update<span class=\"br0\">(</span>stdin<span class=\"sy0\">,</span> stdout<span class=\"sy0\">,</span> updlist<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span> <span class=\"st0\">\"failed<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>EXIT_FAILURE<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 113, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">file</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">regex</span><span class=\"sy0\">,</span> std.<span class=\"me1\">path</span><span class=\"sy0\">,</span><br/>       std.<span class=\"me1\">typecons</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">final</span> <span class=\"kw4\">class</span> Config <span class=\"br0\">{</span><br/>    <span class=\"kw4\">enum</span> EntryType <span class=\"br0\">{</span> empty<span class=\"sy0\">,</span> enabled<span class=\"sy0\">,</span> disabled<span class=\"sy0\">,</span> comment<span class=\"sy0\">,</span> ignore <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">static</span> <span class=\"kw4\">protected</span> <span class=\"kw4\">struct</span> Entry <span class=\"br0\">{</span><br/>        EntryType type<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">string</span> name<span class=\"sy0\">,</span> value<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw4\">protected</span> Entry<span class=\"br0\">[</span><span class=\"br0\">]</span> entries<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">protected</span> <span class=\"kw4\">string</span> path<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">this</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> path<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>isValidPath<span class=\"br0\">(</span>path<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>exists<span class=\"br0\">(</span>path<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>isFile<span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw2\">throw</span> <span class=\"kw2\">new</span> <span class=\"kw3\">Exception</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid filename\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw2\">this</span>.<span class=\"me1\">path</span> <span class=\"sy0\">=</span> path<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>exists<span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">auto</span> r <span class=\"sy0\">=</span> regex<span class=\"br0\">(</span><span class=\"co4\">r\"^(;*)\\s*([A-Z0-9]+)\\s*([A-Z0-9]*)\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"i\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>path<span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> buf<span class=\"sy0\">;</span> f.<span class=\"me1\">byLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">auto</span> line <span class=\"sy0\">=</span> buf.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">idup</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>line.<span class=\"me1\">length</span><span class=\"br0\">)</span><br/>                entries <span class=\"sy0\">~=</span> Entry<span class=\"br0\">(</span>EntryType.<span class=\"me1\">empty</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>line<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'#'</span><span class=\"br0\">)</span><br/>                entries <span class=\"sy0\">~=</span> Entry<span class=\"br0\">(</span>EntryType.<span class=\"me1\">comment</span><span class=\"sy0\">,</span> line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                line <span class=\"sy0\">=</span> line.<span class=\"me1\">removechars</span><span class=\"br0\">(</span><span class=\"st0\">\"^a-zA-Z0-9<span class=\"es2\">\\x20</span>;\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw4\">auto</span> m <span class=\"sy0\">=</span> match<span class=\"br0\">(</span>line<span class=\"sy0\">,</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>m.<span class=\"me1\">empty</span> <span class=\"sy0\">&amp;&amp;</span> m.<span class=\"me1\">front</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    EntryType t <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">enabled</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m.<span class=\"me1\">front</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span><br/>                        t <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">disabled</span><span class=\"sy0\">;</span><br/>                    addOption<span class=\"br0\">(</span>m.<span class=\"me1\">front</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> m.<span class=\"me1\">front</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> enableOption<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> i <span class=\"sy0\">=</span> getOptionIndex<span class=\"br0\">(</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>i.<span class=\"me1\">isNull</span><span class=\"br0\">)</span><br/>            entries<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">type</span> <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">enabled</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> disableOption<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> i <span class=\"sy0\">=</span> getOptionIndex<span class=\"br0\">(</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>i.<span class=\"me1\">isNull</span><span class=\"br0\">)</span><br/>            entries<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">type</span> <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">disabled</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> setOption<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">string</span> value<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> i <span class=\"sy0\">=</span> getOptionIndex<span class=\"br0\">(</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>i.<span class=\"me1\">isNull</span><span class=\"br0\">)</span><br/>            entries<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> addOption<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">string</span> val<span class=\"sy0\">,</span><br/>                   <span class=\"kw2\">in</span> EntryType t <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">enabled</span><span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>        entries <span class=\"sy0\">~=</span> Entry<span class=\"br0\">(</span>t<span class=\"sy0\">,</span> name.<span class=\"me1\">toUpper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> val<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> removeOption<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">immutable</span> i <span class=\"sy0\">=</span> getOptionIndex<span class=\"br0\">(</span>name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>i.<span class=\"me1\">isNull</span><span class=\"br0\">)</span><br/>            entries<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">type</span> <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">ignore</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Nullable<span class=\"sy0\">!</span><span class=\"kw4\">size_t</span> getOptionIndex<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"br0\">)</span> <span class=\"kw4\">const</span> <span class=\"kw4\">pure</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw2\">ref</span> e<span class=\"sy0\">;</span> entries<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e.<span class=\"me1\">type</span> <span class=\"sy0\">!=</span> EntryType.<span class=\"me1\">enabled</span> <span class=\"sy0\">&amp;&amp;</span><br/>                e.<span class=\"me1\">type</span> <span class=\"sy0\">!=</span> EntryType.<span class=\"me1\">disabled</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e.<span class=\"me1\">name</span> <span class=\"sy0\">==</span> name.<span class=\"me1\">toUpper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">typeof</span><span class=\"br0\">(</span><span class=\"kw1\">return</span><span class=\"br0\">)</span>.<span class=\"me1\">init</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> store<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>path<span class=\"sy0\">,</span> <span class=\"st0\">\"w+\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> e<span class=\"sy0\">;</span> entries<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">final</span> <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>e.<span class=\"me1\">type</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">case</span> EntryType.<span class=\"me1\">empty</span><span class=\"sy0\">:</span><br/>                    f.<span class=\"me1\">writeln</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">case</span> EntryType.<span class=\"me1\">enabled</span><span class=\"sy0\">:</span><br/>                    f.<span class=\"me1\">writefln</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\u00a0%s\"</span><span class=\"sy0\">,</span> e.<span class=\"me1\">name</span><span class=\"sy0\">,</span> e.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">case</span> EntryType.<span class=\"me1\">disabled</span><span class=\"sy0\">:</span><br/>                    f.<span class=\"me1\">writefln</span><span class=\"br0\">(</span><span class=\"st0\">\";\u00a0%s\u00a0%s\"</span><span class=\"sy0\">,</span> e.<span class=\"me1\">name</span><span class=\"sy0\">,</span> e.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">case</span> EntryType.<span class=\"me1\">comment</span><span class=\"sy0\">:</span><br/>                    f.<span class=\"me1\">writeln</span><span class=\"br0\">(</span>e.<span class=\"me1\">name</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">case</span> EntryType.<span class=\"me1\">ignore</span><span class=\"sy0\">:</span><br/>                    <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> cfg <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> Config<span class=\"br0\">(</span><span class=\"st0\">\"config.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    cfg.<span class=\"me1\">enableOption</span><span class=\"br0\">(</span><span class=\"st0\">\"seedsremoved\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    cfg.<span class=\"me1\">disableOption</span><span class=\"br0\">(</span><span class=\"st0\">\"needspeeling\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    cfg.<span class=\"me1\">setOption</span><span class=\"br0\">(</span><span class=\"st0\">\"numberofbananas\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"1024\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    cfg.<span class=\"me1\">addOption</span><span class=\"br0\">(</span><span class=\"st0\">\"numberofstrawberries\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"62000\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    cfg.<span class=\"me1\">store</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Erlang", "loc": 96, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> update_configuration_file <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>add<span class=\"sy3\">/</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> change<span class=\"sy3\">/</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> disable<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> enable<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> read<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> write<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">add</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Upper</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re5\">Upper</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span> | <span class=\"re5\">Lines</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">change</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Upper</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">change_done</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re3\">change_option</span><span class=\"br0\">(</span><span class=\"re5\">Upper</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">disable</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Upper</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"re3\">disable_option</span><span class=\"br0\">(</span><span class=\"re5\">Upper</span><span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">enable</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Upper</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"re3\">enable_option</span><span class=\"br0\">(</span><span class=\"re5\">Upper</span><span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">read</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">Binary</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">read_file</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"kw4\">binary</span>:<span class=\"re3\">bin_to_list</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"kw4\">binary</span>:<span class=\"re3\">split</span><span class=\"br0\">(</span> <span class=\"re5\">Binary</span><span class=\"sy1\">,</span> <span class=\"sy2\">&lt;&lt;</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">&gt;&gt;</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>global<span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines_no_white</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">strip</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines_no_control</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"re3\">strip_control</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines_no_white</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines_no_consecutive_space</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines_no_control</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines_no_consecutive_semicolon</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"re3\">strip_semicolon</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines_no_consecutive_space</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines_no_empty</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">filter</span><span class=\"br0\">(</span> <span class=\"kw1\">fun</span> strip_empty<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines_no_consecutive_semicolon</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines_upper</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"re3\">to_upper</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Lines_no_empty</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">reverse</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">foldl</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> remove_duplicates<span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines_upper</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Lines</span> <span class=\"sy3\">=</span> <span class=\"re3\">read</span><span class=\"br0\">(</span> <span class=\"st0\">\"priv/configuration_file2\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Disabled_lines</span> <span class=\"sy3\">=</span> <span class=\"re3\">disable</span><span class=\"br0\">(</span> <span class=\"st0\">\"needspeeling\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Enabled_lines</span> <span class=\"sy3\">=</span> <span class=\"re3\">enable</span><span class=\"br0\">(</span> <span class=\"st0\">\"SEEDSREMOVED\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Disabled_lines</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Changed_lines1</span> <span class=\"sy3\">=</span> <span class=\"re3\">change</span><span class=\"br0\">(</span> <span class=\"st0\">\"NUMBEROFBANANAS\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"1024\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Enabled_lines</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Changed_lines2</span> <span class=\"sy3\">=</span> <span class=\"re3\">change</span><span class=\"br0\">(</span> <span class=\"st0\">\"numberofstrawberries\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"62000\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Changed_lines1</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">write</span><span class=\"br0\">(</span> <span class=\"st0\">\"configuration_file\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Changed_lines2</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Wrote this line: ~s~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">X</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Changed_lines2</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">write</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">write_file</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"kw4\">binary</span>:<span class=\"re3\">list_to_bin</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span><span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">change_done</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">add</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">change_done</span><span class=\"br0\">(</span> <span class=\"re5\">_Option</span><span class=\"sy1\">,</span> <span class=\"re5\">_Value</span><span class=\"sy1\">,</span> <span class=\"re5\">_Lines</span><span class=\"sy1\">,</span> <span class=\"re5\">New_lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">New_lines</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">change_option</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">change_option_same</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">str</span><span class=\"br0\">(</span><span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"re5\">Option</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">change_option_same</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">[</span><span class=\"re5\">Option</span> | <span class=\"re5\">_T</span><span class=\"br0\">]</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span> <span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">Value</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">change_option_same</span><span class=\"br0\">(</span> <span class=\"re5\">_N</span><span class=\"sy1\">,</span> <span class=\"re5\">_Value</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">disable_option</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">disable_option_same</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">str</span><span class=\"br0\">(</span><span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"re5\">Option</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">disable_option_same</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"; \"</span> <span class=\"sy3\">++</span> <span class=\"re5\">String</span><span class=\"sy1\">;</span><br/><span class=\"re3\">disable_option_same</span><span class=\"br0\">(</span> <span class=\"re5\">_N</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">enable_option</span><span class=\"br0\">(</span> <span class=\"re5\">Option</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">enable_option_same</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">str</span><span class=\"br0\">(</span><span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"st0\">\"; \"</span> <span class=\"sy3\">++</span> <span class=\"re5\">Option</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">enable_option_same</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"st0\">\"; \"</span> <span class=\"sy3\">++</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">;</span><br/><span class=\"re3\">enable_option_same</span><span class=\"br0\">(</span> <span class=\"re5\">_N</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">is_semicolon</span><span class=\"br0\">(</span> $<span class=\"sy1\">;</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">true</span><span class=\"sy1\">;</span><br/><span class=\"re3\">is_semicolon</span><span class=\"br0\">(</span> <span class=\"re5\">_C</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">false</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">remove_duplicates</span><span class=\"br0\">(</span> <span class=\"st0\">\"#\"</span> <span class=\"sy3\">++</span><span class=\"re5\">_T</span><span class=\"sy3\">=</span><span class=\"re5\">Line</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"re5\">Line</span> | <span class=\"re5\">Lines</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">remove_duplicates</span><span class=\"br0\">(</span> <span class=\"re5\">Line</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Duplicates</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"re5\">X</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span><span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span> <span class=\"sy3\">=:=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">str</span><span class=\"br0\">(</span><span class=\"re5\">Line</span><span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">remove_duplicates</span><span class=\"br0\">(</span> <span class=\"re5\">Duplicates</span><span class=\"sy1\">,</span> <span class=\"re5\">Line</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">remove_duplicates</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"re5\">Line</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"re5\">Line</span> | <span class=\"re5\">Lines</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">remove_duplicates</span><span class=\"br0\">(</span> <span class=\"re5\">_Duplicates</span><span class=\"sy1\">,</span> <span class=\"re5\">_Line</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">Lines</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">strip_control</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/><span class=\"re3\">strip_control</span><span class=\"br0\">(</span> <span class=\"st0\">\";\"</span> <span class=\"sy3\">++</span> <span class=\"re5\">_T</span><span class=\"sy3\">=</span><span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">filter</span><span class=\"br0\">(</span> <span class=\"kw1\">fun</span> strip_control_codes:<span class=\"me2\">is_not_control_code_nor_extended_character</span><span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">strip_control</span><span class=\"br0\">(</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">strip_empty</span><span class=\"br0\">(</span> <span class=\"st0\">\";\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">false</span><span class=\"sy1\">;</span><br/><span class=\"re3\">strip_empty</span><span class=\"br0\">(</span> <span class=\"re5\">_String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">true</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">strip_semicolon</span><span class=\"br0\">(</span> <span class=\"st0\">\";\"</span> <span class=\"sy3\">++</span> <span class=\"re5\">_T</span><span class=\"sy3\">=</span><span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\";\"</span> <span class=\"sy3\">++</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">dropwhile</span><span class=\"br0\">(</span> <span class=\"kw1\">fun</span> is_semicolon<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">strip_semicolon</span><span class=\"br0\">(</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/><span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"st0\">\"#\"</span> <span class=\"sy3\">++</span> <span class=\"re5\">_T</span><span class=\"sy3\">=</span><span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">String</span><span class=\"sy1\">;</span><br/><span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"st0\">\"; \"</span> <span class=\"sy3\">++</span> <span class=\"re5\">_T</span><span class=\"sy3\">=</span><span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">[</span><span class=\"st0\">\";\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Option</span> | <span class=\"re5\">T</span><span class=\"br0\">]</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span> <span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"st0\">\";\"</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span><span class=\"re5\">Option</span><span class=\"br0\">)</span> | <span class=\"re5\">T</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">to_upper</span><span class=\"br0\">(</span> <span class=\"re5\">String</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">[</span><span class=\"re5\">Option</span> | <span class=\"re5\">T</span><span class=\"br0\">]</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span> <span class=\"re5\">String</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span><span class=\"re5\">Option</span><span class=\"br0\">)</span> | <span class=\"re5\">T</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 25, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw1\">PROGRAM</span> TEST\t<span class=\"co1\">!Define some data aggregates, then write and read them.</span><br/>      <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"nu0\">28</span> FAVOURITEFRUIT<br/>      <span class=\"kw3\">LOGICAL</span> NEEDSPEELING<br/>      <span class=\"kw3\">LOGICAL</span> SEEDSREMOVED<br/>      <span class=\"kw3\">INTEGER</span> NUMBEROFBANANAS<br/>      <span class=\"kw3\">NAMELIST</span> <span class=\"sy0\">/</span>FRUIT<span class=\"sy0\">/</span> FAVOURITEFRUIT,NEEDSPEELING,SEEDSREMOVED,<br/>     <span class=\"nu0\">1</span> NUMBEROFBANANAS<br/>      <span class=\"kw3\">INTEGER</span> F\t<span class=\"co1\">!An I/O unit number.</span><br/>      F <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>\t<span class=\"co1\">!This will do.</span><br/>\u00a0<br/><span class=\"co1\">Create an example file to show its format.</span><br/>      OPEN<span class=\"br0\">(</span>F,<span class=\"kw1\">FILE</span><span class=\"sy0\">=</span><span class=\"st0\">\"Basket.txt\"</span>,<span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"REPLACE\"</span>,<span class=\"kw1\">ACTION</span><span class=\"sy0\">=</span><span class=\"st0\">\"WRITE\"</span>,\t<span class=\"co1\">!First, prepare a recipient file.</span><br/>     <span class=\"nu0\">1</span> <span class=\"kw1\">DELIM</span><span class=\"sy0\">=</span><span class=\"st0\">\"QUOTE\"</span><span class=\"br0\">)</span>\t<span class=\"co1\">!CHARACTER variables will be enquoted.</span><br/>      FAVOURITEFRUIT <span class=\"sy0\">=</span> <span class=\"st0\">\"Banana\"</span><br/>      NEEDSPEELING <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">TRUE</span>.</span><br/>      SEEDSREMOVED <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">FALSE</span>.</span><br/>      NUMBEROFBANANAS <span class=\"sy0\">=</span> <span class=\"nu0\">48</span><br/>      WRITE <span class=\"br0\">(</span>F,FRUIT<span class=\"br0\">)</span>\t\t<span class=\"co1\">!Write the lot in one go.</span><br/>      CLOSE <span class=\"br0\">(</span>F<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!Finished with output.</span><br/><span class=\"co1\">Can now read from the file.</span><br/>      OPEN<span class=\"br0\">(</span>F,<span class=\"kw1\">FILE</span><span class=\"sy0\">=</span><span class=\"st0\">\"Basket.txt\"</span>,<span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"OLD\"</span>,<span class=\"kw1\">ACTION</span><span class=\"sy0\">=</span><span class=\"st0\">\"READ\"</span>,\t<span class=\"co1\">!Get it back.</span><br/>     <span class=\"nu0\">1</span> <span class=\"kw1\">DELIM</span><span class=\"sy0\">=</span><span class=\"st0\">\"QUOTE\"</span><span class=\"br0\">)</span><br/>      READ <span class=\"br0\">(</span>F,FRUIT<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!Read who knows what.</span><br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,FRUIT<span class=\"br0\">)</span><br/>      <span class=\"kw1\">END</span></pre>"}, {"lang": "FreeBASIC", "loc": 105, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Type</span> ConfigData<br/>  favouriteFruit <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>  needsPeeling <span class=\"kw1\">As</span> Boolean<br/>  seedsRemoved <span class=\"kw1\">As</span> Boolean<br/>  numberOfBananas <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span><br/>  numberOfStrawberries <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Type</span><br/>\u00a0<br/><span class=\"kw1\">Sub</span> updateConfigData<span class=\"br0\">(</span>fileName <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, cData <span class=\"kw1\">As</span> ConfigData<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> fileNum <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">FreeFile</span><br/>  <span class=\"kw1\">Open</span> fileName <span class=\"kw1\">For</span> <span class=\"kw1\">Input</span> <span class=\"kw1\">As</span> <span class=\"co2\">#fileNum</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">err</span> &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"File could not be opened\"</span><br/>    <span class=\"kw1\">Sleep</span><br/>    <span class=\"kw1\">End</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Dim</span> tempFileName <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"temp_\"</span> + fileName<br/>  <span class=\"kw1\">Dim</span> fileNum2 <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">FreeFile</span><br/>  <span class=\"kw1\">Open</span> tempFileName <span class=\"kw1\">For</span> <span class=\"kw1\">Output</span> <span class=\"kw1\">As</span> <span class=\"co2\">#fileNum2</span><br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> Boolean hadFruit, hadPeeling, hadSeeds, hadBananas, hadStrawberries <span class=\"co1\">'' all false by default  </span><br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> ln<br/>  <span class=\"kw1\">While</span> <span class=\"kw1\">Not</span> <span class=\"kw1\">Eof</span><span class=\"br0\">(</span>fileNum<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Line</span> <span class=\"kw1\">Input</span> <span class=\"co2\">#fileNum, ln</span><br/>    <span class=\"kw1\">If</span> ln = <span class=\"st0\">\"\"</span> OrElse <span class=\"kw1\">Left</span><span class=\"br0\">(</span>ln, <span class=\"nu0\">1</span><span class=\"br0\">)</span> = <span class=\"st0\">\"#\"</span> <span class=\"kw1\">Then</span> <br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, ln</span><br/>      <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    ln = <span class=\"kw1\">Trim</span><span class=\"br0\">(</span><span class=\"kw1\">LTrim</span><span class=\"br0\">(</span>ln, <span class=\"st0\">\";\"</span><span class=\"br0\">)</span>, Any\u00a0!<span class=\"st0\">\" <span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> ln = <span class=\"st0\">\"\"</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw1\">UCase</span><span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>ln, <span class=\"nu0\">14</span><span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"st0\">\"FAVOURITEFRUIT\"</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">If</span> hadFruit <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>      hadFruit = <span class=\"kw1\">True</span><br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"FAVOURITEFRUIT \" + cData.favouriteFruit          </span><br/>    <span class=\"kw1\">ElseIf</span> <span class=\"kw1\">UCase</span><span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>ln, <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"st0\">\"NEEDSPEELING\"</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">If</span> hadPeeling <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>      hadPeeling = <span class=\"kw1\">True</span><br/>      <span class=\"kw1\">If</span> cData.<span class=\"me1\">needsPeeling</span> <span class=\"kw1\">Then</span><br/>        <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"NEEDSPEELING\"</span><br/>      <span class=\"kw1\">Else</span><br/>        <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"; NEEDSPEELING\"</span><br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">ElseIf</span> <span class=\"kw1\">UCase</span><span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>ln, <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"st0\">\"SEEDSREMOVED\"</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">If</span> hadSeeds <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>      hadSeeds = <span class=\"kw1\">True</span><br/>      <span class=\"kw1\">If</span> cData.<span class=\"me1\">seedsRemoved</span> <span class=\"kw1\">Then</span><br/>        <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"SEEDSREMOVED\"</span><br/>      <span class=\"kw1\">Else</span><br/>        <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"; SEEDSREMOVED\"</span><br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">ElseIf</span> <span class=\"kw1\">UCase</span><span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>ln, <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"st0\">\"NUMBEROFBANANAS\"</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">If</span> hadBananas <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>      hadBananas = <span class=\"kw1\">True</span> <br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"NUMBEROFBANANAS \" + Str(cData.numberOfBananas)</span><br/>    <span class=\"kw1\">ElseIf</span> <span class=\"kw1\">UCase</span><span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>ln, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">If</span> hadStrawberries <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>      hadStrawberries = <span class=\"kw1\">True</span><br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"NUMBEROFSTRAWBERRIES \" + Str(cData.numberOfStrawBerries)</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Wend</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> hadFruit <span class=\"kw1\">Then</span><br/>     <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"FAVOURITEFRUIT \" + cData.favouriteFruit </span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span>         <br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> hadPeeling <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">If</span> cData.<span class=\"me1\">needsPeeling</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"NEEDSPEELING\"</span><br/>    <span class=\"kw1\">Else</span><br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"; NEEDSPEELING\"</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> hadSeeds <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">If</span> cData.<span class=\"me1\">seedsRemoved</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"SEEDSREMOVED\"</span><br/>    <span class=\"kw1\">Else</span><br/>      <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"; SEEDSREMOVED\"</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> hadBananas <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"NUMBEROFBANANAS \" + Str(cData.numberOfBananas)</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> hadStrawberries <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, \"NUMBEROFSTRAWBERRIES \" + Str(cData.numberOfStrawBerries)</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/>  <span class=\"kw1\">Close</span> <span class=\"co2\">#fileNum\u00a0: Close #fileNum2</span><br/>  <span class=\"kw1\">Kill</span><span class=\"br0\">(</span>fileName<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Name</span> <span class=\"br0\">(</span>tempFileName fileName<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span>   <br/>\u00a0<br/><span class=\"kw1\">Dim</span> fileName <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"config2.txt\"</span><br/><span class=\"kw1\">Dim</span> cData <span class=\"kw1\">As</span> ConfigData<br/><span class=\"kw1\">With</span> cData<br/>  .<span class=\"me1\">favouriteFruit</span> = <span class=\"st0\">\"banana\"</span><br/>  .<span class=\"me1\">needsPeeling</span> = <span class=\"kw1\">False</span><br/>  .<span class=\"me1\">seedsRemoved</span> = <span class=\"kw1\">True</span><br/>  .<span class=\"me1\">numberOfBananas</span> = <span class=\"nu0\">1024</span><br/>  .<span class=\"me1\">numberOfStrawberries</span> = <span class=\"nu0\">62000</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">With</span><br/>\u00a0<br/>updateConfigData fileName, cData<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Go", "loc": 204, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"bufio\"</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"io\"</span><br/>\t<span class=\"st0\">\"log\"</span><br/>\t<span class=\"st0\">\"os\"</span><br/>\t<span class=\"st0\">\"strings\"</span><br/>\t<span class=\"st0\">\"unicode\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// line represents a single line in the configuration file.</span><br/><span class=\"kw1\">type</span> line <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\tkind     lineKind<br/>\toption   <span class=\"kw4\">string</span><br/>\tvalue    <span class=\"kw4\">string</span><br/>\tdisabled <span class=\"kw4\">bool</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// lineKind represents the different kinds of configuration line.</span><br/><span class=\"kw1\">type</span> lineKind <span class=\"kw4\">int</span><br/>\u00a0<br/><span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>\t_ lineKind <span class=\"sy2\">=</span> iota<br/>\tignore<br/>\tparseError<br/>\tcomment<br/>\tblank<br/>\tvalue<br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>l line<span class=\"sy1\">)</span> String<span class=\"sy1\">()</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">switch</span> l<span class=\"sy3\">.</span>kind <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">case</span> ignore<span class=\"sy1\">,</span> parseError<span class=\"sy1\">,</span> comment<span class=\"sy1\">,</span> blank<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> l<span class=\"sy3\">.</span>value<br/>\t<span class=\"kw1\">case</span> value<span class=\"sy1\">:</span><br/>\t\ts <span class=\"sy2\">:=</span> l<span class=\"sy3\">.</span>option<br/>\t\t<span class=\"kw1\">if</span> l<span class=\"sy3\">.</span>disabled <span class=\"sy1\">{</span><br/>\t\t\ts <span class=\"sy2\">=</span> <span class=\"st0\">\"; \"</span> <span class=\"sy3\">+</span> s<br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">if</span> l<span class=\"sy3\">.</span>value <span class=\"sy2\">!=</span> <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>\t\t\ts <span class=\"sy2\">+=</span> <span class=\"st0\">\" \"</span> <span class=\"sy3\">+</span> l<span class=\"sy3\">.</span>value<br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">return</span> s<br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw3\">panic</span><span class=\"sy1\">(</span><span class=\"st0\">\"unexpected line kind\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> removeDross<span class=\"sy1\">(</span>s <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">return</span> strings<span class=\"sy3\">.</span>Map<span class=\"sy1\">(</span><span class=\"kw4\">func</span><span class=\"sy1\">(</span>r rune<span class=\"sy1\">)</span> rune <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">if</span> r &lt; <span class=\"nu0\">32</span> <span class=\"sy3\">||</span> r &gt; <span class=\"nu0\">0x7f</span> <span class=\"sy3\">||</span> unicode<span class=\"sy3\">.</span>IsControl<span class=\"sy1\">(</span>r<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">return</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">return</span> r<br/>\t<span class=\"sy1\">},</span> s<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> parseLine<span class=\"sy1\">(</span>s <span class=\"kw4\">string</span><span class=\"sy1\">)</span> line <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">if</span> s <span class=\"sy3\">==</span> <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span>kind<span class=\"sy1\">:</span> blank<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">if</span> s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"st0\">'#'</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span>kind<span class=\"sy1\">:</span> comment<span class=\"sy1\">,</span> value<span class=\"sy1\">:</span> s<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\ts <span class=\"sy2\">=</span> removeDross<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>\tfields <span class=\"sy2\">:=</span> strings<span class=\"sy3\">.</span>Fields<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>fields<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span>kind<span class=\"sy1\">:</span> blank<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"co1\">// Strip leading semicolons (but record that we found them)</span><br/>\tsemi <span class=\"sy2\">:=</span> <span class=\"kw2\">false</span><br/>\t<span class=\"kw1\">for</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>fields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">])</span> &gt; <span class=\"nu0\">0</span> &amp;&amp; fields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">][</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"st0\">';'</span> <span class=\"sy1\">{</span><br/>\t\tsemi <span class=\"sy2\">=</span> <span class=\"kw2\">true</span><br/>\t\tfields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> fields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">][</span><span class=\"nu0\">1</span><span class=\"sy1\">:]</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"co1\">// Lose the first field if it was all semicolons</span><br/>\t<span class=\"kw1\">if</span> fields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>\t\tfields <span class=\"sy2\">=</span> fields<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">:]</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">switch</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>fields<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy1\">:</span><br/>\t\t<span class=\"co1\">// This can only happen if the line starts</span><br/>\t\t<span class=\"co1\">// with a semicolon but has no other information</span><br/>\t\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span>kind<span class=\"sy1\">:</span> ignore<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span><br/>\t\t\tkind<span class=\"sy1\">:</span>     value<span class=\"sy1\">,</span><br/>\t\t\toption<span class=\"sy1\">:</span>   strings<span class=\"sy3\">.</span>ToUpper<span class=\"sy1\">(</span>fields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]),</span><br/>\t\t\tdisabled<span class=\"sy1\">:</span> semi<span class=\"sy1\">,</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span><br/>\t\t\tkind<span class=\"sy1\">:</span>     value<span class=\"sy1\">,</span><br/>\t\t\toption<span class=\"sy1\">:</span>   strings<span class=\"sy3\">.</span>ToUpper<span class=\"sy1\">(</span>fields<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]),</span><br/>\t\t\tvalue<span class=\"sy1\">:</span>    fields<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">],</span><br/>\t\t\tdisabled<span class=\"sy1\">:</span> semi<span class=\"sy1\">,</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> line<span class=\"sy1\">{</span>kind<span class=\"sy1\">:</span> parseError<span class=\"sy1\">,</span> value<span class=\"sy1\">:</span> s<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Config represents a \"standard\" configuration file.</span><br/><span class=\"kw1\">type</span> Config <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>\toptions <span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"kw4\">string</span><span class=\"sy1\">]</span><span class=\"kw4\">int</span>\t\t<span class=\"co1\">// index of each option in lines.</span><br/>\tlines   <span class=\"sy1\">[]</span>line<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// index returns the index of the given option in</span><br/><span class=\"co1\">// c.lines, or -1 if not found.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>Config<span class=\"sy1\">)</span> index<span class=\"sy1\">(</span>option <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>options<span class=\"sy1\">[</span>option<span class=\"sy1\">];</span> ok <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"nu2\">i</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// addLine adds a line to the config, ignoring</span><br/><span class=\"co1\">// duplicate options and \"ignore\" lines.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>Config<span class=\"sy1\">)</span> addLine<span class=\"sy1\">(</span>l line<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">switch</span> l<span class=\"sy3\">.</span>kind <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">case</span> ignore<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">return</span><br/>\t<span class=\"kw1\">case</span> value<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">if</span> c<span class=\"sy3\">.</span>index<span class=\"sy1\">(</span>l<span class=\"sy3\">.</span>option<span class=\"sy1\">)</span> &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">return</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\tc<span class=\"sy3\">.</span>options<span class=\"sy1\">[</span>l<span class=\"sy3\">.</span>option<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>lines<span class=\"sy1\">)</span><br/>\t\tc<span class=\"sy3\">.</span>lines <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>lines<span class=\"sy1\">,</span> l<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>\t\tc<span class=\"sy3\">.</span>lines <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>c<span class=\"sy3\">.</span>lines<span class=\"sy1\">,</span> l<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// ReadConfig reads a configuration file from path and returns it.</span><br/><span class=\"kw4\">func</span> ReadConfig<span class=\"sy1\">(</span>path <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span><span class=\"sy3\">*</span>Config<span class=\"sy1\">,</span> error<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\tf<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Open<span class=\"sy1\">(</span>path<span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t<span class=\"kw1\">return</span> <span class=\"kw2\">nil</span><span class=\"sy1\">,</span> err<br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">defer</span> f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>\tr <span class=\"sy2\">:=</span> bufio<span class=\"sy3\">.</span>NewReader<span class=\"sy1\">(</span>f<span class=\"sy1\">)</span><br/>\tc <span class=\"sy2\">:=</span> &amp;Config<span class=\"sy1\">{</span>options<span class=\"sy1\">:</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"kw4\">string</span><span class=\"sy1\">]</span><span class=\"kw4\">int</span><span class=\"sy1\">)}</span><br/>\t<span class=\"kw1\">for</span> <span class=\"sy1\">{</span><br/>\t\ts<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> r<span class=\"sy3\">.</span>ReadString<span class=\"sy1\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"kw1\">if</span> s <span class=\"sy2\">!=</span> <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">if</span> err <span class=\"sy3\">==</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\t\t<span class=\"co1\">// strip newline unless we encountered an error without finding one.</span><br/>\t\t\t\ts <span class=\"sy2\">=</span> s<span class=\"sy1\">[:</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><br/>\t\t\t<span class=\"sy1\">}</span><br/>\t\t\tc<span class=\"sy3\">.</span>addLine<span class=\"sy1\">(</span>parseLine<span class=\"sy1\">(</span>s<span class=\"sy1\">))</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy3\">==</span> io<span class=\"sy3\">.</span>EOF <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">break</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"kw1\">return</span> <span class=\"kw2\">nil</span><span class=\"sy1\">,</span> err<br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/>\t<span class=\"kw1\">return</span> c<span class=\"sy1\">,</span> <span class=\"kw2\">nil</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Set sets an option to a value, adding the option if necessary.  If</span><br/><span class=\"co1\">// the option was previously disabled, it will be enabled.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>Config<span class=\"sy1\">)</span> Set<span class=\"sy1\">(</span>option <span class=\"kw4\">string</span><span class=\"sy1\">,</span> val <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>index<span class=\"sy1\">(</span>option<span class=\"sy1\">);</span> <span class=\"nu2\">i</span> &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\tline <span class=\"sy2\">:=</span> &amp;c<span class=\"sy3\">.</span>lines<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>\t\tline<span class=\"sy3\">.</span>disabled <span class=\"sy2\">=</span> <span class=\"kw2\">false</span><br/>\t\tline<span class=\"sy3\">.</span>value <span class=\"sy2\">=</span> val<br/>\t\t<span class=\"kw1\">return</span><br/>\t<span class=\"sy1\">}</span><br/>\tc<span class=\"sy3\">.</span>addLine<span class=\"sy1\">(</span>line<span class=\"sy1\">{</span><br/>\t\tkind<span class=\"sy1\">:</span>   value<span class=\"sy1\">,</span><br/>\t\toption<span class=\"sy1\">:</span> option<span class=\"sy1\">,</span><br/>\t\tvalue<span class=\"sy1\">:</span>  val<span class=\"sy1\">,</span><br/>\t<span class=\"sy1\">})</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Enable sets the enabled status of an option. It is</span><br/><span class=\"co1\">// ignored if the option does not already exist.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>Config<span class=\"sy1\">)</span> Enable<span class=\"sy1\">(</span>option <span class=\"kw4\">string</span><span class=\"sy1\">,</span> enabled <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> c<span class=\"sy3\">.</span>index<span class=\"sy1\">(</span>option<span class=\"sy1\">);</span> <span class=\"nu2\">i</span> &gt;<span class=\"sy2\">=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\tc<span class=\"sy3\">.</span>lines<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>disabled <span class=\"sy2\">=</span> <span class=\"sy3\">!</span>enabled<br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Write writes the configuration file to the writer.</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>c <span class=\"sy3\">*</span>Config<span class=\"sy1\">)</span> Write<span class=\"sy1\">(</span>w <a href=\"http://golang.org/search?q=io.Writer\"><span class=\"kw5\">io.<span class=\"me1\">Writer</span></span></a><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> line <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> c<span class=\"sy3\">.</span>lines <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>line<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tc<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> ReadConfig<span class=\"sy1\">(</span><span class=\"st0\">\"/tmp/cfg\"</span><span class=\"sy1\">)</span><br/>\t<span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>\t\tlog<span class=\"sy3\">.</span>Fatalln<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/>\tc<span class=\"sy3\">.</span>Enable<span class=\"sy1\">(</span><span class=\"st0\">\"NEEDSPEELING\"</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span><span class=\"sy1\">)</span><br/>\tc<span class=\"sy3\">.</span>Set<span class=\"sy1\">(</span><span class=\"st0\">\"SEEDSREMOVED\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>\tc<span class=\"sy3\">.</span><span class=\"me1\">Set</span><span class=\"sy1\">(</span><span class=\"st0\">\"NUMBEROFBANANAS\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"1024\"</span><span class=\"sy1\">)</span><br/>\tc<span class=\"sy3\">.</span><span class=\"me1\">Set</span><span class=\"sy1\">(</span><span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"62000\"</span><span class=\"sy1\">)</span><br/>\tc<span class=\"sy3\">.</span><span class=\"me1\">Write</span><span class=\"sy1\">(</span>os<span class=\"sy3\">.</span><span class=\"me1\">Stdout</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 2, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Char\"><span class=\"kw4\">Char</span></a> <span class=\"br0\">(</span>toUpper<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> <span class=\"kw1\">qualified</span> System<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a><span class=\"sy0\">.</span>Strict  <span class=\"kw1\">as</span> S</pre>"}, {"lang": "J", "loc": 36, "block": "<pre class=\"j highlighted_source\">require <span class=\"st_h\">'regex strings'</span><br/>\u00a0<br/>normalize=:<span class=\"nu0\">3</span>\u00a0:<span class=\"nu0\">0</span><br/>  seen=. a:<br/>  eol=. {:;<span class=\"kw2\">y</span><br/>  t=. <span class=\"st_h\">''</span><br/>  <span class=\"re0\">for_line.</span>&lt;;.<span class=\"nu0\">_2</span>;<span class=\"kw2\">y</span> <span class=\"kw1\">do.</span> lin=. deb line=.&gt;line<br/>    <span class=\"kw1\">if.</span> <span class=\"st_h\">'#'</span>={.line <span class=\"kw1\">do.</span> t=.t,line,eol<br/>    <span class=\"kw1\">elseif.</span> <span class=\"st_h\">''</span>-:lin <span class=\"kw1\">do.</span> t =. t,eol<br/>    <span class=\"kw1\">elseif.</span> <span class=\"kw1\">do.</span><br/>      line=. <span class=\"nu0\">1</span> u:<span class=\"sy0\">(</span>[-.-.<span class=\"sy0\">)</span>&amp;<span class=\"sy0\">(</span><span class=\"nu0\">32</span>+i.<span class=\"nu0\">95</span><span class=\"sy0\">)</span>&amp;.<span class=\"sy0\">(</span><span class=\"nu0\">3</span>&amp;u:<span class=\"sy0\">)</span> line<br/>      base=. <span class=\"sy0\">(</span><span class=\"st_h\">'^ *;;* *'</span>;<span class=\"st_h\">''</span><span class=\"sy0\">)</span> rxrplc line<br/>      nm=.\u00a0;name=. {.;:toupper base<br/>      <span class=\"kw1\">if.</span> -. name e. seen <span class=\"kw1\">do.</span><br/>        seen=. seen, name<br/>        t=. t,eol,~dtb <span class=\"sy0\">(</span><span class=\"st_h\">'; '</span>#~<span class=\"st_h\">';'</span>={.lin<span class=\"sy0\">)</span>,<span class=\"sy0\">((</span><span class=\"st_h\">'^(?i) *'</span>,nm,<span class=\"st_h\">'\\b *'</span><span class=\"sy0\">)</span>;<span class=\"sy0\">(</span>nm,<span class=\"st_h\">' '</span><span class=\"sy0\">))</span> rxrplc base<br/>      <span class=\"kw1\">end.</span><br/>    <span class=\"kw1\">end.</span><br/>  end.t<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>enable=:<span class=\"nu0\">1</span>\u00a0:<span class=\"nu0\">0</span><br/>  <span class=\"sy0\">(</span>&lt;<span class=\"kw2\">m</span><span class=\"sy0\">)</span> <span class=\"nu0\">1</span>!:<span class=\"nu0\">2</span>~ normalize <span class=\"sy0\">(</span>,<span class=\"kw2\">y</span>,{:<span class=\"sy0\">)</span>;&lt;@rxrplc~&amp;<span class=\"sy0\">(</span><span class=\"kw2\">y</span>;~<span class=\"st_h\">'^; *(?i)'</span>,<span class=\"kw2\">y</span>,<span class=\"st_h\">'\\b'</span><span class=\"sy0\">)</span>;.<span class=\"nu0\">2</span>]<span class=\"nu0\">1</span>!:<span class=\"nu0\">1</span>&lt;<span class=\"kw2\">m</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>disable=:<span class=\"nu0\">1</span>\u00a0:<span class=\"nu0\">0</span><br/>  <span class=\"sy0\">(</span>&lt;<span class=\"kw2\">m</span><span class=\"sy0\">)</span> <span class=\"nu0\">1</span>!:<span class=\"nu0\">2</span>~ normalize <span class=\"sy0\">(</span>,<span class=\"st_h\">'; '</span>,<span class=\"kw2\">y</span>,{:<span class=\"sy0\">)</span>;&lt;@rxrplc~&amp;<span class=\"sy0\">((</span><span class=\"st_h\">'; '</span>,<span class=\"kw2\">y</span><span class=\"sy0\">)</span>;~<span class=\"st_h\">'^ *(?i)'</span>,<span class=\"kw2\">y</span>,<span class=\"st_h\">'\\b'</span><span class=\"sy0\">)</span>;.<span class=\"nu0\">2</span>]<span class=\"nu0\">1</span>!:<span class=\"nu0\">1</span>&lt;<span class=\"kw2\">m</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>set=:<span class=\"nu0\">1</span>\u00a0:<span class=\"nu0\">0</span><br/>:<br/>  t=. <span class=\"nu0\">1</span>!:<span class=\"nu0\">1</span>&lt;<span class=\"kw2\">m</span><br/>  pat=. <span class=\"st_h\">'^ *(?i)'</span>,<span class=\"kw2\">y</span>,<span class=\"st_h\">'\\b.*'</span><br/>  upd=. <span class=\"kw2\">y</span>,<span class=\"st_h\">' '</span>,\":<span class=\"kw2\">x</span><br/>  <span class=\"sy0\">(</span>&lt;<span class=\"kw2\">m</span><span class=\"sy0\">)</span> <span class=\"nu0\">1</span>!:<span class=\"nu0\">2</span>~ normalize <span class=\"sy0\">(</span>,upd,{:<span class=\"sy0\">)</span>;&lt;@rxrplc~&amp;<span class=\"sy0\">(</span>pat;upd<span class=\"sy0\">)</span> t<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 134, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.regex.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> UpdateConfig <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"filename required\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>readConfig<span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            enableOption<span class=\"br0\">(</span><span class=\"st0\">\"seedsremoved\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            disableOption<span class=\"br0\">(</span><span class=\"st0\">\"needspeeling\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            setOption<span class=\"br0\">(</span><span class=\"st0\">\"numberofbananas\"</span>, <span class=\"st0\">\"1024\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            addOption<span class=\"br0\">(</span><span class=\"st0\">\"numberofstrawberries\"</span>, <span class=\"st0\">\"62000\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            store<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">enum</span> EntryType <span class=\"br0\">{</span><br/>        EMPTY, ENABLED, DISABLED, COMMENT<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">class</span> Entry <span class=\"br0\">{</span><br/>        EntryType type<span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name, value<span class=\"sy0\">;</span><br/>\u00a0<br/>        Entry<span class=\"br0\">(</span>EntryType t, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> n, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> v<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            type <span class=\"sy0\">=</span> t<span class=\"sy0\">;</span><br/>            name <span class=\"sy0\">=</span> n<span class=\"sy0\">;</span><br/>            value <span class=\"sy0\">=</span> v<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> Map<span class=\"sy0\">&lt;</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>, Entry<span class=\"sy0\">&gt;</span> entries <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> LinkedHashMap<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> path<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> readConfig<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> p<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        path <span class=\"sy0\">=</span> p<span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a> f <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>f.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> f.<span class=\"me1\">isDirectory</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> regexString <span class=\"sy0\">=</span> <span class=\"st0\">\"^(;*)<span class=\"es0\">\\\\</span>s*([A-Za-z0-9]+)<span class=\"es0\">\\\\</span>s*([A-Za-z0-9]*)\"</span><span class=\"sy0\">;</span><br/>        Pattern regex <span class=\"sy0\">=</span> Pattern.<span class=\"me1\">compile</span><span class=\"br0\">(</span>regexString<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">try</span> <span class=\"br0\">(</span>Scanner sc <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Scanner<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afilereader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileReader</span></a><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> emptyLines <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> line<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>sc.<span class=\"me1\">hasNext</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                line <span class=\"sy0\">=</span> sc.<span class=\"me1\">nextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>line.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    addOption<span class=\"br0\">(</span><span class=\"st0\">\"\"</span> <span class=\"sy0\">+</span> emptyLines<span class=\"sy0\">++</span>, <span class=\"kw2\">null</span>, EntryType.<span class=\"me1\">EMPTY</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>line.<span class=\"me1\">charAt</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">'#'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    entries.<span class=\"me1\">put</span><span class=\"br0\">(</span>line, <span class=\"kw1\">new</span> Entry<span class=\"br0\">(</span>EntryType.<span class=\"me1\">COMMENT</span>, line, <span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                    line <span class=\"sy0\">=</span> line.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span><span class=\"st0\">\"[^a-zA-Z0-9<span class=\"es0\">\\\\</span>x20;]\"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    Matcher m <span class=\"sy0\">=</span> regex.<span class=\"me1\">matcher</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>m.<span class=\"me1\">find</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>m.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>                        EntryType t <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">ENABLED</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>m.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                            t <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">DISABLED</span><span class=\"sy0\">;</span><br/>\u00a0<br/>                        addOption<span class=\"br0\">(</span>m.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, m.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>, t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> addOption<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> value<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        addOption<span class=\"br0\">(</span>name, value, EntryType.<span class=\"me1\">ENABLED</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> addOption<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> value, EntryType t<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        name <span class=\"sy0\">=</span> name.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        entries.<span class=\"me1\">put</span><span class=\"br0\">(</span>name, <span class=\"kw1\">new</span> Entry<span class=\"br0\">(</span>t, name, value<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> enableOption<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        Entry e <span class=\"sy0\">=</span> entries.<span class=\"me1\">get</span><span class=\"br0\">(</span>name.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><br/>            e.<span class=\"me1\">type</span> <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">ENABLED</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> disableOption<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        Entry e <span class=\"sy0\">=</span> entries.<span class=\"me1\">get</span><span class=\"br0\">(</span>name.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><br/>            e.<span class=\"me1\">type</span> <span class=\"sy0\">=</span> EntryType.<span class=\"me1\">DISABLED</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> setOption<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> value<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        Entry e <span class=\"sy0\">=</span> entries.<span class=\"me1\">get</span><span class=\"br0\">(</span>name.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>e <span class=\"sy0\">!=</span> <span class=\"kw2\">null</span><span class=\"br0\">)</span><br/>            e.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> store<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">try</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aprintwriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">PrintWriter</span></a> pw <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aprintwriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">PrintWriter</span></a><span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span>Entry e <span class=\"sy0\">:</span> entries.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>e.<span class=\"me1\">type</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">case</span> EMPTY<span class=\"sy0\">:</span><br/>                        pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">case</span> ENABLED<span class=\"sy0\">:</span><br/>                        pw.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\u00a0%s%n\"</span>, e.<span class=\"me1\">name</span>, e.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">case</span> DISABLED<span class=\"sy0\">:</span><br/>                        pw.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\";\u00a0%s\u00a0%s%n\"</span>, e.<span class=\"me1\">name</span>, e.<span class=\"me1\">value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">case</span> COMMENT<span class=\"sy0\">:</span><br/>                        pw.<span class=\"me1\">println</span><span class=\"br0\">(</span>e.<span class=\"me1\">name</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>                        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pw.<span class=\"me1\">checkError</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">throw</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a><span class=\"br0\">(</span><span class=\"st0\">\"writing to file failed\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Kotlin", "loc": 100, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.2.0</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> ConfigData<span class=\"br0\">(</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> favouriteFruit<span class=\"sy0\">:</span> String,<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> needsPeeling<span class=\"sy0\">:</span> Boolean,<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> seedsRemoved<span class=\"sy0\">:</span> Boolean,<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> numberOfBananas<span class=\"sy0\">:</span> Int,<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> numberOfStrawberries<span class=\"sy0\">:</span> Int<br/><span class=\"br0\">)</span><br/>\u00a0<br/>fun updateConfigFile<span class=\"br0\">(</span>fileName<span class=\"sy0\">:</span> String, cData<span class=\"sy0\">:</span> ConfigData<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> inp <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>fileName<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> lines <span class=\"sy0\">=</span> inp.<span class=\"me1\">readLines</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> tempFileName <span class=\"sy0\">=</span> <span class=\"st0\">\"temp_$fileName\"</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> out <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>tempFileName<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pw <span class=\"sy0\">=</span> out.<span class=\"me1\">printWriter</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> hadFruit <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> hadPeeling <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> hadSeeds <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> hadBananas <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> hadStrawberries <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>line in lines<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>line.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span> || line<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'#'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><br/>            continue<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ln <span class=\"sy0\">=</span> line.<span class=\"me1\">trimStart</span><span class=\"br0\">(</span><span class=\"st0\">';'</span><span class=\"br0\">)</span>.<span class=\"me1\">trim</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>, <span class=\"st0\">'<span class=\"es1\">\\t</span>'</span><span class=\"br0\">)</span>.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>ln.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> continue<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>ln.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">14</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"FAVOURITEFRUIT\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>hadFruit<span class=\"br0\">)</span> continue<br/>            hadFruit <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"FAVOURITEFRUIT ${cData.favouriteFruit}\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>ln.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"NEEDSPEELING\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>hadPeeling<span class=\"br0\">)</span> continue<br/>            hadPeeling <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>cData.<span class=\"me1\">needsPeeling</span><span class=\"br0\">)</span><br/>                pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"NEEDSPEELING\"</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>                pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"; NEEDSPEELING\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>ln.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"SEEDSREMOVED\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>hadSeeds<span class=\"br0\">)</span> continue<br/>            hadSeeds <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>cData.<span class=\"me1\">seedsRemoved</span><span class=\"br0\">)</span><br/>                pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"SEEDSREMOVED\"</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>                pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"; SEEDSREMOVED\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>ln.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"NUMBEROFBANANAS\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>hadBananas<span class=\"br0\">)</span> continue<br/>            hadBananas <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"NUMBEROFBANANAS ${cData.numberOfBananas}\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>ln.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>hadStrawberries<span class=\"br0\">)</span> continue<br/>            hadStrawberries <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"NUMBEROFSTRAWBERRIES ${cData.numberOfStrawberries}\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hadFruit<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"FAVOURITEFRUIT ${cData.favouriteFruit}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hadPeeling<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>cData.<span class=\"me1\">needsPeeling</span><span class=\"br0\">)</span><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"NEEDSPEELING\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"; NEEDSPEELING\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hadSeeds<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>cData.<span class=\"me1\">seedsRemoved</span><span class=\"br0\">)</span><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"SEEDSREMOVED\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>            pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"; SEEDSREMOVED\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hadBananas<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"NUMBEROFBANANAS ${cData.numberOfBananas}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>hadStrawberries<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       pw.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"NUMBEROFSTRAWBERRIES ${cData.numberOfStrawberries}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    pw.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    inp.<span class=\"me1\">delete</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    out.<span class=\"me1\">renameTo</span><span class=\"br0\">(</span>inp<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> fileName <span class=\"sy0\">=</span> <span class=\"st0\">\"config.txt\"</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cData <span class=\"sy0\">=</span> ConfigData<span class=\"br0\">(</span><span class=\"st0\">\"banana\"</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a>, <span class=\"nu0\">1024</span>, <span class=\"nu0\">62000</span><span class=\"br0\">)</span><br/>    updateConfigFile<span class=\"br0\">(</span>fileName, cData<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 99, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/lasso9<br/>\u00a0<br/>define config =&gt; type {<br/>\u00a0<br/>\tdata public configtxt, public path<br/>\u00a0<br/>\tpublic oncreate(<br/>\t\tpath::string = 'testing/configuration.txt'<br/>\t) =&gt; {<br/>\t\t.configtxt = file(#path) -&gt; readstring<br/>\t\t.path = #path<br/>\t}<br/>\u00a0<br/>\tpublic get(term::string) =&gt; {<br/>\t\t.clean<br/>\t\tlocal(<br/>\t\t\tregexp\t= regexp(-find = `(?m)^` + #term + `($|\\s*=\\s*|\\s+)(.*)$`, -input = .configtxt, -ignorecase),<br/>\t\t\tresult<br/>\t\t)<br/>\u00a0<br/>\t\twhile(#regexp -&gt; find) =&gt; {<br/>\t\t\t#result = (#regexp -&gt; groupcount &gt; 1\u00a0? (#regexp -&gt; matchString(2) -&gt; trim&amp; || true))<br/>\t\t\tif(#result -&gt; asstring &gt;&gt; ',') =&gt; {<br/>\t\t\t\t#result = #result -&gt; split(',')<br/>\t\t\t\t#result -&gt; foreach =&gt; {#1 -&gt; trim}<br/>\t\t\t}<br/>\t\t\treturn #result<br/>\t\t}<br/>\t\treturn false<br/>\t}<br/>\u00a0<br/>\tpublic set(term::string, value) =&gt; {<br/>\t\tif(#value === false) =&gt; {<br/>\t\t\t.disable(#term)<br/>\t\t\treturn<br/>\t\t}<br/>\t\t.enable(#term)<br/>\t\tif(#value -&gt; isanyof(::string,\u00a0::integer,\u00a0::decimal)) =&gt; {<br/>\t\t\t.configtxt = regexp(-find = `(?m)^(` + #term + `)\u00a0?(.*?)$`, -replace = `$1 ` + #value, -input = .configtxt, -ignorecase) -&gt; replaceall<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\tpublic disable(term::string) =&gt; {<br/>\t\t.clean<br/>\t\tlocal(regexp = regexp(-find = `(?m)^(` + #term + `)`, -replace = `; $1`, -input = .configtxt, -ignorecase))<br/>\t\t.configtxt = #regexp -&gt; replaceall<br/>\t}<br/>\u00a0<br/>\tpublic enable(term::string, -comment::string = '# Added ' + date) =&gt; {<br/>\t\t.clean<br/>\t\tlocal(regexp = regexp(-find = `(?m)^(; )?(` + #term + `)`, -replace = `$2`, -input = .configtxt, -ignorecase))<br/>\t\tif(#regexp -&gt; find) =&gt; {<br/>\t\t\t.configtxt = #regexp -&gt; replaceall<br/>\t\telse<br/>\t\t\t.configtxt -&gt; append('\\n' + (not #comment -&gt; beginswith('#')\u00a0? '# ') +<br/>\t\t\t\t#comment + '\\n' +<br/>\t\t\t\tstring_uppercase(#term) + '\\n'<br/>\t\t\t)<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\tpublic write =&gt; {<br/>\t\tlocal(config = file(.path))<br/>\t\t#config -&gt; opentruncate<br/>\t\t#config -&gt; dowithclose =&gt; {<br/>\t\t\t#config -&gt; writestring(.configtxt)<br/>\t\t}<br/>\u00a0<br/>\t}<br/>\u00a0<br/>\tpublic clean =&gt; {<br/>\u00a0<br/>\t\tlocal(<br/>\t\t\tcleaned = array,<br/>\t\t\tregexp\t= regexp(-find = `^(;+)\\W*$`)<br/>\t\t)<br/>\u00a0<br/>\t\twith line in .configtxt -&gt; split('\\n') do {<br/>\t\t\t#line -&gt; trim<br/>\t\t\t#regexp -&gt; input = #line<br/>\u00a0<br/>\t\t\tif(#line -&gt; beginswith('#') or #line == '') =&gt; {<br/>\t\t\t\t#cleaned -&gt; insert(#line)<br/>\t\t\telse(not (#regexp -&gt; find))<br/>\t\t\t\tif(#line -&gt; beginswith(';')) =&gt; {<br/>\t\t\t\t\t#line -&gt; replace(regexp(`^;+ *`), `; `)<br/>\t\t\t\telse<br/>\t\t\t\t\t#line -&gt; replace(regexp(`^(.*?) +(.*?)`), `$1 $2`)<br/>\t\t\t\t}<br/>\t\t\t\t#line -&gt; replace(regexp(`\\t`))<br/>\t\t\t\t#cleaned -&gt; insert(#line)<br/>\t\t\t}<br/>\t\t}<br/>\u00a0<br/>\t\t.configtxt = #cleaned -&gt; join('\\n')<br/>\u00a0<br/>\t}<br/>\u00a0<br/>}</pre>"}, {"lang": "Perl", "loc": 98, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$needspeeling</span>         <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$seedsremoved</span>         <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$numberofstrawberries</span> <span class=\"sy0\">=</span> <span class=\"nu0\">62000</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$numberofbananas</span>      <span class=\"sy0\">=</span> <span class=\"nu0\">1024</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$favouritefruit</span>       <span class=\"sy0\">=</span> <span class=\"st_h\">'bananas'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@out</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> config <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">@config</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"re4\">&lt;DATA&gt;</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@config</span><span class=\"sy0\">,</span> <span class=\"st0\">\"NUMBEROFSTRAWBERRIES $numberofstrawberries<span class=\"es0\">\\n</span>\"</span><br/>        <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span> <span class=\"co2\">/^;*[ \\t]*NUMBEROFSTRAWBERRIES\\b/</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"re0\">@config</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$line</span> <span class=\"br0\">(</span><span class=\"re0\">@config</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$line</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">eq</span> <span class=\"st_h\">'#'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@out</span><span class=\"sy0\">,</span> <span class=\"re0\">$line</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">next</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">$line</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^[;\\t ]+$/</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$option</span><span class=\"sy0\">,</span> <span class=\"re0\">$option_name</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$line</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^([A-Z]+[0-9]*)/</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$option_name</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/lc.html\"><span class=\"kw3\">lc</span></a> <span class=\"co3\">$1</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$option</span>      <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"st0\">\"<span class=\"es0\">\\\\</span><span class=\"es0\">\\$</span>$option_name\"</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$value</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"st0\">\"<span class=\"es0\">\\$</span>{$option_name}\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$value</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$$option</span> <span class=\"sy0\">=</span> <span class=\"re0\">$value</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$line</span>    <span class=\"sy0\">=</span> <span class=\"st_h\">'; '</span> <span class=\"sy0\">.</span> <span class=\"re0\">$line</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$$option</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/undef.html\"><span class=\"kw3\">undef</span></a><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span><span class=\"re0\">$line</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/^;+\\s*([A-Z]+[0-9]*)/</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$option_name</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/lc.html\"><span class=\"kw3\">lc</span></a> <span class=\"co3\">$1</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$option</span>      <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"st0\">\"<span class=\"es0\">\\\\</span><span class=\"es0\">\\$</span>$option_name\"</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$value</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"st0\">\"<span class=\"es0\">\\$</span>{$option_name}\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$value</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$line</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/^;+\\s*//</span><span class=\"sy0\">;</span><br/>                <span class=\"re0\">$$option</span> <span class=\"sy0\">=</span> <span class=\"re0\">$value</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span> <span class=\"st_h\">''</span> <span class=\"sy0\">:</span> <span class=\"re0\">$value</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>                <span class=\"re0\">$$option</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/undef.html\"><span class=\"kw3\">undef</span></a><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a> <span class=\"re0\">$$option</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@out</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\U</span>$option_name<span class=\"es0\">\\E</span> $$option<span class=\"es0\">\\n</span>\"</span><br/>                <span class=\"kw1\">unless</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span> <span class=\"co2\">/^\\U$option_name\\E\\b/</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"re0\">@out</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$line</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/\\s*[^[:ascii:]]+\\s*$//</span><span class=\"sy0\">;</span><br/>            <span class=\"re0\">$line</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/[[:cntrl:]\\s]+$//</span><span class=\"sy0\">;</span><br/>            <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a><span class=\"br0\">(</span><span class=\"re0\">@out</span><span class=\"sy0\">,</span> <span class=\"st0\">\"$line<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>config<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$file</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a><span class=\"br0\">(</span><span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"re0\">@out</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$file</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/\\n{3,}/\\n\\n/g</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"re0\">$file</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">__DATA__</span><br/><span class=\"co1\"># This is a configuration file in standard configuration file format</span><br/><span class=\"co1\">#</span><br/><span class=\"co1\"># Lines begininning with a hash or a semicolon are ignored by the application</span><br/><span class=\"co1\"># program. Blank lines are also ignored by the application program.</span><br/>\u00a0<br/><span class=\"co1\"># The first word on each non comment line is the configuration option.</span><br/><span class=\"co1\"># Remaining words or numbers on the line are configuration parameter</span><br/><span class=\"co1\"># data fields.</span><br/>\u00a0<br/><span class=\"co1\"># Note that configuration option names are not case sensitive. However,</span><br/><span class=\"co1\"># configuration parameter data is case sensitive and the lettercase must</span><br/><span class=\"co1\"># be preserved.</span><br/>\u00a0<br/><span class=\"co1\"># This is a favourite fruit</span><br/>FAVOURITEFRUIT banana<br/>\u00a0<br/><span class=\"co1\"># This is a boolean that should be set</span><br/>NEEDSPEELING<br/>\u00a0<br/><span class=\"co1\"># This boolean is commented out</span><br/><span class=\"sy0\">;</span> SEEDSREMOVED<br/>\u00a0<br/><span class=\"co1\"># How many bananas we have</span><br/>NUMBEROFBANANAS <span class=\"nu0\">48</span></pre>"}, {"lang": "Perl 6", "loc": 1, "block": "<pre>conf-update --/needspeeling --seedsremoved --numberofbananas=1024 --numberofstrawberries=62000 test.cfg</pre>"}, {"lang": "Phix", "loc": 62, "block": "<pre class=\"text highlighted_source\">integer fn = open(\"RCTEST.INI\",\"r\")<br/>sequence lines = get_text(fn,GT_LF_STRIPPED)<br/>close(fn)<br/>constant dini = new_dict()<br/>for i=1 to length(lines) do<br/>    string li = trim(lines[i])<br/>    if length(li)<br/>    and not find(li[1],\"#;\") then<br/>        integer k = find(' ',li)<br/>        if k!=0 then<br/>            string rest = li[k+1..$]<br/>            li = upper(li[1..k-1])<br/>            putd(li,rest,dini)<br/>        else<br/>            putd(upper(li),1,dini)<br/>        end if<br/>    end if<br/>end for<br/>\u00a0<br/>deld(\"NEEDSPEELING\",dini)<br/>setd(\"SEEDSREMOVED\",1,dini)<br/>setd(\"NUMBEROFBANANAS\",1024,dini)<br/>setd(\"NUMBEROFSTRAWBERRIES\",62000,dini)<br/>\u00a0<br/>for i=1 to length(lines) do<br/>    string li = trim(lines[i])<br/>    if length(li)<br/>    and li[1]!='#' then<br/>        if li[1]=';' then<br/>            li = trim(li[2..$])<br/>        end if<br/>        integer k = find(' ',li)<br/>        if k!=0 then<br/>            string rest = li[k+1..$]<br/>            li = upper(li[1..k-1])<br/>            k = getd_index(li,dini)<br/>            if k=0 then<br/>                lines[i] = \"; \"&amp;li&amp;\" \"&amp;rest<br/>            else<br/>                object o = getd_by_index(k,dini)<br/>                if not string(o) then o = sprint(o) end if<br/>                lines[i] = li&amp;\" \"&amp;o<br/>                deld(li,dini)<br/>            end if<br/>        else<br/>            if getd(li,dini) then<br/>                lines[i] = li<br/>                deld(li,dini)<br/>            else<br/>                lines[i] = \"; \"&amp;li<br/>            end if<br/>        end if<br/>    end if<br/>end for<br/>function visitor(object key, object data, object /*user_data*/)<br/>    lines = append(lines,key&amp;\" \"&amp;sprint(data))<br/>    return 1<br/>end function<br/>traverse_dict(routine_id(\"visitor\"),0,dini)<br/>fn = open(\"RCTEST.INI\",\"w\")<br/>puts(fn,join(lines,\"\\n\"))<br/>close(fn)</pre>"}, {"lang": "PicoLisp", "loc": 56, "block": "<pre class=\"text highlighted_source\">(let Data  # Read all data<br/>   (in \"config\"<br/>      (make<br/>         (until (eof)<br/>            (link (trim (split (line) \" \"))) ) ) )<br/>   (setq Data  # Fix comments<br/>      (mapcar<br/>         '((L)<br/>            (while (head '(\";\" \";\") (car L))<br/>               (pop L) )<br/>            (if (= '(\";\") (car L))<br/>               L<br/>               (cons NIL L) ) )<br/>         Data ) )<br/>   (let (Need NIL  Seed NIL  NBan NIL  NStr NIL  Favo NIL)<br/>      (map<br/>         '((L)<br/>            (let D (mapcar uppc (cadar L))<br/>               (cond<br/>                  ((= '`(chop \"NEEDSPEELING\") D)<br/>                     (if Need<br/>                        (set L)<br/>                        (on Need)<br/>                        (unless (caar L)<br/>                           (set (car L) '(\";\")) ) ) )<br/>                  ((= '`(chop \"SEEDSREMOVED\") D)<br/>                     (if Seed<br/>                        (set L)<br/>                        (on Seed)<br/>                        (when (caar L)<br/>                           (set (car L)) ) ) )<br/>                  ((= '`(chop \"NUMBEROFBANANAS\") D)<br/>                     (if NBan<br/>                        (set L)<br/>                        (on NBan)<br/>                        (set (cddar L) 1024) ) )<br/>                  ((= '`(chop \"NUMBEROFSTRAWBERRIES\") D)<br/>                     (if NStr<br/>                        (set L)<br/>                        (on NStr) ) )<br/>                  ((= '`(chop \"FAVOURITEFRUIT\") D)<br/>                     (if Favo<br/>                        (set L)<br/>                        (on Favo) ) ) ) ) )<br/>         Data )<br/>      (unless Need<br/>         (conc Data (cons (list NIL \"NEEDSPEELING\"))) )<br/>      (unless Seed<br/>         (conc Data (cons (list NIL \"SEEDSREMOVED\"))) )<br/>      (unless NBan<br/>         (conc Data (cons (list NIL \"NUMBEROFBANANAS\" 1024))) )<br/>      (unless NStr<br/>         (conc Data (cons (list NIL \"NUMBEROFSTRAWBERRIES\" 62000))) ) )<br/>   (out \"config\"<br/>      (for L Data<br/>         (prinl (glue \" \" (if (car L) L (cdr L)))) ) ) )</pre>"}, {"lang": "PowerShell", "loc": 109, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> Update<span class=\"sy0\">-</span>ConfigurationFile<br/><span class=\"br0\">{</span><br/>    <span class=\"br0\">[</span>CmdletBinding<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw3\">Param</span><br/>    <span class=\"br0\">(</span><br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"sy0\">,</span><br/>                   Position<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span>ValidateScript<span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"kw1\">Test-Path</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$Path</span> <span class=\"sy0\">=</span> <span class=\"st0\">\".\\config.txt\"</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$FavouriteFruit</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">int</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$NumberOfBananas</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">int</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$NumberOfStrawberries</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span>ValidateSet<span class=\"br0\">(</span><span class=\"st0\">\"On\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Off\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$NeedsPeeling</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span>ValidateSet<span class=\"br0\">(</span><span class=\"st0\">\"On\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Off\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$SeedsRemoved</span><br/>    <span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"re0\">$lines</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Get-Content</span> <span class=\"re0\">$Path</span><br/>\u00a0<br/>    <span class=\"kw1\">Clear-Content</span> <span class=\"re0\">$Path</span><br/>\u00a0<br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">-not</span> <span class=\"br0\">(</span><span class=\"re0\">$lines</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Select-String</span> <span class=\"kw5\">-Pattern</span> <span class=\"st0\">\"^\\s*NumberOfStrawberries\"</span> <span class=\"kw5\">-Quiet</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"# How many strawberries we have\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"NumberOfStrawberries 0\"</span> <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><span class=\"re0\">$lines</span> <span class=\"sy0\">+=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw3\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$line</span> <span class=\"kw3\">in</span> <span class=\"re0\">$lines</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"re0\">$line</span> <span class=\"kw4\">-replace</span> <span class=\"st0\">\"^\\s*\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\"</span>  <span class=\"co1\">## Strip leading whitespace</span><br/>\u00a0<br/>        <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$line</span> <span class=\"kw4\">-match</span> <span class=\"st0\">\"[;].*\\s*\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">continue</span><span class=\"br0\">}</span>  <span class=\"co1\">## Strip semicolons</span><br/>\u00a0<br/>        <span class=\"kw3\">switch</span> <span class=\"kw4\">-Regex</span> <span class=\"br0\">(</span><span class=\"re0\">$line</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"st0\">\"(^$)|(^#\\s.*)\"</span>                                              <span class=\"co1\">## Blank line or comment</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"re0\">$line</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"st0\">\"^FavouriteFruit\\s*.*\"</span>                                       <span class=\"co1\">## Parameter FavouriteFruit</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$FavouriteFruit</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"FAVOURITEFRUIT $FavouriteFruit\"</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"st0\">\"^NumberOfBananas\\s*.*\"</span>                                      <span class=\"co1\">## Parameter NumberOfBananas</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$NumberOfBananas</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"NUMBEROFBANANAS $NumberOfBananas\"</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"st0\">\"^NumberOfStrawberries\\s*.*\"</span>                                 <span class=\"co1\">## Parameter NumberOfStrawberries</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$NumberOfStrawberries</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"NUMBEROFSTRAWBERRIES $NumberOfStrawberries\"</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"st0\">\".*NeedsPeeling\\s*.*\"</span>                                        <span class=\"co1\">## Parameter NeedsPeeling</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$NeedsPeeling</span> <span class=\"kw4\">-eq</span> <span class=\"st0\">\"On\"</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"NEEDSPEELING\"</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw3\">elseif</span> <span class=\"br0\">(</span><span class=\"re0\">$NeedsPeeling</span> <span class=\"kw4\">-eq</span> <span class=\"st0\">\"Off\"</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"; NEEDSPEELING\"</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"st0\">\".*SeedsRemoved\\s*.*\"</span>                                        <span class=\"co1\">## Parameter SeedsRemoved</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$SeedsRemoved</span> <span class=\"kw4\">-eq</span> <span class=\"st0\">\"On\"</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"SEEDSREMOVED\"</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw3\">elseif</span> <span class=\"br0\">(</span><span class=\"re0\">$SeedsRemoved</span> <span class=\"kw4\">-eq</span> <span class=\"st0\">\"Off\"</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"; SEEDSREMOVED\"</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            Default                                                      <span class=\"co1\">## Whatever...</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"re0\">$line</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">Add-Content</span> <span class=\"re0\">$Path</span> <span class=\"kw5\">-Value</span> <span class=\"re0\">$line</span> <span class=\"kw5\">-Force</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 219, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/env python</span><br/>\u00a0<br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"co1\"># STANDARD MODULES</span><br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">re</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">string</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"co1\"># GLOBAL: VARIABLES</span><br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/>DISABLED_PREFIX <span class=\"sy0\">=</span> <span class=\"st0\">';'</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"co1\"># CLASS Option</span><br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"kw1\">class</span> Option<span class=\"br0\">(</span><span class=\"kw2\">object</span><span class=\"br0\">)</span>:<br/>    <span class=\"st0\">\"\"\"An option, characterized by its name and its (optional) value. and by<br/>       its status, which can be enabled or disabled.<br/>       If its value is None, it is regarded to as a boolean option with a<br/>       value of true.<br/>    \"\"\"</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"sy0\">,</span> disabled<span class=\"sy0\">=</span><span class=\"kw2\">False</span><span class=\"sy0\">,</span><br/>                 disabled_prefix<span class=\"sy0\">=</span>DISABLED_PREFIX<span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Create an Option instance, setting its name to 'name' (always<br/>           converted to a string) and its value to 'value'. If 'disabled' is<br/>           True, the option is considered disabled, otherwise enabled.<br/>           The string 'disabled_prefix' is used as a prefix when generating the<br/>           string representation of the option.<br/>        \"\"\"</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">name</span> <span class=\"sy0\">=</span> <span class=\"kw2\">str</span><span class=\"br0\">(</span>name<span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">disabled</span> <span class=\"sy0\">=</span> <span class=\"kw2\">bool</span><span class=\"br0\">(</span>disabled<span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">disabled_prefix</span> <span class=\"sy0\">=</span> disabled_prefix<br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Return a string representation of the Option instance.<br/>           This always includes the option name, followed by a space and the<br/>           option value (if it is not None). If the option is disabled, the<br/>           whole string is preprendend by the string stored in the instance<br/>           attribute 'disabled_prefix' and a space.<br/>        \"\"\"</span><br/>        disabled <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"st0\">'%s '</span>\u00a0% <span class=\"kw2\">self</span>.<span class=\"me1\">disabled_prefix</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"kw2\">self</span>.<span class=\"me1\">disabled</span><span class=\"br0\">]</span><br/>        value <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"st0\">'\u00a0%s'</span>\u00a0% <span class=\"kw2\">self</span>.<span class=\"me1\">value</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"kw2\">self</span>.<span class=\"me1\">value</span> <span class=\"kw1\">is</span> <span class=\"kw2\">None</span><span class=\"br0\">]</span><br/>        <span class=\"kw1\">return</span> <span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"br0\">(</span>disabled<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">name</span><span class=\"sy0\">,</span> value<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> get<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Return the option value.<br/>           If the stored value is None, the option is regarded to as a<br/>           boolean one and its enabled status is returned. Othrwise its value<br/>           is returned.<br/>        \"\"\"</span><br/>        enabled <span class=\"sy0\">=</span> <span class=\"kw1\">not</span> <span class=\"kw2\">bool</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">disabled</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">self</span>.<span class=\"me1\">value</span> <span class=\"kw1\">is</span> <span class=\"kw2\">None</span>:<br/>            value <span class=\"sy0\">=</span> enabled<br/>        <span class=\"kw1\">else</span>:<br/>            value <span class=\"sy0\">=</span> enabled <span class=\"kw1\">and</span> <span class=\"kw2\">self</span>.<span class=\"me1\">value</span><br/>        <span class=\"kw1\">return</span> value<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"co1\"># CLASS Config</span><br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"kw1\">class</span> Config<span class=\"br0\">(</span><span class=\"kw2\">object</span><span class=\"br0\">)</span>:<br/>    <span class=\"st0\">\"\"\"A set of configuration options and comment strings.<br/>    \"\"\"</span><br/>    <span class=\"co1\"># Regular expression matching a valid option line.</span><br/>    reOPTION <span class=\"sy0\">=</span> r<span class=\"st0\">'^<span class=\"es0\">\\s</span>*(?P&lt;disabled&gt;%s*)<span class=\"es0\">\\s</span>*(?P&lt;name&gt;<span class=\"es0\">\\w</span>+)(?:<span class=\"es0\">\\s</span>+(?P&lt;value&gt;.+?))?<span class=\"es0\">\\s</span>*$'</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> fname<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"sy0\">,</span> disabled_prefix<span class=\"sy0\">=</span>DISABLED_PREFIX<span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Initialize a Config instance, optionally reading the contents of<br/>           the configuration file 'fname'.<br/>           The string 'disabled_prefix' is used as a prefix when generating the<br/>           string representation of the options.<br/>        \"\"\"</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">disabled_prefix</span> <span class=\"sy0\">=</span> disabled_prefix<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">contents</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>          <span class=\"co1\"># Sequence of strings and Option instances.</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">options</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>           <span class=\"co1\"># Map an option name to an Option instance.</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">creOPTION</span> <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">reOPTION</span>\u00a0% <span class=\"kw2\">self</span>.<span class=\"me1\">disabled_prefix</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> fname:<br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">parse_file</span><span class=\"br0\">(</span>fname<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Return a string representation of the Config instance.<br/>           This is just the concatenation of all the items stored in the<br/>           attribute 'contents'.<br/>        \"\"\"</span><br/>        <span class=\"kw1\">return</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">contents</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> parse_file<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> fname<span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Parse all the lines of file 'fname' by applying the method<br/>           'parser_lines' on the file contents.<br/>        \"\"\"</span><br/>        <span class=\"kw1\">with</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span>fname<span class=\"br0\">)</span> <span class=\"kw1\">as</span> f:<br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">parse_lines</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> parse_lines<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> lines<span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Parse all the lines of iterable 'lines' by invoking the method<br/>           'parse_line' for each line in 'lines'.<br/>        \"\"\"</span><br/>        <span class=\"kw1\">for</span> line <span class=\"kw1\">in</span> lines:<br/>            <span class=\"kw2\">self</span>.<span class=\"me1\">parse_line</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> parse_line<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> line<span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Parse the line 'line', looking for options.<br/>           If an option line is found, spaces are stripped from the start and<br/>           the end of 'line' and any non-printable character is removed as well.<br/>           Only the first occurrence of an option is processed, all the other<br/>           occurrences are ignored. A valid option is added to the instance<br/>           attribute 'contents' (in order to preserve its position among the<br/>           other lines). It is also added to the mapping stored in the instance<br/>           attribute 'options'.<br/>           Any non-option string is added the the instance attribute 'contents',<br/>           except those lines starting with the string stored into the instance<br/>           attribute 'disabled_prefix' which are not followed by any option<br/>           name.<br/>        \"\"\"</span><br/>        s <span class=\"sy0\">=</span> <span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span>c <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> line.<span class=\"me1\">strip</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> c <span class=\"kw1\">in</span> <span class=\"kw3\">string</span>.<span class=\"me1\">printable</span><span class=\"br0\">)</span> <br/>        moOPTION <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">creOPTION</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> moOPTION:<br/>            name <span class=\"sy0\">=</span> moOPTION.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"st0\">'name'</span><span class=\"br0\">)</span>.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> name <span class=\"kw1\">in</span> <span class=\"kw2\">self</span>.<span class=\"me1\">options</span>:<br/>                <span class=\"kw2\">self</span>.<span class=\"me1\">add_option</span><span class=\"br0\">(</span>name<span class=\"sy0\">,</span> moOPTION.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"st0\">'value'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                                moOPTION.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"st0\">'disabled'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span>:<br/>            <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> s.<span class=\"me1\">startswith</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">disabled_prefix</span><span class=\"br0\">)</span>:<br/>                <span class=\"kw2\">self</span>.<span class=\"me1\">contents</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span>line.<span class=\"me1\">rstrip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> add_option<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"sy0\">,</span> disabled<span class=\"sy0\">=</span><span class=\"kw2\">False</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Create a new Option instance, named 'name' (always converted to<br/>           uppercase) with value 'value' and set its disabled status to<br/>           'disabled'.<br/>           The Option instance is added to the instance attribute 'contents'.<br/>           It is also added to the mapping stored in the instance attribute<br/>           'options'.<br/>        \"\"\"</span><br/>        name <span class=\"sy0\">=</span> name.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        opt <span class=\"sy0\">=</span> Option<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> value<span class=\"sy0\">,</span> disabled<span class=\"br0\">)</span><br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">options</span><span class=\"br0\">[</span>name<span class=\"br0\">]</span> <span class=\"sy0\">=</span> opt<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">contents</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span>opt<span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> opt<br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> set_option<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"sy0\">,</span> disabled<span class=\"sy0\">=</span><span class=\"kw2\">False</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Look for an option named 'name' (always converted to<br/>           uppercase) among the options stored in the instance<br/>           attribute 'options'.<br/>           If it is not found, a new Option instance is created.<br/>           In any case its value is set to 'value' and its disabled<br/>           status to 'disabled'.<br/>        \"\"\"</span><br/>        name <span class=\"sy0\">=</span> name.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        opt <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">options</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>name<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> opt:<br/>            opt.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<br/>            opt.<span class=\"me1\">disabled</span> <span class=\"sy0\">=</span> disabled<br/>        <span class=\"kw1\">else</span>:<br/>            opt <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">add_option</span><span class=\"br0\">(</span>name<span class=\"sy0\">,</span> value<span class=\"sy0\">,</span> disabled<span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> opt<br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> enable_option<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Enable the option named 'name' (always converted to<br/>           uppercase) and set its value to 'value'.<br/>           If the option is not found, it is created and added to the<br/>           end of the instance attribute 'contents'.<br/>        \"\"\"</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">set_option</span><span class=\"br0\">(</span>name<span class=\"sy0\">,</span> value<span class=\"sy0\">,</span> <span class=\"kw2\">False</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> disable_option<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Disable the option named 'name' (always converted to<br/>           uppercase) and set its value to 'value'.<br/>           If the option is not found, it is created and added to the<br/>           end of the instance attribute 'contents'.<br/>        \"\"\"</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">set_option</span><span class=\"br0\">(</span>name<span class=\"sy0\">,</span> value<span class=\"sy0\">,</span> <span class=\"kw2\">True</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#------------------------------------------------------------------------</span><br/>    <span class=\"kw1\">def</span> get_option<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> name<span class=\"br0\">)</span>:<br/>        <span class=\"st0\">\"\"\"Return the value of the option named 'name' (always<br/>           converted to uppercase).<br/>           If the option is not found in the instance attribute<br/>           'options', None is returned. If the stored value is None,<br/>           it is regarded to as a boolean option and its enable status<br/>           is returned. Otherwise its value is returned.<br/>        \"\"\"</span><br/>        opt <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">options</span>.<span class=\"me1\">get</span><span class=\"br0\">(</span>name.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        value <span class=\"sy0\">=</span> opt.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> opt <span class=\"kw1\">else</span> <span class=\"kw2\">None</span><br/>        <span class=\"kw1\">return</span> value<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"co1\"># MAIN</span><br/><span class=\"co1\">#----------------------------------------------------------------------------</span><br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">import</span> <span class=\"kw3\">sys</span><br/>    cfg <span class=\"sy0\">=</span> Config<span class=\"br0\">(</span><span class=\"kw3\">sys</span>.<span class=\"me1\">argv</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw3\">sys</span>.<span class=\"me1\">argv</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">else</span> <span class=\"kw2\">None</span><span class=\"br0\">)</span><br/>    cfg.<span class=\"me1\">disable_option</span><span class=\"br0\">(</span><span class=\"st0\">'needspeeling'</span><span class=\"br0\">)</span><br/>    cfg.<span class=\"me1\">enable_option</span><span class=\"br0\">(</span><span class=\"st0\">'seedsremoved'</span><span class=\"br0\">)</span><br/>    cfg.<span class=\"me1\">enable_option</span><span class=\"br0\">(</span><span class=\"st0\">'numberofbananas'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1024</span><span class=\"br0\">)</span><br/>    cfg.<span class=\"me1\">enable_option</span><span class=\"br0\">(</span><span class=\"st0\">'numberofstrawberries'</span><span class=\"sy0\">,</span> <span class=\"nu0\">62000</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">print</span> cfg<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(require \"options.rkt\")<br/>\u00a0<br/>\u00a0<br/>(read-options \"options-file\")<br/>(define-options needspeeling seedsremoved numberofbananas numberofstrawberries)<br/>\u00a0<br/>;; Disable the needspeeling option (using a semicolon prefix)<br/>(set! needspeeling #f)<br/>;; Enable the seedsremoved option by removing the semicolon and any<br/>;; leading whitespace<br/>(set! seedsremoved ENABLE)<br/>;; Change the numberofbananas parameter to 1024<br/>(set! numberofbananas 1024)<br/>;; Enable (or create if it does not exist in the file) a parameter for<br/>;; numberofstrawberries with a value of 62000<br/>(set! numberofstrawberries 62000)<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 45, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program demonstrates how to  update  a configuration file  (four specific tasks).*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> iFID oFID <span class=\"sy0\">.</span>                            <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> iFID==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> iFID==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> iFID=      <span class=\"st0\">'UPDATECF.TXT'</span>  <span class=\"coMULTI\">/*Not given?  Then use default.*/</span><br/><span class=\"kw1\">if</span> oFID==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> oFID==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> oFID=<span class=\"st0\">'\\TEMP\\UPDATECF.$$$'</span>  <span class=\"coMULTI\">/* \"    \"       \"   \"     \"    */</span><br/><span class=\"kw1\">call</span> <span class=\"kw6\">lineout</span> iFID;  <span class=\"kw1\">call</span> <span class=\"kw6\">lineout</span> oFID            <span class=\"coMULTI\">/*close the input and the output files.*/</span><br/>$<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span>                                             <span class=\"coMULTI\">/*placeholder of the options detected. */</span><br/><span class=\"kw1\">call</span> dos  <span class=\"st0\">'ERASE'</span>  oFID                          <span class=\"coMULTI\">/*erase a file (with no error message).*/</span><br/>changed=<span class=\"nu0\">0</span>                                        <span class=\"coMULTI\">/*nothing changed in the file (so far).*/</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  read the entire  config  file. */</span><br/>  <span class=\"kw1\">do</span> rec=<span class=\"nu0\">0</span>  <span class=\"kw2\">while</span> <span class=\"kw6\">lines</span><span class=\"br0\">(</span>iFID<span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"nu0\">0</span>                <span class=\"coMULTI\">/*read a record; bump the record count.*/</span><br/>  z=<span class=\"kw2\">linein</span><span class=\"br0\">(</span>iFID<span class=\"br0\">)</span>;          zz=<span class=\"kw6\">space</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span>           <span class=\"coMULTI\">/*get record;  elide extraneous blanks.*/</span><br/>  <span class=\"kw1\">say</span> <span class=\"st0\">'\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 record:'</span>  z                     <span class=\"coMULTI\">/*echo the record just read \u2500\u2500\u25ba console*/</span><br/>  a=<span class=\"kw6\">left</span><span class=\"br0\">(</span>zz,<span class=\"nu0\">1</span><span class=\"br0\">)</span>;  _=<span class=\"kw6\">space</span><span class=\"br0\">(</span> <span class=\"kw6\">translate</span><span class=\"br0\">(</span>zz, ,<span class=\"st0\">';'</span><span class=\"br0\">)</span> <span class=\"br0\">)</span>  <span class=\"coMULTI\">/*_:  is used to elide multiple  \";\"   */</span><br/>  <span class=\"kw1\">if</span> zz==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> a==<span class=\"st0\">'#'</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>; <span class=\"kw1\">call</span> cpy z; <span class=\"kw1\">iterate</span>; <span class=\"kw3\">end</span>            <span class=\"coMULTI\">/*blank or a comment.*/</span><br/>  <span class=\"kw1\">if</span> _==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>; changed=<span class=\"nu0\">1</span>; <span class=\"kw1\">iterate</span>; <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*elide any semicolons;  empty records.*/</span><br/>  <span class=\"kw1\">parse</span> <span class=\"kw2\">upper</span> <span class=\"kw2\">var</span> z op <span class=\"sy0\">.</span>                         <span class=\"coMULTI\">/*obtain the option from the record.   */</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]   option may have leading or \u00b7\u00b7\u00b7*/</span><br/>  <span class=\"kw1\">if</span> a==<span class=\"st0\">';'</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;   <span class=\"kw1\">parse</span> <span class=\"kw2\">upper</span> <span class=\"kw2\">var</span> z <span class=\"nu0\">2</span> op <span class=\"sy0\">.</span>                      <span class=\"coMULTI\">/*trailing blanks.*/</span><br/>                  <span class=\"kw1\">if</span> op=<span class=\"st0\">'SEEDSREMOVED'</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> new <span class=\"kw6\">space</span><span class=\"br0\">(</span> <span class=\"kw6\">substr</span><span class=\"br0\">(</span>z, <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>                  <span class=\"kw1\">call</span> cpy z;  $<span class=\"sy0\">.</span>op=<span class=\"nu0\">1</span>            <span class=\"coMULTI\">/*write the Z record to the output file*/</span><br/>                  <span class=\"kw1\">iterate</span>  <span class=\"coMULTI\">/*rec*/</span>               <span class=\"coMULTI\">/* \u00b7\u00b7\u00b7 and then go read the next record*/</span><br/>                  <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">if</span> $<span class=\"sy0\">.</span>op  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  changed=<span class=\"nu0\">1</span>;  <span class=\"kw1\">iterate</span>;  <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*is the  option  already defined?     */</span><br/>  $<span class=\"sy0\">.</span>op=<span class=\"nu0\">1</span>                                         <span class=\"coMULTI\">/* [\u2191]  Yes?   Then delete it.         */</span><br/>  <span class=\"kw1\">if</span> op==<span class=\"st0\">'NEEDSPEELING'</span>          <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> new  <span class=\"st0\">\";\"</span>    z<br/>  <span class=\"kw1\">if</span> op==<span class=\"st0\">'NUMBEROFBANANAS'</span>       <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> new  op  <span class=\"nu0\">1024</span><br/>  <span class=\"kw1\">if</span> op==<span class=\"st0\">'NUMBEROFSTRAWBERRIES'</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> new  op  <span class=\"nu0\">62000</span><br/>  <span class=\"kw1\">call</span> cpy z                                     <span class=\"coMULTI\">/*write the Z record to the output file*/</span><br/>  <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*rec*/</span><br/>\u00a0<br/>     nos=<span class=\"st0\">'NUMBEROFSTRAWBERRIES'</span>                  <span class=\"coMULTI\">/* [\u2193]  Does NOS option need updating? */</span><br/><span class=\"kw1\">if</span> <span class=\"sy0\">\\</span>$<span class=\"sy0\">.</span>nos   <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">call</span> new nos <span class=\"nu0\">62000</span>;  <span class=\"kw1\">call</span> cpy z;  <span class=\"kw3\">end</span>             <span class=\"coMULTI\">/*update option.*/</span><br/><span class=\"kw1\">call</span> <span class=\"kw6\">lineout</span> iFID;    <span class=\"kw1\">call</span> <span class=\"kw6\">lineout</span> oFID          <span class=\"coMULTI\">/*close the input and the output files.*/</span><br/><span class=\"kw1\">if</span> rec==<span class=\"nu0\">0</span>   <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>;  <span class=\"kw1\">say</span> <span class=\"st0\">\"ERROR:  input file wasn't found:\"</span>  iFID;  <span class=\"kw1\">exit</span>;  <span class=\"kw3\">end</span><br/><span class=\"kw1\">if</span> changed  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>                              <span class=\"coMULTI\">/*possibly overwrite the input file.   */</span><br/>                 <span class=\"kw1\">call</span> dos <span class=\"st0\">'XCOPY'</span> oFID iFID <span class=\"st0\">'/y /q'</span>,<span class=\"st0\">\"&gt;nul\"</span>                     <span class=\"coMULTI\">/*quietly*/</span><br/>                 <span class=\"kw1\">say</span>;   <span class=\"kw1\">say</span> <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">'output file'</span>, <span class=\"nu0\">79</span>, <span class=\"st0\">\"\u2592\"</span><span class=\"br0\">)</span>                     <span class=\"coMULTI\">/*title. */</span><br/>                 <span class=\"kw1\">call</span> dos <span class=\"st0\">'TYPE'</span>  oFID           <span class=\"coMULTI\">/*display content of the output file.  */</span><br/>                 <span class=\"kw3\">end</span><br/><span class=\"kw1\">call</span> dos <span class=\"st0\">'ERASE'</span>  oFID                           <span class=\"coMULTI\">/*erase a file (with no error message).*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>cpy:  <span class=\"kw1\">call</span> <span class=\"kw6\">lineout</span> oFID, <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;        <span class=\"kw1\">return</span>   <span class=\"coMULTI\">/*write one line of text \u2500\u2500\u2500\u25ba oFID.    */</span><br/>dos:  <span class=\"st0\">''</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"st0\">\"2&gt;nul\"</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span>;  <span class=\"kw1\">return</span>   <span class=\"coMULTI\">/*execute a  DOS  command  (quietly).  */</span><br/>new:  z=<span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;    changed=<span class=\"nu0\">1</span>;           <span class=\"kw1\">return</span>   <span class=\"coMULTI\">/*use new Z, indicate changed record.  */</span></pre>"}, {"lang": "Ruby", "loc": 140, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'stringio'</span><br/>\u00a0<br/><span class=\"kw1\">class</span> ConfigFile<br/>\u00a0<br/>  <span class=\"co1\"># create a ConfigFile object from a file</span><br/>  <span class=\"kw1\">def</span> <span class=\"kw2\">self</span>.<span class=\"me1\">file</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/>    fh = <span class=\"kw4\">File</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/>    obj = <span class=\"kw2\">self</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>fh<span class=\"br0\">)</span><br/>    obj.<span class=\"me1\">filename</span> = filename<br/>    fh.<span class=\"me1\">close</span><br/>    obj<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># create a ConfigFile object from a string</span><br/>  <span class=\"kw1\">def</span> <span class=\"kw2\">self</span>.<span class=\"me1\">data</span><span class=\"br0\">(</span><span class=\"kw3\">string</span><span class=\"br0\">)</span><br/>    fh = <span class=\"kw4\">StringIO</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"kw3\">string</span><span class=\"br0\">)</span><br/>    obj = <span class=\"kw2\">self</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span>fh<span class=\"br0\">)</span><br/>    fh.<span class=\"me1\">close</span><br/>    obj<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span>filehandle<span class=\"br0\">)</span><br/>    <span class=\"re1\">@lines</span> = filehandle.<span class=\"kw3\">readlines</span><br/>    <span class=\"re1\">@filename</span> = <span class=\"kw2\">nil</span><br/>    tidy_file<br/>  <span class=\"kw1\">end</span><br/>  attr <span class=\"re3\">:filename</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> save<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"re1\">@filename</span><br/>      <span class=\"kw4\">File</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>@filename, <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>f<span class=\"sy0\">|</span> f.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> tidy_file<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"re1\">@lines</span>.<span class=\"me1\">map</span>! <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>line<span class=\"sy0\">|</span><br/>      <span class=\"co1\"># remove leading whitespace</span><br/>      line.<span class=\"me1\">lstrip</span>!<br/>\u00a0<br/>      <span class=\"kw1\">if</span> line.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^<span class=\"co1\">#/)</span><br/>        <span class=\"co1\"># Lines beginning with hash symbols should not be manipulated and left</span><br/>        <span class=\"co1\"># unchanged in the revised file.  </span><br/>        line<br/>      <span class=\"kw1\">else</span><br/>        <span class=\"co1\"># replace double semicolon prefixes with just a single semicolon  </span><br/>        line.<span class=\"kw3\">sub!</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^;<span class=\"sy0\">+</span>\\s<span class=\"sy0\">+/</span>, <span class=\"st0\">\"; \"</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> line.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^; \\s<span class=\"sy0\">*</span>$<span class=\"sy0\">/</span><span class=\"br0\">)</span> <br/>          <span class=\"co1\"># Any lines beginning with a semicolon or groups of semicolons, but no</span><br/>          <span class=\"co1\"># following option should be removed </span><br/>          line = <span class=\"st0\">\"\"</span><br/>        <span class=\"kw1\">else</span><br/>          <span class=\"co1\"># remove ... any trailing whitespace on the lines </span><br/>          line = line.<span class=\"me1\">rstrip</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/>\u00a0<br/>          <span class=\"co1\"># Whitespace between the option and paramters should consist only of a</span><br/>          <span class=\"co1\"># single space </span><br/>          <span class=\"kw1\">if</span> m = line.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^<span class=\"br0\">(</span>; <span class=\"br0\">)</span>?<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"re3\">:upper</span>:<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">+</span><span class=\"br0\">)</span>\\s<span class=\"sy0\">+</span><span class=\"br0\">(</span>.<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>            line = <span class=\"br0\">(</span>m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"kw2\">nil</span>?\u00a0? <span class=\"st0\">\"\"</span>\u00a0: m<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> format_line<span class=\"br0\">(</span>m<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, m<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>\u00a0<br/>        line<br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> format_line<span class=\"br0\">(</span>option, value<span class=\"br0\">)</span><br/>    <span class=\"st0\">\"%s%s<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>option.<span class=\"me1\">upcase</span>.<span class=\"me1\">strip</span>, value.<span class=\"kw2\">nil</span>?\u00a0? <span class=\"st0\">\"\"</span>\u00a0: <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> value.<span class=\"me1\">to_s</span>.<span class=\"me1\">strip</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># returns the index of the option, or nil if not found</span><br/>  <span class=\"kw1\">def</span> find_option<span class=\"br0\">(</span>option<span class=\"br0\">)</span><br/>    <span class=\"re1\">@lines</span>.<span class=\"me1\">find_index</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>line<span class=\"sy0\">|</span> line.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>^<span class=\"co1\">#{option.upcase.strip}\\b/)}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># uncomments a disabled option</span><br/>  <span class=\"kw1\">def</span> enable_option<span class=\"br0\">(</span>option<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> idx = find_option<span class=\"br0\">(</span><span class=\"st0\">\"; \"</span> <span class=\"sy0\">+</span> option<span class=\"br0\">)</span><br/>      <span class=\"re1\">@lines</span><span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"sy0\">/</span>^; <span class=\"sy0\">/</span><span class=\"br0\">]</span> = <span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># comment a line with a semi-colon</span><br/>  <span class=\"kw1\">def</span> disable_option<span class=\"br0\">(</span>option<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> idx = find_option<span class=\"br0\">(</span>option<span class=\"br0\">)</span><br/>      <span class=\"re1\">@lines</span><span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"sy0\">/</span>^<span class=\"sy0\">/</span><span class=\"br0\">]</span> = <span class=\"st0\">\"; \"</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"co1\"># add an option, or change the value of an existing option. </span><br/>  <span class=\"co1\"># use nil for the value to set a boolean option</span><br/>  <span class=\"kw1\">def</span> set_value<span class=\"br0\">(</span>option, value<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> idx = find_option<span class=\"br0\">(</span>option<span class=\"br0\">)</span><br/>      <span class=\"re1\">@lines</span><span class=\"br0\">[</span>idx<span class=\"br0\">]</span> = format_line<span class=\"br0\">(</span>option, value<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"re1\">@lines</span> <span class=\"sy0\">&lt;&lt;</span> format_line<span class=\"br0\">(</span>option, value<span class=\"br0\">)</span> <br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> to_s<br/>    <span class=\"re1\">@lines</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>\u00a0<br/>config = ConfigFile.<span class=\"me1\">data</span><span class=\"br0\">(</span>DATA.<span class=\"me1\">read</span><span class=\"br0\">)</span><br/>config.<span class=\"me1\">disable_option</span><span class=\"br0\">(</span><span class=\"st0\">'needspeeling'</span><span class=\"br0\">)</span><br/>config.<span class=\"me1\">enable_option</span><span class=\"br0\">(</span><span class=\"st0\">'seedsremoved'</span><span class=\"br0\">)</span><br/>config.<span class=\"me1\">set_value</span><span class=\"br0\">(</span><span class=\"st0\">'numberofbananas'</span>, <span class=\"nu0\">1024</span><span class=\"br0\">)</span><br/>config.<span class=\"me1\">set_value</span><span class=\"br0\">(</span><span class=\"st0\">'numberofstrawberries'</span>, <span class=\"nu0\">62000</span><span class=\"br0\">)</span><br/><span class=\"kw3\">puts</span> config<br/>\u00a0<br/>\u00a0<br/>__END__<br/><span class=\"co1\"># This is a configuration file in standard configuration file format</span><br/><span class=\"co1\">#</span><br/><span class=\"co1\"># Lines begininning with a hash or a semicolon are ignored by the application</span><br/><span class=\"co1\"># program. Blank lines are also ignored by the application program.</span><br/>\u00a0<br/><span class=\"co1\"># The first word on each non comment line is the configuration option.</span><br/><span class=\"co1\"># Remaining words or numbers on the line are configuration parameter</span><br/><span class=\"co1\"># data fields.</span><br/>\u00a0<br/><span class=\"co1\"># Note that configuration option names are not case sensitive. However,</span><br/><span class=\"co1\"># configuration parameter data is case sensitive and the lettercase must</span><br/><span class=\"co1\"># be preserved.</span><br/>\u00a0<br/><span class=\"co1\"># This is a favourite fruit</span><br/>FAVOURITEFRUIT \t\tbanana<br/>\u00a0<br/><span class=\"co1\"># This is a boolean that should be set</span><br/>  NEEDSPEELING<br/>\u00a0<br/><span class=\"co1\"># This boolean is commented out</span><br/>;;; SEEDSREMOVED<br/>;;; <br/>\u00a0<br/><span class=\"co1\"># How many bananas we have</span><br/>NUMBEROFBANANAS <span class=\"nu0\">48</span></pre>"}, {"lang": "Tcl", "loc": 76, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/>oo::<span class=\"me1\">class</span> create Config <span class=\"br0\">{</span><br/>    <span class=\"kw1\">variable</span> <span class=\"kw3\">filename</span> contents<br/>    constructor fileName <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> <span class=\"kw3\">filename</span> <span class=\"re0\">$fileName</span><br/>\t<span class=\"kw1\">set</span> contents <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\ttry <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$filename</span><span class=\"br0\">]</span><br/>\t    <span class=\"co1\">### Sanitize during input</span><br/>\t    <span class=\"kw1\">foreach</span> line <span class=\"br0\">[</span><span class=\"kw2\">split</span> <span class=\"br0\">[</span><span class=\"kw2\">read</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span> \\n<span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> match <span class=\"st0\">\"#*\"</span> <span class=\"re0\">$line</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">lappend</span> contents <span class=\"re0\">$line</span><br/>\t\t    <span class=\"kw1\">continue</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">regexp</span> <span class=\"br0\">{</span>^<span class=\"sy0\">;</span>\\W<span class=\"sy0\">*$</span><span class=\"br0\">}</span> <span class=\"re0\">$line</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><br/>\t\t<span class=\"kw1\">set</span> line <span class=\"br0\">[</span><span class=\"kw2\">string</span> trim <span class=\"br0\">[</span><span class=\"kw2\">regsub</span> -all <span class=\"br0\">{</span><span class=\"br0\">[</span>^\\u0020-\\u007e<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"re0\">$line</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">regexp</span> <span class=\"br0\">{</span>^<span class=\"br0\">(</span>\\W<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">(</span>\\w+<span class=\"br0\">)</span><span class=\"br0\">(</span>.<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">$</span><span class=\"br0\">}</span> <span class=\"re0\">$line</span> -<span class=\"sy0\">&gt;</span> a b c<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> line <span class=\"st0\">\"[regsub -all {^;+} $a {;}][string toupper $b]$c\"</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw2\">lappend</span> contents <span class=\"re0\">$line</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span> finally <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">info</span> exists f<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">close</span> <span class=\"re0\">$f</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> save <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$filename</span> w<span class=\"br0\">]</span><br/>\t<span class=\"kw2\">puts</span> <span class=\"re0\">$f</span> <span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"re0\">$contents</span> \\n<span class=\"br0\">]</span><br/>\t<span class=\"kw2\">close</span> <span class=\"re0\">$f</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># Utility methods (not exposed API)</span><br/>    <span class=\"kw1\">method</span> Transform <span class=\"br0\">{</span>pattern vars replacement<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> matched <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">set</span> line -<span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">set</span> RE <span class=\"st0\">\"(?i)^$pattern$\"</span><br/>\t<span class=\"kw1\">foreach</span> l <span class=\"re0\">$contents</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">incr</span> line<br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"kw2\">regexp</span> <span class=\"re0\">$RE</span> <span class=\"re0\">$l</span> -<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$vars</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$matched</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw1\">set</span> contents <span class=\"br0\">[</span><span class=\"kw2\">lreplace</span> <span class=\"re0\">$contents</span> <span class=\"re0\">$line</span> <span class=\"re0\">$line</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"kw2\">incr</span> line -<span class=\"nu0\">1</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"kw2\">lset</span> contents <span class=\"re0\">$line</span> <span class=\"br0\">[</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"kw2\">subst</span> <span class=\"re0\">$replacement</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">set</span> matched <span class=\"nu0\">1</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"re0\">$matched</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> Format <span class=\"br0\">{</span>k v<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> v <span class=\"st0\">\" [string trimleft $v]\"</span><br/>\t<span class=\"kw1\">return</span> <span class=\"st0\">\"[string toupper $k][string trimright $v]\"</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># Public API for modifying options</span><br/>    <span class=\"kw1\">method</span> enable <span class=\"br0\">{</span>option<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span>my Transform <span class=\"st0\">\";?<span class=\"es0\">\\\\</span>s*($option)<span class=\"es0\">\\\\</span>M<span class=\"es0\">\\s</span>*(.*)\"</span> <span class=\"br0\">{</span>k v<span class=\"br0\">}</span> \\<br/>\t\t  <span class=\"br0\">{</span><span class=\"br0\">[</span>my Format <span class=\"re0\">$k</span> <span class=\"re0\">$v</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> contents <span class=\"br0\">[</span>my Format <span class=\"re0\">$option</span> <span class=\"st0\">\"\"</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> disable <span class=\"br0\">{</span>option<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span>my Transform <span class=\"st0\">\";?<span class=\"es0\">\\\\</span>s*($option)<span class=\"es0\">\\\\</span>M<span class=\"es0\">\\s</span>*(.*)\"</span> <span class=\"br0\">{</span>k v<span class=\"br0\">}</span> \\<br/>\t\t  <span class=\"br0\">{</span><span class=\"sy0\">;</span> <span class=\"br0\">[</span>my Format <span class=\"re0\">$k</span> <span class=\"re0\">$v</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> contents <span class=\"st0\">\"; [my Format $option \"</span><span class=\"st0\">\"]\"</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">method</span> <span class=\"kw1\">set</span> <span class=\"br0\">{</span>option <span class=\"br0\">{</span>value <span class=\"st0\">\"\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span>my Transform <span class=\"st0\">\";?<span class=\"es0\">\\\\</span>s*($option)<span class=\"es0\">\\\\</span>M.*\"</span> k <span class=\"br0\">{</span><span class=\"br0\">[</span>my Format <span class=\"re0\">$k</span> <span class=\"re0\">$value</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> contents <span class=\"br0\">[</span>my Format <span class=\"re0\">$option</span> <span class=\"re0\">$value</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TXR", "loc": 1, "block": "<pre>  VAR      # define or update VAR as a true-valued boolean\n  VAR=     # ensure \"; VAR\" in the config file.\n  VAR=VAL  # ensure \"VAR VAL\" in the config file</pre>"}, {"lang": "VBScript", "loc": 59, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw4\">Set</span> objFSO = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Scripting.FileSystemObject\"</span>)<br/>\u00a0<br/><span class=\"co1\">'Paramater lookups<br/></span><span class=\"kw4\">Set</span> objParamLookup = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Scripting.Dictionary\"</span>)<br/><span class=\"kw3\">With</span> objParamLookup<br/>\t.Add <span class=\"st0\">\"FAVOURITEFRUIT\"</span>, <span class=\"st0\">\"banana\"</span><br/>\t.Add <span class=\"st0\">\"NEEDSPEELING\"</span>, <span class=\"st0\">\"\"</span><br/>\t.Add <span class=\"st0\">\"SEEDSREMOVED\"</span>, <span class=\"st0\">\"\"</span><br/>\t.Add <span class=\"st0\">\"NUMBEROFBANANAS\"</span>, <span class=\"st0\">\"1024\"</span><br/>\t.Add <span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span>, <span class=\"st0\">\"62000\"</span><br/><span class=\"kw3\">End</span> <span class=\"kw3\">With</span> <br/>\u00a0<br/><span class=\"co1\">'Open the config file for reading.<br/></span><span class=\"kw4\">Set</span> objInFile = objFSO.OpenTextFile(objFSO.GetParentFolderName(WScript.ScriptFullName) &amp;_<br/>\t<span class=\"st0\">\"\\IN_config.txt\"</span>,1)<br/><span class=\"co1\">'Initialize output.<br/></span><span class=\"kw4\">Output</span> = <span class=\"st0\">\"\"</span>\t<br/>Isnumberofstrawberries = <span class=\"kw5\">False</span><br/><span class=\"kw3\">With</span> objInFile<br/>\t<span class=\"kw3\">Do</span> <span class=\"kw3\">Until</span> .AtEndOfStream<br/>\t\t<span class=\"kw4\">line</span> = .ReadLine<br/>\t\t<span class=\"kw3\">If</span> Left(<span class=\"kw4\">line</span>,1) = <span class=\"st0\">\"#\"</span> <span class=\"kw3\">Or</span> <span class=\"kw4\">line</span> = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"kw4\">line</span> &amp; vbCrLf<br/>\t\t<span class=\"kw3\">ElseIf</span> Left(<span class=\"kw4\">line</span>,1) = <span class=\"st0\">\" \"</span> <span class=\"kw3\">And</span> InStr(<span class=\"kw4\">line</span>,<span class=\"st0\">\"#\"</span>) <span class=\"kw3\">Then</span><br/>\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; Mid(<span class=\"kw4\">line</span>,InStr(1,<span class=\"kw4\">line</span>,<span class=\"st0\">\"#\"</span>),1000) &amp; vbCrLf<br/>\t\t<span class=\"kw3\">ElseIf</span> Replace(Replace(<span class=\"kw4\">line</span>,<span class=\"st0\">\";\"</span>,<span class=\"st0\">\"\"</span>),<span class=\"st0\">\" \"</span>,<span class=\"st0\">\"\"</span>) &lt;&gt; <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>\t\t\t<span class=\"kw3\">If</span> InStr(1,<span class=\"kw4\">line</span>,<span class=\"st0\">\"FAVOURITEFRUIT\"</span>,1) <span class=\"kw3\">Then</span><br/>\t\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"st0\">\"FAVOURITEFRUIT\"</span> &amp; <span class=\"st0\">\" \"</span> &amp; objParamLookup.Item(<span class=\"st0\">\"FAVOURITEFRUIT\"</span>) &amp; vbCrLf<br/>\t\t\t<span class=\"kw3\">ElseIf</span> InStr(1,<span class=\"kw4\">line</span>,<span class=\"st0\">\"NEEDSPEELING\"</span>,1) <span class=\"kw3\">Then</span><br/>\t\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"st0\">\"; \"</span> &amp; <span class=\"st0\">\"NEEDSPEELING\"</span> &amp; vbCrLf<br/>\t\t\t<span class=\"kw3\">ElseIf</span> InStr(1,<span class=\"kw4\">line</span>,<span class=\"st0\">\"SEEDSREMOVED\"</span>,1) <span class=\"kw3\">Then</span><br/>\t\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"st0\">\"SEEDSREMOVED\"</span> &amp; vbCrLf<br/>\t\t\t<span class=\"kw3\">ElseIf</span> InStr(1,<span class=\"kw4\">line</span>,<span class=\"st0\">\"NUMBEROFBANANAS\"</span>,1) <span class=\"kw3\">Then</span><br/>\t\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"st0\">\"NUMBEROFBANANAS\"</span> &amp; <span class=\"st0\">\" \"</span> &amp; objParamLookup.Item(<span class=\"st0\">\"NUMBEROFBANANAS\"</span>) &amp; vbCrLf<br/>\t\t\t<span class=\"kw3\">ElseIf</span> InStr(1,<span class=\"kw4\">line</span>,<span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span>,1) <span class=\"kw3\">Then</span><br/>\t\t\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span> &amp; <span class=\"st0\">\" \"</span> &amp; objParamLookup.Item(<span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span>) &amp; vbCrLf<br/>\t\t\t\tIsnumberofstrawberries = <span class=\"kw5\">True</span><br/>\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t<span class=\"kw3\">Loop</span><br/>\t<span class=\"kw3\">If</span> Isnumberofstrawberries = <span class=\"kw5\">False</span> <span class=\"kw3\">Then</span><br/>\t\t<span class=\"kw4\">Output</span> = <span class=\"kw4\">Output</span> &amp; <span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span> &amp; <span class=\"st0\">\" \"</span> &amp; objParamLookup.Item(<span class=\"st0\">\"NUMBEROFSTRAWBERRIES\"</span>) &amp; vbCrLf<br/>\t\tIsnumberofstrawberries = <span class=\"kw5\">True</span><br/>\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t.<span class=\"kw3\">Close</span><br/><span class=\"kw3\">End</span> <span class=\"kw3\">With</span><br/>\u00a0<br/><span class=\"co1\">'Create a new config file.<br/></span><span class=\"kw4\">Set</span> objOutFile = objFSO.OpenTextFile(objFSO.GetParentFolderName(WScript.ScriptFullName) &amp;_<br/>\t<span class=\"st0\">\"\\OUT_config.txt\"</span>,2,<span class=\"kw5\">True</span>)<br/><span class=\"kw3\">With</span> objOutFile<br/>\t.Write <span class=\"kw4\">Output</span><br/>\t.<span class=\"kw3\">Close</span><br/><span class=\"kw3\">End</span> <span class=\"kw3\">With</span><br/>\u00a0<br/><span class=\"kw4\">Set</span> objFSO = <span class=\"kw5\">Nothing</span><br/><span class=\"kw4\">Set</span> objParamLookup = <span class=\"kw5\">Nothing</span><br/>\u00a0</pre>"}]}