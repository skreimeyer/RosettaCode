{"task": "Kernighans_large_earthquake_problem", "blocks": [{"lang": "ALGOL 68", "loc": 71, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw2\">IF</span>  <span class=\"kw6\">FILE</span> input file<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">STRING</span> file name <span class=\"sy1\">=</span> <span class=\"st0\">\"data.txt\"</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">open</span><span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw21\">stand in channel</span> <span class=\"br0\">)</span> <span class=\"sy1\">/=</span> 0<br/><span class=\"kw2\">THEN</span><br/>    <span class=\"coMULTI\"># failed to open the file #</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Unable to open \"</span><span class=\"st0\">\"\"</span> <span class=\"sy1\">+</span> file name <span class=\"sy1\">+</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">ELSE</span><br/>    <span class=\"coMULTI\"># file opened OK #</span><br/>    <span class=\"kw3\">BOOL</span> at eof <span class=\"sy1\">:=</span> <span class=\"kw7\">FALSE</span><span class=\"sy1\">;</span><br/>    <span class=\"coMULTI\"># set the EOF handler for the file #</span><br/>    <span class=\"kw22\">on logical file end</span><span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"kw4\">REF</span> <span class=\"kw6\">FILE</span> f <span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>                                     <span class=\"kw2\">BEGIN</span><br/>                                         <span class=\"coMULTI\"># note that we reached EOF on the latest read #</span><br/>                                         at eof <span class=\"sy1\">:=</span> <span class=\"kw7\">TRUE</span><span class=\"sy1\">;</span><br/>                                         <span class=\"coMULTI\"># return TRUE so processing can continue #</span><br/>                                         <span class=\"kw7\">TRUE</span><br/>                                     <span class=\"kw2\">END</span><br/>                       <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"coMULTI\"># return the real value of the specified field on the line #</span><br/>    <span class=\"kw4\">PROC</span> <span class=\"kw26\">real</span> field <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> line<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span> field <span class=\"br0\">)</span><span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/>         <span class=\"kw2\">BEGIN</span><br/>            <span class=\"kw3\">REAL</span> result  <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>            <span class=\"kw3\">INT</span>  c pos   <span class=\"sy1\">:=</span> <span class=\"kw8\">LWB</span> line<span class=\"sy1\">;</span><br/>            <span class=\"kw3\">INT</span>  max pos <span class=\"sy1\">:=</span> <span class=\"kw8\">UPB</span> line<span class=\"sy1\">;</span><br/>            <span class=\"kw3\">STRING</span> f     <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/>            <span class=\"kw2\">FOR</span> f ield number <span class=\"kw2\">TO</span> field <span class=\"kw2\">WHILE</span> c pos <span class=\"sy1\">&lt;=</span> max pos <span class=\"kw2\">DO</span><br/>                <span class=\"coMULTI\"># skip leading spaces #</span><br/>                <span class=\"kw2\">WHILE</span> <span class=\"kw2\">IF</span> c pos <span class=\"sy1\">&gt;</span> max pos <span class=\"kw2\">THEN</span> <span class=\"kw7\">FALSE</span> <span class=\"kw2\">ELSE</span> line<span class=\"br0\">[</span> c pos <span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span> <span class=\"kw2\">FI</span> <span class=\"kw2\">DO</span><br/>                    c pos <span class=\"sy1\">+:=</span> 1<br/>                <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>                <span class=\"kw2\">IF</span> c pos <span class=\"sy1\">&lt;=</span> max pos <span class=\"kw2\">THEN</span><br/>                    <span class=\"coMULTI\"># have a field #</span><br/>                    <span class=\"kw3\">INT</span> start pos <span class=\"sy1\">=</span> c pos<span class=\"sy1\">;</span><br/>                    <span class=\"kw2\">WHILE</span> <span class=\"kw2\">IF</span> c pos <span class=\"sy1\">&gt;</span> max pos <span class=\"kw2\">THEN</span> <span class=\"kw7\">FALSE</span> <span class=\"kw2\">ELSE</span> line<span class=\"br0\">[</span> c pos <span class=\"br0\">]</span> <span class=\"sy1\">/=</span> <span class=\"st0\">\" \"</span> <span class=\"kw2\">FI</span> <span class=\"kw2\">DO</span><br/>                        c pos <span class=\"sy1\">+:=</span> 1<br/>                    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>                    <span class=\"kw2\">IF</span> field number <span class=\"sy1\">=</span> field <span class=\"kw2\">THEN</span><br/>                        <span class=\"coMULTI\"># have the required field #</span><br/>                        f <span class=\"sy1\">:=</span> line<span class=\"br0\">[</span> start pos <span class=\"sy1\">:</span> c pos <span class=\"sy1\">-</span> 1 <span class=\"br0\">]</span><br/>                    <span class=\"kw2\">FI</span><br/>                <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            <span class=\"kw2\">IF</span> f <span class=\"sy1\">/=</span> <span class=\"st0\">\"\"</span> <span class=\"kw2\">THEN</span><br/>                <span class=\"coMULTI\"># have the field - assume it a real value and convert it #</span><br/>                <span class=\"kw6\">FILE</span> <span class=\"kw26\">real</span> value<span class=\"sy1\">;</span><br/>                <span class=\"kw22\">associate</span><span class=\"br0\">(</span> <span class=\"kw26\">real</span> value<span class=\"sy1\">,</span> f <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"kw22\">on value error</span><span class=\"br0\">(</span> <span class=\"kw26\">real</span> value<br/>                              <span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"kw4\">REF</span> <span class=\"kw6\">FILE</span> f <span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>                                     <span class=\"kw2\">BEGIN</span><br/>                                         <span class=\"coMULTI\"># \"handle\" invalid data #</span><br/>                                         result <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>                                         <span class=\"coMULTI\"># return TRUE so processing can continue #</span><br/>                                         <span class=\"kw7\">TRUE</span><br/>                                     <span class=\"kw2\">END</span><br/>                              <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                get<span class=\"br0\">(</span> <span class=\"kw26\">real</span> value<span class=\"sy1\">,</span> <span class=\"br0\">(</span> result <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>            <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>            result<br/>         <span class=\"kw2\">END</span> <span class=\"coMULTI\"># real field #</span> <span class=\"sy1\">;</span><br/>    <span class=\"coMULTI\"># show the lines where the third field is &gt; 6 #</span><br/>    <span class=\"kw2\">WHILE</span> <span class=\"kw8\">NOT</span> at eof<br/>    <span class=\"kw2\">DO</span><br/>        <span class=\"kw3\">STRING</span> line<span class=\"sy1\">;</span><br/>        get<span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span> <span class=\"kw26\">real</span> field<span class=\"br0\">(</span> line<span class=\"sy1\">,</span> 3 <span class=\"br0\">)</span> <span class=\"sy1\">&gt;</span> 6 <span class=\"kw2\">THEN</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">FI</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"coMULTI\"># close the file #</span><br/>    <span class=\"kw22\">close</span><span class=\"br0\">(</span> input file <span class=\"br0\">)</span><br/><span class=\"kw2\">FI</span></pre>"}, {"lang": "AWK", "loc": 1, "block": "<pre class=\"awk highlighted_source\"> awk '<span class=\"re0\">$3</span> <span class=\"sy2\">&gt;</span> <span class=\"nu0\">6</span>' data.txt</pre>"}, {"lang": "C++", "loc": 44, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co1\">// Randizo was here!</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;fstream&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    ifstream file<span class=\"br0\">(</span><span class=\"st0\">\"../include/earthquake.txt\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> count_quake <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> column <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>    string value<span class=\"sy4\">;</span><br/>    <span class=\"kw4\">double</span> size_quake<span class=\"sy4\">;</span><br/>    string row <span class=\"sy1\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span>file <span class=\"sy1\">&gt;&gt;</span> value<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>column <span class=\"sy1\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            size_quake <span class=\"sy1\">=</span> stod<span class=\"br0\">(</span>value<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>size_quake<span class=\"sy1\">&gt;</span><span class=\"nu16\">6.0</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                count_quake<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>                row <span class=\"sy2\">+</span><span class=\"sy1\">=</span> value <span class=\"sy2\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span>\"</span><span class=\"sy4\">;</span><br/>                <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> row <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            column <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span><br/>            row <span class=\"sy1\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span><br/>        <span class=\"br0\">{</span><br/>            column<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>            row<span class=\"sy2\">+</span><span class=\"sy1\">=</span>value <span class=\"sy2\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span>\"</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>Number of quakes greater than 6 is \"</span> <span class=\"sy1\">&lt;&lt;</span> count_quake <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C", "loc": 28, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    FILE <span class=\"sy0\">*</span>fp<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>line <span class=\"sy0\">=</span> NULL<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">size_t</span> len <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    ssize_t read<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>lw<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>lt<span class=\"sy0\">;</span><br/>    fp <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html\"><span class=\"kw3\">fopen</span></a><span class=\"br0\">(</span><span class=\"st0\">\"data.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fp <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Unable to open file<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exit.html\"><span class=\"kw3\">exit</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Those earthquakes with a magnitude &gt; 6.0 are:<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>read <span class=\"sy0\">=</span> getline<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>line<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>len<span class=\"sy0\">,</span> fp<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> EOF<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>read <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span>   <span class=\"coMULTI\">/* ignore blank lines */</span><br/>        lw <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strrchr.html\"><span class=\"kw3\">strrchr</span></a><span class=\"br0\">(</span>line<span class=\"sy0\">,</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"coMULTI\">/* look for last space */</span><br/>        lt <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strrchr.html\"><span class=\"kw3\">strrchr</span></a><span class=\"br0\">(</span>line<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es1\">\\t</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* look for last tab */</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>lw <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>lt<span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* ignore lines with no whitespace */</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>lt <span class=\"sy0\">&gt;</span> lw<span class=\"br0\">)</span> lw <span class=\"sy0\">=</span> lt<span class=\"sy0\">;</span>     <span class=\"coMULTI\">/* lw points to last space or tab */</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atof.html\"><span class=\"kw3\">atof</span></a><span class=\"br0\">(</span>lw <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu16\">6.0</span><span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span> line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>line<span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Cixl", "loc": 9, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>use: cx;<br/>\u00a0<br/>'data.txt' `r fopen lines {<br/>  let: (time place mag) @@s split ..;<br/>  let: (m1 m2) $mag @. split &amp;int map ..;<br/>  $m1 6 &gt;= $m2 0 &gt; and {[$time @@s $place @@s $mag] say} if<br/>} for<br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 4, "block": "<pre class=\"text highlighted_source\">USING: io math math.parser prettyprint sequences splitting\u00a0;<br/>IN: rosetta-code.kernighan<br/>\u00a0<br/>lines [ \"\\s\" split last string&gt;number 6 &gt; ] filter .</pre>"}, {"lang": "Go", "loc": 32, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"bufio\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"os\"</span><br/>    <span class=\"st0\">\"strconv\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    f<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Open<span class=\"sy1\">(</span><span class=\"st0\">\"data.txt\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Unable to open the file\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">defer</span> f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Those earthquakes with a magnitude &gt; 6.0 are:<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">)</span><br/>    input <span class=\"sy2\">:=</span> bufio<span class=\"sy3\">.</span>NewScanner<span class=\"sy1\">(</span>f<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> input<span class=\"sy3\">.</span>Scan<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        line <span class=\"sy2\">:=</span> input<span class=\"sy3\">.</span>Text<span class=\"sy1\">()</span><br/>        fields <span class=\"sy2\">:=</span> strings<span class=\"sy3\">.</span>Fields<span class=\"sy1\">(</span>line<span class=\"sy1\">)</span><br/>        mag<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> strconv<span class=\"sy3\">.</span>ParseFloat<span class=\"sy1\">(</span>fields<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">],</span> <span class=\"nu0\">64</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Unable to parse magnitude of an earthquake\"</span><span class=\"sy1\">)</span><br/>            <span class=\"kw1\">return</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> mag &gt; <span class=\"nu0\">6</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>line<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Kotlin", "loc": 11, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// Version 1.2.40</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> Regex<span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"st0\">\"<span class=\"es0\">\\s</span>+\"</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Those earthquakes with a magnitude &gt; 6.0 are:<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    File<span class=\"br0\">(</span><span class=\"st0\">\"data.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">forEachLine</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>it.<span class=\"me1\">split</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">6.0</span><span class=\"br0\">)</span> println<span class=\"br0\">(</span>it<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span>    <br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 5, "block": "<pre class=\"lua highlighted_source\"><span class=\"co1\">-- arg[1] is the first argument provided at the command line</span><br/><span class=\"kw1\">for</span> line <span class=\"kw2\">in</span> <span class=\"kw3\">io.lines</span><span class=\"br0\">(</span>arg<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw2\">or</span> <span class=\"st0\">\"data.txt\"</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span>  <span class=\"co1\">-- use data.txt if arg[1] is nil</span><br/>  magnitude <span class=\"sy0\">=</span> line<span class=\"sy0\">:</span>match<span class=\"br0\">(</span><span class=\"st0\">\"%S+$\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw3\">tonumber</span><span class=\"br0\">(</span>magnitude<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">6</span> <span class=\"kw1\">then</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Perl", "loc": 1, "block": "<pre class=\"perl highlighted_source\">perl <span class=\"sy0\">-</span>n <span class=\"sy0\">-</span>e <span class=\"st_h\">'/(\\S+)\\s*$/ and $1 &gt; 6 and print'</span> data<span class=\"sy0\">.</span>txt</pre>"}, {"lang": "Perl 6", "loc": 7, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"re0\">$_</span> <span class=\"sy0\">=</span> <span class=\"re0\">@*ARGS</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">??</span> <span class=\"re0\">@*ARGS</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">IO</span> <span class=\"sy0\">!!</span> q<span class=\"sy0\">:</span>to<span class=\"sy0\">/</span><span class=\"kw2\">END</span><span class=\"sy0\">/;</span><br/>    <span class=\"nu0\">8</span><span class=\"sy0\">/</span><span class=\"nu0\">27</span><span class=\"sy0\">/</span><span class=\"nu0\">1883</span>    Krakatoa            <span class=\"nu0\">8.8</span><br/>    <span class=\"nu0\">5</span><span class=\"sy0\">/</span><span class=\"nu0\">18</span><span class=\"sy0\">/</span><span class=\"nu0\">1980</span>    MountStHelens       <span class=\"nu0\">7.6</span><br/>    <span class=\"nu0\">3</span><span class=\"sy0\">/</span><span class=\"nu0\">13</span><span class=\"sy0\">/</span><span class=\"nu0\">2009</span>    CostaRica           <span class=\"nu0\">5.1</span><br/>    <span class=\"kw2\">END</span><br/>\u00a0<br/><span class=\"kw3\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"kw3\">say</span> <span class=\"kw1\">if</span> <span class=\"sy0\">.</span><span class=\"kw3\">words</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">6</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"me1\">lines</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Python", "loc": 5, "block": "<pre class=\"python highlighted_source\">python -c <span class=\"st0\">'<br/>with open(\"data.txt\") as f:<br/>    for ln in f:<br/>        if float(ln.strip().split()[2]) &gt; 6:<br/>            print(ln.strip())'</span></pre>"}, {"lang": "REXX", "loc": 15, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program to read a file containing a list of earthquakes:   date, site, magnitude.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> iFID mMag <span class=\"sy0\">.</span>                            <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> iFID==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> iFID==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> iFID= <span class=\"st0\">'earthquakes.dat'</span> <span class=\"coMULTI\">/*Not specified?  Then use default*/</span><br/><span class=\"kw1\">if</span> mMag==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> mMag==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> mMag= <span class=\"nu0\">6</span>                 <span class=\"coMULTI\">/* \"      \"         \"   \"     \"   */</span><br/>#=<span class=\"nu0\">0</span>                                              <span class=\"coMULTI\">/*# of earthquakes that meet criteria. */</span><br/>   <span class=\"kw1\">do</span> j=<span class=\"nu0\">0</span>  <span class=\"kw2\">while</span> <span class=\"kw6\">lines</span><span class=\"br0\">(</span>iFID<span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"nu0\">0</span>                 <span class=\"coMULTI\">/*read all lines in the input file.    */</span><br/>   <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"kw2\">linein</span><span class=\"br0\">(</span>iFID<span class=\"br0\">)</span> <span class=\"kw2\">with</span> <span class=\"kw6\">date</span> site mag <span class=\"sy0\">.</span> <span class=\"coMULTI\">/*parse three words from an input line.*/</span><br/>   <span class=\"kw1\">if</span> mag<span class=\"sy0\">&lt;</span>=mMag  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>                    <span class=\"coMULTI\">/*Is the quake too small?  Then skip it*/</span><br/>   #= # + <span class=\"nu0\">1</span>                                      <span class=\"coMULTI\">/*bump the number of qualifying quakes.*/</span><br/>   <span class=\"kw1\">if</span> #==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">'date'</span>, <span class=\"nu0\">20</span>, <span class=\"st0\">\"\u2550\"</span><span class=\"br0\">)</span>     <span class=\"st0\">'=magnitude='</span>     <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">\"site\"</span>, <span class=\"nu0\">20</span>, <span class=\"st0\">'\u2550'</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">say</span> <span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"kw6\">date</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span>      <span class=\"kw6\">center</span><span class=\"br0\">(</span>mag<span class=\"sy0\">/</span><span class=\"nu0\">1</span>, <span class=\"nu0\">11</span><span class=\"br0\">)</span>        <span class=\"st0\">'  '</span>        site<br/>   <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                                   <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">if</span> j==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> er <span class=\"st0\">'file    '</span>          iFID           <span class=\"st0\">\"   is empty or not found.\"</span><br/>         <span class=\"kw3\">else</span> <span class=\"kw1\">say</span> #  <span class=\"st0\">' earthquakes listed.'</span></pre>"}, {"lang": "Ring", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project \u00a0: Kernighans large earthquake problem<br/>\u00a0<br/>load \"stdlib.ring\"<br/>nr = 0 <br/>equake = list(3)<br/>fn = \"equake.txt\"<br/>fp = fopen(fn,\"r\")<br/>\u00a0<br/>while not feof(fp)<br/>         nr = nr + 1 <br/>         equake[nr] = readline(fp)<br/>end <br/>fclose(fp)<br/>for n = 1 to len(equake)<br/>     for m = 1 to len(equake[n])<br/>          if equake[n][m] = \" \"<br/>             sp = m<br/>          ok<br/>     next<br/>     sptemp = right(equake[n],len(equake[n])-sp)<br/>     sptemo = number(sptemp)<br/>     if sptemp &gt; 6<br/>        see equake[n] + nl<br/>     ok<br/>next<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 1, "block": "<pre>ruby -nae \"$F[2].to_f &gt; 6 &amp;&amp; print\" data.txt\n</pre>"}, {"lang": "Scala", "loc": 15, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Equakes <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> HeavyMag <span class=\"sy0\">=</span> <span class=\"nu0\">6.0</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> regex <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"^.*?((?:[0-9]{1,4}[.<span class=\"es0\">\\-</span><span class=\"es0\">\\/</span>]){2}[0-9]{2,4})(?:<span class=\"es0\">\\s</span>*)([<span class=\"es0\">\\s</span>a-zA-Z]+)((?:0|(?:[1-9][0-9]*))(?:<span class=\"es0\">\\.</span>[0-9]+))?.*?$\"</span><span class=\"st0\">\"\"</span>.<span class=\"me1\">r</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> heavyOnes<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>String<span class=\"br0\">]</span> <span class=\"sy0\">=</span> io.<span class=\"me1\">Source</span>.<span class=\"me1\">fromFile</span><span class=\"br0\">(</span><span class=\"st0\">\"equake.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">getLines</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> s<span class=\"sy0\">@</span>regex<span class=\"br0\">(</span><span class=\"sy0\">_</span>, <span class=\"sy0\">_</span>, mag<span class=\"br0\">)</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> mag.<span class=\"me1\">toDouble</span> <span class=\"sy0\">&gt;</span> HeavyMag <span class=\"sy0\">=&gt;</span> s<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"br0\">}</span>.<span class=\"me1\">filter</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">nonEmpty</span><span class=\"br0\">)</span>.<span class=\"me1\">toSeq</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span>s<span class=\"st0\">\"Events with a magnitude greater than $HeavyMag are:<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>  heavyOnes.<span class=\"me1\">foreach</span><span class=\"br0\">(</span>println<span class=\"br0\">(</span><span class=\"sy0\">_</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  println<span class=\"br0\">(</span>s<span class=\"st0\">\"End of list of ${heavyOnes.length} events.\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Tcl", "loc": 17, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">catch</span> <span class=\"br0\">{</span>console show<span class=\"br0\">}</span> \t\t\t<span class=\"sy0\">;</span><span class=\"co1\">## show console when running from tclwish</span><br/><span class=\"kw1\">catch</span> <span class=\"br0\">{</span>wm withdraw .<span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">set</span> <span class=\"kw3\">filename</span> <span class=\"st0\">\"data.txt\"</span><br/><span class=\"kw1\">set</span> fh <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$filename</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> NR <span class=\"nu0\">0</span> \t\t\t\t<span class=\"sy0\">;</span><span class=\"co1\"># number-of-record, means linenumber</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">gets</span> <span class=\"re0\">$fh</span> line<span class=\"br0\">]</span><span class=\"sy0\">&gt;</span>=<span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> \t\t<span class=\"sy0\">;</span><span class=\"co1\"># gets returns length of line, -1 means eof</span><br/>    <span class=\"kw2\">incr</span> NR<br/>    <span class=\"kw1\">set</span>  line2 <span class=\"br0\">[</span><span class=\"kw2\">regexp</span> -all -inline <span class=\"br0\">{</span>\\S+<span class=\"br0\">}</span> <span class=\"re0\">$line</span><span class=\"br0\">]</span>  <span class=\"sy0\">;</span><span class=\"co1\"># reduce multiple whitespace</span><br/>    <span class=\"kw1\">set</span>  fld   <span class=\"br0\">[</span><span class=\"kw2\">split</span> <span class=\"re0\">$line2</span><span class=\"br0\">]</span>  \t<span class=\"sy0\">;</span><span class=\"co1\"># split line into fields, at whitespace</span><br/>    <span class=\"kw1\">set</span>  f3    <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$fld</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> \t<span class=\"sy0\">;</span><span class=\"co1\"># zero-based</span><br/>   <span class=\"co1\">#set  NF    [llength $fld]   \t;# number-of-fields</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$f3</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">6</span><span class=\"br0\">}</span> <span class=\"br0\">{</span> <span class=\"kw2\">puts</span> <span class=\"st0\">\"$line\"</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw2\">close</span> <span class=\"re0\">$fh</span> </pre>"}, {"lang": "zkl", "loc": 3, "block": "<pre class=\"text highlighted_source\">fcn equake(data,out=Console){ <br/>   data.pump(out,fcn(line){ 6.0line.split()[-1] },Void.Filter)<br/>}</pre>"}]}