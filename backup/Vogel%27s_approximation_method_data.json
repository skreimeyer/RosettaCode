{"task": "Vogel%27s_approximation_method", "blocks": [{"lang": "C", "loc": 108, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;limits.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define TRUE 1</span><br/><span class=\"co2\">#define FALSE 0</span><br/><span class=\"co2\">#define N_ROWS 4</span><br/><span class=\"co2\">#define N_COLS 5</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">int</span> bool<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> supply<span class=\"br0\">[</span>N_ROWS<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">60</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">int</span> demand<span class=\"br0\">[</span>N_COLS<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">70</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">60</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> costs<span class=\"br0\">[</span>N_ROWS<span class=\"br0\">]</span><span class=\"br0\">[</span>N_COLS<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">{</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">{</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>bool row_done<span class=\"br0\">[</span>N_ROWS<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> FALSE <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>bool col_done<span class=\"br0\">[</span>N_COLS<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> FALSE <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> diff<span class=\"br0\">(</span><span class=\"kw4\">int</span> j<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> len<span class=\"sy0\">,</span> bool is_row<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> res<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> min1 <span class=\"sy0\">=</span> INT_MAX<span class=\"sy0\">,</span> min2 <span class=\"sy0\">=</span> min1<span class=\"sy0\">,</span> min_p <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>is_row<span class=\"br0\">)</span> <span class=\"sy0\">?</span> col_done<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:</span> row_done<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>        c <span class=\"sy0\">=</span> <span class=\"br0\">(</span>is_row<span class=\"br0\">)</span> <span class=\"sy0\">?</span> costs<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:</span> costs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> min1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            min2 <span class=\"sy0\">=</span> min1<span class=\"sy0\">;</span><br/>            min1 <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>            min_p <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> min2<span class=\"br0\">)</span> min2 <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> min2 <span class=\"sy0\">-</span> min1<span class=\"sy0\">;</span> res<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> min1<span class=\"sy0\">;</span> res<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> min_p<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> max_penalty<span class=\"br0\">(</span><span class=\"kw4\">int</span> len1<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> len2<span class=\"sy0\">,</span> bool is_row<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> res<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> pc <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> pm <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> mc <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> md <span class=\"sy0\">=</span> INT_MIN<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len1<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span>is_row<span class=\"br0\">)</span> <span class=\"sy0\">?</span> row_done<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:</span> col_done<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>        diff<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> len2<span class=\"sy0\">,</span> is_row<span class=\"sy0\">,</span> res2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>res2<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> md<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            md <span class=\"sy0\">=</span> res2<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>  <span class=\"coMULTI\">/* max diff */</span><br/>            pm <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span>        <span class=\"coMULTI\">/* pos of max diff */</span><br/>            mc <span class=\"sy0\">=</span> res2<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>  <span class=\"coMULTI\">/* min cost */</span><br/>            pc <span class=\"sy0\">=</span> res2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>  <span class=\"coMULTI\">/* pos of min cost */</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>is_row<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> pm<span class=\"sy0\">;</span> res<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> pc<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> pc<span class=\"sy0\">;</span> res<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> pm<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    res<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> mc<span class=\"sy0\">;</span> res<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> md<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> next_cell<span class=\"br0\">(</span><span class=\"kw4\">int</span> res<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> res1<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> res2<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    max_penalty<span class=\"br0\">(</span>N_ROWS<span class=\"sy0\">,</span> N_COLS<span class=\"sy0\">,</span> TRUE<span class=\"sy0\">,</span> res1<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    max_penalty<span class=\"br0\">(</span>N_COLS<span class=\"sy0\">,</span> N_COLS<span class=\"sy0\">,</span> FALSE<span class=\"sy0\">,</span> res2<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> res2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> res<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> res1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> res<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> res2<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> res<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> res2<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> res<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> res1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> r<span class=\"sy0\">,</span> c<span class=\"sy0\">,</span> q<span class=\"sy0\">,</span> supply_left <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> total_cost <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> cell<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> results<span class=\"br0\">[</span>N_ROWS<span class=\"br0\">]</span><span class=\"br0\">[</span>N_COLS<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N_ROWS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> supply_left <span class=\"sy0\">+=</span> supply<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>supply_left <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        next_cell<span class=\"br0\">(</span>cell<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        r <span class=\"sy0\">=</span> cell<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        c <span class=\"sy0\">=</span> cell<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        q <span class=\"sy0\">=</span> <span class=\"br0\">(</span>demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">:</span> supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> q<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"br0\">)</span> col_done<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">=</span> TRUE<span class=\"sy0\">;</span><br/>        supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> q<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">)</span> row_done<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> TRUE<span class=\"sy0\">;</span><br/>        results<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<span class=\"sy0\">;</span><br/>        supply_left <span class=\"sy0\">-=</span> q<span class=\"sy0\">;</span><br/>        total_cost <span class=\"sy0\">+=</span> q <span class=\"sy0\">*</span> costs<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"    A   B   C   D   E<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N_ROWS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%c\"</span><span class=\"sy0\">,</span> <span class=\"st0\">'W'</span> <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> N_COLS<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\" \u00a0%2d\"</span><span class=\"sy0\">,</span> results<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Total cost =\u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> total_cost<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 80, "block": "<pre class=\"d highlighted_source\"><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">enum</span> K <span class=\"br0\">{</span> A<span class=\"sy0\">,</span> B<span class=\"sy0\">,</span> C<span class=\"sy0\">,</span> D<span class=\"sy0\">,</span> E<span class=\"sy0\">,</span>  X<span class=\"sy0\">,</span> Y<span class=\"sy0\">,</span> Z<span class=\"sy0\">,</span> W <span class=\"br0\">}</span><br/>    <span class=\"kw4\">immutable</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>K<span class=\"br0\">]</span><span class=\"br0\">[</span>K<span class=\"br0\">]</span> costs <span class=\"sy0\">=</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">//**</span><br/>        <span class=\"br0\">[</span>K.<span class=\"me1\">W</span><span class=\"sy0\">:</span> <span class=\"br0\">[</span>K.<span class=\"me1\">A</span><span class=\"sy0\">:</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> K.<span class=\"me1\">B</span><span class=\"sy0\">:</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> K.<span class=\"me1\">C</span><span class=\"sy0\">:</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> K.<span class=\"me1\">D</span><span class=\"sy0\">:</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> K.<span class=\"me1\">E</span><span class=\"sy0\">:</span> <span class=\"nu0\">17</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>         K.<span class=\"me1\">X</span><span class=\"sy0\">:</span> <span class=\"br0\">[</span>K.<span class=\"me1\">A</span><span class=\"sy0\">:</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> K.<span class=\"me1\">B</span><span class=\"sy0\">:</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> K.<span class=\"me1\">C</span><span class=\"sy0\">:</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> K.<span class=\"me1\">D</span><span class=\"sy0\">:</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> K.<span class=\"me1\">E</span><span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>         K.<span class=\"me1\">Y</span><span class=\"sy0\">:</span> <span class=\"br0\">[</span>K.<span class=\"me1\">A</span><span class=\"sy0\">:</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> K.<span class=\"me1\">B</span><span class=\"sy0\">:</span> <span class=\"nu0\">19</span><span class=\"sy0\">,</span> K.<span class=\"me1\">C</span><span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> K.<span class=\"me1\">D</span><span class=\"sy0\">:</span> <span class=\"nu0\">23</span><span class=\"sy0\">,</span> K.<span class=\"me1\">E</span><span class=\"sy0\">:</span> <span class=\"nu0\">50</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>         K.<span class=\"me1\">Z</span><span class=\"sy0\">:</span> <span class=\"br0\">[</span>K.<span class=\"me1\">A</span><span class=\"sy0\">:</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> K.<span class=\"me1\">B</span><span class=\"sy0\">:</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> K.<span class=\"me1\">C</span><span class=\"sy0\">:</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> K.<span class=\"me1\">D</span><span class=\"sy0\">:</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> K.<span class=\"me1\">E</span><span class=\"sy0\">:</span> <span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span><span class=\"br0\">[</span>K<span class=\"br0\">]</span> demand<span class=\"sy0\">,</span> supply<span class=\"sy0\">;</span><br/>    <span class=\"kw2\">with</span> <span class=\"br0\">(</span>K<span class=\"br0\">)</span><br/>        demand <span class=\"sy0\">=</span> <span class=\"br0\">[</span>A<span class=\"sy0\">:</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> B<span class=\"sy0\">:</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> C<span class=\"sy0\">:</span> <span class=\"nu0\">70</span><span class=\"sy0\">,</span> D<span class=\"sy0\">:</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> E<span class=\"sy0\">:</span> <span class=\"nu0\">60</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>        supply <span class=\"sy0\">=</span> <span class=\"br0\">[</span>W<span class=\"sy0\">:</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> X<span class=\"sy0\">:</span> <span class=\"nu0\">60</span><span class=\"sy0\">,</span> Y<span class=\"sy0\">:</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> Z<span class=\"sy0\">:</span> <span class=\"nu0\">50</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> cols <span class=\"sy0\">=</span> demand.<span class=\"me1\">keys</span>.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">release</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> res <span class=\"sy0\">=</span> costs.<span class=\"me1\">byKey</span>.<span class=\"me1\">zip</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">[</span>K<span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">init</span>.<span class=\"me1\">repeat</span><span class=\"br0\">)</span>.<span class=\"me1\">assocArray</span><span class=\"sy0\">;</span><br/>    K<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span>K<span class=\"br0\">]</span> g<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x<span class=\"sy0\">;</span> supply.<span class=\"me1\">byKey</span><span class=\"br0\">)</span><br/>        g<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">keys</span>.<span class=\"me1\">schwartzSort</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>k <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"br0\">)</span>costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"co1\">//**</span><br/>               .<span class=\"me1\">release</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x<span class=\"sy0\">;</span> demand.<span class=\"me1\">byKey</span><span class=\"br0\">)</span><br/>        g<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> costs.<span class=\"me1\">keys</span>.<span class=\"me1\">schwartzSort</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>k<span class=\"sy0\">=&gt;</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"br0\">)</span>costs<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">release</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>g.<span class=\"me1\">length</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span><span class=\"br0\">[</span>K<span class=\"br0\">]</span> d<span class=\"sy0\">,</span> s<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x<span class=\"sy0\">;</span> demand.<span class=\"me1\">byKey</span><span class=\"br0\">)</span><br/>            d<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> g<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span><br/>                   costs<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">-</span> costs<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">:</span><br/>                   costs<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> x<span class=\"sy0\">;</span> supply.<span class=\"me1\">byKey</span><span class=\"br0\">)</span><br/>            s<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> g<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">?</span><br/>                   costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">:</span><br/>                   costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> d.<span class=\"me1\">keys</span>.<span class=\"me1\">minPos</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> d<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> d<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">auto</span> t <span class=\"sy0\">=</span> s.<span class=\"me1\">keys</span>.<span class=\"me1\">minPos</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> s<span class=\"br0\">[</span>a<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> s<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>d<span class=\"br0\">[</span>f<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> s<span class=\"br0\">[</span>t<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            t <span class=\"sy0\">=</span> f<span class=\"sy0\">;</span><br/>            f <span class=\"sy0\">=</span> g<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            f <span class=\"sy0\">=</span> t<span class=\"sy0\">;</span><br/>            t <span class=\"sy0\">=</span> g<span class=\"br0\">[</span>t<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw4\">immutable</span> v <span class=\"sy0\">=</span> min<span class=\"br0\">(</span>supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"sy0\">,</span> demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        res<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"sy0\">+=</span> v<span class=\"sy0\">;</span><br/>        demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> v<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> k<span class=\"sy0\">,</span> <span class=\"kw4\">immutable</span> n<span class=\"sy0\">;</span> supply<span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    g<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">=</span> g<span class=\"br0\">[</span>k<span class=\"br0\">]</span>.<span class=\"me1\">remove</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>c <span class=\"sy0\">=&gt;</span> c <span class=\"sy0\">==</span> t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">remove</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            demand.<span class=\"me1\">remove</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> v<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> k<span class=\"sy0\">,</span> <span class=\"kw4\">immutable</span> n<span class=\"sy0\">;</span> demand<span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    g<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">=</span> g<span class=\"br0\">[</span>k<span class=\"br0\">]</span>.<span class=\"me1\">remove</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>c <span class=\"sy0\">=&gt;</span> c <span class=\"sy0\">==</span> f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">remove</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            supply.<span class=\"me1\">remove</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"%-(<span class=\"es1\">\\t</span>%s%)\"</span><span class=\"sy0\">,</span> cols<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> cost <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> c<span class=\"sy0\">;</span> costs.<span class=\"me1\">keys</span>.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">release</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        write<span class=\"br0\">(</span>c<span class=\"sy0\">,</span> <span class=\"st0\">'<span class=\"es1\">\\t</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> n<span class=\"sy0\">;</span> cols<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw2\">in</span> res<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">immutable</span> y <span class=\"sy0\">=</span> res<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>y <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    y.<span class=\"me1\">write</span><span class=\"sy0\">;</span><br/>                    cost <span class=\"sy0\">+=</span> y <span class=\"sy0\">*</span> costs<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"st0\">'<span class=\"es1\">\\t</span>'</span>.<span class=\"me1\">write</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        writeln<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    writeln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Total Cost = \"</span><span class=\"sy0\">,</span> cost<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Go", "loc": 139, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> supply <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">50</span><span class=\"sy1\">,</span> <span class=\"nu0\">60</span><span class=\"sy1\">,</span> <span class=\"nu0\">50</span><span class=\"sy1\">,</span> <span class=\"nu0\">50</span><span class=\"sy1\">}</span><br/><span class=\"kw1\">var</span> demand <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">70</span><span class=\"sy1\">,</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"nu0\">60</span><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> costs <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([][]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> nRows <span class=\"sy2\">=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>supply<span class=\"sy1\">)</span><br/><span class=\"kw1\">var</span> nCols <span class=\"sy2\">=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>demand<span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> rowDone <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">bool</span><span class=\"sy1\">,</span> nRows<span class=\"sy1\">)</span><br/><span class=\"kw1\">var</span> colDone <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">bool</span><span class=\"sy1\">,</span> nCols<span class=\"sy1\">)</span><br/><span class=\"kw1\">var</span> results <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([][]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> nRows<span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> init<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    costs<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">13</span><span class=\"sy1\">,</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"nu0\">17</span><span class=\"sy1\">}</span><br/>    costs<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">14</span><span class=\"sy1\">,</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span> <span class=\"nu0\">13</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">15</span><span class=\"sy1\">}</span><br/>    costs<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"nu0\">50</span><span class=\"sy1\">}</span><br/>    costs<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">50</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">50</span><span class=\"sy1\">,</span> <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>results<span class=\"sy1\">);</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        results<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> nCols<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> nextCell<span class=\"sy1\">()</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>    res1 <span class=\"sy2\">:=</span> maxPenalty<span class=\"sy1\">(</span>nRows<span class=\"sy1\">,</span> nCols<span class=\"sy1\">,</span> <span class=\"kw2\">true</span><span class=\"sy1\">)</span><br/>    res2 <span class=\"sy2\">:=</span> maxPenalty<span class=\"sy1\">(</span>nCols<span class=\"sy1\">,</span> nRows<span class=\"sy1\">,</span> <span class=\"kw2\">false</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">switch</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">case</span> res1<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> res2<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]:</span><br/>        <span class=\"kw1\">if</span> res1<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> &lt; res2<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> res1<br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> res2<br/>        <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">case</span> res1<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]</span> &gt; res2<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]:</span><br/>        <span class=\"kw1\">return</span> res2<br/>    <span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>        <span class=\"kw1\">return</span> res1<br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> diff<span class=\"sy1\">(</span>j<span class=\"sy1\">,</span> l <span class=\"kw4\">int</span><span class=\"sy1\">,</span> isRow <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>    min1 <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>MaxInt32<br/>    min2 <span class=\"sy2\">:=</span> min1<br/>    minP <span class=\"sy2\">:=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; l<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">var</span> done <span class=\"kw4\">bool</span><br/>        <span class=\"kw1\">if</span> isRow <span class=\"sy1\">{</span><br/>            done <span class=\"sy2\">=</span> colDone<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            done <span class=\"sy2\">=</span> rowDone<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> done <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">continue</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">var</span> c <span class=\"kw4\">int</span><br/>        <span class=\"kw1\">if</span> isRow <span class=\"sy1\">{</span><br/>            c <span class=\"sy2\">=</span> costs<span class=\"sy1\">[</span>j<span class=\"sy1\">][</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            c <span class=\"sy2\">=</span> costs<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">][</span>j<span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> c &lt; min1 <span class=\"sy1\">{</span><br/>            min2<span class=\"sy1\">,</span> min1<span class=\"sy1\">,</span> minP <span class=\"sy2\">=</span> min1<span class=\"sy1\">,</span> c<span class=\"sy1\">,</span> <span class=\"nu2\">i</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> c &lt; min2 <span class=\"sy1\">{</span><br/>            min2 <span class=\"sy2\">=</span> c<br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span>min2 <span class=\"sy3\">-</span> min1<span class=\"sy1\">,</span> min1<span class=\"sy1\">,</span> minP<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> maxPenalty<span class=\"sy1\">(</span>len1<span class=\"sy1\">,</span> len2 <span class=\"kw4\">int</span><span class=\"sy1\">,</span> isRow <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>    md <span class=\"sy2\">:=</span> math<span class=\"sy3\">.</span>MinInt32<br/>    pc<span class=\"sy1\">,</span> pm<span class=\"sy1\">,</span> mc <span class=\"sy2\">:=</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; len1<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">var</span> done <span class=\"kw4\">bool</span><br/>        <span class=\"kw1\">if</span> isRow <span class=\"sy1\">{</span><br/>            done <span class=\"sy2\">=</span> rowDone<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            done <span class=\"sy2\">=</span> colDone<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">if</span> done <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">continue</span><br/>        <span class=\"sy1\">}</span><br/>        res <span class=\"sy2\">:=</span> diff<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> len2<span class=\"sy1\">,</span> isRow<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> res<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> &gt; md <span class=\"sy1\">{</span><br/>            md <span class=\"sy2\">=</span> res<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span>  <span class=\"co1\">// max diff</span><br/>            pm <span class=\"sy2\">=</span> i       <span class=\"co1\">// pos of max diff</span><br/>            mc <span class=\"sy2\">=</span> res<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span>  <span class=\"co1\">// min cost</span><br/>            pc <span class=\"sy2\">=</span> res<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span>  <span class=\"co1\">// pos of min cost</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> isRow <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span>pm<span class=\"sy1\">,</span> pc<span class=\"sy1\">,</span> mc<span class=\"sy1\">,</span> md<span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span>pc<span class=\"sy1\">,</span> pm<span class=\"sy1\">,</span> mc<span class=\"sy1\">,</span> md<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    supplyLeft <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; <span class=\"kw3\">len</span><span class=\"sy1\">(</span>supply<span class=\"sy1\">);</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        supplyLeft <span class=\"sy2\">+=</span> supply<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><br/>    <span class=\"sy1\">}</span><br/>    totalCost <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> supplyLeft &gt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        cell <span class=\"sy2\">:=</span> nextCell<span class=\"sy1\">()</span><br/>        r<span class=\"sy1\">,</span> c <span class=\"sy2\">:=</span> cell<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">],</span> cell<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><br/>        q <span class=\"sy2\">:=</span> demand<span class=\"sy1\">[</span>c<span class=\"sy1\">]</span><br/>        <span class=\"kw1\">if</span> q &gt; supply<span class=\"sy1\">[</span>r<span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>            q <span class=\"sy2\">=</span> supply<span class=\"sy1\">[</span>r<span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        demand<span class=\"sy1\">[</span>c<span class=\"sy1\">]</span> <span class=\"sy2\">-=</span> q<br/>        <span class=\"kw1\">if</span> demand<span class=\"sy1\">[</span>c<span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            colDone<span class=\"sy1\">[</span>c<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw2\">true</span><br/>        <span class=\"sy1\">}</span><br/>        supply<span class=\"sy1\">[</span>r<span class=\"sy1\">]</span> <span class=\"sy2\">-=</span> q<br/>        <span class=\"kw1\">if</span> supply<span class=\"sy1\">[</span>r<span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            rowDone<span class=\"sy1\">[</span>r<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"kw2\">true</span><br/>        <span class=\"sy1\">}</span><br/>        results<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span>c<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> q<br/>        supplyLeft <span class=\"sy2\">-=</span> q<br/>        totalCost <span class=\"sy2\">+=</span> q <span class=\"sy3\">*</span> costs<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span>c<span class=\"sy1\">]</span><br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"    A   B   C   D   E\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> result <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> results <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%c\"</span><span class=\"sy1\">,</span> <span class=\"st0\">'W'</span> <span class=\"sy3\">+</span> <span class=\"nu2\">i</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> item <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> result <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\" \u00a0%2d\"</span><span class=\"sy1\">,</span> item<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">()</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Total cost =\"</span><span class=\"sy1\">,</span> totalCost<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "J", "loc": 28, "block": "<pre class=\"j highlighted_source\">vam=:<span class=\"nu0\">1</span>\u00a0:<span class=\"nu0\">0</span><br/>:<br/>  exceeding=. <span class=\"nu0\">0</span> &lt;. -&amp;<span class=\"sy0\">(</span>+/<span class=\"sy0\">)</span><br/>  D=. <span class=\"kw2\">x</span>,<span class=\"kw2\">y</span> exceeding <span class=\"kw2\">x</span> <span class=\"co1\">NB. x: demands</span><br/>  S=. <span class=\"kw2\">y</span>,<span class=\"kw2\">x</span> exceeding <span class=\"kw2\">y</span> <span class=\"co1\">NB. y: sources</span><br/>  C=. <span class=\"sy0\">(</span><span class=\"kw2\">m</span>,.<span class=\"nu0\">0</span><span class=\"sy0\">)</span>,<span class=\"nu0\">0</span>        <span class=\"co1\">NB. m: costs</span><br/>  B=. <span class=\"nu0\">1</span>+&gt;./,C         <span class=\"co1\">NB. bigger than biggest cost</span><br/>  mincost=. &lt;./@-.&amp;<span class=\"nu0\">0</span>  <span class=\"co1\">NB. smallest non-zero cost</span><br/>  penalty=. |@<span class=\"sy0\">(</span>B * <span class=\"nu0\">2</span> -/@{. /:~ -. 0:<span class=\"sy0\">)</span>\"<span class=\"nu0\">1</span> - mincost\"<span class=\"nu0\">1</span><br/>  R=. C*<span class=\"nu0\">0</span><br/>  <span class=\"kw1\">while.</span> <span class=\"nu0\">0</span> &lt; +/D,S <span class=\"kw1\">do.</span><br/>    pS=. penalty C<br/>    pD=. penalty |:C<br/>    <span class=\"kw1\">if.</span> pS &gt;&amp;<span class=\"sy0\">(</span>&gt;./<span class=\"sy0\">)</span> pD <span class=\"kw1\">do.</span><br/>      row=. <span class=\"sy0\">(</span>i. &gt;./<span class=\"sy0\">)</span> pS<br/>      col=. <span class=\"sy0\">(</span>i. mincost<span class=\"sy0\">)</span> row { C<br/>    <span class=\"kw1\">else.</span><br/>      col=. <span class=\"sy0\">(</span>i. &gt;./<span class=\"sy0\">)</span> pD<br/>      row=. <span class=\"sy0\">(</span>i. mincost<span class=\"sy0\">)</span> col {\"<span class=\"nu0\">1</span> C<br/>    <span class=\"kw1\">end.</span><br/>    <span class=\"kw2\">n</span>=. <span class=\"sy0\">(</span>row{S<span class=\"sy0\">)</span> &lt;. col{D<br/>    S=. <span class=\"sy0\">(</span><span class=\"kw2\">n</span>-~row{S<span class=\"sy0\">)</span> row} S<br/>    D=. <span class=\"sy0\">(</span><span class=\"kw2\">n</span>-~col{D<span class=\"sy0\">)</span> col} D<br/>    C=. C * S *&amp;*/ D<br/>    R=. <span class=\"kw2\">n</span> <span class=\"sy0\">(</span>&lt;row,col<span class=\"sy0\">)</span>} R<br/>  <span class=\"kw1\">end.</span><br/>  <span class=\"nu0\">_1</span> <span class=\"nu0\">_1</span> }. R<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 97, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Arrays</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">static</span> java.<span class=\"me1\">util</span>.<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">stream</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.concurrent.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> VogelsApproximationMethod <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> demand <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">30</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">70</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">60</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> supply <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">50</span>, <span class=\"nu0\">60</span>, <span class=\"nu0\">50</span>, <span class=\"nu0\">50</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> costs <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">16</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">17</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">14</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>,<br/>    <span class=\"br0\">{</span><span class=\"nu0\">19</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">50</span><span class=\"br0\">}</span>, <span class=\"br0\">{</span><span class=\"nu0\">50</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">50</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">11</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> nRows <span class=\"sy0\">=</span> supply.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> nCols <span class=\"sy0\">=</span> demand.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span><span class=\"br0\">[</span><span class=\"br0\">]</span> rowDone <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">boolean</span><span class=\"br0\">[</span>nRows<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span><span class=\"br0\">[</span><span class=\"br0\">]</span> colDone <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">boolean</span><span class=\"br0\">[</span>nCols<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> result <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span>nRows<span class=\"br0\">]</span><span class=\"br0\">[</span>nCols<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> ExecutorService es <span class=\"sy0\">=</span> Executors.<span class=\"me1\">newFixedThreadPool</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> supplyLeft <span class=\"sy0\">=</span> stream<span class=\"br0\">(</span>supply<span class=\"br0\">)</span>.<span class=\"me1\">sum</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> totalCost <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>supplyLeft <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> cell <span class=\"sy0\">=</span> nextCell<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> cell<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> cell<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">int</span> quantity <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">min</span><span class=\"br0\">(</span>demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span>, supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> quantity<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                colDone<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> quantity<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                rowDone<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            result<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">=</span> quantity<span class=\"sy0\">;</span><br/>            supplyLeft <span class=\"sy0\">-=</span> quantity<span class=\"sy0\">;</span><br/>\u00a0<br/>            totalCost <span class=\"sy0\">+=</span> quantity <span class=\"sy0\">*</span> costs<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        stream<span class=\"br0\">(</span>result<span class=\"br0\">)</span>.<span class=\"kw1\">forEach</span><span class=\"br0\">(</span>a <span class=\"sy0\">-&gt;</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aarrays+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Arrays</span></a>.<span class=\"me1\">toString</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Total cost: \"</span> <span class=\"sy0\">+</span> totalCost<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        es.<span class=\"me1\">shutdown</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nextCell<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">throws</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> <span class=\"br0\">{</span><br/>        Future<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">&gt;</span> f1 <span class=\"sy0\">=</span> es.<span class=\"me1\">submit</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> maxPenalty<span class=\"br0\">(</span>nRows, nCols, <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Future<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">&gt;</span> f2 <span class=\"sy0\">=</span> es.<span class=\"me1\">submit</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> maxPenalty<span class=\"br0\">(</span>nCols, nRows, <span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> res1 <span class=\"sy0\">=</span> f1.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> res2 <span class=\"sy0\">=</span> f2.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> res1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> res2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">?</span> res1 <span class=\"sy0\">:</span> res2<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> res2 <span class=\"sy0\">:</span> res1<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> diff<span class=\"br0\">(</span><span class=\"kw4\">int</span> j, <span class=\"kw4\">int</span> len, <span class=\"kw4\">boolean</span> isRow<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> min1 <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">MAX_VALUE</span>, min2 <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">MAX_VALUE</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> minP <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isRow <span class=\"sy0\">?</span> colDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:</span> rowDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> isRow <span class=\"sy0\">?</span> costs<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:</span> costs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> min1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                min2 <span class=\"sy0\">=</span> min1<span class=\"sy0\">;</span><br/>                min1 <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>                minP <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> min2<span class=\"br0\">)</span><br/>                min2 <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span>min2 <span class=\"sy0\">-</span> min1, min1, minP<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> maxPenalty<span class=\"br0\">(</span><span class=\"kw4\">int</span> len1, <span class=\"kw4\">int</span> len2, <span class=\"kw4\">boolean</span> isRow<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> md <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">MIN_VALUE</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> pc <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, pm <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>, mc <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len1<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isRow <span class=\"sy0\">?</span> rowDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">:</span> colDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> res <span class=\"sy0\">=</span> diff<span class=\"br0\">(</span>i, len2, isRow<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> md<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                md <span class=\"sy0\">=</span> res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>  <span class=\"co1\">// max diff</span><br/>                pm <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span>       <span class=\"co1\">// pos of max diff</span><br/>                mc <span class=\"sy0\">=</span> res<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>  <span class=\"co1\">// min cost</span><br/>                pc <span class=\"sy0\">=</span> res<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>  <span class=\"co1\">// pos of min cost</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> isRow <span class=\"sy0\">?</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span>pm, pc, mc, md<span class=\"br0\">}</span> <span class=\"sy0\">:</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span>pc, pm, mc, md<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 50, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>immutable TProblem{T&lt;:Integer,U&lt;:String}<br/>    sd::Array{Array{T,1},1}<br/>    toc::Array{T,2}<br/>    labels::Array{Array{U,1},1}<br/>    tsort::Array{Array{T,2}, 1}<br/>end<br/>\u00a0<br/>function TProblem{T&lt;:Integer,U&lt;:String}(s::Array{T,1},<br/>                                        d::Array{T,1},<br/>                                        toc::Array{T,2},<br/>                                        slab::Array{U,1},<br/>                                        dlab::Array{U,1})<br/>    scnt = length(s)<br/>    dcnt = length(d)<br/>    size(toc) = (scnt,dcnt) || error(\"Supply, Demand, TOC Size Mismatch\")<br/>    length(slab) == scnt || error(\"Supply Label Size Labels\")<br/>    length(dlab) == dcnt || error(\"Demand Label Size Labels\")<br/>    0 &lt;= minimum(s) || error(\"Negative Supply Value\")<br/>    0 &lt;= minimum(d) || error(\"Negative Demand Value\")<br/>    sd = Array{T,1}[]<br/>    push!(sd, s)<br/>    push!(sd, d)<br/>    labels = Array{U,1}[]<br/>    push!(labels, slab)<br/>    push!(labels, dlab)<br/>    tsort = Array{T,2}[]<br/>    push!(tsort, mapslices(sortperm, toc, 2))<br/>    push!(tsort, mapslices(sortperm, toc, 1))<br/>    TProblem(sd, toc, labels, tsort)<br/>end<br/>isbalanced(tp::TProblem) = sum(tp.sd[1]) == sum(tp.sd[2])<br/>\u00a0<br/>type Resource{T&lt;:Integer}<br/>    dim::T<br/>    i::T<br/>    quant::T<br/>    l::T<br/>    m::T<br/>    p::T<br/>    q::T<br/>end<br/>function Resource{T&lt;:Integer}(dim::T, i::T, quant::T)<br/>    zed = zero(T)<br/>    Resource(dim, i, quant, zed, zed, zed, zed)<br/>end<br/>\u00a0<br/>isavailable(r::Resource) = 0 &lt; r.quant<br/>Base.isless(a::Resource, b::Resource) = a.p &lt; b.p || (a.p == b.p &amp;&amp; b.q &lt; a.q)<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 90, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> supply <span class=\"sy0\">=</span> intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">50</span>, <span class=\"nu0\">60</span>, <span class=\"nu0\">50</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> demand <span class=\"sy0\">=</span> intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">30</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">70</span>, <span class=\"nu0\">30</span>, <span class=\"nu0\">60</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> costs <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>    intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">16</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">17</span><span class=\"br0\">)</span>,<br/>    intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">14</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">15</span><span class=\"br0\">)</span>,<br/>    intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">19</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">23</span>, <span class=\"nu0\">50</span><span class=\"br0\">)</span>,<br/>    intArrayOf<span class=\"br0\">(</span><span class=\"nu0\">50</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">50</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">11</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> nRows <span class=\"sy0\">=</span> supply.<span class=\"me1\">size</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> nCols <span class=\"sy0\">=</span> demand.<span class=\"me1\">size</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rowDone <span class=\"sy0\">=</span> BooleanArray<span class=\"br0\">(</span>nRows<span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> colDone <span class=\"sy0\">=</span> BooleanArray<span class=\"br0\">(</span>nCols<span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> results <span class=\"sy0\">=</span> Array<span class=\"br0\">(</span>nRows<span class=\"br0\">)</span> <span class=\"br0\">{</span> IntArray<span class=\"br0\">(</span>nCols<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>fun nextCell<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> IntArray <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> res1 <span class=\"sy0\">=</span> maxPenalty<span class=\"br0\">(</span>nRows, nCols, <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> res2 <span class=\"sy0\">=</span> maxPenalty<span class=\"br0\">(</span>nCols, nRows, <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> res2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span> res1 <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> res2<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>res1<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> res2<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span> res2 <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> res1<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun diff<span class=\"br0\">(</span>j<span class=\"sy0\">:</span> Int, len<span class=\"sy0\">:</span> Int, isRow<span class=\"sy0\">:</span> Boolean<span class=\"br0\">)</span><span class=\"sy0\">:</span> IntArray <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> min1 <span class=\"sy0\">=</span> Int.<span class=\"me1\">MAX_VALUE</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> min2 <span class=\"sy0\">=</span> min1<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> minP <span class=\"sy0\">=</span> -<span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> done <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>isRow<span class=\"br0\">)</span> colDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> rowDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>done<span class=\"br0\">)</span> continue<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>isRow<span class=\"br0\">)</span> costs<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> costs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> min1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            min2 <span class=\"sy0\">=</span> min1<br/>            min1 <span class=\"sy0\">=</span> c<br/>            minP <span class=\"sy0\">=</span> i<br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> min2<span class=\"br0\">)</span> min2 <span class=\"sy0\">=</span> c<br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> intArrayOf<span class=\"br0\">(</span>min2 - min1, min1, minP<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun maxPenalty<span class=\"br0\">(</span>len1<span class=\"sy0\">:</span> Int, len2<span class=\"sy0\">:</span> Int, isRow<span class=\"sy0\">:</span> Boolean<span class=\"br0\">)</span><span class=\"sy0\">:</span> IntArray <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> md <span class=\"sy0\">=</span> Int.<span class=\"me1\">MIN_VALUE</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> pc <span class=\"sy0\">=</span> -<span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> pm <span class=\"sy0\">=</span> -<span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> mc <span class=\"sy0\">=</span> -<span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until len1<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> done <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>isRow<span class=\"br0\">)</span> rowDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> colDone<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>done<span class=\"br0\">)</span> continue<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> res <span class=\"sy0\">=</span> diff<span class=\"br0\">(</span>i, len2, isRow<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> md<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            md <span class=\"sy0\">=</span> res<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>  <span class=\"co1\">// max diff</span><br/>            pm <span class=\"sy0\">=</span> i       <span class=\"co1\">// pos of max diff</span><br/>            mc <span class=\"sy0\">=</span> res<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>  <span class=\"co1\">// min cost</span><br/>            pc <span class=\"sy0\">=</span> res<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>  <span class=\"co1\">// pos of min cost</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>isRow<span class=\"br0\">)</span> intArrayOf<span class=\"br0\">(</span>pm, pc, mc, md<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>                      intArrayOf<span class=\"br0\">(</span>pc, pm, mc, md<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> supplyLeft <span class=\"sy0\">=</span> supply.<span class=\"me1\">sum</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> totalCost <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>supplyLeft <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cell <span class=\"sy0\">=</span> nextCell<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> cell<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> c <span class=\"sy0\">=</span> cell<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q <span class=\"sy0\">=</span> minOf<span class=\"br0\">(</span>demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span>, supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> -<span class=\"sy0\">=</span> q<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>demand<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> colDone<span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span> -<span class=\"sy0\">=</span> q<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>supply<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> rowDone<span class=\"br0\">[</span>r<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        results<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>c<span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<br/>        supplyLeft -<span class=\"sy0\">=</span> q<br/>        totalCost +<span class=\"sy0\">=</span> q <span class=\"sy0\">*</span> costs<span class=\"br0\">[</span>r<span class=\"br0\">]</span><span class=\"br0\">[</span>c<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"    A   B   C   D   E\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>i, result<span class=\"br0\">)</span> in results.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        print<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">'W'</span>.<span class=\"me1\">toInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span> + i<span class=\"br0\">)</span>.<span class=\"me1\">toChar</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>item in result<span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\" \u00a0%2d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>item<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Total Cost = $totalCost\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Python", "loc": 57, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> defaultdict<br/>\u00a0<br/>costs  <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'W'</span>: <span class=\"br0\">{</span><span class=\"st0\">'A'</span>: <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"st0\">'B'</span>: <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"st0\">'C'</span>: <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"st0\">'D'</span>: <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">'E'</span>: <span class=\"nu0\">17</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>          <span class=\"st0\">'X'</span>: <span class=\"br0\">{</span><span class=\"st0\">'A'</span>: <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"st0\">'B'</span>: <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"st0\">'C'</span>: <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"st0\">'D'</span>: <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"st0\">'E'</span>: <span class=\"nu0\">15</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>          <span class=\"st0\">'Y'</span>: <span class=\"br0\">{</span><span class=\"st0\">'A'</span>: <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"st0\">'B'</span>: <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"st0\">'C'</span>: <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">'D'</span>: <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">'E'</span>: <span class=\"nu0\">50</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>          <span class=\"st0\">'Z'</span>: <span class=\"br0\">{</span><span class=\"st0\">'A'</span>: <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"st0\">'B'</span>: <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"st0\">'C'</span>: <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"st0\">'D'</span>: <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"st0\">'E'</span>: <span class=\"nu0\">11</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>demand <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'A'</span>: <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">'B'</span>: <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">'C'</span>: <span class=\"nu0\">70</span><span class=\"sy0\">,</span> <span class=\"st0\">'D'</span>: <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">'E'</span>: <span class=\"nu0\">60</span><span class=\"br0\">}</span><br/>cols <span class=\"sy0\">=</span> <span class=\"kw2\">sorted</span><span class=\"br0\">(</span>demand.<span class=\"me1\">iterkeys</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>supply <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'W'</span>: <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"st0\">'X'</span>: <span class=\"nu0\">60</span><span class=\"sy0\">,</span> <span class=\"st0\">'Y'</span>: <span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"st0\">'Z'</span>: <span class=\"nu0\">50</span><span class=\"br0\">}</span><br/>res <span class=\"sy0\">=</span> <span class=\"kw2\">dict</span><span class=\"br0\">(</span><span class=\"br0\">(</span>k<span class=\"sy0\">,</span> defaultdict<span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> k <span class=\"kw1\">in</span> costs<span class=\"br0\">)</span><br/>g <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> supply:<br/>    g<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">sorted</span><span class=\"br0\">(</span>costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">iterkeys</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> key<span class=\"sy0\">=</span><span class=\"kw1\">lambda</span> g: costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> demand:<br/>    g<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">sorted</span><span class=\"br0\">(</span>costs.<span class=\"me1\">iterkeys</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> key<span class=\"sy0\">=</span><span class=\"kw1\">lambda</span> g: costs<span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">while</span> g:<br/>    d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> demand:<br/>        d<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>costs<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> - costs<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">else</span> costs<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><br/>    s <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> supply:<br/>        s<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> - costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">else</span> costs<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    f <span class=\"sy0\">=</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span>d<span class=\"sy0\">,</span> key<span class=\"sy0\">=</span><span class=\"kw1\">lambda</span> n: d<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    t <span class=\"sy0\">=</span> <span class=\"kw2\">max</span><span class=\"br0\">(</span>s<span class=\"sy0\">,</span> key<span class=\"sy0\">=</span><span class=\"kw1\">lambda</span> n: s<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    t<span class=\"sy0\">,</span> f <span class=\"sy0\">=</span> <span class=\"br0\">(</span>f<span class=\"sy0\">,</span> g<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> d<span class=\"br0\">[</span>f<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> s<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span>g<span class=\"br0\">[</span>t<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> t<span class=\"br0\">)</span><br/>    v <span class=\"sy0\">=</span> <span class=\"kw2\">min</span><span class=\"br0\">(</span>supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"sy0\">,</span> demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    res<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"br0\">[</span>t<span class=\"br0\">]</span> +<span class=\"sy0\">=</span> v<br/>    demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span> -<span class=\"sy0\">=</span> v<br/>    <span class=\"kw1\">if</span> demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">for</span> k<span class=\"sy0\">,</span> n <span class=\"kw1\">in</span> supply.<span class=\"me1\">iteritems</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">if</span> n <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span>:<br/>                g<span class=\"br0\">[</span>k<span class=\"br0\">]</span>.<span class=\"me1\">remove</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><br/>        <span class=\"kw1\">del</span> g<span class=\"br0\">[</span>t<span class=\"br0\">]</span><br/>        <span class=\"kw1\">del</span> demand<span class=\"br0\">[</span>t<span class=\"br0\">]</span><br/>    supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span> -<span class=\"sy0\">=</span> v<br/>    <span class=\"kw1\">if</span> supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">for</span> k<span class=\"sy0\">,</span> n <span class=\"kw1\">in</span> demand.<span class=\"me1\">iteritems</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>            <span class=\"kw1\">if</span> n <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span>:<br/>                g<span class=\"br0\">[</span>k<span class=\"br0\">]</span>.<span class=\"me1\">remove</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw1\">del</span> g<span class=\"br0\">[</span>f<span class=\"br0\">]</span><br/>        <span class=\"kw1\">del</span> supply<span class=\"br0\">[</span>f<span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> cols:<br/>    <span class=\"kw1\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span><br/><span class=\"kw1\">print</span><br/>cost <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">for</span> g <span class=\"kw1\">in</span> <span class=\"kw2\">sorted</span><span class=\"br0\">(</span>costs<span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">print</span> g<span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span><br/>    <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> cols:<br/>        y <span class=\"sy0\">=</span> res<span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span> y <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span>:<br/>            <span class=\"kw1\">print</span> y<span class=\"sy0\">,</span><br/>        cost +<span class=\"sy0\">=</span> y * costs<span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"sy0\">,</span><br/>    <span class=\"kw1\">print</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>Total Cost = \"</span><span class=\"sy0\">,</span> cost</pre>"}, {"lang": "Racket", "loc": 103, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(define-values (1st 2nd 3rd) (values first second third))<br/>\u00a0<br/>(define-syntax-rule (?: x t f) (if (zero? x) f t))<br/>\u00a0<br/>(define (hash-ref2<br/>         hsh# key-1 key-2<br/>         #:fail-2 (fail-2 (\u03bb () (error 'hash-ref2 \"key-2:~a is not found in hash\" key-2)))<br/>         #:fail-1 (fail-1 (\u03bb () (error 'hash-ref2 \"key-1:~a is not found in hash\" key-1))))<br/>  (hash-ref (hash-ref hsh# key-1 fail-1) key-2 fail-2))<br/>\u00a0<br/>(define (VAM costs all-supply all-demand)<br/>  (define (reduce-g/x g/x x#-- x x-v y y-v)<br/>    (for/fold ((rv (?: x-v g/x (hash-remove g/x x))))<br/>      (#:when (zero? y-v) ((k n) (in-hash x#--)) #:unless (zero? n))<br/>      (hash-update rv k (curry remove y))))<br/>\u00a0<br/>  (define (cheapest-candidate/tie-break candidates)<br/>    (define cand-max3 (3rd (argmax 3rd candidates)))<br/>    (argmin 2nd (for/list ((cand candidates) #:when (= (3rd cand) cand-max3)) cand)))<br/>\u00a0<br/>  (let vam-loop<br/>    ((res (hash))<br/>     (supply all-supply)<br/>     (g/supply<br/>      (for/hash ((x (in-hash-keys all-supply)))<br/>        (define costs#x (hash-ref costs x))<br/>        (define key-fn (\u03bb (g) (hash-ref costs#x g)))<br/>        (values x (sort (hash-keys costs#x) &lt; #:key key-fn #:cache-keys? #t))))<br/>     (demand all-demand)<br/>     (g/demand<br/>      (for/hash ((x (in-hash-keys all-demand)))<br/>        (define key-fn (\u03bb (g) (hash-ref2 costs g x)))<br/>        (values x (sort (hash-keys costs) &lt; #:key key-fn #:cache-keys? #t)))))<br/>    (cond<br/>      [(and (hash-empty? supply) (hash-empty? demand)) res]<br/>      [(or (hash-empty? supply) (hash-empty? demand)) (error 'VAM \"Unbalanced supply / demand\")]<br/>      [else<br/>       (define D<br/>         (let ((candidates<br/>                (for/list ((x (in-hash-keys demand)))<br/>                  (match-define (hash-table ((== x) (and g#x (list g#x.0 _ ...))) _ ...) g/demand)<br/>                  (define z (hash-ref2 costs g#x.0 x))<br/>                  (match g#x<br/>                    [(list _ g#x.1 _ ...) (list x z (- (hash-ref2 costs g#x.1 x) z))]<br/>                    [(list _) (list x z z)]))))<br/>           (cheapest-candidate/tie-break candidates)))<br/>\u00a0<br/>       (define S<br/>         (let ((candidates<br/>                (for/list ((x (in-hash-keys supply)))<br/>                  (match-define (hash-table ((== x) (and g#x (list g#x.0 _ ...))) _ ...) g/supply)<br/>                  (define z (hash-ref2 costs x g#x.0))<br/>                  (match g#x<br/>                    [(list _ g#x.1 _ ...) (list x z (- (hash-ref2 costs x g#x.1) z))]<br/>                    [(list _) (list x z z)]))))<br/>           (cheapest-candidate/tie-break candidates)))<br/>\u00a0<br/>       (define-values (d s)<br/>         (let ((t&gt;f? (if (= (3rd D) (3rd S)) (&gt; (2nd S) (2nd D)) (&gt; (3rd D) (3rd S)))))<br/>           (if t&gt;f? (values (1st D) (1st (hash-ref g/demand (1st D))))<br/>               (values (1st (hash-ref g/supply (1st S))) (1st S)))))<br/>\u00a0<br/>       (define v (min (hash-ref supply s) (hash-ref demand d)))<br/>\u00a0<br/>       (define d-v (- (hash-ref demand d) v))<br/>       (define s-v (- (hash-ref supply s) v))<br/>\u00a0<br/>       (define demand-- (?: d-v (hash-set demand d d-v) (hash-remove demand d)))<br/>       (define supply-- (?: s-v (hash-set supply s s-v) (hash-remove supply s)))<br/>\u00a0<br/>       (vam-loop<br/>        (hash-update res s (\u03bb (h) (hash-update h d (\u03bb (x) (+ v x)) 0)) hash)<br/>        supply-- (reduce-g/x g/supply supply-- s s-v d d-v)<br/>        demand-- (reduce-g/x g/demand demand-- d d-v s s-v))])))<br/>\u00a0<br/>(define (vam-solution-cost costs demand?cols solution)<br/>  (match demand?cols<br/>    [(? list? demand-cols)<br/>     (for*/sum ((g (in-hash-keys costs)) (n (in-list demand-cols)))<br/>       (* (hash-ref2 solution g n #:fail-2 0) (hash-ref2 costs g n)))]<br/>    [(hash-table (ks _) ...) (vam-solution-cost costs (sort ks symbol&lt;? solution))]))<br/>\u00a0<br/>(define (describe-VAM-solution costs demand sltn)<br/>  (define demand-cols (sort (hash-keys demand) symbol&lt;?))<br/>  (string-join<br/>   (map<br/>    (curryr string-join \"\\t\")<br/>    `(,(map ~a (cons \"\" demand-cols))<br/>      ,@(for/list ((g (in-hash-keys costs)))<br/>          (cons (~a g) (for/list ((c demand-cols)) (~a (hash-ref2 sltn g c #:fail-2 \"-\")))))<br/>      ()<br/>      (\"Total Cost:\" ,(~a (vam-solution-cost costs demand-cols sltn)))))<br/>   \"\\n\"))<br/>\u00a0<br/>;; --------------------------------------------------------------------------------------------------<br/>(let ((COSTS (hash 'W (hash 'A 16 'B 16 'C 13 'D 22 'E 17)<br/>                   'X (hash 'A 14 'B 14 'C 13 'D 19 'E 15)<br/>                   'Y (hash 'A 19 'B 19 'C 20 'D 23 'E 50)<br/>                   'Z (hash 'A 50 'B 12 'C 50 'D 15 'E 11)))      <br/>      (DEMAND (hash 'A 30 'B 20 'C 70 'D 30 'E 60))<br/>      (SUPPLY (hash 'W 50 'X 60 'Y 50 'Z 50)))  <br/>  (displayln (describe-VAM-solution COSTS DEMAND (VAM COSTS SUPPLY DEMAND))))</pre>"}, {"lang": "Ruby", "loc": 54, "block": "<pre class=\"ruby highlighted_source\"><span class=\"co1\"># VAM</span><br/><span class=\"co1\">#</span><br/><span class=\"co1\">#  Nigel_Galloway</span><br/><span class=\"co1\">#  September 1st., 2013</span><br/>COSTS  = <span class=\"br0\">{</span>W: <span class=\"br0\">{</span>A: <span class=\"nu0\">16</span>, B: <span class=\"nu0\">16</span>, C: <span class=\"nu0\">13</span>, D: <span class=\"nu0\">22</span>, E: <span class=\"nu0\">17</span><span class=\"br0\">}</span>,<br/>          X: <span class=\"br0\">{</span>A: <span class=\"nu0\">14</span>, B: <span class=\"nu0\">14</span>, C: <span class=\"nu0\">13</span>, D: <span class=\"nu0\">19</span>, E: <span class=\"nu0\">15</span><span class=\"br0\">}</span>,<br/>          Y: <span class=\"br0\">{</span>A: <span class=\"nu0\">19</span>, B: <span class=\"nu0\">19</span>, C: <span class=\"nu0\">20</span>, D: <span class=\"nu0\">23</span>, E: <span class=\"nu0\">50</span><span class=\"br0\">}</span>,<br/>          Z: <span class=\"br0\">{</span>A: <span class=\"nu0\">50</span>, B: <span class=\"nu0\">12</span>, C: <span class=\"nu0\">50</span>, D: <span class=\"nu0\">15</span>, E: <span class=\"nu0\">11</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>demand = <span class=\"br0\">{</span>A: <span class=\"nu0\">30</span>, B: <span class=\"nu0\">20</span>, C: <span class=\"nu0\">70</span>, D: <span class=\"nu0\">30</span>, E: <span class=\"nu0\">60</span><span class=\"br0\">}</span><br/>supply = <span class=\"br0\">{</span>W: <span class=\"nu0\">50</span>, X: <span class=\"nu0\">60</span>, Y: <span class=\"nu0\">50</span>, Z: <span class=\"nu0\">50</span><span class=\"br0\">}</span><br/>COLS = demand.<span class=\"me1\">keys</span><br/>res = <span class=\"br0\">{</span><span class=\"br0\">}</span>; COSTS.<span class=\"me1\">each_key</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>k<span class=\"sy0\">|</span> res<span class=\"br0\">[</span>k<span class=\"br0\">]</span> = <span class=\"kw4\">Hash</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>g = <span class=\"br0\">{</span><span class=\"br0\">}</span>; supply.<span class=\"me1\">each_key</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">[</span>x<span class=\"br0\">]</span> = COSTS<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">keys</span>.<span class=\"me1\">sort_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>g<span class=\"sy0\">|</span> COSTS<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>        demand.<span class=\"me1\">each_key</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">[</span>x<span class=\"br0\">]</span> = COSTS.<span class=\"me1\">keys</span>.<span class=\"me1\">sort_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>g<span class=\"sy0\">|</span> COSTS<span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">until</span> g.<span class=\"me1\">empty</span>? <br/>  d = demand.<span class=\"me1\">collect</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x,y<span class=\"sy0\">|</span> <span class=\"br0\">[</span>x, z = COSTS<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span>, g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\u00a0? COSTS<span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">-</span> z\u00a0: z<span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  dmax = d.<span class=\"me1\">max_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> n<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  d = d.<span class=\"kw3\">select</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> == dmax<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">}</span>.<span class=\"me1\">min_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> n<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  s = supply.<span class=\"me1\">collect</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x,y<span class=\"sy0\">|</span> <span class=\"br0\">[</span>x, z = COSTS<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span>, g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\u00a0? COSTS<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span>g<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> z\u00a0: z<span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  dmax = s.<span class=\"me1\">max_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> n<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  s = s.<span class=\"kw3\">select</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> == dmax<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">}</span>.<span class=\"me1\">min_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> n<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  t,f = d<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>==s<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\u00a0? <span class=\"br0\">[</span>s<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, d<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\u00a0: <span class=\"br0\">[</span>d<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>,s<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <br/>  d,s = t <span class=\"sy0\">&gt;</span> f\u00a0? <span class=\"br0\">[</span>d<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>,g<span class=\"br0\">[</span>d<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\u00a0: <span class=\"br0\">[</span>g<span class=\"br0\">[</span>s<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>,s<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>  v = <span class=\"br0\">[</span>supply<span class=\"br0\">[</span>s<span class=\"br0\">]</span>, demand<span class=\"br0\">[</span>d<span class=\"br0\">]</span><span class=\"br0\">]</span>.<span class=\"me1\">min</span><br/>  res<span class=\"br0\">[</span>s<span class=\"br0\">]</span><span class=\"br0\">[</span>d<span class=\"br0\">]</span> <span class=\"sy0\">+</span>= v<br/>  demand<span class=\"br0\">[</span>d<span class=\"br0\">]</span> <span class=\"sy0\">-</span>= v<br/>  <span class=\"kw1\">if</span> demand<span class=\"br0\">[</span>d<span class=\"br0\">]</span> == <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>    supply.<span class=\"me1\">reject</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>k, n<span class=\"sy0\">|</span> n == <span class=\"nu0\">0</span><span class=\"br0\">}</span>.<span class=\"me1\">each_key</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">delete</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    g.<span class=\"me1\">delete</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/>    demand.<span class=\"me1\">delete</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>  supply<span class=\"br0\">[</span>s<span class=\"br0\">]</span> <span class=\"sy0\">-</span>= v<br/>  <span class=\"kw1\">if</span> supply<span class=\"br0\">[</span>s<span class=\"br0\">]</span> == <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>    demand.<span class=\"me1\">reject</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>k, n<span class=\"sy0\">|</span> n == <span class=\"nu0\">0</span><span class=\"br0\">}</span>.<span class=\"me1\">each_key</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">delete</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    g.<span class=\"me1\">delete</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>    supply.<span class=\"me1\">delete</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>COLS.<span class=\"me1\">each</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>n<span class=\"sy0\">|</span> <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span>, n<span class=\"br0\">}</span><br/><span class=\"kw3\">puts</span><br/>cost = <span class=\"nu0\">0</span><br/>COSTS.<span class=\"me1\">each_key</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>g<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">print</span> g, <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><br/>  COLS.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>n<span class=\"sy0\">|</span><br/>    y = res<span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>    <span class=\"kw3\">print</span> y <span class=\"kw1\">if</span> y\u00a0!= <span class=\"nu0\">0</span><br/>    cost <span class=\"sy0\">+</span>= y <span class=\"sy0\">*</span> COSTS<span class=\"br0\">[</span>g<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><br/>    <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw3\">puts</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>Total Cost = \"</span>, cost</pre>"}, {"lang": "Sidef", "loc": 72, "block": "<pre class=\"ruby highlighted_source\">var costs =\u00a0:<span class=\"br0\">(</span><br/>    W <span class=\"sy0\">=&gt;</span>\u00a0:<span class=\"br0\">(</span>A <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">16</span>, B <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">16</span>, C <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">13</span>, D <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">22</span>, E <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">17</span><span class=\"br0\">)</span>,<br/>    X <span class=\"sy0\">=&gt;</span>\u00a0:<span class=\"br0\">(</span>A <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">14</span>, B <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">14</span>, C <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">13</span>, D <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">19</span>, E <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span>,<br/>    Y <span class=\"sy0\">=&gt;</span>\u00a0:<span class=\"br0\">(</span>A <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">19</span>, B <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">19</span>, C <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">20</span>, D <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">23</span>, E <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span>,<br/>    Z <span class=\"sy0\">=&gt;</span>\u00a0:<span class=\"br0\">(</span>A <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span>, B <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">12</span>, C <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span>, D <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">15</span>, E <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/>var demand =\u00a0:<span class=\"br0\">(</span>A <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">30</span>, B <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">20</span>, C <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">70</span>, D <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">30</span>, E <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">60</span><span class=\"br0\">)</span><br/>var supply =\u00a0:<span class=\"br0\">(</span>W <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span>, X <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">60</span>, Y <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span>, Z <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span><br/>\u00a0<br/>var cols = demand.<span class=\"me1\">keys</span>.<span class=\"me1\">sort</span><br/>var res =\u00a0:<span class=\"br0\">(</span><span class=\"br0\">)</span>; costs.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>k<span class=\"sy0\">|</span> res<span class=\"br0\">{</span>k<span class=\"br0\">}</span> =\u00a0:<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>var g   =\u00a0:<span class=\"br0\">(</span><span class=\"br0\">)</span>; supply.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">{</span>x<span class=\"br0\">}</span> = costs<span class=\"br0\">{</span>x<span class=\"br0\">}</span>.<span class=\"me1\">keys</span>.<span class=\"me1\">sort_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>g<span class=\"sy0\">|</span> costs<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">{</span>g<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/>demand.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">{</span>x<span class=\"br0\">}</span> = costs.<span class=\"me1\">keys</span>.<span class=\"me1\">sort_by</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>g<span class=\"sy0\">|</span> costs<span class=\"br0\">{</span>g<span class=\"br0\">}</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span>g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var d = demand.<span class=\"me1\">collect</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span><br/>        <span class=\"br0\">[</span>x, var z = costs<span class=\"br0\">{</span>g<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span>, g<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\u00a0? costs<span class=\"br0\">{</span>g<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"sy0\">-</span>z\u00a0: z<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    var s = supply.<span class=\"me1\">collect</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span><br/>        <span class=\"br0\">[</span>x, var z = costs<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">{</span>g<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span>, g<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\u00a0? costs<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">{</span>g<span class=\"br0\">{</span>x<span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"sy0\">-</span>z\u00a0: z<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    with <span class=\"br0\">(</span>d.<span class=\"me1\">max_by</span> <span class=\"br0\">{</span> .<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>dmax<span class=\"sy0\">|</span><br/>        d.<span class=\"me1\">grep</span>! <span class=\"br0\">{</span> .<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> == dmax<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>.<span class=\"me1\">min_by</span>! <span class=\"br0\">{</span> .<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    with <span class=\"br0\">(</span>s.<span class=\"me1\">max_by</span> <span class=\"br0\">{</span> .<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>dmax<span class=\"sy0\">|</span><br/>        s.<span class=\"me1\">grep</span>! <span class=\"br0\">{</span> .<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> == dmax<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"br0\">}</span>.<span class=\"me1\">min_by</span>! <span class=\"br0\">{</span> .<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    var <span class=\"br0\">(</span>t,f<span class=\"br0\">)</span> = <span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> == s<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\u00a0? <span class=\"br0\">(</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, d<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"br0\">(</span><span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>, s<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>d,s<span class=\"br0\">)</span> = <span class=\"br0\">(</span>t <span class=\"sy0\">&gt;</span> f\u00a0? <span class=\"br0\">(</span><span class=\"br0\">(</span>d<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, g<span class=\"br0\">{</span>d<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"br0\">(</span><span class=\"br0\">(</span>g<span class=\"br0\">{</span>s<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>,s<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    var v = <span class=\"br0\">(</span>supply<span class=\"br0\">{</span>s<span class=\"br0\">}</span> <span class=\"st0\">`min`</span> demand<span class=\"br0\">{</span>d<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>    res<span class=\"br0\">{</span>s<span class=\"br0\">}</span><span class=\"br0\">{</span>d<span class=\"br0\">}</span>\u00a0:= <span class=\"nu0\">0</span> <span class=\"sy0\">+</span>= v<br/>    demand<span class=\"br0\">{</span>d<span class=\"br0\">}</span> <span class=\"sy0\">-</span>= v<br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>demand<span class=\"br0\">{</span>d<span class=\"br0\">}</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        supply.<span class=\"me1\">grep</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>_,n<span class=\"sy0\">|</span> n\u00a0!= <span class=\"nu0\">0</span> <span class=\"br0\">}</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">{</span>x<span class=\"br0\">}</span>.<span class=\"me1\">delete</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>        g.<span class=\"me1\">delete</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/>        demand.<span class=\"me1\">delete</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    supply<span class=\"br0\">{</span>s<span class=\"br0\">}</span> <span class=\"sy0\">-</span>= v<br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>supply<span class=\"br0\">{</span>s<span class=\"br0\">}</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        demand.<span class=\"me1\">grep</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>_,n<span class=\"sy0\">|</span> n\u00a0!= <span class=\"nu0\">0</span> <span class=\"br0\">}</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> g<span class=\"br0\">{</span>x<span class=\"br0\">}</span>.<span class=\"me1\">delete</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>        g.<span class=\"me1\">delete</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>        supply.<span class=\"me1\">delete</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span>, cols.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>var cost = <span class=\"nu0\">0</span><br/>costs.<span class=\"me1\">keys</span>.<span class=\"me1\">sort</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>g<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">print</span><span class=\"br0\">(</span>g, <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><br/>  cols.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>n<span class=\"sy0\">|</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">defined</span><span class=\"br0\">(</span>var y = res<span class=\"br0\">{</span>g<span class=\"br0\">}</span><span class=\"br0\">{</span>n<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">print</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><br/>        cost <span class=\"sy0\">+</span>= <span class=\"br0\">(</span>y <span class=\"sy0\">*</span> costs<span class=\"br0\">{</span>g<span class=\"br0\">}</span><span class=\"br0\">{</span>n<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>Total Cost = #{cost}\"</span></pre>"}, {"lang": "Tcl", "loc": 104, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/>\u00a0<br/><span class=\"co1\"># A sort that works by sorting by an auxiliary key computed by a lambda term</span><br/><span class=\"kw1\">proc</span> sortByFunction <span class=\"br0\">{</span><span class=\"kw2\">list</span> lambda<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    lmap k <span class=\"br0\">[</span><span class=\"kw2\">lsort</span> -index <span class=\"nu0\">1</span> <span class=\"br0\">[</span>lmap k <span class=\"re0\">$list</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">list</span> <span class=\"re0\">$k</span> <span class=\"br0\">[</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> apply <span class=\"re0\">$lambda</span> <span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$k</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># A simple way to pick a \u201cbest\u201d item from a list</span><br/><span class=\"kw1\">proc</span> minimax <span class=\"br0\">{</span><span class=\"kw2\">list</span> maxidx minidx<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> max -Inf<span class=\"sy0\">;</span> <span class=\"kw1\">set</span> min Inf<br/>    <span class=\"kw1\">foreach</span> t <span class=\"re0\">$list</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">set</span> m <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$t</span> <span class=\"re0\">$maxidx</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$max</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> best <span class=\"re0\">$t</span><br/>\t    <span class=\"kw1\">set</span> max <span class=\"re0\">$m</span><br/>\t    <span class=\"kw1\">set</span> min Inf<br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$m</span> == <span class=\"re0\">$max</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">[</span><span class=\"kw1\">set</span> m <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$t</span> <span class=\"re0\">$minidx</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$min</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> best <span class=\"re0\">$t</span><br/>\t    <span class=\"kw1\">set</span> min <span class=\"re0\">$m</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$best</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># The approximation engine. Note that this does not change the provided</span><br/><span class=\"co1\"># arguments at all since they are copied on write.</span><br/><span class=\"kw1\">proc</span> VAM <span class=\"br0\">{</span>costs demand supply<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># Initialise the sorted sequence of pairs and the result dictionary</span><br/>    <span class=\"kw1\">foreach</span> x <span class=\"br0\">[</span>dict keys <span class=\"re0\">$demand</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\tdict <span class=\"kw1\">set</span> g <span class=\"re0\">$x</span> <span class=\"br0\">[</span>sortByFunction <span class=\"br0\">[</span>dict keys <span class=\"re0\">$supply</span><span class=\"br0\">]</span> <span class=\"br0\">{</span>g <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> costs costs x x<span class=\"sy0\">;</span> dict get <span class=\"re0\">$costs</span> <span class=\"re0\">$g</span> <span class=\"re0\">$x</span><br/>\t<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\tdict <span class=\"kw1\">set</span> row <span class=\"re0\">$x</span> <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">foreach</span> x <span class=\"br0\">[</span>dict keys <span class=\"re0\">$supply</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\tdict <span class=\"kw1\">set</span> g <span class=\"re0\">$x</span> <span class=\"br0\">[</span>sortByFunction <span class=\"br0\">[</span>dict keys <span class=\"re0\">$demand</span><span class=\"br0\">]</span> <span class=\"br0\">{</span>g <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> costs costs x x<span class=\"sy0\">;</span> dict get <span class=\"re0\">$costs</span> <span class=\"re0\">$x</span> <span class=\"re0\">$g</span><br/>\t<span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\tdict <span class=\"kw1\">set</span> res <span class=\"re0\">$x</span> <span class=\"re0\">$row</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># While there's work to do...</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dict size <span class=\"re0\">$g</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"co1\"># Select \"best\" demand</span><br/>\tlassign <span class=\"br0\">[</span>minimax <span class=\"br0\">[</span>lmap x <span class=\"br0\">[</span>dict keys <span class=\"re0\">$demand</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"br0\">[</span><span class=\"kw1\">set</span> gx <span class=\"br0\">[</span>dict get <span class=\"re0\">$g</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><br/>\t    <span class=\"kw1\">set</span> z <span class=\"br0\">[</span>dict get <span class=\"re0\">$costs</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$gx</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$gx</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">list</span> <span class=\"re0\">$x</span> <span class=\"re0\">$z</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dict get <span class=\"re0\">$costs</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$gx</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span> - <span class=\"re0\">$z</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">list</span> <span class=\"re0\">$x</span> <span class=\"re0\">$z</span> <span class=\"re0\">$z</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">2</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> d dVal dCost<br/>\u00a0<br/>\t<span class=\"co1\"># Select \"best\" supply</span><br/>\tlassign <span class=\"br0\">[</span>minimax <span class=\"br0\">[</span>lmap x <span class=\"br0\">[</span>dict keys <span class=\"re0\">$supply</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"br0\">[</span><span class=\"kw1\">set</span> gx <span class=\"br0\">[</span>dict get <span class=\"re0\">$g</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><br/>\t    <span class=\"kw1\">set</span> z <span class=\"br0\">[</span>dict get <span class=\"re0\">$costs</span> <span class=\"re0\">$x</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$gx</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$gx</span><span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">list</span> <span class=\"re0\">$x</span> <span class=\"re0\">$z</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dict get <span class=\"re0\">$costs</span> <span class=\"re0\">$x</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$gx</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> - <span class=\"re0\">$z</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">list</span> <span class=\"re0\">$x</span> <span class=\"re0\">$z</span> <span class=\"re0\">$z</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"nu0\">2</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> s sVal sCost<br/>\u00a0<br/>\t<span class=\"co1\"># Compute how much to transfer, and with which \"best\"</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$sCost</span> == <span class=\"re0\">$dCost</span> <span class=\"sy0\">?</span> <span class=\"re0\">$sVal</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$dVal</span>\u00a0: <span class=\"re0\">$sCost</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$dCost</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> s <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"br0\">[</span>dict get <span class=\"re0\">$g</span> <span class=\"re0\">$d</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> d <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"br0\">[</span>dict get <span class=\"re0\">$g</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">set</span> v <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>min<span class=\"br0\">(</span><span class=\"br0\">[</span>dict get <span class=\"re0\">$supply</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span>dict get <span class=\"re0\">$demand</span> <span class=\"re0\">$d</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\u00a0<br/>\t<span class=\"co1\"># Transfer some supply to demand</span><br/>\tdict update res <span class=\"re0\">$s</span> inner <span class=\"br0\">{</span>dict <span class=\"kw2\">incr</span> inner <span class=\"re0\">$d</span> <span class=\"re0\">$v</span><span class=\"br0\">}</span><br/>\tdict <span class=\"kw2\">incr</span> demand <span class=\"re0\">$d</span> -<span class=\"re0\">$v</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dict get <span class=\"re0\">$demand</span> <span class=\"re0\">$d</span><span class=\"br0\">]</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    dict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>k n<span class=\"br0\">}</span> <span class=\"re0\">$supply</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> <span class=\"sy0\">!</span>= <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    <span class=\"co1\"># Filter list in dictionary to remove element</span><br/>\t\t    dict <span class=\"kw1\">set</span> g <span class=\"re0\">$k</span> <span class=\"br0\">[</span>lmap x <span class=\"br0\">[</span>dict get <span class=\"re0\">$g</span> <span class=\"re0\">$k</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> eq <span class=\"re0\">$d</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span> x<br/>\t\t    <span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    dict unset g <span class=\"re0\">$d</span><br/>\t    dict unset demand <span class=\"re0\">$d</span><br/>\t<span class=\"br0\">}</span><br/>\tdict <span class=\"kw2\">incr</span> supply <span class=\"re0\">$s</span> -<span class=\"re0\">$v</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>dict get <span class=\"re0\">$supply</span> <span class=\"re0\">$s</span><span class=\"br0\">]</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    dict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>k n<span class=\"br0\">}</span> <span class=\"re0\">$demand</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$n</span> <span class=\"sy0\">!</span>= <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t\t    dict <span class=\"kw1\">set</span> g <span class=\"re0\">$k</span> <span class=\"br0\">[</span>lmap x <span class=\"br0\">[</span>dict get <span class=\"re0\">$g</span> <span class=\"re0\">$k</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> eq <span class=\"re0\">$s</span><span class=\"br0\">}</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span> x<br/>\t\t    <span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">}</span><br/>\t    <span class=\"br0\">}</span><br/>\t    dict unset g <span class=\"re0\">$s</span><br/>\t    dict unset supply <span class=\"re0\">$s</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$res</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Yabasic", "loc": 149, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>N_ROWS = 4\u00a0: N_COLS = 5<br/>\u00a0<br/>dim supply(N_ROWS)<br/>dim demand(N_COLS)<br/>\u00a0<br/>restore sup<br/>for n = 0 to N_ROWS - 1<br/>\tread supply(n)<br/>next n<br/>\u00a0<br/>restore dem<br/>for n = 0 to N_COLS - 1<br/>\tread demand(n)<br/>next n<br/>\u00a0<br/>label sup<br/>data 50, 60, 50, 50<br/>\u00a0<br/>label dem<br/>data 30, 20, 70, 30, 60<br/>\u00a0<br/>dim costs(N_ROWS, N_COLS)<br/>\u00a0<br/>label cost<br/>data 16, 16, 13, 22, 17<br/>data 14, 14, 13, 19, 15<br/>data 19, 19, 20, 23, 50<br/>data 50, 12, 50, 15, 11<br/>\u00a0<br/>restore cost<br/>for i = 0 to N_ROWS - 1<br/>\tfor j = 0 to N_COLS - 1<br/>\t\tread costs(i, j)<br/>\tnext j<br/>next i<br/>\u00a0<br/>dim row_done(N_ROWS)<br/>dim col_done(N_COLS)<br/>\u00a0<br/>sub diff(j, leng, is_row, res())<br/>    local i, c, min1, min2, min_p, test<br/>\u00a0<br/>    min1 = 10e300\u00a0: min2 = min1\u00a0: min_p = -1<br/>\u00a0<br/>    for i = 0 to leng - 1<br/>    \tif is_row then<br/>    \t\ttest = col_done(i)<br/>    \telse<br/>    \t\ttest = row_done(i)<br/>    \tend if<br/>    \tif test continue<br/>    \tif is_row then<br/>    \t\tc = costs(j, i)<br/>    \telse<br/>    \t\tc = costs(i, j)<br/>    \tend if<br/>        if c &lt; min1 then<br/>            min2 = min1<br/>            min1 = c<br/>            min_p = i<br/>        elseif c &lt; min2 then<br/>        \tmin2 = c<br/>        end if<br/>    next i<br/>    res(0) = min2 - min1<br/>    res(1) = min1<br/>    res(2) = min_p<br/>end sub<br/>\u00a0<br/>sub max_penalty(len1, len2, is_row, res())<br/>    local i, pc, pm, mc, md, res2(3), test<br/>\u00a0<br/>    pc = -1\u00a0: pm = -1\u00a0: mc = -1\u00a0: md = -10e300<br/>\u00a0<br/>    for i = 0 to len1 - 1<br/>        if is_row then<br/>    \t\ttest = row_done(i)<br/>    \telse<br/>    \t\ttest = col_done(i)<br/>    \tend if<br/>        if test continue<br/>       \tdiff(i, len2, is_row, res2())<br/>        if res2(0) &gt; md then<br/>            md = res2(0)  //* max diff */<br/>            pm = i        //* pos of max diff */<br/>            mc = res2(1)  //* min cost */<br/>            pc = res2(2)  //* pos of min cost */<br/>        end if<br/>    next i<br/>\u00a0<br/>    if is_row then<br/>        res(0) = pm\u00a0: res(1) = pc<br/>    else<br/>        res(0) = pc\u00a0: res(1) = pm<br/>    end if<br/>    res(2) = mc\u00a0: res(3) = md<br/>end sub<br/>\u00a0<br/>sub next_cell(res())<br/>    local i, res1(4), res2(4)<br/>\u00a0<br/>    max_penalty(N_ROWS, N_COLS, TRUE, res1())<br/>    max_penalty(N_COLS, N_COLS, FALSE, res2())<br/>\u00a0<br/>    if res1(3) = res2(3) then<br/>        if res1(2) &lt; res2(2) then<br/>            for i = 0 to 3\u00a0: res(i) = res1(i)\u00a0: next i<br/>        else<br/>            for i = 0 to 3\u00a0: res(i) = res2(i)\u00a0: next i<br/>        end if<br/>        return<br/>    end if<br/>    if res1(3) &gt; res2(3) then<br/>        for i = 0 to 3\u00a0: res(i) = res2(i)\u00a0: next i<br/>    else<br/>        for i = 0 to 3\u00a0: res(i) = res1(i)\u00a0: next i<br/>    end if<br/>end sub<br/>\u00a0<br/>supply_left = 0\u00a0: total_cost = 0\u00a0: dim cell(4)<br/>\u00a0<br/>dim results(N_ROWS, N_COLS)<br/>\u00a0<br/>for i = 0 to N_ROWS - 1\u00a0: supply_left = supply_left + supply(i)\u00a0: next i<br/>\u00a0<br/>while(supply_left &gt; 0)<br/>    next_cell(cell())<br/>    r = cell(0)<br/>    c = cell(1)<br/>    q = min(demand(c), supply(r)) <br/>    demand(c) = demand(c) - q<br/>    if not demand(c) col_done(c) = TRUE<br/>    supply(r) = supply(r) - q<br/>    if not supply(r) row_done(r) = TRUE<br/>    results(r, c) = q<br/>    supply_left = supply_left - q<br/>    total_cost = total_cost + q * costs(r, c)<br/>wend<br/>\u00a0<br/>print \"    A   B   C   D   E\\n\"<br/>for i = 0 to N_ROWS - 1<br/>    print chr$(asc(\"W\") + i), \" \";<br/>    for j = 0 to N_COLS - 1<br/>    \tprint results(i, j) using \"###\";<br/>    next j<br/>    print<br/>next i<br/>print \"\\nTotal cost = \", total_cost</pre>"}, {"lang": "zkl", "loc": 7, "block": "<pre class=\"text highlighted_source\">costs:=Dictionary(<br/>   \"W\",Dictionary(\"A\",16, \"B\",16, \"C\",13, \"D\",22, \"E\",17),<br/>   \"X\",Dictionary(\"A\",14, \"B\",14, \"C\",13, \"D\",19, \"E\",15),<br/>   \"Y\",Dictionary(\"A\",19, \"B\",19, \"C\",20, \"D\",23, \"E\",50),<br/>   \"Z\",Dictionary(\"A\",50, \"B\",12, \"C\",50, \"D\",15, \"E\",11)).makeReadOnly();<br/>demand:=Dictionary(\"A\",30, \"B\",20, \"C\",70, \"D\",30, \"E\",60);  // gonna be modified<br/>supply:=Dictionary(\"W\",50, \"X\",60, \"Y\",50, \"Z\",50);\t    // gonna be modified</pre>"}]}