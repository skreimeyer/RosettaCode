{"task": "Multiplication_tables", "blocks": [{"lang": "360 Assembly", "loc": 60, "block": "<pre class=\"text highlighted_source\">*        12*12 multiplication table    14/08/2015<br/>MULTTABL CSECT<br/>         USING  MULTTABL,R12<br/>         LR     R12,R15<br/>         LA     R10,0              buffer pointer<br/>         LA     R3,BUFFER<br/>         MVC    0(4,R3),=C'  | '<br/>         LA     R10,4(R10)<br/>         LA     R5,12<br/>         LA     R4,1               i=1<br/>LOOPN    LA     R3,BUFFER          do i=1 to 12<br/>         AR     R3,R10<br/>         XDECO  R4,XDEC            i<br/>         MVC    0(4,R3),XDEC+8     output i<br/>         LA     R10,4(R10)<br/>         LA     R4,1(R4)<br/>         BCT    R5,LOOPN           end i<br/>         XPRNT  BUFFER,52<br/>         XPRNT  PORT,52            border<br/>         LA     R5,12<br/>         LA     R4,1               i=1 (R4)<br/>LOOPI    LA     R10,0              do i=1 to 12<br/>         MVC    BUFFER,=CL52' '<br/>         LA     R3,BUFFER<br/>         AR     R3,R10<br/>         XDECO  R4,XDEC<br/>         MVC    0(2,R3),XDEC+10<br/>         LA     R10,2(R10)<br/>         LA     R3,BUFFER<br/>         AR     R3,R10<br/>         MVC    0(2,R3),=C'| '<br/>         LA     R10,2(R10)<br/>         LA     R7,12<br/>         LA     R6,1               j=1 (R6)<br/>LOOPJ    CR     R6,R4              do j=1 to 12<br/>         BNL    MULT<br/>         LA     R3,BUFFER<br/>         AR     R3,R10<br/>         MVC    0(4,R3),=C'    '<br/>         LA     R10,4(R10)<br/>         B      NEXTJ<br/>MULT     LR     R9,R4              i<br/>         MR     R8,R6              i*j in R8R9<br/>         LA     R3,BUFFER<br/>         AR     R3,R10<br/>         XDECO  R9,XDEC<br/>         MVC    0(4,R3),XDEC+8<br/>         LA     R10,4(R10)<br/>NEXTJ    LA     R6,1(R6)<br/>         BCT    R7,LOOPJ           end j<br/>ELOOPJ   XPRNT  BUFFER,52<br/>         LA     R4,1(R4)<br/>         BCT    R5,LOOPI           end i<br/>ELOOPI   XR     R15,R15<br/>         BR     R14<br/>BUFFER   DC     CL52' '<br/>XDEC     DS     CL12<br/>PORT     DC     C'--+-------------------------------------------------'<br/>         YREGS<br/>         END    MULTTABL</pre>"}, {"lang": "ActionScript", "loc": 81, "block": "<pre class=\"actionscript highlighted_source\">\u00a0<br/>package <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw3\">import</span> flash.<span class=\"me1\">display</span>.<span class=\"me1\">Sprite</span>;<br/>    <span class=\"kw3\">import</span> flash.<span class=\"me1\">events</span>.<span class=\"me1\">Event</span>;<br/>    <span class=\"kw3\">import</span> flash.<span class=\"kw3\">text</span>.<span class=\"kw3\">TextField</span>;<br/>    <span class=\"kw3\">import</span> flash.<span class=\"kw3\">text</span>.<span class=\"me1\">TextFieldAutoSize</span>;<br/>    <span class=\"kw3\">import</span> flash.<span class=\"kw3\">text</span>.<span class=\"kw3\">TextFormat</span>;<br/>\u00a0<br/>    <span class=\"br0\">[</span>SWF <span class=\"br0\">(</span><span class=\"kw3\">width</span> = <span class=\"nu0\">550</span>, <span class=\"kw3\">height</span> = <span class=\"nu0\">550</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw3\">public</span> <span class=\"kw2\">class</span> MultiplicationTable <span class=\"kw3\">extends</span> Sprite <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw3\">public</span> <span class=\"kw2\">function</span> MultiplicationTable<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"kw3\">stage</span> <span class=\"br0\">)</span> _init<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">else</span> addEventListener<span class=\"br0\">(</span>Event.<span class=\"me1\">ADDED_TO_STAGE</span>, _init<span class=\"br0\">)</span>;<br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw3\">private</span> <span class=\"kw2\">function</span> _init<span class=\"br0\">(</span><span class=\"kw3\">e</span>:Event = <span class=\"kw2\">null</span><span class=\"br0\">)</span>:<span class=\"kw3\">void</span> <span class=\"br0\">{</span><br/>\u00a0<br/>            removeEventListener<span class=\"br0\">(</span>Event.<span class=\"me1\">ADDED_TO_STAGE</span>, _init<span class=\"br0\">)</span>;<br/>\u00a0<br/>            <span class=\"kw2\">var</span> format:<span class=\"kw3\">TextFormat</span> = <span class=\"kw2\">new</span> <span class=\"kw3\">TextFormat</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>            format.<span class=\"kw3\">size</span> = <span class=\"nu0\">15</span>;<br/>            <span class=\"kw2\">var</span> blockSize:uint = <span class=\"nu0\">40</span>;<br/>            <span class=\"kw2\">var</span> <span class=\"kw3\">max</span>:uint = <span class=\"nu0\">12</span>;<br/>\u00a0<br/>            <span class=\"kw2\">var</span> i:uint, j:uint;<br/>            <span class=\"kw2\">var</span> tf:<span class=\"kw3\">TextField</span>;<br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span> i = <span class=\"nu0\">1</span>; i <span class=\"sy0\">&lt;</span>= <span class=\"kw3\">max</span>; i++ <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                tf = <span class=\"kw2\">new</span> <span class=\"kw3\">TextField</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>                tf.<span class=\"me1\">defaultTextFormat</span> = format;<br/>                tf.<span class=\"me1\">x</span> = blockSize <span class=\"sy0\">*</span> i;<br/>                tf.<span class=\"me1\">y</span> = <span class=\"nu0\">0</span>;<br/>                tf.<span class=\"kw3\">width</span> = tf.<span class=\"kw3\">height</span> = blockSize;<br/>                tf.<span class=\"kw3\">autoSize</span> = TextFieldAutoSize.<span class=\"me1\">CENTER</span>;<br/>                tf.<span class=\"kw3\">text</span> = <span class=\"kw3\">String</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/>                addChild<span class=\"br0\">(</span>tf<span class=\"br0\">)</span>;<br/>\u00a0<br/>                tf = <span class=\"kw2\">new</span> <span class=\"kw3\">TextField</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>                tf.<span class=\"me1\">defaultTextFormat</span> = format;<br/>                tf.<span class=\"me1\">x</span> = <span class=\"nu0\">0</span>;<br/>                tf.<span class=\"me1\">y</span> = blockSize <span class=\"sy0\">*</span> i;<br/>                tf.<span class=\"kw3\">width</span> = tf.<span class=\"kw3\">height</span> = blockSize;<br/>                tf.<span class=\"kw3\">autoSize</span> = TextFieldAutoSize.<span class=\"me1\">CENTER</span>;<br/>                tf.<span class=\"kw3\">text</span> = <span class=\"kw3\">String</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/>                addChild<span class=\"br0\">(</span>tf<span class=\"br0\">)</span>;<br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw2\">var</span> yOffset:<span class=\"kw3\">Number</span> = tf.<span class=\"kw3\">textHeight</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>;<br/>            y += yOffset;<br/>\u00a0<br/>            graphics.<span class=\"kw3\">lineStyle</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, 0x000000<span class=\"br0\">)</span>;<br/>            graphics.<span class=\"kw3\">moveTo</span><span class=\"br0\">(</span>blockSize, -yOffset<span class=\"br0\">)</span>;<br/>            graphics.<span class=\"kw3\">lineTo</span><span class=\"br0\">(</span>blockSize, <span class=\"br0\">(</span>blockSize <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw3\">max</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> - yOffset<span class=\"br0\">)</span>;<br/>            graphics.<span class=\"kw3\">moveTo</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, blockSize - yOffset<span class=\"br0\">)</span>;<br/>            graphics.<span class=\"kw3\">lineTo</span><span class=\"br0\">(</span>blockSize <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"kw3\">max</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span>, blockSize - yOffset<span class=\"br0\">)</span>;<br/>\u00a0<br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span> i = <span class=\"nu0\">1</span>; i <span class=\"sy0\">&lt;</span>= <span class=\"kw3\">max</span>; i++ <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span> j = <span class=\"nu0\">1</span>; j <span class=\"sy0\">&lt;</span>= <span class=\"kw3\">max</span>; j++ <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> j <span class=\"sy0\">&gt;</span> i <span class=\"br0\">)</span><br/>                        <span class=\"kw1\">continue</span>;<br/>\u00a0<br/>                    tf = <span class=\"kw2\">new</span> <span class=\"kw3\">TextField</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>                    tf.<span class=\"me1\">defaultTextFormat</span> = format;<br/>                    tf.<span class=\"me1\">x</span> = blockSize <span class=\"sy0\">*</span> i;<br/>                    tf.<span class=\"me1\">y</span> = blockSize <span class=\"sy0\">*</span> j;<br/>                    tf.<span class=\"kw3\">width</span> = tf.<span class=\"kw3\">height</span> = blockSize;<br/>                    tf.<span class=\"kw3\">autoSize</span> = TextFieldAutoSize.<span class=\"me1\">CENTER</span>;<br/>                    tf.<span class=\"kw3\">text</span> = <span class=\"kw3\">String</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> j<span class=\"br0\">)</span>;<br/>                    addChild<span class=\"br0\">(</span>tf<span class=\"br0\">)</span>;<br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Ada", "loc": 27, "block": "<pre class=\"ada highlighted_source\">\u00a0<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Fixed</span>;  <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Strings</span>.<span class=\"me1\">Fixed</span>;<br/><span class=\"kw3\">procedure</span> Multiplication_Table <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">package</span> IO <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Integer_IO <span class=\"br0\">(</span>Integer<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">use</span> IO;<br/><span class=\"kw1\">begin</span><br/>   Put <span class=\"br0\">(</span><span class=\"st0\">\"  | \"</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">for</span> Row <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span> <span class=\"kw1\">loop</span><br/>      Put <span class=\"br0\">(</span>Row, Width =&gt; <span class=\"nu0\">4</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   New_Line;<br/>   Put_Line <span class=\"br0\">(</span><span class=\"st0\">\"--+-\"</span> &amp; <span class=\"nu0\">12</span> * <span class=\"nu0\">4</span> * '-'<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">for</span> Row <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span> <span class=\"kw1\">loop</span><br/>      Put <span class=\"br0\">(</span>Row, Width =&gt; <span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>      Put <span class=\"br0\">(</span><span class=\"st0\">\"| \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> Column <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">if</span> Column &lt; Row <span class=\"kw1\">then</span><br/>            Put <span class=\"br0\">(</span><span class=\"st0\">\"    \"</span><span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">else</span><br/>            Put <span class=\"br0\">(</span>Row * Column, Width =&gt; <span class=\"nu0\">4</span><span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      New_Line;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">end</span> Multiplication_Table;<br/>\u00a0</pre>"}, {"lang": "Agena", "loc": 14, "block": "<pre class=\"text highlighted_source\">scope<br/>    # print a school style multiplication table<br/>    # NB: print outputs a newline at the end, write and printf do not<br/>    write( \"    \" );<br/>    for i to 12 do printf( \"\u00a0%3d\", i ) od;<br/>    printf( \"\\n   +\" );<br/>    for i to 12 do write( \"----\" ) od;<br/>    for i to 12 do<br/>        printf( \"\\n%3d|\", i );<br/>        for j        to i - 1 do write(  \"    \"        ) od;<br/>        for j from i to 12    do printf( \"\u00a0%3d\", i * j ) od;<br/>    od;<br/>    print()<br/>epocs</pre>"}, {"lang": "ALGOL 68", "loc": 19, "block": "<pre class=\"algol68 highlighted_source\">main<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw3\">INT</span> max <span class=\"sy1\">=</span> 12<span class=\"sy1\">;</span><br/>  <span class=\"kw3\">INT</span> width <span class=\"sy1\">=</span> <span class=\"kw8\">ENTIER</span><span class=\"br0\">(</span><span class=\"kw24\">log</span><span class=\"br0\">(</span>max<span class=\"br0\">)</span><span class=\"sy1\">*</span>2<span class=\"br0\">)</span><span class=\"sy1\">+</span>1<span class=\"sy1\">;</span><br/>  <span class=\"kw3\">STRING</span> empty <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">*</span>width<span class=\"sy1\">,</span> sep<span class=\"sy1\">=</span><span class=\"st0\">\"|\"</span><span class=\"sy1\">,</span> hr <span class=\"sy1\">=</span> <span class=\"st0\">\"+\"</span> <span class=\"sy1\">+</span> <span class=\"br0\">(</span>max<span class=\"sy1\">+</span>1<span class=\"br0\">)</span><span class=\"sy1\">*</span><span class=\"br0\">(</span>width<span class=\"sy1\">*</span><span class=\"st0\">\"-\"</span><span class=\"sy1\">+</span><span class=\"st0\">\"+\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw6\">FORMAT</span> ifmt <span class=\"sy1\">=</span> $g<span class=\"br0\">(</span><span class=\"sy1\">-</span>width<span class=\"br0\">)</span><span class=\"st0\">\"|\"</span>$<span class=\"sy1\">;</span> <span class=\"coMULTI\"># remove leading zeros #</span><br/>\u00a0<br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$gl$<span class=\"sy1\">,</span> hr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">print</span><span class=\"br0\">(</span>sep <span class=\"sy1\">+</span> <span class=\"kw2\">IF</span> width<span class=\"sy1\">&lt;</span>2 <span class=\"kw2\">THEN</span> <span class=\"st0\">\"x\"</span> <span class=\"kw2\">ELSE</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">*</span><span class=\"br0\">(</span>width<span class=\"sy1\">-</span>2<span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"st0\">\"x \"</span> <span class=\"kw2\">FI</span> <span class=\"sy1\">+</span> sep<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">FOR</span> col <span class=\"kw2\">TO</span> max <span class=\"kw2\">DO</span> <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>ifmt<span class=\"sy1\">,</span> col<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$lgl$<span class=\"sy1\">,</span> hr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw2\">FOR</span> row <span class=\"kw2\">TO</span> max <span class=\"kw2\">DO</span><br/>    <span class=\"br0\">[</span>row<span class=\"sy1\">:</span>max<span class=\"br0\">]</span><span class=\"kw3\">INT</span> product<span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> col <span class=\"kw2\">FROM</span> row <span class=\"kw2\">TO</span> max <span class=\"kw2\">DO</span> product<span class=\"br0\">[</span>col<span class=\"br0\">]</span><span class=\"sy1\">:=</span>row<span class=\"sy1\">*</span>col <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw3\">STRING</span> prefix<span class=\"sy1\">=</span><span class=\"br0\">(</span>empty<span class=\"sy1\">+</span>sep<span class=\"br0\">)</span><span class=\"sy1\">*</span><span class=\"br0\">(</span>row<span class=\"sy1\">-</span>1<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g$<span class=\"sy1\">,</span> sep<span class=\"sy1\">,</span> ifmt<span class=\"sy1\">,</span> row<span class=\"sy1\">,</span> $g$<span class=\"sy1\">,</span> prefix<span class=\"sy1\">,</span> ifmt<span class=\"sy1\">,</span> product<span class=\"sy1\">,</span> $l$<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$gl$<span class=\"sy1\">,</span> hr<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "ALGOL W", "loc": 14, "block": "<pre class=\"text highlighted_source\">begin<br/>   \u00a0% print a school style multiplication table                             \u00a0%<br/>    i_w\u00a0:= 3; s_w\u00a0:= 0;\u00a0% set output formating                              \u00a0%<br/>    write( \"    \" );<br/>    for i\u00a0:= 1 until 12 do writeon( \" \", i );<br/>    write( \"   +\" );<br/>    for i\u00a0:= 1 until 12 do writeon( \"----\" );<br/>    for i\u00a0:= 1 until 12 do begin<br/>        write( i, \"|\" );<br/>        for j\u00a0:= 1 until i - 1 do writeon( \"    \" );<br/>        for j\u00a0:= i until 12    do writeon( \" \", i * j );<br/>    end;<br/>\u00a0<br/>end.</pre>"}, {"lang": "AppleScript", "loc": 21, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">set</span> n <span class=\"kw3\">to</span> <span class=\"nu0\">12</span> <span class=\"co1\">-- Size of table.</span><br/><span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> x <span class=\"kw3\">from</span> <span class=\"nu0\">0</span> <span class=\"kw3\">to</span> n<br/>\t<span class=\"kw3\">if</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw3\">set</span> <span class=\"br0\">{</span>table, x<span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"kw3\">return</span><span class=\"br0\">}</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>\t<span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> y <span class=\"kw3\">from</span> <span class=\"nu0\">0</span> <span class=\"kw3\">to</span> n<br/>\t\t<span class=\"kw3\">if</span> y<span class=\"co2\">'</span>s <span class=\"kw1\">contents</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>\t\t\t<span class=\"kw3\">if</span> x &gt; <span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw3\">set</span> row <span class=\"kw3\">to</span> <span class=\"br0\">{</span>f<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw3\">if</span> x <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw3\">then</span> <span class=\"kw3\">set</span> <span class=\"br0\">{</span>row, x<span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">{</span>f<span class=\"br0\">(</span><span class=\"st0\">\"x\"</span><span class=\"br0\">)</span><span class=\"br0\">}</span>, <span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>\t\t<span class=\"kw3\">else</span><br/>\t\t\t<span class=\"kw3\">if</span> y \u2265 x <span class=\"kw3\">then</span> <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> row <span class=\"kw3\">to</span> f<span class=\"br0\">(</span>x <span class=\"sy0\">*</span> y<span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw3\">if</span> y <span class=\"sy0\">&lt;</span> x <span class=\"kw3\">then</span> <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> row <span class=\"kw3\">to</span> f<span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>\t<span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> table <span class=\"kw3\">to</span> row <span class=\"sy0\">&amp;</span> <span class=\"kw3\">return</span><br/><span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/><span class=\"kw3\">return</span> table <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><br/>\u00a0<br/><span class=\"co1\">-- Handler/Function for formatting fixed width integer string.</span><br/><span class=\"kw3\">on</span> f<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">set</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> <span class=\"st0\">\"\"</span><br/>\t<span class=\"kw3\">return</span> <span class=\"br0\">(</span>characters <span class=\"sy0\">-</span><span class=\"nu0\">4</span> <span class=\"kw2\">thru</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw3\">of</span> <span class=\"br0\">(</span><span class=\"st0\">\"    \"</span> <span class=\"sy0\">&amp;</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><br/><span class=\"kw3\">end</span> f</pre>"}, {"lang": "AutoHotkey", "loc": 36, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span>MinimizeBox<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Margin\"><span class=\"kw7\">Margin</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Font\"><span class=\"kw7\">Font</span></a><span class=\"sy0\">,</span> s9<span class=\"sy0\">,</span> Fixedsys<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span> h0 w0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Add\"><span class=\"kw7\">Add</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/GuiControls.htm#Edit\"><span class=\"kw8\">Edit</span></a><span class=\"sy0\">,</span> w432 r14 <span class=\"sy0\">-</span>VScroll<br/><a href=\"http://www.autohotkey.com/docs/commands/Gosub.htm\"><span class=\"kw3\">Gosub</span></a><span class=\"sy0\">,</span> Table<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,,</span> Multiplication Table<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiClose\"><span class=\"kw7\">GuiClose</span></a>:<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#GuiEscape\"><span class=\"kw7\">GuiEscape</span></a>:<br/>    <a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/><span class=\"re2\">Table:<br/></span>    <span class=\"co1\">; top row</span><br/>    Table <span class=\"sy0\">:=</span> <span class=\"st0\">\"  x |\"</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><br/>        Table <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"   \"</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    Table <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span><br/>\u00a0<br/>    <span class=\"co1\">; underlines</span><br/>    Table <span class=\"sy0\">.=</span> <span class=\"st0\">\"----+\"</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">48</span><br/>        Table <span class=\"sy0\">.=</span> <span class=\"st0\">\"-\"</span><br/>    Table <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span><br/>\u00a0<br/>    <span class=\"co1\">; table</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">12</span> <span class=\"br0\">{</span> <span class=\"co1\">; rows</span><br/>        Table <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"  \"</span> Row <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"st0\">\" |\"</span><br/>        <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">12</span> <span class=\"co1\">; columns</span><br/>            Table <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span><span class=\"st0\">\"    \"</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">&gt;=</span> Row\u00a0? <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">*</span> Row\u00a0: <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        Table <span class=\"sy0\">.=</span> <span class=\"st0\">\"`n\"</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/GuiControl.htm\"><span class=\"kw3\">GuiControl</span></a><span class=\"sy0\">,,</span> Edit2<span class=\"sy0\">,</span> <span class=\"re0\">%Table%</span><br/><span class=\"kw1\">Return</span></pre>"}, {"lang": "AutoIt", "loc": 20, "block": "<pre class=\"autoit highlighted_source\">#AutoIt Version: 3<span class=\"sy0\">.</span>2<span class=\"sy0\">.</span>10<span class=\"sy0\">.</span>0<br/><span class=\"re0\">$tableupto</span><span class=\"sy0\">=</span><span class=\"nu0\">12</span><br/><span class=\"re0\">$table</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">for</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <span class=\"re0\">$tableupto</span><br/>   <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">for</span></a> <span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">to</span></a> <span class=\"re0\">$tableupto</span><br/>      <span class=\"re0\">$prod</span><span class=\"sy0\">=</span><a href=\"http://www.autoitscript.com/autoit3/docs/functions/String.htm\"><span class=\"kw3\">string</span></a><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">*</span><span class=\"re0\">$j</span><span class=\"br0\">)</span><br/>      <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">if</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/StringLen.htm\"><span class=\"kw3\">StringLen</span></a><span class=\"br0\">(</span><span class=\"re0\">$prod</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>  <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">then</span></a><br/>\t <span class=\"re0\">$prod</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"    \"</span><span class=\"sy0\">&amp;</span> <span class=\"re0\">$prod</span><br/>      <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>      <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">if</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/StringLen.htm\"><span class=\"kw3\">StringLen</span></a><span class=\"br0\">(</span><span class=\"re0\">$prod</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span>  <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">then</span></a><br/>\t <span class=\"re0\">$prod</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"  \"</span><span class=\"sy0\">&amp;</span> <span class=\"re0\">$prod</span><br/>      <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/>      <span class=\"re0\">$table</span> <span class=\"sy0\">=</span> <span class=\"re0\">$table</span><span class=\"sy0\">&amp;</span><span class=\"st0\">\" \"</span><span class=\"sy0\">&amp;</span><span class=\"re0\">$prod</span><br/>   <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/>   <span class=\"re0\">$table</span> <span class=\"sy0\">=</span> <span class=\"re0\">$table</span><span class=\"sy0\">&amp;</span><span class=\"st0\">\"  - \"</span><span class=\"sy0\">&amp;</span><span class=\"re0\">$i</span><span class=\"sy0\">&amp;</span><a href=\"http://www.autoitscript.com/autoit3/docs/macros.htm\"><span class=\"kw2\"><span class=\"re0\">@CRLF</span></span></a><br/>   <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">for</span></a>  <span class=\"re0\">$k</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">to</span></a> <span class=\"re0\">$i</span><br/>      <span class=\"re0\">$table</span> <span class=\"sy0\">=</span> <span class=\"re0\">$table</span><span class=\"sy0\">&amp;</span><span class=\"st0\">\"       \"</span><br/>   <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a><br/><a href=\"http://www.autoitscript.com/autoit3/docs/functions/MsgBox.htm\"><span class=\"kw3\">msgbox</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"st0\">\"Multiplication Tables\"</span><span class=\"sy0\">,</span><span class=\"re0\">$table</span><span class=\"br0\">)</span></pre>"}, {"lang": "AWK", "loc": 10, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>;i<span class=\"sy2\">&lt;=</span><span class=\"nu0\">12</span>;i<span class=\"sy3\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>j=<span class=\"nu0\">1</span>;j<span class=\"sy2\">&lt;=</span><span class=\"nu0\">12</span>;j<span class=\"sy3\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>j<span class=\"sy2\">&gt;=</span>i<span class=\"sy1\">||</span>j<span class=\"sy2\">==</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw5\">printf</span> <span class=\"st0\">\"%4d\"</span>,i<span class=\"sy3\">*</span>j<span class=\"br0\">}</span><br/>      <span class=\"kw1\">else</span>          <span class=\"br0\">{</span><span class=\"kw5\">printf</span> <span class=\"st0\">\"    \"</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw5\">print</span><br/> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Axe", "loc": 18, "block": "<pre class=\"text highlighted_source\">Fix 5<br/>ClrDraw<br/>For(I,1,10)<br/> Text(I-1*9,0,I\u25b6Dec)<br/> Text(91,I*7+1,I\u25b6Dec)<br/>End<br/>\u00a0<br/>For(J,1,8)<br/> For(I,J,10)<br/>  Text(I-1*9,J*7+1,I*J\u25b6Dec)<br/> End<br/>End<br/>\u00a0<br/>HLine(7)<br/>VLine(89)<br/>DispGraph<br/>getKey\u02b3<br/>Fix 4</pre>"}, {"lang": "BASIC", "loc": 26, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckcls.shtml\"><span class=\"kw3\">CLS</span></a><br/>\u00a0<br/><span class=\"co1\">'header row</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"     \"</span>;<br/><span class=\"kw1\">FOR</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">12</span><br/>    <span class=\"co1\">'do it this way for alignment purposes</span><br/>    o$ <span class=\"sy0\">=</span> <span class=\"st0\">\"    \"</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>o$<span class=\"sy0\">,</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>o$<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> o$;<br/><span class=\"kw1\">NEXT</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a>\u00a0: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"    \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckstring%24.shtml\"><span class=\"kw3\">STRING$</span></a><span class=\"br0\">(</span><span class=\"nu0\">49</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">FOR</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">12</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>    <span class=\"kw1\">IF</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span> <span class=\"kw1\">THEN</span> <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\" \"</span>;<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> n; <span class=\"st0\">\"|\"</span>;   <span class=\"co1\">'row labels</span><br/>    <span class=\"kw1\">FOR</span> m <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"    \"</span>;<br/>    <span class=\"kw1\">NEXT</span><br/>    <span class=\"kw1\">FOR</span> m <span class=\"sy0\">=</span> n <span class=\"kw1\">TO</span> <span class=\"nu0\">12</span><br/>        <span class=\"co1\">'alignment again</span><br/>        o$ <span class=\"sy0\">=</span> <span class=\"st0\">\"    \"</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>o$<span class=\"sy0\">,</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>o$<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>m <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckstr%24.shtml\"><span class=\"kw3\">STR$</span></a><span class=\"br0\">(</span>m <span class=\"sy0\">*</span> n<span class=\"br0\">)</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> o$;<br/>    <span class=\"kw1\">NEXT</span><br/><span class=\"kw1\">NEXT</span></pre>"}, {"lang": "Batch File", "loc": 47, "block": "<pre class=\"dos highlighted_source\"><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off<br/><a href=\"http://www.ss64.com/nt/setlocal.html\"><span class=\"kw3\">setlocal</span></a> enabledelayedexpansion<br/><span class=\"co2\"><br/>::The Main Thing...</span><br/>cls<br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> colum=12<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> row=12<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">multable</span><br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/pause.html\"><span class=\"kw3\">pause</span></a><br/><a href=\"http://www.ss64.com/nt/exit.html\"><span class=\"kw1\">exit</span></a> /b 0<br/><span class=\"co2\">::/The Main Thing.</span><br/><span class=\"co2\"><br/>::The Functions...</span><br/>:<span class=\"re0\">multable</span><br/>\t<a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/>\t<a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /l <span class=\"sy0\">%</span><span class=\"sy0\">%</span>. <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,<span class=\"sy0\">%</span><span class=\"re3\">colum</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">numstr</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span>.<br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> firstline=<span class=\"sy0\">!</span><span class=\"re2\">firstline</span><span class=\"sy0\">!!</span><span class=\"re2\">space</span><span class=\"sy0\">!%</span><span class=\"sy0\">%</span>.<br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> seconline=<span class=\"sy0\">!</span><span class=\"re2\">seconline</span><span class=\"sy0\">!</span>-----<br/>\t<span class=\"sy0\">)</span><br/>\t<a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> <span class=\"sy0\">!</span><span class=\"re2\">firstline</span><span class=\"sy0\">!</span><br/>\t<a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> <span class=\"sy0\">!</span><span class=\"re2\">seconline</span><span class=\"sy0\">!</span><br/><span class=\"co2\"><br/>\t::The next lines here until the \"goto\u00a0:EOF\" prints the products...</span><br/>\u00a0<br/>\t<a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /l <span class=\"sy0\">%%</span><span class=\"re3\">X</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,<span class=\"sy0\">%</span><span class=\"re3\">row</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t\t<a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /l <span class=\"sy0\">%%</span><span class=\"re3\">Y</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,<span class=\"sy0\">%</span><span class=\"re3\">colum</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t\t\t<a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%%</span><span class=\"re3\">Y</span> <a href=\"http://www.ss64.com/nt/lss.html\"><span class=\"kw2\">lss</span></a> <span class=\"sy0\">%%</span><span class=\"re3\">X</span> <span class=\"sy0\">(</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> \"line<span class=\"sy0\">%%</span><span class=\"re3\">X</span>=<span class=\"sy0\">!</span><span class=\"re2\">line%%<span class=\"re3\">X</span></span><span class=\"sy0\">!</span>     \"<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/else.html\"><span class=\"kw1\">else</span></a> <span class=\"sy0\">(</span><br/>\t\t\t\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a ans=<span class=\"sy0\">%%</span><span class=\"re3\">X</span>*<span class=\"sy0\">%%</span><span class=\"re3\">Y</span><br/>\t\t\t\t<a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">numstr</span> <span class=\"sy0\">!</span><span class=\"re2\">ans</span><span class=\"sy0\">!</span><br/>\t\t\t\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> \"line<span class=\"sy0\">%%</span><span class=\"re3\">X</span>=<span class=\"sy0\">!</span><span class=\"re2\">line%%<span class=\"re3\">X</span></span><span class=\"sy0\">!!</span><span class=\"re2\">space</span><span class=\"sy0\">!!</span><span class=\"re2\">ans</span><span class=\"sy0\">!</span>\"<br/>\t\t\t<span class=\"sy0\">)</span><br/>\t\t<span class=\"sy0\">)</span><br/>\t\t<a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<span class=\"sy0\">!</span><span class=\"re2\">line%%<span class=\"re3\">X</span></span><span class=\"sy0\">!</span> <span class=\"co3\">^|</span> <span class=\"sy0\">%%</span><span class=\"re3\">X</span><br/>\t<span class=\"sy0\">)</span><br/>\t<a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">EOF</span><br/>\u00a0<br/>:<span class=\"re0\">numstr</span><br/><span class=\"co2\">\t::This function returns the number of whitespaces to be applied on each numbers.</span><br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> cnt=0<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> proc=<span class=\"sy0\">%</span><span class=\"re3\">1</span><span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> space=<br/>\t:<span class=\"re0\">loop</span><br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> currchar=<span class=\"sy0\">!</span><span class=\"re2\">proc:~%<span class=\"re3\">cnt</span>%,1</span><span class=\"sy0\">!</span><br/>\t<a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <a href=\"http://www.ss64.com/nt/not.html\"><span class=\"kw2\">not</span></a> \"<span class=\"sy0\">!</span><span class=\"re2\">currchar</span><span class=\"sy0\">!</span>\"==\"\" <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a cnt+=1<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> loop<br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a numspaces=5-<span class=\"sy0\">!</span><span class=\"re2\">cnt</span><span class=\"sy0\">!</span><br/>\t<a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /l <span class=\"sy0\">%%</span><span class=\"re3\">A</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,<span class=\"sy0\">%</span><span class=\"re3\">numspaces</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> \"space=<span class=\"sy0\">!</span><span class=\"re2\">space</span><span class=\"sy0\">!</span> \"<br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">EOF</span><br/><span class=\"co2\">::/The Functions.</span></pre>"}, {"lang": "BBC BASIC", "loc": 8, "block": "<pre class=\"text highlighted_source\">      @% = 5\u00a0: REM Set column width<br/>      FOR row% = 1 TO 12<br/>        PRINT row% TAB(row% * @%)\u00a0;<br/>        FOR col% = row% TO 12<br/>          PRINT row% * col%\u00a0;<br/>        NEXT col%<br/>        PRINT<br/>      NEXT row%</pre>"}, {"lang": "Befunge", "loc": 3, "block": "<pre class=\"text highlighted_source\">0&gt;51p0&gt;52p51g52g*:51g52g`!*\\!51g52g+*+0\\3&gt;01p::55+%68*+\\!28v<br/>w^p2&lt;y|!`+66:+1,+*84*\"\\\"!:g25$_,#!&gt;#:&lt;$$_^#!:-1g10/+55\\-**&lt;&lt;<br/>\"$9\"^x&gt;$55+,51g1+:66+`#@_055+68*\\&gt;\\#&lt;1#*-#9:#5_$\"+---\"&gt;:#,_$</pre>"}, {"lang": "Bracmat", "loc": 56, "block": "<pre class=\"text highlighted_source\">  ( multiplicationTable<br/>  =     high i j row row2 matrix padFnc tmp<br/>      , celPad leftCelPad padFnc celDashes leftDashes<br/>    .  \u00a0!arg:?high<br/>      &amp; ( padFnc<br/>        =   L i w d<br/>          .   @(!arg:? [?L)<br/>            &amp; 1+(!L:?i):?L<br/>            &amp; \" \":?w<br/>            &amp; \"-\":?d<br/>            &amp;   whl<br/>              ' (\u00a0!i+-1:~&lt;0:?i<br/>                &amp; \" \"\u00a0!w:?w<br/>                &amp; \"-\"\u00a0!d:?d<br/>                )<br/>            &amp; str$!w:?w<br/>            &amp; (   <br/>                ' ( <br/>                  .   @(str$(rev$!arg ()$w):?arg [($L)\u00a0?)<br/>                    &amp; rev$!arg<br/>                  )<br/>              . str$!d<br/>              )<br/>        )<br/>      &amp; padFnc$(!high^2):((=?celPad).?celDashes)<br/>      &amp; @(!high:?tmp [-2\u00a0?)<br/>      &amp; padFnc$!tmp:((=?leftCelPad).?leftDashes)<br/>      &amp; 0:?i<br/>      &amp;\u00a0:?row:?row2<br/>      &amp;   whl<br/>        ' ( 1+!i:~&gt;!high:?i<br/>          &amp;\u00a0!row celPad$!i:?row<br/>          &amp;\u00a0!celDashes\u00a0!row2:?row2<br/>          )<br/>      &amp;   str$(leftCelPad$X \"|\"\u00a0!row \\n\u00a0!leftDashes \"+\"\u00a0!row2 \\n)<br/>       \u00a0:\u00a0?matrix<br/>      &amp; 0:?j<br/>      &amp;   whl<br/>        ' ( 1+!j:~&gt;!high:?j<br/>          &amp; 0:?i<br/>          &amp;\u00a0:?row<br/>          &amp;   whl<br/>            ' ( 1+!i:&lt;!j:?i<br/>              &amp; celPad$()\u00a0!row:?row<br/>              )<br/>          &amp; leftCelPad$!j \"|\"\u00a0!row:?row<br/>          &amp;   whl<br/>            ' ( 1+!i:~&gt;!high:?i<br/>              &amp;\u00a0!row celPad$(!i*!j):?row<br/>              )<br/>          &amp;\u00a0!matrix str$(!row \\n):?matrix<br/>          )<br/>      &amp; str$!matrix<br/>  )<br/>&amp; out$(multiplicationTable$12)<br/>&amp; done;</pre>"}, {"lang": "C", "loc": 17, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%3d%c\"</span><span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> j <span class=\"sy0\">!=</span> n <span class=\"sy0\">?</span> <span class=\"st0\">' '</span> <span class=\"sy0\">:</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>j <span class=\"sy0\">!=</span> n <span class=\"sy0\">?</span> <span class=\"st0\">\"----\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"+<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> i <span class=\"sy0\">?</span> <span class=\"st0\">\"    \"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"%3d \"</span><span class=\"sy0\">,</span> i <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"|\u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 78, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;iomanip&gt;</span><br/><span class=\"co2\">#include &lt;cmath&gt; // for log10()</span><br/><span class=\"co2\">#include &lt;algorithm&gt; // for max()</span><br/>\u00a0<br/><span class=\"kw4\">size_t</span> table_column_width<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> min, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> max<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> abs_max <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">max</span><span class=\"br0\">(</span>max<span class=\"sy2\">*</span>max, min<span class=\"sy2\">*</span>min<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// abs_max is the largest absolute value we might see.</span><br/>    <span class=\"co1\">// If we take the log10 and add one, we get the string width</span><br/>    <span class=\"co1\">// of the largest possible absolute value.</span><br/>    <span class=\"co1\">// Add one more for a little whitespace guarantee.</span><br/>    <span class=\"kw4\">size_t</span> colwidth <span class=\"sy1\">=</span> <span class=\"nu0\">2</span> <span class=\"sy2\">+</span> std<span class=\"sy4\">::</span><span class=\"kw3\">log10</span><span class=\"br0\">(</span>abs_max<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// If only one of them is less than 0, then some will</span><br/>    <span class=\"co1\">// be negative. If some values may be negative, then we need to add some space</span><br/>    <span class=\"co1\">// for a sign indicator (-)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>min <span class=\"sy1\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy3\">&amp;&amp;</span> max <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t<span class=\"sy2\">++</span>colwidth<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> colwidth<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Writer_<br/><span class=\"br0\">{</span><br/>    decltype<span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> fmt_<span class=\"sy4\">;</span><br/>    Writer_<span class=\"br0\">(</span><span class=\"kw4\">size_t</span> w<span class=\"br0\">)</span> <span class=\"sy4\">:</span> fmt_<span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">setw</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw2\">template</span><span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> T_<span class=\"sy1\">&gt;</span> Writer_<span class=\"sy3\">&amp;</span> operator<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">const</span> T_<span class=\"sy3\">&amp;</span> info<span class=\"br0\">)</span> <span class=\"br0\">{</span> std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> fmt_ <span class=\"sy1\">&lt;&lt;</span> info<span class=\"sy4\">;</span> <span class=\"kw1\">return</span> <span class=\"sy2\">*</span><span class=\"kw3\">this</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> print_table_header<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> min, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> max<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    Writer_ write<span class=\"br0\">(</span>table_column_width<span class=\"br0\">(</span>min, max<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// table corner</span><br/>    write<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> col <span class=\"sy1\">=</span> min<span class=\"sy4\">;</span> col <span class=\"sy1\">&lt;=</span> max<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>col<span class=\"br0\">)</span><br/>        write<span class=\"br0\">(</span>col<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// End header with a newline and blank line.</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> print_table_row<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> num, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> min, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> max<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    Writer_ write<span class=\"br0\">(</span>table_column_width<span class=\"br0\">(</span>min, max<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Header column</span><br/>    write<span class=\"br0\">(</span>num<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Spacing to ensure only the top half is printed</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> multiplicand <span class=\"sy1\">=</span> min<span class=\"sy4\">;</span> multiplicand <span class=\"sy1\">&lt;</span> num<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>multiplicand<span class=\"br0\">)</span><br/>        write<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Remaining multiplicands for the row.</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> multiplicand <span class=\"sy1\">=</span> num<span class=\"sy4\">;</span> multiplicand <span class=\"sy1\">&lt;=</span> max<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>multiplicand<span class=\"br0\">)</span><br/>        write<span class=\"br0\">(</span>num <span class=\"sy2\">*</span> multiplicand<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// End row with a newline and blank line.</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> print_table<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">int</span> min, <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> max<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"co1\">// Header row</span><br/>    print_table_header<span class=\"br0\">(</span>min, max<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Table body</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> row <span class=\"sy1\">=</span> min<span class=\"sy4\">;</span> row <span class=\"sy1\">&lt;=</span> max<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>row<span class=\"br0\">)</span><br/>        print_table_row<span class=\"br0\">(</span>row, min, max<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    print_table<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 39, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> multtbl<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\" X\"</span><span class=\"sy0\">.</span><span class=\"me1\">PadRight</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"####\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\" ___\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\" ___\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> row <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> row <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> row<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>row<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"###\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">PadRight</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> col <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> col <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> col<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>row <span class=\"sy0\">&lt;=</span> col<span class=\"br0\">)</span><br/>                        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"br0\">(</span>row <span class=\"sy0\">*</span> col<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"###\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">else</span><br/>                        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy0\">.</span><span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>                Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Chef", "loc": 65, "block": "<pre class=\"text highlighted_source\">Multigrain Bread.<br/>\u00a0<br/>Prints out a multiplication table.<br/>\u00a0<br/>Ingredients.<br/>12 cups flour<br/>12 cups grains<br/>12 cups seeds<br/>1 cup water<br/>9 dashes yeast<br/>1 cup nuts<br/>40 ml honey<br/>1 cup sugar<br/>\u00a0<br/>Method.<br/>Sift the flour.<br/> Put flour into the 1st mixing bowl.<br/> Put yeast into the 1st mixing bowl.<br/>Shake the flour until sifted.<br/>Put grains into the 2nd mixing bowl.<br/>Fold flour into the 2nd mixing bowl.<br/>Put water into the 2nd mixing bowl.<br/>Add yeast into the 2nd mixing bowl.<br/>Combine flour into the 2nd mixing bowl.<br/>Fold nuts into the 2nd mixing bowl.<br/>Liquify nuts.<br/>Put nuts into the 1st mixing bowl.<br/>Pour contents of the 1st mixing bowl into the baking dish.<br/>Sieve the flour.<br/> Put yeast into the 2nd mixing bowl.<br/> Add water into the 2nd mixing bowl.<br/> Sprinkle the seeds.<br/>   Put flour into the 2nd mixing bowl.<br/>   Combine seeds into the 2nd mixing bowl.<br/>   Put yeast into the 2nd mixing bowl.<br/>   Put seeds into the 2nd mixing bowl.<br/>   Remove flour from the 2nd mixing bowl.<br/>   Fold honey into the 2nd mixing bowl.<br/>   Put water into the 2nd mixing bowl.<br/>   Fold sugar into the 2nd mixing bowl.<br/>   Squeeze the honey.<br/>     Put water into the 2nd mixing bowl.<br/>     Remove water from the 2nd mixing bowl.<br/>     Fold sugar into the 2nd mixing bowl.<br/>     Set aside.<br/>   Drip until squeezed.<br/>   Scoop the sugar.<br/>     Crush the seeds.<br/>       Put yeast into the 2nd mixing bowl.<br/>     Grind the seeds until crushed.<br/>     Put water into the 2nd mixing bowl.<br/>     Fold seeds into the 2nd mixing bowl.<br/>     Set aside.<br/>   Drop until scooped.<br/> Randomize the seeds until sprinkled.<br/> Fold honey into the 2nd mixing bowl.<br/> Put flour into the 2nd mixing bowl.<br/> Put grains into the 2nd mixing bowl.<br/> Fold seeds into the 2nd mixing bowl.<br/>Shake the flour until sieved.<br/>Put yeast into the 2nd mixing bowl.<br/>Add water into the 2nd mixing bowl.<br/>Pour contents of the 2nd mixing bowl into the 2nd baking dish.<br/>\u00a0<br/>Serves 2.</pre>"}, {"lang": "Clojure", "loc": 14, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>size <span class=\"nu0\">12</span><br/>      trange <span class=\"br0\">(</span>range <span class=\"nu0\">1</span> <span class=\"br0\">(</span>inc size<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      fmt-width <span class=\"br0\">(</span>+ <span class=\"br0\">(</span><span class=\"sy0\">.</span><span class=\"kw1\">length</span> <span class=\"br0\">(</span>str <span class=\"br0\">(</span>* size size<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      fmt-str <span class=\"br0\">(</span>partial format <span class=\"br0\">(</span>str <span class=\"st0\">\"%\"</span> fmt-width <span class=\"st0\">\"s\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      fmt-dec <span class=\"br0\">(</span>partial format <span class=\"br0\">(</span>str <span class=\"st0\">\"% \"</span> fmt-width <span class=\"st0\">\"d\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"br0\">(</span>doseq <span class=\"br0\">[</span>s <span class=\"br0\">(</span><span class=\"kw1\">cons</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">apply</span> str <span class=\"br0\">(</span>fmt-str <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>map #<span class=\"br0\">(</span>fmt-dec <span class=\"sy0\">%</span><span class=\"br0\">)</span> trange<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>for <span class=\"br0\">[</span>i trange<span class=\"br0\">]</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">apply</span> str <span class=\"br0\">(</span>fmt-dec i<span class=\"br0\">)</span> <span class=\"br0\">(</span>map #<span class=\"br0\">(</span>fmt-str <span class=\"br0\">(</span>str <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                           <span class=\"br0\">(</span>map #<span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> <span class=\"sy0\">%</span> i<span class=\"br0\">)</span> <span class=\"br0\">(</span>* i <span class=\"sy0\">%</span><span class=\"br0\">)</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>                                                <span class=\"br0\">(</span>for <span class=\"br0\">[</span>j trange<span class=\"br0\">]</span> j<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>println s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 47, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> multiplication-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       repository<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> multiplication<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> rows <span class=\"kw3\">occurs</span> <span class=\"nu0\">12</span> <span class=\"kw2\">times</span><span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> colm <span class=\"kw3\">occurs</span> <span class=\"nu0\">12</span> <span class=\"kw2\">times</span><span class=\"sy0\">.</span><br/>                <span class=\"nu0\">15</span> num    <span class=\"kw3\">pic</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">77</span> cand <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">77</span> ier  <span class=\"kw3\">pic</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">77</span> ind  <span class=\"kw3\">pic</span> z9<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">77</span> show <span class=\"kw3\">pic</span> zz9<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       sample-<span class=\"kw1\">main</span><span class=\"sy0\">.</span><br/>       <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> cand <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> cand <span class=\"kw3\">greater</span> <span class=\"kw3\">than</span> <span class=\"nu0\">12</span><br/>                  <span class=\"kw3\">after</span> ier <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> ier <span class=\"kw3\">greater</span> <span class=\"kw3\">than</span> <span class=\"nu0\">12</span><br/>           <span class=\"kw2\">multiply</span> cand <span class=\"kw3\">by</span> ier <span class=\"kw2\">giving</span> num<span class=\"br0\">(</span>cand<span class=\"sy0\">,</span> ier<span class=\"br0\">)</span><br/>       end-<span class=\"kw2\">perform</span><br/>\u00a0<br/>       <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> cand <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> cand <span class=\"kw3\">greater</span> <span class=\"kw3\">than</span> <span class=\"nu0\">12</span><br/>           <span class=\"kw2\">move</span> cand <span class=\"kw2\">to</span> ind<br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"x \"</span> ind <span class=\"st0\">\"| \"</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> ier <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> ier <span class=\"kw3\">greater</span> <span class=\"kw3\">than</span> <span class=\"nu0\">12</span><br/>               <span class=\"kw1\">if</span> ier <span class=\"kw3\">greater</span> <span class=\"kw3\">than</span> <span class=\"kw3\">or</span> <span class=\"kw3\">equal</span> <span class=\"kw2\">to</span> cand <span class=\"kw3\">then</span><br/>                   <span class=\"kw2\">move</span> num<span class=\"br0\">(</span>cand<span class=\"sy0\">,</span> ier<span class=\"br0\">)</span> <span class=\"kw2\">to</span> show<br/>                   <span class=\"kw2\">display</span> show <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>                   <span class=\"kw1\">if</span> ier <span class=\"kw3\">equal</span> <span class=\"kw2\">to</span> <span class=\"nu0\">12</span> <span class=\"kw3\">then</span><br/>                       <span class=\"kw2\">display</span> <span class=\"st0\">\"|\"</span><br/>                   <span class=\"kw3\">else</span><br/>                       <span class=\"kw2\">display</span> <span class=\"kw3\">space</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>                   end-<span class=\"kw1\">if</span><br/>               <span class=\"kw3\">else</span><br/>                   <span class=\"kw2\">display</span> <span class=\"st0\">\"    \"</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>               end-<span class=\"kw1\">if</span><br/>           end-<span class=\"kw2\">perform</span><br/>       end-<span class=\"kw2\">perform</span><br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> multiplication-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "CoffeeScript", "loc": 33, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>print_multiplication_tables = <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  width = <span class=\"nu0\">4</span><br/>\u00a0<br/>  pad = <span class=\"br0\">(</span>s<span class=\"sy0\">,</span> n=width<span class=\"sy0\">,</span> c=<span class=\"st0\">' '</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    s = s.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    result = <span class=\"st0\">''</span><br/>    padding = n <span class=\"sy0\">-</span> s.<span class=\"me1\">length</span><br/>    <span class=\"kw1\">while</span> result.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> padding<br/>      result <span class=\"sy0\">+</span>= c<br/>    result <span class=\"sy0\">+</span> s<br/>\u00a0<br/>  s = pad<span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'|'</span><br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"me1\">n</span><span class=\"br0\">]</span><br/>    s <span class=\"sy0\">+</span>= pad i<br/>  console.<span class=\"me1\">log</span> s<br/>\u00a0<br/>  s = pad<span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> width<span class=\"sy0\">,</span> <span class=\"st0\">'-'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'+'</span><br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"me1\">n</span><span class=\"br0\">]</span><br/>    s <span class=\"sy0\">+</span>= pad <span class=\"st0\">''</span><span class=\"sy0\">,</span> width<span class=\"sy0\">,</span> <span class=\"st0\">'-'</span><br/>  console.<span class=\"me1\">log</span> s<br/>\u00a0<br/>\u00a0<br/>  <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"me1\">n</span><span class=\"br0\">]</span><br/>    s = pad i<br/>    s <span class=\"sy0\">+</span>= <span class=\"st0\">'|'</span><br/>    s <span class=\"sy0\">+</span>= pad <span class=\"st0\">''</span><span class=\"sy0\">,</span> width<span class=\"sy0\">*</span><span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"br0\">[</span>i..<span class=\"me1\">n</span><span class=\"br0\">]</span><br/>       s <span class=\"sy0\">+</span>= pad i<span class=\"sy0\">*</span>j<br/>    console.<span class=\"me1\">log</span> s<br/>\u00a0<br/>print_multiplication_tables <span class=\"nu0\">12</span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 18, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>m <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">12</span> m<span class=\"br0\">)</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ m<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span>n <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">12</span> m<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ n<span class=\"br0\">)</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> n <span class=\"nu0\">13</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">zerop</span> n<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">case</span> m<br/>        <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"  *|\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"nu0\">12</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"  12~&amp;---+------------------------------------------------~&amp;\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>otherwise<br/>         <span class=\"br0\">(</span>format t <span class=\"st0\">\"~4,D\"</span> m<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">case</span> m<br/>        <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"~3,D|\"</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"nu0\">12</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"~4,D~&amp;\"</span> <span class=\"br0\">(</span>* n m<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>otherwise<br/>         <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> m n<span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>format t <span class=\"st0\">\"~4,D\"</span> <span class=\"br0\">(</span>* m n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>format t <span class=\"st0\">\"    \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 9, "block": "<pre class=\"d highlighted_source\"><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">enum</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"   \u00a0%(%4d%)<span class=\"es1\">\\n</span>%s\"</span><span class=\"sy0\">,</span> iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> n<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-\"</span>.<span class=\"me1\">replicate</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">*</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> y<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">n</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"%4d\"</span> <span class=\"sy0\">~</span> <span class=\"st0\">\" \"</span>.<span class=\"me1\">replicate</span><span class=\"br0\">(</span><span class=\"nu0\">4</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"%(%4d%)\"</span><span class=\"sy0\">,</span> y<span class=\"sy0\">,</span><br/>                 iota<span class=\"br0\">(</span>y<span class=\"sy0\">,</span> n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> x <span class=\"sy0\">*</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "DCL", "loc": 26, "block": "<pre class=\"dcl highlighted_source\">$ max <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/>$ h <span class=\"sy0\">=</span> <span class=\"kw2\">f$fao</span><span class=\"br0\">(</span> <span class=\"st0\">\"!4* \"</span> <span class=\"br0\">)</span><br/>$ r <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>$ loop1:<br/>$  o <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>$  c <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>$  loop2:<br/>$   <span class=\"kw1\">if</span> r <span class=\"sy0\">.eq.</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> $ h <span class=\"sy0\">=</span> h + <span class=\"kw2\">f$fao</span><span class=\"br0\">(</span> <span class=\"st0\">\"!4SL\"</span>, c <span class=\"br0\">)</span><br/>$   p <span class=\"sy0\">=</span> r * c<br/>$   <span class=\"kw1\">if</span> c <span class=\"sy0\">.ge.</span> r<br/>$   <span class=\"kw1\">then</span><br/>$    o <span class=\"sy0\">=</span> o + <span class=\"kw2\">f$fao</span><span class=\"br0\">(</span> <span class=\"st0\">\"!4SL\"</span>, p <span class=\"br0\">)</span><br/>$   <span class=\"kw1\">else</span><br/>$    o <span class=\"sy0\">=</span> o + <span class=\"kw2\">f$fao</span><span class=\"br0\">(</span> <span class=\"st0\">\"!4* \"</span> <span class=\"br0\">)</span><br/>$   <span class=\"kw1\">endif</span><br/>$   c <span class=\"sy0\">=</span> c + <span class=\"nu0\">1</span><br/>$   <span class=\"kw1\">if</span> c <span class=\"sy0\">.le.</span> max <span class=\"kw1\">then</span> $ <span class=\"kw1\">goto</span> loop2<br/>$  <span class=\"kw1\">if</span> r <span class=\"sy0\">.eq.</span> <span class=\"nu0\">0</span><br/>$  <span class=\"kw1\">then</span><br/>$   <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> h<br/>$   n <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> * <span class=\"br0\">(</span> max + <span class=\"nu0\">2</span> <span class=\"br0\">)</span><br/>$   <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"kw2\">f$fao</span><span class=\"br0\">(</span> <span class=\"st0\">\"!''n*-\"</span> <span class=\"br0\">)</span><br/>$  <span class=\"kw1\">endif</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"kw2\">f$fao</span><span class=\"br0\">(</span> <span class=\"st0\">\"!4SL\"</span>, r <span class=\"br0\">)</span> + o<br/>$  r <span class=\"sy0\">=</span> r + <span class=\"nu0\">1</span><br/>$  <span class=\"kw1\">if</span> r <span class=\"sy0\">.le.</span> max <span class=\"kw1\">then</span> $ <span class=\"kw1\">goto</span> loop1</pre>"}, {"lang": "Delphi", "loc": 30, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> MultiplicationTables<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">const</span><br/>  MAX_COUNT <span class=\"sy3\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  lRow<span class=\"sy1\">,</span> lCol<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">'  | '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> lRow <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MAX_COUNT <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">Write</span><span class=\"br0\">(</span><span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%4d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>lRow<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'--+-'</span> <span class=\"sy3\">+</span> <span class=\"kw3\">StringOfChar</span><span class=\"br0\">(</span><span class=\"st0\">'-'</span><span class=\"sy1\">,</span> MAX_COUNT <span class=\"sy3\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> lRow <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MAX_COUNT <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    <span class=\"kw1\">Write</span><span class=\"br0\">(</span><span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%2d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>lRow<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">'| '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">for</span> lCol <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> MAX_COUNT <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> lCol &lt; lRow <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">'    '</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">Write</span><span class=\"br0\">(</span><span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%4d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>lRow <span class=\"sy3\">*</span> lCol<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>    Writeln<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "DWScript", "loc": 19, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">const</span> size <span class=\"sy3\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span> row<span class=\"sy1\">,</span> col <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/>Print<span class=\"br0\">(</span><span class=\"st0\">'  | '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">for</span> row<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> size <span class=\"kw1\">do</span><br/>   Print<span class=\"br0\">(</span><span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%4d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>PrintLn<span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>PrintLn<span class=\"br0\">(</span><span class=\"st0\">'--+-'</span><span class=\"sy3\">+</span><span class=\"kw3\">StringOfChar</span><span class=\"br0\">(</span><span class=\"st0\">'-'</span><span class=\"sy1\">,</span> size<span class=\"sy3\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">for</span> row<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> size <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>   Print<span class=\"br0\">(</span><span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%2d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   Print<span class=\"br0\">(</span><span class=\"st0\">'| '</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">for</span> col<span class=\"sy1\">:</span><span class=\"sy3\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> size <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">if</span> col&lt;row <span class=\"kw1\">then</span><br/>         Print<span class=\"br0\">(</span><span class=\"st0\">'    '</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span> Print<span class=\"br0\">(</span><span class=\"kw3\">Format</span><span class=\"br0\">(</span><span class=\"st0\">'%4d'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>row<span class=\"sy3\">*</span>col<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>   PrintLn<span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0</pre>"}, {"lang": "E", "loc": 14, "block": "<pre class=\"e highlighted_source\">  <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> size <span class=\"sy0\">:=</span> <span class=\"nu0\">12</span><br/>  <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`{|style=\"border-collapse: collapse; text-align: right;\"`</span><span class=\"br0\">)</span><br/>  <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`|`</span><span class=\"br0\">)</span><br/>  <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> x <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">1</span>..<span class=\"me1\">size</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`|style=\"border-bottom: 1px solid black; \" | $x`</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> y <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">1</span>..<span class=\"me1\">size</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`|-`</span><span class=\"br0\">)</span><br/>      <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`|style=\"border-right: 1px solid black;\" | $y`</span><span class=\"br0\">)</span><br/>    <a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> x <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">1</span>..<span class=\"me1\">size</span> <span class=\"br0\">{</span><br/>      <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">`| &amp;nbsp;${if (x &gt;= y) { x*y } else {\"\"}}`</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><span class=\"st0\">\"|}\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "EchoLisp", "loc": 14, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'matrix<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>mtable i j<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> i<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> j<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"\ud83d\ude05\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> i <span class=\"nu0\">0</span><span class=\"br0\">)</span> j<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> j <span class=\"nu0\">0</span><span class=\"br0\">)</span> i<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> j i <span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> i j <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">else</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>array<span class=\"sy0\">-</span>print <span class=\"br0\">(</span>build<span class=\"sy0\">-</span>array <span class=\"nu0\">13</span> <span class=\"nu0\">13</span> mtable<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 16, "block": "<pre class=\"text highlighted_source\">defmodule RC do<br/>  def multiplication_tables(n) do<br/>    IO.write \" X |\"<br/>    Enum.each(1..n, fn i -&gt;\u00a0:io.fwrite(\"~4B\", [i]) end)<br/>    IO.puts \"\\n---+\" &lt;&gt; String.duplicate(\"----\", n)<br/>    Enum.each(1..n, fn j -&gt;<br/>     \u00a0:io.fwrite(\"~2B |\", [j])<br/>      Enum.each(1..n, fn i -&gt;<br/>        if i&lt;j, do: (IO.write \"    \"), else:\u00a0:io.fwrite(\"~4B\", [i*j]) <br/>      end)<br/>      IO.puts \"\"<br/>    end)<br/>  end<br/>end<br/>\u00a0<br/>RC.multiplication_tables(12)</pre>"}, {"lang": "Erlang", "loc": 26, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> multiplication_tables <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>print_upto<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> upto<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">print_upto</span><span class=\"br0\">(</span> <span class=\"re5\">N</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Upto_tuples</span> <span class=\"sy3\">=</span> <span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">Y</span><span class=\"sy1\">,</span> <span class=\"re5\">Sum</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy3\">||</span> <span class=\"br0\">{</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span><span class=\"sy1\">,</span> <span class=\"re5\">Sum</span><span class=\"br0\">}</span> <span class=\"sy3\">&lt;-</span> <span class=\"re3\">upto</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"  \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~5B\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">X</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">nl</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">nl</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"re3\">print_upto</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/proplists.html\"><span class=\"kw5\">proplists</span></a>:<span class=\"kw3\">get</span>_<span class=\"re3\">all_values</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Upto_tuples</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">print_upto</span><span class=\"br0\">(</span> <span class=\"nu0\">12</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">upto</span><span class=\"br0\">(</span> <span class=\"re5\">N</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span><span class=\"sy1\">,</span> <span class=\"re5\">X</span><span class=\"sy3\">*</span><span class=\"re5\">Y</span><span class=\"br0\">}</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Y</span> <span class=\"sy3\">&gt;=</span> <span class=\"re5\">X</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">print_upto</span><span class=\"br0\">(</span> <span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">Uptos</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~2B\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">N</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~*s\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy3\">*</span><span class=\"br0\">(</span><span class=\"re5\">N</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"~5B\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Sum</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"br0\">{</span><span class=\"re5\">_Y</span><span class=\"sy1\">,</span> <span class=\"re5\">Sum</span><span class=\"br0\">}</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Uptos</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">nl</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 18, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\" x\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"\u00a0%3d\"</span><span class=\"sy2\">,</span>i<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/><span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%2d\"</span><span class=\"sy2\">,</span>i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">for</span> j <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">if</span> j&lt;i <span class=\"kw1\">then</span><br/>      <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"    \"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"\u00a0%3d\"</span><span class=\"sy2\">,</span>i<span class=\"sy1\">*</span>j<span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>  <span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span></pre>"}, {"lang": "F#", "loc": 21, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"kw1\">open</span> System<br/>\u00a0<br/><span class=\"kw1\">let</span> multTable <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    Console.<span class=\"me1\">Write</span> <span class=\"br0\">(</span><span class=\"st0\">\" X\"</span>.<span class=\"me1\">PadRight</span> <span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span> Console.<span class=\"me1\">Write</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i.<span class=\"me1\">ToString</span> <span class=\"st0\">\"####\"</span><span class=\"br0\">)</span>.<span class=\"me1\">PadLeft</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    Console.<span class=\"me1\">Write</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span> ___\"</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span> Console.<span class=\"me1\">Write</span> <span class=\"st0\">\" ___\"</span><br/>    Console.<span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> row <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>        Console.<span class=\"me1\">Write</span> <span class=\"br0\">(</span>row.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"###\"</span><span class=\"br0\">)</span>.<span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>.<span class=\"me1\">PadRight</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> col <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">if</span> row <span class=\"sy0\">&lt;=</span> col <span class=\"kw1\">then</span> Console.<span class=\"me1\">Write</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>row <span class=\"sy0\">*</span> col<span class=\"br0\">)</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"st0\">\"###\"</span><span class=\"br0\">)</span>.<span class=\"me1\">PadLeft</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">else</span><br/>                Console.<span class=\"me1\">Write</span> <span class=\"br0\">(</span><span class=\"st0\">\"\"</span>.<span class=\"me1\">PadLeft</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>        Console.<span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    Console.<span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    Console.<span class=\"me1\">ReadKey</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|&gt;</span> <span class=\"kw3\">ignore</span><br/>\u00a0<br/>multTable <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 17, "block": "<pre class=\"text highlighted_source\">USING: io kernel math math.parser math.ranges sequences\u00a0;<br/>IN: multiplication-table<br/>\u00a0<br/>: print-row ( n -- )<br/>    [ number&gt;string 2 CHAR: space pad-head write \" |\" write ]<br/>    [ 1 - [ \"    \" write ] times ]<br/>    [<br/>        dup 12 [a,b]<br/>        [ * number&gt;string 4 CHAR: space pad-head write ] with each<br/>    ] tri nl\u00a0;<br/>\u00a0<br/>: print-table ( -- )<br/>    \"    \" write<br/>    1 12 [a,b] [ number&gt;string 4 CHAR: space pad-head write ] each nl<br/>    \"   +\" write<br/>    12 [ \"----\" write ] times nl<br/>    1 12 [a,b] [ print-row ] each\u00a0;</pre>"}, {"lang": "FALSE", "loc": 4, "block": "<pre class=\"text highlighted_source\">[$100\\&gt;[\" \"]?$10\\&gt;[\" \"]?.\" \"]p:<br/>[$p;! m: 2[$m;\\&gt;][\"    \"1+]# [$13\\&gt;][$m;*p;!1+]#%\"<br/>\"]l:<br/>1[$13\\&gt;][$l;!1+]#%</pre>"}, {"lang": "Fantom", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>class Main<br/>{<br/>  static Void multiplicationTable (Int n)<br/>  {<br/>    // print column headings<br/>    echo (\"    |\" + (1..n).map |Int a -&gt; Str| { a.toStr.padl(4)}.join(\"\") )<br/>    echo (\"-----\" + (1..n).map { \"----\" }.join(\"\") )<br/>    // work through each row<br/>    (1..n).each |i|<br/>    {<br/>      echo ( i.toStr.padl(4) + \"|\" +<br/>             Str.spaces(4*(i-1)) + <br/>             (i..n).map |Int j -&gt; Str| { (i*j).toStr.padl(4)}.join(\"\") )<br/>    }<br/>  }<br/>\u00a0<br/>  public static Void main ()<br/>  {<br/>    multiplicationTable (12)<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 11, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>: multiplication-table<br/>  cr 2 spaces  13 2 do i 4 u.r loop<br/>  cr<br/>  13 2 do<br/>    cr i 2 u.r<br/>    13 2 do<br/>      i j &lt; if 4 spaces else i j * 4 u.r then<br/>    loop<br/>  loop\u00a0;<br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 19, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> multtable<br/><span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, j, k<br/>\u00a0<br/>    write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\" x|   1   2   3   4   5   6   7   8   9  10  11  12\"</span><br/>    write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"--+------------------------------------------------\"</span><br/>    <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">12</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(i2, a)\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"br0\">)</span> i, <span class=\"st0\">\"|\"</span><br/>\t<span class=\"kw1\">do</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, i<br/>    \t  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(a4)\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"\"</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>    \t<span class=\"kw1\">do</span> j <span class=\"sy0\">=</span> i, <span class=\"nu0\">12</span><br/>          write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(i4)\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"br0\">)</span> i<span class=\"sy0\">*</span>j<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>        write<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> multtable</pre>"}, {"lang": "FreeBASIC", "loc": 23, "block": "<pre class=\"freebasic highlighted_source\">\u00a0<br/><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"  X|\"</span>;<br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"####\"</span>; i;<br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"---+\"</span>; <span class=\"kw1\">String</span><span class=\"br0\">(</span><span class=\"nu0\">48</span>, <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"###\"</span>; i; <br/>  <span class=\"kw1\">Print</span><span class=\"st0\">\"|\"</span>; <span class=\"kw1\">Spc</span><span class=\"br0\">(</span><span class=\"nu0\">4</span> * <span class=\"br0\">(</span>i - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">For</span> j <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = i <span class=\"kw1\">To</span> <span class=\"nu0\">12</span>   <br/>    <span class=\"kw1\">Print</span> <span class=\"kw1\">Using</span> <span class=\"st0\">\"####\"</span>; i * j;<br/>  <span class=\"kw1\">Next</span> j <br/>  <span class=\"kw1\">Print</span><br/><span class=\"kw1\">Next</span> i<br/>\u00a0<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Gambas", "loc": 23, "block": "<pre class=\"gambas highlighted_source\"><span class=\"co1\">'Code 'stolen' from Free Basic and altered to work in Gambas</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> i, j <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/integer\"><span class=\"kw4\">Integer</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"  X|\"</span>;<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">12</span><br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span>i, <span class=\"st0\">\"####\"</span><span class=\"br0\">)</span>;<br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a><br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"---+\"</span>; <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">(</span><span class=\"nu0\">48</span>, <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">12</span><br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span>i, <span class=\"st0\">\"###\"</span><span class=\"br0\">)</span>;<br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"|\"</span>; <a href=\"http://gambasdoc.org/help/lang/space\"><span class=\"kw2\">Space</span></a><span class=\"br0\">(</span><span class=\"nu0\">4</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> j <span class=\"sy0\">=</span> i <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">12</span><br/>    <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> j, <span class=\"st0\">\"####\"</span><span class=\"br0\">)</span>; <br/>  <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a>  <br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a> <br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 29, "block": "<pre class=\"go highlighted_source\">\u00a0<br/><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Print<span class=\"sy1\">(</span><span class=\"st0\">\" x |\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%4d\"</span><span class=\"sy1\">,</span> i<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Print</span><span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>---+\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Print<span class=\"sy1\">(</span><span class=\"st0\">\"----\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> j &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>%2d |\"</span><span class=\"sy1\">,</span> j<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">12</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"nu2\">i</span> &gt;<span class=\"sy2\">=</span> j <span class=\"sy1\">{</span><br/>                fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%4d\"</span><span class=\"sy1\">,</span> <span class=\"nu2\">i</span><span class=\"sy3\">*</span>j<span class=\"sy1\">)</span><br/>            <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>                fmt<span class=\"sy3\">.</span>Print<span class=\"sy1\">(</span><span class=\"st0\">\"    \"</span><span class=\"sy1\">)</span><br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0</pre>"}, {"lang": "Groovy", "loc": 19, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> printMultTable <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20assert\"><span class=\"kw2\">assert</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>    <span class=\"co1\">// factor1 line</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20print\"><span class=\"kw8\">print</span></a> <span class=\"st0\">'  |'</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a> <span class=\"br0\">{</span> f1 <span class=\"sy0\">-&gt;</span> printf<span class=\"br0\">(</span><span class=\"st0\">'%4d'</span>, f1<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">''</span><br/>\u00a0<br/>    <span class=\"co1\">// dividing line</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20print\"><span class=\"kw8\">print</span></a> <span class=\"st0\">'--+'</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a> <span class=\"br0\">{</span> printf<span class=\"br0\">(</span><span class=\"st0\">'----'</span>, it<span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">''</span><br/>\u00a0<br/>    <span class=\"co1\">// factor2 result lines</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a> <span class=\"br0\">{</span> f2 <span class=\"sy0\">-&gt;</span><br/>        printf<span class=\"br0\">(</span><span class=\"st0\">'%2d|'</span>, f2<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"sy0\">&lt;</span>f2<span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20print\"><span class=\"kw8\">print</span></a> <span class=\"st0\">'    '</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">(</span>f2..<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20each\"><span class=\"kw5\">each</span></a><span class=\"br0\">{</span> f1 <span class=\"sy0\">-&gt;</span> printf<span class=\"br0\">(</span><span class=\"st0\">'%4d'</span>, f1<span class=\"sy0\">*</span>f2<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>        <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">''</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>printMultTable<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "GW-BASIC", "loc": 19, "block": "<pre class=\"qbasic highlighted_source\"><span class=\"co3\"><br/>10</span>  <span class=\"co1\">' Multiplication Tables</span><br/><span class=\"co3\">20</span>  <a href=\"http://www.qbasicnews.com/qboho/qcklet.shtml\"><span class=\"kw3\">LET</span></a> N% <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/><span class=\"co3\">30</span>  <span class=\"kw1\">FOR</span> J% <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> N% <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/><span class=\"co3\">40</span>   <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckusing.shtml\"><span class=\"kw3\">USING</span></a> <span class=\"st0\">\"###\"</span>; J%; <br/><span class=\"co3\">50</span>   <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\" \"</span>;<br/><span class=\"co3\">60</span>  <span class=\"kw1\">NEXT</span> J%<br/><span class=\"co3\">70</span>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckusing.shtml\"><span class=\"kw3\">USING</span></a> <span class=\"st0\">\"###\"</span>; N%<br/><span class=\"co3\">80</span>  <span class=\"kw1\">FOR</span> J% <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> N% <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/><span class=\"co3\">90</span>   <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"----\"</span>;<br/><span class=\"co3\">100</span> <span class=\"kw1\">NEXT</span> J%<br/><span class=\"co3\">110</span> <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"+\"</span><br/><span class=\"co3\">120</span> <span class=\"kw1\">FOR</span> I% <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> N% <br/><span class=\"co3\">130</span>  <span class=\"kw1\">FOR</span> J% <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> N%<br/><span class=\"co3\">140</span>   <span class=\"kw1\">IF</span> J% <span class=\"sy0\">&lt;</span> I% <span class=\"kw1\">THEN</span> <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"    \"</span>; <span class=\"kw1\">ELSE</span> <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckusing.shtml\"><span class=\"kw3\">USING</span></a> <span class=\"st0\">\"###\"</span>; I% <span class=\"sy0\">*</span> J%;: <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\" \"</span>;<br/><span class=\"co3\">150</span>  <span class=\"kw1\">NEXT</span> J%<br/><span class=\"co3\">160</span>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"| \"</span>; <a href=\"http://www.qbasicnews.com/qboho/qckusing.shtml\"><span class=\"kw3\">USING</span></a> <span class=\"st0\">\"##\"</span>; I%<br/><span class=\"co3\">170</span> <span class=\"kw1\">NEXT</span> I%<br/>\u00a0</pre>"}, {"lang": "Haskell", "loc": 26, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Monoid <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span>intercalate<span class=\"sy0\">,</span> transpose<span class=\"br0\">)</span><br/>\u00a0<br/>multTable <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>multTable n <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> xs <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> n<span class=\"br0\">]</span><br/>  <span class=\"kw1\">in</span> xs <span class=\"sy0\">&gt;&gt;=</span><br/>     \\x <span class=\"sy0\">-&gt;</span><br/>        <span class=\"br0\">[</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> x <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\":\"</span>\u00a0:<br/>          <span class=\"br0\">(</span>xs <span class=\"sy0\">&gt;&gt;=</span><br/>           \\y <span class=\"sy0\">-&gt;</span><br/>              <span class=\"br0\">[</span> <span class=\"kw1\">if</span> y <span class=\"sy0\">&lt;</span> x<br/>                  <span class=\"kw1\">then</span> mempty<br/>                  <span class=\"kw1\">else</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>x <span class=\"sy0\">*</span> y<span class=\"br0\">)</span><br/>              <span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">]</span><br/>\u00a0<br/>table <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><br/>table delim rows <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> justifyRight c n s <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:drop\"><span class=\"kw3\">drop</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> s<span class=\"br0\">)</span> <span class=\"br0\">(</span>replicate n c <span class=\"sy0\">&lt;&gt;</span> s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">in</span> intercalate delim <span class=\"sy0\">&lt;$&gt;</span><br/>     transpose<br/>       <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"sy0\">=&lt;&lt;</span> justifyRight <span class=\"st0\">' '</span> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:maximum\"><span class=\"kw3\">maximum</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a><span class=\"br0\">)</span> <span class=\"sy0\">&lt;$&gt;</span> transpose rows<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unlines\"><span class=\"kw3\">unlines</span></a> <span class=\"sy0\">.</span> table <span class=\"st0\">\"  \"</span> <span class=\"sy0\">.</span> multTable<span class=\"br0\">)</span> <span class=\"nu0\">12</span></pre>"}, {"lang": "HicEst", "loc": 7, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Row<span class=\"sy1\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"st0\">\" x   1   2   3   4   5   6   7   8   9  10  11  12\"</span><br/><span class=\"kw1\">DO</span> <span class=\"kw1\">line</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><br/>  <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Row<span class=\"sy1\">=</span><span class=\"kw1\">line</span><span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> Format<span class=\"sy1\">=</span><span class=\"st0\">'i2'</span><span class=\"br0\">)</span> <span class=\"kw1\">line</span><br/>  <span class=\"kw1\">DO</span> col <span class=\"sy1\">=</span> <span class=\"kw1\">line</span><span class=\"sy1\">,</span> <span class=\"nu0\">12</span><br/>    <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Row<span class=\"sy1\">=</span><span class=\"kw1\">line</span><span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> Column<span class=\"sy1\">=</span><span class=\"nu0\">4</span><span class=\"sy1\">*</span>col<span class=\"sy1\">,</span> Format<span class=\"sy1\">=</span><span class=\"st0\">'i3'</span><span class=\"br0\">)</span> <span class=\"kw1\">line</span><span class=\"sy1\">*</span>col<br/>  <span class=\"kw1\">ENDDO</span><br/><span class=\"kw1\">ENDDO</span></pre>"}, {"lang": "HolyC", "loc": 21, "block": "<pre class=\"text highlighted_source\">U8 i, j, n = 12;<br/>for (j = 1; j &lt;= n; j++)<br/>  if (j\u00a0!= n)<br/>    Print(\"%3d%c\", j, ' ');<br/>  else<br/>    Print(\"%3d%c\", j, '\\n');<br/>\u00a0<br/>for (j = 0; j &lt;= n; j++)<br/>  if (j\u00a0!= n)<br/>    Print(\"----\");<br/>  else<br/>    Print(\"+\\n\");<br/>\u00a0<br/>for (i = 1; i &lt;= n; i++) {<br/>  for (j = 1; j &lt;= n; j++)<br/>    if (j &lt; i)<br/>      Print(\"    \");<br/>    else<br/>      Print(\"%3d \", i * j);<br/>  Print(\"|\u00a0%d\\n\", i);<br/>}</pre>"}, {"lang": "Icon and Unicon", "loc": 7, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>lim <span class=\"sy1\">:=</span> <span class=\"nu0\">13</span> <br/>wid <span class=\"sy1\">:=</span>  <span class=\"nu0\">5</span><br/><span class=\"kw1\">every</span> <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span><span class=\"st0\">\"* |\"</span> <span class=\"sy1\">|</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> lim<span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>wid<span class=\"br0\">)</span><span class=\"sy1\">|</span><span class=\"kw4\">right</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>wid<span class=\"sy1\">*</span><span class=\"br0\">(</span>lim<span class=\"sy1\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\"_\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>         <span class=\"co1\"># header row and separator </span><br/><span class=\"kw1\">every</span> <span class=\"br0\">(</span>i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> lim<span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> <br/>   <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"kw4\">right</span><span class=\"br0\">(</span> i<span class=\"sy1\">||</span><span class=\"st0\">\" |\"</span> <span class=\"sy1\">|</span> <span class=\"br0\">(</span>j <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> lim<span class=\"sy1\">,</span> <span class=\"kw1\">if</span> j <span class=\"sy1\">&lt;</span> i <span class=\"kw1\">then</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">else</span> i<span class=\"sy1\">*</span>j<span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span>wid<span class=\"br0\">)</span><span class=\"br0\">)</span>     <span class=\"co1\"># table content and triangle</span><br/><span class=\"kw1\">end</span> </pre>"}, {"lang": "J", "loc": 19, "block": "<pre class=\"j highlighted_source\">   multtable=: &lt;:/~ * */~<br/>   format=: <span class=\"st_h\">'b4.0'</span> <span class=\"nu0\">8</span>!:<span class=\"nu0\">2</span> ]<br/>   <span class=\"sy0\">((</span><span class=\"st_h\">'*'</span>\u00a0; ,.<span class=\"sy0\">)</span> ,. <span class=\"sy0\">(</span>{.\u00a0; ]<span class=\"sy0\">)</span>@<a class=\"__cf_email__\" data-cfemail=\"c1a7aeb3aca0b581acb4adb5b5a0a3ada4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">)</span> &gt;:i.<span class=\"nu0\">12</span><br/>\u250c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510<br/>\u2502* \u2502   <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>   <span class=\"nu0\">3</span>   <span class=\"nu0\">4</span>   <span class=\"nu0\">5</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">7</span>   <span class=\"nu0\">8</span>   <span class=\"nu0\">9</span>  <span class=\"nu0\">10</span>  <span class=\"nu0\">11</span>  <span class=\"nu0\">12</span>\u2502<br/>\u251c\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524<br/>\u2502 <span class=\"nu0\">1</span>\u2502   <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>   <span class=\"nu0\">3</span>   <span class=\"nu0\">4</span>   <span class=\"nu0\">5</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">7</span>   <span class=\"nu0\">8</span>   <span class=\"nu0\">9</span>  <span class=\"nu0\">10</span>  <span class=\"nu0\">11</span>  <span class=\"nu0\">12</span>\u2502<br/>\u2502 <span class=\"nu0\">2</span>\u2502       <span class=\"nu0\">4</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">8</span>  <span class=\"nu0\">10</span>  <span class=\"nu0\">12</span>  <span class=\"nu0\">14</span>  <span class=\"nu0\">16</span>  <span class=\"nu0\">18</span>  <span class=\"nu0\">20</span>  <span class=\"nu0\">22</span>  <span class=\"nu0\">24</span>\u2502<br/>\u2502 <span class=\"nu0\">3</span>\u2502           <span class=\"nu0\">9</span>  <span class=\"nu0\">12</span>  <span class=\"nu0\">15</span>  <span class=\"nu0\">18</span>  <span class=\"nu0\">21</span>  <span class=\"nu0\">24</span>  <span class=\"nu0\">27</span>  <span class=\"nu0\">30</span>  <span class=\"nu0\">33</span>  <span class=\"nu0\">36</span>\u2502<br/>\u2502 <span class=\"nu0\">4</span>\u2502              <span class=\"nu0\">16</span>  <span class=\"nu0\">20</span>  <span class=\"nu0\">24</span>  <span class=\"nu0\">28</span>  <span class=\"nu0\">32</span>  <span class=\"nu0\">36</span>  <span class=\"nu0\">40</span>  <span class=\"nu0\">44</span>  <span class=\"nu0\">48</span>\u2502<br/>\u2502 <span class=\"nu0\">5</span>\u2502                  <span class=\"nu0\">25</span>  <span class=\"nu0\">30</span>  <span class=\"nu0\">35</span>  <span class=\"nu0\">40</span>  <span class=\"nu0\">45</span>  <span class=\"nu0\">50</span>  <span class=\"nu0\">55</span>  <span class=\"nu0\">60</span>\u2502<br/>\u2502 <span class=\"nu0\">6</span>\u2502                      <span class=\"nu0\">36</span>  <span class=\"nu0\">42</span>  <span class=\"nu0\">48</span>  <span class=\"nu0\">54</span>  <span class=\"nu0\">60</span>  <span class=\"nu0\">66</span>  <span class=\"nu0\">72</span>\u2502<br/>\u2502 <span class=\"nu0\">7</span>\u2502                          <span class=\"nu0\">49</span>  <span class=\"nu0\">56</span>  <span class=\"nu0\">63</span>  <span class=\"nu0\">70</span>  <span class=\"nu0\">77</span>  <span class=\"nu0\">84</span>\u2502<br/>\u2502 <span class=\"nu0\">8</span>\u2502                              <span class=\"nu0\">64</span>  <span class=\"nu0\">72</span>  <span class=\"nu0\">80</span>  <span class=\"nu0\">88</span>  <span class=\"nu0\">96</span>\u2502<br/>\u2502 <span class=\"nu0\">9</span>\u2502                                  <span class=\"nu0\">81</span>  <span class=\"nu0\">90</span>  <span class=\"nu0\">99</span> <span class=\"nu0\">108</span>\u2502<br/>\u2502<span class=\"nu0\">10</span>\u2502                                     <span class=\"nu0\">100</span> <span class=\"nu0\">110</span> <span class=\"nu0\">120</span>\u2502<br/>\u2502<span class=\"nu0\">11</span>\u2502                                         <span class=\"nu0\">121</span> <span class=\"nu0\">132</span>\u2502<br/>\u2502<span class=\"nu0\">12</span>\u2502                                             <span class=\"nu0\">144</span>\u2502<br/>\u2514\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518</pre>"}, {"lang": "Java", "loc": 20, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> MultiplicationTable <span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&gt;=</span> i<span class=\"br0\">)</span><br/>                    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> i <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 52, "block": "<pre class=\"html4strict highlighted_source\"><span class=\"sc0\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/head.html\"><span class=\"kw2\">head</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/meta.html\"><span class=\"kw2\">meta</span></a> <span class=\"kw3\">http-equiv</span><span class=\"sy0\">=</span><span class=\"st0\">\"Content-Type\"</span> <span class=\"kw3\">content</span><span class=\"sy0\">=</span><span class=\"st0\">\"text/html;charset=utf-8\"</span> &gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/title.html\"><span class=\"kw2\">title</span></a>&gt;</span>12 times table<span class=\"sc2\">&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/title.html\"><span class=\"kw2\">title</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/script.html\"><span class=\"kw2\">script</span></a> <span class=\"kw3\">type</span><span class=\"sy0\">=</span><span class=\"st0\">'text/javascript'</span>&gt;</span><br/>\u00a0<br/>    function multiplication_table(n, target) {<br/>        var table = document.createElement('table');<br/>\u00a0<br/>        var row = document.createElement('tr');<br/>        var cell = document.createElement('th');<br/>        cell.appendChild(document.createTextNode('x'));<br/>        row.appendChild(cell);<br/>        for (var x = 1; x <span class=\"sc2\">&lt;<span class=\"sy0\">=</span>n; x++<span class=\"br0\">)</span> <span class=\"br0\">{</span></span><br/><span class=\"sc2\">            cell <span class=\"sy0\">=</span> document.createElement<span class=\"br0\">(</span><span class=\"st0\">'th'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            cell.appendChild<span class=\"br0\">(</span>document.createTextNode<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            row.appendChild<span class=\"br0\">(</span>cell<span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">        <span class=\"br0\">}</span></span><br/><span class=\"sc2\">        table.appendChild<span class=\"br0\">(</span>row<span class=\"br0\">)</span>;</span><br/>\u00a0<br/><span class=\"sc2\">        <span class=\"kw3\">for</span> <span class=\"br0\">(</span>var x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; x &lt;<span class=\"sy0\">=</span>n; x++<span class=\"br0\">)</span> <span class=\"br0\">{</span></span><br/><span class=\"sc2\">            row <span class=\"sy0\">=</span> document.createElement<span class=\"br0\">(</span><span class=\"st0\">'tr'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            cell <span class=\"sy0\">=</span> document.createElement<span class=\"br0\">(</span><span class=\"st0\">'th'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            cell.appendChild<span class=\"br0\">(</span>document.createTextNode<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            row.appendChild<span class=\"br0\">(</span>cell<span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            var y;</span><br/><span class=\"sc2\">            <span class=\"kw3\">for</span> <span class=\"br0\">(</span>y <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; y &lt; x; y++<span class=\"br0\">)</span> <span class=\"br0\">{</span></span><br/><span class=\"sc2\">                cell <span class=\"sy0\">=</span> document.createElement<span class=\"br0\">(</span><span class=\"st0\">'td'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">                cell.appendChild<span class=\"br0\">(</span>document.createTextNode<span class=\"br0\">(</span><span class=\"st0\">'\\u00a0'</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">                row.appendChild<span class=\"br0\">(</span>cell<span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            <span class=\"br0\">}</span></span><br/><span class=\"sc2\">            <span class=\"kw3\">for</span> <span class=\"br0\">(</span>; y &lt;<span class=\"sy0\">=</span> n; y++<span class=\"br0\">)</span> <span class=\"br0\">{</span></span><br/><span class=\"sc2\">                cell <span class=\"sy0\">=</span> document.createElement<span class=\"br0\">(</span><span class=\"st0\">'td'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">                cell.appendChild<span class=\"br0\">(</span>document.createTextNode<span class=\"br0\">(</span>x*y<span class=\"br0\">)</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">                row.appendChild<span class=\"br0\">(</span>cell<span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">            <span class=\"br0\">}</span></span><br/><span class=\"sc2\">            table.appendChild<span class=\"br0\">(</span>row<span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">        <span class=\"br0\">}</span></span><br/><span class=\"sc2\">        <span class=\"kw3\">target</span>.appendChild<span class=\"br0\">(</span>table<span class=\"br0\">)</span>;</span><br/><span class=\"sc2\">    <span class=\"br0\">}</span></span><br/>\u00a0<br/><span class=\"sc2\">&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/script.html\"><span class=\"kw2\">script</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/style.html\"><span class=\"kw2\">style</span></a> <span class=\"kw3\">type</span><span class=\"sy0\">=</span><span class=\"st0\">'text/css'</span>&gt;</span><br/>    body {font-family: sans-serif;}<br/>    table {border-collapse: collapse;}<br/>    th, td {border: 1px solid black; text-align: right; width: 4ex;}<br/><span class=\"sc2\">&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/style.html\"><span class=\"kw2\">style</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/head.html\"><span class=\"kw2\">head</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/body.html\"><span class=\"kw2\">body</span></a> <span class=\"kw3\">onload</span><span class=\"sy0\">=</span><span class=\"st0\">\"multiplication_table(12, document.getElementById('target'));\"</span>&gt;</span><br/><span class=\"sc2\">&lt;<a href=\"http://december.com/html/4/element/div.html\"><span class=\"kw2\">div</span></a> <span class=\"kw3\">id</span><span class=\"sy0\">=</span><span class=\"st0\">'target'</span>&gt;&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/div.html\"><span class=\"kw2\">div</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/body.html\"><span class=\"kw2\">body</span></a>&gt;</span><br/><span class=\"sc2\">&lt;<span class=\"sy0\">/</span><a href=\"http://december.com/html/4/element/html.html\"><span class=\"kw2\">html</span></a>&gt;</span></pre>"}, {"lang": "Julia", "loc": 12, "block": "<pre class=\"text highlighted_source\">println(\" X |   1   2   3   4   5   6   7   8   9  10  11  12\")<br/>println(\"---+------------------------------------------------\")<br/>\u00a0<br/>for i=1:12, j=0:12<br/>    if j == 0<br/>        @printf(\"%2d | \", i)<br/>    elseif i &lt;= j<br/>        @printf(\"%3d%c\", i * j, j == 12\u00a0? '\\n'\u00a0: ' ')<br/>    else<br/>        print(\"    \")<br/>    end<br/>end</pre>"}, {"lang": "Kotlin", "loc": 12, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    print<span class=\"br0\">(</span><span class=\"st0\">\"  x|\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"%4d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>---+${\"</span>-<span class=\"st0\">\".repeat(48)}\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>        print<span class=\"br0\">(</span><span class=\"st0\">\"%3d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> +<span class=\"st0\">\"|${\"</span> <span class=\"st0\">\".repeat(4 * i - 4)}\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in i..<span class=\"nu0\">12</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"%4d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 29, "block": "<pre class=\"text highlighted_source\">define printTimesTables(max::integer) =&gt; {<br/>    local(result)  = ``<br/>    local(padSize) = string(#max*#max)-&gt;size + 1<br/>\u00a0<br/>    // Print header row<br/>    #result-&gt;append((' ' * #padSize) + '|')<br/>    loop(#max) =&gt; {<br/>        #result-&gt;append(loop_count-&gt;asString(-padding=#padSize))<br/>    }<br/>    #result-&gt;append(\"\\n\" + (`-` * #padSize) + '+' + (`-` * (#padSize * #max)))<br/>\u00a0<br/>    with left in 1 to #max do {<br/>        // left column<br/>        #result-&gt;append(\"\\n\" + #left-&gt;asString(-padding=#padSize) + '|')<br/>\u00a0<br/>        // Table results<br/>        with right in 1 to #max do {<br/>            #result-&gt;append(<br/>                #right &lt; #left<br/>                   \u00a0? ' ' * #padSize<br/>                    | (#left * #right)-&gt;asString(-padding=#padSize)<br/>            )<br/>        }<br/>    }<br/>\u00a0<br/>    return #result<br/>}<br/>\u00a0<br/>printTimesTables(12)</pre>"}, {"lang": "Liberty BASIC", "loc": 17, "block": "<pre class=\"lb highlighted_source\"><span class=\"kw1\">Print</span> <span class=\"st0\">\"  |    1    2    3    4    5    6    7    8    9   10   11   12\"</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"--+------------------------------------------------------------\"</span><br/>\u00a0<br/><span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">12</span><br/>    nums$ <span class=\"sy0\">=</span> <span class=\"kw2\">Right$</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><br/>    <span class=\"kw1\">For</span> ii <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">12</span><br/>        <span class=\"kw1\">If</span> i <span class=\"sy0\">&lt;=</span> ii <span class=\"kw1\">Then</span><br/>            <span class=\"kw1\">If</span> ii <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>                nums$ <span class=\"sy0\">=</span> nums$ <span class=\"sy0\">+</span> <span class=\"kw2\">Left$</span><span class=\"br0\">(</span><span class=\"st0\">\"     \"</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span> <span class=\"sy0\">-</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span><span class=\"kw2\">str$</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> ii<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>            nums$ <span class=\"sy0\">=</span> nums$ <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> ii<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Else</span><br/>            nums$ <span class=\"sy0\">=</span> nums$ <span class=\"sy0\">+</span> <span class=\"st0\">\"     \"</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span> ii<br/>    <span class=\"kw1\">Print</span> nums$<br/><span class=\"kw1\">Next</span> i</pre>"}, {"lang": "Logo", "loc": 14, "block": "<pre class=\"text highlighted_source\">to mult.table\u00a0:n<br/>  type \"|  | for [i 2\u00a0:n] [type form\u00a0:i 4 0] (print)<br/>  (print)<br/>  for [i 2\u00a0:n] [<br/>    type form\u00a0:i 2 0<br/>    for [j 2\u00a0:n] [<br/>      type ifelse\u00a0:i &gt;\u00a0:j [\"|    |] [form\u00a0:i*:j 4 0]<br/>    ]<br/>    (print)<br/>  ]<br/>end<br/>\u00a0<br/>mult.table 12<br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 18, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"   |\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%#5d\"</span><span class=\"sy0\">,</span> i <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">string.rep</span><span class=\"br0\">(</span> <span class=\"st0\">\"-\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">*</span><span class=\"nu0\">5</span><span class=\"sy0\">+</span><span class=\"nu0\">4</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%#2d |\"</span><span class=\"sy0\">,</span> i <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> j <span class=\"sy0\">&lt;</span> i <span class=\"kw1\">then</span><br/>            <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"     \"</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%#5d\"</span><span class=\"sy0\">,</span> i<span class=\"sy0\">*</span>j <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"kw3\">io.write</span><span class=\"br0\">(</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module CheckIt {<br/>      Dim Base 1, A(12)<br/>      Mult=lambda (n)-&gt; {<br/>            Flush  ' empty stack<br/>            For i=1 to n\u00a0: Data i*n\u00a0: Next i<br/>            =Array([])   ' copy stack in an array, and return a pointer<br/>      }<br/>      i=Each(A())<br/>      Print \"  |\";<br/>      while i {<br/>            Print Format$(\"{0:0:-4}\",i^+1);<br/>            A(i^+1)=Mult(i^+1)<br/>      }<br/>      Print<br/>      Print \"--+\"+string$(\"-\",4*12)<br/>      For i=1 to 12 {<br/>            Print Format$(\"{0:0:-2}|\",i); <br/>            For j=1 to 12 {<br/>                  If len(A(j)())&gt;=i then {<br/>                        Print Format$(\"{0:0:-4}\",A(j)(i-1));<br/>                  } Else Print \"    \";<br/>            }<br/>            Print<br/>      }<br/>}<br/>CheckIt<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 18, "block": "<pre class=\"text highlighted_source\">printf(\"    \");<br/>for i to 12 do<br/>\tprintf(\"%-3d   \", i);<br/>end do;<br/>printf(\"\\n\");<br/>for i to 75 do<br/>\tprintf(\"-\");<br/>end do;<br/>for i to 12 do<br/>\tprintf(\"\\n%2d| \", i);<br/>\tfor j to 12 do<br/>\t\tif j&lt;i then<br/>\t\t\tprintf(\"      \");<br/>\t\telse<br/>\t\t\tprintf(\"%-3d   \", i * j);<br/>\t\tend if<br/>\tend do<br/>end do</pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">Grid[{{Range[12]//Column,Grid[UpperTriangularize[KroneckerProduct[Range[12],Range[12]]]/.{0-&gt;\"\"}]}}]</pre>"}, {"lang": "MATLAB / Octave", "loc": 3, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> table = timesTable<span class=\"br0\">(</span>N<span class=\"br0\">)</span><br/>    table = <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>:N<span class=\"br0\">)</span>; <span class=\"br0\">(</span><span class=\"nu0\">1</span>:N<span class=\"br0\">)</span>' <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/triu.html\"><span class=\"kw2\">triu</span></a><span class=\"br0\">(</span> kron<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>:N<span class=\"br0\">)</span>,<span class=\"br0\">(</span><span class=\"nu0\">1</span>:N<span class=\"br0\">)</span>'<span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Maxima", "loc": 6, "block": "<pre class=\"text highlighted_source\">for i: 1 thru 12 do (<br/>  for j: 1 thru 12 do (<br/>    if j&gt;=i or j=1 then printf(true, \"~4d\", i*j) else printf(true, \"    \")<br/>    ),<br/>  printf(true, \"~%\")<br/>  );</pre>"}, {"lang": "\u041c\u041a-61/52", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u041f0\t\u041a\u0418\u041f0\t\u041a\u0418\u041f4\t\u041a\u0418\u041f5\t\u0418\u041f4\t\u0418\u041f5\t*\t\u0421/\u041f<br/>\u0418\u041f5\t\u0418\u041f0\t-\tx=0\t03<br/>\u0418\u041f4\t\u0418\u041f0\t-\tx#0\t22\t\u0418\u041f4\t\u041f5\t\u0411\u041f\t02<br/>\u0421/\u041f</pre>"}, {"lang": "Microsoft Small Basic", "loc": 30, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>n = 12<br/>For j = 1 To n - 1<br/>  TextWindow.CursorLeft = (j - 1) * 4 + (3 - Text.GetLength(j))<br/>  TextWindow.Write(j)<br/>  TextWindow.Write(\" \")<br/>EndFor<br/>TextWindow.CursorLeft = (n - 1) * 4 + (3 - Text.GetLength(n))<br/>TextWindow.Write(n)<br/>TextWindow.WriteLine(\"\")<br/>For j = 0 To n - 1<br/>  TextWindow.Write(\"----\")<br/>EndFor<br/>TextWindow.WriteLine(\"+\")<br/>For i = 1 To n<br/>  For j = 1 To n <br/>    If j &lt; i Then<br/>      TextWindow.Write(\"    \")<br/>    Else<br/>      TextWindow.CursorLeft = (j - 1) * 4 + (3 - Text.GetLength(i * j))<br/>      TextWindow.Write(i * j)<br/>      TextWindow.Write(\" \")<br/>    EndIf<br/>  EndFor<br/>  TextWindow.Write(\"| \")<br/>  TextWindow.CursorLeft = n * 4 + (4 - Text.GetLength(i))<br/>  TextWindow.Write(i)<br/>  TextWindow.WriteLine(\"\")<br/>EndFor<br/>\u00a0</pre>"}, {"lang": "Modula-2", "loc": 41, "block": "<pre class=\"modula2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> MultiplicationTables;<br/>\u00a0<br/><span class=\"kw1\">FROM</span> SWholeIO <span class=\"kw1\">IMPORT</span><br/>  WriteInt;<br/><span class=\"kw1\">FROM</span> STextIO <span class=\"kw1\">IMPORT</span><br/>  WriteString<span class=\"sy0\">,</span> WriteLn;<br/>\u00a0<br/><span class=\"kw1\">CONST</span><br/>  N <span class=\"sy0\">=</span> <span class=\"nu0\">12</span>;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>  I<span class=\"sy0\">,</span> J<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  <span class=\"kw1\">FOR</span> J <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>    WriteInt<span class=\"br0\">(</span>J<span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span>;<br/>  WriteInt<span class=\"br0\">(</span>N<span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>  WriteLn;<br/>  <span class=\"kw1\">FOR</span> J <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"----\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span>;<br/>  WriteString<span class=\"br0\">(</span><span class=\"st0\">\"+\"</span><span class=\"br0\">)</span>;<br/>  WriteLn;<br/>  <span class=\"kw1\">FOR</span> I <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> N <span class=\"kw1\">DO</span><br/>    <span class=\"kw1\">FOR</span> J <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> N <span class=\"kw1\">DO</span><br/>      <span class=\"kw1\">IF</span> J &lt; I <span class=\"kw1\">THEN</span><br/>        WriteString<span class=\"br0\">(</span><span class=\"st0\">\"    \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">ELSE</span><br/>        WriteInt<span class=\"br0\">(</span>I <span class=\"sy0\">*</span> J<span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>        WriteString<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"| \"</span><span class=\"br0\">)</span>;<br/>    WriteInt<span class=\"br0\">(</span>I<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>    WriteLn;<br/>  <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> MultiplicationTables.<br/>\u00a0</pre>"}, {"lang": "MUMPS", "loc": 21, "block": "<pre class=\"text highlighted_source\">MULTTABLE(SIZE)<br/>\u00a0;Print out a multiplication table<br/>\u00a0;SIZE is the size of the multiplication table to make<br/>\u00a0;MW is the maximum width of the numbers<br/>\u00a0;D is the down axis<br/>\u00a0;A is the across axis<br/>\u00a0;BAR is the horizontal bar under the operands<br/> NEW MW,D,A,BAR<br/> IF $DATA(SIZE)&lt;1 SET SIZE=12<br/> SET MW=$LENGTH(SIZE*SIZE)<br/> SET BAR=\"\" FOR I=1:1:(MW+2) SET BAR=BAR_\"-\"<br/> FOR D=1:1:(SIZE+2) DO<br/> .FOR A=1:1:(SIZE+1) DO<br/> ..WRITE:(D=1)&amp;(A=1)\u00a0!,$JUSTIFY(\"\",MW-1),\" X|\"<br/> ..WRITE:(D=1)&amp;(A&gt;1)\u00a0?((A-1)*5),$JUSTIFY((A-1),MW)<br/> ..WRITE:(D=2)&amp;(A=1)\u00a0!,BAR<br/> ..WRITE:(D=2)&amp;(A'=1) BAR<br/> ..WRITE:(D&gt;2)&amp;(A=1)\u00a0!,$JUSTIFY((D-2),MW),\" |\"<br/> ..WRITE:((A-1)&gt;=(D-2))&amp;((D-2)&gt;=1)\u00a0?((A-1)*5),$JUSTIFY((D-2)*(A-1),MW)<br/> KILL MW,D,A,BAR<br/> QUIT</pre>"}, {"lang": "MOO", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>@verb me:@tables none none none rxd<br/>@program me:@tables<br/>player:tell(\"    |      1    2    3    4    5    6    7    8    9   10   11   12\");<br/>player:tell(\"-------------------------------------------------------------------\");<br/>for i in [1..12]<br/>  line = ((i &lt; 10)\u00a0? \"  \" | \" \") + tostr(i) + \" |  \";<br/>  for j in [1..12]<br/>    if (j &gt;= i)<br/>      product = i * j;<br/>      \"calculate spacing for right justification of values\";<br/>      if (product &gt;= 100)<br/>        spacer = \"\";<br/>      elseif (product &gt;= 10)<br/>        spacer = \" \";<br/>      else<br/>        spacer = \"  \";<br/>      endif<br/>      line = line + \"  \" + spacer + tostr(product);<br/>    else<br/>      line = line + \"     \";<br/>    endif<br/>  endfor<br/>  player:tell(line);<br/>endfor<br/>.<br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 12, "block": "<pre class=\"text highlighted_source\">import strfmt<br/>\u00a0<br/>const n = 12<br/>\u00a0<br/>for j in 1..n:<br/>  stdout.write \"{:3d}{:s}\".fmt(j, if n-j&gt;0: \" \" else: \"\\n\")<br/>for j in 0..n:<br/>  stdout.write if n-j&gt;0: \"----\" else: \"+\\n\"<br/>for i in 1..n:<br/>  for j in 1..n:<br/>    stdout.write if j&lt;i: \"    \" else: \"{:3d} \".fmt(i*j)<br/>  echo \"| {:2d}\".fmt(i)</pre>"}, {"lang": "OCaml", "loc": 19, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> fmax <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat_of_int\"><span class=\"kw3\">float_of_int</span></a> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> <span class=\"kw1\">in</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> dgts <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_float\"><span class=\"kw3\">int_of_float</span></a> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALceil\"><span class=\"kw3\">ceil</span></a> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALlog10\"><span class=\"kw3\">log10</span></a> <span class=\"br0\">(</span>fmax <span class=\"sy0\">*.</span> fmax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> fmt <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"\u00a0%*d\"</span> dgts <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> fmt2 <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%*s%c\"</span> dgts <span class=\"kw1\">in</span><br/>\u00a0<br/>  fmt2 <span class=\"st0\">\"\"</span> <span class=\"sy0\">'</span>x<span class=\"sy0\">';</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> <span class=\"kw1\">do</span> fmt i <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_string\"><span class=\"kw3\">print_string</span></a> <span class=\"st0\">\"\\n\\n\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> <span class=\"kw1\">do</span><br/>    fmt j<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALpred\"><span class=\"kw3\">pred</span></a> j <span class=\"kw1\">do</span> fmt2 <span class=\"st0\">\"\"</span> <span class=\"sy0\">'</span> <span class=\"sy0\">';</span> <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> j <span class=\"kw1\">to</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALmax\"><span class=\"kw3\">max</span></a> <span class=\"kw1\">do</span> fmt <span class=\"br0\">(</span>i<span class=\"sy0\">*</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_newline\"><span class=\"kw3\">print_newline</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "PARI/GP", "loc": 1, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">for</span><span class=\"br0\">(</span>y<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">12</span><span class=\"sy0\">,</span><span class=\"kw1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%2Ps| \"</span><span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">12</span><span class=\"sy0\">,</span><span class=\"kw1\">print1</span><span class=\"br0\">(</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>y<span class=\"sy0\">&gt;</span>x<span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span>x<span class=\"sy0\">*</span>y<span class=\"br0\">)</span><span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"kw1\">print</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 10, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw1\">our</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">our</span> <span class=\"re0\">$width</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/length.html\"><span class=\"kw3\">length</span></a><span class=\"br0\">(</span><span class=\"re0\">$max</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%*s\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span> <span class=\"kw1\">foreach</span> <span class=\"st_h\">'x|'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st_h\">'-'</span> x <span class=\"br0\">(</span><span class=\"re0\">$width</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st_h\">'+'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'-'</span> x <span class=\"br0\">(</span><span class=\"re0\">$max</span><span class=\"re0\">*$width</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>\t<a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%*s\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"st0\">\"$i|\"</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"sy0\">&gt;=</span> <span class=\"re0\">$i</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"re0\">*$i</span> <span class=\"br0\">}</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl", "loc": 10, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw1\">our</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">our</span> <span class=\"re0\">$width</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/length.html\"><span class=\"kw3\">length</span></a><span class=\"br0\">(</span><span class=\"re0\">$max</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%*s\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span> <span class=\"kw1\">foreach</span> <span class=\"st_h\">'x|'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"st_h\">'-'</span> x <span class=\"br0\">(</span><span class=\"re0\">$width</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st_h\">'+'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'-'</span> x <span class=\"br0\">(</span><span class=\"re0\">$max</span><span class=\"re0\">*$width</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>\t<a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%*s\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><br/>            <span class=\"kw1\">foreach</span> <span class=\"st0\">\"$i|\"</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"sy0\">&gt;=</span> <span class=\"re0\">$i</span> <span class=\"kw1\">and</span> <span class=\"co5\">$_</span><span class=\"re0\">*$i</span> <span class=\"br0\">}</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 13, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$width</span> <span class=\"sy0\">=</span> <span class=\"kw3\">chars</span> <span class=\"re0\">$max</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$f</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"%{$width}s\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st_h\">'x'</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"re0\">$f</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2502 '</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"re0\">$f</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">x</span> <span class=\"re0\">$width</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u253c'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2500'</span> <span class=\"kw1\">x</span> <span class=\"re0\">$max</span><span class=\"sy0\">*</span><span class=\"re0\">$width</span> <span class=\"sy0\">+</span> <span class=\"re0\">$max</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"re0\">$i</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"re0\">$f</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st_h\">'\u2502 '</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><br/>        <span class=\"kw1\">for</span> <span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"re0\">$max</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$j</span> <span class=\"sy0\">??</span> <span class=\"re0\">$i</span><span class=\"sy0\">*</span><span class=\"re0\">$j</span> <span class=\"sy0\">!!</span> <span class=\"st_h\">''</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">fmt</span><span class=\"br0\">(</span><span class=\"re0\">$f</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 11, "block": "<pre class=\"text highlighted_source\">printf(1,\"  | \")<br/>for col=1 to 12 do<br/>    printf(1,\"%4d\",col)<br/>end for<br/>printf(1,\"\\n--+-\"&amp;repeat('-',12*4))<br/>for row=1 to 12 do<br/>    printf(1,\"\\n%2d| \",row)<br/>    for col=1 to 12 do<br/>        printf(1,iff(col&lt;row?\"    \":sprintf(\"%4d\",row*col)))<br/>    end for<br/>end for</pre>"}, {"lang": "PL/I", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/* 12 x 12 multiplication table. */<br/>\u00a0<br/>multiplication_table: procedure options (main);<br/>   declare (i, j) fixed decimal (2);<br/>\u00a0<br/>   put skip edit ((i do i = 1 to 12)) (X(4), 12 F(4));<br/>   put skip edit ( (49)'_') (X(3), A);<br/>\u00a0<br/>   do i = 1 to 12;<br/>      put skip edit (i, ' |', (i*j do j = i to 12))<br/>         (F(2), a, col(i*4+1), 12 F(4));<br/>   end;<br/>\u00a0<br/>end multiplication_table;<br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 14, "block": "<pre class=\"text highlighted_source\">sp&gt;(de mulTable (N)<br/>   (space 4)<br/>   (for X N<br/>      (prin (align 4 X)) )<br/>   (prinl)<br/>   (prinl)<br/>   (for Y N<br/>      (prin (align 4 Y))<br/>      (space (* (dec Y) 4))<br/>      (for (X Y (&gt;= N X) (inc X))<br/>         (prin (align 4 (* X Y))) )<br/>      (prinl) ) )<br/>\u00a0<br/>(mulTable 12)</pre>"}, {"lang": "PowerShell", "loc": 21, "block": "<pre class=\"powershell highlighted_source\"><span class=\"co1\">#  For clarity</span><br/><span class=\"re0\">$Tab</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es0\">`t</span>\"</span><br/>\u00a0<br/><span class=\"co1\">#  Create top row</span><br/><span class=\"re0\">$Tab</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span> <span class=\"sy0\">-</span>join <span class=\"re0\">$Tab</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">#  For each row</span><br/><span class=\"kw3\">ForEach</span> <span class=\"br0\">(</span> <span class=\"re0\">$i</span> <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">12</span> <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>    $<span class=\"br0\">(</span>  <span class=\"co1\">#  The number in the left column</span><br/>        <span class=\"re0\">$i</span><br/>\u00a0<br/>        <span class=\"co1\">#  An empty slot for the bottom triangle</span><br/>        <span class=\"sy0\">@</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span> <span class=\"re0\">$i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">#  Calculate the top triangle</span><br/>        <span class=\"re0\">$i</span>..<span class=\"nu0\">12</span> <span class=\"sy0\">|</span> <span class=\"kw3\">ForEach</span> <span class=\"br0\">{</span> <span class=\"re0\">$i</span> <span class=\"sy0\">*</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a> <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\">#  Combine them all together</span><br/>        <span class=\"br0\">)</span> <span class=\"sy0\">-</span>join <span class=\"re0\">$Tab</span><br/>    <span class=\"br0\">}</span></pre>"}, {"lang": "PureBasic", "loc": 35, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span> PrintMultiplicationTable<span class=\"br0\">(</span>maxx, maxy<span class=\"br0\">)</span><br/>  sp       <span class=\"sy0\">=</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>maxx<span class=\"sy0\">*</span>maxy<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>  trenner$ <span class=\"sy0\">=</span>  <span class=\"st0\">\"+\"</span><br/>  <span class=\"kw1\">For</span> l1 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> maxx <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> l2 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> sp<br/>      trenner$ <span class=\"sy0\">+</span> <span class=\"st0\">\"-\"</span><br/>    <span class=\"kw1\">Next</span><br/>    trenner$ <span class=\"sy0\">+</span> <span class=\"st0\">\"+\"</span><br/>  <span class=\"kw1\">Next</span><br/>  header$ <span class=\"sy0\">=</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"st0\">\"x\"</span>, sp<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><br/>  <span class=\"kw1\">For</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> maxx<br/>    header$ <span class=\"sy0\">+</span> <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>, sp<span class=\"br0\">)</span><br/>    header$ <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>trenner$<span class=\"br0\">)</span> <br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>header$<span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>trenner$<span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> maxy<br/>    <span class=\"kw2\">line</span>$ <span class=\"sy0\">=</span> <span class=\"st0\">\"|\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span>, sp<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><br/>    <span class=\"kw1\">For</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> maxx<br/>      <span class=\"kw1\">If</span> x <span class=\"sy0\">&gt;=</span> y<br/>        <span class=\"kw2\">line</span>$ <span class=\"sy0\">+</span> <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>x<span class=\"sy0\">*</span>y<span class=\"br0\">)</span>, sp<span class=\"br0\">)</span><br/>      <span class=\"kw1\">Else</span><br/>        <span class=\"kw2\">line</span>$ <span class=\"sy0\">+</span> <span class=\"kw2\">Space</span><span class=\"br0\">(</span>sp<span class=\"br0\">)</span><br/>      <span class=\"kw1\">EndIf</span><br/>      <span class=\"kw2\">line</span>$ <span class=\"sy0\">+</span> <span class=\"st0\">\"|\"</span><br/>    <span class=\"kw1\">Next</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">line</span>$<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>trenner$<span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>PrintMultiplicationTable<span class=\"br0\">(</span><span class=\"nu0\">12</span>, <span class=\"nu0\">12</span><span class=\"br0\">)</span><br/><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 29, "block": "<pre class=\"python highlighted_source\"><span class=\"sy0\">&gt;&gt;&gt;</span> size <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> width <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>size**<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">for</span> row <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>-<span class=\"nu0\">1</span><span class=\"sy0\">,</span>size+<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>\t<span class=\"kw1\">if</span> row<span class=\"sy0\">==</span><span class=\"nu0\">0</span>:<br/>\t\t<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"\u2500\"</span>*width + <span class=\"st0\">\"\u253c\"</span>+<span class=\"st0\">\"\u2500\"</span>*<span class=\"br0\">(</span><span class=\"br0\">(</span>width+<span class=\"nu0\">1</span><span class=\"br0\">)</span>*size-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">else</span>:<br/>\t\t<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\"%*s%1s\"</span>\u00a0% <span class=\"br0\">(</span><span class=\"br0\">(</span>width<span class=\"sy0\">,</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"x\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\u2502\"</span><span class=\"br0\">)</span>      <span class=\"kw1\">if</span> row<span class=\"sy0\">==</span>-<span class=\"nu0\">1</span> <span class=\"kw1\">and</span> col<span class=\"sy0\">==</span><span class=\"nu0\">0</span><br/>\t\t\t\t\t              <span class=\"kw1\">else</span> <span class=\"br0\">(</span>row<span class=\"sy0\">,</span><span class=\"st0\">\"\u2502\"</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> row<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>   <span class=\"kw1\">and</span> col<span class=\"sy0\">==</span><span class=\"nu0\">0</span><br/>\t\t\t\t\t              <span class=\"kw1\">else</span> <span class=\"br0\">(</span>col<span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>  <span class=\"kw1\">if</span> row<span class=\"sy0\">==</span>-<span class=\"nu0\">1</span><br/>\t\t\t\t\t              <span class=\"kw1\">else</span> <span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>   <span class=\"kw1\">if</span> row<span class=\"sy0\">&gt;</span>col<br/>\t\t\t\t\t              <span class=\"kw1\">else</span> <span class=\"br0\">(</span>row*col<span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t       <span class=\"kw1\">for</span> col <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>size+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>  x\u2502  <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>   <span class=\"nu0\">3</span>   <span class=\"nu0\">4</span>   <span class=\"nu0\">5</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">7</span>   <span class=\"nu0\">8</span>   <span class=\"nu0\">9</span>  <span class=\"nu0\">10</span>  <span class=\"nu0\">11</span>  <span class=\"nu0\">12</span> <br/>\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500<br/>  <span class=\"nu0\">1</span>\u2502  <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>   <span class=\"nu0\">3</span>   <span class=\"nu0\">4</span>   <span class=\"nu0\">5</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">7</span>   <span class=\"nu0\">8</span>   <span class=\"nu0\">9</span>  <span class=\"nu0\">10</span>  <span class=\"nu0\">11</span>  <span class=\"nu0\">12</span> <br/>  <span class=\"nu0\">2</span>\u2502      <span class=\"nu0\">4</span>   <span class=\"nu0\">6</span>   <span class=\"nu0\">8</span>  <span class=\"nu0\">10</span>  <span class=\"nu0\">12</span>  <span class=\"nu0\">14</span>  <span class=\"nu0\">16</span>  <span class=\"nu0\">18</span>  <span class=\"nu0\">20</span>  <span class=\"nu0\">22</span>  <span class=\"nu0\">24</span> <br/>  <span class=\"nu0\">3</span>\u2502          <span class=\"nu0\">9</span>  <span class=\"nu0\">12</span>  <span class=\"nu0\">15</span>  <span class=\"nu0\">18</span>  <span class=\"nu0\">21</span>  <span class=\"nu0\">24</span>  <span class=\"nu0\">27</span>  <span class=\"nu0\">30</span>  <span class=\"nu0\">33</span>  <span class=\"nu0\">36</span> <br/>  <span class=\"nu0\">4</span>\u2502             <span class=\"nu0\">16</span>  <span class=\"nu0\">20</span>  <span class=\"nu0\">24</span>  <span class=\"nu0\">28</span>  <span class=\"nu0\">32</span>  <span class=\"nu0\">36</span>  <span class=\"nu0\">40</span>  <span class=\"nu0\">44</span>  <span class=\"nu0\">48</span> <br/>  <span class=\"nu0\">5</span>\u2502                 <span class=\"nu0\">25</span>  <span class=\"nu0\">30</span>  <span class=\"nu0\">35</span>  <span class=\"nu0\">40</span>  <span class=\"nu0\">45</span>  <span class=\"nu0\">50</span>  <span class=\"nu0\">55</span>  <span class=\"nu0\">60</span> <br/>  <span class=\"nu0\">6</span>\u2502                     <span class=\"nu0\">36</span>  <span class=\"nu0\">42</span>  <span class=\"nu0\">48</span>  <span class=\"nu0\">54</span>  <span class=\"nu0\">60</span>  <span class=\"nu0\">66</span>  <span class=\"nu0\">72</span> <br/>  <span class=\"nu0\">7</span>\u2502                         <span class=\"nu0\">49</span>  <span class=\"nu0\">56</span>  <span class=\"nu0\">63</span>  <span class=\"nu0\">70</span>  <span class=\"nu0\">77</span>  <span class=\"nu0\">84</span> <br/>  <span class=\"nu0\">8</span>\u2502                             <span class=\"nu0\">64</span>  <span class=\"nu0\">72</span>  <span class=\"nu0\">80</span>  <span class=\"nu0\">88</span>  <span class=\"nu0\">96</span> <br/>  <span class=\"nu0\">9</span>\u2502                                 <span class=\"nu0\">81</span>  <span class=\"nu0\">90</span>  <span class=\"nu0\">99</span> <span class=\"nu0\">108</span> <br/> <span class=\"nu0\">10</span>\u2502                                    <span class=\"nu0\">100</span> <span class=\"nu0\">110</span> <span class=\"nu0\">120</span> <br/> <span class=\"nu0\">11</span>\u2502                                        <span class=\"nu0\">121</span> <span class=\"nu0\">132</span> <br/> <span class=\"nu0\">12</span>\u2502                                            <span class=\"nu0\">144</span> <br/><span class=\"sy0\">&gt;&gt;&gt;</span> </pre>"}, {"lang": "R", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>multiplication_table &lt;- function(n=12)<br/>{<br/>   one_to_n &lt;- 1:n<br/>   x &lt;- matrix(one_to_n)\u00a0%*% t(one_to_n)<br/>   x[lower.tri(x)] &lt;- 0<br/>   rownames(x) &lt;- colnames(x) &lt;- one_to_n<br/>   print(as.table(x), zero.print=\"\")<br/>   invisible(x)<br/>}<br/>multiplication_table()<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(define (show-line xs)<br/>  (for ([x xs]) (display (~a x #:width 4 #:align 'right)))<br/>  (newline))<br/>\u00a0<br/>(show-line (cons \"\" (range 1 13)))<br/>(for ([y (in-range 1 13)])<br/>  (show-line (cons y (for/list ([x (in-range 1 13)])<br/>                       (if (&lt;= y x) (* x y) \"\")))))<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 33, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol [<br/>\tTitle: \"12x12 Multiplication Table\"<br/>\tURL: http://rosettacode.org/wiki/Print_a_Multiplication_Table<br/>]</span><br/>\u00a0<br/>size: <span class=\"nu0\">12</span><br/>\u00a0<br/><span class=\"co1\">; Because of REBOL's GUI focus, it doesn't really do pictured output,</span><br/><span class=\"co1\">; so I roll my own. See Formatted_Numeric_Output for more</span><br/><span class=\"co1\">; comprehensive version:</span><br/>\u00a0<br/>pad: <span class=\"kw2\">func</span> <span class=\"br0\">[</span>pad n<span class=\"br0\">]</span><span class=\"br0\">[</span><br/>    n: <span class=\"kw3\">to-string</span> n<br/>    <span class=\"kw3\">insert</span><span class=\"sy0\">/</span>dup n <span class=\"st0\">\" \"</span> <span class=\"br0\">(</span>pad - <span class=\"kw3\">length?</span> n<span class=\"br0\">)</span><br/>    n <br/><span class=\"br0\">]</span><br/>p3: <span class=\"kw2\">func</span> <span class=\"br0\">[</span>v<span class=\"br0\">]</span><span class=\"br0\">[</span>pad <span class=\"nu0\">3</span> v<span class=\"br0\">]</span>  <span class=\"co1\">; A shortcut, I hate to type...</span><br/>\u00a0<br/>--: <span class=\"kw2\">has</span> <span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"kw2\">repeat</span> x size + <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw3\">prin</span> <span class=\"st0\">\"+---\"</span><span class=\"br0\">]</span>  <span class=\"kw3\">print</span> <span class=\"st0\">\"+\"</span><span class=\"br0\">]</span>  <span class=\"co1\">; Special chars OK.</span><br/>\u00a0<br/>.row: <span class=\"kw2\">func</span> <span class=\"br0\">[</span>label y <span class=\"sy0\">/</span>local row x<span class=\"br0\">]</span><span class=\"br0\">[</span><br/>\trow: <span class=\"kw2\">reduce</span> <span class=\"br0\">[</span><span class=\"st0\">\"|\"</span> label <span class=\"st0\">\"|\"</span><span class=\"br0\">]</span>  <br/>\t<span class=\"kw2\">repeat</span> x size <span class=\"br0\">[</span><span class=\"kw3\">append</span> row <span class=\"kw2\">reduce</span> <span class=\"br0\">[</span><span class=\"kw2\">either</span> x <span class=\"sy0\">&lt;</span> y <span class=\"br0\">[</span><span class=\"st0\">\"   \"</span><span class=\"br0\">]</span><span class=\"br0\">[</span>p3 x <span class=\"sy0\">*</span> y<span class=\"br0\">]</span> <span class=\"st0\">\"|\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"kw3\">print</span> <span class=\"kw3\">rejoin</span> row<br/><span class=\"br0\">]</span><br/>\u00a0<br/>--  .row <span class=\"st0\">\" x \"</span> <span class=\"nu0\">1</span>  --  <span class=\"kw2\">repeat</span> y size <span class=\"br0\">[</span>.row  p3 y  y<span class=\"br0\">]</span>  --<br/>\u00a0<br/><span class=\"kw3\">print</span> <span class=\"kw3\">rejoin</span> <span class=\"br0\">[</span> crlf  <span class=\"st0\">\"What about \"</span>  size: <span class=\"nu0\">5</span>  <span class=\"st0\">\"?\"</span>  crlf <span class=\"br0\">]</span><br/>--  .row <span class=\"st0\">\" x \"</span> <span class=\"nu0\">1</span>  --  <span class=\"kw2\">repeat</span> y size <span class=\"br0\">[</span>.row  p3 y  y<span class=\"br0\">]</span>  --<br/>\u00a0<br/><span class=\"kw3\">print</span> <span class=\"kw3\">rejoin</span> <span class=\"br0\">[</span> crlf  <span class=\"st0\">\"How about \"</span>  size: <span class=\"nu0\">20</span>  <span class=\"st0\">\"?\"</span>  crlf <span class=\"br0\">]</span><br/>--  .row <span class=\"st0\">\" x \"</span> <span class=\"nu0\">1</span>  --  <span class=\"kw2\">repeat</span> y size <span class=\"br0\">[</span>.row  p3 y  y<span class=\"br0\">]</span>  --</pre>"}, {"lang": "REXX", "loc": 47, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program displays a  NxN  multiplication table  (in a boxed grid) to the terminal.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> high <span class=\"sy0\">.</span>                                 <span class=\"coMULTI\">/*obtain optional grid size from the CL*/</span><br/><span class=\"kw1\">if</span> high==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> high==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> high=<span class=\"nu0\">12</span>            <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/>            bar  = <span class=\"st0\">'\u2502'</span>  \u00a0;    dash = <span class=\"st0\">\"\u2500\"</span>         <span class=\"coMULTI\">/*(vertical) bar; horizontal bar (dash)*/</span><br/>            bj   = <span class=\"st0\">'\u2534'</span>  \u00a0;    tj   = <span class=\"st0\">\"\u252c\"</span>         <span class=\"coMULTI\">/*bottom and top junctions  (or  tees).*/</span><br/>            cj   = <span class=\"st0\">'\u253c'</span>                           <span class=\"coMULTI\">/*center junction  (or cross).         */</span><br/>            lj   = <span class=\"st0\">'\u251c'</span>  \u00a0;    rj   = <span class=\"st0\">\"\u2524\"</span>         <span class=\"coMULTI\">/*left and right junctions  (or  tees).*/</span><br/>            tlc  = <span class=\"st0\">'\u250c'</span>  \u00a0;    trc  = <span class=\"st0\">\"\u2510\"</span>         <span class=\"coMULTI\">/* top     left and right corners.     */</span><br/>            blc  = <span class=\"st0\">'\u2514'</span>  \u00a0;    brc  = <span class=\"st0\">\"\u2518\"</span>         <span class=\"coMULTI\">/*bottom     \"   \"    \"      \"         */</span><br/>cell = cj <span class=\"sy0\">||</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span>dash,<span class=\"kw6\">max</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"kw6\">length</span><span class=\"br0\">(</span>high<span class=\"br0\">)</span> +<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/*define the  top  of the cell.        */</span><br/>sep  = <span class=\"kw6\">copies</span><span class=\"br0\">(</span>cell, high+<span class=\"nu0\">1</span><span class=\"br0\">)</span>rj                    <span class=\"coMULTI\">/*construct the table separator.       */</span><br/>size = <span class=\"kw6\">length</span><span class=\"br0\">(</span>cell<span class=\"br0\">)</span> - <span class=\"nu0\">1</span>                          <span class=\"coMULTI\">/*width for the products in the table. */</span><br/>box<span class=\"sy0\">.</span> = <span class=\"kw6\">left</span><span class=\"br0\">(</span><span class=\"st0\">''</span>, size<span class=\"br0\">)</span>                            <span class=\"coMULTI\">/*initialize all the cells in the table*/</span><br/>            <span class=\"kw1\">do</span> j=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span>  high                     <span class=\"coMULTI\">/*step through  zero  \u2500\u2500\u2500\u25ba  high.      */</span><br/>            _=<span class=\"kw6\">right</span><span class=\"br0\">(</span>j, size - <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"st0\">'x '</span>             <span class=\"coMULTI\">/*build the   \"label\" (border) number. */</span><br/>            box<span class=\"sy0\">.</span>0<span class=\"sy0\">.</span>j=<span class=\"kw6\">center</span><span class=\"br0\">(</span>_,        size<span class=\"br0\">)</span>       <span class=\"coMULTI\">/*  \"    \"     top label cell.         */</span><br/>            box<span class=\"sy0\">.</span>j<span class=\"sy0\">.</span>0=<span class=\"kw6\">center</span><span class=\"br0\">(</span>_, <span class=\"kw6\">max</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, size<span class=\"br0\">)</span> <span class=\"br0\">)</span>     <span class=\"coMULTI\">/*  \"    \"    left label cell.         */</span><br/>            <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>box<span class=\"sy0\">.</span>0<span class=\"sy0\">.</span>0=<span class=\"kw6\">center</span><span class=\"br0\">(</span><span class=\"st0\">'times'</span>, <span class=\"kw6\">max</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, size<span class=\"br0\">)</span><span class=\"br0\">)</span>            <span class=\"coMULTI\">/*redefine    box.0.0   with  \"times\". */</span><br/>            <span class=\"kw1\">do</span>   r=<span class=\"nu0\">1</span>   <span class=\"kw2\">for</span> high                  <span class=\"coMULTI\">/*step through row      one \u2500\u2500\u2500\u25ba high. */</span><br/>              <span class=\"kw1\">do</span> c=r    <span class=\"kw2\">to</span> high                  <span class=\"coMULTI\">/*step through column   row \u2500\u2500\u2500\u25ba high. */</span><br/>              box<span class=\"sy0\">.</span>r<span class=\"sy0\">.</span>c=<span class=\"kw6\">right</span><span class=\"br0\">(</span>r<span class=\"sy0\">*</span>c, size<span class=\"br0\">)</span>           <span class=\"coMULTI\">/*build a single multiplication cell.  */</span><br/>              <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*c*/</span><br/>            <span class=\"kw3\">end</span>     <span class=\"coMULTI\">/*r*/</span>                        <span class=\"coMULTI\">/*only build the top right-half of grid*/</span><br/>\u00a0<br/>         <span class=\"kw1\">do</span> r=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> high;  @=sep;  L=<span class=\"kw6\">length</span><span class=\"br0\">(</span>sep<span class=\"br0\">)</span> <span class=\"coMULTI\">/*step through all lines; use a mod sep*/</span><br/>         <span class=\"kw1\">if</span> r==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">do</span>; @=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>tlc, @ , <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/*use a better tlc (top  left corner). */</span><br/>                           @=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>trc, @ , L<span class=\"br0\">)</span> <span class=\"coMULTI\">/* \"  \"    \"   trc ( \"  right    \"  ). */</span><br/>                           @=<span class=\"kw6\">translate</span><span class=\"br0\">(</span>@, tj,cj<span class=\"br0\">)</span> <span class=\"coMULTI\">/* \"  \"    \"   tj  (top  junction/tee).*/</span><br/>                       <span class=\"kw3\">end</span><br/>                  <span class=\"kw3\">else</span> @=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>lj, @, <span class=\"nu0\">1</span><span class=\"br0\">)</span>       <span class=\"coMULTI\">/* \"  \"    \"   lj  (left junction/tee).*/</span><br/>         <span class=\"kw1\">say</span> @                                   <span class=\"coMULTI\">/*display a single table grid line.    */</span><br/>         <span class=\"kw1\">if</span> r==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> buildLine 00         <span class=\"coMULTI\">/*   \"    \"    \"   blank grid   \"      */</span><br/>                       <span class=\"kw1\">call</span> buildLine r          <span class=\"coMULTI\">/*build a single line of the grid.     */</span><br/>         <span class=\"kw1\">if</span> r==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> buildLine 00         <span class=\"coMULTI\">/*display a single blank grid line.    */</span><br/>         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*r*/</span><br/>@=sep                                            <span class=\"coMULTI\">/*allow use of a modified separator.   */</span><br/>@=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>blc, @ ,  <span class=\"nu0\">1</span><span class=\"br0\">)</span>                           <span class=\"coMULTI\">/*use a better  bottom   left corner.  */</span><br/>@=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>brc, @ , <span class=\"kw6\">length</span><span class=\"br0\">(</span>sep<span class=\"br0\">)</span> <span class=\"br0\">)</span>                 <span class=\"coMULTI\">/* \"  \"    \"       \"    right corner.  */</span><br/>@=<span class=\"kw6\">translate</span><span class=\"br0\">(</span>@, bj, cj<span class=\"br0\">)</span>                           <span class=\"coMULTI\">/* \"  \"    \"       \"      junction.    */</span><br/><span class=\"kw1\">say</span> @                                            <span class=\"coMULTI\">/*display a (single)  table grid line. */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>buildLine: <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> row,,$;    <span class=\"kw1\">do</span> col=<span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> high       <span class=\"coMULTI\">/*step through  zero \u2500\u2500\u2500\u25ba high. */</span><br/>                                $=$ <span class=\"sy0\">||</span>bar <span class=\"sy0\">||</span>box<span class=\"sy0\">.</span>row<span class=\"sy0\">.</span>col <span class=\"coMULTI\">/*build one cell at a time.     */</span><br/>                                <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*col*/</span>           <span class=\"coMULTI\">/* [\u2191]  build (row) line by cols*/</span><br/>           <span class=\"kw1\">say</span> $ <span class=\"sy0\">||</span> bar; <span class=\"kw1\">return</span>                         <span class=\"coMULTI\">/*finish building the last cell.*/</span></pre>"}, {"lang": "Ring", "loc": 13, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>multiplication_table(12)<br/>func multiplication_table n<br/>  nSize = 4   See \"    |   \" <br/>  for t = 1 to n see  fsize(t, nSize) next <br/>  see nl + \"----+-\" + copy(\"-\", nSize*n) + nl<br/>  for t1 = 1 to n<br/>     see fsize(t1, nSize) + \"|   \"<br/>     for t2 = 1 to n if t2 &gt;= t1 see  fsize(t1*t2,nSize) else see copy(\" \", nSize) ok next<br/>     see nl<br/>  next <br/>func fsize x,n return string(x) + copy(\" \",n-len(string(x)))<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 12, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> multiplication_table<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"    |\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"st0\">\"\u00a0%3d\"</span> <span class=\"sy0\">*</span> n<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span><span class=\"sy0\">*</span><span class=\"nu0\">1</span>..<span class=\"me1\">n</span><span class=\"br0\">]</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"----+\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"----\"</span> <span class=\"sy0\">*</span> n<br/>  <span class=\"nu0\">1</span>.<span class=\"me1\">upto</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>x<span class=\"sy0\">|</span><br/>    <span class=\"kw3\">print</span> <span class=\"st0\">\"%3d |\"</span> <span class=\"sy0\">%</span> x<br/>    <span class=\"nu0\">1</span>.<span class=\"me1\">upto</span><span class=\"br0\">(</span>x<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>y<span class=\"sy0\">|</span> <span class=\"kw3\">print</span> <span class=\"st0\">\"    \"</span><span class=\"br0\">}</span><br/>    x.<span class=\"me1\">upto</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span>   <span class=\"br0\">{</span><span class=\"sy0\">|</span>y<span class=\"sy0\">|</span> <span class=\"kw3\">print</span> <span class=\"st0\">\"\u00a0%3d\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>x<span class=\"sy0\">*</span>y<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">puts</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>multiplication_table <span class=\"nu0\">12</span></pre>"}, {"lang": "Run BASIC", "loc": 11, "block": "<pre class=\"text highlighted_source\">html \"&lt;TABLE border=1 &gt;&lt;TR bgcolor=silver align=center&gt;&lt;TD&gt;&lt;TD&gt;1&lt;TD&gt;2&lt;TD&gt;3&lt;TD&gt;4&lt;TD&gt;5&lt;TD&gt;6&lt;TD&gt;7&lt;TD&gt;8&lt;TD&gt;9&lt;TD&gt;10&lt;TD&gt;11&lt;TD&gt;12&lt;/td&gt;&lt;/TR&gt;\" <br/>For i = 1 To 12<br/>\thtml \"&lt;TR align=right&gt;&lt;TD&gt;\";i;\"&lt;/td&gt;\"<br/>\tFor ii = 1 To 12<br/>\t\thtml \"&lt;td width=25&gt;\"<br/>\t\tIf ii &gt;= i Then   html i * ii<br/>\t\thtml \"&lt;/td&gt;\"<br/>\tNext ii<br/>next i<br/>html \"&lt;/table&gt;\"<br/>\u00a0</pre>"}, {"lang": "Rust", "loc": 23, "block": "<pre class=\"text highlighted_source\">const LIMIT: i32 = 12;<br/>\u00a0<br/>fn main() {<br/>    for i in 1..LIMIT+1 {<br/>        print!(\"{:3}{}\", i, if LIMIT - i == 0 {'\\n'} else {' '})<br/>    }<br/>    for i in 0..LIMIT+1 {<br/>        print!(\"{}\", if LIMIT - i == 0 {\"+\\n\"} else {\"----\"});<br/>    }<br/>\u00a0<br/>    for i in 1..LIMIT+1 {<br/>        for j in 1..LIMIT+1 {<br/>            if j &lt; i {<br/>                print!(\"    \")<br/>            } else { <br/>                print!(\"{:3} \", j * i)<br/>            }<br/>        }<br/>        println!(\"| {}\", i);<br/>    }<br/>\u00a0<br/>\u00a0<br/>}</pre>"}, {"lang": "Scala", "loc": 20, "block": "<pre class=\"scala highlighted_source\">\u00a0<br/><span class=\"co1\">//Multiplication Table</span><br/>print<span class=\"br0\">(</span><span class=\"st0\">\"%5s\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"|\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">1</span> to <span class=\"nu0\">12</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"%5d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>println<span class=\"br0\">(</span><span class=\"st0\">\"-----\"</span> <span class=\"sy0\">*</span> <span class=\"nu0\">13</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">1</span> to <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  print<span class=\"br0\">(</span><span class=\"st0\">\"%4d|\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">1</span> to <span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> j<span class=\"br0\">)</span><br/>      print<span class=\"br0\">(</span><span class=\"st0\">\"%5d\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>      print<span class=\"br0\">(</span><span class=\"st0\">\"%5s\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Scheme", "loc": 28, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> iota<br/>  <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>count start step<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> loop <span class=\"br0\">(</span><span class=\"br0\">(</span>result <span class=\"br0\">(</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> start <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span> step<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>acc <span class=\"br0\">(</span><span class=\"kw1\">car</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> acc start<span class=\"br0\">)</span><br/>            result<br/>            <span class=\"br0\">(</span>loop <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> acc step<span class=\"br0\">)</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> table<br/>  <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">let</span> loop <span class=\"br0\">(</span><span class=\"br0\">(</span>count <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span>numbers <span class=\"br0\">(</span>iota x <span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"kw1\">null?</span> numbers<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"kw1\">begin</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">make-string</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">6</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> #\\space<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">for-each</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>number <span class=\"br0\">(</span>number<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> n count<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span><span class=\"kw1\">string-append</span><br/>                           <span class=\"br0\">(</span><span class=\"kw1\">make-string</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"nu0\">6</span> <span class=\"br0\">(</span><span class=\"kw1\">string-length</span> number<span class=\"br0\">)</span><span class=\"br0\">)</span> #\\space<span class=\"br0\">)</span><br/>                           number<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             numbers<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>loop <span class=\"br0\">(</span><span class=\"sy0\">+</span> count <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> numbers<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Scilab", "loc": 22, "block": "<pre class=\"text highlighted_source\">    nmax=12, xx=3<br/>    s= blanks(xx)+\" |\"<br/>    for j=1:nmax<br/>        s=s+part(blanks(xx)+string(j),$-xx:$)<br/>    end<br/>    printf(\"%s\\n\",s)<br/>    s=strncpy(\"-----\",xx)+\" +\"<br/>    for j=1:nmax<br/>        s=s+\" \"+strncpy(\"-----\",xx)<br/>    end<br/>    printf(\"%s\\n\",s)<br/>    for i=1:nmax<br/>        s=part(blanks(xx)+string(i),$-xx+1:$)+\" |\"<br/>        for j = 1:nmax<br/>            if j &gt;= i then <br/>                s=s+part(blanks(xx)+string(i*j),$-xx:$) <br/>            else <br/>                s=s+blanks(xx+1)<br/>\t    end<br/>        end<br/>        printf(\"%s\\n\",s)<br/>    end</pre>"}, {"lang": "Seed7", "loc": 24, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    const integer: n is 12;<br/>    var integer: i is 0;<br/>    var integer: j is 0;<br/>  begin<br/>    for j range 1 to n do<br/>      write(j lpad 3 &lt;&amp; \" \");<br/>    end for;<br/>    writeln;<br/>    writeln(\"-\" mult 4 * n);<br/>    for i range 1 to n do<br/>      for j range 1 to n do<br/>        if j &lt; i then<br/>          write(\"    \");<br/>        else<br/>          write(i * j lpad 3 &lt;&amp; \" \");<br/>        end if;<br/>      end for;<br/>      writeln(\"|\" &lt;&amp; i lpad 3);<br/>    end for;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 13, "block": "<pre class=\"ruby highlighted_source\">var max = <span class=\"nu0\">12</span><br/>var width = <span class=\"br0\">(</span>max<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">-&gt;</span> len<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>func fmt_row<span class=\"br0\">(</span><span class=\"sy0\">*</span>items<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    items.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>s<span class=\"sy0\">|</span> <span class=\"st0\">\"%*s\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>width, s<span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">join</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say fmt_row<span class=\"br0\">(</span><span class=\"st0\">'x\u2503'</span>, <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"me1\">max</span><span class=\"br0\">)</span>...<span class=\"br0\">)</span><br/>say <span class=\"st0\">\"#{'\u2501' * (width - 1)}\u254b#{'\u2501' * (max * width)}\"</span><br/>\u00a0<br/><span class=\"br0\">{</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span>\u00a0<br/>    say fmt_row<span class=\"br0\">(</span><span class=\"st0\">\"#{i}\u2503\"</span>, <span class=\"br0\">{</span><span class=\"sy0\">|</span>j<span class=\"sy0\">|</span> i <span class=\"sy0\">&lt;</span>= j\u00a0? i<span class=\"sy0\">*</span>j\u00a0: <span class=\"st0\">''</span><span class=\"br0\">}</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"me1\">max</span><span class=\"br0\">)</span>...<span class=\"br0\">)</span><br/><span class=\"br0\">}</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">1</span>..<span class=\"me1\">max</span></pre>"}, {"lang": "Simula", "loc": 17, "block": "<pre class=\"text highlighted_source\">begin<br/>    integer i, j;<br/>    outtext( \"    \" );<br/>    for i\u00a0:= 1 step 1 until 12 do outint( i, 4 );<br/>    outimage;<br/>    outtext( \"   +\" );<br/>    for i\u00a0:= 1 step 1 until 12 do outtext( \"----\" );<br/>    outimage;<br/>    for i\u00a0:= 1 step 1 until 12 do<br/>    begin<br/>        outint( i, 3 );<br/>        outtext( \"|\" );<br/>        for j\u00a0:= 1 step 1 until i - 1 do outtext( \"    \" );<br/>        for j\u00a0:= i step 1 until 12 do outint( i * j, 4 );<br/>        outimage<br/>    end;<br/>end</pre>"}, {"lang": "Tcl", "loc": 11, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">puts</span> <span class=\"st0\">\"  x<span class=\"es0\">\\u</span>2502   1   2   3   4   5   6   7   8   9  10  11  12\"</span><br/><span class=\"kw2\">puts</span> \\u0020\\u2500\\u2500\\u253c<span class=\"br0\">[</span><span class=\"kw2\">string</span> repeat \\u2500 <span class=\"nu0\">48</span><span class=\"br0\">]</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">12</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"%3d\"</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span>\\u2502<span class=\"br0\">[</span><span class=\"kw2\">string</span> repeat <span class=\"st0\">\" \"</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">*</span><span class=\"nu0\">4</span>-<span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> j <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">12</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> j<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$j</span> <span class=\"sy0\">&gt;</span>= <span class=\"re0\">$i</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">puts</span> -nonewline <span class=\"br0\">[</span><span class=\"kw2\">format</span> <span class=\"st0\">\"%4d\"</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">*</span><span class=\"re0\">$j</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TUSCRIPT", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>x=y=\"1'2'3'4'5'6'7'8'9'10'11'12\"<br/>LOOP n,col=x,cnt=\"\"<br/> skip=n-1<br/> LOOP m,row=y<br/>  IF (m==skip) THEN<br/>   td=\"\"<br/>  ELSE<br/>   td=col*row<br/>   coleqrow=col*n<br/>   IF (td.lt.#coleqrow) td=\"\"<br/>  ENDIF<br/> td=CENTER (td,+3,\" \")<br/> cnt=APPEND (cnt,td,\" \")<br/> ENDLOOP<br/> col=CENTER (col,+3,\" \")<br/> PRINT col,cnt<br/>ENDLOOP<br/>\u00a0</pre>"}, {"lang": "uBasic/4tH", "loc": 7, "block": "<pre class=\"text highlighted_source\">For R = 1 To 12<br/>  Print R;Tab(R * 5);<br/>  For C = R To 12<br/>    Print Using \"_____\";R * C;<br/>  Next<br/>  Print<br/>Next</pre>"}, {"lang": "Ursala", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#import std<br/>#import nat<br/>\u00a0<br/>table \"n\" =<br/>\u00a0<br/>~&amp;plrTS(<br/>   ~&amp;xS pad` @xS &lt;'x  ','--'&gt;-- --' | '*hS\u00a0%nP* nrange/1 \"n\",<br/>   ^CthPiC(`-!*h,~&amp;) mat` *xSSK7 pad` *K7ihxPBSS (~&amp;i&amp;&amp;\u00a0%nP)** nleq&amp;&amp;product**iiK0lK2x nrange/1 \"n\")<br/>\u00a0<br/>#show+<br/>\u00a0<br/>main = table 12<br/>\u00a0</pre>"}, {"lang": "Visual Basic", "loc": 24, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Sub</span> Main()<br/>    Const nmax = 12, xx = 3<br/>    Const x = xx + 1<br/>    <span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, j <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, s <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/>    s = <span class=\"kw1\">String</span>(xx, <span class=\"st0\">\" \"</span>) &amp; <span class=\"st0\">\" |\"</span><br/>    <span class=\"kw3\">For</span> j = 1 <span class=\"kw3\">To</span> nmax<br/>        s = s &amp; Right(<span class=\"kw1\">String</span>(x, <span class=\"st0\">\" \"</span>) &amp; j, x)<br/>    <span class=\"kw3\">Next</span> j<br/>    Debug.<span class=\"kw4\">Print</span> s<br/>    s = <span class=\"kw1\">String</span>(xx, <span class=\"st0\">\"-\"</span>) &amp; <span class=\"st0\">\" +\"</span><br/>    <span class=\"kw3\">For</span> j = 1 <span class=\"kw3\">To</span> nmax<br/>        s = s &amp; <span class=\"st0\">\" \"</span> &amp; <span class=\"kw1\">String</span>(xx, <span class=\"st0\">\"-\"</span>)<br/>    <span class=\"kw3\">Next</span> j<br/>    Debug.<span class=\"kw4\">Print</span> s<br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> nmax<br/>        s = Right(<span class=\"kw1\">String</span>(xx, <span class=\"st0\">\" \"</span>) &amp; i, xx) &amp; <span class=\"st0\">\" |\"</span><br/>        <span class=\"kw3\">For</span> j = 1 <span class=\"kw3\">To</span> nmax<br/>            <span class=\"kw3\">If</span> j &gt;= i _<br/>            <span class=\"kw3\">Then</span> s = s &amp; Right(<span class=\"kw1\">String</span>(x, <span class=\"st0\">\" \"</span>) &amp; i * j, x) _<br/>            <span class=\"kw3\">Else</span> s = s &amp; <span class=\"kw1\">String</span>(x, <span class=\"st0\">\" \"</span>)<br/>        <span class=\"kw3\">Next</span> j<br/>        Debug.<span class=\"kw4\">Print</span> s<br/>    <span class=\"kw3\">Next</span> i<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span> 'Main</pre>"}, {"lang": "VBA", "loc": 31, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> Multiplication_Tables()<br/><span class=\"kw4\">Dim</span> strTemp <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, strBuff <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> i&amp;, j&amp;, NbDigits <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span><br/>\u00a0<br/><span class=\"co1\">'You can adapt the following const\u00a0:<br/></span>Const NB_END <span class=\"kw4\">As</span> <span class=\"kw1\">Byte</span> = 12<br/>\u00a0<br/>    <span class=\"kw3\">Select</span> <span class=\"kw3\">Case</span> NB_END<br/>        <span class=\"kw3\">Case</span> <span class=\"kw3\">Is</span> &lt; 10: NbDigits = 3<br/>        <span class=\"kw3\">Case</span> 10 <span class=\"kw3\">To</span> 31: NbDigits = 4<br/>        <span class=\"kw3\">Case</span> 31 <span class=\"kw3\">To</span> 100: NbDigits = 5<br/>        <span class=\"kw3\">Case</span> <span class=\"kw3\">Else</span>: MsgBox <span class=\"st0\">\"Number too large\"</span>: <span class=\"kw2\">Exit</span> <span class=\"kw2\">Sub</span><br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">Select</span><br/>    strBuff = <span class=\"kw1\">String</span>(NbDigits, <span class=\"st0\">\" \"</span>)<br/>\u00a0<br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> NB_END<br/>        strTemp = Right(strBuff &amp; i, NbDigits)<br/>        <span class=\"kw3\">For</span> j = 2 <span class=\"kw3\">To</span> NB_END<br/>            <span class=\"kw3\">If</span> j &lt; i <span class=\"kw3\">Then</span><br/>                strTemp = strTemp &amp; strBuff<br/>            <span class=\"kw3\">Else</span><br/>                strTemp = strTemp &amp; Right(strBuff &amp; j * i, NbDigits)<br/>            <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>        <span class=\"kw3\">Next</span> j<br/>        Debug.<span class=\"kw4\">Print</span> strTemp<br/>    <span class=\"kw3\">Next</span> i<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0</pre>"}, {"lang": "XPL0", "loc": 14, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;<br/>int X, Y;<br/>[Format(4, 0);<br/>Text(0, \"    |\");  for X:= 1 to 12 do RlOut(0, float(X));<br/>CrLf(0);<br/>Text(0, \"  --+\");  for X:= 1 to 12 do Text(0, \"----\");<br/>CrLf(0);<br/>for Y:= 1 to 12 do<br/>    [RlOut(0, float(Y));  ChOut(0, ^|);<br/>    for X:= 1 to 12 do<br/>        if X&gt;=Y then RlOut(0, float(X*Y)) else Text(0, \" . .\");<br/>    CrLf(0);<br/>    ];<br/>]</pre>"}, {"lang": "zkl", "loc": 10, "block": "<pre class=\"text highlighted_source\">fcn multiplicationTable(n){<br/>   w,fmt\u00a0:= (n*n).numDigits, \"\u00a0%%%dd\".fmt(w).fmt;  // eg \"\u00a0%3\".fmt<br/>   header:=[1..n].apply(fmt).concat();\t   // 1  2  3  4 ...<br/>   println(\" x \", header, \"\\n   \", \"-\"*header.len());<br/>   dash:=String(\" \"*w,\"-\");\t// eg \"   -\"<br/>   foreach a in ([1..n]){<br/>      print(\"%2d|\".fmt(a),dash*(a-1));<br/>      [a..n].pump(String,'*(a),fmt).println();<br/>   }<br/>}(12);</pre>"}]}