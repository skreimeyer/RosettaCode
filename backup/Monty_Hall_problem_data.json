{"task": "Monty_Hall_problem", "blocks": [{"lang": "ActionScript", "loc": 32, "block": "<pre class=\"actionscript highlighted_source\">package <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">import</span> flash.<span class=\"me1\">display</span>.<span class=\"me1\">Sprite</span>;<br/>\u00a0<br/>\t<span class=\"kw3\">public</span> <span class=\"kw2\">class</span> MontyHall <span class=\"kw3\">extends</span> Sprite<br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw3\">public</span> <span class=\"kw2\">function</span> MontyHall<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw2\">var</span> iterations:<span class=\"kw3\">int</span> = <span class=\"nu0\">30000</span>;<br/>\t\t\t<span class=\"kw2\">var</span> switchWins:<span class=\"kw3\">int</span> = <span class=\"nu0\">0</span>;<br/>\t\t\t<span class=\"kw2\">var</span> stayWins:<span class=\"kw3\">int</span> = <span class=\"nu0\">0</span>;<br/>\u00a0<br/>\t\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw2\">var</span> i:<span class=\"kw3\">int</span> = <span class=\"nu0\">0</span>; i <span class=\"sy0\">&lt;</span> iterations; i++<span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw2\">var</span> doors:<span class=\"kw3\">Array</span> = <span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">]</span>;<br/>\t\t\t\tdoors<span class=\"br0\">[</span><span class=\"kw3\">Math</span>.<span class=\"kw3\">floor</span><span class=\"br0\">(</span><span class=\"kw3\">Math</span>.<span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span> = <span class=\"nu0\">1</span>;<br/>\t\t\t\t<span class=\"kw2\">var</span> choice:<span class=\"kw3\">int</span> = <span class=\"kw3\">Math</span>.<span class=\"kw3\">floor</span><span class=\"br0\">(</span><span class=\"kw3\">Math</span>.<span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>\t\t\t\t<span class=\"kw2\">var</span> shown:<span class=\"kw3\">int</span>;<br/>\u00a0<br/>\t\t\t\t<span class=\"kw1\">do</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tshown = <span class=\"kw3\">Math</span>.<span class=\"kw3\">floor</span><span class=\"br0\">(</span><span class=\"kw3\">Math</span>.<span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>;<br/>\t\t\t\t<span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span> == <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> shown == choice<span class=\"br0\">)</span>;<br/>\u00a0<br/>\t\t\t\tstayWins += doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span>;<br/>\t\t\t\tswitchWins += doors<span class=\"br0\">[</span><span class=\"nu0\">3</span> - choice - shown<span class=\"br0\">]</span>;<br/>\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t\t<span class=\"kw3\">trace</span><span class=\"br0\">(</span><span class=\"st0\">\"Switching wins \"</span> + switchWins + <span class=\"st0\">\" times. (\"</span> + <span class=\"br0\">(</span>switchWins <span class=\"sy0\">/</span> iterations<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> + <span class=\"st0\">\"%)\"</span><span class=\"br0\">)</span>;<br/>\t\t\t<span class=\"kw3\">trace</span><span class=\"br0\">(</span><span class=\"st0\">\"Staying wins \"</span> + stayWins + <span class=\"st0\">\" times. (\"</span> + <span class=\"br0\">(</span>stayWins <span class=\"sy0\">/</span> iterations<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> + <span class=\"st0\">\"%)\"</span><span class=\"br0\">)</span>;<br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ada", "loc": 76, "block": "<pre class=\"ada highlighted_source\"><span class=\"co1\">-- Monty Hall Game</span><br/>\u00a0<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_Io</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Float_Text_Io</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Float_Text_Io</span>;<br/><span class=\"kw3\">with</span> ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Monty_Stats <span class=\"kw1\">is</span><br/>   Num_Iterations\u00a0: Positive\u00a0:= <span class=\"nu0\">100000</span>;<br/>   <span class=\"kw3\">type</span> Action_Type <span class=\"kw1\">is</span> <span class=\"br0\">(</span>Stay, Switch<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Prize_Type <span class=\"kw1\">is</span> <span class=\"br0\">(</span>Goat, Pig, Car<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">type</span> Door_Index <span class=\"kw1\">is</span> <span class=\"kw3\">range</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">3</span>;<br/>   <span class=\"kw3\">package</span> Random_Prize <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span><span class=\"br0\">(</span>Door_Index<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">use</span> Random_Prize;<br/>   Seed\u00a0: Generator;<br/>   Doors\u00a0: <span class=\"kw3\">array</span><span class=\"br0\">(</span>Door_Index<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Prize_Type;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> Set_Prizes <span class=\"kw1\">is</span><br/>      Prize_Index\u00a0: Door_Index;<br/>      Booby_Prize\u00a0: Prize_Type\u00a0:= Goat;<br/>   <span class=\"kw1\">begin</span><br/>      Reset<span class=\"br0\">(</span>Seed<span class=\"br0\">)</span>;<br/>      Prize_Index\u00a0:= Random<span class=\"br0\">(</span>Seed<span class=\"br0\">)</span>;<br/>      Doors<span class=\"br0\">(</span>Prize_Index<span class=\"br0\">)</span>\u00a0:= Car;<br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Doors'<span class=\"kw3\">range</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">if</span> I /= Prize_Index <span class=\"kw1\">then</span><br/>            Doors<span class=\"br0\">(</span>I<span class=\"br0\">)</span>\u00a0:= Booby_Prize;<br/>            Booby_Prize\u00a0:= Prize_Type'Succ<span class=\"br0\">(</span>Booby_Prize<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span> Set_Prizes;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Play<span class=\"br0\">(</span>Action\u00a0: Action_Type<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Prize_Type <span class=\"kw1\">is</span><br/>      Chosen\u00a0: Door_Index\u00a0:= Random<span class=\"br0\">(</span>Seed<span class=\"br0\">)</span>;<br/>      Monty\u00a0: Door_Index;<br/>   <span class=\"kw1\">begin</span><br/>      Set_Prizes;<br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Doors'<span class=\"kw3\">range</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">if</span> I /= Chosen <span class=\"kw2\">and</span> Doors<span class=\"br0\">(</span>I<span class=\"br0\">)</span> /= Car <span class=\"kw1\">then</span><br/>            Monty\u00a0:= I;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">if</span> Action = Switch <span class=\"kw1\">then</span><br/>         <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> Doors'<span class=\"kw3\">range</span> <span class=\"kw1\">loop</span><br/>            <span class=\"kw1\">if</span> I /= Monty <span class=\"kw2\">and</span> I /= Chosen <span class=\"kw1\">then</span><br/>               Chosen\u00a0:= I;<br/>               <span class=\"kw3\">exit</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">return</span> Doors<span class=\"br0\">(</span>Chosen<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Play;<br/>   Winners\u00a0: Natural;<br/>   Pct\u00a0: Float;<br/><span class=\"kw1\">begin</span><br/>   Winners\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"me1\">Num_Iterations</span> <span class=\"kw1\">loop</span><br/>      <span class=\"kw1\">if</span> Play<span class=\"br0\">(</span>Stay<span class=\"br0\">)</span> = Car <span class=\"kw1\">then</span><br/>         Winners\u00a0:= Winners + <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   Put<span class=\"br0\">(</span><span class=\"st0\">\"Stay\u00a0: count\"</span> &amp; Natural'Image<span class=\"br0\">(</span>Winners<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" = \"</span><span class=\"br0\">)</span>;<br/>   Pct\u00a0:= Float<span class=\"br0\">(</span>Winners * <span class=\"nu0\">100</span><span class=\"br0\">)</span> / Float<span class=\"br0\">(</span>Num_Iterations<span class=\"br0\">)</span>;<br/>   Put<span class=\"br0\">(</span>Item =&gt; Pct, Aft =&gt; <span class=\"nu0\">2</span>, Exp =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>   Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"%\"</span><span class=\"br0\">)</span>;<br/>   Winners\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"me1\">Num_Iterations</span> <span class=\"kw1\">loop</span><br/>      <span class=\"kw1\">if</span> Play<span class=\"br0\">(</span>Switch<span class=\"br0\">)</span> = Car <span class=\"kw1\">then</span><br/>         Winners\u00a0:= Winners + <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   Put<span class=\"br0\">(</span><span class=\"st0\">\"Switch\u00a0: count\"</span> &amp; Natural'Image<span class=\"br0\">(</span>Winners<span class=\"br0\">)</span> &amp; <span class=\"st0\">\" = \"</span><span class=\"br0\">)</span>;<br/>   Pct\u00a0:= Float<span class=\"br0\">(</span>Winners * <span class=\"nu0\">100</span><span class=\"br0\">)</span> / Float<span class=\"br0\">(</span>Num_Iterations<span class=\"br0\">)</span>;<br/>   Put<span class=\"br0\">(</span>Item =&gt; Pct, Aft =&gt; <span class=\"nu0\">2</span>, Exp =&gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>   Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"%\"</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span> Monty_Stats;</pre>"}, {"lang": "ALGOL 68", "loc": 54, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw3\">INT</span> trials<span class=\"sy1\">=</span>100 000<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> brand <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> n<span class=\"br0\">)</span><span class=\"kw3\">INT</span><span class=\"sy1\">:</span> 1 <span class=\"sy1\">+</span> <span class=\"kw8\">ENTIER</span> <span class=\"br0\">(</span>n <span class=\"sy1\">*</span> random<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> percent <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">REAL</span> x<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span><span class=\"re1\">100.0</span><span class=\"sy1\">*</span>x<span class=\"sy1\">/</span>trials<span class=\"sy1\">,</span>0<span class=\"sy1\">,</span>2<span class=\"br0\">)</span><span class=\"sy1\">+</span><span class=\"st0\">\"%\"</span><span class=\"sy1\">;</span><br/>\u00a0<br/>main<span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>  <span class=\"kw3\">INT</span> prize<span class=\"sy1\">,</span> choice<span class=\"sy1\">,</span> show<span class=\"sy1\">,</span> not shown<span class=\"sy1\">,</span> new choice<span class=\"sy1\">;</span><br/>  <span class=\"kw3\">INT</span> stay winning<span class=\"sy1\">:=</span>0<span class=\"sy1\">,</span> change winning<span class=\"sy1\">:=</span>0<span class=\"sy1\">,</span> random winning<span class=\"sy1\">:=</span>0<span class=\"sy1\">;</span><br/>  <span class=\"kw3\">INT</span> doors <span class=\"sy1\">=</span> 3<span class=\"sy1\">;</span><br/>  <span class=\"br0\">[</span>doors<span class=\"sy1\">-</span>1<span class=\"br0\">]</span><span class=\"kw3\">INT</span> other door<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw2\">TO</span> trials <span class=\"kw2\">DO</span><br/>     <span class=\"coMULTI\"># put the prize somewhere #</span><br/>     prize <span class=\"sy1\">:=</span> brand<span class=\"br0\">(</span>doors<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>     <span class=\"coMULTI\"># let the user choose a door #</span><br/>     choice <span class=\"sy1\">:=</span> brand<span class=\"br0\">(</span>doors<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>     <span class=\"coMULTI\"># let us take a list of unchoosen doors #</span><br/>     <span class=\"kw3\">INT</span> k <span class=\"sy1\">:=</span> <span class=\"kw8\">LWB</span> other door<span class=\"sy1\">;</span><br/>     <span class=\"kw2\">FOR</span> j <span class=\"kw2\">TO</span> doors <span class=\"kw2\">DO</span><br/>        <span class=\"kw2\">IF</span> j<span class=\"sy1\">/=</span>choice <span class=\"kw2\">THEN</span> other door<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> j<span class=\"sy1\">;</span> k<span class=\"sy1\">+:=</span>1 <span class=\"kw2\">FI</span><br/>     <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>     <span class=\"coMULTI\"># Monty opens one... #</span><br/>     <span class=\"kw2\">IF</span> choice <span class=\"sy1\">=</span> prize <span class=\"kw2\">THEN</span><br/>     <span class=\"coMULTI\"># staying the user will win... Monty opens a random port#</span><br/>       show <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span> brand<span class=\"br0\">(</span>doors <span class=\"sy1\">-</span> 1<span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>       not shown <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span> <span class=\"br0\">(</span>show<span class=\"sy1\">+</span>1<span class=\"br0\">)</span> <span class=\"kw12\">MOD</span> <span class=\"br0\">(</span>doors <span class=\"sy1\">-</span> 1 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> 1<span class=\"br0\">]</span><br/>     <span class=\"kw2\">ELSE</span> <span class=\"coMULTI\"># no random, Monty can open just one door... #</span><br/>       <span class=\"kw2\">IF</span> other door<span class=\"br0\">[</span>1<span class=\"br0\">]</span> <span class=\"sy1\">=</span> prize <span class=\"kw2\">THEN</span><br/>           show <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span>2<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>           not shown <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span>1<span class=\"br0\">]</span><br/>       <span class=\"kw2\">ELSE</span><br/>           show <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span>1<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>           not shown <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span>2<span class=\"br0\">]</span><br/>       <span class=\"kw2\">FI</span><br/>     <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>\u00a0<br/>     <span class=\"coMULTI\"># the user randomly choose one of the two closed doors<br/>        (one is his/her previous choice, the second is the<br/>        one not shown ) #</span><br/>     other door<span class=\"br0\">[</span>1<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> choice<span class=\"sy1\">;</span><br/>     other door<span class=\"br0\">[</span>2<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> not shown<span class=\"sy1\">;</span><br/>     new choice <span class=\"sy1\">:=</span> other door<span class=\"br0\">[</span> brand<span class=\"br0\">(</span>doors <span class=\"sy1\">-</span> 1<span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>     <span class=\"coMULTI\"># now let us count if it takes it or not #</span><br/>     <span class=\"kw2\">IF</span> choice <span class=\"sy1\">=</span> prize <span class=\"kw2\">THEN</span> stay winning<span class=\"sy1\">+:=</span>1 <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>     <span class=\"kw2\">IF</span> not shown <span class=\"sy1\">=</span> prize <span class=\"kw2\">THEN</span> change winning<span class=\"sy1\">+:=</span>1 <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>     <span class=\"kw2\">IF</span> new choice <span class=\"sy1\">=</span> prize <span class=\"kw2\">THEN</span> random winning<span class=\"sy1\">+:=</span>1 <span class=\"kw2\">FI</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"Staying: \"</span><span class=\"sy1\">,</span> percent<span class=\"br0\">(</span>stay winning<span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"Changing: \"</span><span class=\"sy1\">,</span> percent<span class=\"br0\">(</span>change winning<span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw22\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"New random choice: \"</span><span class=\"sy1\">,</span> percent<span class=\"br0\">(</span>random winning<span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">new line</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "APL", "loc": 15, "block": "<pre class=\"text highlighted_source\">     \u2207 Run runs;doors;i;chosen;cars;goats;swap;stay;ix;prices<br/>[1]   \u235d0: Monthy Hall problem<br/>[2]   \u235d1: http://rosettacode.org/wiki/Monty_Hall_problem<br/>[3]<br/>[4]    (\u2395IO \u2395ML)\u21900 1<br/>[5]    prices\u21900 0 1               \u235d 0=Goat, 1=Car<br/>[6]<br/>[7]    ix\u2190\u2283,/{3?3}\u00a8\u2373runs          \u235d random indexes of doors (placement of car)<br/>[8]    doors\u2190(runs 3)\u2374prices[ix]  \u235d matrix of doors<br/>[9]    stay\u2190+\u233fdoors[;?3]          \u235d chose randomly one door - is it a car?<br/>[10]   swap\u2190runs-stay             \u235d If not, then the other one is!<br/>[11]<br/>[12]   \u2395\u2190'Swap: ',(2\u2355100\u00d7(swap\u00f7runs)),'% it''s a car'<br/>[13]   \u2395\u2190'Stay: ',(2\u2355100\u00d7(stay\u00f7runs)),'% it''s a car'<br/>     \u2207</pre>"}, {"lang": "AutoHotkey", "loc": 42, "block": "<pre class=\"ahk highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/_NoTrayIcon.htm\"><span class=\"kw5\">#NoTrayIcon</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/_SingleInstance.htm\"><span class=\"kw5\">#SingleInstance</span></a><span class=\"sy0\">,</span> OFF<br/><a href=\"http://www.autohotkey.com/docs/commands/_Persistent.htm\"><span class=\"kw5\">#Persistent</span></a><br/><a href=\"http://www.autohotkey.com/docs/commands/SetBatchLines.htm\"><span class=\"kw3\">SetBatchLines</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>Iterations <span class=\"sy0\">=</span> <span class=\"nu0\">1000</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%Iterations%</span><br/><span class=\"br0\">{</span><br/>   <span class=\"kw1\">If</span> Monty_Hall<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      Correct_Change<span class=\"sy0\">++</span><br/>   <span class=\"kw1\">Else</span><br/>      Incorrect_Change<span class=\"sy0\">++</span><br/>   <span class=\"kw1\">If</span> Monty_Hall<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>      Correct_Random<span class=\"sy0\">++</span><br/>   <span class=\"kw1\">Else</span><br/>      Incorrect_Random<span class=\"sy0\">++</span><br/>   <span class=\"kw1\">If</span> Monty_Hall<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>      Correct_Stay<span class=\"sy0\">++</span><br/>   <span class=\"kw1\">Else</span><br/>      Incorrect_Stay<span class=\"sy0\">++</span><br/><span class=\"br0\">}</span><br/>Percent_Change <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">floor</span></a><span class=\"br0\">(</span>Correct_Change <span class=\"sy0\">/</span> Iterations <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>Percent_Random <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">floor</span></a><span class=\"br0\">(</span>Correct_Random <span class=\"sy0\">/</span> Iterations <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>Percent_Stay <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">floor</span></a><span class=\"br0\">(</span>Correct_Stay <span class=\"sy0\">/</span> Iterations <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,,</span> Monty Hall Problem<span class=\"sy0\">,</span> These are the results:`r`n`r`nWhen I changed my guess<span class=\"sy0\">,</span> I got <span class=\"re0\">%Correct_Change%</span> of <span class=\"re0\">%Iterations%</span> <span class=\"br0\">(</span>that's <span class=\"re0\">%Incorrect_Change%</span> incorrect<span class=\"br0\">)</span><span class=\"sy0\">.</span> Thats <span class=\"re0\">%Percent_Change%</span>`% correct<span class=\"sy0\">.</span>`r`nWhen I randomly changed my guess<span class=\"sy0\">,</span> I got <span class=\"re0\">%Correct_Random%</span> of <span class=\"re0\">%Iterations%</span> <span class=\"br0\">(</span>that's <span class=\"re0\">%Incorrect_Random%</span> incorrect<span class=\"br0\">)</span><span class=\"sy0\">.</span> Thats <span class=\"re0\">%Percent_Random%</span>`% correct<span class=\"sy0\">.</span>`r`nWhen I stayed with my first guess<span class=\"sy0\">,</span> I got <span class=\"re0\">%Correct_Stay%</span> of <span class=\"re0\">%Iterations%</span> <span class=\"br0\">(</span>that's <span class=\"re0\">%Incorrect_Stay%</span> incorrect<span class=\"br0\">)</span><span class=\"sy0\">.</span> Thats <span class=\"re0\">%Percent_Stay%</span>`% correct<span class=\"sy0\">.</span><br/><a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a><br/>Monty_Hall<span class=\"br0\">(</span>Mode<span class=\"br0\">)</span> <span class=\"co1\">;Mode is 1 for change, 2 for random, or 3 for stay</span><br/><span class=\"br0\">{</span><br/>   <a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> prize<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><br/>   <a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> guess<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>prize <span class=\"sy0\">=</span> guess <span class=\"sy0\">&amp;&amp;</span> Mode\u00a0!<span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">While</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a>\u00a0!<span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a>\u00a0!<span class=\"sy0\">=</span> guess<br/>         <a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><br/>   <span class=\"kw1\">Else</span><br/>      <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a> <span class=\"sy0\">:=</span> <span class=\"nu0\">6</span> <span class=\"sy0\">-</span> prize <span class=\"sy0\">-</span> guess<br/>   <a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> change_guess<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Mode <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> || <span class=\"br0\">(</span>change_guess <span class=\"sy0\">&amp;&amp;</span> Mode <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Return</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span> <span class=\"sy0\">-</span> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">show</span></a> <span class=\"sy0\">-</span> guess<span class=\"br0\">)</span> <span class=\"sy0\">=</span> prize<br/>   <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span>Mode <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> || <span class=\"br0\">(</span>!change_guess <span class=\"sy0\">&amp;&amp;</span> Mode <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Return</span><span class=\"sy0\">,</span> guess <span class=\"sy0\">=</span> prize<br/>   <span class=\"kw1\">Else</span><br/>      <span class=\"kw1\">Return</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 57, "block": "<pre class=\"awk highlighted_source\"><span class=\"co1\">#!/bin/gawk -f </span><br/>\u00a0<br/><span class=\"co1\"># Monty Hall problem</span><br/>\u00a0<br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">srand</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\tdoors = <span class=\"nu0\">3</span><br/>\titerations = <span class=\"nu0\">10000</span><br/>\t<span class=\"co1\"># Behind a door: </span><br/>\tEMPTY = <span class=\"st0\">\"empty\"</span>; PRIZE = <span class=\"st0\">\"prize\"</span><br/>\t<span class=\"co1\"># Algorithm used</span><br/>  KEEP = <span class=\"st0\">\"keep\"</span>; SWITCH=<span class=\"st0\">\"switch\"</span>; <span class=\"kw4\">RAND</span>=<span class=\"st0\">\"random\"</span>; <br/>  <span class=\"co1\">#</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> monty_hall<span class=\"br0\">(</span> choice, algorithm <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"co1\"># Set up doors</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span> i=<span class=\"nu0\">0</span>; i<span class=\"sy2\">&lt;</span>doors; i<span class=\"sy3\">++</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tdoor<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = EMPTY<br/>\t<span class=\"br0\">}</span><br/>  <span class=\"co1\"># One door with prize</span><br/>\tdoor<span class=\"br0\">[</span><span class=\"kw4\">int</span><span class=\"br0\">(</span><span class=\"kw4\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy3\">*</span>doors<span class=\"br0\">)</span><span class=\"br0\">]</span> = PRIZE<br/>\u00a0<br/>  chosen = door<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><br/>  del door<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"co1\">#if you didn't choose the prize first time around then</span><br/>  <span class=\"co1\"># that will be the alternative</span><br/>\talternative = <span class=\"br0\">(</span>chosen <span class=\"sy2\">==</span> PRIZE<span class=\"br0\">)</span> <span class=\"sy5\">?</span> EMPTY <span class=\"sy5\">:</span> PRIZE <br/>\u00a0<br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> algorithm <span class=\"sy2\">==</span> KEEP<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw6\">return</span> chosen<br/>\t<span class=\"br0\">}</span> <br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> algorithm <span class=\"sy2\">==</span> SWITCH<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw6\">return</span> alternative<br/>\t<span class=\"br0\">}</span> <br/>\t<span class=\"kw6\">return</span> <span class=\"kw4\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">&lt;</span><span class=\"nu0\">0.5</span> <span class=\"sy5\">?</span> chosen <span class=\"sy5\">:</span> alternative<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> simulate<span class=\"br0\">(</span>algo<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\tprizecount = <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>j=<span class=\"nu0\">0</span>; j<span class=\"sy2\">&lt;</span> iterations; j<span class=\"sy3\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> monty_hall<span class=\"br0\">(</span> <span class=\"kw4\">int</span><span class=\"br0\">(</span><span class=\"kw4\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy3\">*</span>doors<span class=\"br0\">)</span>, algo<span class=\"br0\">)</span> <span class=\"sy2\">==</span> PRIZE<span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>\t\t\tprizecount <span class=\"sy3\">++</span> <br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw5\">printf</span> <span class=\"st0\">\"  Algorithm\u00a0%7s: prize count =\u00a0%i, =\u00a0%6.2f%%<span class=\"es0\">\\n</span>\"</span>, \\<br/>\t\talgo, prizecount,prizecount<span class=\"sy3\">*</span><span class=\"nu0\">100</span><span class=\"sy3\">/</span>iterations<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw5\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Monty Hall problem simulation:\"</span><br/>\t<span class=\"kw5\">print</span> doors, <span class=\"st0\">\"doors,\"</span>, iterations, <span class=\"st0\">\"iterations.<span class=\"es0\">\\n</span>\"</span><br/>\tsimulate<span class=\"br0\">(</span>KEEP<span class=\"br0\">)</span><br/>\tsimulate<span class=\"br0\">(</span>SWITCH<span class=\"br0\">)</span><br/>\tsimulate<span class=\"br0\">(</span><span class=\"kw4\">RAND</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BASIC", "loc": 19, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckrandomize.shtml\"><span class=\"kw3\">RANDOMIZE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcktimer.shtml\"><span class=\"kw3\">TIMER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> doors<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"co1\">'0 is a goat, 1 is a car</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckcls.shtml\"><span class=\"kw3\">CLS</span></a><br/>switchWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>stayWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">FOR</span> plays <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">32767</span><br/>\twinner <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckint.shtml\"><span class=\"kw3\">INT</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrnd.shtml\"><span class=\"kw3\">RND</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\tdoors<span class=\"br0\">(</span>winner<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"co1\">'put a winner in a random door</span><br/>\tchoice <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckint.shtml\"><span class=\"kw3\">INT</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrnd.shtml\"><span class=\"kw3\">RND</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"co1\">'pick a door, any door</span><br/>\t<span class=\"kw1\">DO</span><br/>\t\tshown <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckint.shtml\"><span class=\"kw3\">INT</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrnd.shtml\"><span class=\"kw3\">RND</span></a> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t<span class=\"co1\">'don't show the winner or the choice</span><br/>\t<span class=\"kw1\">LOOP</span> <span class=\"kw1\">WHILE</span> doors<span class=\"br0\">(</span>shown<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> shown <span class=\"sy0\">=</span> choice<br/>\tstayWins <span class=\"sy0\">=</span> stayWins <span class=\"sy0\">+</span> doors<span class=\"br0\">(</span>choice<span class=\"br0\">)</span> <span class=\"co1\">'if you won by staying, count it</span><br/>\tswitchWins <span class=\"sy0\">=</span> switchWins <span class=\"sy0\">+</span> doors<span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">-</span> choice <span class=\"sy0\">-</span> shown<span class=\"br0\">)</span> <span class=\"co1\">'could have switched to win</span><br/>\tdoors<span class=\"br0\">(</span>winner<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">'clear the doors for the next test</span><br/><span class=\"kw1\">NEXT</span> plays<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Switching wins\"</span>; switchWins; <span class=\"st0\">\"times.\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Staying wins\"</span>; stayWins; <span class=\"st0\">\"times.\"</span></pre>"}, {"lang": "BBC BASIC", "loc": 21, "block": "<pre class=\"text highlighted_source\">      total% = 10000<br/>      FOR trial% = 1 TO total%<br/>        prize_door% = RND(3)\u00a0: REM. The prize is behind this door<br/>        guess_door% = RND(3)\u00a0: REM. The contestant guesses this door<br/>        IF prize_door% = guess_door% THEN<br/>          REM. The contestant guessed right, reveal either of the others<br/>          reveal_door% = RND(2)<br/>          IF prize_door% = 1 reveal_door% += 1<br/>          IF prize_door% = 2 AND reveal_door% = 2 reveal_door% = 3<br/>        ELSE<br/>          REM. The contestant guessed wrong, so reveal the non-prize door<br/>          reveal_door% = prize_door% EOR guess_door%<br/>        ENDIF<br/>        stick_door% = guess_door%\u00a0: REM. The sticker doesn't change his mind<br/>        swap_door% = guess_door% EOR reveal_door%\u00a0: REM. but the swapper does<br/>        IF stick_door% = prize_door% sticker% += 1<br/>        IF swap_door% = prize_door% swapper% += 1<br/>      NEXT trial%<br/>      PRINT \"After a total of \";total%;\" trials,\"<br/>      PRINT \"The 'sticker' won \";sticker%;\" times (\";INT(sticker%/total%*100);\"%)\"<br/>      PRINT \"The 'swapper' won \";swapper%;\" times (\";INT(swapper%/total%*100);\"%)\"</pre>"}, {"lang": "C", "loc": 24, "block": "<pre class=\"c highlighted_source\"><span class=\"co1\">//Evidence of the Monty Hall solution.</span><br/>\u00a0<br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define GAMES 3000000</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw4\">unsigned</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> k<span class=\"sy0\">,</span> choice<span class=\"sy0\">,</span> winsbyswitch<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> door<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/srand.html\"><span class=\"kw3\">srand</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/time.html\"><span class=\"kw3\">time</span></a><span class=\"br0\">(</span>NULL<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                                                          <span class=\"co1\">//initialize random seed.</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;</span>GAMES<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        door<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>                                         <span class=\"co1\">//give door 1 either a car or a goat randomly.</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>door<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> door<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>door<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>                                          <span class=\"co1\">//if 1st door has car, give other doors goats.</span><br/>        <span class=\"kw1\">else</span><span class=\"br0\">{</span> door<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> door<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>door<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span>    <span class=\"co1\">//else, give 2nd door car or goat, give 3rd door what's left.</span><br/>        choice <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">3</span><span class=\"sy0\">;</span>                                                      <span class=\"co1\">//choose a random door.</span><br/>\u00a0<br/>        <span class=\"co1\">//if the next door has a goat, and the following door has a car, or vice versa, you'd win if you switch.</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>door<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>choice<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>door<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>choice<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>door<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>choice<span class=\"sy0\">+</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>door<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"br0\">(</span>choice<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"nu19\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> winsbyswitch<span class=\"sy0\">++;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>After\u00a0%u games, I won\u00a0%u by switching.  That is\u00a0%f%%. \"</span><span class=\"sy0\">,</span> GAMES<span class=\"sy0\">,</span> winsbyswitch<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span>winsbyswitch<span class=\"sy0\">*</span><span class=\"nu16\">100.0</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 36, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> switchWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> stayWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        Random gen <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> plays <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> plays <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1000000</span><span class=\"sy0\">;</span> plays<span class=\"sy0\">++</span> <span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> doors <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><span class=\"co1\">//0 is a goat, 1 is a car</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> winner <span class=\"sy0\">=</span> gen<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            doors<span class=\"br0\">[</span>winner<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"co1\">//put a winner in a random door</span><br/>\u00a0<br/>\t    <span class=\"kw4\">int</span> choice <span class=\"sy0\">=</span> gen<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">//pick a door, any door</span><br/>\t    <span class=\"kw4\">int</span> shown<span class=\"sy0\">;</span> <span class=\"co1\">//the shown door</span><br/>\t    <span class=\"kw1\">do</span><br/>            <span class=\"br0\">{</span><br/>\t        shown <span class=\"sy0\">=</span> gen<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> shown <span class=\"sy0\">==</span> choice<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">//don't show the winner or the choice</span><br/>\u00a0<br/>\t    stayWins <span class=\"sy0\">+=</span> doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"co1\">//if you won by staying, count it</span><br/>\u00a0<br/>            <span class=\"co1\">//the switched (last remaining) door is (3 - choice - shown), because 0+1+2=3</span><br/>            switchWins <span class=\"sy0\">+=</span> doors<span class=\"br0\">[</span><span class=\"nu0\">3</span> <span class=\"sy0\">-</span> choice <span class=\"sy0\">-</span> shown<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        Console<span class=\"sy0\">.</span><span class=\"kw1\">Out</span><span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Staying wins \"</span> <span class=\"sy0\">+</span> stayWins <span class=\"sy0\">+</span> <span class=\"st0\">\" times.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Console<span class=\"sy0\">.</span><span class=\"kw1\">Out</span><span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Switching wins \"</span> <span class=\"sy0\">+</span> switchWins <span class=\"sy0\">+</span> <span class=\"st0\">\" times.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 57, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;cstdlib&gt;</span><br/><span class=\"co2\">#include &lt;ctime&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> randint<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"nu16\">1.0</span><span class=\"sy2\">*</span>n<span class=\"sy2\">*</span>std<span class=\"sy4\">::</span><span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy2\">/</span><span class=\"br0\">(</span><span class=\"nu16\">1.0</span><span class=\"sy2\">+</span><span class=\"kw2\">RAND_MAX</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> other<span class=\"br0\">(</span><span class=\"kw4\">int</span> doorA, <span class=\"kw4\">int</span> doorB<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> doorC<span class=\"sy4\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>doorA <span class=\"sy1\">==</span> doorB<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    doorC <span class=\"sy1\">=</span> randint<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>doorC <span class=\"sy1\">&gt;=</span> doorA<span class=\"br0\">)</span><br/>      <span class=\"sy2\">++</span>doorC<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">else</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>doorC <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> doorC <span class=\"sy1\">==</span> doorA <span class=\"sy3\">||</span> doorC <span class=\"sy1\">==</span> doorB<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>doorC<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>      <span class=\"co1\">// empty</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> doorC<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> check<span class=\"br0\">(</span><span class=\"kw4\">int</span> games, <span class=\"kw4\">bool</span> change<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> win_count <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> game <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> game <span class=\"sy1\">&lt;</span> games<span class=\"sy4\">;</span> <span class=\"sy2\">++</span>game<span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> <span class=\"kw4\">const</span> winning_door <span class=\"sy1\">=</span> randint<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> <span class=\"kw4\">const</span> original_choice <span class=\"sy1\">=</span> randint<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> open_door <span class=\"sy1\">=</span> other<span class=\"br0\">(</span>original_choice, winning_door<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> <span class=\"kw4\">const</span> selected_door <span class=\"sy1\">=</span> change<span class=\"sy4\">?</span><br/>                                other<span class=\"br0\">(</span>open_door, original_choice<span class=\"br0\">)</span><br/>                              <span class=\"sy4\">:</span> original_choice<span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>selected_door <span class=\"sy1\">==</span> winning_door<span class=\"br0\">)</span><br/>      <span class=\"sy2\">++</span>win_count<span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> win_count<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">srand</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">time</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">int</span> games <span class=\"sy1\">=</span> <span class=\"nu0\">10000</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">int</span> wins_stay <span class=\"sy1\">=</span> check<span class=\"br0\">(</span>games, <span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw4\">int</span> wins_change <span class=\"sy1\">=</span> check<span class=\"br0\">(</span>games, <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"staying: \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu16\">100.0</span><span class=\"sy2\">*</span>wins_stay<span class=\"sy2\">/</span>games <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"%, changing: \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu16\">100.0</span><span class=\"sy2\">*</span>wins_change<span class=\"sy2\">/</span>games <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"%<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Chapel", "loc": 52, "block": "<pre class=\"text highlighted_source\">use Random;<br/>\u00a0<br/>param doors: int = 3;<br/>config const games: int = 1000;<br/>\u00a0<br/>config const maxTasks = 32;<br/>var numTasks = 1;<br/>while( games / numTasks &gt; 1000000 &amp;&amp; numTasks &lt; maxTasks ) do numTasks += 1;<br/>const tasks = 1..#numTasks;<br/>const games_per_task = games / numTasks\u00a0;<br/>const remaining_games = games\u00a0% numTasks\u00a0;<br/>\u00a0<br/>var wins_by_stay: [tasks] int;<br/>\u00a0<br/>coforall task in tasks {<br/>\u00a0<br/>  var rand = new  RandomStream();<br/>\u00a0<br/>  for game in 1..#games_per_task {<br/>    var player_door =  (rand.getNext() * 1000): int\u00a0% doors\u00a0;<br/>    var winning_door = (rand.getNext() * 1000): int\u00a0% doors\u00a0;<br/>    if player_door == winning_door then<br/>      wins_by_stay[ task ] += 1;<br/>  }<br/>\u00a0<br/>  if task == tasks.last then {<br/>    for game in 1..#remaining_games {<br/>      var player_door =  (rand.getNext() * 1000): int\u00a0% doors\u00a0;<br/>      var winning_door = (rand.getNext() * 1000): int\u00a0% doors\u00a0;<br/>      if player_door == winning_door then<br/>        wins_by_stay[ task ] += 1;<br/>    }  <br/>  }<br/>\u00a0<br/>}<br/>\u00a0<br/>var total_by_stay = + reduce wins_by_stay;<br/>\u00a0<br/>var total_by_switch = games - total_by_stay;<br/>var percent_by_stay = ((total_by_stay: real) / games) * 100;<br/>var percent_by_switch = ((total_by_switch: real) / games) * 100;<br/>\u00a0<br/>writeln( \"Wins by staying: \", total_by_stay, \" or \", percent_by_stay, \"%\" );<br/>writeln( \"Wins by switching: \", total_by_switch, \" or \", percent_by_switch, \"%\" );<br/>if ( total_by_stay &gt; total_by_switch ){<br/>  writeln( \"Staying is the superior method.\" );<br/>} else if( total_by_stay &lt; total_by_switch ){<br/>  writeln( \"Switching is the superior method.\" );<br/>} else {<br/>  writeln( \"Both methods are equal.\" );<br/>}<br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 16, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">ns</span> monty<span class=\"sy0\">-</span>hall<span class=\"sy0\">-</span>problem<br/>  <span class=\"br0\">(</span>:<span class=\"me1\">use</span> <span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>contrib<span class=\"sy0\">.</span>seq\u00a0:<span class=\"me1\">only</span> <span class=\"br0\">(</span>shuffle<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> play<span class=\"sy0\">-</span>game <span class=\"br0\">[</span>staying<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>doors <span class=\"br0\">(</span>shuffle <span class=\"br0\">[</span>:<span class=\"me1\">goat</span>\u00a0:<span class=\"me1\">goat</span>\u00a0:<span class=\"me1\">car</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        choice <span class=\"br0\">(</span>rand<span class=\"sy0\">-</span>int <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">[</span>a b<span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">filter</span> #<span class=\"br0\">(</span><span class=\"kw1\">not</span><span class=\"sy0\">=</span> choice <span class=\"sy0\">%</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        alternative <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span>\u00a0:<span class=\"me1\">goat</span> <span class=\"br0\">(</span>nth doors a<span class=\"br0\">)</span><span class=\"br0\">)</span> b a<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">=</span>\u00a0:<span class=\"me1\">car</span> <span class=\"br0\">(</span>nth doors <span class=\"br0\">(</span><span class=\"kw1\">if</span> staying choice alternative<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> simulate <span class=\"br0\">[</span>staying times<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>wins <span class=\"br0\">(</span><span class=\"kw1\">reduce</span> <span class=\"br0\">(</span><span class=\"kw1\">fn</span> <span class=\"br0\">[</span>counter _<span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>play<span class=\"sy0\">-</span>game staying<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">inc</span> counter<span class=\"br0\">)</span> counter<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"nu0\">0</span><br/>                     <span class=\"br0\">(</span><span class=\"kw1\">range</span> times<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">str</span> <span class=\"st0\">\"wins \"</span> wins <span class=\"st0\">\" times out of \"</span> times<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 89, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> monty-hall<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">78</span>  Num-Games               <span class=\"kw3\">VALUE</span> <span class=\"nu0\">1000000</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       *&gt; These are needed so the <span class=\"kw3\">values</span> are passed <span class=\"kw2\">to</span><br/>       *&gt; get-rand-int correctly<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  One                     <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  Three                   <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">3</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  doors-<span class=\"kw3\">area</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  doors               <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span> <span class=\"kw3\">OCCURS</span> <span class=\"nu0\">3</span> <span class=\"kw2\">TIMES</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  choice                  <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  shown                   <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  winner                  <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  switch-wins             <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  stay-wins               <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  stay-wins-percent       <span class=\"kw3\">PIC</span> Z9<span class=\"sy0\">.</span>99<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  switch-wins-percent     <span class=\"kw3\">PIC</span> Z9<span class=\"sy0\">.</span>99<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> Num-Games <span class=\"kw2\">TIMES</span><br/>               <span class=\"kw2\">MOVE</span> <span class=\"nu0\">0</span> <span class=\"kw2\">TO</span> doors <span class=\"br0\">(</span>winner<span class=\"br0\">)</span><br/>\u00a0<br/>               <span class=\"kw2\">CALL</span> <span class=\"st0\">\"get-rand-int\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> One<span class=\"sy0\">,</span> Three<span class=\"sy0\">,</span><br/>                   <span class=\"kw3\">REFERENCE</span> winner<br/>               <span class=\"kw2\">MOVE</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> doors <span class=\"br0\">(</span>winner<span class=\"br0\">)</span><br/>\u00a0<br/>               <span class=\"kw2\">CALL</span> <span class=\"st0\">\"get-rand-int\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> One<span class=\"sy0\">,</span> Three<span class=\"sy0\">,</span><br/>                   <span class=\"kw3\">REFERENCE</span> choice<br/>\u00a0<br/>               <span class=\"kw2\">PERFORM</span> <span class=\"kw3\">WITH</span> <span class=\"kw3\">TEST</span> <span class=\"kw3\">AFTER</span><br/>                       <span class=\"kw2\">UNTIL</span> <span class=\"kw3\">NOT</span><span class=\"br0\">(</span>shown <span class=\"sy0\">=</span> winner <span class=\"kw3\">OR</span> choice<span class=\"br0\">)</span><br/>                   <span class=\"kw2\">CALL</span> <span class=\"st0\">\"get-rand-int\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> One<span class=\"sy0\">,</span> Three<span class=\"sy0\">,</span><br/>                       <span class=\"kw3\">REFERENCE</span> shown<br/>               END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>               <span class=\"kw2\">ADD</span> doors <span class=\"br0\">(</span>choice<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> stay-wins<br/>               <span class=\"kw2\">ADD</span> doors <span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"sy0\"> - </span>choice<span class=\"sy0\"> - </span>shown<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> switch-wins<br/>           END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>           <span class=\"kw2\">COMPUTE</span> stay-wins-percent <span class=\"kw3\">ROUNDED</span> <span class=\"sy0\">=</span><br/>               stay-wins<span class=\"sy0\"> / </span>Num-Games<span class=\"sy0\"> * </span><span class=\"nu0\">100</span><br/>           <span class=\"kw2\">COMPUTE</span> switch-wins-percent <span class=\"kw3\">ROUNDED</span> <span class=\"sy0\">=</span><br/>               switch-wins<span class=\"sy0\"> / </span>Num-Games<span class=\"sy0\"> * </span><span class=\"nu0\">100</span><br/>\u00a0<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Staying wins   \"</span> stay-wins <span class=\"st0\">\" times (\"</span><br/>               stay-wins-percent <span class=\"st0\">\"%).\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Switching wins \"</span> switch-wins <span class=\"st0\">\" times (\"</span><br/>               switch-wins-percent <span class=\"st0\">\"%).\"</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> get-rand-int<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  call-flag               <span class=\"kw3\">PIC</span> X <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"Y\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  first-<span class=\"kw2\">call</span>          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"Y\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">FALSE</span> <span class=\"st0\">\"N\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  num-<span class=\"kw4\">range</span>               <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  min-num                 <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  max-num                 <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  ret                     <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> min-num<span class=\"sy0\">,</span> max-num<span class=\"sy0\">,</span> ret<span class=\"sy0\">.</span><br/>           *&gt; Seed <span class=\"kw4\">RANDOM</span> once<span class=\"sy0\">.</span><br/>           <span class=\"kw1\">IF</span> first-<span class=\"kw2\">call</span><br/>               <span class=\"kw2\">MOVE</span> <span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">RANDOM</span><span class=\"br0\">(</span><span class=\"kw3\">FUNCTION</span> CURRENT-<span class=\"kw3\">DATE</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span>:<span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                   <span class=\"kw2\">TO</span> num-<span class=\"kw4\">range</span><br/>               <span class=\"kw3\">SET</span> first-<span class=\"kw2\">call</span> <span class=\"kw2\">TO</span> <span class=\"kw3\">FALSE</span><br/>           END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>           <span class=\"kw2\">COMPUTE</span> num-<span class=\"kw4\">range</span> <span class=\"sy0\">=</span> max-num<span class=\"sy0\"> - </span>min-num<span class=\"sy0\"> + </span><span class=\"nu0\">1</span><br/>           <span class=\"kw2\">COMPUTE</span> ret <span class=\"sy0\">=</span><br/>              <span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">MOD</span><span class=\"br0\">(</span><span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">RANDOM</span><span class=\"sy0\"> * </span><span class=\"nu0\">100000</span><span class=\"sy0\">,</span> num-<span class=\"kw4\">range</span><span class=\"br0\">)</span><br/>             <span class=\"sy0\"> + </span>min-num<br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> get-rand-int<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> monty-hall<span class=\"sy0\">.</span></pre>"}, {"lang": "ColdFusion", "loc": 42, "block": "<pre class=\"cfm highlighted_source\"><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">cfscript</span><span class=\"sy0\">&gt;</span></span><br/>    function runmontyhall(num_tests) {<br/>\t// number of wins when player switches after original selection<br/>\tswitch_wins\t= 0;<br/>\t// number of wins when players \"sticks\" with original selection<br/>\tstick_wins  = 0;<br/>\t// run all the tests<br/>\tfor(i=1;i<span class=\"sc5\"><span class=\"sy0\">&lt;=</span>num_tests;i++<span class=\"br0\">)</span> <span class=\"br0\">{</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// unconditioned potential for selection of each door</span></span><br/><span class=\"sc5\">\t    doors \t<span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">]</span>;</span><br/><span class=\"sc5\">\t    <span class=\"co1\">// winning door is randomly assigned...</span></span><br/><span class=\"sc5\">\t    winner \t<span class=\"sy0\">=</span> <span class=\"kw5\">randrange</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">\t    <span class=\"co1\">// ...and actualized in the array of real doors</span></span><br/><span class=\"sc5\">\t    doors<span class=\"br0\">[</span>winner<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>;</span><br/><span class=\"sc5\">\t    <span class=\"co1\">// player chooses one of three doors</span></span><br/><span class=\"sc5\">\t    choice \t<span class=\"sy0\">=</span> <span class=\"kw5\">randrange</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">\t    do <span class=\"br0\">{</span></span><br/><span class=\"sc5\">\t\t<span class=\"co1\">// monty randomly reveals a door...</span></span><br/><span class=\"sc5\">\t\tshown <span class=\"sy0\">=</span> <span class=\"kw5\">randrange</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">\t    <span class=\"br0\">}</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// ...but monty only reveals empty doors; </span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// he will not reveal the door that the player has choosen</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// nor will he reveal the winning door</span></span><br/><span class=\"sc5\">\t    <span class=\"kw4\">while</span><span class=\"br0\">(</span>shown<span class=\"sy0\">==</span>choice || doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span><span class=\"sy0\">==</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">\t    <span class=\"co1\">// when the door the player originally selected is the winner, the \"stick\" option gains a point</span></span><br/><span class=\"sc5\">\t    stick_wins  +<span class=\"sy0\">=</span> doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span>;</span><br/><span class=\"sc5\">\t    <span class=\"co1\">// to calculate the number of times the player would have won with a \"switch\", subtract the</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// \"value\" of the chosen, \"stuck-to\" door from 1, the possible number of wins if the player</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// chose and stuck with the winning door (1), the player would not have won by switching, so</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// the value is 1-1=0 if the player chose and stuck with a losing door (0), the player would</span></span><br/><span class=\"sc5\">\t    <span class=\"co1\">// have won by switching, so the value is 1-0=1</span></span><br/><span class=\"sc5\">\t    switch_wins +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>-doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span>;</span><br/><span class=\"sc5\">\t<span class=\"br0\">}</span></span><br/><span class=\"sc5\">\t<span class=\"co1\">// finally, simply run the percentages for each outcome</span></span><br/><span class=\"sc5\">\tstick_percentage\t<span class=\"sy0\">=</span> <span class=\"br0\">(</span>stick_wins<span class=\"sy0\">/</span>num_tests<span class=\"br0\">)</span>*<span class=\"nu0\">100</span>;</span><br/><span class=\"sc5\">\tswitch_percentage\t<span class=\"sy0\">=</span> <span class=\"br0\">(</span>switch_wins<span class=\"sy0\">/</span>num_tests<span class=\"br0\">)</span>*<span class=\"nu0\">100</span>;</span><br/><span class=\"sc5\">\t<span class=\"kw5\">writeoutput</span><span class=\"br0\">(</span><span class=\"st0\">'Number of Tests:  '</span> <span class=\"sy0\">&amp;</span> num_tests<span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">\t<span class=\"kw5\">writeoutput</span><span class=\"br0\">(</span><span class=\"st0\">'&lt;br /&gt;Stick Wins: '</span> <span class=\"sy0\">&amp;</span> stick_wins <span class=\"sy0\">&amp;</span> <span class=\"st0\">'  ['</span><span class=\"sy0\">&amp;</span> stick_percentage <span class=\"sy0\">&amp;</span><span class=\"st0\">'%]'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">\t<span class=\"kw5\">writeoutput</span><span class=\"br0\">(</span><span class=\"st0\">'&lt;br /&gt;Switch Wins: '</span> <span class=\"sy0\">&amp;</span> switch_wins <span class=\"sy0\">&amp;</span> <span class=\"st0\">'  ['</span><span class=\"sy0\">&amp;</span> switch_percentage <span class=\"sy0\">&amp;</span><span class=\"st0\">'%]'</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\">    <span class=\"br0\">}</span></span><br/><span class=\"sc5\">    runmontyhall<span class=\"br0\">(</span><span class=\"nu0\">10000</span><span class=\"br0\">)</span>;</span><br/><span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">cfscript</span><span class=\"sy0\">&gt;</span></span></pre>"}, {"lang": "Common Lisp", "loc": 15, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> make-round <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">array</span> <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> <span class=\"nu0\">3</span><br/>                           <span class=\"sy0\">:</span><span class=\"me1\">element-type</span> 'bit<br/>                           <span class=\"sy0\">:</span><span class=\"me1\">initial-element</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>bit <span class=\"kw1\">array</span> <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">array</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> show-goat <span class=\"br0\">(</span>initial-choice <span class=\"kw1\">array</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for i <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>/<span class=\"sy0\">=</span> initial-choice i<span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span><span class=\"kw1\">zerop</span> <span class=\"br0\">(</span>bit <span class=\"kw1\">array</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">return</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> won? <span class=\"br0\">(</span><span class=\"kw1\">array</span> i<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span>bit <span class=\"kw1\">array</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 31, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">random</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw4\">int</span> switchWins<span class=\"sy0\">,</span> stayWins<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span>switchWins <span class=\"sy0\">+</span> stayWins <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span>_000<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> carPos <span class=\"sy0\">=</span> uniform<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"co1\">// Which door is car behind?</span><br/>    <span class=\"kw4\">immutable</span> pickPos <span class=\"sy0\">=</span> uniform<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"co1\">// Contestant's initial pick.</span><br/>    <span class=\"kw4\">int</span> openPos<span class=\"sy0\">;</span>  <span class=\"co1\">// Which door is opened by Monty Hall?</span><br/>\u00a0<br/>    <span class=\"co1\">// Monty can't open the door you picked or the one with the car</span><br/>    <span class=\"co1\">// behind it.</span><br/>    <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      openPos <span class=\"sy0\">=</span> uniform<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span>openPos <span class=\"sy0\">==</span> pickPos <span class=\"sy0\">||</span> openPos <span class=\"sy0\">==</span> carPos<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> switchPos<span class=\"sy0\">;</span><br/>    <span class=\"co1\">// Find position that's not currently picked by contestant and</span><br/>    <span class=\"co1\">// was not opened by Monty already.</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;</span> pickPos<span class=\"sy0\">==</span>switchPos <span class=\"sy0\">||</span> openPos<span class=\"sy0\">==</span>switchPos<span class=\"sy0\">;</span> switchPos<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pickPos <span class=\"sy0\">==</span> carPos<span class=\"br0\">)</span><br/>      stayWins<span class=\"sy0\">++;</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>switchPos <span class=\"sy0\">==</span> carPos<span class=\"br0\">)</span><br/>      switchWins<span class=\"sy0\">++;</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw2\">assert</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <span class=\"co1\">// Can't happen.</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  writefln<span class=\"br0\">(</span><span class=\"st0\">\"Switching/Staying wins:\u00a0%d\u00a0%d\"</span><span class=\"sy0\">,</span> switchWins<span class=\"sy0\">,</span> stayWins<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Dart", "loc": 83, "block": "<pre class=\"text highlighted_source\">int rand(int max) =&gt; (Math.random()*max).toInt();<br/>\u00a0<br/>class Game {<br/>  int _prize;<br/>  int _open;<br/>  int _chosen;<br/>\u00a0<br/>  Game() {<br/>    _prize=rand(3);<br/>    _open=null;<br/>    _chosen=null;<br/>  }<br/>\u00a0<br/>  void choose(int door) {<br/>    _chosen=door;<br/>  }<br/>\u00a0<br/>  void reveal() {<br/>    if(_prize==_chosen) {<br/>      int toopen=rand(2);<br/>      if (toopen&gt;=_prize)<br/>        toopen++;<br/>      _open=toopen;<br/>    } else {<br/>      for(int i=0;i&lt;3;i++)<br/>        if(_prize!=i &amp;&amp; _chosen!=i) {<br/>          _open=i;<br/>          break;<br/>        }<br/>    }<br/>  }<br/>\u00a0<br/>  void change() {<br/>    for(int i=0;i&lt;3;i++)<br/>      if(_chosen!=i &amp;&amp; _open!=i) {<br/>        _chosen=i;<br/>        break;<br/>      }<br/>  }<br/>\u00a0<br/>  bool hasWon() =&gt; _prize==_chosen;<br/>\u00a0<br/>  String toString() {<br/>    String res=\"Prize is behind door $_prize\";<br/>    if(_chosen!=null) res+=\", player has chosen door $_chosen\";<br/>    if(_open!=null) res+=\", door $_open is open\";<br/>    return res;<br/>  }<br/>}<br/>\u00a0<br/>void play(int count, bool swap) {<br/>  int wins=0;<br/>\u00a0<br/>  for(int i=0;i&lt;count;i++) {<br/>    Game game=new Game();<br/>    game.choose(rand(3));<br/>    game.reveal();<br/>    if(swap)<br/>      game.change();<br/>    if(game.hasWon())<br/>      wins++;<br/>  }<br/>  String withWithout=swap?\"with\":\"without\";<br/>  double percent=(wins*100.0)/count;<br/>  print(\"playing $withWithout switching won $percent%\");<br/>}<br/>\u00a0<br/>test() {<br/>  for(int i=0;i&lt;5;i++) {<br/>    Game g=new Game();<br/>    g.choose(i%3);<br/>    g.reveal();<br/>    print(g);<br/>    g.change();<br/>    print(g);<br/>    print(\"win==${g.hasWon()}\");<br/>  }<br/>}<br/>\u00a0<br/>main() {<br/>  play(10000,false);<br/>  play(10000,true);<br/>}</pre>"}, {"lang": "Eiffel", "loc": 315, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/>note<br/>\tdescription<span class=\"sy0\">:</span> <span class=\"st0\">\"[<br/>\t\t\t\t\tMonty Hall Problem as an Eiffel Solution<br/>\u00a0<br/>\t\t\t\t\t1. Set the stage: Randomly place car and two goats behind doors 1, 2 and 3.<br/>\t\t\t\t\t2. Monty offers choice of doors --&gt; Contestant will choose a random door or always one door.<br/>\t\t\t\t\t2a. Door has Goat - door remains closed<br/>\t\t\t\t\t2b. Door has Car - door remains closed<br/>\t\t\t\t\t3. Monty offers cash --&gt; Contestant takes or refuses cash.<br/>\t\t\t\t\t3a. Takes cash: Contestant is Cash winner and door is revealed. Car Loser if car door revealed.<br/>\t\t\t\t\t3b. Refuses cash: Leads to offer to switch doors.<br/>\t\t\t\t\t4. Monty offers door switch --&gt; Contestant chooses to stay or change.<br/>\t\t\t\t\t5. Door reveal: Contestant refused cash and did or did not door switch. Either way: Reveal!<br/>\t\t\t\t\t6. Winner and Loser based on door reveal of prize.<br/>\u00a0<br/>\t\t\t\t\tCar Winner: Chooses car door<br/>\t\t\t\t\tCash Winner: Chooses cash over any door<br/>\t\t\t\t\tGoat Loser: Chooses goat door<br/>\t\t\t\t\tCar Loser: Chooses cash over car door or switches from car door to goat door<br/>\t\t\t\t\t]\"</span><br/>\tdate<span class=\"sy0\">:</span> <span class=\"st0\">\"$Date$\"</span><br/>\trevision<span class=\"sy0\">:</span> <span class=\"st0\">\"$Revision$\"</span><br/>\u00a0<br/><span class=\"kw1\">class</span><br/>\tMH_APPLICATION<br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\tmake<br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Initialization</span><br/>\u00a0<br/>\tmake<br/>\t\t\t<span class=\"co1\">-- Initialize Current.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tplay_lets_make_a_deal<br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tplayed_1000_games<span class=\"sy0\">:</span> game_count <span class=\"sy0\">=</span> times_to_play<br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Implementation: Access</span><br/>\u00a0<br/>\tlive_contestant<span class=\"sy0\">:</span> attached <span class=\"kw2\">like</span> contestant<br/>\t\t\t<span class=\"co1\">-- Attached version of `contestant'</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">if</span> attached contestant <span class=\"kw2\">as</span> al_contestant <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> al_contestant<br/>\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t<span class=\"kw2\">create</span> <span class=\"kw3\">Result</span><br/>\t\t\t\t<span class=\"kw2\">check</span> not_attached_contestant<span class=\"sy0\">:</span> <span class=\"kw3\">False</span> <span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tcontestant<span class=\"sy0\">:</span> detachable <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+tuple&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">TUPLE</span></a> <span class=\"br0\">[</span>first_door_choice, second_door_choice<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor; takes_cash, switches_door<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+boolean&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">BOOLEAN</span></a><span class=\"br0\">]</span><br/>\t\t\t<span class=\"co1\">-- Contestant for Current.</span><br/>\u00a0<br/>\tactive_stage_door <span class=\"br0\">(</span>a_door<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_anchor<span class=\"br0\">)</span><span class=\"sy0\">:</span> attached <span class=\"kw2\">like</span> door_anchor<br/>\t\t\t<span class=\"co1\">-- Attached version of `a_door'.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">if</span> attached a_door <span class=\"kw2\">as</span> al_door <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> al_door<br/>\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t<span class=\"kw2\">create</span> <span class=\"kw3\">Result</span><br/>\t\t\t\t<span class=\"kw2\">check</span> not_attached_door<span class=\"sy0\">:</span> <span class=\"kw3\">False</span> <span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tdoor_1, door_2, door_3<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_anchor<br/>\t\t\t<span class=\"co1\">-- Doors with prize names and flags for goat and open (revealed).</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Implementation: Status</span><br/>\u00a0<br/>\tgame_count, car_win_count, cash_win_count, car_loss_count, goat_loss_count, goat_avoidance_count<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> counter_anchor<br/>\tswitch_count, switch_win_count<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> counter_anchor<br/>\tno_switch_count, no_switch_win_count<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> counter_anchor<br/>\t\t\t<span class=\"co1\">-- Counts of games played, wins and losses based on car, cash or goat.</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Implementation: Basic Operations</span><br/>\u00a0<br/>\tprepare_stage<br/>\t\t\t<span class=\"co1\">-- Prepare the stage in terms of what doors have what prizes.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">inspect</span> new_random_of <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">when</span> <span class=\"nu0\">1</span> <span class=\"kw2\">then</span><br/>\t\t\t\tdoor_1 <span class=\"sy0\">:=</span> door_with_car<br/>\t\t\t\tdoor_2 <span class=\"sy0\">:=</span> door_with_goat<br/>\t\t\t\tdoor_3 <span class=\"sy0\">:=</span> door_with_goat<br/>\t\t\t<span class=\"kw2\">when</span> <span class=\"nu0\">2</span> <span class=\"kw2\">then</span><br/>\t\t\t\tdoor_1 <span class=\"sy0\">:=</span> door_with_goat<br/>\t\t\t\tdoor_2 <span class=\"sy0\">:=</span> door_with_car<br/>\t\t\t\tdoor_3 <span class=\"sy0\">:=</span> door_with_goat<br/>\t\t\t<span class=\"kw2\">when</span> <span class=\"nu0\">3</span> <span class=\"kw2\">then</span><br/>\t\t\t\tdoor_1 <span class=\"sy0\">:=</span> door_with_goat<br/>\t\t\t\tdoor_2 <span class=\"sy0\">:=</span> door_with_goat<br/>\t\t\t\tdoor_3 <span class=\"sy0\">:=</span> door_with_car<br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\tactive_stage_door <span class=\"br0\">(</span>door_1<span class=\"br0\">)</span>.<span class=\"me1\">number</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><br/>\t\t\tactive_stage_door <span class=\"br0\">(</span>door_2<span class=\"br0\">)</span>.<span class=\"me1\">number</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><br/>\t\t\tactive_stage_door <span class=\"br0\">(</span>door_3<span class=\"br0\">)</span>.<span class=\"me1\">number</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">3</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tdoor_has_prize<span class=\"sy0\">:</span> <span class=\"kw2\">not</span> active_stage_door <span class=\"br0\">(</span>door_1<span class=\"br0\">)</span>.<span class=\"me1\">is_goat</span> <span class=\"kw2\">or</span><br/>\t\t\t\t\t\t\t<span class=\"kw2\">not</span> active_stage_door <span class=\"br0\">(</span>door_2<span class=\"br0\">)</span>.<span class=\"me1\">is_goat</span> <span class=\"kw2\">or</span><br/>\t\t\t\t\t\t\t<span class=\"kw2\">not</span> active_stage_door <span class=\"br0\">(</span>door_3<span class=\"br0\">)</span>.<span class=\"me1\">is_goat</span><br/>\t\t\tconsistent_door_numbers<span class=\"sy0\">:</span> active_stage_door <span class=\"br0\">(</span>door_1<span class=\"br0\">)</span>.<span class=\"me1\">number</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw2\">and</span><br/>\t\t\t\t\t\t\t\t\t\tactive_stage_door <span class=\"br0\">(</span>door_2<span class=\"br0\">)</span>.<span class=\"me1\">number</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"kw2\">and</span><br/>\t\t\t\t\t\t\t\t\t\tactive_stage_door <span class=\"br0\">(</span>door_3<span class=\"br0\">)</span>.<span class=\"me1\">number</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tdoor_number_having_prize<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor<br/>\t\t\t<span class=\"co1\">-- What door number has the car?</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">if</span> <span class=\"kw2\">not</span> active_stage_door <span class=\"br0\">(</span>door_1<span class=\"br0\">)</span>.<span class=\"me1\">is_goat</span> <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"kw2\">elseif</span> <span class=\"kw2\">not</span> active_stage_door <span class=\"br0\">(</span>door_2<span class=\"br0\">)</span>.<span class=\"me1\">is_goat</span> <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">2</span><br/>\t\t\t<span class=\"kw2\">elseif</span> <span class=\"kw2\">not</span> active_stage_door <span class=\"br0\">(</span>door_3<span class=\"br0\">)</span>.<span class=\"me1\">is_goat</span> <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"nu0\">3</span><br/>\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t<span class=\"kw2\">check</span> prize_not_set<span class=\"sy0\">:</span> <span class=\"kw3\">False</span> <span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tone_to_three<span class=\"sy0\">:</span> between_1_and_x_inclusive <span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"kw3\">Result</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tdoor_with_car<span class=\"sy0\">:</span> attached <span class=\"kw2\">like</span> door_anchor<br/>\t\t\t<span class=\"co1\">-- Create a door with a car.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">create</span> <span class=\"kw3\">Result</span><br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">name</span> <span class=\"sy0\">:=</span> prize<br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tnot_empty<span class=\"sy0\">:</span> <span class=\"kw2\">not</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">name</span>.<span class=\"me1\">is_empty</span><br/>\t\t\tname_is_prize<span class=\"sy0\">:</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">name</span>.<span class=\"me1\">same_string</span> <span class=\"br0\">(</span>prize<span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tdoor_with_goat<span class=\"sy0\">:</span> attached <span class=\"kw2\">like</span> door_anchor<br/>\t\t\t<span class=\"co1\">-- Create a door with a goat</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">create</span> <span class=\"kw3\">Result</span><br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">name</span> <span class=\"sy0\">:=</span> gag_gift<br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">is_goat</span> <span class=\"sy0\">:=</span> <span class=\"kw3\">True</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tnot_empty<span class=\"sy0\">:</span> <span class=\"kw2\">not</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">name</span>.<span class=\"me1\">is_empty</span><br/>\t\t\tname_is_prize<span class=\"sy0\">:</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">name</span>.<span class=\"me1\">same_string</span> <span class=\"br0\">(</span>gag_gift<span class=\"br0\">)</span><br/>\t\t\tis_gag_gift<span class=\"sy0\">:</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">is_goat</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tnext_contestant<span class=\"sy0\">:</span> attached <span class=\"kw2\">like</span> live_contestant<br/>\t\t\t<span class=\"co1\">-- The next contestant on Let's Make a Deal!</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">create</span> <span class=\"kw3\">Result</span><br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">first_door_choice</span> <span class=\"sy0\">:=</span> new_random_of <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">second_door_choice</span> <span class=\"sy0\">:=</span> choose_another_door <span class=\"br0\">(</span><span class=\"kw3\">Result</span>.<span class=\"me1\">first_door_choice</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">takes_cash</span> <span class=\"sy0\">:=</span> random_true_or_false<br/>\t\t\t<span class=\"kw2\">if</span> <span class=\"kw2\">not</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">takes_cash</span> <span class=\"kw2\">then</span><br/>\t\t\t\t<span class=\"kw3\">Result</span>.<span class=\"me1\">switches_door</span> <span class=\"sy0\">:=</span> random_true_or_false<br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tchoices_one_to_three<span class=\"sy0\">:</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">first_door_choice</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span> <span class=\"kw2\">and</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">second_door_choice</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span><br/>\t\t\tswitch_door_implies_no_cash_taken<span class=\"sy0\">:</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">switches_door</span> <span class=\"kw2\">implies</span> <span class=\"kw2\">not</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">takes_cash</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tchoose_another_door <span class=\"br0\">(</span>a_first_choice<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor<span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor<br/>\t\t\t<span class=\"co1\">-- Make a choice from the remaining doors</span><br/>\t\t<span class=\"kw2\">require</span><br/>\t\t\tone_to_three<span class=\"sy0\">:</span> between_1_and_x_inclusive <span class=\"br0\">(</span><span class=\"nu0\">3</span>, a_first_choice<span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> new_random_of <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">from</span> <span class=\"kw2\">until</span> <span class=\"kw3\">Result</span> <span class=\"sy0\">/=</span> a_first_choice<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> new_random_of <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\tfirst_choice_not_second<span class=\"sy0\">:</span> a_first_choice <span class=\"sy0\">/=</span> <span class=\"kw3\">Result</span><br/>\t\t\tresult_one_to_three<span class=\"sy0\">:</span> between_1_and_x_inclusive <span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"kw3\">Result</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tplay_lets_make_a_deal<br/>\t\t\t<span class=\"co1\">-- Play the game 1000 times</span><br/>\t\t<span class=\"kw2\">local</span><br/>\t\t\tl_car_win, l_car_loss, l_cash_win, l_goat_loss, l_goat_avoided<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+boolean&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">BOOLEAN</span></a><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw2\">from</span><br/>\t\t\t\tgame_count <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>\t\t\t<span class=\"kw1\">invariant</span><br/>\t\t\t\tconsistent_win_loss_counts<span class=\"sy0\">:</span> <span class=\"br0\">(</span>game_count <span class=\"sy0\">=</span> <span class=\"br0\">(</span>car_win_count <span class=\"sy0\">+</span> cash_win_count <span class=\"sy0\">+</span> goat_loss_count<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\tconsistent_loss_avoidance_counts<span class=\"sy0\">:</span> <span class=\"br0\">(</span>game_count <span class=\"sy0\">=</span> <span class=\"br0\">(</span>car_loss_count <span class=\"sy0\">+</span> goat_avoidance_count<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"kw2\">until</span><br/>\t\t\t\tgame_count <span class=\"sy0\">&gt;=</span> times_to_play<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\tprepare_stage<br/>\t\t\t\tcontestant <span class=\"sy0\">:=</span> next_contestant<br/>\t\t\t\tl_cash_win <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>live_contestant.<span class=\"me1\">takes_cash</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\t\tl_car_win <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw2\">not</span> l_cash_win <span class=\"kw2\">and</span><br/>\t\t\t\t\t\t\t\t<span class=\"br0\">(</span><span class=\"kw2\">not</span> live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">and</span> live_contestant.<span class=\"me1\">first_door_choice</span> <span class=\"sy0\">=</span> door_number_having_prize<span class=\"br0\">)</span> <span class=\"kw2\">or</span><br/>\t\t\t\t\t\t\t\t<span class=\"br0\">(</span>live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">and</span> live_contestant.<span class=\"me1\">second_door_choice</span> <span class=\"sy0\">=</span> door_number_having_prize<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\t\tl_car_loss <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw2\">not</span> live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">and</span> live_contestant.<span class=\"me1\">first_door_choice</span> <span class=\"sy0\">/=</span> door_number_having_prize<span class=\"br0\">)</span> <span class=\"kw2\">or</span><br/>\t\t\t\t\t\t\t\t\t<span class=\"br0\">(</span>live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">and</span> live_contestant.<span class=\"me1\">second_door_choice</span> <span class=\"sy0\">/=</span> door_number_having_prize<span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\t\tl_goat_loss <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw2\">not</span> l_car_win <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> l_cash_win<span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\t\tl_goat_avoided <span class=\"sy0\">:=</span> <span class=\"br0\">(</span><span class=\"kw2\">not</span> live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">and</span> live_contestant.<span class=\"me1\">first_door_choice</span> <span class=\"sy0\">=</span> door_number_having_prize<span class=\"br0\">)</span> <span class=\"kw2\">or</span><br/>\t\t\t\t\t\t\t\t\t<span class=\"br0\">(</span>live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">and</span> live_contestant.<span class=\"me1\">second_door_choice</span> <span class=\"sy0\">=</span> door_number_having_prize<span class=\"br0\">)</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw2\">check</span> consistent_goats<span class=\"sy0\">:</span> l_goat_loss <span class=\"kw2\">implies</span> <span class=\"kw2\">not</span> l_goat_avoided <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">check</span> consistent_car_win<span class=\"sy0\">:</span> l_car_win <span class=\"kw2\">implies</span> <span class=\"kw2\">not</span> l_car_loss <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> l_cash_win <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> l_goat_loss <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">check</span> consistent_cash_win<span class=\"sy0\">:</span> l_cash_win <span class=\"kw2\">implies</span> <span class=\"kw2\">not</span> l_car_win <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> l_goat_loss <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">check</span> consistent_goat_avoidance<span class=\"sy0\">:</span> l_goat_avoided <span class=\"kw2\">implies</span> <span class=\"br0\">(</span>l_car_win <span class=\"kw2\">or</span> l_cash_win<span class=\"br0\">)</span> <span class=\"kw2\">and</span> <span class=\"kw2\">not</span> l_goat_loss <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">check</span> consistent_car_loss<span class=\"sy0\">:</span> l_car_loss <span class=\"kw2\">implies</span> l_cash_win <span class=\"kw2\">or</span> l_goat_loss <span class=\"kw2\">end</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw2\">if</span> l_car_win <span class=\"kw2\">then</span> car_win_count <span class=\"sy0\">:=</span> car_win_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">if</span> l_cash_win <span class=\"kw2\">then</span> cash_win_count <span class=\"sy0\">:=</span> cash_win_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">if</span> l_goat_loss <span class=\"kw2\">then</span> goat_loss_count <span class=\"sy0\">:=</span> goat_loss_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">if</span> l_car_loss <span class=\"kw2\">then</span> car_loss_count <span class=\"sy0\">:=</span> car_loss_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">if</span> l_goat_avoided <span class=\"kw2\">then</span> goat_avoidance_count <span class=\"sy0\">:=</span> goat_avoidance_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\t\t\t\t<span class=\"kw2\">if</span> live_contestant.<span class=\"me1\">switches_door</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tswitch_count <span class=\"sy0\">:=</span> switch_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t\t<span class=\"kw2\">if</span> l_car_win <span class=\"kw2\">then</span><br/>\t\t\t\t\t\tswitch_win_count <span class=\"sy0\">:=</span> switch_win_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">else</span> <span class=\"co1\">-- if not live_contestant.takes_cash and not live_contestant.switches_door then</span><br/>\t\t\t\t\tno_switch_count <span class=\"sy0\">:=</span> no_switch_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t\t<span class=\"kw2\">if</span> l_car_win <span class=\"kw2\">or</span> l_cash_win <span class=\"kw2\">then</span><br/>\t\t\t\t\t\tno_switch_win_count <span class=\"sy0\">:=</span> no_switch_win_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\u00a0<br/>\t\t\t\tgame_count <span class=\"sy0\">:=</span> game_count <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t\tprint <span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">%N</span>Car Wins:<span class=\"es0\">%T</span><span class=\"es0\">%T</span> \"</span> <span class=\"sy0\">+</span> car_win_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Cash Wins:<span class=\"es0\">%T</span><span class=\"es0\">%T</span> \"</span> <span class=\"sy0\">+</span> cash_win_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Goat Losses:<span class=\"es0\">%T</span><span class=\"es0\">%T</span> \"</span> <span class=\"sy0\">+</span> goat_loss_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>-----------------------------\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Total Win/Loss:<span class=\"es0\">%T</span><span class=\"es0\">%T</span>\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>car_win_count <span class=\"sy0\">+</span> cash_win_count <span class=\"sy0\">+</span> goat_loss_count<span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span><span class=\"es0\">%N</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Car Losses:<span class=\"es0\">%T</span><span class=\"es0\">%T</span> \"</span> <span class=\"sy0\">+</span> car_loss_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Goats Avoided:<span class=\"es0\">%T</span><span class=\"es0\">%T</span> \"</span> <span class=\"sy0\">+</span> goat_avoidance_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>-----------------------------\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Total Loss/Avoid:<span class=\"es0\">%T</span>\"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>car_loss_count <span class=\"sy0\">+</span> goat_avoidance_count<span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>-----------------------------\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Staying Count/Win:<span class=\"es0\">%T</span>\"</span> <span class=\"sy0\">+</span> no_switch_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"/\"</span> <span class=\"sy0\">+</span> no_switch_win_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" = \"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>no_switch_win_count <span class=\"sy0\">/</span> no_switch_count <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" <span class=\"es0\">%%</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t\t<span class=\"st0\">\"<span class=\"es0\">%N</span>Switch  Count/Win:<span class=\"es0\">%T</span>\"</span> <span class=\"sy0\">+</span> switch_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"/\"</span> <span class=\"sy0\">+</span> switch_win_count.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" = \"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>switch_win_count <span class=\"sy0\">/</span> switch_count <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" <span class=\"es0\">%%</span>\"</span><br/>\t\t\t\t\t<span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Implementation: Random Numbers</span><br/>\u00a0<br/>\tlast_random<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> random_number_anchor<br/>\t\t\t<span class=\"co1\">-- The last random number chosen.</span><br/>\u00a0<br/>\trandom_true_or_false<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+boolean&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">BOOLEAN</span></a><br/>\t\t\t<span class=\"co1\">-- A randome True or False</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> new_random_of <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tnew_random_of <span class=\"br0\">(</span>a_number<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> random_number_anchor<span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor<br/>\t\t\t<span class=\"co1\">-- A random number from 1 to `a_number'.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>new_random \\\\ a_number <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">as_natural_8</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tnew_random<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> random_number_anchor<br/>\t\t\t<span class=\"co1\">-- Random integer</span><br/>\t\t\t<span class=\"co1\">-- Each call returns another random number.</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\trandom_sequence.<span class=\"me1\">forth</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> random_sequence.<span class=\"me1\">item</span><br/>\t\t\tlast_random <span class=\"sy0\">:=</span> <span class=\"kw3\">Result</span><br/>\t\t<span class=\"kw2\">ensure</span><br/>\t\t\told_random_not_new<span class=\"sy0\">:</span> <span class=\"kw2\">old</span> last_random <span class=\"sy0\">/=</span> last_random<br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\trandom_sequence<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+random&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">RANDOM</span></a><br/>\t\t\t<span class=\"co1\">-- Random sequence seeded from clock when called.</span><br/>\t\tattribute<br/>\t\t\t<span class=\"kw2\">create</span> <span class=\"kw3\">Result</span>.<span class=\"me1\">set_seed</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">create</span> <span class=\"br0\">{</span>TIME<span class=\"br0\">}</span>.<span class=\"me1\">make_now</span><span class=\"br0\">)</span>.<span class=\"me1\">milli_second</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Implementation: Constants</span><br/>\u00a0<br/>\ttimes_to_play<span class=\"sy0\">:</span> NATURAL_16 <span class=\"sy0\">=</span> <span class=\"nu0\">1000</span><br/>\t\t\t<span class=\"co1\">-- Times to play the game.</span><br/>\u00a0<br/>\tprize<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"Car\"</span><br/>\t\t\t<span class=\"co1\">-- Name of the prize</span><br/>\u00a0<br/>\tgag_gift<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"Goat\"</span><br/>\t\t\t<span class=\"co1\">-- Name of the gag gift</span><br/>\u00a0<br/>\tdoor_anchor<span class=\"sy0\">:</span> detachable <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+tuple&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">TUPLE</span></a> <span class=\"br0\">[</span>number<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor; name<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+string&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">STRING</span></a>; is_goat, is_open<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+boolean&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">BOOLEAN</span></a><span class=\"br0\">]</span><br/>\t\t\t<span class=\"co1\">-- Type anchor for door tuples.</span><br/>\u00a0<br/>\tdoor_number_anchor<span class=\"sy0\">:</span> NATURAL_8<br/>\t\t\t<span class=\"co1\">-- Type anchor for door numbers.</span><br/>\u00a0<br/>\trandom_number_anchor<span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+integer&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">INTEGER</span></a><br/>\t\t\t<span class=\"co1\">-- Type anchor for random numbers.</span><br/>\u00a0<br/>\tcounter_anchor<span class=\"sy0\">:</span> NATURAL_16<br/>\t\t\t<span class=\"co1\">-- Type anchor for counters.</span><br/>\u00a0<br/><span class=\"kw1\">feature</span> <span class=\"br0\">{</span><a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+none&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">NONE</span></a><span class=\"br0\">}</span> <span class=\"co1\">-- Implementation: Contract Support</span><br/>\u00a0<br/>\tbetween_1_and_x_inclusive <span class=\"br0\">(</span>a_number, a_value<span class=\"sy0\">:</span> <span class=\"kw2\">like</span> door_number_anchor<span class=\"br0\">)</span><span class=\"sy0\">:</span> <a href=\"http://www.google.com/search?q=site%3Ahttp%3A%2F%2Fdocs.eiffel.com%2Feiffelstudio%2Flibraries+boolean&amp;btnI=I%27m+Feeling+Lucky\"><span class=\"kw4\">BOOLEAN</span></a><br/>\t\t\t<span class=\"co1\">-- Is `a_value' between 1 and `a_number'?</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\t<span class=\"kw3\">Result</span> <span class=\"sy0\">:=</span> <span class=\"br0\">(</span>a_value <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw2\">and</span> <span class=\"br0\">(</span>a_value <span class=\"sy0\">&lt;=</span> a_number<span class=\"br0\">)</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw2\">end</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 23, "block": "<pre class=\"text highlighted_source\">defmodule MontyHall do<br/>  def simulate(n) do<br/>    {stay, switch} = simulate(n, 0, 0)<br/>   \u00a0:io.format \"Staying wins   ~w times (~.3f%)~n\", [stay,   100 * stay   / n]<br/>   \u00a0:io.format \"Switching wins ~w times (~.3f%)~n\", [switch, 100 * switch / n]   <br/>  end<br/>\u00a0<br/>  defp simulate(0, stay, switch), do: {stay, switch}<br/>  defp simulate(n, stay, switch) do<br/>    doors = Enum.shuffle([:goat,\u00a0:goat,\u00a0:car])<br/>    guess =\u00a0:rand.uniform(3) - 1<br/>    [choice] = [0,1,2] -- [guess, shown(doors, guess)]<br/>    if Enum.at(doors, choice) ==\u00a0:car, do: simulate(n-1, stay, switch+1),<br/>                                     else: simulate(n-1, stay+1, switch)<br/>  end<br/>\u00a0<br/>  defp shown(doors, guess) do<br/>    [i, j] = Enum.shuffle([0,1,2] -- [guess])<br/>    if Enum.at(doors, i) ==\u00a0:goat, do: i, else: j<br/>  end<br/>end<br/>\u00a0<br/>MontyHall.simulate(10000)</pre>"}, {"lang": "Emacs Lisp", "loc": 19, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> montyhall <span class=\"br0\">(</span>keep<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>prize <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>choice <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> keep <span class=\"br0\">(</span><span class=\"sy0\">=</span> prize choice<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>/<span class=\"sy0\">=</span> prize choice<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>cnt <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>i <span class=\"nu0\">10000</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>montyhall t<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">setq</span> cnt <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ cnt<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"br0\">(</span>format <span class=\"st0\">\"Strategy keep:\u00a0%.3f\u00a0%%\"</span> <span class=\"br0\">(</span>/ cnt <span class=\"nu0\">100.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>cnt <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>i <span class=\"nu0\">10000</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>montyhall <span class=\"kw1\">nil</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">setq</span> cnt <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ cnt<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"br0\">(</span>format <span class=\"st0\">\"Strategy switch:\u00a0%.3f\u00a0%%\"</span> <span class=\"br0\">(</span>/ cnt <span class=\"nu0\">100.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Erlang", "loc": 28, "block": "<pre class=\"erlang highlighted_source\"><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>monty_hall<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>main<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/random.html\"><span class=\"kw5\">random</span></a>:<span class=\"re3\">seed</span><span class=\"br0\">(</span><span class=\"kw3\">now</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">WinStay</span><span class=\"sy1\">,</span> <span class=\"re5\">WinSwitch</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <span class=\"re3\">experiment</span><span class=\"br0\">(</span><span class=\"nu0\">100000</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"Switching wins ~p times.<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">WinSwitch</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"Staying wins ~p times.<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">WinStay</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">experiment</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"re5\">WinStay</span><span class=\"sy1\">,</span> <span class=\"re5\">WinSwitch</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">WinStay</span><span class=\"sy1\">,</span> <span class=\"re5\">WinSwitch</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">experiment</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"sy1\">,</span> <span class=\"re5\">WinStay</span><span class=\"sy1\">,</span> <span class=\"re5\">WinSwitch</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Doors</span> <span class=\"sy3\">=</span> <span class=\"kw3\">setelement</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/random.html\"><span class=\"kw5\">random</span></a>:<span class=\"re3\">uniform</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">SelectedDoor</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/random.html\"><span class=\"kw5\">random</span></a>:<span class=\"re3\">uniform</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">OpenDoor</span> <span class=\"sy3\">=</span> <span class=\"re3\">open_door</span><span class=\"br0\">(</span><span class=\"re5\">Doors</span><span class=\"sy1\">,</span> <span class=\"re5\">SelectedDoor</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">experiment</span><span class=\"br0\">(</span><br/>\t\t<span class=\"re5\">N</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <br/>\t\t<span class=\"re5\">WinStay</span> <span class=\"sy3\">+</span> <span class=\"kw3\">element</span><span class=\"br0\">(</span><span class=\"re5\">SelectedDoor</span><span class=\"sy1\">,</span> <span class=\"re5\">Doors</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <br/>\t\t<span class=\"re5\">WinSwitch</span> <span class=\"sy3\">+</span> <span class=\"kw3\">element</span><span class=\"br0\">(</span><span class=\"nu0\">6</span> <span class=\"sy3\">-</span> <span class=\"br0\">(</span><span class=\"re5\">SelectedDoor</span> <span class=\"sy3\">+</span> <span class=\"re5\">OpenDoor</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Doors</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">open_door</span><span class=\"br0\">(</span><span class=\"re5\">Doors</span><span class=\"sy1\">,</span><span class=\"re5\">SelectedDoor</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <br/>\t<span class=\"re5\">OpenDoor</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/random.html\"><span class=\"kw5\">random</span></a>:<span class=\"re3\">uniform</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"kw1\">case</span> <span class=\"br0\">(</span><span class=\"kw3\">element</span><span class=\"br0\">(</span><span class=\"re5\">OpenDoor</span><span class=\"sy1\">,</span> <span class=\"re5\">Doors</span><span class=\"br0\">)</span> <span class=\"sy3\">=:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">or</span> <span class=\"br0\">(</span><span class=\"re5\">OpenDoor</span> <span class=\"sy3\">=:=</span> <span class=\"re5\">SelectedDoor</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span> <br/>\t\ttrue <span class=\"sy1\">-&gt;</span> <span class=\"re3\">open_door</span><span class=\"br0\">(</span><span class=\"re5\">Doors</span><span class=\"sy1\">,</span> <span class=\"re5\">SelectedDoor</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\t\tfalse <span class=\"sy1\">-&gt;</span> <span class=\"re5\">OpenDoor</span><br/>\t<span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 21, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw2\">integer</span> switchWins<span class=\"sy2\">,</span> stayWins<br/>switchWins <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>stayWins <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw2\">integer</span> winner<span class=\"sy2\">,</span> choice<span class=\"sy2\">,</span> shown<br/>\u00a0<br/><span class=\"kw1\">for</span> plays <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">10000</span> <span class=\"kw1\">do</span><br/>    winner <span class=\"sy1\">=</span> <span class=\"kw2\">rand</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    choice <span class=\"sy1\">=</span> <span class=\"kw2\">rand</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>        shown <span class=\"sy1\">=</span> <span class=\"kw2\">rand</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> shown\u00a0!<span class=\"sy1\">=</span> winner <span class=\"kw1\">and</span> shown\u00a0!<span class=\"sy1\">=</span> choice <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">exit</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">while</span><br/>    stayWins <span class=\"sy1\">+=</span> choice <span class=\"sy1\">=</span> winner<br/>    switchWins <span class=\"sy1\">+=</span> <span class=\"nu0\">6</span><span class=\"sy1\">-</span>choice<span class=\"sy1\">-</span>shown <span class=\"sy1\">=</span> winner<br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Switching wins\u00a0%d times<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> switchWins<span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Staying wins\u00a0%d times<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> stayWins<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "F#", "loc": 13, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/><span class=\"kw1\">let</span> monty nSims <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> rnd <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> SwitchGame<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">let</span> winner, pick <span class=\"sy0\">=</span> rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span>, rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> winner <span class=\"sy0\">&lt;&gt;</span> pick <span class=\"kw1\">then</span> <span class=\"nu0\">1</span> <span class=\"kw1\">else</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">let</span> StayGame<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">let</span> winner, pick <span class=\"sy0\">=</span> rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span>, rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> winner <span class=\"sy0\">=</span> pick <span class=\"kw1\">then</span> <span class=\"nu0\">1</span> <span class=\"kw1\">else</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"kw1\">let</span> Wins <span class=\"br0\">(</span>f:<span class=\"kw4\">unit</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw4\">seq</span> <span class=\"br0\">{</span><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"me1\">nSims</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> f<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">sum</span><br/>    printfn <span class=\"st0\">\"Stay:\u00a0%d wins out of\u00a0%d - Switch:\u00a0%d wins out of\u00a0%d\"</span> <span class=\"br0\">(</span>Wins StayGame<span class=\"br0\">)</span> nSims <span class=\"br0\">(</span>Wins SwitchGame<span class=\"br0\">)</span> nSims</pre>"}, {"lang": "Forth", "loc": 17, "block": "<pre class=\"text highlighted_source\">include random.fs<br/>\u00a0<br/>variable stay-wins<br/>variable switch-wins<br/>\u00a0<br/>: trial ( -- )<br/>  3 random 3 random ( prize choice )<br/>  = if 1 stay-wins +!<br/>  else 1 switch-wins +!<br/>  then\u00a0;<br/>: trials ( n -- )<br/>  0 stay-wins\u00a0! 0 switch-wins\u00a0!<br/>  dup 0 do trial loop<br/>  cr   stay-wins @ . [char] / emit dup . .\" staying wins\"<br/>  cr switch-wins @ . [char] / emit     . .\" switching wins\"\u00a0;<br/>\u00a0<br/>1000 trials</pre>"}, {"lang": "Fortran", "loc": 46, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">PROGRAM</span> MONTYHALL<br/>\u00a0<br/>  <span class=\"kw3\">IMPLICIT</span> <span class=\"kw3\">NONE</span>  <br/>\u00a0<br/>  <span class=\"kw3\">INTEGER</span>, <span class=\"kw3\">PARAMETER</span> <span class=\"sy0\">::</span> <span class=\"me2\">trials</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10000</span><br/>  <span class=\"kw3\">INTEGER</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, choice, prize, remaining, show, staycount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, switchcount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw3\">LOGICAL</span> <span class=\"sy0\">::</span> <span class=\"me2\">door</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">REAL</span> <span class=\"sy0\">::</span> <span class=\"me2\">rnum</span><br/>\u00a0<br/>  <span class=\"kw1\">CALL</span> <span class=\"kw4\">RANDOM_SEED</span><br/>  <span class=\"kw1\">DO</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, trials<br/>     door <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">FALSE</span>.</span><br/>     <span class=\"kw1\">CALL</span> <span class=\"kw4\">RANDOM_NUMBER</span><span class=\"br0\">(</span>rnum<span class=\"br0\">)</span><br/>     prize <span class=\"sy0\">=</span> <span class=\"kw4\">INT</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">*</span>rnum<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>     door<span class=\"br0\">(</span>prize<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">TRUE</span>.</span>              <span class=\"co1\">! place car behind random door</span><br/>\u00a0<br/>     <span class=\"kw1\">CALL</span> <span class=\"kw4\">RANDOM_NUMBER</span><span class=\"br0\">(</span>rnum<span class=\"br0\">)</span>   <br/>     choice <span class=\"sy0\">=</span> <span class=\"kw4\">INT</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">*</span>rnum<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>          <span class=\"co1\">! choose a door</span><br/>\u00a0<br/>     <span class=\"kw1\">DO</span><br/>        <span class=\"kw1\">CALL</span> <span class=\"kw4\">RANDOM_NUMBER</span><span class=\"br0\">(</span>rnum<span class=\"br0\">)</span>   <br/>        show <span class=\"sy0\">=</span> <span class=\"kw4\">INT</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">*</span>rnum<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>show <span class=\"sy0\">/=</span> choice <span class=\"kw2\">.<span class=\"me1\">AND</span>.</span> show <span class=\"sy0\">/=</span> prize<span class=\"br0\">)</span> <span class=\"kw1\">EXIT</span>       <span class=\"co1\">! Reveal a goat</span><br/>     <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span><br/>\u00a0<br/>     <span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span><span class=\"br0\">(</span>choice<span class=\"sy0\">+</span>show<span class=\"br0\">)</span>          <span class=\"co1\">! Calculate remaining door index</span><br/>       <span class=\"kw1\">CASE</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>          remaining <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/>       <span class=\"kw1\">CASE</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>          remaining <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>       <span class=\"kw1\">CASE</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>          remaining <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>     <span class=\"kw1\">END</span> <span class=\"kw1\">SELECT</span><br/>\u00a0<br/>     <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>door<span class=\"br0\">(</span>choice<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span>           <span class=\"co1\">! You win by staying with your original choice</span><br/>        staycount <span class=\"sy0\">=</span> staycount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>     <span class=\"kw1\">ELSE</span> <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>door<span class=\"br0\">(</span>remaining<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span>   <span class=\"co1\">! You win by switching to other door</span><br/>        switchcount <span class=\"sy0\">=</span> switchcount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>     <span class=\"kw1\">END</span> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span><br/>\u00a0<br/>  WRITE<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(A,F6.2,A)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"Chance of winning by not switching is\"</span>, <span class=\"kw3\">real</span><span class=\"br0\">(</span>staycount<span class=\"br0\">)</span><span class=\"sy0\">/</span>trials<span class=\"sy0\">*</span><span class=\"nu0\">100</span>, <span class=\"st0\">\"%\"</span><br/>  WRITE<span class=\"br0\">(</span><span class=\"sy0\">*</span>, <span class=\"st0\">\"(A,F6.2,A)\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"Chance of winning by switching is\"</span>, <span class=\"kw3\">real</span><span class=\"br0\">(</span>switchcount<span class=\"br0\">)</span><span class=\"sy0\">/</span>trials<span class=\"sy0\">*</span><span class=\"nu0\">100</span>, <span class=\"st0\">\"%\"</span> <br/>\u00a0<br/><span class=\"kw1\">END</span> <span class=\"kw1\">PROGRAM</span> MONTYHALL</pre>"}, {"lang": "Go", "loc": 27, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"math/rand\"</span><br/>\t<span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\tgames <span class=\"sy2\">:=</span> <span class=\"nu0\">100000</span><br/>\tr <span class=\"sy2\">:=</span> rand<span class=\"sy3\">.</span>New<span class=\"sy1\">(</span>rand<span class=\"sy3\">.</span>NewSource<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>UnixNano<span class=\"sy1\">()))</span><br/>\u00a0<br/>\t<span class=\"kw1\">var</span> switcherWins<span class=\"sy1\">,</span> keeperWins<span class=\"sy1\">,</span> shown <span class=\"kw4\">int</span><br/>\t<span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt; games<span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>\t\tdoors <span class=\"sy2\">:=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">}</span><br/>\t\tdoors<span class=\"sy1\">[</span>r<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">3</span><span class=\"sy1\">)]</span> <span class=\"sy2\">=</span> <span class=\"nu0\">1</span> <span class=\"co1\">// Set which one has the car</span><br/>\t\tchoice <span class=\"sy2\">:=</span> r<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">3</span><span class=\"sy1\">)</span> <span class=\"co1\">// Choose a door</span><br/>\t\t<span class=\"kw1\">for</span> shown <span class=\"sy2\">=</span> r<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">3</span><span class=\"sy1\">);</span> shown <span class=\"sy3\">==</span> choice <span class=\"sy3\">||</span> doors<span class=\"sy1\">[</span>shown<span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> shown <span class=\"sy2\">=</span> r<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span><span class=\"nu0\">3</span><span class=\"sy1\">)</span> <span class=\"sy1\">{}</span><br/>\t\tswitcherWins <span class=\"sy2\">+=</span> doors<span class=\"sy1\">[</span><span class=\"nu0\">3</span> <span class=\"sy3\">-</span> choice <span class=\"sy3\">-</span> shown<span class=\"sy1\">]</span><br/>\t\tkeeperWins <span class=\"sy2\">+=</span> doors<span class=\"sy1\">[</span>choice<span class=\"sy1\">]</span><br/>\t<span class=\"sy1\">}</span><br/>\tfloatGames <span class=\"sy2\">:=</span> <span class=\"kw4\">float32</span><span class=\"sy1\">(</span>games<span class=\"sy1\">)</span><br/>\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Switcher Wins:\u00a0%d (%3.2f%%)<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span><br/>\t\tswitcherWins<span class=\"sy1\">,</span> <span class=\"sy1\">(</span><span class=\"kw4\">float32</span><span class=\"sy1\">(</span>switcherWins<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> floatGames <span class=\"sy3\">*</span> <span class=\"nu0\">100</span><span class=\"sy1\">))</span><br/>\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"Keeper Wins:\u00a0%d (%3.2f%%)\"</span><span class=\"sy1\">,</span><br/>\t\tkeeperWins<span class=\"sy1\">,</span> <span class=\"sy1\">(</span><span class=\"kw4\">float32</span><span class=\"sy1\">(</span>keeperWins<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> floatGames <span class=\"sy3\">*</span> <span class=\"nu0\">100</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 34, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Random <span class=\"br0\">(</span>StdGen<span class=\"sy0\">,</span> getStdGen<span class=\"sy0\">,</span> randomR<span class=\"br0\">)</span><br/>\u00a0<br/>trials <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>trials <span class=\"sy0\">=</span> <span class=\"nu0\">10000</span><br/>\u00a0<br/><span class=\"kw1\">data</span> Door <span class=\"sy0\">=</span> Car <span class=\"sy0\">|</span> Goat <span class=\"kw1\">deriving</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Eq\"><span class=\"kw4\">Eq</span></a><br/>\u00a0<br/>play <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a> <span class=\"sy0\">-&gt;</span> StdGen <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span>Door<span class=\"sy0\">,</span> StdGen<span class=\"br0\">)</span><br/>play switch g <span class=\"sy0\">=</span> <span class=\"br0\">(</span>prize<span class=\"sy0\">,</span> new<span class=\"sy0\">_</span>g<span class=\"br0\">)</span><br/>  <span class=\"kw1\">where</span> <span class=\"br0\">(</span>n<span class=\"sy0\">,</span> new<span class=\"sy0\">_</span>g<span class=\"br0\">)</span> <span class=\"sy0\">=</span> randomR <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> g<br/>        d1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Car<span class=\"sy0\">,</span> Goat<span class=\"sy0\">,</span> Goat<span class=\"br0\">]</span> <span class=\"sy0\">!!</span> n<br/>        prize <span class=\"sy0\">=</span> <span class=\"kw1\">case</span> switch <span class=\"kw1\">of</span><br/>            False <span class=\"sy0\">-&gt;</span> d1<br/>            True  <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">case</span> d1 <span class=\"kw1\">of</span><br/>                Car  <span class=\"sy0\">-&gt;</span> Goat<br/>                Goat <span class=\"sy0\">-&gt;</span> Car<br/>\u00a0<br/>cars <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a> <span class=\"sy0\">-&gt;</span> StdGen <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"sy0\">,</span> StdGen<span class=\"br0\">)</span><br/>cars n switch g <span class=\"sy0\">=</span> f n <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> g<span class=\"br0\">)</span><br/>  <span class=\"kw1\">where</span> f <span class=\"nu0\">0</span> <span class=\"br0\">(</span>cs<span class=\"sy0\">,</span> g<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>cs<span class=\"sy0\">,</span> g<span class=\"br0\">)</span><br/>        f n <span class=\"br0\">(</span>cs<span class=\"sy0\">,</span> g<span class=\"br0\">)</span> <span class=\"sy0\">=</span> f <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>cs <span class=\"sy0\">+</span> result<span class=\"sy0\">,</span> new<span class=\"sy0\">_</span>g<span class=\"br0\">)</span><br/>          <span class=\"kw1\">where</span> result <span class=\"sy0\">=</span> <span class=\"kw1\">case</span> prize <span class=\"kw1\">of</span> Car <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1</span>; Goat <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">0</span><br/>                <span class=\"br0\">(</span>prize<span class=\"sy0\">,</span> new<span class=\"sy0\">_</span>g<span class=\"br0\">)</span> <span class=\"sy0\">=</span> play switch g<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    g <span class=\"sy0\">&lt;-</span> getStdGen<br/>    <span class=\"kw1\">let</span> <span class=\"br0\">(</span>switch<span class=\"sy0\">,</span> g2<span class=\"br0\">)</span> <span class=\"sy0\">=</span> cars trials True g<br/>        <span class=\"br0\">(</span>stay<span class=\"sy0\">,</span> <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> cars trials False g2<br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> msg <span class=\"st0\">\"switch\"</span> switch<br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> msg <span class=\"st0\">\"stay\"</span> stay<br/>  <span class=\"kw1\">where</span> msg strat n <span class=\"sy0\">=</span> <span class=\"st0\">\"The \"</span> <span class=\"sy0\">++</span> strat <span class=\"sy0\">++</span> <span class=\"st0\">\" strategy succeeds \"</span> <span class=\"sy0\">++</span><br/>            percent n <span class=\"sy0\">++</span> <span class=\"st0\">\"% of the time.\"</span><br/>        percent n <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:round\"><span class=\"kw3\">round</span></a> <span class=\"sy0\">$</span><br/>            <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> n<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> trials<span class=\"br0\">)</span></pre>"}, {"lang": "HicEst", "loc": 32, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">REAL</span> <span class=\"sy1\">::</span> ndoors<span class=\"sy1\">=</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> doors<span class=\"br0\">(</span>ndoors<span class=\"br0\">)</span><span class=\"sy1\">,</span> plays<span class=\"sy1\">=</span>1E4<br/>\u00a0<br/><span class=\"kw1\">DLG</span><span class=\"br0\">(</span>NameEdit <span class=\"sy1\">=</span> plays<span class=\"sy1\">,</span> DNum<span class=\"sy1\">=</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> Button<span class=\"sy1\">=</span><span class=\"st0\">'Go'</span><span class=\"br0\">)</span><br/>\u00a0<br/>switchWins <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>stayWins <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">DO</span> play <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> plays<br/>  doors <span class=\"sy1\">=</span> <span class=\"nu0\">0</span>                      <span class=\"co1\">! clear the doors</span><br/>  winner <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">+</span> <span class=\"kw1\">INT</span><span class=\"br0\">(</span><span class=\"kw1\">RAN</span><span class=\"br0\">(</span>ndoors<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\">! door that has the prize</span><br/>  doors<span class=\"br0\">(</span>winner<span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><br/>  guess <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">+</span> <span class=\"kw1\">INT</span><span class=\"br0\">(</span><span class=\"kw1\">RAN</span><span class=\"br0\">(</span>doors<span class=\"br0\">)</span><span class=\"br0\">)</span>    <span class=\"co1\">! player chooses his door</span><br/>\u00a0<br/>  <span class=\"kw1\">IF</span><span class=\"br0\">(</span> guess <span class=\"sy1\">==</span> winner <span class=\"br0\">)</span> <span class=\"kw1\">THEN</span>     <span class=\"co1\">! Monty decides which door to open:</span><br/>      show <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"sy1\">+</span> <span class=\"kw1\">INT</span><span class=\"br0\">(</span><span class=\"kw1\">RAN</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>     <span class=\"co1\">! select 1st or 2nd goat-door</span><br/>      checked <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><br/>      <span class=\"kw1\">DO</span> check <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> ndoors<br/>        checked <span class=\"sy1\">=</span> checked <span class=\"sy1\">+</span> <span class=\"br0\">(</span>doors<span class=\"br0\">(</span>check<span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span><span class=\"br0\">(</span>checked <span class=\"sy1\">==</span> show<span class=\"br0\">)</span> <span class=\"kw1\">open</span> <span class=\"sy1\">=</span> check<br/>      <span class=\"kw1\">ENDDO</span><br/>  <span class=\"kw1\">ELSE</span><br/>      <span class=\"kw1\">open</span> <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">+</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">-</span> winner <span class=\"sy1\">-</span> guess<br/>  <span class=\"kw1\">ENDIF</span><br/>  new_guess_if_switch <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">+</span><span class=\"nu0\">2</span><span class=\"sy1\">+</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">-</span> guess <span class=\"sy1\">-</span> <span class=\"kw1\">open</span><br/>\u00a0<br/>  stayWins <span class=\"sy1\">=</span> stayWins <span class=\"sy1\">+</span> doors<span class=\"br0\">(</span>guess<span class=\"br0\">)</span> <span class=\"co1\">! count if guess was correct</span><br/>  switchWins <span class=\"sy1\">=</span> switchWins <span class=\"sy1\">+</span> doors<span class=\"br0\">(</span>new_guess_if_switch<span class=\"br0\">)</span><br/><span class=\"kw1\">ENDDO</span><br/>\u00a0<br/><span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>ClipBoard<span class=\"sy1\">,</span> Name<span class=\"br0\">)</span> plays<span class=\"sy1\">,</span> switchWins<span class=\"sy1\">,</span> stayWins<br/>\u00a0<br/><span class=\"kw1\">END</span></pre>"}, {"lang": "Icon and Unicon", "loc": 19, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span><br/>\u00a0<br/>rounds <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span>arglist<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"nu0\">10000</span><br/>doors <span class=\"sy1\">:=</span> <span class=\"st0\">'123'</span><br/>strategy1 <span class=\"sy1\">:=</span> strategy2 <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">every</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> rounds <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>   goats  <span class=\"sy1\">:=</span> doors <span class=\"sy1\">--</span> <span class=\"br0\">(</span> car <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span>doors <span class=\"br0\">)</span>  <br/>   guess1 <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span>doors<br/>   show   <span class=\"sy1\">:=</span> goats <span class=\"sy1\">--</span> guess1<br/>   <span class=\"kw1\">if</span> guess1 <span class=\"sy1\">==</span> car <span class=\"kw1\">then</span> strategy1 <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">else</span> strategy2 <span class=\"sy1\">+:=</span> <span class=\"nu0\">1</span><br/>   <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Monty Hall simulation for \"</span><span class=\"sy1\">,</span> rounds<span class=\"sy1\">,</span> <span class=\"st0\">\" rounds.\"</span><span class=\"br0\">)</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Strategy 1 'Staying' won \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span>strategy1<span class=\"br0\">)</span> <span class=\"sy1\">/</span> rounds <span class=\"br0\">)</span><br/><span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Strategy 2 'Switching' won \"</span><span class=\"sy1\">,</span> <span class=\"kw4\">real</span><span class=\"br0\">(</span>strategy2<span class=\"br0\">)</span> <span class=\"sy1\">/</span> rounds <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Io", "loc": 23, "block": "<pre class=\"io highlighted_source\">keepWins\u00a0:= <span class=\"nu0\">0</span><br/>switchWins\u00a0:= <span class=\"nu0\">0</span><br/>doors\u00a0:= <span class=\"nu0\">3</span><br/>times\u00a0:= <span class=\"nu0\">100000</span><br/>pickDoor\u00a0:= <span class=\"kw2\">method</span><span class=\"br0\">(</span>excludeA, excludeB,<br/>  door\u00a0:= excludeA<br/>  <span class=\"kw1\">while</span><span class=\"br0\">(</span>door == excludeA <span class=\"kw1\">or</span> door == excludeB,<br/>    door = <span class=\"br0\">(</span>Random value<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> doors<span class=\"br0\">)</span> floor<br/>  <span class=\"br0\">)</span><br/>  door<br/><span class=\"br0\">)</span><br/>times repeat<span class=\"br0\">(</span><br/>  playerChoice\u00a0:= pickDoor<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  carDoor\u00a0:= pickDoor<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  shownDoor\u00a0:= pickDoor<span class=\"br0\">(</span>carDoor, playerChoice<span class=\"br0\">)</span><br/>  switchDoor\u00a0:= pickDoor<span class=\"br0\">(</span>playerChoice, shownDoor<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>playerChoice == carDoor<span class=\"br0\">)</span> <span class=\"kw1\">ifTrue</span><span class=\"br0\">(</span>keepWins = keepWins + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>switchDoor == carDoor<span class=\"br0\">)</span> <span class=\"kw1\">ifTrue</span><span class=\"br0\">(</span>switchWins = switchWins + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"st0\">\"Switching to the other door won #{switchWins} times.<span class=\"es0\">\\n</span>\"</span>\\<br/>    .. <span class=\"st0\">\"Keeping the same door won #{keepWins} times.<span class=\"es0\">\\n</span>\"</span>\\<br/>    .. <span class=\"st0\">\"Game played #{times} times with #{doors} doors.\"</span><span class=\"br0\">)</span> interpolate println<br/>\u00a0</pre>"}, {"lang": "J", "loc": 1, "block": "<pre class=\"j highlighted_source\">pick=: {~\u00a0<a class=\"__cf_email__\" data-cfemail=\"7a453a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#</pre>"}, {"lang": "Java", "loc": 25, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Monty<span class=\"br0\">{</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw4\">int</span> switchWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw4\">int</span> stayWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a> gen <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> plays <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>plays <span class=\"sy0\">&lt;</span> <span class=\"nu0\">32768</span><span class=\"sy0\">;</span>plays<span class=\"sy0\">++</span> <span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> doors <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><span class=\"co1\">//0 is a goat, 1 is a car</span><br/>\t\t\tdoors<span class=\"br0\">[</span>gen.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"co1\">//put a winner in a random door</span><br/>\t\t\t<span class=\"kw4\">int</span> choice <span class=\"sy0\">=</span> gen.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">//pick a door, any door</span><br/>\t\t\t<span class=\"kw4\">int</span> shown<span class=\"sy0\">;</span> <span class=\"co1\">//the shown door</span><br/>\t\t\t<span class=\"kw1\">do</span><span class=\"br0\">{</span><br/>\t\t\t\tshown <span class=\"sy0\">=</span> gen.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//don't show the winner or the choice</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">while</span><span class=\"br0\">(</span>doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> shown <span class=\"sy0\">==</span> choice<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\tstayWins <span class=\"sy0\">+=</span> doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><span class=\"sy0\">;</span><span class=\"co1\">//if you won by staying, count it</span><br/>\u00a0<br/>\t\t\t<span class=\"co1\">//the switched (last remaining) door is (3 - choice - shown), because 0+1+2=3</span><br/>\t\t\tswitchWins <span class=\"sy0\">+=</span> doors<span class=\"br0\">[</span><span class=\"nu0\">3</span> <span class=\"sy0\">-</span> choice <span class=\"sy0\">-</span> shown<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Switching wins \"</span> <span class=\"sy0\">+</span> switchWins <span class=\"sy0\">+</span> <span class=\"st0\">\" times.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Staying wins \"</span> <span class=\"sy0\">+</span> stayWins <span class=\"sy0\">+</span> <span class=\"st0\">\" times.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 40, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> montyhall<span class=\"br0\">(</span>tests<span class=\"sy0\">,</span> doors<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"st0\">'use strict'</span><span class=\"sy0\">;</span><br/>\ttests <span class=\"sy0\">=</span> tests <span class=\"sy0\">?</span> tests <span class=\"sy0\">:</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span><br/>\tdoors <span class=\"sy0\">=</span> doors <span class=\"sy0\">?</span> doors <span class=\"sy0\">:</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">var</span> prizeDoor<span class=\"sy0\">,</span> chosenDoor<span class=\"sy0\">,</span> shownDoor<span class=\"sy0\">,</span> switchDoor<span class=\"sy0\">,</span> chosenWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> switchWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"co1\">// randomly pick a door excluding input doors</span><br/>\t<span class=\"kw1\">function</span> pick<span class=\"br0\">(</span>excludeA<span class=\"sy0\">,</span> excludeB<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">var</span> door<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>\t\t\tdoor <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> doors<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span> while <span class=\"br0\">(</span>door <span class=\"sy0\">===</span> excludeA <span class=\"sy0\">||</span> door <span class=\"sy0\">===</span> excludeB<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">return</span> door<span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"co1\">// run tests</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> tests<span class=\"sy0\">;</span> i <span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>\t\t<span class=\"co1\">// pick set of doors</span><br/>\t\tprizeDoor <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tchosenDoor <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tshownDoor <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span>prizeDoor<span class=\"sy0\">,</span> chosenDoor<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tswitchDoor <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span>chosenDoor<span class=\"sy0\">,</span> shownDoor<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"co1\">// test set for both choices</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>chosenDoor <span class=\"sy0\">===</span> prizeDoor<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tchosenWins <span class=\"sy0\">++;</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>switchDoor <span class=\"sy0\">===</span> prizeDoor<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tswitchWins <span class=\"sy0\">++;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"co1\">// results</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">{</span><br/>\t\tstayWins<span class=\"sy0\">:</span> chosenWins <span class=\"sy0\">+</span> <span class=\"st0\">' '</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span> <span class=\"sy0\">*</span> chosenWins <span class=\"sy0\">/</span> tests<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'%'</span><span class=\"sy0\">,</span><br/>\t\tswitchWins<span class=\"sy0\">:</span> switchWins <span class=\"sy0\">+</span> <span class=\"st0\">' '</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span> <span class=\"sy0\">*</span> switchWins <span class=\"sy0\">/</span> tests<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">'%'</span><br/>\t<span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 22, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>function play_mh_literal{T&lt;:Integer}(ncur::T=3, ncar::T=1)<br/>    ncar &lt; ncur || throw(DomainError())<br/>    curtains = shuffle(collect(1:ncur))<br/>    cars = curtains[1:ncar]<br/>    goats = curtains[(ncar+1):end]<br/>    pick = rand(1:ncur)<br/>    isstickwin = pick in cars<br/>    deleteat!(curtains, findin(curtains, pick))<br/>    if\u00a0!isstickwin<br/>        deleteat!(goats, findin(goats, pick))<br/>    end<br/>    if length(goats) &gt; 0 # reveal goat<br/>        deleteat!(curtains, findin(curtains, shuffle(goats)[1]))<br/>    else # no goats, so reveal car <br/>        deleteat!(curtains, rand(1:(ncur-1)))<br/>    end<br/>    pick = shuffle(curtains)[1]<br/>    isswitchwin = pick in cars<br/>    return (isstickwin, isswitchwin)<br/>end<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 28, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/>fun montyHall<span class=\"br0\">(</span>games<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> switchWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> stayWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> rnd <span class=\"sy0\">=</span> Random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"me1\">games</span><span class=\"br0\">)</span>.<span class=\"me1\">forEach</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> doors <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>        <span class=\"co1\">// all zero (goats) by default</span><br/>        doors<span class=\"br0\">[</span>rnd.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>      <span class=\"co1\">// put car in a random door</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> choice <span class=\"sy0\">=</span> rnd.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>    <span class=\"co1\">// choose a door at random</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> shown<span class=\"sy0\">:</span> Int<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">do</span></a> <span class=\"br0\">{</span><br/>            shown <span class=\"sy0\">=</span> rnd.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>     <span class=\"co1\">// the shown door</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> || shown <span class=\"sy0\">==</span> choice<span class=\"br0\">)</span><br/>        stayWins +<span class=\"sy0\">=</span> doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><br/>        switchWins +<span class=\"sy0\">=</span> doors<span class=\"br0\">[</span><span class=\"nu0\">3</span> - choice - shown<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Simulating $games games:\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Staying   wins $stayWins times\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Switching wins $switchWins times\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    montyHall<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">_</span>000<span class=\"sy0\">_</span>000<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 27, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"co1\">'adapted from BASIC solution</span><br/><span class=\"kw1\">DIM</span> doors<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"co1\">'0 is a goat, 1 is a car</span><br/>\u00a0<br/>total <span class=\"sy0\">=</span> <span class=\"nu0\">10000</span>   <span class=\"co1\">'set desired number of iterations</span><br/>switchWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>stayWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">FOR</span> plays <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> total<br/>    winner <span class=\"sy0\">=</span> <span class=\"kw2\">INT</span><span class=\"br0\">(</span><span class=\"kw2\">RND</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    doors<span class=\"br0\">(</span>winner<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"co1\">'put a winner in a random door</span><br/>    choice <span class=\"sy0\">=</span> <span class=\"kw2\">INT</span><span class=\"br0\">(</span><span class=\"kw2\">RND</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"co1\">'pick a door, any door</span><br/>    <span class=\"kw1\">DO</span><br/>    shown <span class=\"sy0\">=</span> <span class=\"kw2\">INT</span><span class=\"br0\">(</span><span class=\"kw2\">RND</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"co1\">'don't show the winner or the choice</span><br/>    <span class=\"kw1\">LOOP</span> <span class=\"kw1\">WHILE</span> doors<span class=\"br0\">(</span>shown<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">OR</span> shown <span class=\"sy0\">=</span> choice<br/>    <span class=\"kw1\">if</span> doors<span class=\"br0\">(</span>choice<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>        stayWins <span class=\"sy0\">=</span> stayWins <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"co1\">'if you won by staying, count it</span><br/>        <span class=\"kw1\">else</span><br/>        switchWins <span class=\"sy0\">=</span> switchWins <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"co1\">'could have switched to win</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    doors<span class=\"br0\">(</span>winner<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">'clear the doors for the next test</span><br/><span class=\"kw1\">NEXT</span><br/><span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Result for \"</span>;total;<span class=\"st0\">\" games.\"</span><br/><span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Switching wins \"</span>; switchWins; <span class=\"st0\">\" times.\"</span><br/><span class=\"kw1\">PRINT</span> <span class=\"st0\">\"Staying wins \"</span>; stayWins; <span class=\"st0\">\" times.\"</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 17, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> playgame<span class=\"br0\">(</span>player<span class=\"br0\">)</span><br/>   <span class=\"kw1\">local</span> car <span class=\"sy0\">=</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">local</span> pchoice <span class=\"sy0\">=</span> player<span class=\"sy0\">.</span>choice<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">local</span> <span class=\"kw1\">function</span> neither<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">)</span> <span class=\"co1\">--slow, but it works</span><br/>      <span class=\"kw1\">local</span> el <span class=\"sy0\">=</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span> <span class=\"br0\">(</span>el <span class=\"sy0\">~=</span> a <span class=\"kw2\">and</span> el <span class=\"sy0\">~=</span> b<span class=\"br0\">)</span> <span class=\"kw2\">and</span> el <span class=\"kw2\">or</span> neither<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">)</span><br/>   <span class=\"kw1\">end</span><br/>   <span class=\"kw1\">local</span> el <span class=\"sy0\">=</span> neither<span class=\"br0\">(</span>car<span class=\"sy0\">,</span> pchoice<span class=\"br0\">)</span><br/>   <span class=\"kw1\">if</span><span class=\"br0\">(</span>player<span class=\"sy0\">.</span>switch<span class=\"br0\">)</span> <span class=\"kw1\">then</span> pchoice <span class=\"sy0\">=</span> neither<span class=\"br0\">(</span>pchoice<span class=\"sy0\">,</span> el<span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>   player<span class=\"sy0\">.</span>wins <span class=\"sy0\">=</span> player<span class=\"sy0\">.</span>wins <span class=\"sy0\">+</span> <span class=\"br0\">(</span>pchoice <span class=\"sy0\">==</span> car <span class=\"kw2\">and</span> <span class=\"nu0\">1</span> <span class=\"kw2\">or</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">for</span> _<span class=\"sy0\">,</span> v <span class=\"kw2\">in</span> <span class=\"kw3\">ipairs</span><span class=\"br0\">{</span><span class=\"kw4\">true</span><span class=\"sy0\">,</span> <span class=\"kw4\">false</span><span class=\"br0\">}</span> <span class=\"kw1\">do</span><br/>   player <span class=\"sy0\">=</span> <span class=\"br0\">{</span>choice <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw3\">math.random</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span><span class=\"sy0\">,</span><br/>      wins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> switch <span class=\"sy0\">=</span> v<span class=\"br0\">}</span><br/>   <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">20000</span> <span class=\"kw1\">do</span> playgame<span class=\"br0\">(</span>player<span class=\"br0\">)</span> <span class=\"kw1\">end</span><br/>   <span class=\"kw3\">print</span><span class=\"br0\">(</span>player<span class=\"sy0\">.</span>wins<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Lua/Torch", "loc": 27, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> montyHall<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> car    <span class=\"sy0\">=</span> torch<span class=\"sy0\">.</span>LongTensor<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"co1\">-- door with car</span><br/>    <span class=\"kw1\">local</span> choice <span class=\"sy0\">=</span> torch<span class=\"sy0\">.</span>LongTensor<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"co1\">-- player's choice</span><br/>    <span class=\"kw1\">local</span> opens  <span class=\"sy0\">=</span> torch<span class=\"sy0\">.</span>LongTensor<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw3\">random</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>csub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>mul<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>csub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"co1\">-- -1 or +1</span><br/>    <span class=\"kw1\">local</span> iscarchoice <span class=\"sy0\">=</span> choice<span class=\"sy0\">:</span>eq<span class=\"br0\">(</span>car<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> nocarchoice <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">-</span>iscarchoice<br/>    opens<span class=\"br0\">[</span>iscarchoice<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>opens <span class=\"sy0\">+</span> choice <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw3\">abs</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">[</span>iscarchoice<span class=\"br0\">]</span><br/>    opens<span class=\"br0\">[</span>nocarchoice<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span> <span class=\"sy0\">-</span> car <span class=\"sy0\">-</span> choice<span class=\"br0\">)</span><span class=\"br0\">[</span>nocarchoice<span class=\"br0\">]</span><br/>    <span class=\"kw1\">local</span> change <span class=\"sy0\">=</span> torch<span class=\"sy0\">.</span>LongTensor<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">:</span>bernoulli<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\">-- 0: stay, 1: change</span><br/>    <span class=\"kw1\">local</span> win <span class=\"sy0\">=</span> iscarchoice<span class=\"sy0\">:</span>long<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>cmul<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>change<span class=\"br0\">)</span> <span class=\"sy0\">+</span> nocarchoice<span class=\"sy0\">:</span>long<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>cmul<span class=\"br0\">(</span>change<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> car<span class=\"sy0\">,</span> choice<span class=\"sy0\">,</span> opens<span class=\"sy0\">,</span> change<span class=\"sy0\">,</span> win<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> montyStats<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> car<span class=\"sy0\">,</span> pchoice<span class=\"sy0\">,</span> opens<span class=\"sy0\">,</span> change<span class=\"sy0\">,</span> win <span class=\"sy0\">=</span> montyHall<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">local</span>    change_and_win     <span class=\"sy0\">=</span>    change <span class=\"br0\">[</span>  win<span class=\"sy0\">:</span>byte<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>   change <span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><br/>    <span class=\"kw1\">local</span> no_change_and_win     <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>change<span class=\"br0\">)</span><span class=\"br0\">[</span>  win<span class=\"sy0\">:</span>byte<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>change<span class=\"br0\">)</span><span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><br/>    <span class=\"kw1\">local</span>    change_and_win_not <span class=\"sy0\">=</span>    change <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>win<span class=\"sy0\">:</span>byte<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>   change <span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><br/>    <span class=\"kw1\">local</span> no_change_and_win_not <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>change<span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>win<span class=\"sy0\">:</span>byte<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span>change<span class=\"br0\">)</span><span class=\"sy0\">:</span>sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><br/>\u00a0<br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">string.format</span><span class=\"br0\">(</span><span class=\"st0\">\"        \u00a0%9s   \u00a0%9s\"</span>        <span class=\"sy0\">,</span> <span class=\"st0\">\"no change\"</span><span class=\"sy0\">,</span>           <span class=\"st0\">\"change\"</span>           <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">string.format</span><span class=\"br0\">(</span><span class=\"st0\">\"win     \u00a0%8.4f%%   \u00a0%8.4f%%\"</span><span class=\"sy0\">,</span>  no_change_and_win    <span class=\"sy0\">,</span> change_and_win    <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">string.format</span><span class=\"br0\">(</span><span class=\"st0\">\"win not \u00a0%8.4f%%   \u00a0%8.4f%%\"</span><span class=\"sy0\">,</span>  no_change_and_win_not<span class=\"sy0\">,</span> change_and_win_not<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>montyStats<span class=\"br0\">(</span><span class=\"nu0\">1e7</span><span class=\"br0\">)</span></pre>"}, {"lang": "Mathematica", "loc": 10, "block": "<pre class=\"text highlighted_source\"> montyHall[nGames_]\u00a0:=<br/>    Module[{r, winningDoors, firstChoices, nStayWins, nSwitchWins, s},<br/>         r\u00a0:= RandomInteger[{1, 3}, nGames];<br/>         winningDoors = r;<br/>         firstChoices = r;<br/>         nStayWins =  Count[Transpose[{winningDoors, firstChoices}], {d_, d_}];<br/>         nSwitchWins = nGames - nStayWins;<br/>\u00a0<br/>    Grid[{{\"Strategy\", \"Wins\", \"Win\u00a0%\"}, {\"Stay\", Row[{nStayWins, \"/\", nGames}], s=N[100 nStayWins/nGames]}, <br/>          {\"Switch\", Row[{nSwitchWins, \"/\", nGames}], 100 - s}},  Frame -&gt; All]]</pre>"}, {"lang": "MATLAB", "loc": 56, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> montyHall<span class=\"br0\">(</span>numDoors,numSimulations<span class=\"br0\">)</span><br/>\u00a0<br/>    assert<span class=\"br0\">(</span>numDoors &gt; <span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>    <span class=\"kw1\">function</span> num = randInt<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>        num = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/floor.html\"><span class=\"kw2\">floor</span></a><span class=\"br0\">(</span> n*<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/rand.html\"><span class=\"kw2\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span>+<span class=\"nu0\">1</span> <span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"co1\">%The first column will tallie wins, the second losses</span><br/>    switchedDoors = <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span>;<br/>    stayed = <span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span>;<br/>\u00a0<br/>\u00a0<br/>    <span class=\"kw1\">for</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/i.html\"><span class=\"kw2\"><span class=\"re0\">i</span></span></a> = <span class=\"br0\">(</span><span class=\"nu0\">1</span>:numSimulations<span class=\"br0\">)</span><br/>\u00a0<br/>        availableDoors = <span class=\"br0\">(</span><span class=\"nu0\">1</span>:numDoors<span class=\"br0\">)</span>; <span class=\"co1\">%Preallocate the available doors</span><br/>        winningDoor = randInt<span class=\"br0\">(</span>numDoors<span class=\"br0\">)</span>; <span class=\"co1\">%Define the winning door</span><br/>        playersOriginalChoice = randInt<span class=\"br0\">(</span>numDoors<span class=\"br0\">)</span>; <span class=\"co1\">%The player picks his initial choice</span><br/>\u00a0<br/>        availableDoors<span class=\"br0\">(</span>playersOriginalChoice<span class=\"br0\">)</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span>; <span class=\"co1\">%Remove the players choice from the available doors</span><br/>\u00a0<br/>        <span class=\"co1\">%Pick the door to open from the available doors</span><br/>        openDoor = availableDoors<span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/randperm.html\"><span class=\"kw2\">randperm</span></a><span class=\"br0\">(</span>numel<span class=\"br0\">(</span>availableDoors<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"co1\">%Sort the available doors randomly</span><br/>        openDoor<span class=\"br0\">(</span>openDoor == winningDoor<span class=\"br0\">)</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span>; <span class=\"co1\">%Make sure Monty doesn't open the winning door</span><br/>        openDoor = openDoor<span class=\"br0\">(</span>randInt<span class=\"br0\">(</span>numel<span class=\"br0\">(</span>openDoor<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"co1\">%Choose a random door to open</span><br/>\u00a0<br/>        availableDoors<span class=\"br0\">(</span>availableDoors==openDoor<span class=\"br0\">)</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span>; <span class=\"co1\">%Remove the open door from the available doors</span><br/>        availableDoors<span class=\"br0\">(</span><span class=\"kw1\">end</span>+<span class=\"nu0\">1</span><span class=\"br0\">)</span> = playersOriginalChoice; <span class=\"co1\">%Put the player's original choice back into the pool of available doors</span><br/>        availableDoors = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sort.html\"><span class=\"kw2\">sort</span></a><span class=\"br0\">(</span>availableDoors<span class=\"br0\">)</span>;<br/>\u00a0<br/>        playersNewChoice = availableDoors<span class=\"br0\">(</span>randInt<span class=\"br0\">(</span>numel<span class=\"br0\">(</span>availableDoors<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"co1\">%Pick one of the available doors</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> playersNewChoice == playersOriginalChoice<br/>            <span class=\"kw1\">switch</span> playersNewChoice == winningDoor<br/>                <span class=\"kw1\">case</span> true<br/>                    stayed<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> = stayed<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span>;<br/>                <span class=\"kw1\">case</span> false<br/>                    stayed<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> = stayed<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span>;<br/>                <span class=\"kw1\">otherwise</span><br/>                    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/error.html\"><span class=\"kw2\">error</span></a> <span class=\"co2\">'ERROR'</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw1\">switch</span> playersNewChoice == winningDoor<br/>                <span class=\"kw1\">case</span> true<br/>                    switchedDoors<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> = switchedDoors<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span>;<br/>                <span class=\"kw1\">case</span> false<br/>                    switchedDoors<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> = switchedDoors<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span>;<br/>                <span class=\"kw1\">otherwise</span><br/>                    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/error.html\"><span class=\"kw2\">error</span></a> <span class=\"co2\">'ERROR'</span><br/>            <span class=\"kw1\">end</span>        <br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/disp.html\"><span class=\"kw2\">disp</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Switch win percentage:\u00a0%f%%\\nStay win percentage:\u00a0%f%%\\n'</span>, <span class=\"br0\">[</span>switchedDoors<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>/<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sum.html\"><span class=\"kw2\">sum</span></a><span class=\"br0\">(</span>switchedDoors<span class=\"br0\">)</span>,stayed<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>/<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sum.html\"><span class=\"kw2\">sum</span></a><span class=\"br0\">(</span>stayed<span class=\"br0\">)</span><span class=\"br0\">]</span> * <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "MAXScript", "loc": 25, "block": "<pre class=\"text highlighted_source\">fn montyHall choice switch =<br/>(<br/>    doors = #(false, false, false)<br/>    doors[random 1 3] = true<br/>    chosen = doors[choice]<br/>    if switch then chosen = not chosen<br/>    chosen<br/>)<br/>\u00a0<br/>fn iterate iterations switched =<br/>(<br/>    wins = 0<br/>    for i in 1 to iterations do<br/>    (<br/>        if (montyHall (random 1 3) switched) then<br/>        (<br/>            wins += 1<br/>        )<br/>    )<br/>    wins * 100 / iterations as float<br/>)<br/>\u00a0<br/>iterations = 10000<br/>format (\"Stay strategy:%\\%\\n\") (iterate iterations false)<br/>format (\"Switch strategy:%\\%\\n\") (iterate iterations true)</pre>"}, {"lang": "NetRexx", "loc": 35, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx ************************************************************<br/>* 30.08.2013 Walter Pachl  translated from Java/REXX/PL/I<br/>**********************************************************************/</span><br/>options replace format comments java crossref savelog symbols nobinary<br/>\u00a0<br/>doors = create_doors<br/>switchWins = <span class=\"nu0\">0</span><br/>stayWins = <span class=\"nu0\">0</span><br/>shown=<span class=\"nu0\">0</span><br/><span class=\"kw1\">Loop</span> plays=<span class=\"nu0\">1</span> To <span class=\"nu0\">1000000</span><br/>  doors=<span class=\"nu0\">0</span><br/>  r=r3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  doors<span class=\"br0\">[</span>r<span class=\"br0\">]</span>=<span class=\"nu0\">1</span><br/>  choice = r3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">loop</span> Until shown<span class=\"sy0\">&lt;&gt;</span>choice <span class=\"sy0\">&amp;</span> doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span>=<span class=\"nu0\">0</span><br/>    shown  = r3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">If</span> doors<span class=\"br0\">[</span>choice<span class=\"br0\">]</span>=<span class=\"nu0\">1</span> <span class=\"kw3\">Then</span><br/>    stayWins=stayWins+<span class=\"nu0\">1</span><br/>  <span class=\"kw3\">Else</span><br/>    switchWins=switchWins+<span class=\"nu0\">1</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">\"Switching wins \"</span> switchWins <span class=\"st0\">\" times.\"</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">\"Staying wins   \"</span> stayWins   <span class=\"st0\">\" times.\"</span><br/>\u00a0<br/>method create_doors <span class=\"kw2\">static</span> <span class=\"kw2\">returns</span> Rexx<br/>  doors = <span class=\"st0\">''</span><br/>  doors<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> = <span class=\"nu0\">0</span><br/>  doors<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"nu0\">0</span><br/>  doors<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> = <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">return</span> doors<br/>\u00a0<br/>method r3 <span class=\"kw2\">static</span><br/>  rand=random<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> rand.<span class=\"me0\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span></pre>"}, {"lang": "Nim", "loc": 37, "block": "<pre class=\"text highlighted_source\">import math<br/>randomize()<br/>\u00a0<br/>proc shuffle[T](x: var seq[T]) =<br/>  for i in countdown(x.high, 0):<br/>    let j = random(i + 1)<br/>    swap(x[i], x[j])<br/>\u00a0<br/># 1 represents a car<br/># 0 represent a goat<br/>\u00a0<br/>var<br/>  stay = 0   # amount won if stay in the same position<br/>  switch = 0 # amount won if you switch<br/>\u00a0<br/>for i in 1..1000:<br/>  var lst = @[1,0,0]  # one car and two goats<br/>  shuffle(lst)        # shuffles the list randomly<br/>  let ran = random(3) # gets a random number for the random guess<br/>  let user = lst[ran] # storing the random guess<br/>  del lst, ran        # deleting the random guess<br/>\u00a0<br/>  var huh = 0<br/>  for i in lst:       # getting a value 0 and deleting it<br/>    if i == 0:<br/>      del lst, huh    # deletes a goat when it finds it<br/>      break<br/>    inc huh<br/>\u00a0<br/>  if user == 1:       # if the original choice is 1 then stay adds 1<br/>    inc stay<br/>\u00a0<br/>  if lst[0] == 1:     # if the switched value is 1 then switch adds 1<br/>    inc switch<br/>\u00a0<br/>echo \"Stay = \",stay<br/>echo \"Switch = \",switch</pre>"}, {"lang": "OCaml", "loc": 29, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> trials <span class=\"sy0\">=</span> <span class=\"nu0\">10000</span><br/>\u00a0<br/><span class=\"kw1\">type</span> door <span class=\"sy0\">=</span> Car <span class=\"sy0\">|</span> Goat<br/>\u00a0<br/><span class=\"kw1\">let</span> play switch <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> n <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEint\"><span class=\"kw4\">int</span></a> <span class=\"nu0\">3</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> d1 <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span>Car<span class=\"sy0\">;</span> Goat<span class=\"sy0\">;</span> Goat<span class=\"sy0\">|</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> switch <span class=\"kw1\">then</span> d1<br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">match</span> d1 <span class=\"kw1\">with</span><br/>       Car  <span class=\"sy0\">-&gt;</span> Goat<br/>     <span class=\"sy0\">|</span> Goat <span class=\"sy0\">-&gt;</span> Car<br/>\u00a0<br/><span class=\"kw1\">let</span> cars n switch <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> total <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> n <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">let</span> prize <span class=\"sy0\">=</span> play switch <span class=\"kw1\">in</span><br/>    <span class=\"kw1\">if</span> prize <span class=\"sy0\">=</span> Car <span class=\"kw1\">then</span><br/>      <span class=\"kw1\">incr</span> total<br/>  <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>  <span class=\"sy0\">!</span>total<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> switch <span class=\"sy0\">=</span> cars trials <span class=\"kw1\">true</span><br/>  <span class=\"kw1\">and</span> stay   <span class=\"sy0\">=</span> cars trials <span class=\"kw1\">false</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> msg strat n <span class=\"sy0\">=</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"The\u00a0%s strategy succeeds\u00a0%f%% of the time.\\n\"</span><br/>      strat <span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">.</span> <span class=\"sy0\">*.</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> n <span class=\"sy0\">/.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> trials<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  msg <span class=\"st0\">\"switch\"</span> switch<span class=\"sy0\">;</span><br/>  msg <span class=\"st0\">\"stay\"</span> stay</pre>"}, {"lang": "PARI/GP", "loc": 13, "block": "<pre class=\"parigp highlighted_source\">test<span class=\"br0\">(</span>trials<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  my<span class=\"br0\">(</span>stay<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>change<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>trials<span class=\"sy0\">,</span><br/>    my<span class=\"br0\">(</span>prize<span class=\"sy0\">=</span><span class=\"kw1\">random</span><span class=\"br0\">(</span><span class=\"nu1\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>initial<span class=\"sy0\">=</span><span class=\"kw1\">random</span><span class=\"br0\">(</span><span class=\"nu1\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>opened<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"br0\">(</span>opened<span class=\"sy0\">=</span><span class=\"kw1\">random</span><span class=\"br0\">(</span><span class=\"nu1\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">==</span>prize <span class=\"sy0\">|</span> opened<span class=\"sy0\">==</span>initial<span class=\"sy0\">,</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>prize <span class=\"sy0\">==</span> initial<span class=\"sy0\">,</span> stay<span class=\"sy0\">++,</span> change<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Wins when staying:  \"</span>stay<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Wins when changing: \"</span>change<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">[</span>stay<span class=\"sy0\">,</span> change<span class=\"br0\">]</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>test<span class=\"br0\">(</span><span class=\"nu2\">1e4</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 51, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> MontyHall<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  sysutils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">const</span><br/>  NumGames <span class=\"sy3\">=</span> <span class=\"nu0\">1000</span><span class=\"sy1\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"coMULTI\">{Randomly pick a door(a number between 0 and 2}</span><br/><span class=\"kw1\">function</span> PickDoor<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Exit<span class=\"br0\">(</span>Trunc<span class=\"br0\">(</span>Random <span class=\"sy3\">*</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  i<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>  PrizeDoor<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>  ChosenDoor<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>  WinsChangingDoors<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  WinsNotChangingDoors<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Randomize<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> NumGames <span class=\"sy3\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    <span class=\"co1\">//randomly picks the prize door</span><br/>    PrizeDoor <span class=\"sy1\">:</span><span class=\"sy3\">=</span> PickDoor<span class=\"sy1\">;</span><br/>    <span class=\"co1\">//randomly chooses a door</span><br/>    ChosenDoor <span class=\"sy1\">:</span><span class=\"sy3\">=</span> PickDoor<span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"co1\">//if the strategy is not changing doors the only way to win is if the chosen</span><br/>    <span class=\"co1\">//door is the one with the prize</span><br/>    <span class=\"kw1\">if</span> ChosenDoor <span class=\"sy3\">=</span> PrizeDoor <span class=\"kw1\">then</span><br/>      Inc<span class=\"br0\">(</span>WinsNotChangingDoors<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"co1\">//if the strategy is changing doors the only way to win is if we choose one</span><br/>    <span class=\"co1\">//of the two doors that hasn't the prize, because when we change we change to the prize door.</span><br/>    <span class=\"co1\">//The opened door doesn't have a prize</span><br/>    <span class=\"kw1\">if</span> ChosenDoor &lt;&gt; PrizeDoor <span class=\"kw1\">then</span><br/>      Inc<span class=\"br0\">(</span>WinsChangingDoors<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Num of games:'</span> <span class=\"sy3\">+</span> IntToStr<span class=\"br0\">(</span>NumGames<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Wins not changing doors:'</span> <span class=\"sy3\">+</span> IntToStr<span class=\"br0\">(</span>WinsNotChangingDoors<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">', '</span> <span class=\"sy3\">+</span><br/>    FloatToStr<span class=\"br0\">(</span><span class=\"br0\">(</span>WinsNotChangingDoors <span class=\"sy3\">/</span> NumGames<span class=\"br0\">)</span> <span class=\"sy3\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'% of total.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Wins changing doors:'</span> <span class=\"sy3\">+</span> IntToStr<span class=\"br0\">(</span>WinsChangingDoors<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">', '</span> <span class=\"sy3\">+</span><br/>    FloatToStr<span class=\"br0\">(</span><span class=\"br0\">(</span>WinsChangingDoors <span class=\"sy3\">/</span> NumGames<span class=\"br0\">)</span> <span class=\"sy3\">*</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'% of total.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 27, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#! /usr/bin/perl</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$trials</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10000</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$stay</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$switch</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$trials</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$prize</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># let monty randomly choose a door where he puts the prize</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$chosen</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># let us randomly choose a door...</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$show</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">do</span> <span class=\"br0\">{</span> <span class=\"re0\">$show</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"re0\">$show</span> <span class=\"sy0\">==</span> <span class=\"re0\">$chosen</span> <span class=\"sy0\">||</span> <span class=\"re0\">$show</span> <span class=\"sy0\">==</span> <span class=\"re0\">$prize</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># ^ monty opens a door which is not the one with the</span><br/>    <span class=\"co1\"># prize, that he knows it is the one the player chosen</span><br/>   <span class=\"re0\">$stay</span><span class=\"sy0\">++</span> <span class=\"kw1\">if</span> <span class=\"re0\">$prize</span> <span class=\"sy0\">==</span> <span class=\"re0\">$chosen</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># ^ if player chose the correct door, player wins only if he stays</span><br/>   <span class=\"re0\">$switch</span><span class=\"sy0\">++</span> <span class=\"kw1\">if</span> <span class=\"re0\">$prize</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span> <span class=\"sy0\">-</span> <span class=\"re0\">$chosen</span> <span class=\"sy0\">-</span> <span class=\"re0\">$show</span><span class=\"sy0\">;</span><br/>    <span class=\"co1\"># ^ if player switches, the door he picks is (3 - $chosen - $show),</span><br/>    <span class=\"co1\"># because 0+1+2=3, and he picks the only remaining door that is</span><br/>    <span class=\"co1\"># neither $chosen nor $show</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Stay win ratio \"</span> <span class=\"sy0\">.</span>  <span class=\"br0\">(</span><span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> <span class=\"re0\">$stay</span><span class=\"sy0\">/</span><span class=\"re0\">$trials</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Switch win ratio \"</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> <span class=\"re0\">$switch</span><span class=\"sy0\">/</span><span class=\"re0\">$trials</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 39, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">enum</span> Prize <span class=\"sy0\">&lt;</span>Car Goat<span class=\"sy0\">&gt;;</span><br/><span class=\"kw1\">enum</span> Strategy <span class=\"sy0\">&lt;</span>Stay Switch<span class=\"sy0\">&gt;;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> play <span class=\"br0\">(</span>Strategy <span class=\"re0\">$strategy</span><span class=\"sy0\">,</span> Int <span class=\"sy0\">:</span><span class=\"re0\">$doors</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">returns</span> Prize <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"co1\"># Call the door with a car behind it door 0. Number the</span><br/>    <span class=\"co1\"># remaining doors starting from 1.</span><br/>    <span class=\"kw1\">my</span> Prize <span class=\"re0\">@doors</span> <span class=\"sy0\">=</span> flat Car<span class=\"sy0\">,</span> Goat <span class=\"kw1\">xx</span> <span class=\"re0\">$doors</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># The player chooses a door.</span><br/>    <span class=\"kw1\">my</span> Prize <span class=\"re0\">$initial_pick</span> <span class=\"sy0\">=</span> <span class=\"re0\">@doors</span><span class=\"sy0\">.</span><span class=\"kw3\">splice</span><span class=\"br0\">(</span><span class=\"re0\">@doors</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\"># Of the n doors remaining, the host chooses n - 1 that have</span><br/>    <span class=\"co1\"># goats behind them and opens them, removing them from play.</span><br/>    <span class=\"kw1\">while</span> <span class=\"re0\">@doors</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>\t<span class=\"re0\">@doors</span><span class=\"sy0\">.</span><span class=\"kw3\">splice</span><span class=\"br0\">(</span><span class=\"re0\">$_</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t    <span class=\"kw1\">when</span> Goat<br/>\t\t<span class=\"kw1\">given</span> <span class=\"re0\">@doors</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">pick</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\"># If the player stays, they get their initial pick. Otherwise,</span><br/>    <span class=\"co1\"># they get whatever's behind the remaining door.</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$strategy</span> <span class=\"sy0\">===</span> Stay <span class=\"sy0\">??</span> <span class=\"re0\">$initial_pick</span> <span class=\"sy0\">!!</span> <span class=\"re0\">@doors</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">constant</span> TRIALS <span class=\"sy0\">=</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$doors</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">%wins</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">say</span> <span class=\"st0\">\"With $doors doors: \"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> Stay<span class=\"sy0\">,</span> <span class=\"st_h\">'Staying'</span><span class=\"sy0\">,</span> Switch<span class=\"sy0\">,</span> <span class=\"st_h\">'Switching'</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$name</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy0\">^</span>TRIALS <span class=\"br0\">{</span><br/>            <span class=\"sy0\">++</span><span class=\"re0\">%wins</span><span class=\"br0\">{</span><span class=\"re0\">$s</span><span class=\"br0\">}</span> <span class=\"kw1\">if</span> play<span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> doors <span class=\"sy0\">=&gt;</span> <span class=\"re0\">$doors</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> Car<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw3\">say</span> <span class=\"st0\">\"  $name wins \"</span><span class=\"sy0\">,</span><br/>            <span class=\"kw3\">round</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">*</span><span class=\"re0\">%wins</span><span class=\"br0\">{</span><span class=\"re0\">$s</span><span class=\"br0\">}</span> <span class=\"sy0\">/</span> TRIALS<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>            <span class=\"st_h\">'% of the time.'</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 15, "block": "<pre class=\"text highlighted_source\">integer swapWins = 0, stayWins = 0, winner, choice, reveal, other<br/>atom t0 = time()<br/>\u00a0<br/>for game=1 to 1_000_000 do<br/>    winner = rand(3)<br/>    choice = rand(3)<br/>    while 1 do<br/>        reveal = rand(3)<br/>        if reveal!=winner and reveal!=choice then exit end if<br/>    end while<br/>    stayWins += (choice==winner)<br/>    other = 6-choice-reveal     -- (as 1+2+3=6, and reveal!=choice)<br/>    swapWins += (other==winner)<br/>end for<br/>printf(1, \"Stay:\u00a0%,d\\nSwap:\u00a0%,d\\nTime:\u00a0%3.2fs\\n\",{stayWins,swapWins,time()-t0})</pre>"}, {"lang": "PHP", "loc": 27, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw2\">function</span> montyhall<span class=\"br0\">(</span><span class=\"re0\">$iterations</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<span class=\"re0\">$switch_win</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$stay_win</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/range\"><span class=\"kw3\">range</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"re0\">$iterations</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> <span class=\"re0\">$i</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"re0\">$doors</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array\"><span class=\"kw3\">array</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$doors</span><span class=\"br0\">[</span><a href=\"http://www.php.net/array_rand\"><span class=\"kw3\">array_rand</span></a><span class=\"br0\">(</span><span class=\"re0\">$doors</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$choice</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array_rand\"><span class=\"kw3\">array_rand</span></a><span class=\"br0\">(</span><span class=\"re0\">$doors</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"re0\">$shown</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/array_rand\"><span class=\"kw3\">array_rand</span></a><span class=\"br0\">(</span><span class=\"re0\">$doors</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"re0\">$shown</span> <span class=\"sy0\">==</span> <span class=\"re0\">$choice</span> <span class=\"sy0\">||</span> <span class=\"re0\">$doors</span><span class=\"br0\">[</span><span class=\"re0\">$shown</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"re0\">$stay_win</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$doors</span><span class=\"br0\">[</span><span class=\"re0\">$choice</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$switch_win</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$doors</span><span class=\"br0\">[</span><span class=\"nu0\">3</span> <span class=\"sy0\">-</span> <span class=\"re0\">$choice</span> <span class=\"sy0\">-</span> <span class=\"re0\">$shown</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"re0\">$stay_percentages</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$stay_win</span><span class=\"sy0\">/</span><span class=\"re0\">$iterations</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/>\t<span class=\"re0\">$switch_percentages</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$switch_win</span><span class=\"sy0\">/</span><span class=\"re0\">$iterations</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">echo</span> <span class=\"st0\">\"Iterations: <span class=\"es4\">{$iterations}</span> - \"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">echo</span> <span class=\"st0\">\"Stayed wins: <span class=\"es4\">{$stay_win}</span> (<span class=\"es4\">{$stay_percentages}</span>%) - \"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">echo</span> <span class=\"st0\">\"Switched wins: <span class=\"es4\">{$switch_win}</span> (<span class=\"es4\">{$switch_percentages}</span>%)\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>        montyhall<span class=\"br0\">(</span><span class=\"nu0\">10000</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 19, "block": "<pre class=\"text highlighted_source\">(de montyHall (Keep)<br/>   (let (Prize (rand 1 3)  Choice (rand 1 3))<br/>      (if Keep                    # Keeping the first choice?<br/>         (= Prize Choice)         # Yes: Monty's choice doesn't matter<br/>         (&lt;&gt; Prize Choice) ) ) )  # Else: Win if your first choice was wrong<br/>\u00a0<br/>(prinl<br/>   \"Strategy KEEP    -&gt; \"<br/>   (let Cnt 0<br/>      (do 10000 (and (montyHall T) (inc 'Cnt)))<br/>      (format Cnt 2) )<br/>   \"\u00a0%\" )<br/>\u00a0<br/>(prinl<br/>   \"Strategy SWITCH  -&gt; \"<br/>   (let Cnt 0<br/>      (do 10000 (and (montyHall NIL) (inc 'Cnt)))<br/>      (format Cnt 2) )<br/>   \"\u00a0%\" )</pre>"}, {"lang": "PL/I", "loc": 38, "block": "<pre class=\"pli highlighted_source\"><span class=\"sy0\">*</span>process source attributes xref<span class=\"sy0\">;</span><br/> ziegen<span class=\"sy0\">:</span> <span class=\"kw1\">Proc</span> <span class=\"kw1\">Options</span><span class=\"br0\">(</span><span class=\"kw1\">main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"coMULTI\">/* REXX ***************************************************************<br/> * 30.08.2013 Walter Pachl derived from Java<br/> **********************************************************************/</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>switchWins<span class=\"sy0\">,</span>stayWins<span class=\"br0\">)</span> <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> doors<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> <span class=\"br0\">(</span>plays<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>choice<span class=\"br0\">)</span> <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> c17 <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"br0\">)</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">datetime</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> p9  <span class=\"kw1\">Pic</span><span class=\"st0\">'(9)9'</span> <span class=\"kw1\">def</span><span class=\"br0\">(</span>c17<span class=\"br0\">)</span> <span class=\"kw1\">pos</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> i<span class=\"sy0\">=</span><span class=\"kw1\">random</span><span class=\"br0\">(</span>p9<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Do</span> plays<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">1000000</span><span class=\"sy0\">;</span><br/>   doors<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>   r<span class=\"sy0\">=</span>r3<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   doors<span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>   choice<span class=\"sy0\">=</span>r3<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">Do</span> <span class=\"kw1\">Until</span><span class=\"br0\">(</span>shown<span class=\"sy0\">^=</span>choice <span class=\"sy0\">&amp;</span> doors<span class=\"br0\">(</span>shown<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>     shown<span class=\"sy0\">=</span>r3<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>     <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">If</span> doors<span class=\"br0\">(</span>choice<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">Then</span><br/>     stayWins<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">Else</span><br/>     switchWins<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">\"Switching wins \"</span><span class=\"sy0\">,</span>switchWins<span class=\"sy0\">,</span><span class=\"st0\">\" times.\"</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Edit</span><span class=\"br0\">(</span><span class=\"st0\">\"Staying wins   \"</span><span class=\"sy0\">,</span>stayWins  <span class=\"sy0\">,</span><span class=\"st0\">\" times.\"</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw1\">Skip</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>f<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/> r3<span class=\"sy0\">:</span> <span class=\"kw1\">Procedure</span> <span class=\"kw1\">Returns</span><span class=\"br0\">(</span><span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"coMULTI\">/*********************************************************************<br/> * Return a random integer: 1, 2, or 3<br/> *********************************************************************/</span><br/>   <span class=\"kw1\">Dcl</span> r <span class=\"kw1\">Bin</span> <span class=\"kw1\">Float</span><span class=\"br0\">(</span><span class=\"nu0\">53</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">Dcl</span> res <span class=\"kw1\">Bin</span> <span class=\"kw1\">Fixed</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   r<span class=\"sy0\">=</span><span class=\"kw1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   res<span class=\"sy0\">=</span><span class=\"br0\">(</span>r<span class=\"sy0\">*</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>   <span class=\"kw1\">Return</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span></pre>"}, {"lang": "PostScript", "loc": 36, "block": "<pre class=\"text highlighted_source\">%!PS<br/>/Courier            \u00a0% name the desired font<br/>20 selectfont       \u00a0% choose the size in points and establish <br/>                    \u00a0% the font as the current one<br/>\u00a0<br/>% init random number generator<br/>(%Calendar%) currentdevparams /Second get srand<br/>\u00a0<br/>1000000\t\t\t\t% iteration count<br/>0 0\t\t\t\t% 0 wins on first selection 0 wins on switch<br/>2 index\t\t\t\t% get iteration count<br/>{<br/>rand 3 mod\t\t\t% winning door<br/>rand 3 mod\t\t\t% first choice<br/>eq {<br/>\t1 add<br/>} <br/>{<br/>\texch 1 add exch<br/>} ifelse<br/>} repeat<br/>\u00a0<br/>% compute percentages<br/>2 index div 100 mul exch 2 index div 100 mul<br/>\u00a0<br/>\u00a0<br/>% display result<br/>70 600 moveto<br/>(Switching the door: ) show<br/>80 string cvs show (%) show<br/>70 700 moveto<br/>(Keeping the same: ) show <br/>80 string cvs show (%) show<br/>\u00a0<br/>\u00a0<br/>showpage            \u00a0% print all on the page</pre>"}, {"lang": "PowerShell", "loc": 54, "block": "<pre class=\"powershell highlighted_source\"><span class=\"co1\">#Declaring variables</span><br/><span class=\"re0\">$intIterations</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10000</span><br/><span class=\"re0\">$intKept</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"re0\">$intSwitched</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\">#Creating a function</span><br/><span class=\"kw3\">Function</span> Play<span class=\"sy0\">-</span>MontyHall<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>    <span class=\"co1\">#Using a .NET object for randomization</span><br/>    <span class=\"re0\">$objRandom</span> <span class=\"sy0\">=</span> <span class=\"kw1\">New-Object</span> <span class=\"kw5\">-TypeName</span> System.Random<br/>\u00a0<br/>    <span class=\"co1\">#Generating the winning door number</span><br/>    <span class=\"re0\">$intWin</span> <span class=\"sy0\">=</span> <span class=\"re0\">$objRandom</span>.Next<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#Generating the chosen door</span><br/>    <span class=\"re0\">$intChoice</span> <span class=\"sy0\">=</span> <span class=\"re0\">$objRandom</span>.Next<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">#Generating the excluded number</span><br/>    <span class=\"co1\">#Because there is no method to exclude a number from a range,</span><br/>    <span class=\"co1\">#I let it re-generate in case it equals the winning number or</span><br/>    <span class=\"co1\">#in case it equals the chosen door.</span><br/>    <span class=\"re0\">$intLose</span> <span class=\"sy0\">=</span> <span class=\"re0\">$objRandom</span>.Next<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">While</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$intLose</span> <span class=\"kw4\">-EQ</span> <span class=\"re0\">$intWin</span><span class=\"br0\">)</span> <span class=\"kw4\">-OR</span> <span class=\"br0\">(</span><span class=\"re0\">$intLose</span> <span class=\"kw4\">-EQ</span> <span class=\"re0\">$intChoice</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><span class=\"re0\">$intLose</span> <span class=\"sy0\">=</span> <span class=\"re0\">$objRandom</span>.Next<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">#Generating the 'other' door</span><br/>    <span class=\"co1\">#Same logic applies as for the chosen door: it cannot be equal </span><br/>    <span class=\"co1\">#to the winning door nor to the chosen door.</span><br/>    <span class=\"re0\">$intSwitch</span> <span class=\"sy0\">=</span> <span class=\"re0\">$objRandom</span>.Next<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">While</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$intSwitch</span> <span class=\"kw4\">-EQ</span> <span class=\"re0\">$intLose</span><span class=\"br0\">)</span> <span class=\"kw4\">-OR</span> <span class=\"br0\">(</span><span class=\"re0\">$intSwitch</span> <span class=\"kw4\">-EQ</span> <span class=\"re0\">$intChoice</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><span class=\"re0\">$intSwitch</span> <span class=\"sy0\">=</span> <span class=\"re0\">$objRandom</span>.Next<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"co1\">#Simple counters per win for both categories</span><br/>    <span class=\"co1\">#Because a child scope cannot change variables in the parent</span><br/>    <span class=\"co1\">#scope, the scope of the counters is expanded script-wide.</span><br/>    <span class=\"kw3\">If</span> <span class=\"br0\">(</span><span class=\"re0\">$intChoice</span> <span class=\"kw4\">-EQ</span> <span class=\"re0\">$intWin</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><span class=\"re0\">$script</span>:intKept<span class=\"sy0\">++</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">If</span> <span class=\"br0\">(</span><span class=\"re0\">$intSwitch</span> <span class=\"kw4\">-EQ</span> <span class=\"re0\">$intWin</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><span class=\"re0\">$script</span>:intSwitched<span class=\"sy0\">++</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">#Looping the Monty Hall function for $intIterations times</span><br/><span class=\"kw3\">While</span> <span class=\"br0\">(</span><span class=\"re0\">$intIterationCount</span> <span class=\"kw4\">-LT</span> <span class=\"re0\">$intIterations</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>    Play<span class=\"sy0\">-</span>MontyHall <br/>    <span class=\"re0\">$intIterationCount</span><span class=\"sy0\">++</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">#Output</span><br/><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"Results through $intIterations iterations:\"</span><br/><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"Keep \u00a0: $intKept ($($intKept/$intIterations*100)%)\"</span> <br/><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"Switch: $intSwitched ($($intSwitched/$intIterations*100)%)\"</span><br/><span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"\"</span></pre>"}, {"lang": "PureBasic", "loc": 35, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Structure</span> wins<br/>  stay.i<br/>  redecide.i<br/><span class=\"kw1\">EndStructure</span><br/>\u00a0<br/>#goat <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>#car <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/><span class=\"kw1\">Procedure</span> MontyHall<span class=\"br0\">(</span><span class=\"sy0\">*</span>results.wins<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> Doors<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  Doors<span class=\"br0\">(</span><span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> #car<br/>\u00a0<br/>  player <span class=\"sy0\">=</span> <span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Select</span> Doors<span class=\"br0\">(</span>player<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Case</span> #car<br/>      <span class=\"sy0\">*</span>results<span class=\"sy0\">\\</span>redecide <span class=\"sy0\">+</span> #goat<br/>      <span class=\"sy0\">*</span>results<span class=\"sy0\">\\</span>stay <span class=\"sy0\">+</span> #car<br/>    <span class=\"kw1\">Case</span> #goat<br/>      <span class=\"sy0\">*</span>results<span class=\"sy0\">\\</span>redecide <span class=\"sy0\">+</span> #car<br/>      <span class=\"sy0\">*</span>results<span class=\"sy0\">\\</span>stay <span class=\"sy0\">+</span> #goat<br/>  <span class=\"kw1\">EndSelect</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>#Tries <span class=\"sy0\">=</span> <span class=\"nu0\">1000000</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> results.wins<br/>\u00a0<br/><span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> #Tries<br/>  MontyHall<span class=\"br0\">(</span>@results<span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Trial runs for each option: \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>#Tries<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Wins when redeciding: \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>results<span class=\"sy0\">\\</span>redecide<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" (\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">StrD</span><span class=\"br0\">(</span>results<span class=\"sy0\">\\</span>redecide <span class=\"sy0\">/</span> #Tries <span class=\"sy0\">*</span> <span class=\"nu0\">100</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"% chance)\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Wins when sticking:   \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>results<span class=\"sy0\">\\</span>stay<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" (\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">StrD</span><span class=\"br0\">(</span>results<span class=\"sy0\">\\</span>stay <span class=\"sy0\">/</span> #Tries <span class=\"sy0\">*</span> <span class=\"nu0\">100</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"% chance)\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 45, "block": "<pre class=\"python highlighted_source\"><span class=\"st0\">'''<br/>I could understand the explanation of the Monty Hall problem<br/>but needed some more evidence<br/>\u00a0<br/>References:<br/>  http://www.bbc.co.uk/dna/h2g2/A1054306<br/>  http://en.wikipedia.org/wiki/Monty_Hall_problem especially:<br/>  http://en.wikipedia.org/wiki/Monty_Hall_problem#Increasing_the_number_of_doors<br/>'''</span><br/><span class=\"kw1\">from</span> <span class=\"kw3\">random</span> <span class=\"kw1\">import</span> randrange<br/>\u00a0<br/>doors<span class=\"sy0\">,</span> iterations <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">100000</span>  <span class=\"co1\"># could try 100,1000</span><br/>\u00a0<br/><span class=\"kw1\">def</span> monty_hall<span class=\"br0\">(</span>choice<span class=\"sy0\">,</span> switch<span class=\"sy0\">=</span><span class=\"kw2\">False</span><span class=\"sy0\">,</span> doorCount<span class=\"sy0\">=</span>doors<span class=\"br0\">)</span>:<br/>  <span class=\"co1\"># Set up doors</span><br/>  door <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">False</span><span class=\"br0\">]</span>*doorCount<br/>  <span class=\"co1\"># One door with prize</span><br/>  door<span class=\"br0\">[</span>randrange<span class=\"br0\">(</span>doorCount<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw2\">True</span><br/>\u00a0<br/>  chosen <span class=\"sy0\">=</span> door<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><br/>\u00a0<br/>  unpicked <span class=\"sy0\">=</span> door<br/>  <span class=\"kw1\">del</span> unpicked<span class=\"br0\">[</span>choice<span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"co1\"># Out of those unpicked, the alternative is either:</span><br/>  <span class=\"co1\">#   the prize door, or</span><br/>  <span class=\"co1\">#   an empty door if the initial choice is actually the prize.</span><br/>  alternative <span class=\"sy0\">=</span> <span class=\"kw2\">True</span> <span class=\"kw1\">in</span> unpicked<br/>\u00a0<br/>  <span class=\"kw1\">if</span> switch:<br/>    <span class=\"kw1\">return</span> alternative<br/>  <span class=\"kw1\">else</span>:<br/>    <span class=\"kw1\">return</span> chosen<br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Monty Hall problem simulation:\"</span><br/><span class=\"kw1\">print</span> doors<span class=\"sy0\">,</span> <span class=\"st0\">\"doors,\"</span><span class=\"sy0\">,</span> iterations<span class=\"sy0\">,</span> <span class=\"st0\">\"iterations.<span class=\"es0\">\\n</span>\"</span><br/>\u00a0<br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Not switching allows you to win\"</span><span class=\"sy0\">,</span><br/><span class=\"kw1\">print</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>monty_hall<span class=\"br0\">(</span>randrange<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> switch<span class=\"sy0\">=</span><span class=\"kw2\">False</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>iterations<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"out of\"</span><span class=\"sy0\">,</span> iterations<span class=\"sy0\">,</span> <span class=\"st0\">\"times.\"</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"Switching allows you to win\"</span><span class=\"sy0\">,</span><br/><span class=\"kw1\">print</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>monty_hall<span class=\"br0\">(</span>randrange<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> switch<span class=\"sy0\">=</span><span class=\"kw2\">True</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>iterations<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/><span class=\"kw1\">print</span> <span class=\"st0\">\"out of\"</span><span class=\"sy0\">,</span> iterations<span class=\"sy0\">,</span> <span class=\"st0\">\"times.<span class=\"es0\">\\n</span>\"</span></pre>"}, {"lang": "R", "loc": 62, "block": "<pre class=\"rsplus highlighted_source\"><span class=\"co1\"># Since R is a vector based language that penalizes for loops, we will avoid</span><br/><span class=\"co1\">#     for-loops, instead using \"apply\" statement variants (like \"map\" in other </span><br/><span class=\"co1\">#     functional languages).     </span><br/>\u00a0<br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/set.seed.html\"><span class=\"kw2\">set.<span class=\"me1\">seed</span></span></a><span class=\"br0\">(</span><span class=\"nu0\">19771025</span><span class=\"br0\">)</span>   <span class=\"co1\"># set the seed to set the same results as this code</span><br/>N <span class=\"sy0\">&lt;-</span> <span class=\"nu0\">10000</span>  <span class=\"co1\"># trials</span><br/>true_answers <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/sample.html\"><span class=\"kw2\">sample</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">3</span>, N, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/replace.html\"><span class=\"kw2\">replace</span></a><span class=\"sy0\">=</span>TRUE<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\"># We can assme that the contestant always choose door 1 without any loss of </span><br/><span class=\"co1\">#    generality, by equivalence.  That is, we can always relabel the doors</span><br/><span class=\"co1\">#    to make the user-chosen door into door 1.  </span><br/><span class=\"co1\"># Thus, the host opens door '2' unless door 2 has the prize, in which case</span><br/><span class=\"co1\">#    the host opens door 3.</span><br/>\u00a0<br/>host_opens <span class=\"sy0\">&lt;-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>true_answers <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <br/>other_door <span class=\"sy0\">&lt;-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>true_answers <span class=\"sy0\">!=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>  <br/>\u00a0<br/><span class=\"co1\">## if always switch</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/summary.html\"><span class=\"kw2\">summary</span></a><span class=\"br0\">(</span> other_door <span class=\"sy0\">==</span> true_answers <span class=\"br0\">)</span><br/><span class=\"co1\">## if we never switch</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/summary.html\"><span class=\"kw2\">summary</span></a><span class=\"br0\">(</span> true_answers <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"co1\">## if we randomly switch</span><br/>random_switch <span class=\"sy0\">&lt;-</span> other_door<br/>random_switch<span class=\"br0\">[</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/stats/html/runif.html\"><span class=\"kw7\">runif</span></a><span class=\"br0\">(</span>N<span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> .5<span class=\"br0\">]</span> <span class=\"sy0\">&lt;-</span> <span class=\"nu0\">1</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/summary.html\"><span class=\"kw2\">summary</span></a><span class=\"br0\">(</span>random_switch <span class=\"sy0\">==</span> true_answers<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">## To go with the exact parameters of the Rosetta challenge, complicating matters....</span><br/><span class=\"co1\">##  Note that the player may initially choose any of the three doors (not just Door 1),</span><br/><span class=\"co1\">##     that the host opens a different door revealing a goat (not necessarily Door 3), and </span><br/><span class=\"co1\">##     that he gives the player a second choice between the two remaining unopened doors. </span><br/>\u00a0<br/>N <span class=\"sy0\">&lt;-</span> <span class=\"nu0\">10000</span>  <span class=\"co1\">#trials</span><br/>true_answers <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/sample.html\"><span class=\"kw2\">sample</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">3</span>, N, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/replace.html\"><span class=\"kw2\">replace</span></a><span class=\"sy0\">=</span>TRUE<span class=\"br0\">)</span><br/>user_choice <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/sample.html\"><span class=\"kw2\">sample</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">3</span>, N, <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/replace.html\"><span class=\"kw2\">replace</span></a><span class=\"sy0\">=</span>TRUE<span class=\"br0\">)</span><br/><span class=\"co1\">## the host_choice is more complicated</span><br/>host_chooser <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/function.html\"><span class=\"kw2\">function</span></a><span class=\"br0\">(</span>user_prize<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># this could be cleaner</span><br/>    bad_choices <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/unique.html\"><span class=\"kw2\">unique</span></a><span class=\"br0\">(</span>user_prize<span class=\"br0\">)</span><br/>    <span class=\"co1\"># in R, the x[-vector] form implies, choose the indices in x not in vector</span><br/>    choices <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/c.html\"><span class=\"kw2\">c</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"sy0\">-</span>bad_choices<span class=\"br0\">]</span><br/>    <span class=\"co1\"># if the first arg to sample is an int, it treats it as the number of choices</span><br/>    <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/if.html\"><span class=\"kw2\">if</span></a> <span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>choices<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>  <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/return.html\"><span class=\"kw2\">return</span></a><span class=\"br0\">(</span>choices<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span> <span class=\"br0\">{</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/return.html\"><span class=\"kw2\">return</span></a><span class=\"br0\">(</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/sample.html\"><span class=\"kw2\">sample</span></a><span class=\"br0\">(</span>choices,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>host_choice <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/apply.html\"><span class=\"kw2\">apply</span></a><span class=\"br0\">(</span> X<span class=\"sy0\">=</span><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/cbind.html\"><span class=\"kw2\">cbind</span></a><span class=\"br0\">(</span>true_answers,user_choice<span class=\"br0\">)</span>, FUN<span class=\"sy0\">=</span>host_chooser,MARGIN<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>not_door <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/function.html\"><span class=\"kw2\">function</span></a><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">{</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/return.html\"><span class=\"kw2\">return</span></a><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"sy0\">-</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">}</span>  <span class=\"co1\"># we could also define this</span><br/>                                                <span class=\"co1\"># directly at the FUN argument following</span><br/>other_door  <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/apply.html\"><span class=\"kw2\">apply</span></a><span class=\"br0\">(</span> X <span class=\"sy0\">=</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/cbind.html\"><span class=\"kw2\">cbind</span></a><span class=\"br0\">(</span>user_choice,host_choice<span class=\"br0\">)</span>, FUN<span class=\"sy0\">=</span>not_door, MARGIN<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">## if always switch</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/summary.html\"><span class=\"kw2\">summary</span></a><span class=\"br0\">(</span> other_door <span class=\"sy0\">==</span> true_answers <span class=\"br0\">)</span><br/><span class=\"co1\">## if we never switch</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/summary.html\"><span class=\"kw2\">summary</span></a><span class=\"br0\">(</span> true_answers <span class=\"sy0\">==</span> user_choice<span class=\"br0\">)</span><br/><span class=\"co1\">## if we randomly switch</span><br/>random_switch <span class=\"sy0\">&lt;-</span> user_choice<br/>change <span class=\"sy0\">&lt;-</span> <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/stats/html/runif.html\"><span class=\"kw7\">runif</span></a><span class=\"br0\">(</span>N<span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> .5<br/>random_switch<span class=\"br0\">[</span>change<span class=\"br0\">]</span> <span class=\"sy0\">&lt;-</span> other_door<span class=\"br0\">[</span>change<span class=\"br0\">]</span><br/><a href=\"http://stat.ethz.ch/R-manual/R-devel/library/base/html/summary.html\"><span class=\"kw2\">summary</span></a><span class=\"br0\">(</span>random_switch <span class=\"sy0\">==</span> true_answers<span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 38, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(define (get-last-door a b)\u00a0; assumes a\u00a0!= b<br/>  (vector-ref '#(- 2 1<br/>                 2 - 0<br/>                 1 0 -)<br/>              (+ a (* 3 b))))<br/>\u00a0<br/>(define (run-game strategy)<br/>  (define car-door (random 3))<br/>  (define first-choice (random 3))<br/>  (define revealed-goat<br/>    (if (= car-door first-choice)<br/>      (let ([r (random 2)]) (if (&lt;= car-door r) (add1 r) r))\u00a0; random<br/>      (get-last-door car-door first-choice)))\u00a0; reveal goat<br/>  (define final-choice (strategy first-choice revealed-goat))<br/>  (define win? (eq? final-choice car-door))<br/> \u00a0;; (printf \"car: ~s\\nfirst: ~s\\nreveal: ~s\\nfinal: ~s\\n  =&gt; ~s\\n\\n\"<br/> \u00a0;;         car-door first-choice revealed-goat final-choice<br/> \u00a0;;         (if win? 'win 'lose))<br/>  win?)<br/>\u00a0<br/>(define (keep-choice first-choice revealed-goat)<br/>  first-choice)<br/>\u00a0<br/>(define (change-choice first-choice revealed-goat)<br/>  (get-last-door first-choice revealed-goat))<br/>\u00a0<br/>(define (test-strategy strategy)<br/>  (define N 10000000)<br/>  (define wins (for/sum ([i (in-range N)]) (if (run-game strategy) 1 0)))<br/>  (printf \"~a: ~a%\\n\"<br/>          (object-name strategy)<br/>          (exact-&gt;inexact (/ wins N 1/100))))<br/>\u00a0<br/>(for-each test-strategy (list keep-choice change-choice))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 31, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* REXX ***************************************************************<br/>* 30.08.2013 Walter Pachl derived from Java<br/>**********************************************************************/</span><br/><span class=\"kw1\">Call</span> <span class=\"kw6\">time</span> <span class=\"st0\">'R'</span><br/>switchWins = <span class=\"nu0\">0</span>;<br/>stayWins = <span class=\"nu0\">0</span><br/><span class=\"kw1\">Do</span> plays = <span class=\"nu0\">1</span> <span class=\"kw2\">To</span> <span class=\"nu0\">1000000</span><br/>  doors<span class=\"sy0\">.</span>=<span class=\"nu0\">0</span><br/>  r=r3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  doors<span class=\"sy0\">.</span>r=<span class=\"nu0\">1</span><br/>  choice = r3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Do</span> <span class=\"kw2\">Until</span> shown<span class=\"sy0\">&lt;&gt;</span>choice  <span class=\"sy0\">&amp;</span> doors<span class=\"sy0\">.</span>shown=<span class=\"nu0\">0</span><br/>    shown  = r3<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">If</span> doors<span class=\"sy0\">.</span>choice=<span class=\"nu0\">1</span> <span class=\"kw3\">Then</span><br/>    stayWins=stayWins+<span class=\"nu0\">1</span><br/>  <span class=\"kw3\">Else</span><br/>    switchWins=switchWins+<span class=\"nu0\">1</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">\"Switching wins \"</span> switchWins <span class=\"st0\">\" times.\"</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">\"Staying wins   \"</span> stayWins   <span class=\"st0\">\" times.\"</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'REXX:'</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'E'</span><span class=\"br0\">)</span> <span class=\"st0\">'seconds'</span><br/><span class=\"kw1\">Call</span> <span class=\"kw6\">time</span> <span class=\"st0\">'R'</span><br/><span class=\"st0\">'ziegen'</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'PL/I:'</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'E'</span><span class=\"br0\">)</span> <span class=\"st0\">'seconds'</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">' '</span><br/><span class=\"kw1\">Call</span> <span class=\"kw6\">time</span> <span class=\"st0\">'R'</span><br/><span class=\"st0\">'java ziegen'</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'NetRexx:'</span> <span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'E'</span><span class=\"br0\">)</span> <span class=\"st0\">'seconds'</span>   <br/><span class=\"kw1\">Exit</span><br/>r3: <span class=\"kw1\">Return</span> <span class=\"kw6\">random</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>+<span class=\"nu0\">1</span></pre>"}, {"lang": "Ring", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>total = 10000<br/>swapper = 0<br/>sticker = 0<br/>revealdoor = 0<br/>for trial = 1 to total<br/>    prizedoor = random(3) + 1 <br/>    guessdoor = random(3) + 1<br/>    if prizedoor = guessdoor<br/>       revealdoor = random(2) + 1<br/>       if prizedoor = 1 revealdoor += 1 ok<br/>       if (prizedoor = 2 and revealdoor = 2) revealdoor = 3 ok<br/>    else<br/>       revealdoor = (prizedoor ^ guessdoor)<br/>    ok<br/>    stickdoor = guessdoor <br/>    swapdoor = (guessdoor ^ revealdoor)<br/>    if stickdoor = prizedoor sticker += 1 ok<br/>    if swapdoor = prizedoor swapper += 1 ok<br/>next <br/>see \"after a total of \" + total + \" trials,\" + nl<br/>see \"the 'sticker' won \" + sticker + \" times (\" + floor(sticker/total*100) + \"%)\" + nl<br/>see \"the 'swapper' won \" + swapper + \" times (\" + floor(swapper/total*100) + \"%)\" + nl<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 27, "block": "<pre class=\"ruby highlighted_source\">n = <span class=\"nu0\">10</span>_000                  <span class=\"co1\">#number of times to play</span><br/>\u00a0<br/>stay = switch = <span class=\"nu0\">0</span>           <span class=\"co1\">#sum of each strategy's wins</span><br/>\u00a0<br/>n.<span class=\"me1\">times</span> <span class=\"kw1\">do</span>                  <span class=\"co1\">#play the game n times</span><br/>\u00a0<br/>  <span class=\"co1\">#the doors reveal 2 goats and a car</span><br/>  doors = <span class=\"br0\">[</span> <span class=\"re3\">:goat</span>, <span class=\"re3\">:goat</span>, <span class=\"re3\">:car</span> <span class=\"br0\">]</span>.<span class=\"me1\">shuffle</span><br/>\u00a0<br/>  <span class=\"co1\">#random guess</span><br/>  guess = <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\">#random door shown, but it is neither the guess nor the car</span><br/>  <span class=\"kw1\">begin</span> shown = <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">end</span> <span class=\"kw1\">while</span> shown == guess <span class=\"sy0\">||</span> doors<span class=\"br0\">[</span>shown<span class=\"br0\">]</span> == <span class=\"re3\">:car</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> doors<span class=\"br0\">[</span>guess<span class=\"br0\">]</span> == <span class=\"re3\">:car</span><br/>    <span class=\"co1\">#staying with the initial guess wins if the initial guess is the car</span><br/>    stay <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"co1\">#switching guesses wins if the unshown door is the car</span><br/>    switch <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"Staying wins\u00a0%.2f%% of the time.\"</span>   <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> stay   <span class=\"sy0\">/</span> n<span class=\"br0\">)</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"Switching wins\u00a0%.2f%% of the time.\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> switch <span class=\"sy0\">/</span> n<span class=\"br0\">)</span></pre>"}, {"lang": "Run BASIC", "loc": 22, "block": "<pre class=\"text highlighted_source\">' adapted from BASIC solution<br/>\u00a0<br/>input \"Number of tries;\";tries  \t' gimme the number of iterations<br/>FOR plays\t= 1 TO tries<br/>     winner\t= INT(RND(1) * 3) + 1<br/>     doors(winner) = 1\t\t\t'put a winner in a random door<br/>     choice\t= INT(RND(1) * 3) + 1\t'pick a door please<br/>[DO] shown\t= INT(RND(1) * 3) + 1<br/>' ------------------------------------------<br/>'  don't show the winner or the choice<br/>     if doors(shown) = 1 then goto [DO]<br/>     if shown = choice   then goto [DO]<br/>     if doors(choice) \t= 1 then<br/>        stayWins\t= stayWins + 1 \t\t' if you won by staying, count it<br/>        else<br/>        switchWins\t= switchWins + 1\t' could have switched to win<br/>     end if<br/>     doors(winner)\t= 0 \t\t\t'clear the doors for the next test<br/>NEXT<br/>PRINT \"    Result for \";tries;\" games.\"<br/>PRINT \"Switching wins \";switchWins; \" times.\"<br/>PRINT \"  Staying wins \";stayWins; \" times.\"</pre>"}, {"lang": "Rust", "loc": 26, "block": "<pre class=\"text highlighted_source\">extern crate rand;<br/>use rand::Rng;<br/>\u00a0<br/>#[derive(Clone, Copy, PartialEq)]<br/>enum Prize {Goat , Car}<br/>\u00a0<br/>const GAMES: usize = 3_000_000;<br/>fn main() {<br/>    let mut switch_wins = 0;<br/>    let mut rng = rand::thread_rng();<br/>\u00a0<br/>    for _ in 0..GAMES {<br/>        let mut doors = [Prize::Goat; 3];<br/>        *rng.choose_mut(&amp;mut doors).unwrap() = Prize::Car;<br/>\u00a0<br/>        // You only lose by switching if you pick the car the first time<br/>        if rng.choose(&amp;doors).unwrap()\u00a0!= &amp;Prize::Car {<br/>            switch_wins += 1;<br/>        }<br/>    }<br/>    println!(\"I played the game {total} times and won {wins} times ({percent}%).\", <br/>             total   = GAMES, <br/>             wins    = switch_wins, <br/>             percent = switch_wins as f64 / GAMES as f64 * 100.0<br/>    );<br/>}</pre>"}, {"lang": "Scala", "loc": 33, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> MontyHallSimulation <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> samples <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>args.<span class=\"me1\">size</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>args<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> matches <span class=\"st0\">\"<span class=\"es1\">\\\\</span>d+\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> args<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">toInt</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">1000</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> doors <span class=\"sy0\">=</span> Set<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> stayStrategyWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> switchStrategyWins <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <span class=\"nu0\">1</span> to samples foreach <span class=\"br0\">{</span> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> prizeDoor <span class=\"sy0\">=</span> Random shuffle doors head<span class=\"sy0\">;</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> choosenDoor <span class=\"sy0\">=</span> Random shuffle doors head<span class=\"sy0\">;</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> hostDoor <span class=\"sy0\">=</span> Random shuffle <span class=\"br0\">(</span>doors - choosenDoor - prizeDoor<span class=\"br0\">)</span> head<span class=\"sy0\">;</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> switchDoor <span class=\"sy0\">=</span> doors - choosenDoor - hostDoor head<span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"br0\">(</span>choosenDoor, switchDoor<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>`prizeDoor`, <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> stayStrategyWins +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span><span class=\"sy0\">_</span>, `prizeDoor`<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> switchStrategyWins +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> percent<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">=</span> n <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> / samples<br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> report <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"|%d simulations were ran.<br/>                    |Staying won\u00a0%d times (%d\u00a0%%)<br/>                    |Switching won\u00a0%d times (%d\u00a0%%)\"</span><span class=\"st0\">\"\"</span>.<span class=\"me1\">stripMargin</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span>report <br/>            format <span class=\"br0\">(</span>samples, <br/>                    stayStrategyWins, percent<span class=\"br0\">(</span>stayStrategyWins<span class=\"br0\">)</span>, <br/>                    switchStrategyWins, percent<span class=\"br0\">(</span>switchStrategyWins<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 70, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>from<span class=\"sy0\">-</span><span class=\"kw1\">list</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">list-ref</span> <span class=\"kw1\">list</span> <span class=\"br0\">(</span>random <span class=\"br0\">(</span><span class=\"kw1\">length</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>permutation <span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">null?</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>      '<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">car</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>from<span class=\"sy0\">-</span><span class=\"kw1\">list</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>permutation <span class=\"br0\">(</span>remove <span class=\"kw1\">car</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"kw1\">car</span> <span class=\"kw1\">cdr</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>configuration<span class=\"br0\">)</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>permutation '<span class=\"br0\">(</span>goat goat <span class=\"kw1\">car</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>door<span class=\"br0\">)</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>from<span class=\"sy0\">-</span><span class=\"kw1\">list</span> '<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>trial strategy<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>door<span class=\"sy0\">-</span>with<span class=\"sy0\">-</span>goat<span class=\"sy0\">-</span>other<span class=\"sy0\">-</span>than door strategy<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">0</span> door<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> <span class=\"br0\">(</span><span class=\"kw1\">list-ref</span> strategy <span class=\"nu0\">0</span><span class=\"br0\">)</span> 'goat<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">1</span> door<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> <span class=\"br0\">(</span><span class=\"kw1\">list-ref</span> strategy <span class=\"nu0\">1</span><span class=\"br0\">)</span> 'goat<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">2</span> door<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> <span class=\"br0\">(</span><span class=\"kw1\">list-ref</span> strategy <span class=\"nu0\">2</span><span class=\"br0\">)</span> 'goat<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let*</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>configuration <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>configuration<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>players<span class=\"sy0\">-</span>first<span class=\"sy0\">-</span>guess <span class=\"br0\">(</span>strategy `<span class=\"br0\">(</span>would<span class=\"sy0\">-</span>you<span class=\"sy0\">-</span>please<span class=\"sy0\">-</span>pick<span class=\"sy0\">-</span>a<span class=\"sy0\">-</span>door?<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>door<span class=\"sy0\">-</span>to<span class=\"sy0\">-</span>show<span class=\"sy0\">-</span>player <span class=\"br0\">(</span>door<span class=\"sy0\">-</span>with<span class=\"sy0\">-</span>goat<span class=\"sy0\">-</span>other<span class=\"sy0\">-</span>than players<span class=\"sy0\">-</span>first<span class=\"sy0\">-</span>guess<br/>                                                         configuration<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>players<span class=\"sy0\">-</span>final<span class=\"sy0\">-</span>guess <span class=\"br0\">(</span>strategy `<span class=\"br0\">(</span>there<span class=\"sy0\">-</span>is<span class=\"sy0\">-</span>a<span class=\"sy0\">-</span>goat<span class=\"sy0\">-</span>at<span class=\"sy0\">/</span>would<span class=\"sy0\">-</span>you<span class=\"sy0\">-</span>like<span class=\"sy0\">-</span>to<span class=\"sy0\">-</span>move?<br/>                                          ,players<span class=\"sy0\">-</span>first<span class=\"sy0\">-</span>guess<br/>                                          ,door<span class=\"sy0\">-</span>to<span class=\"sy0\">-</span>show<span class=\"sy0\">-</span>player<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> <span class=\"br0\">(</span><span class=\"kw1\">list-ref</span> configuration players<span class=\"sy0\">-</span>final<span class=\"sy0\">-</span>guess<span class=\"br0\">)</span> '<span class=\"kw1\">car</span><span class=\"br0\">)</span><br/>        'you<span class=\"sy0\">-</span>win<span class=\"sy0\">!</span><br/>        'you<span class=\"sy0\">-</span>lost<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>stay<span class=\"sy0\">-</span>strategy message<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">case</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> message<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>would<span class=\"sy0\">-</span>you<span class=\"sy0\">-</span>please<span class=\"sy0\">-</span>pick<span class=\"sy0\">-</span>a<span class=\"sy0\">-</span>door?<span class=\"br0\">)</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>door<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>there<span class=\"sy0\">-</span>is<span class=\"sy0\">-</span>a<span class=\"sy0\">-</span>goat<span class=\"sy0\">-</span>at<span class=\"sy0\">/</span>would<span class=\"sy0\">-</span>you<span class=\"sy0\">-</span>like<span class=\"sy0\">-</span>to<span class=\"sy0\">-</span>move?<span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>first<span class=\"sy0\">-</span>choice <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> message<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        first<span class=\"sy0\">-</span>choice<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>switch<span class=\"sy0\">-</span>strategy message<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">case</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> message<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>would<span class=\"sy0\">-</span>you<span class=\"sy0\">-</span>please<span class=\"sy0\">-</span>pick<span class=\"sy0\">-</span>a<span class=\"sy0\">-</span>door?<span class=\"br0\">)</span> <span class=\"br0\">(</span>random<span class=\"sy0\">-</span>door<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>there<span class=\"sy0\">-</span>is<span class=\"sy0\">-</span>a<span class=\"sy0\">-</span>goat<span class=\"sy0\">-</span>at<span class=\"sy0\">/</span>would<span class=\"sy0\">-</span>you<span class=\"sy0\">-</span>like<span class=\"sy0\">-</span>to<span class=\"sy0\">-</span>move?<span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>first<span class=\"sy0\">-</span>choice <span class=\"br0\">(</span><span class=\"kw1\">cadr</span> message<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span>shown<span class=\"sy0\">-</span>goat <span class=\"br0\">(</span><span class=\"kw1\">caddr</span> message<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">car</span> <span class=\"br0\">(</span>remove first<span class=\"sy0\">-</span>choice <span class=\"br0\">(</span>remove shown<span class=\"sy0\">-</span>goat '<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define-syntax</span> repeat<br/>  <span class=\"br0\">(</span><span class=\"kw1\">syntax-rules</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>repeat <span class=\"sy0\">&lt;</span>n<span class=\"sy0\">&gt;</span> <span class=\"sy0\">&lt;</span>body<span class=\"sy0\">&gt;</span> ...<span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span><span class=\"kw1\">let</span> loop <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>n<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> i<span class=\"br0\">)</span><br/>           '<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span>body<span class=\"sy0\">&gt;</span> ...<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span>loop <span class=\"br0\">(</span><span class=\"sy0\">-</span> i <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>count element <span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">null?</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>      <span class=\"nu0\">0</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">equal?</span> element <span class=\"br0\">(</span><span class=\"kw1\">car</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span>count element <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>count element <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"kw1\">list</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>prepare<span class=\"sy0\">-</span>result strategy results<span class=\"br0\">)</span><br/>  `<span class=\"br0\">(</span>,strategy won with probability<br/>              ,<span class=\"br0\">(</span>exact<span class=\"sy0\">-&gt;</span>inexact <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"br0\">(</span>count 'you<span class=\"sy0\">-</span>win<span class=\"sy0\">!</span> results<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> results<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>compare<span class=\"sy0\">-</span>strategies times<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">append</span><br/>   <span class=\"br0\">(</span>prepare<span class=\"sy0\">-</span>result 'stay<span class=\"sy0\">-</span>strategy <span class=\"br0\">(</span>repeat times <span class=\"br0\">(</span>trial stay<span class=\"sy0\">-</span>strategy<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   '<span class=\"br0\">(</span><span class=\"kw1\">and</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>prepare<span class=\"sy0\">-</span>result 'switch<span class=\"sy0\">-</span>strategy <span class=\"br0\">(</span>repeat times <span class=\"br0\">(</span>trial switch<span class=\"sy0\">-</span>strategy<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; &gt; (compare-strategies 1000000)</span><br/><span class=\"co1\">;; (stay-strategy won with probability 33.3638\u00a0%</span><br/><span class=\"co1\">;;  and switch-strategy won with probability 66.716\u00a0%)</span></pre>"}, {"lang": "Scilab", "loc": 38, "block": "<pre class=\"text highlighted_source\">//  How it works:<br/>//  MontyHall() is a function with argument switch:<br/>//  it will be called 100000 times with switch=%T,<br/>//  and another 100000 times with switch=%F<br/>\u00a0<br/>function win=MontyHall(switch)      //If switch==%T the player will switch<br/>    doors=zeros(1,3)                //All goats<br/>    car=grand(1,1,'uin',1,3)<br/>    a(car)=1                        //Place a car somewher<br/>    pick=grand(1,1,'uin',1,3)       //The player picks...<br/>    if pick==car then               //If the player picks right...<br/>        if switch==%T then          //...and switches he will be wrong<br/>            win=%F<br/>        else                        //...but if he doesn't, he will be right<br/>            win=%T<br/>        end<br/>    else                            //If the player picks a goat...<br/>        if switch==%T then          //...and switches: the other door with the goat shall be<br/>            win=%T                  //   opened: the player will switch to the car and win<br/>        else                        //...but if he doesn't, he will remain by his goat<br/>            win=%F<br/>        end<br/>    end<br/>endfunction<br/>\u00a0<br/>wins_switch=0<br/>wins_stay=0<br/>games=100000<br/>for i=1:games<br/>    if MontyHall(%T)==%T then<br/>        wins_switch=wins_switch+1<br/>    end<br/>    if MontyHall(%F)==%T then<br/>        wins_stay=wins_stay+1<br/>    end<br/>end<br/>disp(\"Switching, one wins\"+ascii(10)+string(wins_switch)+\" games out of \"+string(games))<br/>disp(\"Staying, one wins\"+ascii(10)+string(wins_stay)+\" games out of \"+string(games))</pre>"}, {"lang": "Seed7", "loc": 23, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var integer: switchWins is 0;<br/>    var integer: stayWins is 0;<br/>    var integer: winner is 0;<br/>    var integer: choice is 0;<br/>    var integer: shown is 0;<br/>    var integer: plays is 0;<br/>  begin<br/>    for plays range 1 to 10000 do<br/>      winner\u00a0:= rand(1, 3);<br/>      choice\u00a0:= rand(1, 3);<br/>      repeat<br/>        shown\u00a0:= rand(1, 3)<br/>      until shown &lt;&gt; winner and shown &lt;&gt; choice;<br/>      stayWins +:= ord(choice = winner);<br/>      switchWins +:= ord(6 - choice - shown = winner);<br/>    end for;<br/>    writeln(\"Switching wins \" &lt;&amp; switchWins &lt;&amp; \" times\");<br/>    writeln(\"Staying wins \" &lt;&amp; stayWins &lt;&amp; \" times\");<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 21, "block": "<pre class=\"ruby highlighted_source\">var n = <span class=\"nu0\">1000</span>                                  <span class=\"co1\"># number of times to play</span><br/>var switchWins = <span class=\"br0\">(</span>var stayWins = <span class=\"nu0\">0</span><span class=\"br0\">)</span>           <span class=\"co1\"># sum of each strategy's wins</span><br/>\u00a0<br/>n.<span class=\"me1\">times</span> <span class=\"br0\">{</span>                                     <span class=\"co1\"># play the game n times</span><br/>   var prize = pick<span class=\"br0\">(</span>^<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>   var chosen = pick<span class=\"br0\">(</span>^<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>\u00a0<br/>   var show;<br/>   <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>        show = pick<span class=\"br0\">(</span>^<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>show ~~ <span class=\"br0\">[</span>chosen, prize<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>   given<span class=\"br0\">(</span>chosen<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>     <span class=\"kw1\">when</span> <span class=\"br0\">(</span>prize<span class=\"br0\">)</span>                 <span class=\"br0\">{</span> stayWins   <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>     <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span> <span class=\"sy0\">-</span> show <span class=\"sy0\">-</span> prize<span class=\"br0\">]</span><span class=\"br0\">)</span>    <span class=\"br0\">{</span> switchWins <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>     default                      <span class=\"br0\">{</span> die <span class=\"st0\">\"~ error ~\"</span> <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"br0\">(</span><span class=\"st0\">\"Staying wins\u00a0%.2f%% of the time.\"</span>   <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> stayWins   <span class=\"sy0\">/</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>say <span class=\"br0\">(</span><span class=\"st0\">\"Switching wins\u00a0%.2f%% of the time.\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> switchWins <span class=\"sy0\">/</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "SPAD", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>montyHall(n) ==<br/>  wd:=[1+random(3) for j in 1..n]<br/>  fc:=[1+random(3) for j in 1..n]<br/>  st:=reduce(_+,[1 for j in 1..n | wd.j=fc.j])<br/>  p:=(st/n)::DoubleFloat<br/>  FORMAT(nil,\"stay: ~A, switch: ~A\",p,1-p)$Lisp <br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 10, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> stay <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span> change <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"kw1\">set</span> total <span class=\"nu0\">10000</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$total</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> == int<span class=\"br0\">(</span>rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">incr</span> stay<br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">incr</span> change<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"Estimate: $stay/$total wins for staying strategy\"</span><br/><span class=\"kw2\">puts</span> <span class=\"st0\">\"Estimate: $change/$total wins for changing strategy\"</span></pre>"}, {"lang": "Transact SQL", "loc": 43, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>---- BEGIN ------------<br/>create table MONTY_HALL(<br/>  NOE int,<br/>  CAR int,<br/>  ALTERNATIVE int,<br/>  ORIGIN int,<br/>  [KEEP] int,<br/>  [CHANGE] int,<br/>  [RANDOM] int<br/>  )<br/>\u00a0<br/>-- INIT <br/>truncate table MONTY_HALL<br/>\u00a0<br/>declare @N int  , @i int -- No of Experiments and their counter<br/>declare @rooms  int  ,  -- number of rooms<br/>        @origin int,  -- original choice<br/>\t\t@car int , -- room with car<br/>\t\t@alternative int -- alternative room<br/>\u00a0<br/>select @rooms = 3, @N  = 100000 , @i = 0 <br/>\u00a0<br/>-- EXPERIMENTS LOOP <br/>while  @i &lt; @N begin<br/>  select @car = FLOOR(rand()*@rooms)+1 , @origin = FLOOR(rand()*@rooms)+1<br/>  select @alternative = FLOOR(rand()*(@rooms-1))+1<br/>  select @alternative = case when @alternative &lt; @origin then @alternative else  @alternative + 1 end<br/>  select @alternative = case when @origin = @car then @alternative else @car end<br/>\u00a0<br/>  insert MONTY_HALL<br/>  select @i,@car,@alternative,@origin,@origin,@alternative,case when rand() &lt; 5e-1 then @origin else @alternative end<br/>\u00a0<br/>  select  @i = @i + 1<br/>end<br/>\u00a0<br/>-- RESULTS<br/>select  avg (case when [KEEP] = CAR then 1e0 else 0e0 end )*1e2 as [% OF WINS FOR KEEP],<br/>        avg (case when [CHANGE] = CAR then 1e0 else 0e0 end )*1e2 as [% OF WINS FOR CHANGE],<br/>        avg (case when [RANDOM] = CAR then 1e0 else 0e0 end )*1e2 as [% OF WINS FOR RANDOM]<br/>from MONTY_HALL<br/>---- END ------------<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 72, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/bash</span><br/><span class=\"co0\"># Simulates the \"monty hall\" probability paradox and shows results.</span><br/><span class=\"co0\"># http://en.wikipedia.org/wiki/Monty_Hall_problem</span><br/><span class=\"co0\"># (should rewrite this in C for faster calculating of huge number of rounds)</span><br/><span class=\"co0\"># (Hacked up by \u00c9ric Tremblay, 07.dec.2010)</span><br/>\u00a0<br/><span class=\"re2\">num_rounds</span>=<span class=\"nu0\">10</span> <span class=\"co0\">#default number of rounds</span><br/><span class=\"re2\">num_doors</span>=<span class=\"nu0\">3</span> <span class=\"co0\"># default number of doors</span><br/><span class=\"br0\">[</span> <span class=\"st0\">\"$1\"</span> = <span class=\"st0\">\"\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">||</span> <span class=\"re2\">num_rounds</span>=$<span class=\"br0\">[</span><span class=\"re4\">$1</span>+<span class=\"nu0\">0</span><span class=\"br0\">]</span><br/><span class=\"br0\">[</span> <span class=\"st0\">\"$2\"</span> = <span class=\"st0\">\"\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">||</span> <span class=\"re2\">num_doors</span>=$<span class=\"br0\">[</span><span class=\"re4\">$2</span>+<span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"re2\">nbase</span>=<span class=\"nu0\">1</span> <span class=\"co0\"># or 0 if we want to see door numbers zero-based</span><br/><span class=\"re2\">num_win</span>=<span class=\"nu0\">0</span>; <span class=\"re2\">num_lose</span>=<span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw3\">echo</span> <span class=\"st0\">\"Playing <span class=\"es2\">$num_rounds</span> times, with <span class=\"es2\">$num_doors</span> doors.\"</span><br/><span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$num_doors</span>\"</span> <span class=\"re5\">-lt</span> <span class=\"nu0\">3</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">{</span> <br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"Hey, there has to be at least 3 doors!!\"</span><br/>  <span class=\"kw3\">exit</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/><span class=\"kw3\">echo</span><br/>\u00a0<br/><span class=\"kw1\">function</span> one_round<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"re2\">winning_door</span>=$<span class=\"br0\">[</span><span class=\"re1\">$RANDOM</span> <span class=\"sy0\">%</span> <span class=\"re1\">$num_doors</span> <span class=\"br0\">]</span><br/>  <span class=\"re2\">player_picks_door</span>=$<span class=\"br0\">[</span><span class=\"re1\">$RANDOM</span> <span class=\"sy0\">%</span> <span class=\"re1\">$num_doors</span> <span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"co0\"># Host leaves this door AND the player's first choice closed, opens all others</span><br/>  <span class=\"co0\"># (this WILL loop forever if there is only 1 door)</span><br/>  <span class=\"re2\">host_skips_door</span>=<span class=\"re1\">$winning_door</span><br/>  <span class=\"kw1\">while</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$host_skips_door</span>\"</span> = <span class=\"st0\">\"<span class=\"es2\">$player_picks_door</span>\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">do</span> <br/>    <span class=\"co0\">#echo -n \"(Host looks at door $host_skips_door...) \"</span><br/>    <span class=\"re2\">host_skips_door</span>=$<span class=\"br0\">[</span><span class=\"re1\">$RANDOM</span> <span class=\"sy0\">%</span> <span class=\"re1\">$num_doors</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">done</span><br/>\u00a0<br/>  <span class=\"co0\"># Output the result of this round</span><br/>  <span class=\"co0\">#echo \"Round $[$nbase+current_round]: \"</span><br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"Player chooses #$[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$player_picks_door</span>]. \"</span><br/>  <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$num_doors</span>\"</span> <span class=\"re5\">-ge</span> <span class=\"nu0\">10</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span>               <br/>    <span class=\"co0\"># listing too many door numbers (10 or more) will just clutter the output</span><br/>    <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"Host opens all except #$[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$host_skips_door</span>] and #$[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$player_picks_door</span>]. \"</span> \\<br/>  <span class=\"sy0\">||</span> <span class=\"br0\">{</span><br/>    <span class=\"co0\"># less than 10 doors, we list them one by one instead of \"all except\u00a0?? and\u00a0??\"</span><br/>    <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"Host opens\"</span><br/>    <span class=\"re2\">host_opens</span>=<span class=\"nu0\">0</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$host_opens</span>\"</span> <span class=\"re5\">-lt</span> <span class=\"st0\">\"<span class=\"es2\">$num_doors</span>\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">do</span><br/>      <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$host_opens</span>\"</span> <span class=\"sy0\">!</span>= <span class=\"st0\">\"<span class=\"es2\">$host_skips_door</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$host_opens</span>\"</span> <span class=\"sy0\">!</span>= <span class=\"st0\">\"<span class=\"es2\">$player_picks_door</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> \\<br/>      <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\" #$[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$host_opens</span>]\"</span><br/>      <span class=\"re2\">host_opens</span>=$<span class=\"br0\">[</span><span class=\"re1\">$host_opens</span>+<span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">done</span><br/>    <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\" \"</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"(prize is behind #$[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$winning_door</span>]) \"</span><br/>  <span class=\"kw3\">echo</span> <span class=\"re5\">-n</span> <span class=\"st0\">\"Switch from $[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$player_picks_door</span>] to $[<span class=\"es2\">$nbase</span>+<span class=\"es2\">$host_skips_door</span>]: \"</span><br/>  <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$winning_door</span>\"</span> = <span class=\"st0\">\"<span class=\"es2\">$host_skips_door</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">echo</span> <span class=\"st0\">\"WIN.\"</span><br/>    <span class=\"re2\">num_win</span>=$<span class=\"br0\">[</span>num_win+<span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">}</span> <span class=\"sy0\">||</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">echo</span> <span class=\"st0\">\"LOSE.\"</span><br/>    <span class=\"re2\">num_lose</span>=$<span class=\"br0\">[</span>num_lose+<span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span> <span class=\"co0\"># end of function one_round</span><br/>\u00a0<br/><span class=\"co0\"># ok, let's go</span><br/><span class=\"re2\">current_round</span>=<span class=\"nu0\">0</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">[</span> <span class=\"st0\">\"<span class=\"es2\">$num_rounds</span>\"</span> <span class=\"re5\">-gt</span> <span class=\"st0\">\"<span class=\"es2\">$current_round</span>\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">do</span><br/>  one_round<br/>  <span class=\"re2\">current_round</span>=$<span class=\"br0\">[</span><span class=\"re1\">$current_round</span>+<span class=\"nu0\">1</span><span class=\"br0\">]</span><br/><span class=\"kw1\">done</span><br/>\u00a0<br/><span class=\"kw3\">echo</span><br/><span class=\"kw3\">echo</span> <span class=\"st0\">\"Wins (switch to remaining door):  <span class=\"es2\">$num_win</span>\"</span><br/><span class=\"kw3\">echo</span> <span class=\"st0\">\"Losses (first guess was correct): <span class=\"es2\">$num_lose</span>\"</span><br/><span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "Ursala", "loc": 17, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import nat<br/>#import flo<br/>\u00a0<br/>rounds = 10000<br/>\u00a0<br/>car_locations   = arc{1,2,3}* iota rounds<br/>initial_choices = arc{1,2,3}* iota rounds<br/>\u00a0<br/>staying_wins   = length (filter ==) zip(car_locations,initial_choices)<br/>switching_wins = length (filter ~=) zip(car_locations,initial_choices)<br/>\u00a0<br/>format = printf/'%0.2f'+ (times\\100.+ div+ float~~)\\rounds<br/>\u00a0<br/>#show+<br/>\u00a0<br/>main =  ~&amp;plrTS/&lt;'stay:   ','switch: '&gt; format* &lt;staying_wins,switching_wins&gt;</pre>"}, {"lang": "Vedit macro language", "loc": 34, "block": "<pre class=\"vedit highlighted_source\">#<span class=\"nu0\">90</span> <span class=\"sy0\">=</span> Time_Tick\t\t\t<span class=\"co1\">// seed for random number generator</span><br/>#<span class=\"nu0\">91</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span>\t\t\t\t<span class=\"co1\">// random numbers in range 0 to 2</span><br/>#<span class=\"nu0\">1</span>  <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\t\t\t\t<span class=\"co1\">// wins for \"always stay\" strategy</span><br/>#<span class=\"nu0\">2</span>  <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\t\t\t\t<span class=\"co1\">// wins for \"always switch\" strategy</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span>#<span class=\"nu0\">10</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> #<span class=\"nu0\">10</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10000</span><span class=\"sy0\">;</span> #<span class=\"nu0\">10</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t<span class=\"co1\">// 10,000 iterations</span><br/>    Call<span class=\"br0\">(</span><span class=\"st0\">\"RANDOM\"</span><span class=\"br0\">)</span><br/>    #<span class=\"nu0\">3</span> <span class=\"sy0\">=</span> Return_Value\t\t<span class=\"co1\">// #3 = winning door</span><br/>    Call<span class=\"br0\">(</span><span class=\"st0\">\"RANDOM\"</span><span class=\"br0\">)</span><br/>    #<span class=\"nu0\">4</span> <span class=\"sy0\">=</span> Return_Value\t\t<span class=\"co1\">// #4 = players choice</span><br/>    <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>\tCall<span class=\"br0\">(</span><span class=\"st0\">\"RANDOM\"</span><span class=\"br0\">)</span><br/>\t#<span class=\"nu0\">5</span> <span class=\"sy0\">=</span> Return_Value\t<span class=\"co1\">// #5 = door to open</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>#<span class=\"nu0\">5</span> <span class=\"sy0\">==</span> #<span class=\"nu0\">3</span> <span class=\"sy0\">||</span> #<span class=\"nu0\">5</span> <span class=\"sy0\">==</span> #<span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>#<span class=\"nu0\">3</span> <span class=\"sy0\">==</span> #<span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t\t<span class=\"co1\">// original choice was correct</span><br/>\t#<span class=\"nu0\">1</span><span class=\"sy0\">++</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>#<span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span> <span class=\"sy0\">-</span> #<span class=\"nu0\">4</span> <span class=\"sy0\">-</span> #<span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\t<span class=\"co1\">// switched choice was correct</span><br/>\t#<span class=\"nu0\">2</span><span class=\"sy0\">++</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>Ins_Text<span class=\"br0\">(</span><span class=\"st0\">\"Staying wins:   \"</span><span class=\"br0\">)</span> Num_Ins<span class=\"br0\">(</span>#<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>Ins_Text<span class=\"br0\">(</span><span class=\"st0\">\"Switching wins: \"</span><span class=\"br0\">)</span> Num_Ins<span class=\"br0\">(</span>#<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------------------------------------</span><br/><span class=\"co1\">// Generate random numbers in range 0 &lt;= Return_Value &lt; #91</span><br/><span class=\"co1\">//  #90 = Seed    (0 to 0x7fffffff)</span><br/><span class=\"co1\">//  #91 = Scaling (0 to 0xffff)</span><br/>\u00a0<br/><span class=\"sy0\">:</span>RANDOM<span class=\"sy0\">:</span><br/>#<span class=\"nu0\">92</span> <span class=\"sy0\">=</span> 0x7fffffff <span class=\"sy0\">/</span> <span class=\"nu0\">48271</span><br/>#<span class=\"nu0\">93</span> <span class=\"sy0\">=</span> 0x7fffffff <span class=\"sy0\">%</span> <span class=\"nu0\">48271</span><br/>#<span class=\"nu0\">90</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">48271</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>#<span class=\"nu0\">90</span> <span class=\"sy0\">%</span> #<span class=\"nu0\">92</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> #<span class=\"nu0\">93</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>#<span class=\"nu0\">90</span> <span class=\"sy0\">/</span> #<span class=\"nu0\">92</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> 0x7fffffff<br/><span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>#<span class=\"nu0\">90</span> <span class=\"sy0\">&amp;</span> 0xffff<span class=\"br0\">)</span> <span class=\"sy0\">*</span> #<span class=\"nu0\">91</span> <span class=\"sy0\">/</span> 0x10000<span class=\"br0\">)</span></pre>"}, {"lang": "X++", "loc": 34, "block": "<pre class=\"text highlighted_source\">//Evidence of the Monty Hall solution in Dynamics AX (by Wessel du Plooy - HiGH Software).<br/>\u00a0<br/>    int changeWins    = 0;<br/>    int noChangeWins  = 0;<br/>    int attempts;<br/>    int picked;<br/>    int reveal;<br/>    int switchdoor;<br/>    int doors[];<br/>\u00a0<br/>    for (attempts = 0; attempts &lt; 32768; attempts++)<br/>    {<br/>        doors[1] = 0;                                           //0 is a goat, 1 is a car<br/>        doors[2] = 0;<br/>        doors[3] = 0;<br/>        doors[(xGlobal::randomPositiveInt32() mod 3) + 1] = 1;  //put a winner in a random door<br/>        picked = (xGlobal::randomPositiveInt32() mod 3) + 1;    //pick a door, any door<br/>\u00a0<br/>        do<br/>        {<br/>            reveal = (xGlobal::randomPositiveInt32() mod 3) + 1;<br/>        }<br/>        while (doors[reveal] == 1 || reveal == picked);           //don't show the winner or the choice<br/>\u00a0<br/>        if (doors[picked] == 1)<br/>            noChangeWins++;<br/>        else<br/>            changeWins++;<br/>    }<br/>\u00a0<br/>    print strFmt(\"Switching wins\u00a0%1 times.\", changeWins);<br/>    print strFmt(\"Staying   wins\u00a0%1 times.\", noChangeWins);<br/>    pause;<br/>\u00a0</pre>"}, {"lang": "XPL0", "loc": 31, "block": "<pre class=\"text highlighted_source\">def Games = 10000;              \\number of games simulated<br/>int Game, Wins;<br/>include c:\\cxpl\\codes;<br/>\u00a0<br/>proc Play(Switch);              \\Play one game<br/>int Switch;<br/>int Car, Player, Player0, Monty;<br/>[Car:= Ran(3);                  \\randomly place car behind a door<br/>Player0:= Ran(3);               \\player randomly chooses a door<br/>repeat  Monty:= Ran(3);         \\Monty opens door revealing a goat<br/>until   Monty # Car and Monty # Player0;<br/>if Switch then                  \\player switches to remaining door<br/>        repeat  Player:= Ran(3);<br/>        until   Player # Player0 and Player # Monty<br/>else    Player:= Player0;       \\player sticks with original door<br/>if Player = Car then Wins:= Wins+1;<br/>];<br/>\u00a0<br/>[Format(2,1);<br/>Text(0, \"Not switching doors wins car in \");<br/>Wins:= 0;<br/>for Game:= 0 to Games-1 do Play(false);<br/>RlOut(0, float(Wins)/float(Games)*100.0);<br/>Text(0, \"% of games.^M^J\");<br/>\u00a0<br/>Text(0, \"But switching doors wins car in \");<br/>Wins:= 0;<br/>for Game:= 0 to Games-1 do Play(true);<br/>RlOut(0, float(Wins)/float(Games)*100.0);<br/>Text(0, \"% of games.^M^J\");<br/>]</pre>"}, {"lang": "zkl", "loc": 17, "block": "<pre class=\"text highlighted_source\">const games=0d100_000;<br/>\u00a0<br/>reg switcherWins=0, keeperWins=0, shown=0;<br/>do(games){<br/>   doors\u00a0:= L(0,0,0);<br/>   doors[(0).random(3)] = 1; // Set which one has the car<br/>   choice\u00a0:= (0).random(3);  // Choose a door<br/>   while(1){ shown = (0).random(3); <br/>      if (not (shown == choice or doors[shown] == 1)) break; }<br/>   switcherWins += doors[3 - choice - shown];<br/>   keeperWins   += doors[choice];<br/>}<br/>\u00a0<br/>\"Switcher Wins:\u00a0%,d (%3.2f%%)\".fmt(<br/>   switcherWins, switcherWins.toFloat() / games * 100).println();<br/>\"Keeper Wins:\u00a0%,d (%3.2f%%)\".fmt(<br/>   keeperWins, keeperWins.toFloat() / games * 100).println();</pre>"}]}