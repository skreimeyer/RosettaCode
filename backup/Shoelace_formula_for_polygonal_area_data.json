{"task": "Shoelace_formula_for_polygonal_area", "blocks": [{"lang": "ALGOL 68", "loc": 30, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw2\">BEGIN</span><br/>    <span class=\"coMULTI\"># returns the area of the polygon defined by the points p using the Shoelace formula #</span><br/>    <span class=\"kw4\">OP</span>  AREA <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"sy1\">,</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> p <span class=\"br0\">)</span><span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/>        <span class=\"kw2\">BEGIN</span><br/>            <span class=\"br0\">[</span><span class=\"sy1\">,</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> points <span class=\"sy1\">=</span> p<span class=\"br0\">[</span> <span class=\"kw7\">AT</span> 1<span class=\"sy1\">,</span> <span class=\"kw7\">AT</span> 1 <span class=\"br0\">]</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># normalise array bounds to start at 1 #</span><br/>            <span class=\"kw2\">IF</span> 2 <span class=\"kw8\">UPB</span> points <span class=\"sy1\">/=</span> 2 <span class=\"kw2\">THEN</span><br/>                <span class=\"coMULTI\"># the points do not have 2 coordinates #</span><br/>                <span class=\"sy1\">-</span>1<br/>            <span class=\"kw2\">ELSE</span><br/>                <span class=\"kw3\">REAL</span>   result <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>                <span class=\"kw3\">INT</span>    n       <span class=\"sy1\">=</span> 1 <span class=\"kw8\">UPB</span> points<span class=\"sy1\">;</span><br/>                <span class=\"kw2\">IF</span> n <span class=\"sy1\">&gt;</span> 1 <span class=\"kw2\">THEN</span><br/>                    <span class=\"coMULTI\"># there at least two points #</span><br/>                    <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> x   <span class=\"sy1\">=</span> points<span class=\"br0\">[</span> <span class=\"sy1\">:,</span> 1 <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>                    <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> y   <span class=\"sy1\">=</span> points<span class=\"br0\">[</span> <span class=\"sy1\">:,</span> 2 <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>                    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> 1 <span class=\"kw8\">UPB</span> points <span class=\"sy1\">-</span> 1 <span class=\"kw2\">DO</span><br/>                        result <span class=\"sy1\">+:=</span> x<span class=\"br0\">[</span> i     <span class=\"br0\">]</span> <span class=\"sy1\">*</span> y<span class=\"br0\">[</span> i <span class=\"sy1\">+</span> 1 <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>                        result <span class=\"sy1\">-:=</span> x<span class=\"br0\">[</span> i <span class=\"sy1\">+</span> 1 <span class=\"br0\">]</span> <span class=\"sy1\">*</span> y<span class=\"br0\">[</span> i     <span class=\"br0\">]</span><br/>                    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>                    result     <span class=\"sy1\">+:=</span> x<span class=\"br0\">[</span> n <span class=\"br0\">]</span> <span class=\"sy1\">*</span> y<span class=\"br0\">[</span> 1 <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>                    result     <span class=\"sy1\">-:=</span> x<span class=\"br0\">[</span> 1 <span class=\"br0\">]</span> <span class=\"sy1\">*</span> y<span class=\"br0\">[</span> n <span class=\"br0\">]</span><br/>                <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>                <span class=\"br0\">(</span> <span class=\"kw8\">ABS</span> result <span class=\"br0\">)</span> <span class=\"sy1\">/</span> 2<br/>            <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">END</span> <span class=\"coMULTI\"># AREA #</span> <span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\"># test case as per the task #</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span> AREA <span class=\"br0\">[</span><span class=\"sy1\">,</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"re1\">3.0</span><span class=\"sy1\">,</span> <span class=\"re1\">4.0</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"re1\">5.0</span><span class=\"sy1\">,</span> <span class=\"re1\">11.0</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"re1\">12.0</span><span class=\"sy1\">,</span> <span class=\"re1\">8.0</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"re1\">9.0</span><span class=\"sy1\">,</span> <span class=\"re1\">5.0</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"re1\">5.0</span><span class=\"sy1\">,</span> <span class=\"re1\">6.0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"sy1\">-</span>6<span class=\"sy1\">,</span> 2 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">END</span><br/>\u00a0</pre>"}, {"lang": "C", "loc": 49, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include&lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include&lt;stdio.h&gt;</span><br/><span class=\"co2\">#include&lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> x<span class=\"sy0\">,</span>y<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span>point<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">double</span> shoelace<span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> inputFile<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span>numPoints<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">double</span> leftSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span>rightSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tpoint<span class=\"sy0\">*</span> pointSet<span class=\"sy0\">;</span><br/>\tFILE<span class=\"sy0\">*</span> fp <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html\"><span class=\"kw3\">fopen</span></a><span class=\"br0\">(</span>inputFile<span class=\"sy0\">,</span><span class=\"st0\">\"r\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fscanf.html\"><span class=\"kw3\">fscanf</span></a><span class=\"br0\">(</span>fp<span class=\"sy0\">,</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,&amp;</span>numPoints<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tpointSet <span class=\"sy0\">=</span> <span class=\"br0\">(</span>point<span class=\"sy0\">*</span><span class=\"br0\">)</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span>numPoints <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>point<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>numPoints<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fscanf.html\"><span class=\"kw3\">fscanf</span></a><span class=\"br0\">(</span>fp<span class=\"sy0\">,</span><span class=\"st0\">\"%lf\u00a0%lf\"</span><span class=\"sy0\">,&amp;</span>pointSet<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">x</span><span class=\"sy0\">,&amp;</span>pointSet<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tpointSet<span class=\"br0\">[</span>numPoints<span class=\"br0\">]</span> <span class=\"sy0\">=</span> pointSet<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>numPoints<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\tleftSum <span class=\"sy0\">+=</span> pointSet<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">x</span><span class=\"sy0\">*</span>pointSet<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>\t\trightSum <span class=\"sy0\">+=</span> pointSet<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">x</span><span class=\"sy0\">*</span>pointSet<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>pointSet<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu16\">0.5</span><span class=\"sy0\">*</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fabs.html\"><span class=\"kw3\">fabs</span></a><span class=\"br0\">(</span>leftSum <span class=\"sy0\">-</span> rightSum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argC<span class=\"sy0\">,</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> argV<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>argC<span class=\"sy0\">==</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Usage\u00a0:\u00a0%s &lt;full path of polygon vertices file&gt;\"</span><span class=\"sy0\">,</span>argV<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">else</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"The polygon area is\u00a0%lf square units.\"</span><span class=\"sy0\">,</span>shoelace<span class=\"br0\">(</span>argV<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 30, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> ShoelaceFormula <span class=\"br0\">{</span><br/>    <span class=\"kw1\">using</span> <span class=\"co3\">Point </span><span class=\"sy0\">=</span> Tuple<span class=\"sy0\">&lt;</span><span class=\"kw4\">double</span>, <span class=\"kw4\">double</span><span class=\"sy0\">&gt;;</span><br/>\u00a0<br/>    <span class=\"kw4\">class</span> Program <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> ShoelaceArea<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span> v<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> v<span class=\"sy0\">.</span><span class=\"me1\">Count</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">double</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                a <span class=\"sy0\">+=</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item1</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item2</span> <span class=\"sy0\">-</span> v<span class=\"br0\">[</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item1</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item2</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">return</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Abs</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> v<span class=\"br0\">[</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item1</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item2</span> <span class=\"sy0\">-</span> v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item1</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">Item2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span> v <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span>,<br/>                <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">11</span><span class=\"br0\">)</span>,<br/>                <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">12</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span>,<br/>                <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">9</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span>,<br/>                <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span>,<br/>            <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">double</span> area <span class=\"sy0\">=</span> ShoelaceArea<span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Given a polygon with vertices [{0}],\"</span>, <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"kw1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span>, v<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"its area is {0}.\"</span>, area<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 30, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Point<span class=\"br0\">[</span><span class=\"br0\">]</span> pnts <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> ans <span class=\"sy0\">=</span> shoelace<span class=\"br0\">(</span>pnts<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"br0\">(</span>ans<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> Point <span class=\"br0\">{</span><br/>    <span class=\"kw4\">real</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">real</span> shoelace<span class=\"br0\">(</span>Point<span class=\"br0\">[</span><span class=\"br0\">]</span> pnts<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">real</span> leftSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> rightSum <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;</span>pnts.<span class=\"me1\">length</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> pnts.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/>        leftSum  <span class=\"sy0\">+=</span> pnts<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> pnts<span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>        rightSum <span class=\"sy0\">+=</span> pnts<span class=\"br0\">[</span>j<span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> pnts<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">math</span> <span class=\"sy0\">:</span> abs<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu16\">0.5</span> <span class=\"sy0\">*</span> abs<span class=\"br0\">(</span>leftSum <span class=\"sy0\">-</span> rightSum<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">unittest</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> ans <span class=\"sy0\">=</span> shoelace<span class=\"br0\">(</span>pnts<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>ans <span class=\"sy0\">==</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "F#", "loc": 4, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"co1\">// Shoelace formula for area of polygon. Nigel Galloway: April 11th., 2018</span><br/><span class=\"kw1\">let</span> fN<span class=\"br0\">(</span>n::g<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">abs</span><span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">pairwise</span><span class=\"br0\">(</span>n::<a class=\"__cf_email__\" data-cfemail=\"600720\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">|&gt;</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">fold</span><span class=\"br0\">(</span><span class=\"kw1\">fun</span> n <span class=\"br0\">(</span><span class=\"br0\">(</span>n\u03b1,g\u03b1<span class=\"br0\">)</span>,<span class=\"br0\">(</span>n\u03b2,g\u03b2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span>n<span class=\"sy0\">+</span><span class=\"br0\">(</span>n\u03b1<span class=\"sy0\">*</span>g\u03b2<span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"br0\">(</span>g\u03b1<span class=\"sy0\">*</span>n\u03b2<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">2.0</span><br/>printfn <span class=\"st0\">\"%f\"</span> <span class=\"br0\">(</span>fN <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">3.0</span>,<span class=\"nu0\">4.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">5.0</span>,<span class=\"nu0\">11.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">12.0</span>,<span class=\"nu0\">8.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">9.0</span>,<span class=\"nu0\">5.0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"nu0\">5.0</span>,<span class=\"nu0\">6.0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "Fortran", "loc": 50, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw3\">DOUBLE</span> <span class=\"kw4\">PRECISION</span> <span class=\"kw1\">FUNCTION</span> AREA<span class=\"br0\">(</span>N,P<span class=\"br0\">)</span>\t<span class=\"co1\">!Calculates the area enclosed by the polygon P.</span><br/><span class=\"co1\">C   Uses the mid-point rule for integration. Consider the line joining (x1,y1) to (x2,y2)</span><br/><span class=\"co1\">C The area under that line (down to the x-axis) is the y-span midpoint (y1 + y2)/2 times the width (x2 - x1)</span><br/><span class=\"co1\">C This is the trapezoidal rule for a single interval, and follows from simple geometry.</span><br/><span class=\"co1\">C Now consider a sequence of such points heading in the +x direction: each successive interval's area is positive.</span><br/><span class=\"co1\">C Follow with a sequence of points heading in the -x direction, back to the first point: their areas are all negative.</span><br/><span class=\"co1\">C The resulting sum is the area below the +x sequence and above the -x sequence: the area of the polygon.</span><br/><span class=\"co1\">C   The point sequence can wobble as it wishes and can meet the other side, but it must not cross itself</span><br/><span class=\"co1\">c as would be done in a figure 8 drawn with a crossover instead of a meeting.</span><br/><span class=\"co1\">C   A clockwise traversal (as for an island) gives a positive area; use anti-clockwise for a lake.</span><br/>       <span class=\"kw3\">INTEGER</span> N\t\t<span class=\"co1\">!The number of points.</span><br/>       <span class=\"kw3\">DOUBLE</span> <span class=\"kw3\">COMPLEX</span> P<span class=\"br0\">(</span>N<span class=\"br0\">)</span>\t<span class=\"co1\">!The points.</span><br/>       <span class=\"kw3\">DOUBLE</span> <span class=\"kw3\">COMPLEX</span> PP,PC\t<span class=\"co1\">!Point Previous and Point Current.</span><br/>       <span class=\"kw3\">DOUBLE</span> <span class=\"kw3\">COMPLEX</span> W\t\t<span class=\"co1\">!Polygon centre. Map coordinates usually have large offsets.</span><br/>       <span class=\"kw3\">DOUBLE</span> <span class=\"kw4\">PRECISION</span> A\t<span class=\"co1\">!The area accumulator.</span><br/>       <span class=\"kw3\">INTEGER</span> I\t\t<span class=\"co1\">!A stepper.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>N.<span class=\"me1\">LT</span>.3<span class=\"br0\">)</span> <span class=\"kw1\">STOP</span> <span class=\"st0\">\"Area: at least three points are needed!\"</span>\t<span class=\"co1\">!Good grief.</span><br/>        W <span class=\"sy0\">=</span> <span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> P<span class=\"br0\">(</span>N<span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> P<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>N<span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">3</span>\t<span class=\"co1\">!An initial working average.</span><br/>        W <span class=\"sy0\">=</span> SUM<span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>N<span class=\"br0\">)</span> <span class=\"sy0\">-</span> W<span class=\"br0\">)</span><span class=\"sy0\">/</span>N <span class=\"sy0\">+</span> W\t<span class=\"co1\">!A good working average is the average itself.</span><br/>        A <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\t\t\t<span class=\"co1\">!The area enclosed by the point sequence.</span><br/>        PC <span class=\"sy0\">=</span> P<span class=\"br0\">(</span>N<span class=\"br0\">)</span> <span class=\"sy0\">-</span> W\t\t<span class=\"co1\">!The last point is implicitly joined to the first.</span><br/>        <span class=\"kw1\">DO</span> I <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>,N\t\t<span class=\"co1\">!Step through the positions.</span><br/>          PP <span class=\"sy0\">=</span> PC\t\t\t<span class=\"co1\">!Previous position.</span><br/>          PC <span class=\"sy0\">=</span> P<span class=\"br0\">(</span>I<span class=\"br0\">)</span> <span class=\"sy0\">-</span> W\t\t\t<span class=\"co1\">!Current position.</span><br/>          A <span class=\"sy0\">=</span> <span class=\"br0\">(</span>DIMAG<span class=\"br0\">(</span>PC<span class=\"br0\">)</span> <span class=\"sy0\">+</span> DIMAG<span class=\"br0\">(</span>PP<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"kw4\">DBLE</span><span class=\"br0\">(</span>PC<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"kw4\">DBLE</span><span class=\"br0\">(</span>PP<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> A\t<span class=\"co1\">!Area integral component.</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span>\t\t\t<span class=\"co1\">!On to the next position.</span><br/>        AREA <span class=\"sy0\">=</span> A<span class=\"sy0\">/</span><span class=\"nu0\">2</span>\t\t<span class=\"co1\">!Divide by two once.</span><br/>      <span class=\"kw1\">END</span> <span class=\"kw1\">FUNCTION</span> AREA\t\t<span class=\"co1\">!The units are those of the points.</span><br/>\u00a0<br/>      <span class=\"kw3\">DOUBLE</span> <span class=\"kw4\">PRECISION</span> <span class=\"kw1\">FUNCTION</span> AREASL<span class=\"br0\">(</span>N,P<span class=\"br0\">)</span>\t<span class=\"co1\">!Area enclosed by polygon P, by the \"shoelace\" method.</span><br/>       <span class=\"kw3\">INTEGER</span> N\t\t<span class=\"co1\">!The number of points.</span><br/>       <span class=\"kw3\">DOUBLE</span> <span class=\"kw3\">COMPLEX</span> P<span class=\"br0\">(</span>N<span class=\"br0\">)</span>\t<span class=\"co1\">!The points.</span><br/>       <span class=\"kw3\">DOUBLE</span> <span class=\"kw4\">PRECISION</span> A\t<span class=\"co1\">!A scratchpad.</span><br/>        A <span class=\"sy0\">=</span> SUM<span class=\"br0\">(</span><span class=\"kw4\">DBLE</span><span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>DIMAG<span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">:</span>N<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw4\">DBLE</span><span class=\"br0\">(</span>P<span class=\"br0\">(</span>N<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>DIMAG<span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>     <span class=\"nu0\">1</span>    <span class=\"sy0\">-</span> SUM<span class=\"br0\">(</span><span class=\"kw4\">DBLE</span><span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">:</span>N<span class=\"br0\">)</span><span class=\"sy0\">*</span>DIMAG<span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>N <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"kw4\">DBLE</span><span class=\"br0\">(</span>P<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>DIMAG<span class=\"br0\">(</span>P<span class=\"br0\">(</span>N<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        AREASL <span class=\"sy0\">=</span> A<span class=\"sy0\">/</span><span class=\"nu0\">2</span>\t\t<span class=\"co1\">!The midpoint formula requires a halving.</span><br/>      <span class=\"kw1\">END</span> <span class=\"kw1\">FUNCTION</span> AREASL\t<span class=\"co1\">!Negative for clockwise, positive for anti-clockwise.</span><br/>\u00a0<br/>      <span class=\"kw3\">INTEGER</span> ENUFF<br/>      <span class=\"kw3\">DOUBLE</span> <span class=\"kw4\">PRECISION</span> AREA,AREASL\t<span class=\"co1\">!The default types are not correct.</span><br/>      <span class=\"kw3\">DOUBLE</span> <span class=\"kw4\">PRECISION</span> A1,A2\t\t<span class=\"co1\">!Scratchpads, in case of a debugging WRITE within the functions.</span><br/>      <span class=\"kw3\">PARAMETER</span> <span class=\"br0\">(</span>ENUFF <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span>\t\t<span class=\"co1\">!The specification.</span><br/>      <span class=\"kw3\">DOUBLE</span> <span class=\"kw3\">COMPLEX</span> POINT<span class=\"br0\">(</span>ENUFF<span class=\"br0\">)</span>\t<span class=\"co1\">!Could use X and Y arrays instead.</span><br/>      <span class=\"kw3\">DATA</span> POINT<span class=\"sy0\">/</span><span class=\"br0\">(</span>3D0,4D0<span class=\"br0\">)</span>,<span class=\"br0\">(</span>5D0,11D0<span class=\"br0\">)</span>,<span class=\"br0\">(</span>12D0,8D0<span class=\"br0\">)</span>,<span class=\"br0\">(</span>9D0,5D0<span class=\"br0\">)</span>,<span class=\"br0\">(</span>5D0,6D0<span class=\"br0\">)</span><span class=\"sy0\">/</span>\t<span class=\"co1\">!\"D\" for double precision.</span><br/>\u00a0<br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> POINT<br/>      A1 <span class=\"sy0\">=</span> AREA<span class=\"br0\">(</span><span class=\"nu0\">5</span>,POINT<span class=\"br0\">)</span><br/>      A2 <span class=\"sy0\">=</span> AREASL<span class=\"br0\">(</span><span class=\"nu0\">5</span>,POINT<span class=\"br0\">)</span><br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"A=\"</span>,A1,A2<br/>      <span class=\"kw1\">END</span></pre>"}, {"lang": "FreeBASIC", "loc": 33, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 18-08-2017</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"kw1\">Type</span> _point_<br/>    <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> x, y<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Type</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> shoelace_formula<span class=\"br0\">(</span>p<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> _point_ <span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><br/>\u00a0<br/>    <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> i<br/>    <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> sum<br/>\u00a0<br/>    <span class=\"kw1\">For</span> i = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span> -<span class=\"nu0\">1</span><br/>        sum += p<span class=\"br0\">(</span>i   <span class=\"br0\">)</span>.<span class=\"me1\">x</span> * p<span class=\"br0\">(</span>i +<span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span><br/>        sum -= p<span class=\"br0\">(</span>i +<span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span> * p<span class=\"br0\">(</span>i   <span class=\"br0\">)</span>.<span class=\"me1\">y</span><br/>    <span class=\"kw1\">Next</span><br/>    sum += p<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">x</span> * p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span><br/>    sum -= p<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span> * p<span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">y</span><br/>\u00a0<br/>    <span class=\"kw1\">Return</span> Abs<span class=\"br0\">(</span>sum<span class=\"br0\">)</span> / <span class=\"nu0\">2</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"co1\">' ------=&lt; MAIN &gt;=------</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> _point_ p_array<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> ...<span class=\"br0\">)</span> = <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">11</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">12</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">9</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"The area of the polygon =\"</span>; shoelace_formula<span class=\"br0\">(</span>p_array<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "Go", "loc": 19, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw1\">type</span> point <span class=\"kw4\">struct</span><span class=\"sy1\">{</span> x<span class=\"sy1\">,</span> y <span class=\"kw4\">float64</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> shoelace<span class=\"sy1\">(</span>pts <span class=\"sy1\">[]</span>point<span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    sum <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><br/>    p0 <span class=\"sy2\">:=</span> pts<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>pts<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> p1 <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> pts <span class=\"sy1\">{</span><br/>        sum <span class=\"sy2\">+=</span> p0<span class=\"sy3\">.</span>y<span class=\"sy3\">*</span>p1<span class=\"sy3\">.</span>x <span class=\"sy3\">-</span> p0<span class=\"sy3\">.</span>x<span class=\"sy3\">*</span>p1<span class=\"sy3\">.</span>y<br/>        p0 <span class=\"sy2\">=</span> p1<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> sum <span class=\"sy3\">/</span> <span class=\"nu0\">2</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>shoelace<span class=\"sy1\">([]</span>point<span class=\"sy1\">{{</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">11</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"nu0\">8</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">9</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">},</span> <span class=\"sy1\">{</span><span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">6</span><span class=\"sy1\">}}))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 15, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">module</span> Main <span class=\"br0\">(</span>main<span class=\"br0\">)</span> <span class=\"kw1\">where</span><br/>\u00a0<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:foldl\"><span class=\"kw3\">foldl</span></a><span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"br0\">(</span>shoelace <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- Calculate the area of a polygon formed by the list of coordinates</span><br/><span class=\"co1\">-- Coordinates are of the form (x, y).</span><br/>shoelace <span class=\"sy0\">::</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Double\"><span class=\"kw4\">Double</span></a><br/>shoelace ps <span class=\"sy0\">=</span> <span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:abs\"><span class=\"kw3\">abs</span></a> <span class=\"br0\">(</span>leftSum <span class=\"sy0\">-</span> rightSum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">where</span><br/>        <span class=\"br0\">(</span>leftSum<span class=\"sy0\">,</span> rightSum<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:foldl\"><span class=\"kw3\">foldl</span></a> calcSums <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> interlaced<br/>        calcSums <span class=\"br0\">(</span>l<span class=\"sy0\">,</span> r<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>xi<span class=\"sy0\">,</span> yi<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>nxi<span class=\"sy0\">,</span> nyi<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>l <span class=\"sy0\">+</span> xi <span class=\"sy0\">*</span> nyi<span class=\"sy0\">,</span> r <span class=\"sy0\">+</span> nxi <span class=\"sy0\">*</span> yi<span class=\"br0\">)</span><br/>        interlaced <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> ps <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:cycle\"><span class=\"kw3\">cycle</span></a> ps<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">shoelace=:verb define<br/>  <span class=\"nu0\">0.5</span>*|+/<span class=\"sy0\">((</span>* <span class=\"nu0\">1</span>&amp;|.<span class=\"sy0\">)</span>/ - <span class=\"sy0\">(</span>* <span class=\"nu0\">_1</span>&amp;|.<span class=\"sy0\">)</span>/<span class=\"sy0\">)</span>|:<span class=\"kw2\">y</span><br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 39, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.List</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> ShoelaceFormula <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">class</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> x, y<span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a><span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">this</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">this</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> y<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        @Override<br/>        <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"(%d,\u00a0%d)\"</span>, x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> shoelaceArea<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span> v<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> v.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            a <span class=\"sy0\">+=</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>.<span class=\"me1\">y</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v.<span class=\"me1\">get</span><span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">y</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span> v <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Alist+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">List</span></a>.<span class=\"me1\">of</span><span class=\"br0\">(</span><br/>            <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a><span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span>,<br/>            <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a><span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">11</span><span class=\"br0\">)</span>,<br/>            <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a><span class=\"br0\">(</span><span class=\"nu0\">12</span>, <span class=\"nu0\">8</span><span class=\"br0\">)</span>,<br/>            <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a><span class=\"br0\">(</span><span class=\"nu0\">9</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span>,<br/>            <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Apoint+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Point</span></a><span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> area <span class=\"sy0\">=</span> shoelaceArea<span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Given a polygon with vertices\u00a0%s,%n\"</span>, v<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"its area is\u00a0%f,%n\"</span>, area<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 9, "block": "<pre class=\"text highlighted_source\">\"\"\"<br/>Assumes x,y points go around the polygon in one direction.<br/>\"\"\"<br/>shoelacearea(x, y) =<br/>    abs(sum(i * j for (i, j) in zip(x, append!(y[2:end], y[1]))) -<br/>        sum(i * j for (i, j) in zip(append!(x[2:end], x[1]), y))) / 2<br/>\u00a0<br/>x, y = [3, 5, 12, 9, 5], [4, 11, 8, 5, 6]<br/>@show x y shoelacearea(x, y)</pre>"}, {"lang": "Kotlin", "loc": 23, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Point<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x<span class=\"sy0\">:</span> Int, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"($x, $y)\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun shoelaceArea<span class=\"br0\">(</span>v<span class=\"sy0\">:</span> List<span class=\"sy0\">&lt;</span>Point<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> n <span class=\"sy0\">=</span> v.<span class=\"me1\">size</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> a <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until n - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <br/>        a +<span class=\"sy0\">=</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>i + <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">y</span> - v<span class=\"br0\">[</span>i + <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">y</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> Math.<span class=\"me1\">abs</span><span class=\"br0\">(</span>a + v<span class=\"br0\">[</span>n - <span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">y</span> - v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">x</span> <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>n -<span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">y</span><span class=\"br0\">)</span> / <span class=\"nu0\">2.0</span>  <br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> v <span class=\"sy0\">=</span> listOf<span class=\"br0\">(</span><br/>        Point<span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">11</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">12</span>, <span class=\"nu0\">8</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">9</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> area <span class=\"sy0\">=</span> shoelaceArea<span class=\"br0\">(</span>v<span class=\"br0\">)</span> <br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"Given a polygon with vertices at $v,\"</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"its area is $area\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 8, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> shoeArea<span class=\"br0\">(</span>ps<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> <span class=\"kw1\">function</span> det2<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> ps<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>ps<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">-</span>ps<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">*</span>ps<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> sum <span class=\"sy0\">=</span> <span class=\"sy0\">#</span>ps<span class=\"sy0\">&gt;</span><span class=\"nu0\">2</span> <span class=\"kw2\">and</span> det2<span class=\"br0\">(</span><span class=\"sy0\">#</span>ps<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">or</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">for</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,#</span>ps<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span> sum <span class=\"sy0\">=</span> sum <span class=\"sy0\">+</span> det2<span class=\"br0\">(</span>i<span class=\"sy0\">,</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw3\">math.abs</span><span class=\"br0\">(</span><span class=\"nu0\">0.5</span> <span class=\"sy0\">*</span> sum<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">Area[Polygon[{{3, 4}, {5, 11}, {12, 8}, {9, 5}, {5, 6}}]]</pre>"}, {"lang": "Modula-2", "loc": 56, "block": "<pre class=\"modula2 highlighted_source\"><span class=\"kw1\">MODULE</span> ShoelaceFormula;<br/><span class=\"kw1\">FROM</span> RealStr <span class=\"kw1\">IMPORT</span> RealToStr;<br/><span class=\"kw1\">FROM</span> FormatString <span class=\"kw1\">IMPORT</span> FormatString;<br/><span class=\"kw1\">FROM</span> Terminal <span class=\"kw1\">IMPORT</span> WriteString<span class=\"sy0\">,</span>WriteLn<span class=\"sy0\">,</span>ReadChar;<br/>\u00a0<br/><span class=\"kw1\">TYPE</span><br/>    Point <span class=\"sy0\">=</span> <span class=\"kw1\">RECORD</span><br/>        x<span class=\"sy0\">,</span>y <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> PointToString<span class=\"br0\">(</span>self <span class=\"sy0\">:</span> Point; <span class=\"kw1\">VAR</span> buf <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    FormatString<span class=\"br0\">(</span><span class=\"st0\">\"(%i,\u00a0%i)\"</span><span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> self.x<span class=\"sy0\">,</span> self.y<span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> PointToString;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> ShoelaceArea<span class=\"br0\">(</span>v <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> Point<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"kw4\">REAL</span>;<br/><span class=\"kw1\">VAR</span><br/>    a <span class=\"sy0\">:</span> <span class=\"kw4\">REAL</span>;<br/>    i<span class=\"sy0\">,</span>n <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    n <span class=\"sy0\">:=</span> <span class=\"kw3\">HIGH</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span>;<br/>    a <span class=\"sy0\">:=</span> <span class=\"nu0\">0.0</span>;<br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>        a <span class=\"sy0\">:=</span> a <span class=\"sy0\">+</span> <span class=\"kw3\">FLOAT</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.x <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.y <span class=\"sy0\">-</span> v<span class=\"br0\">[</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.x <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.y<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">RETURN</span> <span class=\"kw4\">ABS</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> <span class=\"kw3\">FLOAT</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>n<span class=\"br0\">]</span>.x <span class=\"sy0\">*</span> v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.y <span class=\"sy0\">-</span> v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.x <span class=\"sy0\">*</span> v<span class=\"br0\">[</span>n<span class=\"br0\">]</span>.y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span>;<br/><span class=\"kw1\">END</span> ShoelaceArea;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>    v <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> Point;<br/>    buf <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">63</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>    area <span class=\"sy0\">:</span> <span class=\"kw4\">REAL</span>;<br/>    i <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    v<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Point<span class=\"br0\">{</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">}</span>;<br/>    v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Point<span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">}</span>;<br/>    v<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Point<span class=\"br0\">{</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">}</span>;<br/>    v<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Point<span class=\"br0\">{</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span>;<br/>    v<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> Point<span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span>;<br/>    area <span class=\"sy0\">:=</span> ShoelaceArea<span class=\"br0\">(</span>v<span class=\"br0\">)</span>;<br/>\u00a0<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"Given a polygon with verticies \"</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">HIGH</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span> <span class=\"kw1\">DO</span><br/>        PointToString<span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> buf<span class=\"br0\">)</span>;<br/>        WriteString<span class=\"br0\">(</span>buf<span class=\"br0\">)</span>;<br/>        WriteString<span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    WriteLn;<br/>\u00a0<br/>    RealToStr<span class=\"br0\">(</span>area<span class=\"sy0\">,</span> buf<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span><span class=\"st0\">\"its area is \"</span><span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span>buf<span class=\"br0\">)</span>;<br/>    WriteLn;<br/>\u00a0<br/>    ReadChar;<br/><span class=\"kw1\">END</span> ShoelaceFormula.</pre>"}, {"lang": "Perl 6", "loc": 5, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> area<span class=\"sy0\">-</span>by<span class=\"sy0\">-</span>shoelace<span class=\"br0\">(</span><span class=\"re0\">@p</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">^</span><span class=\"re0\">@p</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"re0\">@p</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"re0\">@p</span><span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"re0\">$_</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"re0\">@p</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">@p</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"sy0\">;</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"re0\">@p</span><span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"re0\">$_</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span><span class=\"re0\">@p</span><span class=\"sy0\">;</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">sum</span><span class=\"sy0\">.</span><span class=\"kw3\">abs</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> area<span class=\"sy0\">-</span>by<span class=\"sy0\">-</span>shoelace<span class=\"br0\">(</span> <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Python", "loc": 10, "block": "<pre class=\"python highlighted_source\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">def</span> area_by_shoelace<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">\"Assumes x,y points go around the polygon in one direction\"</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>i * j <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>             y<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"br0\">]</span> + y<span class=\"br0\">[</span>:<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               -<span class=\"kw2\">sum</span><span class=\"br0\">(</span>i * j <span class=\"kw1\">for</span> i<span class=\"sy0\">,</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>x<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"br0\">]</span> + x<span class=\"br0\">[</span>:<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> y            <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> / <span class=\"nu0\">2</span><br/>\u00a0<br/><span class=\"sy0\">&gt;&gt;&gt;</span> points <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> x<span class=\"sy0\">,</span> y <span class=\"sy0\">=</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>*points<span class=\"br0\">)</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> area_by_shoelace<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/><span class=\"nu0\">30.0</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> </pre>"}, {"lang": "Racket", "loc": 14, "block": "<pre class=\"text highlighted_source\">#lang racket/base<br/>\u00a0<br/>(struct P (x y))<br/>\u00a0<br/>(define (area . Ps)<br/>  (define (A P-a P-b)<br/>    (+ (for/sum ((p_i Ps)<br/>                 (p_i+1 (in-sequences (cdr Ps)<br/>                                      (in-value (car Ps)))))<br/>         (* (P-a p_i) (P-b p_i+1)))))<br/>  (/ (abs (- (A P-x P-y) (A P-y P-x))) 2))<br/>\u00a0<br/>(module+ main<br/>  (area (P 3 4) (P 5 11) (P 12 8) (P 9 5) (P 5 6)))</pre>"}, {"lang": "REXX", "loc": 14, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program uses a  Shoelace  formula to calculate the area of an  N-sided  polygon. */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> pts                                    <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> pts=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> pts= <span class=\"st0\">'(3,4),(5,11),(12,8),(9,5),(5,6)'</span>  <span class=\"coMULTI\">/*Not specified?   Use default. */</span><br/>pts=<span class=\"kw6\">space</span><span class=\"br0\">(</span>pts, <span class=\"nu0\">0</span><span class=\"br0\">)</span>;       @=pts                          <span class=\"coMULTI\">/*elide extra blanks;  save pts.*/</span><br/>           <span class=\"kw1\">do</span> n=<span class=\"nu0\">1</span>  <span class=\"kw2\">until</span> @=<span class=\"st0\">''</span>                           <span class=\"coMULTI\">/*perform destructive parse on @*/</span><br/>           <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> @  <span class=\"st0\">'('</span>  x<span class=\"sy0\">.</span>n  <span class=\"st0\">\",\"</span>  y<span class=\"sy0\">.</span>n  <span class=\"st0\">')'</span>  <span class=\"st0\">\",\"</span>  @ <span class=\"coMULTI\">/*obtain  X  and  Y  co\u00f6rdinates*/</span><br/>           <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*n*/</span><br/>A=<span class=\"nu0\">0</span>                                                     <span class=\"coMULTI\">/*initialize the  area  to zero.*/</span><br/>           <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> n;  jp=j+<span class=\"nu0\">1</span>;  <span class=\"kw1\">if</span> jp<span class=\"sy0\">&gt;</span>n   <span class=\"kw3\">then</span> jp=<span class=\"nu0\">1</span> <span class=\"coMULTI\">/*adjust for  J  for overflow.  */</span><br/>                           jm=j-<span class=\"nu0\">1</span>;  <span class=\"kw1\">if</span> jm==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> jm=n <span class=\"coMULTI\">/*   \"    \"   \"   \"  underflow. */</span><br/>           A=A + x<span class=\"sy0\">.</span>j <span class=\"sy0\">*</span> <span class=\"br0\">(</span>y<span class=\"sy0\">.</span>jp - y<span class=\"sy0\">.</span>jm<span class=\"br0\">)</span>                    <span class=\"coMULTI\">/*compute a part of the area.   */</span><br/>           <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>A=<span class=\"kw6\">abs</span><span class=\"br0\">(</span>A<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>                                              <span class=\"coMULTI\">/*obtain half of the  \u2502 A \u2502  sum*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'polygon area of '</span> n <span class=\"st0\">\" points: \"</span> pts <span class=\"st0\">'  is \u2500\u2500\u2500\u25ba '</span> A <span class=\"coMULTI\">/*stick a fork in it, we're done*/</span></pre>"}, {"lang": "Ring", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Shoelace formula for polygonal area<br/>\u00a0<br/>p = [[3,4], [5,11], [12,8], [9,5], [5,6]] <br/>see \"The area of the polygon = \" + shoelace(p)<br/>\u00a0<br/>func shoelace(p)<br/>        sum = 0 <br/>        for i = 1 to len(p) -1<br/>             sum = sum + p[i][1] * p[i +1][2]<br/>             sum = sum - p[i +1][1] * p[i][2]<br/>        next<br/>        sum = sum + p[i][1] * p[1][2]<br/>        sum = sum - p[1][1] * p[i][2] <br/>        return fabs(sum) / 2<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 24, "block": "<pre class=\"ruby highlighted_source\">\u00a0<br/>Point = <span class=\"kw4\">Struct</span>.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"re3\">:x</span>,:y<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> shoelace<span class=\"br0\">(</span>other<span class=\"br0\">)</span><br/>    x <span class=\"sy0\">*</span> other.<span class=\"me1\">y</span> <span class=\"sy0\">-</span> y <span class=\"sy0\">*</span> other.<span class=\"me1\">x</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">class</span> Polygon<br/>\u00a0<br/>  <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span><span class=\"sy0\">*</span>coords<span class=\"br0\">)</span><br/>    <span class=\"re1\">@points</span> = coords.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>c<span class=\"sy0\">|</span> Point.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>c<span class=\"br0\">)</span> <span class=\"br0\">}</span> <br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> area<br/>    points = <span class=\"re1\">@points</span> <span class=\"sy0\">+</span> <span class=\"br0\">[</span>@points.<span class=\"me1\">first</span><span class=\"br0\">]</span><br/>    points.<span class=\"me1\">each_cons</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>p1,p2<span class=\"sy0\">|</span> p1.<span class=\"me1\">shoelace</span><span class=\"br0\">(</span>p2<span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">sum</span>.<span class=\"me1\">abs</span>.<span class=\"me1\">fdiv</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">puts</span> Polygon.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">5</span>,<span class=\"nu0\">11</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">12</span>,<span class=\"nu0\">8</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">9</span>,<span class=\"nu0\">5</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me1\">area</span>  <span class=\"co1\"># =&gt; 30.0</span><br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 28, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Point<span class=\"br0\">(</span> x<span class=\"sy0\">:</span>Int,y<span class=\"sy0\">:</span>Int <span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> toString <span class=\"sy0\">=</span> <span class=\"st0\">\"(\"</span> + x + <span class=\"st0\">\",\"</span> + y + <span class=\"st0\">\")\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Polygon<span class=\"br0\">(</span> pp<span class=\"sy0\">:</span>List<span class=\"br0\">[</span>Point<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  require<span class=\"br0\">(</span> pp.<span class=\"me1\">size</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span>, <span class=\"st0\">\"A Polygon must consist of more than two points\"</span> <span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> toString <span class=\"sy0\">=</span> <span class=\"st0\">\"Polygon(\"</span> + pp.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, <span class=\"st0\">\", \"</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> + <span class=\"st0\">\")\"</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> area <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"co1\">// Calculate using the Shoelace Formula</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xx <span class=\"sy0\">=</span> pp.<span class=\"me1\">map</span><span class=\"br0\">(</span> p <span class=\"sy0\">=&gt;</span> p.<span class=\"me1\">x</span> <span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> yy <span class=\"sy0\">=</span> pp.<span class=\"me1\">map</span><span class=\"br0\">(</span> p <span class=\"sy0\">=&gt;</span> p.<span class=\"me1\">y</span> <span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> overlace <span class=\"sy0\">=</span> xx zip yy.<span class=\"me1\">drop</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>++yy.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> underlace <span class=\"sy0\">=</span> yy zip xx.<span class=\"me1\">drop</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>++xx.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span>overlace.<span class=\"me1\">map</span><span class=\"br0\">(</span> t <span class=\"sy0\">=&gt;</span> t.<span class=\"sy0\">_</span>1 <span class=\"sy0\">*</span> t.<span class=\"sy0\">_</span>2 <span class=\"br0\">)</span>.<span class=\"me1\">sum</span> - underlace.<span class=\"me1\">map</span><span class=\"br0\">(</span> t <span class=\"sy0\">=&gt;</span> t.<span class=\"sy0\">_</span>1 <span class=\"sy0\">*</span> t.<span class=\"sy0\">_</span>2 <span class=\"br0\">)</span>.<span class=\"me1\">sum</span><span class=\"br0\">)</span>.<span class=\"me1\">abs</span> / <span class=\"nu0\">2.0</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// A little test...</span><br/><span class=\"br0\">{</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> Polygon<span class=\"br0\">(</span> List<span class=\"br0\">(</span> Point<span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">11</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">12</span>,<span class=\"nu0\">8</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">9</span>,<span class=\"nu0\">5</span><span class=\"br0\">)</span>, Point<span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/>assert<span class=\"br0\">(</span> p.<span class=\"me1\">area</span> <span class=\"sy0\">==</span> <span class=\"nu0\">30.0</span> <span class=\"br0\">)</span><br/>\u00a0<br/>println<span class=\"br0\">(</span> <span class=\"st0\">\"Area of \"</span> + p + <span class=\"st0\">\" = \"</span> + p.<span class=\"me1\">area</span> <span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 13, "block": "<pre class=\"ruby highlighted_source\">func area_by_shoelace <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"kw3\">p</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var x = <span class=\"kw3\">p</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span>_<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    var y = <span class=\"kw3\">p</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span>_<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>\u00a0<br/>    var s = <span class=\"br0\">(</span><br/>        <span class=\"br0\">(</span>x ~Z<span class=\"sy0\">*</span> y.<span class=\"me1\">rotate</span><span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">sum</span> <span class=\"sy0\">-</span><br/>        <span class=\"br0\">(</span>x ~Z<span class=\"sy0\">*</span> y.<span class=\"me1\">rotate</span><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">sum</span><br/>    <span class=\"br0\">)</span><br/>\u00a0<br/>    s.<span class=\"me1\">abs</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say area_by_shoelace<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">5</span>,<span class=\"nu0\">11</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">12</span>,<span class=\"nu0\">8</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">9</span>,<span class=\"nu0\">5</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "zkl", "loc": 6, "block": "<pre class=\"text highlighted_source\">fcn areaByShoelace(points){\t// ( (x,y),(x,y)...)<br/>   xs,ys:=Utils.Helpers.listUnzip(points); // (x,x,...), (y,y,,,)<br/>   ( xs.zipWith('*,ys[1,*]).sum(0) + xs[-1]*ys[0] - <br/>     xs[1,*].zipWith('*,ys).sum(0) - xs[0]*ys[-1] )<br/>   .abs().toFloat()/2;<br/>}</pre>"}]}