{"task": "Permutation_test", "blocks": [{"lang": "Ada", "loc": 62, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">with</span> Iterate_Subsets;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Permutation_Test <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">type</span> Group_Type <span class=\"kw1\">is</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Positive;<br/>\u00a0<br/>   Treat_Group: <span class=\"kw3\">constant</span> Group_Type\u00a0:= <span class=\"br0\">(</span><span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span><span class=\"br0\">)</span>;<br/>   Ctrl_Group:  <span class=\"kw3\">constant</span> Group_Type\u00a0:= <span class=\"br0\">(</span><span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Iter <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Iterate_Subsets<span class=\"br0\">(</span>Treat_Group'Length, Ctrl_Group'Length<span class=\"br0\">)</span>;<br/>\u00a0<br/>   Full_Group: <span class=\"kw3\">constant</span> Group_Type<span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"me1\">Iter</span>.<span class=\"me1\">All_Elements</span><span class=\"br0\">)</span><br/>    \u00a0:= Treat_Group &amp; Ctrl_Group;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Mean<span class=\"br0\">(</span>S: Iter.<span class=\"me1\">Subset</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> Float <span class=\"kw1\">is</span><br/>      Sum: Natural\u00a0:= <span class=\"nu0\">0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> S'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Sum\u00a0:= Sum + Full_Group<span class=\"br0\">(</span>S<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Float<span class=\"br0\">(</span>Sum<span class=\"br0\">)</span>/Float<span class=\"br0\">(</span>S'Length<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Mean;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> FIO <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Float_IO</span><span class=\"br0\">(</span>Float<span class=\"br0\">)</span>;<br/>\u00a0<br/>   T_Avg: Float\u00a0:= Mean<span class=\"br0\">(</span>Iter.<span class=\"me1\">First</span><span class=\"br0\">)</span>;<br/>   S_Avg: Float;<br/>   S:     Iter.<span class=\"me1\">Subset</span>\u00a0:= Iter.<span class=\"me1\">First</span>;<br/>   Equal:  Positive\u00a0:= <span class=\"nu0\">1</span>; <span class=\"co1\">-- Mean(Iter'First) = Mean(Iter'First)</span><br/>   Higher: Natural \u00a0:= <span class=\"nu0\">0</span>;<br/>   Lower:  Natural \u00a0:= <span class=\"nu0\">0</span>;<br/>\u00a0<br/><span class=\"kw1\">begin</span> <span class=\"co1\">-- Permutation_Test;</span><br/>   <span class=\"co1\">-- first, count the subsets with a higher, an equal or a lower mean</span><br/>   <span class=\"kw1\">loop</span><br/>      Iter.<span class=\"me1\">Next</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span>;<br/>      S_Avg\u00a0:= Mean<span class=\"br0\">(</span>S<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">if</span> S_Avg = T_Avg <span class=\"kw1\">then</span><br/>         Equal\u00a0:= Equal + <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">elsif</span> S_Avg &gt;= T_Avg <span class=\"kw1\">then</span><br/>         Higher\u00a0:= Higher + <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">else</span><br/>         Lower\u00a0:= Lower + <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw3\">exit</span> <span class=\"kw3\">when</span> Iter.<span class=\"me1\">Last</span><span class=\"br0\">(</span>S<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>\u00a0<br/>   <span class=\"co1\">-- second, output the results</span><br/>   <span class=\"kw1\">declare</span><br/>      <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>      Sum: Float\u00a0:= Float<span class=\"br0\">(</span>Higher + Equal + Lower<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">begin</span><br/>      Put<span class=\"br0\">(</span><span class=\"st0\">\"Less or Equal: \"</span><span class=\"br0\">)</span>;<br/>      FIO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"nu0\">100.0</span>*Float<span class=\"br0\">(</span>Lower+Equal<span class=\"br0\">)</span> / Sum, Fore=&gt;<span class=\"nu0\">3</span>, Aft=&gt;<span class=\"nu0\">1</span>, Exp=&gt;<span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>      Put<span class=\"br0\">(</span>Integer'Image<span class=\"br0\">(</span>Lower+Equal<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      New_Line;<br/>      Put<span class=\"br0\">(</span><span class=\"st0\">\"More:          \"</span><span class=\"br0\">)</span>;<br/>      FIO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"nu0\">100.0</span>*Float<span class=\"br0\">(</span>Higher<span class=\"br0\">)</span> / Sum,      Fore=&gt;<span class=\"nu0\">3</span>, Aft=&gt;<span class=\"nu0\">1</span>, Exp=&gt;<span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>      Put<span class=\"br0\">(</span>Integer'Image<span class=\"br0\">(</span>Higher<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      New_Line;<br/>   <span class=\"kw1\">end</span>;<br/><span class=\"kw1\">end</span> Permutation_Test;</pre>"}, {"lang": "BBC BASIC", "loc": 38, "block": "<pre class=\"text highlighted_source\">      ntreated% = 9<br/>      nplacebo% = 10<br/>      DIM results%(ntreated% + nplacebo% - 1)<br/>      results%() = 85, 88, 75, 66, 25, 29, 83, 39, 97, \\    REM treated group<br/>      \\            68, 41, 10, 49, 16, 65, 32, 92, 28, 98\u00a0: REM placebo group<br/>\u00a0<br/>      greater% = 0<br/>      FOR comb% = 0 TO 2^(ntreated%+nplacebo%)-1<br/>        IF FNnbits(comb%) = ntreated% THEN<br/>          tsum% = 0\u00a0: psum% = 0<br/>          FOR b% = 0 TO ntreated%+nplacebo%-1<br/>            IF comb% AND 2^b% THEN<br/>              tsum% += results%(b%)<br/>            ELSE<br/>              psum% += results%(b%)<br/>            ENDIF<br/>          NEXT<br/>          meandiff = tsum%/ntreated% - psum%/nplacebo%<br/>          IF comb% = 2^ntreated% - 1 THEN<br/>            actual = meandiff<br/>          ELSE<br/>            greater% -= meandiff &gt; actual<br/>            groups% += 1<br/>          ENDIF<br/>        ENDIF<br/>      NEXT<br/>\u00a0<br/>      percent = 100 * greater%/groups%<br/>      PRINT \"Percentage groupings &lt;= actual experiment: \"; 100 - percent<br/>      PRINT \"Percentage groupings &gt;  actual experiment: \"; percent<br/>      END<br/>\u00a0<br/>      DEF FNnbits(N%)<br/>      N% -= N% &gt;&gt;&gt; 1 AND &amp;55555555<br/>      N% = (N% AND &amp;33333333) + (N% &gt;&gt;&gt; 2 AND &amp;33333333)<br/>      N% = (N% + (N% &gt;&gt;&gt; 4)) AND &amp;0F0F0F0F<br/>      N% += N% &gt;&gt;&gt; 8\u00a0: N% += N% &gt;&gt;&gt; 16<br/>      = N% AND &amp;7F</pre>"}, {"lang": "C", "loc": 29, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> data<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span>  <span class=\"nu0\">85</span><span class=\"sy0\">,</span> <span class=\"nu0\">88</span><span class=\"sy0\">,</span> <span class=\"nu0\">75</span><span class=\"sy0\">,</span> <span class=\"nu0\">66</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">83</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"sy0\">,</span> <span class=\"nu0\">97</span><span class=\"sy0\">,</span><br/>                <span class=\"nu0\">68</span><span class=\"sy0\">,</span> <span class=\"nu0\">41</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">65</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">92</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">98</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> pick<span class=\"br0\">(</span><span class=\"kw4\">int</span> at<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> remain<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> accu<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> treat<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>remain<span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>accu <span class=\"sy0\">&gt;</span> treat<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span>  pick<span class=\"br0\">(</span>at <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> remain <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> accu <span class=\"sy0\">+</span> data<span class=\"br0\">[</span>at <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> treat<span class=\"br0\">)</span> <span class=\"sy0\">+</span><br/>                <span class=\"br0\">(</span> at <span class=\"sy0\">&gt;</span> remain <span class=\"sy0\">?</span> pick<span class=\"br0\">(</span>at <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> remain<span class=\"sy0\">,</span> accu<span class=\"sy0\">,</span> treat<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> treat <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> i<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> le<span class=\"sy0\">,</span> gt<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> total <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> treat <span class=\"sy0\">+=</span> data<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">19</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span> total <span class=\"sy0\">*=</span> i<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span> total <span class=\"sy0\">/=</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>        gt <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> treat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        le <span class=\"sy0\">=</span> total <span class=\"sy0\">-</span> gt<span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"&lt;=\u00a0:\u00a0%f%% \u00a0%d<span class=\"es1\">\\n</span> &gt;\u00a0:\u00a0%f%% \u00a0%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>               <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> le <span class=\"sy0\">/</span> total<span class=\"sy0\">,</span> le<span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> gt <span class=\"sy0\">/</span> total<span class=\"sy0\">,</span> gt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 39, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include&lt;iostream&gt;</span><br/><span class=\"co2\">#include&lt;vector&gt;</span><br/><span class=\"co2\">#include&lt;numeric&gt;</span><br/><span class=\"co2\">#include&lt;functional&gt;</span><br/>\u00a0<br/><span class=\"kw2\">class</span><br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int64_t</span> operator<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> n, <span class=\"kw4\">int</span> k<span class=\"br0\">)</span><span class=\"br0\">{</span> <span class=\"kw1\">return</span> partial_factorial<span class=\"br0\">(</span>n, k<span class=\"br0\">)</span> <span class=\"sy2\">/</span> factorial<span class=\"br0\">(</span>n <span class=\"sy2\">-</span> k<span class=\"br0\">)</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int64_t</span> partial_factorial<span class=\"br0\">(</span><span class=\"kw4\">int</span> from, <span class=\"kw4\">int</span> to<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> from <span class=\"sy1\">==</span> to <span class=\"sy4\">?</span> <span class=\"nu0\">1</span> <span class=\"sy4\">:</span> from <span class=\"sy2\">*</span> partial_factorial<span class=\"br0\">(</span>from <span class=\"sy2\">-</span> <span class=\"nu0\">1</span>, to<span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">int64_t</span> factorial<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> n <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"sy4\">?</span> <span class=\"nu0\">1</span> <span class=\"sy4\">:</span> n <span class=\"sy2\">*</span> factorial<span class=\"br0\">(</span>n <span class=\"sy2\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span>combinations<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">static</span> constexpr <span class=\"kw4\">int</span> treatment <span class=\"sy1\">=</span> <span class=\"nu0\">9</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">const</span> std<span class=\"sy4\">::</span><span class=\"me2\">vector</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> data<span class=\"br0\">{</span> <span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span>,<br/>                                 <span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span> <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> treated <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">accumulate</span><span class=\"br0\">(</span>data.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, data.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span> treatment, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    std<span class=\"sy4\">::</span><span class=\"me2\">function</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span>, <span class=\"kw4\">int</span>, <span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy1\">&gt;</span> pick<span class=\"sy4\">;</span><br/>    pick <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"sy3\">&amp;</span><span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> n, <span class=\"kw4\">int</span> from, <span class=\"kw4\">int</span> accumulated<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span><span class=\"br0\">(</span>n <span class=\"sy1\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                    <span class=\"kw1\">return</span> accumulated <span class=\"sy1\">&gt;</span> treated <span class=\"sy4\">?</span> <span class=\"nu0\">1</span> <span class=\"sy4\">:</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">else</span><br/>                    <span class=\"kw1\">return</span> pick<span class=\"br0\">(</span>n <span class=\"sy2\">-</span> <span class=\"nu0\">1</span>, from <span class=\"sy2\">-</span> <span class=\"nu0\">1</span>, accumulated <span class=\"sy2\">+</span> data<span class=\"br0\">[</span>from <span class=\"sy2\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span><br/>                            <span class=\"br0\">(</span>from <span class=\"sy1\">&gt;</span> n <span class=\"sy4\">?</span> pick<span class=\"br0\">(</span>n, from <span class=\"sy2\">-</span> <span class=\"nu0\">1</span>, accumulated<span class=\"br0\">)</span> <span class=\"sy4\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>            <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> total   <span class=\"sy1\">=</span> combinations<span class=\"br0\">(</span>data.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, treatment<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> greater <span class=\"sy1\">=</span> pick<span class=\"br0\">(</span>treatment, data.<span class=\"me1\">size</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> lesser  <span class=\"sy1\">=</span> total <span class=\"sy2\">-</span> greater<span class=\"sy4\">;</span><br/>\u00a0<br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"&lt;=\u00a0: \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu16\">100.0</span> <span class=\"sy2\">*</span> lesser  <span class=\"sy2\">/</span> total <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"%  \"</span> <span class=\"sy1\">&lt;&lt;</span> lesser  <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><br/>              <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" &gt;\u00a0: \"</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"nu16\">100.0</span> <span class=\"sy2\">*</span> greater <span class=\"sy2\">/</span> total <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"%  \"</span> <span class=\"sy1\">&lt;&lt;</span> greater <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 24, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> perm-test <span class=\"br0\">(</span>s1 s2<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>more <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>leq <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>all-data <span class=\"br0\">(</span><span class=\"kw1\">append</span> s1 s2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>thresh <span class=\"br0\">(</span><span class=\"kw1\">apply</span> #'+ s1<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>labels<br/>      <span class=\"br0\">(</span><span class=\"br0\">(</span>recur <span class=\"br0\">(</span>data sum need avail<span class=\"br0\">)</span><br/>\t      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">zerop</span> need<span class=\"br0\">)</span>   <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> sum thresh<span class=\"br0\">)</span><br/>\t\t\t\t      <span class=\"br0\">(</span>incf more<span class=\"br0\">)</span><br/>\t\t\t\t      <span class=\"br0\">(</span>incf leq<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> avail need<span class=\"br0\">)</span><br/>\t\t       <span class=\"br0\">(</span>recur <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> data<span class=\"br0\">)</span> sum need <span class=\"br0\">(</span><span class=\"nu0\">1</span>- avail<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t       <span class=\"br0\">(</span>recur <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> data<span class=\"br0\">)</span> <span class=\"br0\">(</span>+ sum <span class=\"br0\">(</span><span class=\"kw1\">car</span> data<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>- need<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>- avail<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <span class=\"br0\">(</span>recur all-data <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> s1<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> all-data<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cons</span> more leq<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>a <span class=\"br0\">(</span>perm-test '<span class=\"br0\">(</span><span class=\"nu0\">68</span> <span class=\"nu0\">41</span> <span class=\"nu0\">10</span> <span class=\"nu0\">49</span> <span class=\"nu0\">16</span> <span class=\"nu0\">65</span> <span class=\"nu0\">32</span> <span class=\"nu0\">92</span> <span class=\"nu0\">28</span> <span class=\"nu0\">98</span><span class=\"br0\">)</span><br/>\t\t     '<span class=\"br0\">(</span><span class=\"nu0\">85</span> <span class=\"nu0\">88</span> <span class=\"nu0\">75</span> <span class=\"nu0\">66</span> <span class=\"nu0\">25</span> <span class=\"nu0\">29</span> <span class=\"nu0\">83</span> <span class=\"nu0\">39</span> <span class=\"nu0\">97</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>x <span class=\"br0\">(</span><span class=\"kw1\">car</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>y <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> a<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span>s <span class=\"br0\">(</span>+ x y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>format t <span class=\"st0\">\"&lt;=: ~a ~6f%~% &gt;: ~a ~6f%~%\"</span><br/>\t  x <span class=\"br0\">(</span>* 100e0 <span class=\"br0\">(</span>/ x s<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t  y <span class=\"br0\">(</span>* 100e0 <span class=\"br0\">(</span>/ y s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 15, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">,</span> combinations3<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">auto</span> permutationTest<span class=\"br0\">(</span>T<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"kw2\">in</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> T<span class=\"br0\">[</span><span class=\"br0\">]</span> b<span class=\"br0\">)</span> <span class=\"kw4\">pure</span> <span class=\"kw4\">nothrow</span> @<span class=\"kw4\">safe</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> tObs <span class=\"sy0\">=</span> a.<span class=\"me1\">sum</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> combs <span class=\"sy0\">=</span> combinations<span class=\"sy0\">!</span><span class=\"kw2\">false</span><span class=\"br0\">(</span>a <span class=\"sy0\">~</span> b<span class=\"sy0\">,</span> a.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> under <span class=\"sy0\">=</span> combs.<span class=\"me1\">count</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>perm <span class=\"sy0\">=&gt;</span> perm.<span class=\"me1\">sum</span> <span class=\"sy0\">&lt;=</span> tObs<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> under <span class=\"sy0\">*</span> <span class=\"nu16\">100.0</span> <span class=\"sy0\">/</span> combs.<span class=\"me1\">length</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> treatmentGroup <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">85</span><span class=\"sy0\">,</span> <span class=\"nu0\">88</span><span class=\"sy0\">,</span> <span class=\"nu0\">75</span><span class=\"sy0\">,</span> <span class=\"nu0\">66</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">83</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"sy0\">,</span> <span class=\"nu0\">97</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> controlGroup <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">68</span><span class=\"sy0\">,</span> <span class=\"nu0\">41</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">65</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">92</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">98</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">immutable</span> under <span class=\"sy0\">=</span> permutationTest<span class=\"br0\">(</span>treatmentGroup<span class=\"sy0\">,</span> controlGroup<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"Under =%6.2f%%<span class=\"es1\">\\n</span>Over  =%6.2f%%\"</span><span class=\"sy0\">,</span> under<span class=\"sy0\">,</span> <span class=\"nu16\">100.0</span> <span class=\"sy0\">-</span> under<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elixir", "loc": 28, "block": "<pre class=\"text highlighted_source\">defmodule Permutation do<br/>  def statistic(ab, a) do<br/>    sumab = Enum.sum(ab)<br/>    suma  = Enum.sum(a)<br/>    suma / length(a) - (sumab - suma) / (length(ab) - length(a))<br/>  end<br/>\u00a0<br/>  def test(a, b) do<br/>    ab = a ++ b<br/>    tobs = statistic(ab, a)<br/>    {under, count} = Enum.reduce(comb(ab, length(a)), {0,0}, fn perm, {under, count} -&gt;<br/>      if statistic(ab, perm) &lt;= tobs, do: {under+1, count+1},<br/>                                    else: {under  , count+1}<br/>    end)<br/>    under * 100.0 / count<br/>  end<br/>\u00a0<br/>  defp comb(_, 0), do: [[]]<br/>  defp comb([], _), do: []<br/>  defp comb([h|t], m) do<br/>    (for l &lt;- comb(t, m-1), do: [h|l]) ++ comb(t, m)<br/>  end<br/>end<br/>\u00a0<br/>treatmentGroup = [85, 88, 75, 66, 25, 29, 83, 39, 97]<br/>controlGroup   = [68, 41, 10, 49, 16, 65, 32, 92, 28, 98]<br/>under = Permutation.test(treatmentGroup, controlGroup)<br/>:io.fwrite \"under = ~.2f%, over = ~.2f%~n\", [under, 100-under]</pre>"}, {"lang": "GAP", "loc": 51, "block": "<pre class=\"text highlighted_source\">a\u00a0:= [85, 88, 75, 66, 25, 29, 83, 39, 97];<br/>b\u00a0:= [68, 41, 10, 49, 16, 65, 32, 92, 28, 98];<br/>\u00a0<br/># Compute a decimal approximation of a rational<br/>Approx\u00a0:= function(x, d)<br/>\tlocal neg, a, b, n, m, s;<br/>\tif x &lt; 0 then<br/>\t\tx\u00a0:= -x;<br/>\t\tneg\u00a0:= true;<br/>\telse<br/>\t\tneg\u00a0:= false;<br/>\tfi;<br/>\ta\u00a0:= NumeratorRat(x);<br/>\tb\u00a0:= DenominatorRat(x);<br/>\tn\u00a0:= QuoInt(a, b);<br/>\ta\u00a0:= RemInt(a, b);<br/>\tm\u00a0:= 10^d;<br/>\ts\u00a0:= \"\";<br/>\tif neg then<br/>\t\tAppend(s, \"-\");<br/>\tfi;<br/>\tAppend(s, String(n));<br/>\tn\u00a0:= Size(s) + 1;<br/>\tAppend(s, String(m + QuoInt(a*m, b)));<br/>\ts[n]\u00a0:= '.';<br/>\treturn s;<br/>end;<br/>\u00a0<br/>PermTest\u00a0:= function(a, b)<br/>\tlocal c, d, p, q, u, v, m, n, k, diff, all;<br/>\tp\u00a0:= Size(a);<br/>\tq\u00a0:= Size(b);<br/>\tv\u00a0:= Concatenation(a, b);<br/>\tn\u00a0:= p + q;<br/>\tm\u00a0:= Binomial(n, p);<br/>\tdiff\u00a0:= Sum(a)/p - Sum(b)/q;<br/>\tall\u00a0:= [1 .. n];<br/>\tk\u00a0:= 0;<br/>\tfor u in Combinations(all, p) do<br/>\t\tc\u00a0:= List(u, i -&gt; v[i]);<br/>\t\td\u00a0:= List(Difference(all, u), i -&gt; v[i]);<br/>\t\tif Sum(c)/p - Sum(d)/q &gt; diff then<br/>\t\t\tk\u00a0:= k + 1;<br/>\t\tfi;<br/>\tod;<br/>\treturn [Approx((1 - k/m)*100, 3), Approx(k/m*100, 3)];<br/>end;<br/>\u00a0<br/># in order,\u00a0% less or greater than original diff<br/>PermTest(a, b);<br/>[ \"87.197\", \"12.802\" ]</pre>"}, {"lang": "Go", "loc": 72, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw1\">var</span> tr <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">85</span><span class=\"sy1\">,</span> <span class=\"nu0\">88</span><span class=\"sy1\">,</span> <span class=\"nu0\">75</span><span class=\"sy1\">,</span> <span class=\"nu0\">66</span><span class=\"sy1\">,</span> <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"nu0\">83</span><span class=\"sy1\">,</span> <span class=\"nu0\">39</span><span class=\"sy1\">,</span> <span class=\"nu0\">97</span><span class=\"sy1\">}</span><br/><span class=\"kw1\">var</span> ct <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">{</span><span class=\"nu0\">68</span><span class=\"sy1\">,</span> <span class=\"nu0\">41</span><span class=\"sy1\">,</span> <span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"nu0\">49</span><span class=\"sy1\">,</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"nu0\">65</span><span class=\"sy1\">,</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"nu0\">92</span><span class=\"sy1\">,</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"nu0\">98</span><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"co1\">// collect all results in a single list</span><br/>    all <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>tr<span class=\"sy1\">)</span><span class=\"sy3\">+</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>ct<span class=\"sy1\">))</span><br/>    <span class=\"kw3\">copy</span><span class=\"sy1\">(</span>all<span class=\"sy1\">,</span> tr<span class=\"sy1\">)</span><br/>    <span class=\"kw3\">copy</span><span class=\"sy1\">(</span>all<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>tr<span class=\"sy1\">):],</span> ct<span class=\"sy1\">)</span><br/>\u00a0<br/>    <span class=\"co1\">// compute sum of all data, useful as intermediate result</span><br/>    <span class=\"kw1\">var</span> sumAll <span class=\"kw4\">int</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> r <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> all <span class=\"sy1\">{</span><br/>        sumAll <span class=\"sy2\">+=</span> r<br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// closure for computing scaled difference.</span><br/>    <span class=\"co1\">// compute results scaled by len(tr)*len(ct).</span><br/>    <span class=\"co1\">// this allows all math to be done in integers.</span><br/>    sd <span class=\"sy2\">:=</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>trc <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">var</span> sumTr <span class=\"kw4\">int</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> x <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> trc <span class=\"sy1\">{</span><br/>            sumTr <span class=\"sy2\">+=</span> all<span class=\"sy1\">[</span>x<span class=\"sy1\">]</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span> sumTr<span class=\"sy3\">*</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>ct<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> <span class=\"sy1\">(</span>sumAll<span class=\"sy3\">-</span>sumTr<span class=\"sy1\">)</span><span class=\"sy3\">*</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>tr<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>\u00a0<br/>    <span class=\"co1\">// compute observed difference, as an intermediate result</span><br/>    a <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>tr<span class=\"sy1\">))</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> _ <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> a <span class=\"sy1\">{</span><br/>        a<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"nu2\">i</span><br/>    <span class=\"sy1\">}</span><br/>    sdObs <span class=\"sy2\">:=</span> sd<span class=\"sy1\">(</span>a<span class=\"sy1\">)</span><br/>\u00a0<br/>    <span class=\"co1\">// iterate over all combinations.  for each, compute (scaled)</span><br/>    <span class=\"co1\">// difference and tally whether leq or gt observed difference.</span><br/>    <span class=\"kw1\">var</span> nLe<span class=\"sy1\">,</span> nGt <span class=\"kw4\">int</span><br/>    comb<span class=\"sy1\">(</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>all<span class=\"sy1\">),</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>tr<span class=\"sy1\">),</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span>c <span class=\"sy1\">[]</span><span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> sd<span class=\"sy1\">(</span>c<span class=\"sy1\">)</span> &gt; sdObs <span class=\"sy1\">{</span><br/>            nGt<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            nLe<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">})</span><br/>\u00a0<br/>    <span class=\"co1\">// print results as percentage</span><br/>    pc <span class=\"sy2\">:=</span> <span class=\"nu0\">100</span> <span class=\"sy3\">/</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>nLe<span class=\"sy3\">+</span>nGt<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"differences &lt;= observed:\u00a0%f%%<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>nLe<span class=\"sy1\">)</span><span class=\"sy3\">*</span>pc<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"differences  &gt; observed:\u00a0%f%%<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span>nGt<span class=\"sy1\">)</span><span class=\"sy3\">*</span>pc<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// combination generator, copied from combination task</span><br/><span class=\"kw4\">func</span> comb<span class=\"sy1\">(</span>n<span class=\"sy1\">,</span> m <span class=\"kw4\">int</span><span class=\"sy1\">,</span> emit <span class=\"kw4\">func</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">))</span> <span class=\"sy1\">{</span><br/>    s <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> m<span class=\"sy1\">)</span><br/>    last <span class=\"sy2\">:=</span> m <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">var</span> rc <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> <span class=\"kw4\">int</span><span class=\"sy1\">)</span><br/>    rc <span class=\"sy2\">=</span> <span class=\"kw4\">func</span><span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> next <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> j <span class=\"sy2\">:=</span> next<span class=\"sy1\">;</span> j &lt; n<span class=\"sy1\">;</span> j<span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>            s<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> j<br/>            <span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy3\">==</span> last <span class=\"sy1\">{</span><br/>                emit<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span><br/>            <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>                rc<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> j<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    rc<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 21, "block": "<pre class=\"haskell highlighted_source\">binomial n m <span class=\"sy0\">=</span> <span class=\"br0\">(</span>f <span class=\"sy0\">!!</span> n<span class=\"br0\">)</span> `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:div\"><span class=\"kw3\">div</span></a>` <span class=\"br0\">(</span>f <span class=\"sy0\">!!</span> m<span class=\"br0\">)</span> `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:div\"><span class=\"kw3\">div</span></a>` <span class=\"br0\">(</span>f <span class=\"sy0\">!!</span> <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> m<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">where</span> f <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:scanl\"><span class=\"kw3\">scanl</span></a> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"br0\">]</span><br/>\u00a0<br/>permtest treat ctrl <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> less<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromIntegral\"><span class=\"kw3\">fromIntegral</span></a> total<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span><br/>\t<span class=\"kw1\">where</span><br/>\ttotal <span class=\"sy0\">=</span> binomial <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> avail<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> treat<span class=\"br0\">)</span><br/>\tless  <span class=\"sy0\">=</span> combos <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a> treat<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> treat<span class=\"br0\">)</span> avail<br/>\tavail <span class=\"sy0\">=</span> ctrl <span class=\"sy0\">++</span> treat<br/>\tcombos total n a<span class=\"sy0\">@</span><span class=\"br0\">(</span>x:xs<span class=\"br0\">)</span><br/>\t\t<span class=\"sy0\">|</span> total <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span>\t<span class=\"sy0\">=</span> binomial <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> a<span class=\"br0\">)</span> n<br/>\t\t<span class=\"sy0\">|</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>\t<span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"sy0\">|</span> n <span class=\"sy0\">&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> a\t<span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\t\t<span class=\"sy0\">|</span> n <span class=\"sy0\">==</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> a <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fromEnum\"><span class=\"kw3\">fromEnum</span></a> <span class=\"br0\">(</span>total <span class=\"sy0\">&lt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a> a<span class=\"br0\">)</span><br/>\t\t<span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a>\t<span class=\"sy0\">=</span> combos <span class=\"br0\">(</span>total <span class=\"sy0\">-</span> x<span class=\"br0\">)</span> <span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> xs<br/>\t\t\t\t<span class=\"sy0\">+</span> combos total n xs<br/>\u00a0<br/>main <span class=\"sy0\">=</span>\t<span class=\"kw1\">let</span>\tr <span class=\"sy0\">=</span> permtest<br/>\t\t\t<span class=\"br0\">[</span><span class=\"nu0\">85</span><span class=\"sy0\">,</span> <span class=\"nu0\">88</span><span class=\"sy0\">,</span> <span class=\"nu0\">75</span><span class=\"sy0\">,</span> <span class=\"nu0\">66</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">83</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"sy0\">,</span> <span class=\"nu0\">97</span><span class=\"br0\">]</span><br/>\t\t\t<span class=\"br0\">[</span><span class=\"nu0\">68</span><span class=\"sy0\">,</span> <span class=\"nu0\">41</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">65</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">92</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">98</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">in</span> <span class=\"kw1\">do</span>\t<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStr\"><span class=\"kw3\">putStr</span></a> <span class=\"st0\">\"&gt;\u00a0: \"</span>; <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> r<br/>\t\t<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStr\"><span class=\"kw3\">putStr</span></a> <span class=\"st0\">\"&lt;=: \"</span>; <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:print\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">$</span> <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> r</pre>"}, {"lang": "J", "loc": 8, "block": "<pre class=\"j highlighted_source\">require<span class=\"st_h\">'stats'</span><br/>trmt=: <span class=\"nu0\">0.85</span> <span class=\"nu0\">0.88</span> <span class=\"nu0\">0.75</span> <span class=\"nu0\">0.66</span> <span class=\"nu0\">0.25</span> <span class=\"nu0\">0.29</span> <span class=\"nu0\">0.83</span> <span class=\"nu0\">0.39</span> <span class=\"nu0\">0.97</span><br/>ctrl=: <span class=\"nu0\">0.68</span> <span class=\"nu0\">0.41</span> <span class=\"nu0\">0.1</span> <span class=\"nu0\">0.49</span> <span class=\"nu0\">0.16</span> <span class=\"nu0\">0.65</span> <span class=\"nu0\">0.32</span> <span class=\"nu0\">0.92</span> <span class=\"nu0\">0.28</span> <span class=\"nu0\">0.98</span><br/>difm=: -&amp;mean<br/>result=: trmt difm ctrl<br/>all=: trmt<span class=\"sy0\">(</span>#@[ <span class=\"sy0\">(</span>{. difm }.<span class=\"sy0\">)</span> |:@<span class=\"sy0\">(</span>[ <span class=\"sy0\">(</span>comb <a class=\"__cf_email__\" data-cfemail=\"e29ccca2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>,\"<span class=\"nu0\">1</span> <a class=\"__cf_email__\" data-cfemail=\"9df4b3dd\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>]<span class=\"sy0\">)</span>&amp;# ,<span class=\"sy0\">)</span> { ,<span class=\"sy0\">)</span> ctrl<br/>smoutput <span class=\"st_h\">'under: '</span>,<span class=\"st_h\">'%'</span>,~\":<span class=\"nu0\">100</span>*mean all &lt;: result<br/>smoutput <span class=\"st_h\">'over:  '</span>,<span class=\"st_h\">'%'</span>,~\":<span class=\"nu0\">100</span>*mean all &gt; result</pre>"}, {"lang": "Java", "loc": 30, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> PermutationTest <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> data <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span><br/>        <span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span>,<br/>        <span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> pick<span class=\"br0\">(</span><span class=\"kw4\">int</span> at, <span class=\"kw4\">int</span> remain, <span class=\"kw4\">int</span> accu, <span class=\"kw4\">int</span> treat<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>remain <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span>accu <span class=\"sy0\">&gt;</span> treat<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span> pick<span class=\"br0\">(</span>at <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, remain <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, accu <span class=\"sy0\">+</span> data<span class=\"br0\">[</span>at <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>, treat<span class=\"br0\">)</span><br/>            <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>at <span class=\"sy0\">&gt;</span> remain<span class=\"br0\">)</span> <span class=\"sy0\">?</span> pick<span class=\"br0\">(</span>at <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, remain, accu, treat<span class=\"br0\">)</span> <span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> treat <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">double</span> total <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            treat <span class=\"sy0\">+=</span> data<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">19</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span> <span class=\"sy0\">--</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            total <span class=\"sy0\">*=</span> i<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"sy0\">--</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            total <span class=\"sy0\">/=</span> i<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw4\">int</span> gt <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span><span class=\"nu0\">19</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">0</span>, treat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> le <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>total <span class=\"sy0\">-</span> gt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"&lt;=\u00a0:\u00a0%f%% \u00a0%d<span class=\"es0\">\\n</span>\"</span>, <span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> le <span class=\"sy0\">/</span> total, le<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\" &gt;\u00a0:\u00a0%f%% \u00a0%d<span class=\"es0\">\\n</span>\"</span>, <span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> gt <span class=\"sy0\">/</span> total, gt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "jq", "loc": 8, "block": "<pre class=\"text highlighted_source\"># combination(r) generates a stream of combinations of r items from the input array.<br/>def combination(r):<br/>  if r &gt; length or r &lt; 0 then empty<br/>  elif r == length then .<br/>  else  ( [.[0]] + (.[1:]|combination(r-1))),<br/>        ( .[1:]|combination(r))<br/>  end;<br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 28, "block": "<pre class=\"text highlighted_source\">using Combinatorics<br/>\u00a0<br/>meandiff(a::Vector{T}, b::Vector{T}) where T &lt;: Real = mean(a) - mean(b)<br/>\u00a0<br/>function bifurcate(a::AbstractVector, sel::Vector{T}) where T &lt;: Integer<br/>    x         = a[sel]<br/>    asel      = trues(length(a))<br/>    asel[sel] = false<br/>    y         = a[asel]<br/>    return x, y<br/>end<br/>\u00a0<br/>function permutation_test(treated::Vector{T}, control::Vector{T}) where T &lt;: Real<br/>    effect0 = meandiff(treated, control)<br/>    pool    = vcat(treated, control)<br/>    tlen    = length(treated)<br/>    plen    = length(pool)<br/>    better = worse = 0<br/>    for subset in combinations(1:plen, tlen)<br/>        t, c = bifurcate(pool, subset)<br/>        if effect0 &lt; meandiff(t, c)<br/>            better += 1<br/>        else<br/>            worse += 1<br/>        end<br/>    end<br/>    return better, worse<br/>end</pre>"}, {"lang": "Kotlin", "loc": 24, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> data <span class=\"sy0\">=</span> intArrayOf<span class=\"br0\">(</span><br/>    <span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span>,<br/>    <span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/>fun pick<span class=\"br0\">(</span>at<span class=\"sy0\">:</span> Int, remain<span class=\"sy0\">:</span> Int, accu<span class=\"sy0\">:</span> Int, treat<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>remain <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>accu <span class=\"sy0\">&gt;</span> treat<span class=\"br0\">)</span> <span class=\"nu0\">1</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> pick<span class=\"br0\">(</span>at - <span class=\"nu0\">1</span>, remain - <span class=\"nu0\">1</span>, accu + data<span class=\"br0\">[</span>at - <span class=\"nu0\">1</span><span class=\"br0\">]</span>, treat<span class=\"br0\">)</span> +<br/>           <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>at <span class=\"sy0\">&gt;</span> remain<span class=\"br0\">)</span> pick<span class=\"br0\">(</span>at - <span class=\"nu0\">1</span>, remain, accu, treat<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">0</span> <br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> treat <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> total <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span>..<span class=\"nu0\">8</span><span class=\"br0\">)</span> treat +<span class=\"sy0\">=</span> data<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">19</span> downTo <span class=\"nu0\">11</span><span class=\"br0\">)</span> total <span class=\"sy0\">*=</span> i<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">9</span> downTo <span class=\"nu0\">1</span><span class=\"br0\">)</span> total /<span class=\"sy0\">=</span> i<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> gt <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span><span class=\"nu0\">19</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">0</span>, treat<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> le <span class=\"sy0\">=</span> <span class=\"br0\">(</span>total - gt<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>    System.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"&lt;=\u00a0:\u00a0%f%% \u00a0%d<span class=\"es1\">\\n</span>\"</span>, <span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> le / total, le<span class=\"br0\">)</span><br/>    System.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\" &gt;\u00a0:\u00a0%f%% \u00a0%d<span class=\"es1\">\\n</span>\"</span>, <span class=\"nu0\">100.0</span> <span class=\"sy0\">*</span> gt / total, gt<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Mathematica", "loc": 6, "block": "<pre class=\"text highlighted_source\">\"&lt;=: \" &lt;&gt; ToString[#1] &lt;&gt; \" \" &lt;&gt; ToString[100. #1/#2] &lt;&gt; \"%\\n &gt;: \" &lt;&gt; <br/>     ToString[#2 - #1] &lt;&gt; \" \" &lt;&gt; ToString[100. (1 - #1/#2)] &lt;&gt; \"%\" &amp;[<br/>   Count[Total /@ Subsets[Join[#1, #2], {<a class=\"__cf_email__\" data-cfemail=\"9fd3faf1f8ebf7df\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#1}], <br/>    n_ /; n &lt;= <a class=\"__cf_email__\" data-cfemail=\"e8bc879c8984a8\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#1], <br/>   Binomial[<a class=\"__cf_email__\" data-cfemail=\"fcb099929b8894bc\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#1 + <a class=\"__cf_email__\" data-cfemail=\"08446d666f7c6048\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#2, <a class=\"__cf_email__\" data-cfemail=\"d29eb7bcb5a6ba92\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>#1]] &amp;[{85, 88, 75, 66, 25, <br/>  29, 83, 39, 97}, {68, 41, 10, 49, 16, 65, 32, 92, 28, 98}]</pre>"}, {"lang": "Perl", "loc": 84, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">use</span> List<span class=\"sy0\">::</span><span class=\"me2\">Util</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">{</span> sum <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">sub</span> means <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@groups</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> sum<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"co5\">$_</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"sy0\">@</span><span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">@groups</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">sub</span> following <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$pattern</span>    <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$orig_count</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">@$pattern</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$count</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span><span class=\"re0\">$pattern</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">until</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$pattern</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$pattern</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">?</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">last</span> <span class=\"kw1\">if</span> <span class=\"re0\">$pattern</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"sy0\">--</span><span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"co5\">$_</span><span class=\"sy0\">,</span> <span class=\"re0\">@$pattern</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">until</span> <span class=\"re0\">$count</span> <span class=\"sy0\">==</span> <span class=\"re0\">$orig_count</span> <span class=\"kw1\">or</span> <span class=\"kw1\">not</span> <span class=\"re0\">$count</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/undef.html\"><span class=\"kw3\">undef</span></a> <span class=\"re0\">@$pattern</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$count</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@groups</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re4\">&lt;DATA&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/chomp.html\"><span class=\"kw3\">chomp</span></a><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$i</span><span class=\"sy0\">++,</span> <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"co2\">/^$/</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$groups</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"co5\">$_</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@orig_means</span> <span class=\"sy0\">=</span> means<span class=\"br0\">(</span><span class=\"re0\">@groups</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$orig_cmp</span>   <span class=\"sy0\">=</span> <span class=\"re0\">$orig_means</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$orig_means</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$pattern</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$groups</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>                <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> x <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$groups</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><br/>              <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"sy0\">@</span><span class=\"kw1\">cmp</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> x <span class=\"nu0\">3</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">@$pattern</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@perms</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"br0\">{</span> <span class=\"kw1\">my</span> <span class=\"re0\">$g</span> <span class=\"sy0\">=</span> <span class=\"co5\">$_</span><span class=\"sy0\">;</span><br/>                      <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$groups</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$groups</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"br0\">[</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"re0\">$pattern</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"re0\">$g</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span><span class=\"re0\">$pattern</span><span class=\"br0\">}</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                  <span class=\"br0\">}</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@means</span> <span class=\"sy0\">=</span> means<span class=\"br0\">(</span><span class=\"re0\">@perms</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$cmp</span><span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"re0\">$means</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"re0\">$means</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=&gt;</span> <span class=\"re0\">$orig_cmp</span> <span class=\"br0\">]</span><span class=\"sy0\">++;</span><br/><span class=\"br0\">}</span> <span class=\"kw1\">continue</span> <span class=\"br0\">{</span><br/>    following<span class=\"br0\">(</span><span class=\"re0\">$pattern</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$all</span>    <span class=\"sy0\">=</span> sum<span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"kw1\">cmp</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">$length</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/length.html\"><span class=\"kw3\">length</span></a> <span class=\"re0\">$all</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a> <span class=\"st0\">\"%-7s\u00a0%${length}d\u00a0%6.3f%%<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>equal greater less<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">$cmp</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"re0\">$cmp</span><span class=\"br0\">[</span><span class=\"co5\">$_</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"re0\">$all</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw2\">__DATA__</span><br/><span class=\"nu0\">85</span><br/><span class=\"nu0\">88</span><br/><span class=\"nu0\">75</span><br/><span class=\"nu0\">66</span><br/><span class=\"nu0\">25</span><br/><span class=\"nu0\">29</span><br/><span class=\"nu0\">83</span><br/><span class=\"nu0\">39</span><br/><span class=\"nu0\">97</span><br/>\u00a0<br/><span class=\"nu0\">68</span><br/><span class=\"nu0\">41</span><br/><span class=\"nu0\">10</span><br/><span class=\"nu0\">49</span><br/><span class=\"nu0\">16</span><br/><span class=\"nu0\">65</span><br/><span class=\"nu0\">32</span><br/><span class=\"nu0\">92</span><br/><span class=\"nu0\">28</span><br/><span class=\"nu0\">98</span></pre>"}, {"lang": "Perl 6", "loc": 20, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> stats <span class=\"br0\">(</span> <span class=\"re0\">@test</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw3\">all</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@test</span><span class=\"br0\">)</span> <span class=\"co2\">/ <a class=\"__cf_email__\" data-cfemail=\"416a0135243235\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> ) - ([+] flat @all, (@test X* -1)) /</span> <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"kw3\">all</span> <span class=\"sy0\">-</span> <span class=\"re0\">@test</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">my</span> int <span class=\"re0\">@treated</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&lt;</span><span class=\"nu0\">85</span> <span class=\"nu0\">88</span> <span class=\"nu0\">75</span> <span class=\"nu0\">66</span> <span class=\"nu0\">25</span> <span class=\"nu0\">29</span> <span class=\"nu0\">83</span> <span class=\"nu0\">39</span> <span class=\"nu0\">97</span><span class=\"sy0\">&gt;;</span><br/><span class=\"kw1\">my</span> int <span class=\"re0\">@control</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&lt;</span><span class=\"nu0\">68</span> <span class=\"nu0\">41</span> <span class=\"nu0\">10</span> <span class=\"nu0\">49</span> <span class=\"nu0\">16</span> <span class=\"nu0\">65</span> <span class=\"nu0\">32</span> <span class=\"nu0\">92</span> <span class=\"nu0\">28</span> <span class=\"nu0\">98</span><span class=\"sy0\">&gt;;</span><br/><span class=\"kw1\">my</span> int <span class=\"sy0\">@</span><span class=\"kw3\">all</span> <span class=\"sy0\">=</span> flat <span class=\"re0\">@treated</span><span class=\"sy0\">,</span> <span class=\"re0\">@control</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$base</span> <span class=\"sy0\">=</span> stats<span class=\"br0\">(</span> <span class=\"re0\">@treated</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw3\">all</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@trials</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"re0\">@trials</span><span class=\"br0\">[</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span> stats<span class=\"br0\">(</span> <span class=\"re0\">$_</span><span class=\"sy0\">,</span> <span class=\"sy0\">@</span><span class=\"kw3\">all</span> <span class=\"br0\">)</span> <span class=\"sy0\">&lt;=&gt;</span> <span class=\"re0\">$base</span> <span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"sy0\">++</span> <span class=\"kw1\">for</span> <span class=\"sy0\">@</span><span class=\"kw3\">all</span><span class=\"sy0\">.</span><span class=\"me1\">combinations</span><span class=\"br0\">(</span><span class=\"sy0\">+</span><span class=\"re0\">@treated</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st_h\">'Counts: &lt;, =, &gt; '</span><span class=\"sy0\">,</span> <span class=\"re0\">@trials</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st_h\">'Less than   \u00a0:\u00a0%'</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"re0\">@trials</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@trials</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st_h\">'Equal to    \u00a0:\u00a0%'</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"re0\">@trials</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@trials</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st_h\">'Greater than\u00a0:\u00a0%'</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"re0\">@trials</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">/</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@trials</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st_h\">'Less or Equal:\u00a0%'</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@trials</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">[</span><span class=\"sy0\">+</span><span class=\"br0\">]</span> <span class=\"re0\">@trials</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 20, "block": "<pre class=\"text highlighted_source\">constant data = {85, 88, 75, 66, 25, 29, 83, 39, 97,<br/>                 68, 41, 10, 49, 16, 65, 32, 92, 28, 98 }<br/>\u00a0<br/>function pick(int at, int remain, int accu, int treat)<br/>    if remain=0 then return iff(accu&gt;treat?1:0) end if<br/>    return pick(at-1, remain-1, accu+data[at], treat) +<br/>           iff(at&gt;remain?pick(at-1, remain, accu, treat):0)<br/>end function<br/>\u00a0<br/>int treat = 0, le, gt<br/>atom total = 1;<br/>for i=1 to 9 do treat += data[i] end for<br/>for i=19 to 11 by -1 do total *= i end for<br/>for i=9 to 1 by -1 do total /= i end for<br/>\u00a0<br/>gt = pick(19, 9, 0, treat)<br/>le = total - gt;<br/>\u00a0<br/>printf(1,\"&lt;=\u00a0:\u00a0%f%% \u00a0%d\\n &gt;\u00a0:\u00a0%f%% \u00a0%d\\n\",<br/>       {100*le/total, le, 100*gt/total, gt})</pre>"}, {"lang": "PicoLisp", "loc": 32, "block": "<pre class=\"text highlighted_source\">(load \"@lib/simul.l\")  # For 'subsets'<br/>\u00a0<br/>(scl 2)<br/>\u00a0<br/>(de _stat (A)<br/>   (let (LenA (length A)  SumA (apply + A))<br/>      (-<br/>         (*/ SumA LenA)<br/>         (*/ (- SumAB SumA) (- LenAB LenA)) ) ) )<br/>\u00a0<br/>(de permutationTest (A B)<br/>   (let<br/>      (AB (append A B)<br/>         SumAB (apply + AB)<br/>         LenAB (length AB)<br/>         Tobs (_stat A)<br/>         Count 0 )<br/>      (*/<br/>         (sum<br/>            '((Perm)<br/>               (inc 'Count)<br/>               (and (&gt;= Tobs (_stat Perm)) 1) )<br/>            (subsets (length A) AB) )<br/>         100.0<br/>         Count ) ) )<br/>\u00a0<br/>(setq<br/>   *TreatmentGroup (0.85 0.88 0.75 0.66 0.25 0.29 0.83 0.39 0.97)<br/>   *ControlGroup   (0.68 0.41 0.10 0.49 0.16 0.65 0.32 0.92 0.28 0.98) )<br/>\u00a0<br/>(let N (permutationTest *TreatmentGroup *ControlGroup)<br/>   (prinl \"under = \" (round N) \"%, over = \" (round (- 100.0 N)) \"%\") )</pre>"}, {"lang": "PureBasic", "loc": 93, "block": "<pre class=\"purebasic highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"kw1\">Define</span>.f meanTreated,meanControl,diffInMeans<br/><span class=\"kw1\">Define</span>.f actualmeanTreated,actualmeanControl,actualdiffInMeans<br/>\u00a0<br/><span class=\"kw1\">Dim</span> poolA<span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"br0\">)</span><br/>\u00a0<br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">85</span> <span class=\"co1\">; first 9 the treated</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">88</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">75</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">66</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">25</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">29</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">83</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">39</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">97</span><br/>\u00a0<br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">68</span> <span class=\"co1\">; last 10 the control</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">41</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">10</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">49</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">14</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">16</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">65</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">16</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">32</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">17</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">92</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">28</span><br/>poolA<span class=\"br0\">(</span><span class=\"nu0\">19</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">98</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.i IsValidBitString<span class=\"br0\">(</span>x,pool,treated<span class=\"br0\">)</span><br/><span class=\"kw1\">Protected</span> c,i<br/><span class=\"kw1\">For</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> pool<br/>mask<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span><span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> mask<span class=\"sy0\">&amp;</span>x:c<span class=\"sy0\">+</span><span class=\"nu0\">1</span>:<span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">Next</span><br/><span class=\"kw1\">If</span> c<span class=\"sy0\">=</span>treated\u00a0:<span class=\"kw1\">ProcedureReturn</span> x<br/><span class=\"kw1\">Else</span>        \u00a0:<span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>treated<span class=\"sy0\">=</span><span class=\"nu0\">9</span><br/>control<span class=\"sy0\">=</span><span class=\"nu0\">10</span><br/>\u00a0<br/>pool   <span class=\"sy0\">=</span>treated<span class=\"sy0\">+</span>control<br/>\u00a0<br/><span class=\"co1\">; actual Experimentally observed difference in means</span><br/>\u00a0<br/><span class=\"kw1\">For</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> Treated<br/>sumTreated<span class=\"sy0\">+</span>poolA<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/><span class=\"kw1\">For</span> i<span class=\"sy0\">=</span>Treated<span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> Treated<span class=\"sy0\">+</span>Control<br/>sumControl<span class=\"sy0\">+</span>poolA<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/>actualmeanTreated<span class=\"sy0\">=</span>sumTreated <span class=\"sy0\">/</span>Treated<br/>actualmeanControl<span class=\"sy0\">=</span>sumControl <span class=\"sy0\">/</span>Control<br/>actualdiffInMeans<span class=\"sy0\">=</span>actualmeanTreated<span class=\"sy0\">-</span>actualmeanControl<br/>\u00a0<br/><span class=\"co1\">; exhaust the possibilites</span><br/><span class=\"kw1\">For</span> x<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span>pool<br/>\u00a0<br/><span class=\"co1\">; Valid? i.e. are there 9 \"1's\"\u00a0?</span><br/><span class=\"kw1\">If</span> IsValidBitString<span class=\"br0\">(</span>x,pool,treated<span class=\"br0\">)</span><br/>TotalComBinations<span class=\"sy0\">+</span><span class=\"nu0\">1</span>:sumTreated<span class=\"sy0\">=</span><span class=\"nu0\">0</span>:sumControl<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co1\">; separate the groups</span><br/><span class=\"kw1\">For</span> i<span class=\"sy0\">=</span>pool <span class=\"kw1\">to</span> <span class=\"nu0\">1</span> <span class=\"kw1\">Step</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>mask<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">&lt;&lt;</span><span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>:idx<span class=\"sy0\">=</span>pool<span class=\"sy0\">-</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">If</span> mask<span class=\"sy0\">&amp;</span>x<br/>sumTreated<span class=\"sy0\">+</span>poolA<span class=\"br0\">(</span>idx<span class=\"br0\">)</span><br/><span class=\"kw1\">Else</span><br/>sumControl<span class=\"sy0\">+</span>poolA<span class=\"br0\">(</span>idx<span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/>meanTreated<span class=\"sy0\">=</span>sumTreated <span class=\"sy0\">/</span>Treated<br/>meanControl<span class=\"sy0\">=</span>sumControl <span class=\"sy0\">/</span>Control<br/>diffInMeans<span class=\"sy0\">=</span>meanTreated<span class=\"sy0\">-</span>meanControl<br/><span class=\"co1\">; gather the statistics</span><br/><span class=\"kw1\">If</span> <span class=\"br0\">(</span>diffInMeans<span class=\"br0\">)</span><span class=\"sy0\">&lt;=</span><span class=\"br0\">(</span>actualdiffInMeans<span class=\"br0\">)</span><br/>diffLessOrEqual<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">Else</span><br/>diffGreater<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0<br/><span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">Next</span><br/><span class=\"co1\">; show our results</span><br/><span class=\"co1\">; cw(StrF(100*diffLessOrEqual/TotalComBinations,2)+\" \"+Str(diffLessOrEqual))</span><br/><span class=\"co1\">; cw(StrF(100*diffGreater    /TotalComBinations,2)+\" \"+Str(diffGreater))</span><br/>\u00a0<br/><span class=\"kw1\">Debug</span> <span class=\"kw2\">StrF</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">*</span>diffLessOrEqual<span class=\"sy0\">/</span>TotalComBinations,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" \"</span><span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>diffLessOrEqual<span class=\"br0\">)</span><br/><span class=\"kw1\">Debug</span> <span class=\"kw2\">StrF</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">*</span>diffGreater    <span class=\"sy0\">/</span>TotalComBinations,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" \"</span><span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>diffGreater<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 20, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">from</span> <span class=\"kw3\">itertools</span> <span class=\"kw1\">import</span> combinations <span class=\"kw1\">as</span> comb<br/>\u00a0<br/><span class=\"kw1\">def</span> statistic<span class=\"br0\">(</span>ab<span class=\"sy0\">,</span> a<span class=\"br0\">)</span>:<br/>    sumab<span class=\"sy0\">,</span> suma <span class=\"sy0\">=</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>ab<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span> suma / <span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> -<br/>             <span class=\"br0\">(</span>sumab -suma<span class=\"br0\">)</span> / <span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>ab<span class=\"br0\">)</span> - <span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> permutationTest<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">)</span>:<br/>    ab <span class=\"sy0\">=</span> a + b<br/>    Tobs <span class=\"sy0\">=</span> statistic<span class=\"br0\">(</span>ab<span class=\"sy0\">,</span> a<span class=\"br0\">)</span><br/>    under <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> count<span class=\"sy0\">,</span> perm <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>comb<span class=\"br0\">(</span>ab<span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw1\">if</span> statistic<span class=\"br0\">(</span>ab<span class=\"sy0\">,</span> perm<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> Tobs:<br/>            under +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">return</span> under * <span class=\"nu0\">100</span>. / count<br/>\u00a0<br/>treatmentGroup <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">85</span><span class=\"sy0\">,</span> <span class=\"nu0\">88</span><span class=\"sy0\">,</span> <span class=\"nu0\">75</span><span class=\"sy0\">,</span> <span class=\"nu0\">66</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"nu0\">83</span><span class=\"sy0\">,</span> <span class=\"nu0\">39</span><span class=\"sy0\">,</span> <span class=\"nu0\">97</span><span class=\"br0\">]</span><br/>controlGroup   <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">68</span><span class=\"sy0\">,</span> <span class=\"nu0\">41</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">65</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"nu0\">92</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"nu0\">98</span><span class=\"br0\">]</span><br/>under <span class=\"sy0\">=</span> permutationTest<span class=\"br0\">(</span>treatmentGroup<span class=\"sy0\">,</span> controlGroup<span class=\"br0\">)</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"under=%.2f%%, over=%.2f%%\"</span>\u00a0% <span class=\"br0\">(</span>under<span class=\"sy0\">,</span> <span class=\"nu0\">100</span>. - under<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 8, "block": "<pre class=\"text highlighted_source\">permutation.test &lt;- function(treatment, control) {<br/>  perms &lt;- combinations(length(treatment)+length(control),<br/>                        length(treatment),<br/>                        c(treatment, control),<br/>                        set=FALSE)<br/>  p &lt;- mean(rowMeans(perms) &lt;= mean(treatment))<br/>  c(under=p, over=(1-p))<br/>}</pre>"}, {"lang": "Racket", "loc": 26, "block": "<pre class=\"text highlighted_source\">#lang racket/base<br/>\u00a0<br/>(define-syntax-rule (inc! x)<br/>  (set! x (add1 x)))<br/>\u00a0<br/>(define (permutation-test control-gr treatment-gr)<br/>  (let ([both-gr (append control-gr treatment-gr)]<br/>        [threshold (apply + control-gr)]<br/>        [more 0] <br/>        [leq 0])<br/>    (let loop ([data both-gr] [sum 0] [needed (length control-gr)] [available (length both-gr)])<br/>      (cond [(zero? needed) (if (&gt;= sum threshold)<br/>                                (inc! more)<br/>                                (inc! leq))]<br/>            [(&gt;= available needed) (loop (cdr data) sum needed (sub1 available))<br/>                                   (loop (cdr data) (+ sum (car data)) (sub1 needed) (sub1 available))]<br/>            [else (void)]))<br/>    (values more leq)))<br/>\u00a0<br/>(let-values ([(more leq) (permutation-test '(68 41 10 49 16 65 32 92 28 98)<br/>                                           '(85 88 75 66 25 29 83 39 97))])<br/>  (let ([sum (+ more leq)])<br/>    (printf \"&lt;=: ~a ~a%~n&gt;:  ~a ~a%~n\"<br/>            more (real-&gt;decimal-string (* 100. (/ more sum)) 2)<br/>            leq (real-&gt;decimal-string (* 100. (/ leq sum)) 2))))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 32, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  performs a    permutation test   on     N + M   subjects  (volunteers): */</span><br/>                                                 <span class=\"coMULTI\">/*     \u2191   \u2191                           */</span><br/>                                                 <span class=\"coMULTI\">/*     \u2502   \u2502                           */</span><br/>                                                 <span class=\"coMULTI\">/*     \u2502   \u2514\u2500\u2500\u2500\u2500\u2500control  population.  */</span><br/>                                                 <span class=\"coMULTI\">/*     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500treatment population.  */</span><br/>n=<span class=\"nu0\">9</span><br/>data= <span class=\"nu0\">85</span> <span class=\"nu0\">88</span> <span class=\"nu0\">75</span> <span class=\"nu0\">66</span> <span class=\"nu0\">25</span> <span class=\"nu0\">29</span> <span class=\"nu0\">83</span> <span class=\"nu0\">39</span> <span class=\"nu0\">97</span>         <span class=\"nu0\">68</span> <span class=\"nu0\">41</span> <span class=\"nu0\">10</span> <span class=\"nu0\">49</span> <span class=\"nu0\">16</span> <span class=\"nu0\">65</span> <span class=\"nu0\">32</span> <span class=\"nu0\">92</span> <span class=\"nu0\">28</span> <span class=\"nu0\">98</span><br/>w=<span class=\"kw6\">words</span><span class=\"br0\">(</span>data<span class=\"br0\">)</span>;       m=w-n<br/><span class=\"kw1\">say</span> <span class=\"st0\">'w='</span> w<br/><span class=\"kw1\">say</span> <span class=\"st0\">'volunteer population given treatment:'</span>        <span class=\"kw6\">right</span><span class=\"br0\">(</span>n, <span class=\"kw6\">length</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">' control  population given a placebo:'</span>        <span class=\"kw6\">right</span><span class=\"br0\">(</span>m, <span class=\"kw6\">length</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'treatment population efficacy\u00a0% (percentages):'</span>        <span class=\"kw6\">subword</span><span class=\"br0\">(</span>data, <span class=\"nu0\">1</span>, n<span class=\"br0\">)</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">' control  population placebo \u00a0% (percentages):'</span>        <span class=\"kw6\">subword</span><span class=\"br0\">(</span>data, n+<span class=\"nu0\">1</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">say</span><br/>                     <span class=\"kw1\">do</span> v=  <span class=\"nu0\">0</span>  <span class=\"kw2\">for</span> w        \u00a0;     #<span class=\"sy0\">.</span>v=<span class=\"kw6\">word</span><span class=\"br0\">(</span>data, v+<span class=\"nu0\">1</span><span class=\"br0\">)</span>\u00a0;       <span class=\"kw3\">end</span><br/>treat=<span class=\"nu0\">0</span>;             <span class=\"kw1\">do</span> i=  <span class=\"nu0\">0</span>  <span class=\"kw2\">to</span> n-<span class=\"nu0\">1</span>       \u00a0;     treat=treat + #<span class=\"sy0\">.</span>i  \u00a0;       <span class=\"kw3\">end</span><br/>  tot=<span class=\"nu0\">1</span>;             <span class=\"kw1\">do</span> j=  w  <span class=\"kw2\">to</span> m+<span class=\"nu0\">1</span>  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>\u00a0;     tot=tot <span class=\"sy0\">*</span> j        \u00a0;       <span class=\"kw3\">end</span><br/>                     <span class=\"kw1\">do</span> k=w%2  <span class=\"kw2\">to</span>  <span class=\"nu0\">1</span>   <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>\u00a0;     tot=tot <span class=\"sy0\">/</span> k        \u00a0;       <span class=\"kw3\">end</span><br/>\u00a0<br/>GT=picker<span class=\"br0\">(</span>n+m, n, <span class=\"nu0\">0</span><span class=\"br0\">)</span>                             <span class=\"coMULTI\">/*compute the GT value from PICKER func*/</span><br/>LE=tot - GT                                      <span class=\"coMULTI\">/*   \"     \"  LE   \"   via subtraction.*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\"&lt;= \"</span>  <span class=\"kw6\">format</span><span class=\"br0\">(</span><span class=\"nu0\">100</span> <span class=\"sy0\">*</span> LE <span class=\"sy0\">/</span> tot, ,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"st0\">'%'</span>   LE    <span class=\"coMULTI\">/*display number with 3 decimal places.*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">\" &gt; \"</span>  <span class=\"kw6\">format</span><span class=\"br0\">(</span><span class=\"nu0\">100</span> <span class=\"sy0\">*</span> GT <span class=\"sy0\">/</span> tot, ,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"st0\">'%'</span>   GT    <span class=\"coMULTI\">/*   \"       \"     \"  \"    \"       \"   */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>picker:  <span class=\"kw1\">procedure</span> <span class=\"kw1\">expose</span> #<span class=\"sy0\">.</span> treat;                <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> it,rest,eff     <span class=\"coMULTI\">/*get args.*/</span><br/>         <span class=\"kw1\">if</span> rest==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span>   eff <span class=\"sy0\">&gt;</span> treat                               <span class=\"coMULTI\">/*Zero\u00a0?   */</span><br/>         <span class=\"kw1\">if</span> it<span class=\"sy0\">&gt;</span>rest  <span class=\"kw3\">then</span> q=picker<span class=\"br0\">(</span>it-<span class=\"nu0\">1</span>, rest, eff<span class=\"br0\">)</span>                          <span class=\"coMULTI\">/*recurse. */</span><br/>                     <span class=\"kw3\">else</span> q=<span class=\"nu0\">0</span><br/>         itP=it - <span class=\"nu0\">1</span>                                                          <span class=\"coMULTI\">/*temp var.*/</span><br/>         <span class=\"kw1\">return</span> picker<span class=\"br0\">(</span>itP,  rest - <span class=\"nu0\">1</span>,  eff+#<span class=\"sy0\">.</span>itP<span class=\"br0\">)</span>  +  q                     <span class=\"coMULTI\">/*recurse. */</span></pre>"}, {"lang": "Ruby", "loc": 20, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> statistic<span class=\"br0\">(</span>ab, a<span class=\"br0\">)</span><br/>  sumab, suma = ab.<span class=\"me1\">inject</span><span class=\"br0\">(</span>:<span class=\"sy0\">+</span><span class=\"br0\">)</span>.<span class=\"me1\">to_f</span>, a.<span class=\"me1\">inject</span><span class=\"br0\">(</span>:<span class=\"sy0\">+</span><span class=\"br0\">)</span>.<span class=\"me1\">to_f</span><br/>  suma <span class=\"sy0\">/</span> a.<span class=\"me1\">size</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span>sumab <span class=\"sy0\">-</span> suma<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>ab.<span class=\"me1\">size</span> <span class=\"sy0\">-</span> a.<span class=\"me1\">size</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> permutationTest<span class=\"br0\">(</span>a, b<span class=\"br0\">)</span><br/>  ab = a <span class=\"sy0\">+</span> b<br/>  tobs = statistic<span class=\"br0\">(</span>ab, a<span class=\"br0\">)</span><br/>  under = count = <span class=\"nu0\">0</span><br/>  ab.<span class=\"me1\">combination</span><span class=\"br0\">(</span>a.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>perm<span class=\"sy0\">|</span><br/>    under <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span> <span class=\"kw1\">if</span> statistic<span class=\"br0\">(</span>ab, perm<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span>= tobs<br/>    count <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span><br/>  under <span class=\"sy0\">*</span> <span class=\"nu0\">100.0</span> <span class=\"sy0\">/</span> count<br/><span class=\"kw1\">end</span><br/>\u00a0<br/>treatmentGroup = <span class=\"br0\">[</span><span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span><span class=\"br0\">]</span><br/>controlGroup   = <span class=\"br0\">[</span><span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span><span class=\"br0\">]</span><br/>under = permutationTest<span class=\"br0\">(</span>treatmentGroup, controlGroup<span class=\"br0\">)</span><br/><span class=\"kw3\">puts</span> <span class=\"st0\">\"under=%.2f%%, over=%.2f%%\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">[</span>under, <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> under<span class=\"br0\">]</span></pre>"}, {"lang": "Scala", "loc": 23, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> PermutationTest <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> data <span class=\"sy0\">=</span><br/>    Array<span class=\"br0\">(</span><span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span>, <span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> <span class=\"br0\">(</span>total, treat<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1.0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> pick<span class=\"br0\">(</span>at<span class=\"sy0\">:</span> Int, remain<span class=\"sy0\">:</span> Int, accu<span class=\"sy0\">:</span> Int, treat<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>remain <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>accu <span class=\"sy0\">&gt;</span> treat<span class=\"br0\">)</span> <span class=\"nu0\">1</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">0</span><br/>\u00a0<br/>    pick<span class=\"br0\">(</span>at - <span class=\"nu0\">1</span>, remain - <span class=\"nu0\">1</span>, accu + data<span class=\"br0\">(</span>at - <span class=\"nu0\">1</span><span class=\"br0\">)</span>, treat<span class=\"br0\">)</span> +<br/>      <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>at <span class=\"sy0\">&gt;</span> remain<span class=\"br0\">)</span> pick<span class=\"br0\">(</span>at - <span class=\"nu0\">1</span>, remain, accu, treat<span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> to <span class=\"nu0\">8</span><span class=\"br0\">)</span> treat +<span class=\"sy0\">=</span> data<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">19</span> to <span class=\"nu0\">11</span> by -<span class=\"nu0\">1</span><span class=\"br0\">)</span> total <span class=\"sy0\">*=</span> j<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>g <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">9</span> to <span class=\"nu0\">1</span> by -<span class=\"nu0\">1</span><span class=\"br0\">)</span> total /<span class=\"sy0\">=</span> g<br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> gt <span class=\"sy0\">=</span> pick<span class=\"br0\">(</span><span class=\"nu0\">19</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">0</span>, treat<span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> le <span class=\"sy0\">=</span> <span class=\"br0\">(</span>total - gt<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><br/>\u00a0<br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\"&lt;=\u00a0: ${100.0 * le / total}%f%%  ${le}%d\"</span><span class=\"br0\">)</span><br/>  println<span class=\"br0\">(</span>f<span class=\"st0\">\" &gt;\u00a0: ${100.0 * gt / total}%f%%  ${gt}%d\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 39, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"float.s7i\";<br/>\u00a0<br/>const array integer: treatmentGroup is [] (85, 88, 75, 66, 25, 29, 83, 39, 97);<br/>const array integer: controlGroup  is [] (68, 41, 10, 49, 16, 65, 32, 92, 28, 98);<br/>const array integer: both is treatmentGroup &amp; controlGroup;<br/>\u00a0<br/>const func integer: pick (in integer: at, in integer: remain, in integer: accu, in integer: treat) is func<br/>  result<br/>    var integer: picked is 0;<br/>  begin<br/>    if remain = 0 then<br/>      picked\u00a0:= ord(accu &gt; treat);<br/>    else<br/>      picked\u00a0:= pick(at - 1, remain - 1, accu + both[at], treat);<br/>      if at &gt; remain then<br/>        picked +:= pick(at - 1, remain, accu, treat);<br/>      end if;<br/>    end if;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var integer: experimentalResult is 0;<br/>    var integer: treat is 0;<br/>    var integer: total is 1;<br/>    var integer: le is 0;<br/>    var integer: gt is 0;<br/>    var integer: i is 0;<br/>  begin<br/>    for experimentalResult range treatmentGroup do<br/>      treat +:= experimentalResult;<br/>    end for;<br/>    total\u00a0:= 19\u00a0! 10;  # Binomial coefficient<br/>    gt\u00a0:= pick(19, 9, 0, treat);<br/>    le\u00a0:= total - gt;<br/>    writeln(\"&lt;=\u00a0: \" &lt;&amp; 100.0 * flt(le) / flt(total) digits 6 &lt;&amp; \"%  \" &lt;&amp; le);<br/>    writeln(\" &gt;\u00a0: \" &lt;&amp; 100.0 * flt(gt) / flt(total) digits 6 &lt;&amp; \"%  \" &lt;&amp; gt);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 20, "block": "<pre class=\"ruby highlighted_source\">func statistic<span class=\"br0\">(</span>ab, a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var<span class=\"br0\">(</span>sumab, suma<span class=\"br0\">)</span> = <span class=\"br0\">(</span>ab.<span class=\"me1\">sum</span>, a.<span class=\"me1\">sum</span><span class=\"br0\">)</span><br/>    suma<span class=\"sy0\">/</span>a.<span class=\"me1\">size</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>sumab<span class=\"sy0\">-</span>suma<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>ab.<span class=\"me1\">size</span><span class=\"sy0\">-</span>a.<span class=\"me1\">size</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>func permutationTest<span class=\"br0\">(</span>a, b<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var ab = <span class=\"br0\">(</span>a <span class=\"sy0\">+</span> b<span class=\"br0\">)</span><br/>    var tobs = statistic<span class=\"br0\">(</span>ab, a<span class=\"br0\">)</span><br/>    var under = <span class=\"br0\">(</span>var count = <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    ab.<span class=\"me1\">combinations</span><span class=\"br0\">(</span>a.<span class=\"me1\">len</span>, <span class=\"br0\">{</span><span class=\"sy0\">|*</span>perm<span class=\"sy0\">|</span><br/>        statistic<span class=\"br0\">(</span>ab, perm<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span>= tobs <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>under <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        count <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    under <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">/</span> count<br/><span class=\"br0\">}</span><br/>\u00a0<br/>var treatmentGroup = <span class=\"br0\">[</span><span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">75</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">25</span>, <span class=\"nu0\">29</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">39</span>, <span class=\"nu0\">97</span><span class=\"br0\">]</span><br/>var controlGroup   = <span class=\"br0\">[</span><span class=\"nu0\">68</span>, <span class=\"nu0\">41</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">49</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">32</span>, <span class=\"nu0\">92</span>, <span class=\"nu0\">28</span>, <span class=\"nu0\">98</span><span class=\"br0\">]</span><br/>var under = permutationTest<span class=\"br0\">(</span>treatmentGroup, controlGroup<span class=\"br0\">)</span><br/>say <span class=\"br0\">(</span><span class=\"st0\">\"under=%.2f%%, over=%.2f%%\"</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span>under, <span class=\"nu0\">100</span> <span class=\"sy0\">-</span> under<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Tcl", "loc": 47, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/><span class=\"co1\"># Difference of means; note that the first list must be the concatenation of</span><br/><span class=\"co1\"># the two lists (because this is cheaper to work with).</span><br/><span class=\"kw1\">proc</span> statistic <span class=\"br0\">{</span>AB A<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> sumAB <span class=\"br0\">[</span>tcl::<span class=\"me1\">mathop</span>::+ <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$AB</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> sumA <span class=\"br0\">[</span>tcl::<span class=\"me1\">mathop</span>::+ <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$A</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">expr</span> <span class=\"br0\">{</span><br/>\t<span class=\"re0\">$sumA</span> / double<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$A</span><span class=\"br0\">]</span><span class=\"br0\">)</span> -<br/>\t<span class=\"br0\">(</span><span class=\"re0\">$sumAB</span> - <span class=\"re0\">$sumA</span><span class=\"br0\">)</span> / double<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$AB</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$A</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Selects all k-sized combinations from a list.</span><br/><span class=\"kw1\">proc</span> selectCombinationsFrom <span class=\"br0\">{</span>k l<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$k</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"kw1\">elseif</span> <span class=\"br0\">{</span><span class=\"re0\">$k</span> == <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$l</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$l</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> all <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> n <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$l</span><span class=\"br0\">]</span> - <span class=\"br0\">[</span><span class=\"kw2\">incr</span> k -<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> first <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$l</span> <span class=\"re0\">$i</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">incr</span> i<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$k</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">lappend</span> all <span class=\"re0\">$first</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">foreach</span> s <span class=\"br0\">[</span>selectCombinationsFrom <span class=\"re0\">$k</span> <span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"re0\">$l</span> <span class=\"re0\">$i</span> end<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">lappend</span> all <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$first</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$s</span><span class=\"br0\">]</span><br/>\t    <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$all</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Compute the permutation test value and its complement.</span><br/><span class=\"kw1\">proc</span> permutationTest <span class=\"br0\">{</span>A B<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> whole <span class=\"br0\">[</span><span class=\"kw2\">concat</span> <span class=\"re0\">$A</span> <span class=\"re0\">$B</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> Tobs <span class=\"br0\">[</span>statistic <span class=\"re0\">$whole</span> <span class=\"re0\">$A</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> undercount <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> overcount <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">set</span> count <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">foreach</span> perm <span class=\"br0\">[</span>selectCombinationsFrom <span class=\"br0\">[</span><span class=\"kw2\">llength</span> <span class=\"re0\">$A</span><span class=\"br0\">]</span> <span class=\"re0\">$whole</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> t <span class=\"br0\">[</span>statistic <span class=\"re0\">$whole</span> <span class=\"re0\">$perm</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">incr</span> count<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$t</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$Tobs</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> undercount<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> overcount<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">set</span> count <span class=\"br0\">[</span>tcl::<span class=\"me1\">mathfunc</span>::<span class=\"me1\">double</span> <span class=\"re0\">$count</span><span class=\"br0\">]</span><br/>    <span class=\"kw2\">list</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$overcount</span> / <span class=\"re0\">$count</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$undercount</span> / <span class=\"re0\">$count</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ursala", "loc": 16, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import nat<br/>#import flo<br/>\u00a0<br/>treatment_group = &lt;85,88,75,66,25,29,83,39,97&gt;<br/>control_group   = &lt;68,41,10,49,16,65,32,92,28,98&gt;<br/>\u00a0<br/>f = # returns the fractions of alternative mean differences above and below the actual<br/>\u00a0<br/>float~*; -+<br/>   vid^~G(plus,~&amp;)+ (not <a class=\"__cf_email__\" data-cfemail=\"ff99939a8ebf8d93a7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>)*|@htX; ~~ float+ length,<br/>   minus*+ mean^~*C/~&amp; ^DrlrjXS(~&amp;l,choices)^/-- <a class=\"__cf_email__\" data-cfemail=\"18747d767f6c705874\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>+-<br/>\u00a0<br/>#show+<br/>\u00a0<br/>t = --* *-'%'@lrNCC printf/$'%0.2f' times/$100. f(treatment_group,control_group)</pre>"}, {"lang": "zkl", "loc": 12, "block": "<pre class=\"text highlighted_source\">fcn permutationTest(a,b){<br/>   ab   \u00a0:= a.extend(b);<br/>   tObs \u00a0:= a.sum(0);<br/>   combs\u00a0:= Utils.Helpers.pickNFrom(a.len(),ab);  // 92,378<br/>   under\u00a0:= combs.reduce('wrap(sum,perm){ sum+(perm.sum(0) &lt;= tObs) },0);<br/>   100.0 * under / combs.len();<br/>}<br/>\u00a0<br/>treatmentGroup\u00a0:= T(85, 88, 75, 66, 25, 29, 83, 39, 97);<br/>controlGroup  \u00a0:= T(68, 41, 10, 49, 16, 65, 32, 92, 28, 98);<br/>under         \u00a0:= permutationTest(treatmentGroup, controlGroup);<br/>println(\"Under =%6.2f%%\\nOver  =%6.2f%%\".fmt(under, 100.0 - under));</pre>"}]}