{"task": "IBAN", "blocks": [{"lang": "Ada", "loc": 3, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">package</span> Iban_Code <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">function</span> Is_Legal<span class=\"br0\">(</span>Iban\u00a0: String<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Boolean;<br/><span class=\"kw1\">end</span> Iban_Code;</pre>"}, {"lang": "AutoHotkey", "loc": 43, "block": "<pre class=\"autohotkey highlighted_source\">IBANs <span class=\"sy0\">:=</span> <span class=\"br0\">[</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><br/>\t<span class=\"sy0\">,</span> <span class=\"st0\">\"gb82 WEST 1234 5698 7654 32\"</span><br/>\t<span class=\"sy0\">,</span> <span class=\"st0\">\"GB82WEST12345698765432\"</span><br/>\t<span class=\"sy0\">,</span> <span class=\"st0\">\"GB82 WEST 234 5698 7654 32\"</span><br/>\t<span class=\"sy0\">,</span> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 33\"</span><br/>\t<span class=\"sy0\">,</span> <span class=\"st0\">\"AE82 WEST 1234 5698 7654 32\"</span><span class=\"br0\">]</span><br/>for k<span class=\"sy0\">,</span> v in IBANs<br/>\tOutput <span class=\"sy0\">.=</span> v <span class=\"st0\">\" is\"</span> <span class=\"br0\">(</span>ValidIBAN<span class=\"br0\">(</span>v<span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\"\"</span>\u00a0: <span class=\"st0\">\" not\"</span><span class=\"br0\">)</span> <span class=\"st0\">\" valid.`n\"</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span>\u00a0% Output<br/>\u00a0<br/>ValidIBAN<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tstatic CC <span class=\"sy0\">:=</span> <span class=\"br0\">{</span>AL:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> AD:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> AT:<span class=\"nu0\">20</span><span class=\"sy0\">,</span> AZ:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> BH:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> BE:<span class=\"nu0\">16</span><span class=\"sy0\">,</span> BA:<span class=\"nu0\">20</span><span class=\"sy0\">,</span> BR:<span class=\"nu0\">29</span><span class=\"sy0\">,</span> BG:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> CR:<span class=\"nu0\">21</span><br/>\t\t    <span class=\"sy0\">,</span> HR:<span class=\"nu0\">21</span><span class=\"sy0\">,</span> CY:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> CZ:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> DK:<span class=\"nu0\">18</span><span class=\"sy0\">,</span> DO:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> EE:<span class=\"nu0\">20</span><span class=\"sy0\">,</span> FO:<span class=\"nu0\">18</span><span class=\"sy0\">,</span> FI:<span class=\"nu0\">18</span><span class=\"sy0\">,</span> FR:<span class=\"nu0\">27</span><span class=\"sy0\">,</span> GE:<span class=\"nu0\">22</span><br/>\t\t    <span class=\"sy0\">,</span> DE:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> GI:<span class=\"nu0\">23</span><span class=\"sy0\">,</span> GR:<span class=\"nu0\">27</span><span class=\"sy0\">,</span> GL:<span class=\"nu0\">18</span><span class=\"sy0\">,</span> GT:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> HU:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> IS:<span class=\"nu0\">26</span><span class=\"sy0\">,</span> IE:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> IL:<span class=\"nu0\">23</span><span class=\"sy0\">,</span> IT:<span class=\"nu0\">27</span><br/>\t\t    <span class=\"sy0\">,</span> JO:<span class=\"nu0\">30</span><span class=\"sy0\">,</span> KZ:<span class=\"nu0\">20</span><span class=\"sy0\">,</span> KW:<span class=\"nu0\">30</span><span class=\"sy0\">,</span> LV:<span class=\"nu0\">21</span><span class=\"sy0\">,</span> LB:<span class=\"nu0\">28</span><span class=\"sy0\">,</span> LI:<span class=\"nu0\">21</span><span class=\"sy0\">,</span> LT:<span class=\"nu0\">20</span><span class=\"sy0\">,</span> LU:<span class=\"nu0\">20</span><span class=\"sy0\">,</span> MK:<span class=\"nu0\">19</span><span class=\"sy0\">,</span> MT:<span class=\"nu0\">31</span><br/>\t\t    <span class=\"sy0\">,</span> MR:<span class=\"nu0\">27</span><span class=\"sy0\">,</span> MU:<span class=\"nu0\">30</span><span class=\"sy0\">,</span> MC:<span class=\"nu0\">27</span><span class=\"sy0\">,</span> MD:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> ME:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> NL:<span class=\"nu0\">18</span><span class=\"sy0\">,</span> NO:<span class=\"nu0\">15</span><span class=\"sy0\">,</span> PK:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> PS:<span class=\"nu0\">29</span><span class=\"sy0\">,</span> PL:<span class=\"nu0\">28</span><br/>\t\t    <span class=\"sy0\">,</span> PT:<span class=\"nu0\">25</span><span class=\"sy0\">,</span> QA:<span class=\"nu0\">29</span><span class=\"sy0\">,</span> RO:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> SM:<span class=\"nu0\">27</span><span class=\"sy0\">,</span> SA:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> RS:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> SK:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> SI:<span class=\"nu0\">19</span><span class=\"sy0\">,</span> ES:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> SE:<span class=\"nu0\">24</span><br/>\t\t    <span class=\"sy0\">,</span> CH:<span class=\"nu0\">21</span><span class=\"sy0\">,</span> TN:<span class=\"nu0\">24</span><span class=\"sy0\">,</span> TR:<span class=\"nu0\">26</span><span class=\"sy0\">,</span> AE:<span class=\"nu0\">23</span><span class=\"sy0\">,</span> GB:<span class=\"nu0\">22</span><span class=\"sy0\">,</span> VG:<span class=\"nu0\">24</span><span class=\"br0\">}</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/StringReplace.htm\"><span class=\"kw3\">StringReplace</span></a><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> n<span class=\"sy0\">,</span>\u00a0% <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Space\"><span class=\"kw2\">A_Space</span></a><span class=\"sy0\">,,</span> A<br/>\t<span class=\"co1\">;Check that the total IBAN length is correct as per the country</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">StrLen</span></a><span class=\"br0\">(</span>n<span class=\"br0\">)</span>\u00a0!<span class=\"sy0\">=</span> CC<span class=\"br0\">[</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>n<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t<span class=\"kw1\">return</span> false<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/StringUpper.htm\"><span class=\"kw3\">StringUpper</span></a><span class=\"sy0\">,</span> n<span class=\"sy0\">,</span> n<br/>\t<span class=\"co1\">;Move the four initial characters to the end of the string</span><br/>\tn <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>n<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>n<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\t<span class=\"co1\">;Replace each letter in the string with two digits</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Parse<span class=\"sy0\">,</span> n<br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> is alpha<br/>\t\t\tnn <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Asc</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">55</span><br/>\t\t<span class=\"kw1\">else</span><br/>\t\t\tnn <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> Mod97<span class=\"br0\">(</span>nn<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Mod97<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">while</span> a <span class=\"br0\">{</span><br/>\t\trem <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Mod</span></a><span class=\"br0\">(</span>rem <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">97</span><span class=\"br0\">)</span><br/>\t\ta <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>a<span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> rem<br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 51, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/>@load <span class=\"st0\">\"ordchr\"</span><br/>\u00a0<br/><span class=\"kw6\">function</span> invalid<span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span> <span class=\"kw5\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"INVALID \"</span> <span class=\"re0\">$0</span><span class=\"br0\">)</span>; next <span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> valid<span class=\"br0\">(</span><span class=\"br0\">)</span>    <span class=\"br0\">{</span> <span class=\"kw5\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"VALID__ \"</span> <span class=\"re0\">$0</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"AL\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"AD\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"AT\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">20</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"AZ\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"BH\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"BA\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">20</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"BR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">29</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"BG\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"CR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">21</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"HR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">21</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"CY\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"CZ\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"DK\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">18</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"DO\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"EE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">20</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"FO\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">18</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"FI\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">18</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"FR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">27</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"GE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"DE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"GI\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">23</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"GR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">27</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"GL\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">18</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"GT\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"HU\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"IS\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">26</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"IE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"IT\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">27</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"KZ\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">20</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"KW\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">30</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"LV\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">21</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"LB\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"LI\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">21</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"LT\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">20</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"LU\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">20</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"MK\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">19</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"MT\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">31</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"MR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">27</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"MU\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">30</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"MC\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">27</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"MD\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"ME\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"NL\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">18</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"NO\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">15</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"PK\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"PS\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">29</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"PL\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">28</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"PT\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">25</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"RO\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"SM\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">27</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"SA\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"RS\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"SK\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"SI\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">19</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"ES\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"SE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"CH\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">21</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"TN\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"TR\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">26</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"AE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">23</span>; <br/>    ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"GB\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">22</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"VG\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">24</span>; ccibanlen<span class=\"br0\">[</span><span class=\"st0\">\"BE\"</span><span class=\"br0\">]</span> = <span class=\"nu0\">16</span>;  <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">{</span><br/>    iban = <span class=\"kw4\">toupper</span><span class=\"br0\">(</span><span class=\"re0\">$0</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">gsub</span><span class=\"br0\">(</span><span class=\"sy3\">/</span>\\s<span class=\"sy3\">+/</span>, <span class=\"st0\">\"\"</span>, iban<span class=\"br0\">)</span><br/>    ccode = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>iban, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>    <span class=\"sy1\">!</span> <span class=\"kw4\">match</span><span class=\"br0\">(</span>iban, <span class=\"sy3\">/^</span><span class=\"br0\">[</span>A<span class=\"sy3\">-</span>Z0<span class=\"sy3\">-</span><span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"sy3\">+</span>$<span class=\"sy3\">/</span><span class=\"br0\">)</span> <span class=\"sy1\">||</span>     <br/>            <span class=\"sy1\">!</span> <span class=\"br0\">(</span>ccode <span class=\"kw1\">in</span> ccibanlen<span class=\"br0\">)</span> <span class=\"sy1\">||</span>           <br/>            <span class=\"kw4\">length</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"sy2\">!=</span> ccibanlen<span class=\"br0\">[</span>ccode<span class=\"br0\">]</span><span class=\"br0\">)</span>   <br/>        invalid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    ibanrev = gensub<span class=\"br0\">(</span><span class=\"sy3\">/^</span><span class=\"br0\">(</span>.<span class=\"br0\">{</span><span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span>.<span class=\"sy3\">+</span><span class=\"br0\">)</span><span class=\"sy3\">/</span>, <span class=\"st0\">\"<span class=\"es0\">\\\\</span>2<span class=\"es0\">\\\\</span>1\"</span>, <span class=\"nu0\">1</span>, iban<span class=\"br0\">)</span><br/>    ibancsum = <span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i = <span class=\"nu0\">1</span>; i <span class=\"sy2\">&lt;=</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>ibanrev<span class=\"br0\">)</span>; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        currchar = <span class=\"kw4\">substr</span><span class=\"br0\">(</span>ibanrev, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">match</span><span class=\"br0\">(</span>currchar, <span class=\"sy3\">/</span><span class=\"br0\">[</span>A<span class=\"sy3\">-</span>Z<span class=\"br0\">]</span><span class=\"sy3\">/</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>            currchar = ord<span class=\"br0\">(</span>currchar<span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">55</span><br/>        ibancsum = ibancsum currchar<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    ibancsum <span class=\"sy3\">%</span> <span class=\"nu0\">97</span> <span class=\"sy2\">==</span> <span class=\"nu0\">1</span> <span class=\"sy5\">?</span> valid<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy5\">:</span> invalid<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "BBC BASIC", "loc": 93, "block": "<pre class=\"text highlighted_source\">      REM Used the following as official standard:<br/>      REM  http://www.cnb.cz/cs/platebni_styk/iban/download/EBS204.pdf<br/>\u00a0<br/>      REM Pairs of ISO 3166 country code &amp; expected IBAN length for this country<br/>      COULEN$=\"AL28 AD24 AT20 AZ28 BE16 BH22 BA20 BR29 BG22 CR21 HR21 CY28 CZ24 DK18 DO28 EE20 \"+\\<br/>      \\       \"FO18 FI18 FR27 GE22 DE22 GI23 GR27 GL18 GT28 HU28 IS26 IE22 IL23 IT27 KZ20 KW30 \"+\\<br/>      \\       \"LV21 LB28 LI21 LT20 LU20 MK19 MT31 MR27 MU30 MC27 MD24 ME22 NL18 NO15 PK24 PS29 \"+\\<br/>      \\       \"PL28 PT25 RO24 SM27 SA24 RS22 SK24 SI19 ES24 SE24 CH21 TN24 TR26 AE23 GB22 VG24\"<br/>\u00a0<br/>      PROCIBANcheck(\"GB82 WEST 1234 5698 7654 32\"):REM Paper IBAN notation (with the spaces)<br/>      PROCIBANcheck(\"GB82WEST12345698765432\")    \u00a0:REM Digital IBAN notation (without the spaces)<br/>      PROCIBANcheck(\"gb82 west 1234 5698 7654 32\")<br/>      PROCIBANcheck(\"GB82 TEST 1234 5698 7654 32\")<br/>      PROCIBANcheck(\"GR16 0110 1250 0000 0001 2300 695\")<br/>      PROCIBANcheck(\"GB29 NWBK 6016 1331 9268 19\")<br/>      PROCIBANcheck(\"SA03 8000 0000 6080 1016 7519\")<br/>      PROCIBANcheck(\"CH93 0076 2011 6238 5295 7\")<br/>      PROCIBANcheck(\"IL62 0108 0000 0009 9999 999\")<br/>      PROCIBANcheck(\"IL62-0108-0000-0009-9999-999\")<br/>      PROCIBANcheck(\"US12 3456 7890 0987 6543 210\")<br/>      PROCIBANcheck(\"GR16 0110 1250 0000 0001 2300 695X\")<br/>      END<br/>\u00a0<br/>      DEF PROCIBANcheck(iban$)<br/>      LOCAL err$,i%,match%,explen%,digiban$,tmpiban$,bignum$,c%,kk%<br/>\u00a0<br/>      REM Search for country code and fetch expected length<br/>      i%=1:explen%=0<br/>      WHILE explen%=0 AND i%&lt;LENCOULEN$<br/>        IF LEFT$(iban$,2)=MID$(COULEN$,i%,2) explen%=VALMID$(COULEN$,i%+2,2)<br/>        i%+=5<br/>      ENDWHILE<br/>      match%=explen%&gt;0<br/>\u00a0<br/>      REM Continue if country code found<br/>      IF match% THEN<br/>        REM Remove space = convert to digital IBAN<br/>        digiban$=\"\"<br/>        FOR i%=1TOLENiban$<br/>          IF MID$(iban$,i%,1)&gt;\" \" digiban$+=MID$(iban$,i%,1)<br/>        NEXT<br/>        REM Compare length with expected length<br/>        match%=explen%=LENdigiban$<br/>\u00a0<br/>        REM Continue if length is correct<br/>        IF match% THEN<br/>          REM Create temporary string with country code appended<br/>          tmpiban$=MID$(digiban$,5)+MID$(digiban$,1,2)<br/>          REM Make big number, replacing letters by numbers using next conversion table: A=10 ... Z=35<br/>          bignum$=\"\"<br/>          FOR i%=1TOLENtmpiban$<br/>            c%=ASCMID$(tmpiban$,i%,1)<br/>            IF c%&gt;57 bignum$+=STR$(c%-55) ELSE bignum$+=STR$(c%-48)<br/>          NEXT<br/>          REM MOD 97 on bignum$+\"00\" and subtract result from 98 to obtain control number<br/>          kk%=98-FNmod97(bignum$+\"00\")<br/>          REM Compare with control number in IBAN<br/>          match%=VALMID$(iban$,3,2)=kk%<br/>\u00a0<br/>          REM Continue if control number matches<br/>          IF match% THEN<br/>            REM Append kk% to bignum$ and determine if MOD 97 results in 1<br/>            match%=FNmod97(bignum$+RIGHT$(\"0\"+STR$kk%,2))=1<br/>\u00a0<br/>            REM Continue if MOD 97<br/>            IF match% THEN<br/>              REM Was last test<br/>            ELSE<br/>              err$=\"result from modulo 97\"<br/>            ENDIF<br/>          ELSE<br/>            err$=\"check digits, should be: \"+STR$kk%<br/>          ENDIF<br/>        ELSE<br/>          err$=\"code length, expected length: \"+STR$explen%<br/>        ENDIF<br/>      ELSE<br/>        err$=\"country code: \"+LEFT$(iban$,2)<br/>      ENDIF<br/>\u00a0<br/>      IF match% PRINT \"  \"; ELSE PRINT \"in\";:err$=\"***error!*** invalid \"+err$<br/>      PRINT \"valid IBAN: \";iban$TAB(50)err$<br/>      ENDPROC<br/>\u00a0<br/>      DEF FNmod97(num$)<br/>      LOCAL mod$<br/>      mod$=LEFT$(num$,2)<br/>      num$=MID$(num$,3)<br/>      WHILE num$&gt;\"\"<br/>        mod$=RIGHT$(\"0\"+STR$(VAL(mod$+LEFT$(num$,7))MOD97),2)<br/>        num$=MID$(num$,8)<br/>      ENDWHILE<br/>      =VALmod$</pre>"}, {"lang": "Befunge", "loc": 8, "block": "<pre class=\"text highlighted_source\">&gt;&gt;\"\u00a0:NABI\"&gt;:#,_&gt;:~:\"`\"`48**-:55+-#v_$0::6g0&gt;&gt;8g-!\\7g18g-!*!v&gt;v&gt;&gt;<br/>&lt;&lt;_#v:#78#`8#+&lt;^+!!*-*84\\-9:g8:p8\\&lt;oo&gt;1#$-#&lt;0$&gt;&gt;&gt;#v_\"dilav\" ^#&lt;&lt;<br/>&gt;&gt;^ &gt;*-:20p9`9*1+55+**20g+\"a\"%10g1+00g%:4-!|^g6::_v#-*88:+1_vv&gt;&gt;<br/>&lt;&lt;^+`\"Z\"\\+`\\\"0\"\\*`\\\"A\"\\`\"9\":::\\-*86:g8p01:&lt;&lt;40p00_v#!--+99g5&lt;v&lt;&lt;<br/>&gt;&gt;\" si rebmun tahT\"&gt;:#,_                55+\".\",,@ &gt;0\"dilavni\"&gt;&gt;&gt;<br/>\"-(&amp;(/$$*$(*.-*.('$)*%0-&amp;**.$'(.'/.+,''&amp;&amp;*.)**&amp;,-.&amp;.(*(*-!(%01-)<br/>BFBBBBFFTNRRGGCCGCGGSSKSKSSDDHDHCPLPTLLLLPPAAVEIIAAAIEMMMNGMMMMI<br/>ERGAHRIONLSOTRZYBRLIKIWMZAEOKREUHSBTRIVTUKLEDGESTLTZESEDCOEKUTRL</pre>"}, {"lang": "Bracmat", "loc": 51, "block": "<pre class=\"text highlighted_source\">( ( IBAN-check<br/>  =   table country cd len N c<br/>    .       (AL.28) (AD.24) (AT.20) (AZ.28) (BE.16) (BH.22) (BA.20) (BR.29)<br/>            (BG.22) (CR.21) (HR.21) (CY.28) (CZ.24) (DK.18) (DO.28) (EE.20)<br/>            (FO.18) (FI.18) (FR.27) (GE.22) (DE.22) (GI.23) (GR.27) (GL.18)<br/>            (GT.28) (HU.28) (IS.26) (IE.22) (IL.23) (IT.27) (KZ.20) (KW.30)<br/>            (LV.21) (LB.28) (LI.21) (LT.20) (LU.20) (MK.19) (MT.31) (MR.27)<br/>            (MU.30) (MC.27) (MD.24) (ME.22) (NL.18) (NO.15) (PK.24) (PS.29)<br/>            (PL.28) (PT.25) (RO.24) (SM.27) (SA.24) (RS.22) (SK.24) (SI.19)<br/>            (ES.24) (SE.24) (CH.21) (TN.24) (TR.26) (AE.23) (GB.22) (VG.24)<br/>       \u00a0:\u00a0?table<br/>      &amp; @(!arg:?country [2\u00a0?cd [4\u00a0?arg)<br/>      &amp; str$(!arg\u00a0!country\u00a0!cd):?arg<br/>      &amp; (  \u00a0!table:? (!country.?len)\u00a0?<br/>          &amp;\u00a0:?N<br/>          &amp; ( @(\u00a0!arg<br/>              \u00a0:  \u00a0?<br/>                   (\u00a0%@?c\u00a0?<br/>                   &amp; (\u00a0!c:#<br/>                     |  \u00a0!c:~&lt;A:~&gt;Z<br/>                       &amp; asc$!c+-1*asc$A+10:?c<br/>                       &amp; 1+!len:?len<br/>                     |\u00a0!c:\" \"&amp;:?c<br/>                     | <br/>                     )<br/>                   &amp;\u00a0!N\u00a0!c:?N<br/>                   &amp; ~<br/>                   )<br/>               )<br/>            |   str$!N:?N:#<br/>              &amp; (   @(!N:? [!len)<br/>                  &amp; ( mod$(!N,97):1&amp;out$OK<br/>                    | out$\"wrong check digits\"<br/>                    )<br/>                | out$\"wrong length\"<br/>                )<br/>            |   @(!N:? ~#%?c\u00a0?)<br/>              &amp; out$(str$(\"invalid character: '\"\u00a0!c \"'\"))<br/>            )<br/>        | out$(str$(\"invalid country code: '\"\u00a0!country \"'\"))<br/>        )<br/>  )<br/>&amp; IBAN-check$\"GB82 WEST 1234 5698 7654 32 9\"<br/>&amp; IBAN-check$\"GX82 WEST 1234 5698 7654 32\"<br/>&amp; IBAN-check$\"GB82 WEST 1234 5698 7654 32\"<br/>&amp; IBAN-check$GB82WEST12345698765432<br/>&amp; IBAN-check$\"gb82 west 1234 5698 7654 32\"<br/>&amp; IBAN-check$\"GB82 TEST 1234 5698 7654 32\"<br/>&amp; IBAN-check$\"GB82 WEST 1243 5698 7654 32\"<br/>&amp; IBAN-check$\"GB82 west 1243 5698 7654 32\"<br/>);</pre>"}, {"lang": "C", "loc": 97, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;alloca.h&gt;</span><br/><span class=\"co2\">#include &lt;ctype.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;string.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define V(cc, exp) if (!strncmp(iban, cc, 2)) return len == exp</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Validate country code against expected length. */</span><br/><span class=\"kw4\">int</span> valid_cc<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>iban<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> len<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"AZ\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"BA\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"BG\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"HR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"CY\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"CZ\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"DO\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"EE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"FO\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"FI\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"GE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"DE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"GR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"GL\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"GT\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"HU\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"IE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"IL\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"IT\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"KZ\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"LV\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"LB\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"LI\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"LT\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"LU\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"MR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"MU\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"MC\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"MD\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"ME\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"NL\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"PK\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"PS\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"PL\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"RO\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"SM\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"SA\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"RS\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"SK\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"SI\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    V<span class=\"br0\">(</span><span class=\"st0\">\"ES\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"SE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"CH\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"TN\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"TR\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"AE\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"GB\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> V<span class=\"br0\">(</span><span class=\"st0\">\"VG\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Remove blanks from s in-place, return its new length. */</span><br/><span class=\"kw4\">int</span> strip<span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> m <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">while</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span><span class=\"sy0\">++</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        s<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> m<span class=\"br0\">]</span> <span class=\"sy0\">=</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        m <span class=\"sy0\">+=</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    s<span class=\"br0\">[</span>i <span class=\"sy0\">-</span> m<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> i <span class=\"sy0\">-</span> m<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Calculate the mod 97 of an arbitrarily large number (as a string). */</span><br/><span class=\"kw4\">int</span> mod97<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> len<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> parts <span class=\"sy0\">=</span> len <span class=\"sy0\">/</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span> rem<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"00\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> parts <span class=\"sy0\">+</span> <span class=\"br0\">(</span>len <span class=\"sy0\">%</span> <span class=\"nu0\">7</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strncpy.html\"><span class=\"kw3\">strncpy</span></a><span class=\"br0\">(</span>rem <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> s <span class=\"sy0\">+</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        j <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>rem<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span><span class=\"sy0\">;</span><br/>        rem<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> j <span class=\"sy0\">/</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> <span class=\"st0\">'0'</span><span class=\"sy0\">;</span><br/>        rem<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> j <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> <span class=\"st0\">'0'</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>rem<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> valid_iban<span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>iban<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> l <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> sz <span class=\"sy0\">=</span> strip<span class=\"br0\">(</span>iban<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>rot<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>trans<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Ensure upper alphanumeric input and count letters. */</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> sz<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/isdigit.html\"><span class=\"kw3\">isdigit</span></a><span class=\"br0\">(</span>iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/isupper.html\"><span class=\"kw3\">isupper</span></a><span class=\"br0\">(</span>iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        l <span class=\"sy0\">+=</span> <span class=\"sy0\">!!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/isupper.html\"><span class=\"kw3\">isupper</span></a><span class=\"br0\">(</span>iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>valid_cc<span class=\"br0\">(</span>iban<span class=\"sy0\">,</span> sz<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Move the first four characters to the end. */</span><br/>    rot <span class=\"sy0\">=</span> alloca<span class=\"br0\">(</span>sz<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strcpy.html\"><span class=\"kw3\">strcpy</span></a><span class=\"br0\">(</span>rot<span class=\"sy0\">,</span> iban <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strncpy.html\"><span class=\"kw3\">strncpy</span></a><span class=\"br0\">(</span>rot <span class=\"sy0\">+</span> sz <span class=\"sy0\">-</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> iban<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Allocate space for the transformed IBAN. */</span><br/>    trans <span class=\"sy0\">=</span> alloca<span class=\"br0\">(</span>sz <span class=\"sy0\">+</span> l<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    trans<span class=\"br0\">[</span>sz <span class=\"sy0\">+</span> l<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Convert A to 10, B to 11, etc. */</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> sz<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"sy0\">,</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/isdigit.html\"><span class=\"kw3\">isdigit</span></a><span class=\"br0\">(</span>rot<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            trans<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> rot<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            trans<span class=\"br0\">[</span>j<span class=\"br0\">]</span>   <span class=\"sy0\">=</span> <span class=\"br0\">(</span>rot<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">55</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> <span class=\"st0\">'0'</span><span class=\"sy0\">;</span><br/>            trans<span class=\"br0\">[</span><span class=\"sy0\">++</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>rot<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">55</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> <span class=\"st0\">'0'</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> mod97<span class=\"br0\">(</span>trans<span class=\"sy0\">,</span> sz <span class=\"sy0\">+</span> l<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> _<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>argv<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span>_<span class=\"sy0\">,</span> <span class=\"sy0\">*++</span>argv<span class=\"br0\">)</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s is\u00a0%svalid.<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">*</span>argv<span class=\"sy0\">,</span> valid_iban<span class=\"br0\">(</span><span class=\"sy0\">*</span>argv<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"in\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 77, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;boost/algorithm/string.hpp&gt;</span><br/><span class=\"co2\">#include &lt;map&gt;</span><br/><span class=\"co2\">#include &lt;algorithm&gt;</span><br/><span class=\"co2\">#include &lt;cctype&gt;</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> boost<span class=\"sy4\">::</span><span class=\"me2\">algorithm</span> <span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> isValid <span class=\"br0\">(</span> <span class=\"kw4\">const</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span> <span class=\"sy3\">&amp;</span>ibanstring <span class=\"br0\">)</span> <br/><span class=\"br0\">{</span><br/>   <span class=\"kw4\">static</span> std<span class=\"sy4\">::</span><span class=\"me2\">map</span><span class=\"sy1\">&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span>, <span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span> countrycodes <br/>                           <span class=\"br0\">{</span> <span class=\"br0\">{</span><span class=\"st0\">\"AL\"</span> , <span class=\"nu0\">28</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"AD\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"AT\"</span> , <span class=\"nu0\">20</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"AZ\"</span> , <span class=\"nu0\">28</span> <span class=\"br0\">}</span> ,<br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"BE\"</span> , <span class=\"nu0\">16</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"BH\"</span> , <span class=\"nu0\">22</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"BA\"</span> , <span class=\"nu0\">20</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"BR\"</span> , <span class=\"nu0\">29</span> <span class=\"br0\">}</span> ,<br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"BG\"</span> , <span class=\"nu0\">22</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"CR\"</span> , <span class=\"nu0\">21</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"HR\"</span> , <span class=\"nu0\">21</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"CY\"</span> , <span class=\"nu0\">28</span> <span class=\"br0\">}</span> ,<br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"CZ\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"DK\"</span> , <span class=\"nu0\">18</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"DO\"</span> , <span class=\"nu0\">28</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"EE\"</span> , <span class=\"nu0\">20</span> <span class=\"br0\">}</span> ,<br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"FO\"</span> , <span class=\"nu0\">18</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"FI\"</span> , <span class=\"nu0\">18</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"FR\"</span> , <span class=\"nu0\">27</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"GE\"</span> , <span class=\"nu0\">22</span> <span class=\"br0\">}</span> ,<br/>                           <span class=\"br0\">{</span><span class=\"st0\">\"DE\"</span> , <span class=\"nu0\">22</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"GI\"</span> , <span class=\"nu0\">23</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"GR\"</span> , <span class=\"nu0\">27</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"GL\"</span> , <span class=\"nu0\">18</span> <span class=\"br0\">}</span> ,<br/>                           <span class=\"br0\">{</span><span class=\"st0\">\"GT\"</span> , <span class=\"nu0\">28</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"HU\"</span> , <span class=\"nu0\">28</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"IS\"</span> , <span class=\"nu0\">26</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"IE\"</span> , <span class=\"nu0\">22</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"IL\"</span> , <span class=\"nu0\">23</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"IT\"</span> , <span class=\"nu0\">27</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"KZ\"</span> , <span class=\"nu0\">20</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"KW\"</span> , <span class=\"nu0\">30</span> <span class=\"br0\">}</span> ,<br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"LV\"</span> , <span class=\"nu0\">21</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"LB\"</span> , <span class=\"nu0\">28</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"LI\"</span> , <span class=\"nu0\">21</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"LT\"</span> , <span class=\"nu0\">20</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"LU\"</span> , <span class=\"nu0\">20</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"MK\"</span> , <span class=\"nu0\">19</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"MT\"</span> , <span class=\"nu0\">31</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"MR\"</span> , <span class=\"nu0\">27</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"MU\"</span> , <span class=\"nu0\">30</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"MC\"</span> , <span class=\"nu0\">27</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"MD\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"ME\"</span> , <span class=\"nu0\">22</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"NL\"</span> , <span class=\"nu0\">18</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"NO\"</span> , <span class=\"nu0\">15</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"PK\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"PS\"</span> , <span class=\"nu0\">29</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"PL\"</span> , <span class=\"nu0\">28</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"PT\"</span> , <span class=\"nu0\">25</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"RO\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"SM\"</span> , <span class=\"nu0\">27</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"SA\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"RS\"</span> , <span class=\"nu0\">22</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"SK\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"SI\"</span> , <span class=\"nu0\">19</span> <span class=\"br0\">}</span> , <br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"ES\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"SE\"</span> , <span class=\"nu0\">24</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"CH\"</span> , <span class=\"nu0\">21</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"TN\"</span> , <span class=\"nu0\">24</span> <span class=\"br0\">}</span> ,<br/>\t\t\t   <span class=\"br0\">{</span><span class=\"st0\">\"TR\"</span> , <span class=\"nu0\">26</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"AE\"</span> , <span class=\"nu0\">23</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"GB\"</span> , <span class=\"nu0\">22</span><span class=\"br0\">}</span> , <span class=\"br0\">{</span><span class=\"st0\">\"VG\"</span> , <span class=\"nu0\">24</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> teststring<span class=\"br0\">(</span> ibanstring <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   erase_all<span class=\"br0\">(</span> teststring , <span class=\"st0\">\" \"</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span> <span class=\"co1\">//defined in boost/algorithm/string.hpp</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> countrycodes.<span class=\"me1\">find</span><span class=\"br0\">(</span> teststring.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span> , <span class=\"nu0\">2</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> countrycodes.<span class=\"me1\">end</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <br/>      <span class=\"kw1\">return</span> <span class=\"kw2\">false</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> teststring.<span class=\"me1\">length</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> countrycodes<span class=\"br0\">[</span> teststring.<span class=\"me1\">substr</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span> , <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span> <br/>      <span class=\"kw1\">return</span> <span class=\"kw2\">false</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy3\">!</span>all<span class=\"br0\">(</span>teststring, is_alnum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>      <span class=\"kw1\">return</span> <span class=\"kw2\">false</span> <span class=\"sy4\">;</span><br/>   to_upper<span class=\"br0\">(</span> teststring <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">rotate</span><span class=\"br0\">(</span>teststring.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, teststring.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">+</span> <span class=\"nu0\">4</span>, teststring.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> numberstring <span class=\"sy4\">;</span><span class=\"co1\">//will contain the letter substitutions</span><br/>   <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">auto</span><span class=\"sy3\">&amp;</span> c <span class=\"sy4\">:</span> teststring<span class=\"br0\">)</span><br/>   <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">isdigit</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\t numberstring <span class=\"sy2\">+</span><span class=\"sy1\">=</span> c  <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"kw3\">isupper</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>\t numberstring <span class=\"sy2\">+</span><span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">to_string</span><span class=\"br0\">(</span><span class=\"kw2\">static_cast</span><span class=\"sy1\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy1\">&gt;</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy2\">-</span> <span class=\"nu0\">55</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"co1\">//implements a stepwise check for mod 97 in chunks of 9 at the first time</span><br/>   <span class=\"co1\">// , then in chunks of seven prepended by the last mod 97 operation converted</span><br/>   <span class=\"co1\">//to a string</span><br/>   <span class=\"kw4\">int</span> segstart <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">int</span> step <span class=\"sy1\">=</span> <span class=\"nu0\">9</span> <span class=\"sy4\">;</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> prepended <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">long</span> number <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">while</span> <span class=\"br0\">(</span> segstart  <span class=\"sy1\">&lt;</span> numberstring.<span class=\"me1\">length</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy2\">-</span> step <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      number <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">stol</span><span class=\"br0\">(</span> prepended <span class=\"sy2\">+</span> numberstring.<span class=\"me1\">substr</span><span class=\"br0\">(</span> segstart , step <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>      <span class=\"kw4\">int</span> remainder <span class=\"sy1\">=</span> number <span class=\"sy2\">%</span> <span class=\"nu0\">97</span> <span class=\"sy4\">;</span><br/>      prepended <span class=\"sy1\">=</span>  std<span class=\"sy4\">::</span><span class=\"me2\">to_string</span><span class=\"br0\">(</span> remainder <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> remainder <span class=\"sy1\">&lt;</span> <span class=\"nu0\">10</span> <span class=\"br0\">)</span> <br/>\t prepended <span class=\"sy1\">=</span> <span class=\"st0\">\"0\"</span> <span class=\"sy2\">+</span> prepended <span class=\"sy4\">;</span><br/>      segstart <span class=\"sy1\">=</span> segstart <span class=\"sy2\">+</span> step <span class=\"sy4\">;</span><br/>      step <span class=\"sy1\">=</span> <span class=\"nu0\">7</span> <span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><br/>   number <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">stol</span><span class=\"br0\">(</span> prepended <span class=\"sy2\">+</span> numberstring.<span class=\"me1\">substr</span><span class=\"br0\">(</span> segstart <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"br0\">(</span> number <span class=\"sy2\">%</span> <span class=\"nu0\">97</span> <span class=\"sy1\">==</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> SayValidity<span class=\"br0\">(</span><span class=\"kw4\">const</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy3\">&amp;</span> iban<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> iban <span class=\"sy1\">&lt;&lt;</span> <span class=\"br0\">(</span>isValid<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"sy4\">?</span> <span class=\"st0\">\" is \"</span> <span class=\"sy4\">:</span> <span class=\"st0\">\" is not \"</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"valid<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"br0\">)</span> <br/><span class=\"br0\">{</span><br/>   SayValidity<span class=\"br0\">(</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   SayValidity<span class=\"br0\">(</span><span class=\"st0\">\"GB82TEST12345698765432\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 119, "block": "<pre class=\"csharp highlighted_source\">    <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> IbanValidator <span class=\"sy0\">:</span> IValidateTypes<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">public</span> ValidationResult Validate<span class=\"br0\">(</span><span class=\"kw4\">string</span> <span class=\"kw1\">value</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"co1\">// Check if value is missing</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">IsNullOrEmpty</span><span class=\"br0\">(</span><span class=\"kw1\">value</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">ValueMissing</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">ValueTooSmall</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> countryCode <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToUpper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw4\">int</span> lengthForCountryCode<span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> countryCodeKnown <span class=\"sy0\">=</span> Lengths<span class=\"sy0\">.</span><span class=\"me1\">TryGetValue</span><span class=\"br0\">(</span>countryCode, <span class=\"kw1\">out</span> lengthForCountryCode<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>countryCodeKnown<span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">CountryCodeNotKnown</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"co1\">// Check length.</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">&lt;</span> lengthForCountryCode<span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">ValueTooSmall</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">&gt;</span> lengthForCountryCode<span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">ValueTooBig</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">value</span> <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">ToUpper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">var</span> newIban <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw1\">value</span><span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            newIban <span class=\"sy0\">=</span> Regex<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span>newIban, <span class=\"st_h\">@\"\\D\"</span>, match <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>match<span class=\"sy0\">.</span><span class=\"kw1\">Value</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span> <span class=\"nu0\">55</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> remainder <span class=\"sy0\">=</span> BigInteger<span class=\"sy0\">.</span><span class=\"me1\">Parse</span><span class=\"br0\">(</span>newIban<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>remainder <span class=\"sy0\">!=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">ValueFailsModule97Check</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">return</span> ValidationResult<span class=\"sy0\">.</span><span class=\"me1\">IsValid</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">enum</span> ValidationResult<br/>        <span class=\"br0\">{</span><br/>            IsValid,<br/>            ValueMissing,<br/>            ValueTooSmall,<br/>            ValueTooBig,<br/>            ValueFailsModule97Check,<br/>            CountryCodeNotKnown<br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">readonly</span> IDictionary<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span>, <span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> Lengths <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Dictionary<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span>, <span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"br0\">{</span><span class=\"st0\">\"AL\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"AD\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"AT\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"AZ\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"BE\"</span>, <span class=\"nu0\">16</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"BH\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"BA\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"BR\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"BG\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"CR\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"HR\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"CY\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"CZ\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"DK\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"DO\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"EE\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"FO\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"FI\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"FR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"GE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"DE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"GI\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"GR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"GL\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"GT\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"HU\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"IS\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"IE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"IL\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"IT\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"KZ\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"KW\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"LV\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"LB\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"LI\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"LT\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"LU\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"MK\"</span>, <span class=\"nu0\">19</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"MT\"</span>, <span class=\"nu0\">31</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"MR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"MU\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"MC\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"MD\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"ME\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"NL\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"NO\"</span>, <span class=\"nu0\">15</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"PK\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"PS\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"PL\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"PT\"</span>, <span class=\"nu0\">25</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"RO\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"SM\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"SA\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"RS\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"SK\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"SI\"</span>, <span class=\"nu0\">19</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"ES\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"SE\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"CH\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"TN\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"TR\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"AE\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"GB\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">\"VG\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span></pre>"}, {"lang": "Cach\u00e9 ObjectScript", "loc": 98, "block": "<pre class=\"text highlighted_source\">Class Utils.Validate [ Abstract ]<br/>{<br/>\u00a0<br/>ClassMethod VerifyIBAN(pIBAN As\u00a0%String = \"\") As\u00a0%Boolean<br/>{<br/>\t// remove spaces and define parts<br/>\tSet iban=$Translate(pIBAN, \" \")<br/>\tSet cc=$Extract(iban, 1, 2)<br/>\tSet cd=$Extract(iban, 3, 4)<br/>\tSet bban=$Extract(iban, 5, *)<br/>\u00a0<br/>\t// ensure IBAN is correct format<br/>\tIf $Match(iban, ..GetIBANPattern(cc))=0 Quit 0<br/>\u00a0<br/>\t// compare result and return<br/>\tQuit cd=..GetIBANCheckDigit(cc, bban)<br/>}<br/>\u00a0<br/>ClassMethod GetIBANCheckDigit(pCC As\u00a0%String, pBBAN As\u00a0%String) As\u00a0%Integer [ Internal, Private ]<br/>{<br/>\tSet str=pBBAN_pCC_\"00\"<br/>\tFor i=1:1 {<br/>\t\tSet chr=$Extract(str, i) If chr=\"\" Quit<br/>\t\tIf chr?1U Set $Extract(str, i)=$ASCII(chr)-55<br/>\t}<br/>\tSet cd=98-..GetModulus(str, 97)<br/>\tQuit $Select($Length(cd)=2: cd, 1: \"0\"_cd)<br/>}<br/>\u00a0<br/>ClassMethod GetModulus(pNum As\u00a0%Integer, pDiv As\u00a0%Integer) As\u00a0%Integer [ Internal, Private ]<br/>{<br/>\tWhile $Length(pNum)&gt;9 {<br/>\t\tSet $Extract(pNum, 1, 9)=$Extract(pNum, 1, 9)#pDiv<br/>\t}<br/>\tQuit pNum#pDiv<br/>}<br/>\u00a0<br/>ClassMethod GetIBANPattern(pCC As\u00a0%String = \"\") As\u00a0%String [ Internal, Private ]<br/>{<br/>\tQuit $Case(pCC, <br/>\t\t\"AL\": \"^AL\\d{10}[0-9A-Z]{16}$\", <br/>\t\t\"AD\": \"^AD\\d{10}[0-9A-Z]{12}$\", <br/>\t\t\"AT\": \"^AT\\d{18}$\", <br/>\t\t\"BH\": \"^BH\\d{2}[A-Z]{4}[0-9A-Z]{14}$\", <br/>\t\t\"BE\": \"^BE\\d{14}$\", <br/>\t\t\"BA\": \"^BA\\d{18}$\", <br/>\t\t\"BG\": \"^BG\\d{2}[A-Z]{4}\\d{6}[0-9A-Z]{8}$\", <br/>\t\t\"HR\": \"^HR\\d{19}$\", <br/>\t\t\"CY\": \"^CY\\d{10}[0-9A-Z]{16}$\", <br/>\t\t\"CZ\": \"^CZ\\d{22}$\", <br/>\t\t\"DK\": \"^DK\\d{16}$|^FO\\d{16}$|^GL\\d{16}$\", <br/>\t\t\"DO\": \"^DO\\d{2}[0-9A-Z]{4}\\d{20}$\", <br/>\t\t\"EE\": \"^EE\\d{18}$\", <br/>\t\t\"FI\": \"^FI\\d{16}$\", <br/>\t\t\"FR\": \"^FR\\d{12}[0-9A-Z]{11}\\d{2}$\", <br/>\t\t\"GE\": \"^GE\\d{2}[A-Z]{2}\\d{16}$\", <br/>\t\t\"DE\": \"^DE\\d{20}$\", <br/>\t\t\"GI\": \"^GI\\d{2}[A-Z]{4}[0-9A-Z]{15}$\", <br/>\t\t\"GR\": \"^GR\\d{9}[0-9A-Z]{16}$\", <br/>\t\t\"HU\": \"^HU\\d{26}$\", <br/>\t\t\"IS\": \"^IS\\d{24}$\", <br/>\t\t\"IE\": \"^IE\\d{2}[A-Z]{4}\\d{14}$\", <br/>\t\t\"IL\": \"^IL\\d{21}$\", <br/>\t\t\"IT\": \"^IT\\d{2}[A-Z]\\d{10}[0-9A-Z]{12}$\", <br/>\t\t\"KZ\": \"^[A-Z]{2}\\d{5}[0-9A-Z]{13}$\", <br/>\t\t\"KW\": \"^KW\\d{2}[A-Z]{4}22!$\", <br/>\t\t\"LV\": \"^LV\\d{2}[A-Z]{4}[0-9A-Z]{13}$\", <br/>\t\t\"LB\": \"^LB\\d{6}[0-9A-Z]{20}$\", <br/>\t\t\"LI\": \"^LI\\d{7}[0-9A-Z]{12}$\", <br/>\t\t\"LT\": \"^LT\\d{18}$\", <br/>\t\t\"LU\": \"^LU\\d{5}[0-9A-Z]{13}$\", <br/>\t\t\"MK\": \"^MK\\d{5}[0-9A-Z]{10}\\d{2}$\", <br/>\t\t\"MT\": \"^MT\\d{2}[A-Z]{4}\\d{5}[0-9A-Z]{18}$\", <br/>\t\t\"MR\": \"^MR13\\d{23}$\", <br/>\t\t\"MU\": \"^MU\\d{2}[A-Z]{4}\\d{19}[A-Z]{3}$\", <br/>\t\t\"MC\": \"^MC\\d{12}[0-9A-Z]{11}\\d{2}$\", <br/>\t\t\"ME\": \"^ME\\d{20}$\", <br/>\t\t\"NL\": \"^NL\\d{2}[A-Z]{4}\\d{10}$\", <br/>\t\t\"NO\": \"^NO\\d{13}$\", <br/>\t\t\"PL\": \"^PL\\d{10}[0-9A-Z]{,16}n$\", <br/>\t\t\"PT\": \"^PT\\d{23}$\", <br/>\t\t\"RO\": \"^RO\\d{2}[A-Z]{4}[0-9A-Z]{16}$\", <br/>\t\t\"SM\": \"^SM\\d{2}[A-Z]\\d{10}[0-9A-Z]{12}$\", <br/>\t\t\"SA\": \"^SA\\d{4}[0-9A-Z]{18}$\", <br/>\t\t\"RS\": \"^RS\\d{20}$\", <br/>\t\t\"SK\": \"^SK\\d{22}$\", <br/>\t\t\"SI\": \"^SI\\d{17}$\", <br/>\t\t\"ES\": \"^ES\\d{22}$\", <br/>\t\t\"SE\": \"^SE\\d{22}$\", <br/>\t\t\"CH\": \"^CH\\d{7}[0-9A-Z]{12}$\", <br/>\t\t\"TN\": \"^TN59\\d{20}$\", <br/>\t\t\"TR\": \"^TR\\d{7}[0-9A-Z]{17}$\", <br/>\t\t\"AE\": \"^AE\\d{21}$\", <br/>\t\t\"GB\": \"^GB\\d{2}[A-Z]{4}\\d{14}$\", <br/>\t\t: \" \")<br/>}<br/>\u00a0<br/>}</pre>"}, {"lang": "Clojure", "loc": 24, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">def</span> explen<br/>  <span class=\"br0\">{</span><span class=\"st0\">\"AL\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"AD\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"AT\"</span> <span class=\"nu0\">20</span> <span class=\"st0\">\"AZ\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"BE\"</span> <span class=\"nu0\">16</span> <span class=\"st0\">\"BH\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"BA\"</span> <span class=\"nu0\">20</span> <span class=\"st0\">\"BR\"</span> <span class=\"nu0\">29</span><br/>   <span class=\"st0\">\"BG\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"CR\"</span> <span class=\"nu0\">21</span> <span class=\"st0\">\"HR\"</span> <span class=\"nu0\">21</span> <span class=\"st0\">\"CY\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"CZ\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"DK\"</span> <span class=\"nu0\">18</span> <span class=\"st0\">\"DO\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"EE\"</span> <span class=\"nu0\">20</span><br/>   <span class=\"st0\">\"FO\"</span> <span class=\"nu0\">18</span> <span class=\"st0\">\"FI\"</span> <span class=\"nu0\">18</span> <span class=\"st0\">\"FR\"</span> <span class=\"nu0\">27</span> <span class=\"st0\">\"GE\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"DE\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"GI\"</span> <span class=\"nu0\">23</span> <span class=\"st0\">\"GR\"</span> <span class=\"nu0\">27</span> <span class=\"st0\">\"GL\"</span> <span class=\"nu0\">18</span><br/>   <span class=\"st0\">\"GT\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"HU\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"IS\"</span> <span class=\"nu0\">26</span> <span class=\"st0\">\"IE\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"IL\"</span> <span class=\"nu0\">23</span> <span class=\"st0\">\"IT\"</span> <span class=\"nu0\">27</span> <span class=\"st0\">\"KZ\"</span> <span class=\"nu0\">20</span> <span class=\"st0\">\"KW\"</span> <span class=\"nu0\">30</span><br/>   <span class=\"st0\">\"LV\"</span> <span class=\"nu0\">21</span> <span class=\"st0\">\"LB\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"LI\"</span> <span class=\"nu0\">21</span> <span class=\"st0\">\"LT\"</span> <span class=\"nu0\">20</span> <span class=\"st0\">\"LU\"</span> <span class=\"nu0\">20</span> <span class=\"st0\">\"MK\"</span> <span class=\"nu0\">19</span> <span class=\"st0\">\"MT\"</span> <span class=\"nu0\">31</span> <span class=\"st0\">\"MR\"</span> <span class=\"nu0\">27</span><br/>   <span class=\"st0\">\"MU\"</span> <span class=\"nu0\">30</span> <span class=\"st0\">\"MC\"</span> <span class=\"nu0\">27</span> <span class=\"st0\">\"MD\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"ME\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"NL\"</span> <span class=\"nu0\">18</span> <span class=\"st0\">\"NO\"</span> <span class=\"nu0\">15</span> <span class=\"st0\">\"PK\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"PS\"</span> <span class=\"nu0\">29</span><br/>   <span class=\"st0\">\"PL\"</span> <span class=\"nu0\">28</span> <span class=\"st0\">\"PT\"</span> <span class=\"nu0\">25</span> <span class=\"st0\">\"RO\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"SM\"</span> <span class=\"nu0\">27</span> <span class=\"st0\">\"SA\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"RS\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"SK\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"SI\"</span> <span class=\"nu0\">19</span><br/>   <span class=\"st0\">\"ES\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"SE\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"CH\"</span> <span class=\"nu0\">21</span> <span class=\"st0\">\"TN\"</span> <span class=\"nu0\">24</span> <span class=\"st0\">\"TR\"</span> <span class=\"nu0\">26</span> <span class=\"st0\">\"AE\"</span> <span class=\"nu0\">23</span> <span class=\"st0\">\"GB\"</span> <span class=\"nu0\">22</span> <span class=\"st0\">\"VG\"</span> <span class=\"nu0\">24</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> valid<span class=\"sy0\">-</span>iban? <span class=\"br0\">[</span>iban<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>iban <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"kw1\">str</span> <span class=\"br0\">(</span><span class=\"kw1\">remove</span> #<span class=\"br0\">{</span>\\space \\tab<span class=\"br0\">}</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>      <span class=\"co1\">; Ensure upper alphanumeric input.</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"kw1\">re-find</span> #<span class=\"st0\">\"^[<span class=\"es0\">\\d</span>A-Z]+$\"</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span> false<br/>      <span class=\"co1\">; Validate country code against expected length.</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">not</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>explen <span class=\"br0\">(</span>subs iban <span class=\"nu0\">0</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">count</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span> false<br/>     \u00a0:<span class=\"me1\">else</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>rot   <span class=\"br0\">(</span>flatten <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"kw1\">conj</span> <span class=\"br0\">(</span><span class=\"kw1\">split-at</span> <span class=\"nu0\">4</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            trans <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span>read<span class=\"sy0\">-</span>string <span class=\"br0\">(</span><span class=\"kw1\">str</span> <span class=\"st0\">\"36r\"</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span> rot<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span>mod <span class=\"br0\">(</span>bigint <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"kw1\">str</span> trans<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">97</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>prn <span class=\"br0\">(</span>valid<span class=\"sy0\">-</span>iban? <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><span class=\"br0\">)</span>  <span class=\"co1\">; true</span><br/>     <span class=\"br0\">(</span>valid<span class=\"sy0\">-</span>iban? <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">; false</span></pre>"}, {"lang": "COBOL", "loc": 161, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> iban-<span class=\"kw1\">main</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  iban                    <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  iban-flag               <span class=\"kw3\">PIC</span> X<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  is-valid            <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"Y\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">FALSE</span> <span class=\"st0\">\"N\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       main-<span class=\"kw3\">line</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span> <span class=\"kw2\">TO</span> iban<br/>           <span class=\"kw2\">PERFORM</span> display-validity<br/>\u00a0<br/>           <span class=\"kw2\">MOVE</span> <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span> <span class=\"kw2\">TO</span> iban<br/>           <span class=\"kw2\">PERFORM</span> display-validity<br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span><br/>       display-validity<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"validate-iban\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> iban<span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> iban-flag<br/>           <span class=\"kw1\">IF</span> is-valid<br/>               <span class=\"kw2\">DISPLAY</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"st0\">\" is valid.\"</span><br/>           <span class=\"kw3\">ELSE</span><br/>               <span class=\"kw2\">DISPLAY</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"st0\">\" is not valid.\"</span><br/>           END-<span class=\"kw1\">IF</span><br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> iban-<span class=\"kw1\">main</span><span class=\"sy0\">.</span><br/>\u00a0<br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> validate-iban<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  country-lengths-<span class=\"kw3\">area</span>    <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"AD24AE23AL28AT20AZ28BA20BE16\"</span><br/>           &amp; <span class=\"st0\">\"BG22BH22BR29CH21CR21CY28CZ24DE22DK18DO28EE20ES24FI18FO18F\"</span><br/>           &amp; <span class=\"st0\">\"R27GB22GE22GI23GL18GR27GT28HR21HU28IE22IL23IS26IT27KW30KZ\"</span><br/>           &amp; <span class=\"st0\">\"20LB28LI21LT20LU20LV21MC27MD24ME22MK19MR27MT31MU30NL18NO1\"</span><br/>           &amp; <span class=\"st0\">\"5PK24PL28PS29PT25RO24RS22SA24SE24SI19SK24SM27TN24TR26VG24\"</span><br/>           <span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  country-lengths     <span class=\"kw3\">OCCURS</span> <span class=\"nu0\">64</span> <span class=\"kw2\">TIMES</span><br/>                                   <span class=\"kw3\">INDEXED</span> <span class=\"kw3\">BY</span> country-lengths-idx<span class=\"sy0\">.</span><br/>               <span class=\"nu0\">05</span>  country-<span class=\"kw1\">code</span>    <span class=\"kw3\">PIC</span> XX<span class=\"sy0\">.</span><br/>               <span class=\"nu0\">05</span>  country-len     <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  offset                  <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  i                       <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  len                     <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  iban                    <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  valid-flag              <span class=\"kw3\">PIC</span> X<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  is-valid            <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"Y\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">FALSE</span> <span class=\"st0\">\"N\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> iban<span class=\"sy0\">,</span> valid-flag<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">UPPER-CASE</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> iban<br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"remove-spaces\"</span> <span class=\"kw3\">USING</span> iban<br/>\u00a0<br/>           *&gt; <span class=\"kw1\">Check</span> <span class=\"kw1\">if</span> country-<span class=\"kw1\">code</span> <span class=\"kw3\">and</span> <span class=\"kw4\">length</span> are correct<br/>           <span class=\"kw2\">INITIALIZE</span> len<br/>           <span class=\"kw1\">INSPECT</span> iban <span class=\"kw2\">TALLYING</span> len <span class=\"kw3\">FOR</span> <span class=\"kw3\">CHARACTERS</span> <span class=\"kw3\">BEFORE</span> <span class=\"kw3\">SPACE</span><br/>           <span class=\"kw3\">SET</span> country-lengths-idx <span class=\"kw2\">TO</span> <span class=\"nu0\">1</span><br/>           <span class=\"kw1\">SEARCH</span> country-lengths<br/>               <span class=\"kw3\">AT</span> <span class=\"kw3\">END</span><br/>                   <span class=\"kw3\">SET</span> is-valid <span class=\"kw2\">TO</span> <span class=\"kw3\">FALSE</span><br/>                   GOBACK<br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> country-<span class=\"kw1\">code</span> <span class=\"br0\">(</span>country-lengths-idx<span class=\"br0\">)</span> <span class=\"sy0\">=</span> iban <span class=\"br0\">(</span><span class=\"nu0\">1</span>:<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                   <span class=\"kw1\">IF</span> country-len <span class=\"br0\">(</span>country-lengths-idx<span class=\"br0\">)</span> <span class=\"kw3\">NOT</span> <span class=\"sy0\">=</span> len<br/>                       <span class=\"kw3\">SET</span> is-valid <span class=\"kw2\">TO</span> <span class=\"kw3\">FALSE</span><br/>                       GOBACK<br/>                   END-<span class=\"kw1\">IF</span><br/>           END-<span class=\"kw1\">SEARCH</span><br/>\u00a0<br/>           <span class=\"kw2\">CALL</span> <span class=\"st0\">\"create-iban-number\"</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">CONTENT</span> len<span class=\"sy0\">,</span> <span class=\"kw3\">REFERENCE</span> iban<br/>\u00a0<br/>           *&gt; <span class=\"kw4\">Mod</span> <span class=\"nu0\">97</span> <span class=\"kw3\">number</span> formed<span class=\"sy0\">.</span><br/>           <span class=\"kw1\">IF</span> <span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">MOD</span><span class=\"br0\">(</span>iban<span class=\"sy0\">,</span> <span class=\"nu0\">97</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>               <span class=\"kw3\">SET</span> is-valid <span class=\"kw2\">TO</span> <span class=\"kw3\">TRUE</span><br/>           <span class=\"kw3\">ELSE</span><br/>               <span class=\"kw3\">SET</span> is-valid <span class=\"kw2\">TO</span> <span class=\"kw3\">FALSE</span><br/>           END-<span class=\"kw1\">IF</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> remove-<span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  i                       <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  offset                  <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  str                     <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> str<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">INITIALIZE</span> offset<br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> i <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> i &gt; <span class=\"nu0\">50</span><br/>               <span class=\"kw2\">EVALUATE</span> <span class=\"kw3\">TRUE</span><br/>                   <span class=\"kw3\">WHEN</span> str <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">SPACE</span><br/>                       <span class=\"kw2\">ADD</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> offset<br/>\u00a0<br/>                   <span class=\"kw3\">WHEN</span> offset <span class=\"kw3\">NOT</span> <span class=\"sy0\">=</span> <span class=\"kw3\">ZERO</span><br/>                       <span class=\"kw2\">MOVE</span> str <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> str <span class=\"br0\">(</span>i<span class=\"sy0\"> - </span>offset:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>               END-<span class=\"kw2\">EVALUATE</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">SPACES</span> <span class=\"kw2\">TO</span> str <span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"sy0\"> - </span>offset<span class=\"sy0\"> + </span><span class=\"nu0\">1</span>:<span class=\"br0\">)</span><br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> remove-<span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>\u00a0<br/>\u00a0<br/>       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> create-iban-<span class=\"kw3\">number</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  first-four              <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  iban-num                <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  digit-num               <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span>       <br/>\u00a0<br/>       <span class=\"nu0\">01</span>  i                       <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  letter-num              <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  len                     <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  iban                    <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> len<span class=\"sy0\">,</span> iban<span class=\"sy0\">.</span><br/>           *&gt; <span class=\"kw2\">Move</span> <span class=\"kw3\">characters</span> <span class=\"kw2\">into</span> <span class=\"kw3\">final</span> positions<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> iban <span class=\"br0\">(</span><span class=\"nu0\">1</span>:<span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> first-four<br/>           <span class=\"kw2\">MOVE</span> iban <span class=\"br0\">(</span><span class=\"nu0\">5</span>:<span class=\"br0\">)</span> <span class=\"kw2\">TO</span> iban<br/>           <span class=\"kw2\">MOVE</span> first-four <span class=\"kw2\">TO</span> iban <span class=\"br0\">(</span>len<span class=\"sy0\"> - </span><span class=\"nu0\">3</span>:<span class=\"br0\">)</span><br/>\u00a0<br/>           *&gt; Convert letters <span class=\"kw2\">to</span> numbers<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">INITIALIZE</span> iban-num<span class=\"sy0\">,</span> digit-num <span class=\"kw3\">ALL</span> <span class=\"kw2\">TO</span> <span class=\"kw3\">VALUE</span><br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> i <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span><br/>                   <span class=\"kw2\">UNTIL</span> i &gt; len <span class=\"kw3\">OR</span> iban <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw3\">SPACE</span><br/>               <span class=\"kw1\">IF</span> iban <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw3\">IS</span> <span class=\"kw3\">NUMERIC</span><br/>                   <span class=\"kw2\">MOVE</span> iban <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> iban-num <span class=\"br0\">(</span>digit-num:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                   <span class=\"kw2\">ADD</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> digit-num<br/>               <span class=\"kw3\">ELSE</span><br/>                   <span class=\"kw2\">COMPUTE</span> letter-num <span class=\"sy0\">=</span><br/>                       <span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">ORD</span><span class=\"br0\">(</span>iban <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\"> - </span><span class=\"kw3\">FUNCTION</span> <span class=\"kw4\">ORD</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\"> + </span><span class=\"nu0\">10</span><br/>                   <span class=\"kw2\">MOVE</span> letter-num <span class=\"kw2\">TO</span> iban-num <span class=\"br0\">(</span>digit-num:<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>                   <span class=\"kw2\">ADD</span> <span class=\"nu0\">2</span> <span class=\"kw2\">TO</span> digit-num<br/>               END-<span class=\"kw1\">IF</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>           <span class=\"kw2\">MOVE</span> iban-num <span class=\"kw2\">TO</span> iban<br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> create-iban-<span class=\"kw3\">number</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">PROGRAM</span> validate-iban<span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 63, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"co1\">;;</span><br/><span class=\"co1\">;; List of the IBAN code lengths per country.</span><br/><span class=\"co1\">;;</span><br/><span class=\"br0\">(</span>defvar *IBAN-code-<span class=\"kw1\">length</span>* '<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">15</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                             <span class=\"br0\">(</span><span class=\"nu0\">16</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                             <span class=\"br0\">(</span><span class=\"nu0\">18</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span> <span class=\"st0\">\"FO\"</span> <span class=\"st0\">\"FI\"</span> <span class=\"st0\">\"GL\"</span> <span class=\"st0\">\"NL\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">19</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span> <span class=\"st0\">\"SI\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">20</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span> <span class=\"st0\">\"BA\"</span> <span class=\"st0\">\"EE\"</span> <span class=\"st0\">\"KZ\"</span> <span class=\"st0\">\"LT\"</span> <span class=\"st0\">\"LU\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">21</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span> <span class=\"st0\">\"HR\"</span> <span class=\"st0\">\"LV\"</span> <span class=\"st0\">\"LI\"</span> <span class=\"st0\">\"CH\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">22</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span> <span class=\"st0\">\"BG\"</span> <span class=\"st0\">\"GE\"</span> <span class=\"st0\">\"DE\"</span> <span class=\"st0\">\"IE\"</span> <span class=\"st0\">\"ME\"</span> <span class=\"st0\">\"RS\"</span> <span class=\"st0\">\"GB\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">23</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span> <span class=\"st0\">\"IL\"</span> <span class=\"st0\">\"AE\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">24</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span> <span class=\"st0\">\"CZ\"</span> <span class=\"st0\">\"MD\"</span> <span class=\"st0\">\"PK\"</span> <span class=\"st0\">\"RO\"</span> <span class=\"st0\">\"SA\"</span> <span class=\"st0\">\"SK\"</span> <span class=\"st0\">\"ES\"</span> <span class=\"st0\">\"SE\"</span> <span class=\"st0\">\"TN\"</span> <span class=\"st0\">\"VG\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">25</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">26</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span> <span class=\"st0\">\"TR\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">27</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span> <span class=\"st0\">\"GR\"</span> <span class=\"st0\">\"IT\"</span> <span class=\"st0\">\"MR\"</span> <span class=\"st0\">\"MC\"</span> <span class=\"st0\">\"SM\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">28</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span> <span class=\"st0\">\"AZ\"</span> <span class=\"st0\">\"CY\"</span> <span class=\"st0\">\"DO\"</span> <span class=\"st0\">\"GT\"</span> <span class=\"st0\">\"HU\"</span> <span class=\"st0\">\"LB\"</span> <span class=\"st0\">\"PL\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">29</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span> <span class=\"st0\">\"PS\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">30</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span> <span class=\"st0\">\"MU\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">31</span> <span class=\"sy0\">.</span> <span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;;</span><br/><span class=\"co1\">;; The IBAN-character function verifies whether the number contains the correct characters only. There is</span><br/><span class=\"co1\">;; a built in function to verify for alphanumeric characters, but it includes characters beyond ASCII range.</span><br/><span class=\"co1\">;;</span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> IBAN-characters <span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>flet <span class=\"br0\">(</span><span class=\"br0\">(</span>valid-alphanum <span class=\"br0\">(</span>ch<span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>char<span class=\"sy0\">&lt;=</span> #\\A ch<span class=\"br0\">)</span><br/>                    <span class=\"br0\">(</span>char<span class=\"sy0\">&gt;=</span> #\\Z ch<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>char<span class=\"sy0\">&lt;=</span> #\\<span class=\"nu0\">0</span> ch<span class=\"br0\">)</span><br/>                    <span class=\"br0\">(</span>char<span class=\"sy0\">&gt;=</span> #\\<span class=\"nu0\">9</span> ch<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>loop for char across iban<br/>          always <span class=\"br0\">(</span>valid-alphanum char<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;;</span><br/><span class=\"co1\">;; The function IBAN-length verifies that the length of the number is correct. The code lengths</span><br/><span class=\"co1\">;; are retrieved from the table *IBAN-code-lengths*.</span><br/><span class=\"co1\">;;</span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> IBAN-<span class=\"kw1\">length</span> <span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop <span class=\"sy0\">:</span><span class=\"me1\">for</span>  <span class=\"br0\">(</span>len <span class=\"sy0\">.</span> country<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">in</span> *IBAN-code-<span class=\"kw1\">length</span>*<br/>        <span class=\"sy0\">:</span><span class=\"me1\">with</span> iban-country <span class=\"sy0\">=</span> <span class=\"br0\">(</span>subseq iban <span class=\"nu0\">0</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>        <span class=\"sy0\">:</span><span class=\"kw1\">do</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span>find iban-country country <span class=\"sy0\">:</span><span class=\"me1\">test</span> #'string<span class=\"sy0\">=</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> len <span class=\"br0\">(</span><span class=\"kw1\">length</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;;</span><br/><span class=\"co1\">;; The function IBAN-to-integer converts an IBAN code into an integer number.</span><br/><span class=\"co1\">;; Note: The conversion follows the rules stated in the wiki page.</span><br/><span class=\"co1\">;;</span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> IBAN-to-<span class=\"kw1\">integer</span> <span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>character-base <span class=\"br0\">(</span>- <span class=\"br0\">(</span>char-code #\\A<span class=\"br0\">)</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">parse-integer</span> <br/>      <span class=\"br0\">(</span>format <span class=\"kw1\">nil</span> <span class=\"st0\">\"~{~a~}\"</span> <span class=\"br0\">(</span>map '<span class=\"kw1\">list</span> #'<span class=\"br0\">(</span><span class=\"kw1\">lambda</span><span class=\"br0\">(</span>X<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>alpha-char-p X<span class=\"br0\">)</span> <span class=\"br0\">(</span>- <span class=\"br0\">(</span>char-code X<span class=\"br0\">)</span> character-base<span class=\"br0\">)</span> X <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                                      <span class=\"br0\">(</span>concatenate 'string <span class=\"br0\">(</span>subseq iban <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>subseq iban <span class=\"nu0\">0</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">;;</span><br/><span class=\"co1\">;; The function IBAN-verify checks that the code contains right character set, has the</span><br/><span class=\"co1\">;; country specific length and has the correct check sum.</span><br/><span class=\"co1\">;;</span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> IBAN-verify <span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>flet <span class=\"br0\">(</span><span class=\"br0\">(</span>validp <span class=\"br0\">(</span>X<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span>IBAN-characters X<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span>IBAN-<span class=\"kw1\">length</span> X<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">(</span>mod <span class=\"br0\">(</span>IBAN-to-<span class=\"kw1\">integer</span> X<span class=\"br0\">)</span> <span class=\"nu0\">97</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>validp <span class=\"br0\">(</span><span class=\"kw1\">remove</span> #\\Space iban<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 37, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">regex</span><span class=\"sy0\">,</span> std.<span class=\"me1\">conv</span><span class=\"sy0\">,</span> std.<span class=\"me1\">bigint</span><span class=\"sy0\">,</span><br/>       std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">ascii</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">immutable</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"kw4\">string</span><span class=\"br0\">]</span> country2len<span class=\"sy0\">;</span><br/><span class=\"kw4\">static</span> <span class=\"kw2\">this</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    country2len <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">\"AL\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AD\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AT\"</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AZ\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"BH\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BA\"</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BG\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"HR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CY\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"CZ\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"DK\"</span><span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"DO\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"EE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FO\"</span><span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FI\"</span><span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"GE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"DE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GI\"</span><span class=\"sy0\">:</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GL\"</span><span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GT\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"HU\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"IS\"</span><span class=\"sy0\">:</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IL\"</span><span class=\"sy0\">:</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IT\"</span><span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"KZ\"</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"KW\"</span><span class=\"sy0\">:</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LV\"</span><span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"LB\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LI\"</span><span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LT\"</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LU\"</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MK\"</span><span class=\"sy0\">:</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MT\"</span><span class=\"sy0\">:</span><span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"MU\"</span><span class=\"sy0\">:</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MC\"</span><span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MD\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"ME\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"NL\"</span><span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"NO\"</span><span class=\"sy0\">:</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PK\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"PS\"</span><span class=\"sy0\">:</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PL\"</span><span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PT\"</span><span class=\"sy0\">:</span><span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"st0\">\"RO\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SM\"</span><span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SA\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"RS\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"SK\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SI\"</span><span class=\"sy0\">:</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"st0\">\"ES\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CH\"</span><span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"TN\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"TR\"</span><span class=\"sy0\">:</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span><br/>    <span class=\"st0\">\"AE\"</span><span class=\"sy0\">:</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GB\"</span><span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"VG\"</span><span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">bool</span> validIBAN<span class=\"br0\">(</span><span class=\"kw4\">string</span> iban<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// Ensure upper alphanumeric input.</span><br/>    iban <span class=\"sy0\">=</span> iban.<span class=\"me1\">removechars</span><span class=\"br0\">(</span>whitespace<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>iban.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"co4\">r\"^[\\dA-Z]+$\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Validate country code against expected length.</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>iban.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> country2len<span class=\"br0\">[</span>iban<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// Shift and convert. BASE 36: 0..9,A..Z -&gt; 0..35.</span><br/>    iban <span class=\"sy0\">=</span> iban<span class=\"br0\">[</span><span class=\"nu0\">4</span> <span class=\"sy0\">..</span> $<span class=\"br0\">]</span> <span class=\"sy0\">~</span> iban<span class=\"br0\">[</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> iban.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>c <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span>c<span class=\"br0\">]</span>.<span class=\"me1\">to</span><span class=\"sy0\">!</span><span class=\"kw4\">int</span><span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span>.<span class=\"me1\">text</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span>.<span class=\"me1\">BigInt</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>account<span class=\"sy0\">;</span> <span class=\"br0\">[</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><span class=\"sy0\">,</span><br/>                       <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        writefln<span class=\"br0\">(</span><span class=\"st0\">\"%s validation is:\u00a0%s\"</span><span class=\"sy0\">,</span> account<span class=\"sy0\">,</span> account.<span class=\"me1\">validIBAN</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elixir", "loc": 36, "block": "<pre class=\"text highlighted_source\">defmodule IBAN do<br/>  @len\u00a0%{ AL: 28, AD: 24, AT: 20, AZ: 28, BE: 16, BH: 22, BA: 20, BR: 29,<br/>          BG: 22, CR: 21, HR: 21, CY: 28, CZ: 24, DK: 18, DO: 28, EE: 20,<br/>          FO: 18, FI: 18, FR: 27, GE: 22, DE: 22, GI: 23, GR: 27, GL: 18,<br/>          GT: 28, HU: 28, IS: 26, IE: 22, IL: 23, IT: 27, KZ: 20, KW: 30,<br/>          LV: 21, LB: 28, LI: 21, LT: 20, LU: 20, MK: 19, MT: 31, MR: 27,<br/>          MU: 30, MC: 27, MD: 24, ME: 22, NL: 18, NO: 15, PK: 24, PS: 29,<br/>          PL: 28, PT: 25, RO: 24, SM: 27, SA: 24, RS: 22, SK: 24, SI: 19,<br/>          ES: 24, SE: 24, CH: 21, TN: 24, TR: 26, AE: 23, GB: 22, VG: 24 }<br/>\u00a0<br/>  def valid?(iban) do<br/>    iban = String.replace(iban, ~r/\\s/, \"\")<br/>    if Regex.match?(~r/^[\\dA-Z]+$/, iban) do<br/>      cc = String.slice(iban, 0..1) |&gt; String.to_atom<br/>      if String.length(iban) == @len[cc] do<br/>        {left, right} = String.split_at(iban, 4)<br/>        num = String.codepoints(right &lt;&gt; left)<br/>              |&gt; Enum.map_join(fn c -&gt; String.to_integer(c,36) end)<br/>              |&gt; String.to_integer<br/>        rem(num,97) == 1<br/>      else<br/>        false<br/>      end<br/>    else<br/>      false<br/>    end<br/>  end<br/>end<br/>\u00a0<br/>[ \"GB82 WEST 1234 5698 7654 32\",<br/>  \"gb82 west 1234 5698 7654 32\",<br/>  \"GB82 WEST 1234 5698 7654 320\",<br/>  \"GB82WEST12345698765432\",<br/>  \"GB82 TEST 1234 5698 7654 32\",<br/>  \"ZZ12 3456 7890 1234 5678 12\"  ]<br/>|&gt; Enum.each(fn iban -&gt; IO.puts \"#{IBAN.valid?(iban)}\\t#{iban}\" end)</pre>"}, {"lang": "F#", "loc": 52, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Text</span>.<span class=\"me1\">RegularExpressions</span><br/>\u00a0<br/><span class=\"co1\">// A little utility to thread a negative test result (Option.None) through a</span><br/><span class=\"co1\">// pipeline of tests</span><br/><span class=\"kw1\">let</span> <span class=\"kw1\">inline</span> <span class=\"br0\">(</span>|~<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> valOption proc <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> valOption <span class=\"kw1\">with</span><br/>    | Some<span class=\"br0\">(</span>value<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> proc value<br/>    | None <span class=\"sy0\">-&gt;</span> None<br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> iban <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> argv.<span class=\"me1\">Length</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">else</span> argv.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    iban<br/>    <span class=\"sy0\">|&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> iban <span class=\"sy0\">-&gt;</span>     <span class=\"co1\">// Check for illegal characters</span><br/>            <span class=\"kw1\">if</span> Regex.<span class=\"me1\">IsMatch</span><span class=\"br0\">(</span>iban, <span class=\"st_h\">@\"[^0-9A-Za-z ]\"</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> None <span class=\"kw1\">else</span> Some<span class=\"br0\">(</span>iban.<span class=\"me1\">ToUpper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    |~<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> iban <span class=\"sy0\">-&gt;</span>    <span class=\"co1\">// Check length per country code</span><br/>            <span class=\"kw1\">let</span> lengthPerCountry <span class=\"sy0\">=</span><br/>                <span class=\"kw4\">dict</span> <span class=\"br0\">[</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AZ\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span>, <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BA\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"BG\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"HR\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CY\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CZ\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DO\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"EE\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"FO\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"FI\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GL\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"GT\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"HU\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IL\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IT\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"KZ\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"LV\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LB\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LI\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LT\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LU\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span>, <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span>, <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"MU\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MC\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MD\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"ME\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"NL\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span>, <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PK\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PS\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"PL\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"RO\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SM\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SA\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"RS\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SK\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SI\"</span>, <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">(</span><span class=\"st0\">\"ES\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SE\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CH\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"TN\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"TR\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AE\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GB\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"VG\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">]</span><br/>            <span class=\"kw1\">let</span> country <span class=\"sy0\">=</span> iban.<span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, Math.<span class=\"me1\">Min</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>, iban.<span class=\"me1\">Length</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">match</span> lengthPerCountry.<span class=\"me1\">TryGetValue</span><span class=\"br0\">(</span>country<span class=\"br0\">)</span> <span class=\"kw1\">with</span><br/>            | <span class=\"kw1\">true</span>, length <span class=\"sy0\">-&gt;</span>   <span class=\"co1\">// country should have iban of this length</span><br/>                <span class=\"kw1\">if</span> length <span class=\"sy0\">=</span> iban.<span class=\"me1\">Length</span> <span class=\"kw1\">then</span> Some<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"kw1\">else</span> None<br/>            | _ <span class=\"sy0\">-&gt;</span> None     <span class=\"co1\">// country not known</span><br/>        <span class=\"br0\">)</span><br/>    |~<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> iban <span class=\"sy0\">-&gt;</span> Some<span class=\"br0\">(</span>iban.<span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> iban.<span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    |~<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> iban <span class=\"sy0\">-&gt;</span><br/>            <span class=\"kw1\">let</span> replaceBase36LetterWithBase10String <span class=\"br0\">(</span>s\u00a0: <span class=\"kw4\">string</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>c\u00a0:<span class=\"kw4\">char</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> s.<span class=\"me1\">Replace</span><span class=\"br0\">(</span>c.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>c <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"st0\">'A'</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            Some<span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">fold</span> replaceBase36LetterWithBase10String iban <span class=\"br0\">[</span> <span class=\"st0\">'A'</span> .. <span class=\"st0\">'Z'</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    |~<span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> iban <span class=\"sy0\">-&gt;</span>    <span class=\"co1\">// iban mod 97</span><br/>            <span class=\"co1\">// We could have used BigInteger, but with a loop by 7 char each </span><br/>            <span class=\"co1\">// over the long digit string we get away with Int32 arithmetic</span><br/>            <span class=\"co1\">// (as described in the Wikipedia article)</span><br/>            <span class=\"kw1\">let</span> reduceOnce r n <span class=\"sy0\">=</span> Int32.<span class=\"me1\">Parse</span><span class=\"br0\">(</span>r.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> n<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span><br/>            <span class=\"kw1\">let</span> rest <span class=\"sy0\">=</span><br/>                Regex.<span class=\"me1\">Matches</span><span class=\"br0\">(</span>iban.<span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"st_h\">@\"\\d{1,7}\"</span><span class=\"br0\">)</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">cast</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">map</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x <span class=\"sy0\">-&gt;</span> x.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">fold</span> reduceOnce <span class=\"br0\">(</span>reduceOnce <span class=\"nu0\">0</span> <span class=\"br0\">(</span>iban.<span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"co1\">// an iban needs a rest of 1</span><br/>            <span class=\"kw1\">if</span> rest <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> Some<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">else</span> None<br/>        <span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> <span class=\"kw1\">function</span> | Some<span class=\"br0\">(</span>_<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"a valid IBAN\"</span> | None <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"an invalid IBAN\"</span><br/>    <span class=\"sy0\">|&gt;</span> printfn <span class=\"st0\">\"%s is\u00a0%s\"</span> iban<br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Forth", "loc": 38, "block": "<pre class=\"text highlighted_source\">include lib/ulcase.4th                 \\ for S&gt;UPPER<br/>include lib/triple.4th                 \\ for UT/MOD<br/>include lib/cstring.4th                \\ for C/STRING<br/>include lib/todbl.4th                  \\ for S&gt;DOUBLE<br/>\u00a0<br/>0 constant ud&gt;t                        \\ convert unsigned double to triple<br/>88529281 constant 97^4                 \\ first stage modulus<br/>char A 10 - negate +constant c&gt;u       \\ convert character to IBAN digit<br/>\u00a0<br/>: bank&gt;t u&gt;d rot 3 - 0\u00a0?do 10 mu* loop 1000000000 ut*\u00a0;<br/>                                       \\ convert country part to unsigned<br/>: country&gt;u                            ( a n -- u)<br/>  c/string c&gt;u 10000 * &gt;r c/string c&gt;u 100 * &gt;r number 100 mod abs r&gt; + r&gt; +<br/>;<br/>                                       \\ convert bank part to unsigned<br/>: bank&gt;u                               \\ a n -- u)<br/>  c/string c&gt;u 1000000 * &gt;r            \\ get first digit and shift<br/>  c/string c&gt;u 10000 * &gt;r              \\ get second digit and shift<br/>  c/string c&gt;u 100 * &gt;r                \\ get third digit and shift<br/>  drop <a class=\"__cf_email__\" data-cfemail=\"375477\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> c&gt;u r&gt; + r&gt; + r&gt; +           \\ combine all digits to number<br/>;<br/>\u00a0<br/>: iban&gt;t                               ( a n -- triple)<br/>  s&gt;upper                              \\ convert to upper case and get country<br/>  over 4 country&gt;u &gt;r 4 /string        \\ get bank part, save length, convert<br/>  over 4 bank&gt;u &gt;r 4 /string tuck s&gt;double<br/>  1000000 mu* r&gt; -rot r&gt; u&gt;d d+ 2&gt;r    \\ now assemble everything except bank<br/>  bank&gt;t 2r&gt; ud&gt;t t+                   \\ shift bank part and convert to triple<br/>;<br/>                                       ( a n -- f)<br/>: iban? iban&gt;t 97^4 ut/mod 2drop 97 mod 1 =\u00a0;<br/>                                       \\ perform modulus 97 in two stages<br/>: checkiban                            ( --)<br/>  .\" Enter your IBAN: \" refill drop 0 parse -trailing iban?<br/>  if .\" Valid\" else .\" Invalid\" then cr<br/>;<br/>\u00a0<br/>checkiban</pre>"}, {"lang": "Fortran", "loc": 126, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> ibancheck<br/>\u00a0<br/>   <span class=\"kw3\">use</span> ISO_FORTRAN_ENV<br/>\u00a0<br/>   <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>   <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">75</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">cc</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"AD24\"</span>,<span class=\"st0\">\"AE23\"</span>,<span class=\"st0\">\"AL28\"</span>,<span class=\"st0\">\"AT20\"</span>,<span class=\"st0\">\"AZ28\"</span>,<span class=\"st0\">\"BA20\"</span>,<span class=\"st0\">\"BE16\"</span>,<span class=\"st0\">\"BG22\"</span>,<span class=\"st0\">\"BH22\"</span>,<span class=\"st0\">\"BR29\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"BY28\"</span>,<span class=\"st0\">\"CH21\"</span>,<span class=\"st0\">\"CR22\"</span>,<span class=\"st0\">\"CY28\"</span>,<span class=\"st0\">\"CZ24\"</span>,<span class=\"st0\">\"DE22\"</span>,<span class=\"st0\">\"DK18\"</span>,<span class=\"st0\">\"DO28\"</span>,<span class=\"st0\">\"EE20\"</span>,<span class=\"st0\">\"ES24\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"FI18\"</span>,<span class=\"st0\">\"FO18\"</span>,<span class=\"st0\">\"FR27\"</span>,<span class=\"st0\">\"GB22\"</span>,<span class=\"st0\">\"GE22\"</span>,<span class=\"st0\">\"GI23\"</span>,<span class=\"st0\">\"GL18\"</span>,<span class=\"st0\">\"GR27\"</span>,<span class=\"st0\">\"GT28\"</span>,<span class=\"st0\">\"HR21\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"HU28\"</span>,<span class=\"st0\">\"IE22\"</span>,<span class=\"st0\">\"IL23\"</span>,<span class=\"st0\">\"IQ23\"</span>,<span class=\"st0\">\"IS26\"</span>,<span class=\"st0\">\"IT27\"</span>,<span class=\"st0\">\"JO30\"</span>,<span class=\"st0\">\"KW30\"</span>,<span class=\"st0\">\"KZ20\"</span>,<span class=\"st0\">\"LB28\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"LC32\"</span>,<span class=\"st0\">\"LI21\"</span>,<span class=\"st0\">\"LT20\"</span>,<span class=\"st0\">\"LU20\"</span>,<span class=\"st0\">\"LV21\"</span>,<span class=\"st0\">\"MC27\"</span>,<span class=\"st0\">\"MD24\"</span>,<span class=\"st0\">\"ME22\"</span>,<span class=\"st0\">\"MK19\"</span>,<span class=\"st0\">\"MR27\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"MT31\"</span>,<span class=\"st0\">\"MU30\"</span>,<span class=\"st0\">\"NL18\"</span>,<span class=\"st0\">\"NO15\"</span>,<span class=\"st0\">\"PK24\"</span>,<span class=\"st0\">\"PL28\"</span>,<span class=\"st0\">\"PS29\"</span>,<span class=\"st0\">\"PT25\"</span>,<span class=\"st0\">\"QA29\"</span>,<span class=\"st0\">\"RO24\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"RS22\"</span>,<span class=\"st0\">\"SA24\"</span>,<span class=\"st0\">\"SC31\"</span>,<span class=\"st0\">\"SE24\"</span>,<span class=\"st0\">\"SI19\"</span>,<span class=\"st0\">\"SK24\"</span>,<span class=\"st0\">\"SM27\"</span>,<span class=\"st0\">\"ST25\"</span>,<span class=\"st0\">\"SV28\"</span>,<span class=\"st0\">\"TL23\"</span>, <span class=\"sy0\">&amp;</span><br/>            <span class=\"st0\">\"TN24\"</span>,<span class=\"st0\">\"TR26\"</span>,<span class=\"st0\">\"UA29\"</span>,<span class=\"st0\">\"VG24\"</span>,<span class=\"st0\">\"XK20\"</span> <span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"br0\">)</span>, <span class=\"kw3\">dimension</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">ibans</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">/</span> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32       \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"GB82WEST12345698765432            \"</span>, <span class=\"sy0\">&amp;</span> <br/>                                               <span class=\"st0\">\"gb82 west 1234 5698 7654 32       \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32       \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695 \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"GB29 NWBK 6016 1331 9268 19       \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"SA03 8000 0000 6080 1016 7519     \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"CH93 0076 2011 6238 5295 7        \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"IL62 0108 0000 0009 9999 999      \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"IL62-0108-0000-0009-9999-999      \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"US12 3456 7890 0987 6543 210      \"</span>, <span class=\"sy0\">&amp;</span><br/>                                               <span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695X\"</span> <span class=\"sy0\">/</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span><br/>\u00a0<br/>    <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, <span class=\"kw4\">size</span><span class=\"br0\">(</span>ibans<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>checkIBAN<span class=\"br0\">(</span><span class=\"kw4\">trim</span><span class=\"br0\">(</span>ibans<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            print <span class=\"sy0\">*</span>, <span class=\"st0\">\"  valid IBAN: \"</span>, <span class=\"kw4\">trim</span><span class=\"br0\">(</span>ibans<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span><br/>            print <span class=\"sy0\">*</span>, <span class=\"st0\">\"invalid IBAN: \"</span>, <span class=\"kw4\">trim</span><span class=\"br0\">(</span>ibans<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">contains</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> checkIBAN<span class=\"br0\">(</span>ibancode<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>valid<span class=\"br0\">)</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">ibancode</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=</span><span class=\"kw4\">len</span><span class=\"br0\">(</span>ibancode<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">iban</span><br/>        <span class=\"kw3\">logical</span> <span class=\"sy0\">::</span> <span class=\"me2\">valid</span><br/>        <span class=\"kw3\">integer</span><span class=\"br0\">(</span>int32<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">j</span>, ascii, ibanSize <br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">ibanRearrange</span>, ibantoint<br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">temp</span><br/>        valid <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">false</span>.</span><br/>\u00a0<br/>        iban <span class=\"sy0\">=</span> remove_blanks<span class=\"br0\">(</span>ibancode<span class=\"br0\">)</span><br/>        ibanSize <span class=\"sy0\">=</span> checkCountryCode<span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>ibanSize <span class=\"sy0\">==</span> <span class=\"kw4\">len</span><span class=\"br0\">(</span><span class=\"kw4\">trim</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            ibanRearrange <span class=\"sy0\">=</span> iban<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">:</span>ibanSize<span class=\"br0\">)</span><span class=\"sy0\">//</span>iban<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>            ibantoint <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>            <span class=\"kw1\">do</span> j<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, ibanSize<br/>                ascii <span class=\"sy0\">=</span> <span class=\"kw4\">ichar</span><span class=\"br0\">(</span>ibanRearrange<span class=\"br0\">(</span>j<span class=\"sy0\">:</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>ascii &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">65</span><span class=\"br0\">)</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> <span class=\"br0\">(</span>ascii&lt;<span class=\"sy0\">=</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                    write <span class=\"br0\">(</span>temp,<span class=\"kw1\">fmt</span><span class=\"sy0\">=</span><span class=\"st0\">'(I2)'</span><span class=\"br0\">)</span> ascii<span class=\"sy0\">-</span><span class=\"nu0\">55</span><br/>                    ibantoint <span class=\"sy0\">=</span> <span class=\"kw4\">trim</span><span class=\"br0\">(</span>ibantoint<span class=\"br0\">)</span> <span class=\"sy0\">//</span> temp<br/>                <span class=\"kw1\">else</span><br/>                    ibantoint <span class=\"sy0\">=</span> <span class=\"kw4\">trim</span><span class=\"br0\">(</span>ibantoint<span class=\"br0\">)</span> <span class=\"sy0\">//</span> ibanRearrange<span class=\"br0\">(</span>j<span class=\"sy0\">:</span>j<span class=\"br0\">)</span><br/>                <span class=\"kw1\">end</span> <span class=\"kw1\">if</span> <br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mod97<span class=\"br0\">(</span>ibantoint<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                valid <span class=\"sy0\">=</span> <span class=\"kw2\">.<span class=\"me1\">true</span>.</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> checkIBAN<br/>\u00a0<br/>    <span class=\"kw1\">function</span> mod97<span class=\"br0\">(</span>strint<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">strint</span><br/>        <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, num, res<br/>        res <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">do</span>  i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, <span class=\"kw4\">len</span><span class=\"br0\">(</span><span class=\"kw4\">trim</span><span class=\"br0\">(</span>strint<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            read<span class=\"br0\">(</span>strint<span class=\"br0\">(</span>i<span class=\"sy0\">:</span>i<span class=\"br0\">)</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> num<br/>            res <span class=\"sy0\">=</span> <span class=\"kw4\">mod</span><span class=\"br0\">(</span><span class=\"br0\">(</span>res<span class=\"sy0\">*</span><span class=\"nu0\">10</span> <span class=\"sy0\">+</span> num<span class=\"br0\">)</span>,<span class=\"nu0\">97</span><span class=\"br0\">)</span>;<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> mod97<br/>\u00a0<br/>    <span class=\"kw1\">function</span> checkCountryCode<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"kw3\">result</span><span class=\"br0\">(</span>ibanlength<span class=\"br0\">)</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">iban</span><br/>        <span class=\"kw3\">integer</span><span class=\"br0\">(</span>int16<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">ibanlength</span>, i<br/>        ibanlength <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span>, <span class=\"kw4\">size</span><span class=\"br0\">(</span>cc<span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>iban<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> cc<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>                read<span class=\"br0\">(</span>cc<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">:</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> ibanlength<br/>                <span class=\"kw1\">exit</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">function</span> checkCountryCode<br/>\u00a0<br/>    <span class=\"kw1\">Recursive</span> <span class=\"kw1\">Function</span> Stripper<span class=\"br0\">(</span>string,ch<span class=\"br0\">)</span> <span class=\"kw3\">Result</span><span class=\"br0\">(</span>stripped<span class=\"br0\">)</span><br/>        <span class=\"kw3\">Implicit</span> <span class=\"kw3\">None</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">string</span><br/>        <span class=\"kw3\">character</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">ch</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, <span class=\"kw3\">allocatable</span> <span class=\"sy0\">::</span> <span class=\"me2\">stripped</span><br/>\u00a0<br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span><span class=\"kw4\">LEN</span><span class=\"br0\">(</span>string<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>           <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>string<span class=\"sy0\">==</span>ch<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <br/>              stripped <span class=\"sy0\">=</span> <span class=\"st0\">''</span><br/>           <span class=\"kw1\">ELSE</span><br/>              stripped <span class=\"sy0\">=</span> string<br/>           <span class=\"kw1\">END</span> <span class=\"kw1\">IF</span><br/>        <span class=\"kw1\">ELSE</span><br/>           <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>string<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">==</span>ch<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>              stripped <span class=\"sy0\">=</span> stripper<span class=\"br0\">(</span>string<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>,ch<span class=\"br0\">)</span><br/>           <span class=\"kw1\">ELSE</span><br/>              stripped <span class=\"sy0\">=</span> string<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">//</span>stripper<span class=\"br0\">(</span>string<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>,ch<span class=\"br0\">)</span><br/>           <span class=\"kw1\">END</span> <span class=\"kw1\">IF</span><br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">IF</span><br/>    <span class=\"kw1\">END</span> <span class=\"kw1\">Function</span> stripper<br/>\u00a0<br/>    <span class=\"kw1\">Function</span> Remove_Blanks<span class=\"br0\">(</span>string<span class=\"br0\">)</span> <span class=\"kw3\">Result</span><span class=\"br0\">(</span>stripped<span class=\"br0\">)</span><br/>        <span class=\"kw3\">Implicit</span> <span class=\"kw3\">None</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span>   <span class=\"me2\">string</span><br/>        <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"br0\">)</span>, <span class=\"kw3\">allocatable</span> <span class=\"sy0\">::</span> <span class=\"me2\">stripped</span><br/>\u00a0<br/>        stripped <span class=\"sy0\">=</span> <span class=\"kw4\">trim</span><span class=\"br0\">(</span>Stripper<span class=\"br0\">(</span><span class=\"kw4\">trim</span><span class=\"br0\">(</span>Stripper<span class=\"br0\">(</span>string,<span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">)</span>,<span class=\"kw4\">achar</span><span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span> <span class=\"kw1\">Function</span> Remove_Blanks<br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> ibancheck<br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 72, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co1\">' List updated to release 72, 25 November 2016, of IBAN Registry (75 countries)</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">Shared</span> countryCodes <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>countryCodes = _<br/>    <span class=\"st0\">\"AD24 AE23 AL28 AT20 AZ28 BA20 BE16 BG22 BH22 BR29 BY28 CH21 CR22 CY28 CZ24 DE22 \"</span> _<br/>    <span class=\"st0\">\"DK18 DO28 EE20 ES24 FI18 FO18 FR27 GB22 GE22 GI23 GL18 GR27 GT28 HR21 HU28 IE22 \"</span> _<br/>    <span class=\"st0\">\"IL23 IQ23 IS26 IT27 JO30 KW30 KZ20 LB28 LC32 LI21 LT20 LU20 LV21 MC27 MD24 ME22 \"</span> _<br/>    <span class=\"st0\">\"MK19 MR27 MT31 MU30 NL18 NO15 PK24 PL28 PS29 PT25 QA29 RO24 RS22 SA24 SC31 SE24 \"</span> _<br/>    <span class=\"st0\">\"SI19 SK24 SM27 ST25 SV28 TL23 TN24 TR26 UA29 VG24 XK20\"</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> checkCountryCode<span class=\"br0\">(</span>cc <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> Boolean<br/>  <span class=\"kw1\">Return</span> <span class=\"kw1\">Instr</span><span class=\"br0\">(</span>countryCodes, cc<span class=\"br0\">)</span> <br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"co1\">' To avoid having to use the GMP library, a piece-wise calculation is used</span><br/><span class=\"kw1\">Function</span> mod97<span class=\"br0\">(</span>s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> <br/>  <span class=\"kw1\">Dim</span> r <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> = ValULng<span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>s, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> <span class=\"nu0\">97</span><br/>  <span class=\"kw1\">Dim</span> start <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> = <span class=\"nu0\">10</span> <br/>  <span class=\"kw1\">While</span> start &lt; <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/>    r = ValULng<span class=\"br0\">(</span>r &amp; <span class=\"kw1\">Mid</span><span class=\"br0\">(</span>s, start, <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Mod</span> <span class=\"nu0\">97</span> <br/>    start += <span class=\"nu0\">7</span><br/>  <span class=\"kw1\">Wend</span><br/>  <span class=\"kw1\">Return</span> r<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> validateIban<span class=\"br0\">(</span>iban <span class=\"kw1\">As</span> <span class=\"kw1\">Const</span> <span class=\"kw1\">String</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> Boolean<br/>  <span class=\"co1\">' remove spaces from IBAN</span><br/>  <span class=\"kw1\">Dim</span> s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = iban<br/>  <span class=\"kw1\">Dim</span> count <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = <span class=\"nu0\">32</span> <span class=\"kw1\">Then</span><br/>      <span class=\"kw1\">For</span> j <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = i + <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>         s<span class=\"br0\">[</span>j - <span class=\"nu0\">1</span><span class=\"br0\">]</span> = s<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <br/>      <span class=\"kw1\">Next</span><br/>      count += <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">If</span> i = <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span> - count <span class=\"kw1\">Then</span> <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span><br/>  <span class=\"kw1\">Next</span> i<br/>  <span class=\"kw1\">If</span> count &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    s<span class=\"br0\">[</span><span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - count<span class=\"br0\">]</span> = <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">Dim</span> p <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> <span class=\"kw1\">Ptr</span> = CPtr<span class=\"br0\">(</span><span class=\"kw1\">UInteger</span> <span class=\"kw1\">Ptr</span>, @s<span class=\"br0\">)</span><br/>    *<span class=\"br0\">(</span>p + <span class=\"nu0\">1</span><span class=\"br0\">)</span> = <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - count <span class=\"co1\">''change length of string in descriptor</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/>  <span class=\"co1\">' check country code</span><br/>  <span class=\"kw1\">Dim</span> isValid <span class=\"kw1\">As</span> Boolean = checkCountryCode<span class=\"br0\">(</span><span class=\"kw1\">Left</span><span class=\"br0\">(</span>s, <span class=\"nu0\">2</span><span class=\"br0\">)</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span><span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> isValid <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> <span class=\"kw1\">False</span><br/>\u00a0<br/>  <span class=\"co1\">' move first 4 characters to end </span><br/>  s = <span class=\"kw1\">Mid</span><span class=\"br0\">(</span>s, <span class=\"nu0\">5</span><span class=\"br0\">)</span> + <span class=\"kw1\">Left</span><span class=\"br0\">(</span>s, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\">' replace A to Z with numbers 10 To 35</span><br/>  <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"kw1\">To</span> <span class=\"nu0\">1</span> <span class=\"kw1\">Step</span> -<span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> s<span class=\"br0\">[</span>i - <span class=\"nu0\">1</span><span class=\"br0\">]</span> &gt;= <span class=\"nu0\">65</span> AndAlso s<span class=\"br0\">[</span>i - <span class=\"nu0\">1</span><span class=\"br0\">]</span> &lt;= <span class=\"nu0\">90</span> <span class=\"kw1\">Then</span><br/>      s = <span class=\"kw1\">Left</span><span class=\"br0\">(</span>s, i - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"kw1\">Str</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span>i - <span class=\"nu0\">1</span><span class=\"br0\">]</span> - <span class=\"nu0\">55</span><span class=\"br0\">)</span> + <span class=\"kw1\">Mid</span><span class=\"br0\">(</span>s, i + <span class=\"nu0\">1</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"co1\">' do mod97 calculation</span><br/>  <span class=\"kw1\">Return</span> mod97<span class=\"br0\">(</span>s<span class=\"br0\">)</span> = <span class=\"nu0\">1</span>  <span class=\"co1\">'' remainder needs to be 1 for validity</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> ibans<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> = <span class=\"br0\">{</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span>, <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><span class=\"br0\">}</span><br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">2</span><br/>  <span class=\"kw1\">Dim</span> isValid <span class=\"kw1\">As</span> Boolean = validateIban<span class=\"br0\">(</span>ibans<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Print</span> ibans<span class=\"br0\">(</span>i<span class=\"br0\">)</span>; <span class=\"kw1\">IIf</span><span class=\"br0\">(</span>isValid, <span class=\"st0\">\"\u00a0: may be valid\"</span>, <span class=\"st0\">\"\u00a0: is not valid\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Go", "loc": 63, "block": "<pre class=\"go highlighted_source\">\u00a0<br/><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"strings\"</span><br/>\t<span class=\"st0\">\"strconv\"</span><br/>\t<span class=\"st0\">\"math/big\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> lCode <span class=\"sy2\">=</span> <span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"kw4\">string</span><span class=\"sy1\">]</span><span class=\"kw4\">int</span> <span class=\"sy1\">{</span> <br/>\t<span class=\"st0\">\"AL\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"AD\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"AT\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"st0\">\"AZ\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"BE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span> <span class=\"st0\">\"BH\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"BA\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"st0\">\"BR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"BG\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"CR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"st0\">\"HR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"st0\">\"CY\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"CZ\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"DK\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"st0\">\"DO\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"EE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"FO\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"st0\">\"FI\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"st0\">\"FR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"st0\">\"GE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"DE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"GI\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"st0\">\"GR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"st0\">\"GL\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"GT\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"HU\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"IS\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">26</span><span class=\"sy1\">,</span> <span class=\"st0\">\"IE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"IL\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"st0\">\"IT\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"st0\">\"KZ\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"st0\">\"KW\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"LV\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"st0\">\"LB\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"LI\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"st0\">\"LT\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"st0\">\"LU\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"st0\">\"MK\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"st0\">\"MT\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"st0\">\"MR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"MU\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span> <span class=\"st0\">\"MC\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"st0\">\"MD\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"ME\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"NL\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"st0\">\"NO\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"st0\">\"PK\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"PS\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"PL\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"PT\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"st0\">\"RO\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"SM\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"st0\">\"SA\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"RS\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"SK\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"SI\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span><br/>  \t<span class=\"st0\">\"ES\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"SE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"CH\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"st0\">\"TN\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"TR\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">26</span><span class=\"sy1\">,</span> <span class=\"st0\">\"AE\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span> <span class=\"st0\">\"GB\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"VG\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw1\">var</span> sCode <span class=\"sy2\">=</span> <span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"kw4\">string</span><span class=\"sy1\">]</span><span class=\"kw4\">int</span> <span class=\"sy1\">{</span><br/>\t<span class=\"st0\">\"1\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"st0\">\"2\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"st0\">\"3\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"st0\">\"4\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"st0\">\"5\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"st0\">\"6\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">6</span><span class=\"sy1\">,</span> <span class=\"st0\">\"7\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">7</span><span class=\"sy1\">,</span> <span class=\"st0\">\"8\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">8</span><span class=\"sy1\">,</span> <span class=\"st0\">\"9\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">9</span><span class=\"sy1\">,</span><br/>\t<span class=\"st0\">\"A\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">10</span><span class=\"sy1\">,</span> <span class=\"st0\">\"B\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">11</span><span class=\"sy1\">,</span> <span class=\"st0\">\"C\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">12</span><span class=\"sy1\">,</span> <span class=\"st0\">\"D\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">13</span><span class=\"sy1\">,</span> <span class=\"st0\">\"E\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">14</span><span class=\"sy1\">,</span> <span class=\"st0\">\"F\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">15</span><span class=\"sy1\">,</span> <span class=\"st0\">\"G\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">16</span><span class=\"sy1\">,</span><br/>\t<span class=\"st0\">\"H\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">17</span><span class=\"sy1\">,</span> <span class=\"st0\">\"I\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">18</span><span class=\"sy1\">,</span> <span class=\"st0\">\"J\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">19</span><span class=\"sy1\">,</span> <span class=\"st0\">\"K\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">20</span><span class=\"sy1\">,</span> <span class=\"st0\">\"L\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">21</span><span class=\"sy1\">,</span> <span class=\"st0\">\"M\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">22</span><span class=\"sy1\">,</span> <span class=\"st0\">\"N\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">23</span><span class=\"sy1\">,</span><br/>\t<span class=\"st0\">\"O\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">24</span><span class=\"sy1\">,</span> <span class=\"st0\">\"P\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">25</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Q\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">26</span><span class=\"sy1\">,</span> <span class=\"st0\">\"R\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">27</span><span class=\"sy1\">,</span> <span class=\"st0\">\"S\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">28</span><span class=\"sy1\">,</span> <span class=\"st0\">\"T\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">29</span><span class=\"sy1\">,</span> <span class=\"st0\">\"U\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">30</span><span class=\"sy1\">,</span><br/>\t<span class=\"st0\">\"V\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">31</span><span class=\"sy1\">,</span> <span class=\"st0\">\"W\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"st0\">\"X\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">33</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Y\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">34</span><span class=\"sy1\">,</span> <span class=\"st0\">\"Z\"</span><span class=\"sy1\">:</span> <span class=\"nu0\">35</span><span class=\"sy1\">,</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\u00a0<br/>\t<span class=\"kw1\">var</span> iban <span class=\"kw4\">string</span> <br/>\t<span class=\"kw1\">var</span> r<span class=\"sy1\">,</span> s<span class=\"sy1\">,</span> t<span class=\"sy1\">,</span> st <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><br/>\tu <span class=\"sy2\">:=</span> <span class=\"kw3\">new</span><span class=\"sy1\">(</span><a href=\"http://golang.org/search?q=big.Int\"><span class=\"kw5\">big.<span class=\"me1\">Int</span></span></a><span class=\"sy1\">)</span><br/>\tv <span class=\"sy2\">:=</span> <span class=\"kw3\">new</span><span class=\"sy1\">(</span><a href=\"http://golang.org/search?q=big.Int\"><span class=\"kw5\">big.<span class=\"me1\">Int</span></span></a><span class=\"sy1\">)</span><br/>\tw <span class=\"sy2\">:=</span> <span class=\"kw3\">new</span><span class=\"sy1\">(</span><a href=\"http://golang.org/search?q=big.Int\"><span class=\"kw5\">big.<span class=\"me1\">Int</span></span></a><span class=\"sy1\">)</span><br/>\u00a0<br/>\tiban <span class=\"sy2\">=</span> <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><br/>\tr <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span><span class=\"me1\">Split</span><span class=\"sy1\">(</span>iban<span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">)</span><br/>\ts <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>Split<span class=\"sy1\">(</span>r<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">],</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>\tt <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>Split<span class=\"sy1\">(</span>r<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">],</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>\u00a0<br/>\tst <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span> strconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>sCode<span class=\"sy1\">[</span>t<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]]),</span> <br/>\t\t\t\t\tstrconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>sCode<span class=\"sy1\">[</span>t<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]]),</span> <br/>\t\t\t\t\tstrconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>sCode<span class=\"sy1\">[</span>t<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]]),</span> <br/>\t\t\t\t\tstrconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>sCode<span class=\"sy1\">[</span>t<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]]),</span><br/>\t\t\t\t\tstrings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>r<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">:</span><span class=\"nu0\">6</span><span class=\"sy1\">],</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">),</span><br/>\t\t\t\t\tstrconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>sCode<span class=\"sy1\">[</span>s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]]),</span><br/>\t\t\t\t\tstrconv<span class=\"sy3\">.</span>Itoa<span class=\"sy1\">(</span>sCode<span class=\"sy1\">[</span>s<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]]),</span><br/>\t\t\t\t\tstrings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>s<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">:</span><span class=\"nu0\">4</span><span class=\"sy1\">],</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">),</span><br/>\t<span class=\"sy1\">}</span><br/>\u00a0<br/>\tu<span class=\"sy3\">.</span><span class=\"me1\">SetString</span><span class=\"sy1\">(</span>strings<span class=\"sy3\">.</span><span class=\"me1\">Join</span><span class=\"sy1\">(</span>st<span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">),</span> <span class=\"nu0\">10</span><span class=\"sy1\">)</span><br/>\tv<span class=\"sy3\">.</span>SetInt64<span class=\"sy1\">(</span><span class=\"nu0\">97</span><span class=\"sy1\">)</span><br/>\tw<span class=\"sy3\">.</span>Mod<span class=\"sy1\">(</span>u<span class=\"sy1\">,</span> v<span class=\"sy1\">)</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span> w<span class=\"sy3\">.</span>Uint64<span class=\"sy1\">()</span> <span class=\"sy3\">==</span> <span class=\"nu0\">1</span> &amp;&amp; lCode<span class=\"sy1\">[</span>strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>s<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">:</span><span class=\"nu0\">2</span><span class=\"sy1\">],</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)]</span> <span class=\"sy3\">==</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>r<span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">))</span> <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span><span class=\"me1\">Printf</span><span class=\"sy1\">(</span><span class=\"st0\">\"IBAN\u00a0%s looks good!<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> iban<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"IBAN\u00a0%s looks wrong!<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> iban<span class=\"sy1\">)</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0</pre>"}, {"lang": "Groovy", "loc": 16, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> validateIBAN<span class=\"br0\">(</span><a href=\"http://www.google.de/search?as_q=String&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">String</span></a> iban<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> iso <span class=\"sy0\">=</span> <span class=\"br0\">[</span>AL: <span class=\"nu0\">28</span>, AD: <span class=\"nu0\">24</span>, AT: <span class=\"nu0\">20</span>, AZ: <span class=\"nu0\">28</span>, BE: <span class=\"nu0\">16</span>, BH: <span class=\"nu0\">22</span>, BA: <span class=\"nu0\">20</span>, BR: <span class=\"nu0\">29</span>, BG: <span class=\"nu0\">22</span>,<br/>            HR: <span class=\"nu0\">21</span>, CY: <span class=\"nu0\">28</span>, CZ: <span class=\"nu0\">24</span>, DK: <span class=\"nu0\">18</span>, <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20do\"><span class=\"kw1\">DO</span></a>: <span class=\"nu0\">28</span>, EE: <span class=\"nu0\">20</span>, FO: <span class=\"nu0\">18</span>, FI: <span class=\"nu0\">18</span>, FR: <span class=\"nu0\">27</span>, GE: <span class=\"nu0\">22</span>, DE: <span class=\"nu0\">22</span>, GI: <span class=\"nu0\">23</span>,<br/>            GL: <span class=\"nu0\">18</span>, GT: <span class=\"nu0\">28</span>, HU: <span class=\"nu0\">28</span>, IS: <span class=\"nu0\">26</span>, IE: <span class=\"nu0\">22</span>, IL: <span class=\"nu0\">23</span>, IT: <span class=\"nu0\">27</span>, KZ: <span class=\"nu0\">20</span>, KW: <span class=\"nu0\">30</span>, LV: <span class=\"nu0\">21</span>, LB: <span class=\"nu0\">28</span>, LI: <span class=\"nu0\">21</span>,<br/>            LT: <span class=\"nu0\">20</span>, LU: <span class=\"nu0\">20</span>, MK: <span class=\"nu0\">19</span>, MT: <span class=\"nu0\">31</span>, MR: <span class=\"nu0\">27</span>, MU: <span class=\"nu0\">30</span>, MC: <span class=\"nu0\">27</span>, MD: <span class=\"nu0\">24</span>, ME: <span class=\"nu0\">22</span>, NL: <span class=\"nu0\">18</span>, NO: <span class=\"nu0\">15</span>, PK: <span class=\"nu0\">24</span>,<br/>            PS: <span class=\"nu0\">29</span>, PL: <span class=\"nu0\">28</span>, PT: <span class=\"nu0\">25</span>, RO: <span class=\"nu0\">24</span>, SM: <span class=\"nu0\">27</span>, SA: <span class=\"nu0\">24</span>, RS: <span class=\"nu0\">22</span>, SK: <span class=\"nu0\">24</span>, SI: <span class=\"nu0\">19</span>, ES: <span class=\"nu0\">24</span>, SE: <span class=\"nu0\">24</span>, CH: <span class=\"nu0\">21</span>,<br/>            TN: <span class=\"nu0\">24</span>, TR: <span class=\"nu0\">26</span>, AE: <span class=\"nu0\">23</span>, GB: <span class=\"nu0\">22</span>, VG: <span class=\"nu0\">24</span>, GR: <span class=\"nu0\">27</span>, CR: <span class=\"nu0\">21</span><span class=\"br0\">]</span><br/>\u00a0<br/>    iban <span class=\"sy0\">=</span> iban.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span>/\\s/, <span class=\"st0\">''</span><span class=\"br0\">)</span>.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>iban.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">||</span> iso<span class=\"br0\">[</span>iban<span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> iban.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20size\"><span class=\"kw5\">size</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20return\"><span class=\"kw2\">return</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20false\"><span class=\"kw2\">false</span></a><br/>\u00a0<br/>    iban <span class=\"sy0\">=</span> iban<span class=\"br0\">[</span><span class=\"nu0\">4</span>..<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> iban<span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"sy0\">&lt;</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>\u00a0<br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> number <span class=\"sy0\">=</span> iban.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20collect\"><span class=\"kw5\">collect</span></a> <span class=\"br0\">{</span> <a href=\"http://www.google.de/search?as_q=Character&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Character</span></a>.<span class=\"me1\">digit</span><span class=\"br0\">(</span>it <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20as\"><span class=\"kw2\">as</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20char\"><span class=\"kw4\">char</span></a>, <span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"br0\">}</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20join\"><span class=\"kw5\">join</span></a><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>number <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20as\"><span class=\"kw2\">as</span></a> <a href=\"http://www.google.de/search?as_q=BigInteger&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">BigInteger</span></a><span class=\"br0\">)</span>.<span class=\"me1\">mod</span><span class=\"br0\">(</span><span class=\"nu0\">97</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 53, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Char\"><span class=\"kw4\">Char</span></a> <span class=\"br0\">(</span>toUpper<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <span class=\"br0\">(</span>fromJust<span class=\"br0\">)</span><br/>\u00a0<br/>validateIBAN <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Either\"><span class=\"kw4\">Either</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>validateIBAN <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> Left <span class=\"st0\">\"No IBAN number.\"</span><br/>validateIBAN xs <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">case</span> lookupCountry <span class=\"kw1\">of</span><br/>        Nothing <span class=\"sy0\">-&gt;</span> invalidBecause <span class=\"st0\">\"Country does not exist.\"</span><br/>        Just l  <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">if</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:length\"><span class=\"kw3\">length</span></a> normalized <span class=\"sy0\">/=</span> l<br/>                        <span class=\"kw1\">then</span> invalidBecause <span class=\"st0\">\"Number length does not match.\"</span><br/>                        <span class=\"kw1\">else</span> check<br/>    <span class=\"kw1\">where</span><br/>        <span class=\"co1\">-- remove blanks and make all letters uppercase</span><br/>        normalized <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> toUpper <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concat\"><span class=\"kw3\">concat</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:words\"><span class=\"kw3\">words</span></a> xs<br/>        <span class=\"co1\">-- get the country code</span><br/>        country <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:take\"><span class=\"kw3\">take</span></a> <span class=\"nu0\">2</span> normalized<br/>        <span class=\"co1\">-- search number length</span><br/>        lookupCountry <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:lookup\"><span class=\"kw3\">lookup</span></a> country countries<br/>        countries <span class=\"sy0\">::</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        countries <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:words\"><span class=\"kw3\">words</span></a> <span class=\"st0\">\"AL AT BE BA BG HR CZ DO FO FR DE GR GT <span class=\"es0\">\\</span><br/>            <span class=\"es0\">\\I</span>S IL KZ LV LI LU MT MU MD NL PK PL RO SA SK ES CH TR GB <span class=\"es0\">\\</span><br/>            <span class=\"es0\">\\A</span>D AZ BH BR CR CY DK EE FI GE GI GL HU IE IT KW LB LT MK <span class=\"es0\">\\</span><br/>            <span class=\"es0\">\\M</span>R MC ME NO PS PT SM RS SI SE TN AE VG\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">[</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><br/>            <span class=\"nu0\">31</span><span class=\"sy0\">,</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span><br/>            <span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span><span class=\"nu0\">25</span><span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>            <span class=\"nu0\">19</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">]</span><br/>        digits <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'0'</span><span class=\"sy0\">..</span><span class=\"st0\">'9'</span><span class=\"br0\">]</span><br/>        letters <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'A'</span><span class=\"sy0\">..</span><span class=\"st0\">'Z'</span><span class=\"br0\">]</span><br/>        <span class=\"co1\">-- letters to be replaced</span><br/>        replDigits <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> letters <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">..</span><span class=\"nu0\">35</span><span class=\"br0\">]</span><br/>        <span class=\"co1\">-- digits and letters allowed in the IBAN number</span><br/>        validDigits <span class=\"sy0\">=</span> digits <span class=\"sy0\">++</span> letters<br/>        <span class=\"co1\">-- see if all digits and letters in the IBAN number are allowed</span><br/>        sane <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:all\"><span class=\"kw3\">all</span></a> <span class=\"br0\">(</span>`<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:elem\"><span class=\"kw3\">elem</span></a>` validDigits<span class=\"br0\">)</span> normalized<br/>        <span class=\"co1\">-- take the first 4 digits from the number and put them at its end</span><br/>        <span class=\"br0\">(</span>p1<span class=\"sy0\">,</span> p2<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:splitAt\"><span class=\"kw3\">splitAt</span></a> <span class=\"nu0\">4</span> normalized<br/>        p3 <span class=\"sy0\">=</span> p2 <span class=\"sy0\">++</span> p1<br/>        <span class=\"co1\">-- convert the letters to numbers and</span><br/>        <span class=\"co1\">-- convert the result to an integer</span><br/>        p4 <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Integer\"><span class=\"kw4\">Integer</span></a><br/>        p4 <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concat\"><span class=\"kw3\">concat</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> convertLetter p3<br/>        convertLetter x <span class=\"sy0\">|</span> x `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:elem\"><span class=\"kw3\">elem</span></a>` digits <span class=\"sy0\">=</span> <span class=\"br0\">[</span>x<span class=\"br0\">]</span><br/>                        <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a>       <span class=\"sy0\">=</span> fromJust <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:lookup\"><span class=\"kw3\">lookup</span></a> x replDigits<br/>        <span class=\"co1\">-- see if the number is valid</span><br/>        check <span class=\"sy0\">=</span> <span class=\"kw1\">if</span> sane<br/>                    <span class=\"kw1\">then</span> <span class=\"kw1\">if</span> p4 `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mod\"><span class=\"kw3\">mod</span></a>` <span class=\"nu0\">97</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/>                            <span class=\"kw1\">then</span> Right xs<br/>                            <span class=\"kw1\">else</span> invalidBecause <span class=\"st0\">\"Validation failed.\"</span><br/>                    <span class=\"kw1\">else</span> invalidBecause <span class=\"st0\">\"Number contains illegal digits.\"</span><br/>\u00a0<br/>        invalidBecause reason <span class=\"sy0\">=</span> Left <span class=\"sy0\">$</span> <span class=\"st0\">\"Invalid IBAN number \"</span> <span class=\"sy0\">++</span> xs <span class=\"sy0\">++</span><br/>            <span class=\"st0\">\": \"</span> <span class=\"sy0\">++</span> reason</pre>"}, {"lang": "J", "loc": 35, "block": "<pre class=\"j highlighted_source\"><span class=\"co1\">NB. delete any blank characters</span><br/>delblk =. #~ <span class=\"st_h\">' '</span>&amp;~:<br/><span class=\"co1\">NB. rearrange</span><br/>rot =. <span class=\"st_h\">'00'</span> ,~ <span class=\"nu0\">2</span>&amp;}. @: <span class=\"sy0\">(</span><span class=\"nu0\">2</span>&amp;|.<span class=\"sy0\">)</span><br/><span class=\"co1\">NB. characters -&gt; \"digits\"</span><br/>dig =. a. {~ <span class=\"sy0\">(</span>a.i.<span class=\"st_h\">'0'</span><span class=\"sy0\">)</span>+i.<span class=\"nu0\">10</span><br/>dig =. dig,a. {~ <span class=\"sy0\">(</span>a.i.<span class=\"st_h\">'A'</span><span class=\"sy0\">)</span>+i.<span class=\"nu0\">26</span><br/>todig =. dig&amp;i.<br/>coded =. [: \". <span class=\"st_h\">'x'</span> ,~ delblk @: \": @: todig<br/>\u00a0<br/><span class=\"co1\">NB. calculate check sum</span><br/>cs =: <span class=\"nu0\">98</span> - <span class=\"nu0\">97</span> | coded @: rot @: delblk f.<br/>\u00a0<br/><span class=\"co1\">NB. check sum as text</span><br/>cstxt =. <span class=\"nu0\">_2</span>{. <span class=\"st_h\">'0'</span>, [: \": cs<br/><span class=\"co1\">NB. replace first two characters</span><br/>chgps =. [,<span class=\"nu0\">2</span>}.]<br/><span class=\"co1\">NB. shift country code</span><br/>rotlc =. <span class=\"nu0\">2</span>&amp;|.<br/><span class=\"co1\">NB. insert check digits (position 3 and 4)</span><br/>insertps =. chgps &amp;.rotlc<br/>\u00a0<br/><span class=\"co1\">NB. IBAN with newly calculated check digits</span><br/>ibancd =: <span class=\"sy0\">(</span>cstxt insertps ]<span class=\"sy0\">)</span> f.<br/>\u00a0<br/><span class=\"co1\">NB. check / generate check digits</span><br/>ibancheck =: ] <span class=\"sy0\">(</span>]`<span class=\"sy0\">(</span><span class=\"st_h\">'ok'</span>\"<span class=\"nu0\">_</span><span class=\"sy0\">)</span> @. -:<span class=\"sy0\">)</span> ibancd<br/>\u00a0<br/><span class=\"co1\">NB. groups of four characters</span><br/>insertblk =. #~ # $ <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> <span class=\"nu0\">1j1</span>\"<span class=\"nu0\">_</span><br/>quads =: insertblk @: delblk f.<br/>\u00a0<br/><span class=\"co1\">NB. IBAN</span><br/>iban =: quads @: ibancheck<br/>\u00a0</pre>"}, {"lang": "Java", "loc": 51, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.math.BigInteger</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> IBAN <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> DEFSTRS <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>            <span class=\"sy0\">+</span> <span class=\"st0\">\"AL28 AD24 AT20 AZ28 BE16 BH22 BA20 BR29 BG22 \"</span><br/>            <span class=\"sy0\">+</span> <span class=\"st0\">\"HR21 CY28 CZ24 DK18 DO28 EE20 FO18 FI18 FR27 GE22 DE22 GI23 \"</span><br/>            <span class=\"sy0\">+</span> <span class=\"st0\">\"GL18 GT28 HU28 IS26 IE22 IL23 IT27 KZ20 KW30 LV21 LB28 LI21 \"</span><br/>            <span class=\"sy0\">+</span> <span class=\"st0\">\"LT20 LU20 MK19 MT31 MR27 MU30 MC27 MD24 ME22 NL18 NO15 PK24 \"</span><br/>            <span class=\"sy0\">+</span> <span class=\"st0\">\"PS29 PL28 PT25 RO24 SM27 SA24 RS22 SK24 SI19 ES24 SE24 CH21 \"</span><br/>            <span class=\"sy0\">+</span> <span class=\"st0\">\"TN24 TR26 AE23 GB22 VG24 GR27 CR21\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> Map<span class=\"sy0\">&lt;</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>, Integer<span class=\"sy0\">&gt;</span> DEFINITIONS <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> HashMap<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> definition <span class=\"sy0\">:</span> DEFSTRS.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            DEFINITIONS.<span class=\"me1\">put</span><span class=\"br0\">(</span>definition.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>.<span class=\"me1\">parseInt</span><span class=\"br0\">(</span>definition.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> ibans <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>                <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span>,<br/>                <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span>,<br/>                <span class=\"st0\">\"GB81 WEST 1234 5698 7654 32\"</span>,<br/>                <span class=\"st0\">\"SA03 8000 0000 6080 1016 7519\"</span>,<br/>                <span class=\"st0\">\"CH93 0076 2011 6238 5295 7\"</span>,<br/>                <span class=\"st0\">\"XX00 0000\"</span>,<br/>                <span class=\"st0\">\"\"</span>,<br/>                <span class=\"st0\">\"DE\"</span>,<br/>                <span class=\"st0\">\"DE13 \u00e4\u00f6\u00fc_ 1234 1234 1234 12\"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> iban <span class=\"sy0\">:</span> ibans<span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s is\u00a0%s.%n\"</span>, iban, validateIBAN<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"valid\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"not valid\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> validateIBAN<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> iban<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        iban <span class=\"sy0\">=</span> iban.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\\\</span>s\"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span>.<span class=\"me1\">toUpperCase</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Alocale+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Locale</span></a>.<span class=\"me1\">ROOT</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span> len <span class=\"sy0\">=</span> iban.<span class=\"me1\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>len <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"sy0\">||</span> <span class=\"sy0\">!</span>iban.<span class=\"me1\">matches</span><span class=\"br0\">(</span><span class=\"st0\">\"[0-9A-Z]+\"</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> DEFINITIONS.<span class=\"me1\">getOrDefault</span><span class=\"br0\">(</span>iban.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> len<span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        iban <span class=\"sy0\">=</span> iban.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> iban.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        StringBuilder sb <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> StringBuilder<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> len<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            sb.<span class=\"me1\">append</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acharacter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Character</span></a>.<span class=\"me1\">digit</span><span class=\"br0\">(</span>iban.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>, <span class=\"nu0\">36</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abiginteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigInteger</span></a> bigInt <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abiginteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigInteger</span></a><span class=\"br0\">(</span>sb.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> bigInt.<span class=\"me1\">mod</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abiginteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BigInteger</span></a>.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span><span class=\"nu0\">97</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">intValue</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 28, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> ibanLen <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <br/>\tNO<span class=\"sy0\">:</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> BE<span class=\"sy0\">:</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> DK<span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> FI<span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> FO<span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> GL<span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> NL<span class=\"sy0\">:</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> MK<span class=\"sy0\">:</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span><br/>\tSI<span class=\"sy0\">:</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> AT<span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> BA<span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> EE<span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> KZ<span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> LT<span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> LU<span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> CR<span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><br/>\tCH<span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> HR<span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> LI<span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> LV<span class=\"sy0\">:</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> BG<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> BH<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> DE<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> GB<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>\tGE<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> IE<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> ME<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> RS<span class=\"sy0\">:</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> AE<span class=\"sy0\">:</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> GI<span class=\"sy0\">:</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> IL<span class=\"sy0\">:</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> AD<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>\tCZ<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> ES<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> MD<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> PK<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> RO<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SA<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SE<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SK<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>\tVG<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> TN<span class=\"sy0\">:</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> PT<span class=\"sy0\">:</span><span class=\"nu0\">25</span><span class=\"sy0\">,</span> IS<span class=\"sy0\">:</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> TR<span class=\"sy0\">:</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> FR<span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> GR<span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> IT<span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>\tMC<span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> MR<span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> SM<span class=\"sy0\">:</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> AL<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> AZ<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> CY<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> DO<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> GT<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>\tHU<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> LB<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> PL<span class=\"sy0\">:</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> BR<span class=\"sy0\">:</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> PS<span class=\"sy0\">:</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> KW<span class=\"sy0\">:</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> MU<span class=\"sy0\">:</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> MT<span class=\"sy0\">:</span><span class=\"nu0\">31</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> isValid<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tiban <span class=\"sy0\">=</span> iban.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"co2\">/\\s/g</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>iban.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"co2\">/^[\\dA-Z]+$/</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/>\t<span class=\"kw1\">var</span> len <span class=\"sy0\">=</span> iban.<span class=\"me1\">length</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>len <span class=\"sy0\">!=</span> ibanLen<span class=\"br0\">[</span>iban.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> <span class=\"kw2\">false</span><br/>\tiban <span class=\"sy0\">=</span> iban.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> iban.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> s<span class=\"sy0\">=</span><span class=\"st0\">''</span><span class=\"sy0\">,</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;</span>len<span class=\"sy0\">;</span> i<span class=\"sy0\">+=</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> s<span class=\"sy0\">+=</span>parseInt<span class=\"br0\">(</span>iban.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">36</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> m<span class=\"sy0\">=</span>s.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>97<span class=\"sy0\">,</span> s<span class=\"sy0\">=</span>s.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> s<span class=\"sy0\">;</span> s<span class=\"sy0\">=</span>s.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span><span class=\"br0\">)</span> m<span class=\"sy0\">=</span><span class=\"br0\">(</span>m<span class=\"sy0\">+</span>s.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">13</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>97<br/>\t<span class=\"kw1\">return</span> m <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>document.<span class=\"me1\">write</span><span class=\"br0\">(</span>isValid<span class=\"br0\">(</span><span class=\"st0\">'GB82 WEST 1234 5698 7654 32'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'&lt;br&gt;'</span><span class=\"br0\">)</span> <span class=\"co1\">// true</span><br/>document.<span class=\"me1\">write</span><span class=\"br0\">(</span>isValid<span class=\"br0\">(</span><span class=\"st0\">'GB82 WEST 1.34 5698 7654 32'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'&lt;br&gt;'</span><span class=\"br0\">)</span> <span class=\"co1\">// false</span><br/>document.<span class=\"me1\">write</span><span class=\"br0\">(</span>isValid<span class=\"br0\">(</span><span class=\"st0\">'GB82 WEST 1234 5698 7654 325'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'&lt;br&gt;'</span><span class=\"br0\">)</span> <span class=\"co1\">// false</span><br/>document.<span class=\"me1\">write</span><span class=\"br0\">(</span>isValid<span class=\"br0\">(</span><span class=\"st0\">'GB82 TEST 1234 5698 7654 32'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'&lt;br&gt;'</span><span class=\"br0\">)</span> <span class=\"co1\">// false</span><br/>document.<span class=\"me1\">write</span><span class=\"br0\">(</span>isValid<span class=\"br0\">(</span><span class=\"st0\">'SA03 8000 0000 6080 1016 7519'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'&lt;br&gt;'</span><span class=\"br0\">)</span> <span class=\"co1\">// true</span><br/>\u00a0</pre>"}, {"lang": "jq", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># strip the input string of spaces and tabs:<br/>gsub(\"[ \\t]\";\"\")<br/># check the string is ALPHAnumeric                   <br/>| test(\"^[A-Z0-9]+$\") <br/>  # check its length is as determined by the country code:           <br/>  and length == $lengths[.[0:2]] <br/>  # check the mod 97 criterion:<br/>  and ( (.[4:] + .[0:4]) | letters2digits | remainder) == 1<br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 22, "block": "<pre class=\"text highlighted_source\">function validiban(iban::AbstractString)<br/>    country2length = Dict(<br/>        \"AL\" =&gt; 28, \"AD\" =&gt; 24, \"AT\" =&gt; 20, \"AZ\" =&gt; 28, \"BE\" =&gt; 16, \"BH\" =&gt; 22, \"BA\" =&gt; 20, \"BR\" =&gt; 29,<br/>        \"BG\" =&gt; 22, \"CR\" =&gt; 21, \"HR\" =&gt; 21, \"CY\" =&gt; 28, \"CZ\" =&gt; 24, \"DK\" =&gt; 18, \"DO\" =&gt; 28, \"EE\" =&gt; 20,<br/>        \"FO\" =&gt; 18, \"FI\" =&gt; 18, \"FR\" =&gt; 27, \"GE\" =&gt; 22, \"DE\" =&gt; 22, \"GI\" =&gt; 23, \"GR\" =&gt; 27, \"GL\" =&gt; 18,<br/>        \"GT\" =&gt; 28, \"HU\" =&gt; 28, \"IS\" =&gt; 26, \"IE\" =&gt; 22, \"IL\" =&gt; 23, \"IT\" =&gt; 27, \"KZ\" =&gt; 20, \"KW\" =&gt; 30,<br/>        \"LV\" =&gt; 21, \"LB\" =&gt; 28, \"LI\" =&gt; 21, \"LT\" =&gt; 20, \"LU\" =&gt; 20, \"MK\" =&gt; 19, \"MT\" =&gt; 31, \"MR\" =&gt; 27,<br/>        \"MU\" =&gt; 30, \"MC\" =&gt; 27, \"MD\" =&gt; 24, \"ME\" =&gt; 22, \"NL\" =&gt; 18, \"NO\" =&gt; 15, \"PK\" =&gt; 24, \"PS\" =&gt; 29,<br/>        \"PL\" =&gt; 28, \"PT\" =&gt; 25, \"RO\" =&gt; 24, \"SM\" =&gt; 27, \"SA\" =&gt; 24, \"RS\" =&gt; 22, \"SK\" =&gt; 24, \"SI\" =&gt; 19,<br/>        \"ES\" =&gt; 24, \"SE\" =&gt; 24, \"CH\" =&gt; 21, \"TN\" =&gt; 24, \"TR\" =&gt; 26, \"AE\" =&gt; 23, \"GB\" =&gt; 22, \"VG\" =&gt; 24)<br/>\u00a0<br/>    # Ensure upper alphanumeric input.<br/>    iban = replace(iban, r\"\\s\", \"\")<br/>\u00a0<br/>    rst = ismatch(r\"^[\\dA-Z]+$\", iban)<br/>    # Validate country code against expected length.<br/>    rst = rst &amp;&amp; length(iban) == country2length[iban[1:2]]<br/>    # Shift and convert.<br/>    iban = iban[5:end] * iban[1:4]<br/>    digs = parse(BigInt, join(parse(Int, ch, 36) for ch in iban))<br/>    return rst &amp;&amp; digs\u00a0% 97 == 1<br/>end</pre>"}, {"lang": "Kotlin", "loc": 40, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">math</span>.<span class=\"me1\">BigInteger</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Iban <span class=\"br0\">{</span><br/>    <span class=\"coMULTI\">/* List updated to release 73, January 2017, of IBAN Registry (75 countries) */</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> countryCodes <span class=\"sy0\">=</span> <br/>        <span class=\"st0\">\"AD24 AE23 AL28 AT20 AZ28 BA20 BE16 BG22 BH22 BR29 BY28 CH21 CR22 CY28 CZ24 DE22 \"</span> +<br/>        <span class=\"st0\">\"DK18 DO28 EE20 ES24 FI18 FO18 FR27 GB22 GE22 GI23 GL18 GR27 GT28 HR21 HU28 IE22 \"</span> +<br/>        <span class=\"st0\">\"IL23 IQ23 IS26 IT27 JO30 KW30 KZ20 LB28 LC32 LI21 LT20 LU20 LV21 MC27 MD24 ME22 \"</span> +<br/>        <span class=\"st0\">\"MK19 MR27 MT31 MU30 NL18 NO15 PK24 PL28 PS29 PT25 QA29 RO24 RS22 SA24 SC31 SE24 \"</span> +<br/>        <span class=\"st0\">\"SI19 SK24 SM27 ST25 SV28 TL23 TN24 TR26 UA29 VG24 XK20\"</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun checkCountryCode<span class=\"br0\">(</span>cc<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">=</span> cc in countryCodes<br/>\u00a0<br/>    fun validate<span class=\"br0\">(</span>iban<span class=\"sy0\">:</span> String<span class=\"br0\">)</span><span class=\"sy0\">:</span> Boolean <span class=\"br0\">{</span><br/>        <span class=\"co1\">// remove spaces from IBAN</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> s <span class=\"sy0\">=</span> iban.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// check country code</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>checkCountryCode<span class=\"br0\">(</span>s.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span> + s.<span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>\u00a0<br/>        <span class=\"co1\">// move first 4 characters to end </span><br/>        s <span class=\"sy0\">=</span> s.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> + s.<span class=\"me1\">substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// replace A to Z with numbers 10 To 35</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>ch in <span class=\"st0\">'A'</span>..<span class=\"st0\">'Z'</span><span class=\"br0\">)</span> s <span class=\"sy0\">=</span> s.<span class=\"me1\">replace</span><span class=\"br0\">(</span>ch.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span>ch - <span class=\"nu0\">55</span><span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// check whether mod 97 calculation gives a remainder of 1 </span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> BigInteger<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy0\">%</span> BigInteger.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>97L<span class=\"br0\">)</span> <span class=\"sy0\">==</span> BigInteger.<span class=\"me1\">ONE</span>      <br/>    <span class=\"br0\">}</span>   <br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ibans <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span>, <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>iban in ibans<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>         <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> isValid <span class=\"sy0\">=</span> Iban.<span class=\"me1\">validate</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>         println<span class=\"br0\">(</span>iban + <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a><span class=\"br0\">(</span>isValid<span class=\"br0\">)</span> <span class=\"st0\">\" may be valid\"</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"st0\">\" is not valid\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Logtalk", "loc": 131, "block": "<pre class=\"logtalk highlighted_source\">\u00a0<br/><span class=\"sy2\">:-</span> <span class=\"kw1\">object</span>(iban).<br/>\u00a0<br/>\t<span class=\"sy2\">:-</span> <span class=\"kw1\">info</span>([<br/>\t\tversion <span class=\"kw5\">is</span> <span class=\"nu0\">0.1</span>,<br/>\t\tauthor <span class=\"kw5\">is</span> <span class=\"st0\">'Paulo Moura'</span>,<br/>\t\tdate <span class=\"kw5\">is</span> <span class=\"nu0\">2015</span><span class=\"sy1\">/</span><span class=\"nu0\">10</span><span class=\"sy1\">/</span><span class=\"nu0\">11</span>,<br/>\t\tcomment <span class=\"kw5\">is</span> <span class=\"st0\">'IBAN validation example using DCG rules.'</span><br/>\t]).<br/>\u00a0<br/>\t<span class=\"sy2\">:-</span> <span class=\"kw1\">public</span>(valid<span class=\"sy1\">/</span><span class=\"nu0\">1</span>).<br/>\u00a0<br/>\tvalid(<span class=\"re0\">IBAN</span>) <span class=\"sy2\">:-</span><br/>\t\t<span class=\"kw4\">phrase</span>(iban, <span class=\"re0\">IBAN</span>), <span class=\"sy1\">!</span>.<br/>\u00a0<br/>\tiban <span class=\"sy1\">--&gt;</span><br/>\t\tcountry_code(<span class=\"re0\">Code</span>), check_digits(<span class=\"re0\">Check</span>), bban(<span class=\"re0\">BBAN</span>),<br/>\t\t<span class=\"sy0\">{</span>(<span class=\"re0\">BBAN</span><span class=\"sy1\">*</span><span class=\"nu0\">1000000</span> <span class=\"sy1\">+</span> <span class=\"re0\">Code</span><span class=\"sy1\">*</span><span class=\"nu0\">100</span> <span class=\"sy1\">+</span> <span class=\"re0\">Check</span>) <span class=\"kw7\">mod</span> <span class=\"nu0\">97</span> <span class=\"sy1\">=:=</span> <span class=\"nu0\">1</span><span class=\"sy0\">}</span>.<br/>\u00a0<br/>\tcountry_code(<span class=\"re0\">Code</span>) <span class=\"sy1\">--&gt;</span><br/>\t\tletter_digits(<span class=\"re0\">L1</span>, <span class=\"re0\">D3</span>, <span class=\"re0\">D2</span>), letter_digits(<span class=\"re0\">L0</span>, <span class=\"re0\">D1</span>, <span class=\"re0\">D0</span>),<br/>\t\t<span class=\"sy0\">{</span>country_code([<span class=\"re0\">L1</span>, <span class=\"re0\">L0</span>]), <span class=\"re0\">Code</span> <span class=\"kw5\">is</span> <span class=\"re0\">D3</span><span class=\"sy1\">*</span><span class=\"nu0\">1000</span> <span class=\"sy1\">+</span> <span class=\"re0\">D2</span><span class=\"sy1\">*</span><span class=\"nu0\">100</span> <span class=\"sy1\">+</span> <span class=\"re0\">D1</span><span class=\"sy1\">*</span><span class=\"nu0\">10</span> <span class=\"sy1\">+</span> <span class=\"re0\">D0</span><span class=\"sy0\">}</span>.<br/>\u00a0<br/>\tcheck_digits(<span class=\"re0\">Check</span>) <span class=\"sy1\">--&gt;</span><br/>\t\tdigit(<span class=\"re0\">D1</span>), digit(<span class=\"re0\">D0</span>),<br/>\t\t<span class=\"sy0\">{</span><span class=\"re0\">Check</span> <span class=\"kw5\">is</span> <span class=\"re0\">D1</span><span class=\"sy1\">*</span><span class=\"nu0\">10</span> <span class=\"sy1\">+</span> <span class=\"re0\">D0</span><span class=\"sy0\">}</span>.<br/>\u00a0<br/>\tbban(<span class=\"re0\">BBAN</span>) <span class=\"sy1\">--&gt;</span><br/>\t\tbban_codes(<span class=\"re0\">Digits</span>),<br/>\t\t<span class=\"sy0\">{</span>digits_to_integer(<span class=\"re0\">Digits</span>, <span class=\"re0\">BBAN</span>, <span class=\"re0\">Count</span>), <span class=\"re0\">Count</span> <span class=\"sy1\">=&lt;</span> <span class=\"nu0\">30</span><span class=\"sy0\">}</span>.<br/>\u00a0<br/>\tbban_codes(<span class=\"re0\">Ds</span>) <span class=\"sy1\">--&gt;</span><br/>\t\t<span class=\"st_h\">\" \"</span>, bban_codes(<span class=\"re0\">Ds</span>).<br/>\tbban_codes([<span class=\"re0\">D</span>| <span class=\"re0\">Ds</span>]) <span class=\"sy1\">--&gt;</span><br/>\t\tdigit(<span class=\"re0\">D</span>), bban_codes(<span class=\"re0\">Ds</span>).<br/>\tbban_codes([<span class=\"re0\">D1</span>, <span class=\"re0\">D0</span>| <span class=\"re0\">Ds</span>]) <span class=\"sy1\">--&gt;</span><br/>\t\tletter_digits(<span class=\"re0\">_</span>, <span class=\"re0\">D1</span>, <span class=\"re0\">D0</span>), bban_codes(<span class=\"re0\">Ds</span>).<br/>\tbban_codes([]) <span class=\"sy1\">--&gt;</span><br/>\t\t[].<br/>\u00a0<br/>\tdigit(<span class=\"re0\">D</span>) <span class=\"sy1\">--&gt;</span><br/>\t\t[<span class=\"re0\">C</span>],<br/>\t\t<span class=\"sy0\">{</span><span class=\"co2\">0'0</span> <span class=\"sy1\">=&lt;</span> <span class=\"re0\">C</span>, <span class=\"re0\">C</span> <span class=\"sy1\">=&lt;</span> <span class=\"co2\">0'9</span>, <span class=\"re0\">D</span> <span class=\"kw5\">is</span> <span class=\"re0\">C</span> <span class=\"sy1\">-</span> <span class=\"co2\">0'0</span><span class=\"sy0\">}</span>.<br/>\u00a0<br/>\tletter_digits(<span class=\"re0\">C</span>, <span class=\"re0\">D1</span>, <span class=\"re0\">D0</span>) <span class=\"sy1\">--&gt;</span><br/>\t\t[<span class=\"re0\">C</span>],<br/>\t\t<span class=\"sy0\">{</span>\t(\t<span class=\"co2\">0'A</span> <span class=\"sy1\">=&lt;</span> <span class=\"re0\">C</span>, <span class=\"re0\">C</span> <span class=\"sy1\">=&lt;</span> <span class=\"co2\">0'Z</span> <span class=\"sy1\">-&gt;</span><br/>\t\t\t\t<span class=\"re0\">D</span> <span class=\"kw5\">is</span> <span class=\"re0\">C</span> <span class=\"sy1\">-</span> <span class=\"co2\">0'A</span> <span class=\"sy1\">+</span> <span class=\"nu0\">10</span><br/>\t\t\t<span class=\"sy1\">;</span>\t<span class=\"co2\">0'a</span> <span class=\"sy1\">=&lt;</span> <span class=\"re0\">C</span>, <span class=\"re0\">C</span> <span class=\"sy1\">=&lt;</span> <span class=\"co2\">0'z</span>,<br/>\t\t\t\t<span class=\"re0\">D</span> <span class=\"kw5\">is</span> <span class=\"re0\">C</span> <span class=\"sy1\">-</span> <span class=\"co2\">0'a</span> <span class=\"sy1\">+</span> <span class=\"nu0\">10</span><br/>\t\t\t),<br/>\t\t\t<span class=\"re0\">D1</span> <span class=\"kw5\">is</span> <span class=\"re0\">D</span> div <span class=\"nu0\">10</span>,<br/>\t\t\t<span class=\"re0\">D0</span> <span class=\"kw5\">is</span> <span class=\"re0\">D</span> <span class=\"kw7\">mod</span> <span class=\"nu0\">10</span><br/>\t\t<span class=\"sy0\">}</span>.<br/>\u00a0<br/>\tdigits_to_integer(<span class=\"re0\">Digits</span>, <span class=\"re0\">BBAN</span>, <span class=\"re0\">Count</span>) <span class=\"sy2\">:-</span><br/>\t\tdigits_to_integer(<span class=\"re0\">Digits</span>, <span class=\"nu0\">0</span>, <span class=\"re0\">BBAN</span>, <span class=\"nu0\">0</span>, <span class=\"re0\">Count</span>).<br/>\u00a0<br/>\tdigits_to_integer([], <span class=\"re0\">BBAN</span>, <span class=\"re0\">BBAN</span>, <span class=\"re0\">Count</span>, <span class=\"re0\">Count</span>).<br/>\tdigits_to_integer([<span class=\"re0\">Digit</span>| <span class=\"re0\">Digits</span>], <span class=\"re0\">BBAN0</span>, <span class=\"re0\">BBAN</span>, <span class=\"re0\">Count0</span>, <span class=\"re0\">Count</span>) <span class=\"sy2\">:-</span><br/>\t\t<span class=\"re0\">BBAN1</span> <span class=\"kw5\">is</span> <span class=\"re0\">BBAN0</span> <span class=\"sy1\">*</span> <span class=\"nu0\">10</span> <span class=\"sy1\">+</span> <span class=\"re0\">Digit</span>,<br/>\t\t<span class=\"re0\">Count1</span> <span class=\"kw5\">is</span> <span class=\"re0\">Count0</span> <span class=\"sy1\">+</span> <span class=\"nu0\">1</span>,<br/>\t\tdigits_to_integer(<span class=\"re0\">Digits</span>, <span class=\"re0\">BBAN1</span>, <span class=\"re0\">BBAN</span>, <span class=\"re0\">Count1</span>, <span class=\"re0\">Count</span>).<br/>\u00a0<br/>\tcountry_code(<span class=\"st_h\">\"AL\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"AD\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"AT\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"AZ\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"BE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"BH\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"BA\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"BR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"BG\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"CR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"HR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"CY\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"CZ\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"DK\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"DO\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"EE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"FO\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"FI\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"FR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"GE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"DE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"GI\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"GR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"GL\"</span>).  <br/>\tcountry_code(<span class=\"st_h\">\"GT\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"HU\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"IS\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"IE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"IL\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"IT\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"KZ\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"KW\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"LV\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"LB\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"LI\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"LT\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"LU\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"MK\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"MT\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"MR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"MU\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"MC\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"MD\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"ME\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"NL\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"NO\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"PK\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"PS\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"PL\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"PT\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"RO\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"SM\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"SA\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"RS\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"SK\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"SI\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"ES\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"SE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"CH\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"TN\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"TR\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"AE\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"GB\"</span>).<br/>\tcountry_code(<span class=\"st_h\">\"VG\"</span>).<br/>\u00a0<br/><span class=\"sy2\">:-</span> <span class=\"kw2\">end_object</span>.<br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 24, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">local</span> length<span class=\"sy0\">=</span><br/><span class=\"br0\">{</span><br/>  AL<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> AD<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> AT<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> AZ<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> BH<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> BE<span class=\"sy0\">=</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> BA<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> BR<span class=\"sy0\">=</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> BG<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> CR<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span><br/>  HR<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> CY<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> CZ<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> DK<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> DO<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> EE<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> FO<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> FI<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> FR<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> GE<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>  DE<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> GI<span class=\"sy0\">=</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> GR<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> GL<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> GT<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> HU<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> IS<span class=\"sy0\">=</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> IE<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> IL<span class=\"sy0\">=</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> IT<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>  JO<span class=\"sy0\">=</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> KZ<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> KW<span class=\"sy0\">=</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> LV<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> LB<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> LI<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> LT<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> LU<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> MK<span class=\"sy0\">=</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> MT<span class=\"sy0\">=</span><span class=\"nu0\">31</span><span class=\"sy0\">,</span><br/>  MR<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> MU<span class=\"sy0\">=</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> MC<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> MD<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> ME<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> NL<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> NO<span class=\"sy0\">=</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> PK<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> PS<span class=\"sy0\">=</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> PL<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>  PT<span class=\"sy0\">=</span><span class=\"nu0\">25</span><span class=\"sy0\">,</span> QA<span class=\"sy0\">=</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span> RO<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SM<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> SA<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> RS<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> SK<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SI<span class=\"sy0\">=</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> ES<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SE<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>  CH<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> TN<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> TR<span class=\"sy0\">=</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> AE<span class=\"sy0\">=</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> GB<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> VG<span class=\"sy0\">=</span><span class=\"nu0\">24</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> validate<span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/>  iban<span class=\"sy0\">=</span>iban<span class=\"sy0\">:</span><span class=\"kw3\">gsub</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> l<span class=\"sy0\">=</span>length<span class=\"br0\">[</span>iban<span class=\"sy0\">:</span>sub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> l <span class=\"kw2\">or</span> l<span class=\"sy0\">~=#</span>iban <span class=\"kw2\">or</span> iban<span class=\"sy0\">:</span>match<span class=\"br0\">(</span><span class=\"st0\">\"[^%d%u]\"</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">false</span> <span class=\"co1\">-- invalid character, country code or length</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">local</span> <span class=\"kw3\">mod</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>  <span class=\"kw1\">local</span> rotated<span class=\"sy0\">=</span>iban<span class=\"sy0\">:</span>sub<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">..</span>iban<span class=\"sy0\">:</span>sub<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">for</span> c <span class=\"kw2\">in</span> rotated<span class=\"sy0\">:</span>gmatch<span class=\"br0\">(</span><span class=\"st0\">\".\"</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">mod</span><span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"kw3\">mod</span><span class=\"sy0\">..</span><span class=\"kw3\">tonumber</span><span class=\"br0\">(</span>c<span class=\"sy0\">,</span><span class=\"nu0\">36</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> <span class=\"kw3\">mod</span><span class=\"sy0\">==</span><span class=\"nu0\">1</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 43, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\\\\ IBAN checker<br/>Function MakeIBANfun$ {<br/>      Inventory countrylength = \"AL\"\u00a0:= 28, \"AD\"\u00a0:= 24, \"AT\"\u00a0:= 20, \"AZ\"\u00a0:= 28, \"BE\"\u00a0:= 16, \"BH\"\u00a0:= 22, \"BA\"\u00a0:= 20, \"BR\"\u00a0:= 29<br/>      Append  countrylength, \"BG\"\u00a0:= 22, \"CR\"\u00a0:= 21, \"HR\"\u00a0:= 21, \"CY\"\u00a0:= 28, \"CZ\"\u00a0:= 24, \"DK\"\u00a0:= 18, \"DO\"\u00a0:= 28, \"EE\"\u00a0:= 20<br/>      Append  countrylength, \"FO\"\u00a0:= 18, \"FI\"\u00a0:= 18, \"FR\"\u00a0:= 27, \"GE\"\u00a0:= 22, \"DE\"\u00a0:= 22, \"GI\"\u00a0:= 23, \"GR\"\u00a0:= 27, \"GL\"\u00a0:= 18<br/>      Append  countrylength, \"GT\"\u00a0:= 28, \"HU\"\u00a0:= 28, \"IS\"\u00a0:= 26, \"IE\"\u00a0:= 22, \"IL\"\u00a0:= 23, \"IT\"\u00a0:= 27, \"KZ\"\u00a0:= 20, \"KW\"\u00a0:= 30<br/>      Append  countrylength, \"LV\"\u00a0:= 21, \"LB\"\u00a0:= 28, \"LI\"\u00a0:= 21, \"LT\"\u00a0:= 20, \"LU\"\u00a0:= 20, \"MK\"\u00a0:= 19, \"MT\"\u00a0:= 31, \"MR\"\u00a0:= 27<br/>      Append  countrylength, \"MU\"\u00a0:= 30, \"MC\"\u00a0:= 27, \"MD\"\u00a0:= 24, \"ME\"\u00a0:= 22, \"NL\"\u00a0:= 18, \"NO\"\u00a0:= 15, \"PK\"\u00a0:= 24, \"PS\"\u00a0:= 29<br/>      Append  countrylength, \"PL\"\u00a0:= 28, \"PT\"\u00a0:= 25, \"RO\"\u00a0:= 24, \"SM\"\u00a0:= 27, \"SA\"\u00a0:= 24, \"RS\"\u00a0:= 22, \"SK\"\u00a0:= 24, \"SI\"\u00a0:= 19<br/>      Append  countrylength, \"ES\"\u00a0:= 24, \"SE\"\u00a0:= 24, \"CH\"\u00a0:= 21, \"TN\"\u00a0:= 24, \"TR\"\u00a0:= 26, \"AE\"\u00a0:= 23, \"GB\"\u00a0:= 22, \"VG\"\u00a0:= 24<br/>\u00a0<br/>     =Lambda$ countrylength (Iban0$)-&gt;{<br/>            Iban$=Filter$(Ucase$(Iban0$), \" \")<br/>            Iban$=Filter$(Iban$, Filter$(Iban$,\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"))<br/>            Def Decimal ch, c<br/>            {            <br/>                  If Not Exist(countrylength, Left$(Iban$,2)) Then Exit<br/>                  length=Eval(countrylength)<br/>                  If Not Len(Iban$)=length Then exit<br/>                  Buffer ScanChar as Integer*length<br/>                  Return ScanChar, 0:=Mid$(Iban$,5), length-4:=Mid$(Iban$,1,4)<br/>\u00a0<br/>                  For i=0 to length-1 {<br/>                        ch=Eval(ScanChar, i)<br/>                        if ch&gt;=48 and ch&lt;=57 then {<br/>                              c = c*10+ch-48    <br/>                        } else.if ch&gt;=65 and ch&lt;=90 then {<br/>                              c = c*100+ch-55<br/>                        } else c=-1: exit<br/>                  }<br/>                  c = c mod 97<br/>            }<br/>            =Iban0$ + If$(c=1 -&gt;\" (Valid)\", \" (Invalid)\")<br/>      }<br/>}<br/>IbanCheck$=MakeIBANfun$()<br/>Print IbanCheck$(\"GB82 WEST 1234 5698 7654 32\")    ' valid<br/>Print IbanCheck$(\"GB82 TEST 1234 5698 7654 32\")<br/>Print IbanCheck$(\"SA03 8000 0000 6080 1016 7519\")   ' valid<br/>Print IbanCheck$(\"GR16 0110 1250 0000 0001 2300 695X\")<br/>Print IbanCheck$(\"MK11 2222 3333 4444 555\")<br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 29, "block": "<pre class=\"text highlighted_source\">CountryCodes={{\"AL\",28},{\"AD\",24},{\"AT\",20},{\"AZ\",28},{\"BE\",16},{\"BH\",22},{\"BA\",20},{\"BR\",29},{\"BG\",22},{\"CR\",21},{\"HR\",21},{\"CY\",28},{\"CZ\",24},{\"DK\",18},{\"DO\",28},{\"EE\",20},{\"FO\",18},{\"FI\",18},{\"FR\",27},{\"GE\",22},{\"DE\",22},{\"GI\",23},{\"GR\",27},{\"GL\",18},{\"GT\",28},{\"HU\",28},{\"IS\",26},{\"IE\",22},{\"IL\",23},{\"IT\",27},{\"KZ\",20},{\"KW\",30},{\"LV\",21},{\"LB\",28},{\"LI\",21},{\"LT\",20},{\"LU\",20},{\"MK\",19},{\"MT\",31},{\"MR\",27},{\"MU\",30},{\"MC\",27},{\"MD\",24},{\"ME\",22},{\"NL\",18},{\"NO\",15},{\"PK\",24},{\"PS\",29},{\"PL\",28},{\"PT\",25},{\"RO\",24},{\"SM\",27},{\"SA\",24},{\"RS\",22},{\"SK\",24},{\"SI\",19},{\"ES\",24},{\"SE\",24},{\"CH\",21},{\"TN\",24},{\"TR\",26},{\"AE\",23},{\"GB\",22},{\"VG\",24}};<br/>ClearAll[IBANVerify]<br/>IBANVerify[input_String]:=Module[{i,cc,rules},<br/> i=StringReplace[StringTrim[input],{\" \"-&gt;\"\",\"\\t\"-&gt;\"\"}];<br/> cc=StringTake[i,2];<br/> If[MemberQ[CountryCodes[[All,1]],cc]<br/> ,<br/>  cc=Select[CountryCodes,First[#]==cc&amp;][[1,2]];<br/>  If[cc==StringLength[i]<br/>  ,<br/>   i=StringRotateLeft[i,4];<br/>   i=Characters[ToUpperCase[i]];<br/>   <a class=\"__cf_email__\" data-cfemail=\"681a1d040d1b553a1d040d28\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>@@({CharacterRange[\"A\",\"Z\"],Range[10,35]}\\[Transpose]);<br/>   i=i/.rules;<br/>   i=ToExpression/@i;<br/>   i=FromDigits[Flatten[IntegerDigits/@i]];<br/>   If[Mod[i,97]===1<br/>   ,<br/>    True<br/>   ,<br/>    False<br/>   ]<br/>  ,<br/>   False<br/>  ]<br/> ,<br/>  False<br/> ]<br/>]</pre>"}, {"lang": "MATLAB", "loc": 30, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> valid = validateIBAN<span class=\"br0\">(</span>iban<span class=\"br0\">)</span><br/><span class=\"co1\">% Determine if International Bank Account Number is valid IAW ISO 13616</span><br/><span class=\"co1\">% iban - string containing account number</span><br/>    <span class=\"kw1\">if</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>iban<span class=\"br0\">)</span> &lt; <span class=\"nu0\">5</span><br/>        valid = false;<br/>    <span class=\"kw1\">else</span><br/>        iban<span class=\"br0\">(</span>iban == <span class=\"co2\">' '</span><span class=\"br0\">)</span> = <span class=\"co2\">''</span>;                     <span class=\"co1\">% Remove spaces</span><br/>        iban = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/lower.html\"><span class=\"kw2\">lower</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span>iban<span class=\"br0\">(</span><span class=\"nu0\">5</span>:<span class=\"kw1\">end</span><span class=\"br0\">)</span> iban<span class=\"br0\">(</span><span class=\"nu0\">1</span>:<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>+<span class=\"nu0\">0</span>;\t<span class=\"co1\">% Rearrange and convert</span><br/>        iban<span class=\"br0\">(</span>iban &gt; <span class=\"nu0\">96</span> &amp; iban &lt; <span class=\"nu0\">123</span><span class=\"br0\">)</span> = iban<span class=\"br0\">(</span>iban &gt; <span class=\"nu0\">96</span> &amp; iban &lt; <span class=\"nu0\">123</span><span class=\"br0\">)</span>-<span class=\"nu0\">87</span>; <span class=\"co1\">% Letters</span><br/>        iban<span class=\"br0\">(</span>iban &gt; <span class=\"nu0\">47</span> &amp; iban &lt; <span class=\"nu0\">58</span><span class=\"br0\">)</span> = iban<span class=\"br0\">(</span>iban &gt; <span class=\"nu0\">47</span> &amp; iban &lt; <span class=\"nu0\">58</span><span class=\"br0\">)</span>-<span class=\"nu0\">48</span>;   <span class=\"co1\">% Numbers</span><br/>        valid = piecewiseMod97<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> == <span class=\"nu0\">1</span>;<br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> result = piecewiseMod97<span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/><span class=\"co1\">% Conduct a piecewise version of mod(x, 97) to support large integers</span><br/><span class=\"co1\">% x is a vector of integers</span><br/>    x = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%d'</span>, x<span class=\"br0\">)</span>;\t<span class=\"co1\">% Get to single-digits per index</span><br/>    nDig = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>x<span class=\"br0\">)</span>;<br/>    i1 = <span class=\"nu0\">1</span>;<br/>    i2 = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/min.html\"><span class=\"kw2\">min</span></a><span class=\"br0\">(</span><span class=\"nu0\">9</span>, nDig<span class=\"br0\">)</span>;<br/>    prefix = <span class=\"co2\">''</span>;<br/>    <span class=\"kw1\">while</span> i1 &lt;= nDig<br/>        y = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/str2double.html\"><span class=\"kw2\">str2double</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span>prefix x<span class=\"br0\">(</span>i1:i2<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>        result = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/mod.html\"><span class=\"kw2\">mod</span></a><span class=\"br0\">(</span>y, <span class=\"nu0\">97</span><span class=\"br0\">)</span>;<br/>        prefix = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%d'</span>, result<span class=\"br0\">)</span>;<br/>        i1 = i2+<span class=\"nu0\">1</span>;<br/>        i2 = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/min.html\"><span class=\"kw2\">min</span></a><span class=\"br0\">(</span>i1+<span class=\"nu0\">8</span>, nDig<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "NewLISP", "loc": 69, "block": "<pre class=\"newlisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> <span class=\"sy1\">*</span>iban<span class=\"sy1\">-</span>code<span class=\"sy1\">-</span>length<span class=\"sy1\">*</span> <span class=\"sy0\">'</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">15</span>  <span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                             <span class=\"br0\">(</span><span class=\"nu0\">16</span>  <span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                             <span class=\"br0\">(</span><span class=\"nu0\">18</span>  <span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span> <span class=\"st0\">\"FO\"</span> <span class=\"st0\">\"FI\"</span> <span class=\"st0\">\"GL\"</span> <span class=\"st0\">\"NL\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">19</span>  <span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span> <span class=\"st0\">\"SI\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">20</span>  <span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span> <span class=\"st0\">\"BA\"</span> <span class=\"st0\">\"EE\"</span> <span class=\"st0\">\"KZ\"</span> <span class=\"st0\">\"LT\"</span> <span class=\"st0\">\"LU\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">21</span>  <span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span> <span class=\"st0\">\"HR\"</span> <span class=\"st0\">\"LV\"</span> <span class=\"st0\">\"LI\"</span> <span class=\"st0\">\"CH\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">22</span>  <span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span> <span class=\"st0\">\"BG\"</span> <span class=\"st0\">\"GE\"</span> <span class=\"st0\">\"DE\"</span> <span class=\"st0\">\"IE\"</span> <span class=\"st0\">\"ME\"</span> <span class=\"st0\">\"RS\"</span> <span class=\"st0\">\"GB\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">23</span>  <span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span> <span class=\"st0\">\"IL\"</span> <span class=\"st0\">\"AE\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">24</span>  <span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span> <span class=\"st0\">\"CZ\"</span> <span class=\"st0\">\"MD\"</span> <span class=\"st0\">\"PK\"</span> <span class=\"st0\">\"RO\"</span> <span class=\"st0\">\"SA\"</span> <span class=\"st0\">\"SK\"</span> <span class=\"st0\">\"ES\"</span> <span class=\"st0\">\"SE\"</span> <span class=\"st0\">\"TN\"</span> <span class=\"st0\">\"VG\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">25</span>  <span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">26</span>  <span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span> <span class=\"st0\">\"TR\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">27</span>  <span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span> <span class=\"st0\">\"GR\"</span> <span class=\"st0\">\"IT\"</span> <span class=\"st0\">\"MR\"</span> <span class=\"st0\">\"MC\"</span> <span class=\"st0\">\"SM\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">28</span>  <span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span> <span class=\"st0\">\"AZ\"</span> <span class=\"st0\">\"CY\"</span> <span class=\"st0\">\"DO\"</span> <span class=\"st0\">\"GT\"</span> <span class=\"st0\">\"HU\"</span> <span class=\"st0\">\"LB\"</span> <span class=\"st0\">\"PL\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">29</span>  <span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span> <span class=\"st0\">\"PS\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">30</span>  <span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span> <span class=\"st0\">\"MU\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                             <span class=\"br0\">(</span><span class=\"nu0\">31</span>  <span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br/>\u00a0<br/><span class=\"co1\">;; Remove spaces and set upper case.</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>sanitize<span class=\"sy1\">-</span>iban iban<span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#upper-case\"><span class=\"kw1\">upper-case</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#replace\"><span class=\"kw1\">replace</span></a> <span class=\"st0\">\" \"</span> iban <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br/>\u00a0<br/><span class=\"co1\">;; Check that only A-Z and 0-9 are used.</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>valid<span class=\"sy1\">-</span>chars? iban<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> rx <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#string\"><span class=\"kw1\">string</span></a> <span class=\"st0\">\"[A-Z0-9]{\"</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#length\"><span class=\"kw1\">length</span></a> iban<span class=\"br0\">)</span> <span class=\"st0\">\"}\"</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#regex\"><span class=\"kw1\">regex</span></a> rx iban <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br/>\u00a0<br/><span class=\"co1\">;; Check that the length is correct for the country.</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>valid<span class=\"sy1\">-</span>length? iban<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> countries<span class=\"sy1\">-</span>found <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#lookup\"><span class=\"kw1\">lookup</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#int\"><span class=\"kw1\">int</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#length\"><span class=\"kw1\">length</span></a> iban<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy1\">*</span>iban<span class=\"sy1\">-</span>code<span class=\"sy1\">-</span>length<span class=\"sy1\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#not\"><span class=\"kw1\">not</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#nil%3F\"><span class=\"kw1\">nil?</span></a> countries<span class=\"sy1\">-</span>found<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#member\"><span class=\"kw1\">member</span></a> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">2</span> iban<span class=\"br0\">)</span> countries<span class=\"sy1\">-</span>found<span class=\"br0\">)</span><br/>\t<span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br/>\u00a0<br/><span class=\"co1\">;; Convert the IBAN to integer following the rules from Wikipedia.</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>iban<span class=\"sy1\">-</span>to<span class=\"sy1\">-</span>integer iban<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> country<span class=\"sy1\">-</span>code <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"nu0\">2</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> checksum <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"nu0\">2</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> iban <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#string\"><span class=\"kw1\">string</span></a> <span class=\"br0\">(</span><span class=\"nu0\">4</span> iban<span class=\"br0\">)</span> country<span class=\"sy1\">-</span>code<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> iban <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#join\"><span class=\"kw1\">join</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#map\"><span class=\"kw1\">map</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#lambda\"><span class=\"kw1\">lambda</span></a> <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#regex\"><span class=\"kw1\">regex</span></a> <span class=\"st0\">\"[0-9]\"</span> x<span class=\"br0\">)</span> x <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#string\"><span class=\"kw1\">string</span></a> <span class=\"br0\">(</span><span class=\"sy1\">-</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#char\"><span class=\"kw1\">char</span></a> x<span class=\"br0\">)</span> <span class=\"nu0\">55</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#explode\"><span class=\"kw1\">explode</span></a> iban<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>bigint <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#string\"><span class=\"kw1\">string</span></a> iban checksum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br/>\u00a0<br/><span class=\"co1\">;; Test if IBAN is correct (true) or not (nil):</span><br/><span class=\"co1\">;; (valid-iban? \"GB82 WEST 1234 5698 7654 32\") ==&gt; true</span><br/><span class=\"co1\">;; (valid-iban? \"GB82 TEST 1234 5698 7654 32\") ==&gt; nil</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>valid<span class=\"sy1\">-</span>iban? iban<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setq\"><span class=\"kw1\">setq</span></a> iban <span class=\"br0\">(</span>sanitize<span class=\"sy1\">-</span>iban iban<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#and\"><span class=\"kw1\">and</span></a><br/>        <span class=\"br0\">(</span>valid<span class=\"sy1\">-</span>chars? iban<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>valid<span class=\"sy1\">-</span>length? iban<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"sy1\">=</span> 1L <span class=\"br0\">(</span><span class=\"sy1\">%</span> <span class=\"br0\">(</span>iban<span class=\"sy1\">-</span>to<span class=\"sy1\">-</span>integer iban<span class=\"br0\">)</span> <span class=\"nu0\">97</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 34, "block": "<pre class=\"text highlighted_source\">import tables, strutils, re, bigints<br/>\u00a0<br/>let countryLen = toTable({<br/>  \"AL\": 28, \"AD\": 24, \"AT\": 20, \"AZ\": 28, \"BE\": 16, \"BH\": 22, \"BA\": 20, \"BR\": 29,<br/>  \"BG\": 22, \"CR\": 21, \"HR\": 21, \"CY\": 28, \"CZ\": 24, \"DK\": 18, \"DO\": 28, \"EE\": 20,<br/>  \"FO\": 18, \"FI\": 18, \"FR\": 27, \"GE\": 22, \"DE\": 22, \"GI\": 23, \"GR\": 27, \"GL\": 18,<br/>  \"GT\": 28, \"HU\": 28, \"IS\": 26, \"IE\": 22, \"IL\": 23, \"IT\": 27, \"KZ\": 20, \"KW\": 30,<br/>  \"LV\": 21, \"LB\": 28, \"LI\": 21, \"LT\": 20, \"LU\": 20, \"MK\": 19, \"MT\": 31, \"MR\": 27,<br/>  \"MU\": 30, \"MC\": 27, \"MD\": 24, \"ME\": 22, \"NL\": 18, \"NO\": 15, \"PK\": 24, \"PS\": 29,<br/>  \"PL\": 28, \"PT\": 25, \"RO\": 24, \"SM\": 27, \"SA\": 24, \"RS\": 22, \"SK\": 24, \"SI\": 19,<br/>  \"ES\": 24, \"SE\": 24, \"CH\": 21, \"TN\": 24, \"TR\": 26, \"AE\": 23, \"GB\": 22, \"VG\": 24})<br/>\u00a0<br/>proc validIban(iban: string): bool =<br/>  # Ensure upper alphanumeric input<br/>  var iban = iban.replace(\" \",\"\").replace(\"\\t\",\"\")<br/>  if not iban.match(re\"^[\\dA-Z]+$\"):<br/>    return false<br/>\u00a0<br/>  # Validate country code against expected length<br/>  if iban.len\u00a0!= countryLen[iban[0..1]]:<br/>    return false<br/>\u00a0<br/>  # Shift and convert<br/>  iban = iban[4..iban.high] &amp; iban[0..3]<br/>  var digits = \"\"<br/>  for ch in iban:<br/>    case ch<br/>      of '0'..'9': digits.add($(ch.ord - '0'.ord))<br/>      of 'A'..'Z': digits.add($(ch.ord - 'A'.ord + 10))<br/>      else: discard<br/>  result = initBigInt(digits) mod 97 == 1<br/>\u00a0<br/>for account in [\"GB82 WEST 1234 5698 7654 32\", \"GB82 TEST 1234 5698 7654 32\"]:<br/>  echo account, \" validation is: \", validIban account</pre>"}, {"lang": "Oberon-2", "loc": 163, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> IBAN;<br/><span class=\"kw1\">IMPORT</span><br/>  Out<span class=\"sy0\">,</span><br/>  Err<span class=\"sy0\">,</span><br/>  ADT<span class=\"sy0\">:</span>Dictionary<span class=\"sy0\">,</span><br/>  Object<span class=\"sy0\">:</span>Boxed<span class=\"sy0\">,</span><br/>  Object<span class=\"sy0\">:</span>BigInt<span class=\"sy0\">,</span><br/>  Object<span class=\"sy0\">,</span><br/>  Strings<span class=\"sy0\">,</span><br/>  IntStr;<br/><span class=\"kw1\">TYPE</span><br/>  IBANLen <span class=\"sy0\">=</span> Boxed.<span class=\"me1\">LongInt</span>;<br/><span class=\"kw1\">VAR</span><br/>  nations<span class=\"sy0\">:</span> Dictionary.<span class=\"me1\">Dictionary</span><span class=\"br0\">(</span>STRING<span class=\"sy0\">,</span>IBANLen<span class=\"br0\">)</span>;<br/>\u00a0<br/>  <span class=\"kw1\">PROCEDURE</span> Check<span class=\"sy0\">*</span><span class=\"br0\">(</span>iban<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">BOOLEAN</span>;<br/>  <span class=\"kw1\">VAR</span><br/>    country<span class=\"sy0\">,</span>ibanStr<span class=\"sy0\">:</span> Object.<span class=\"me1\">String</span>;<br/>    nLetter<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"nu0\">3</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>    block<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"nu0\">5</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>    numIban<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"nu0\">256</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>    num<span class=\"sy0\">,</span>den<span class=\"sy0\">,</span>res<span class=\"sy0\">:</span> BigInt.<span class=\"me1\">BigInt</span>;<br/>    ibanLen<span class=\"sy0\">:</span> IBANLen;<br/>    i<span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/>  <span class=\"kw1\">BEGIN</span><br/>    ibanStr <span class=\"sy0\">:=</span> Object.<span class=\"me1\">NewLatin1</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span>;<br/>    country <span class=\"sy0\">:=</span> ibanStr.<span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">IF</span> <span class=\"sy0\">~</span>nations.<span class=\"me1\">HasKey</span><span class=\"br0\">(</span>country<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>      Err.<span class=\"me1\">Object</span><span class=\"br0\">(</span><span class=\"st0\">\"Country \"</span> <span class=\"sy0\">+</span> country <span class=\"sy0\">+</span> <span class=\"st0\">\" has not IBAN codes. \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">RETURN</span> <span class=\"kw2\">FALSE</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    ibanLen <span class=\"sy0\">:=</span> nations.<span class=\"me1\">Get</span><span class=\"br0\">(</span>country<span class=\"br0\">)</span>;<br/>\u00a0<br/>    <span class=\"kw1\">IF</span> <span class=\"kw3\">SHORT</span><span class=\"br0\">(</span>ibanLen.<span class=\"me1\">value</span><span class=\"br0\">)</span> <span class=\"sy0\">#</span> Strings.<span class=\"me1\">Length</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>      Err.<span class=\"me1\">Object</span><span class=\"br0\">(</span><span class=\"st0\">\"IBAN length incorrect for \"</span> <span class=\"sy0\">+</span> country <span class=\"sy0\">+</span><span class=\"st0\">\". \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">RETURN</span> <span class=\"kw2\">FALSE</span><br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    block<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> 0X;<br/>    Strings.<span class=\"me1\">Extract</span><span class=\"br0\">(</span>iban<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span>block<span class=\"br0\">)</span>;<br/>    Strings.<span class=\"me1\">Delete</span><span class=\"br0\">(</span>iban<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>;Strings.<span class=\"me1\">Append</span><span class=\"br0\">(</span>block<span class=\"sy0\">,</span>iban<span class=\"br0\">)</span>;<br/>\u00a0<br/>    numIban<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> 0X;<br/>    <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">LEN</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">DO</span><br/>      nLetter<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> 0X;<br/>      <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span> &gt;<span class=\"sy0\">=</span> <span class=\"st_h\">'A'</span><span class=\"br0\">)</span> &amp; <span class=\"br0\">(</span>iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span> &lt;<span class=\"sy0\">=</span> <span class=\"st_h\">'Z'</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>        IntStr.<span class=\"me1\">IntToStr</span><span class=\"br0\">(</span><span class=\"kw3\">ORD</span><span class=\"br0\">(</span>iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"kw3\">ORD</span><span class=\"br0\">(</span><span class=\"st_h\">'A'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span>nLetter<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">ELSE</span><br/>        nLetter<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> iban<span class=\"br0\">[</span>i<span class=\"br0\">]</span>;<br/>        nLetter<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">:=</span> 0X<br/>      <span class=\"kw1\">END</span>;<br/>      Strings.<span class=\"me1\">Append</span><span class=\"br0\">(</span>nLetter<span class=\"sy0\">,</span>numIban<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">END</span>;<br/>    Strings.<span class=\"me1\">Append</span><span class=\"br0\">(</span>0X<span class=\"sy0\">,</span>numIban<span class=\"br0\">)</span>;<br/>\u00a0<br/>    num <span class=\"sy0\">:=</span> BigInt.<span class=\"me1\">New</span><span class=\"br0\">(</span>Object.<span class=\"me1\">NewLatin1</span><span class=\"br0\">(</span>numIban<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>;<br/>    den <span class=\"sy0\">:=</span> BigInt.<span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"st0\">\"97\"</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>;<br/>    res <span class=\"sy0\">:=</span> num.<span class=\"me1\">Mod</span><span class=\"br0\">(</span>den<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">IF</span> res.<span class=\"me1\">Equals</span><span class=\"br0\">(</span>BigInt.<span class=\"me1\">one</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <br/>      <span class=\"kw1\">RETURN</span> <span class=\"kw2\">TRUE</span><br/>    <span class=\"kw1\">ELSE</span><br/>      Err.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"IBAN code check failed. \"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">RETURN</span> <span class=\"kw2\">FALSE</span><br/>    <span class=\"kw1\">END</span><br/>  <span class=\"kw1\">END</span> Check;<br/>\u00a0<br/>  <span class=\"kw1\">PROCEDURE</span> CodeLengthFor<span class=\"sy0\">*</span><span class=\"br0\">(</span>country<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">LONGINT</span>;<br/>  <span class=\"kw1\">VAR</span><br/>    countryStr<span class=\"sy0\">:</span> Object.<span class=\"me1\">String</span>;<br/>    ibanLen<span class=\"sy0\">:</span> IBANLen;<br/>  <span class=\"kw1\">BEGIN</span><br/>    countryStr <span class=\"sy0\">:=</span> Object.<span class=\"me1\">NewLatin1</span><span class=\"br0\">(</span>country<span class=\"br0\">)</span>;<br/>    ibanLen <span class=\"sy0\">:=</span> Boxed.<span class=\"me1\">zeroLongInt</span>;<br/>    <span class=\"kw1\">IF</span> nations.<span class=\"me1\">HasKey</span><span class=\"br0\">(</span>countryStr<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>      ibanLen <span class=\"sy0\">:=</span> nations.<span class=\"me1\">Get</span><span class=\"br0\">(</span>countryStr<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span>;<br/>    <span class=\"kw1\">RETURN</span> ibanLen.<span class=\"me1\">value</span><br/>  <span class=\"kw1\">END</span> CodeLengthFor;<br/>\u00a0<br/>  <span class=\"kw1\">PROCEDURE</span> Test<span class=\"sy0\">*</span>;<br/>    <span class=\"kw1\">PROCEDURE</span> DoCheck<span class=\"br0\">(</span>iban<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">BEGIN</span><br/>      Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"IBAN[\"</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">String</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span>;Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"]=\"</span><span class=\"br0\">)</span>;Out.<span class=\"me1\">Bool</span><span class=\"br0\">(</span>Check<span class=\"br0\">(</span>iban<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      Out.<span class=\"me1\">Ln</span><br/>    <span class=\"kw1\">END</span> DoCheck;<br/>  <span class=\"kw1\">BEGIN</span><br/>    DoCheck<span class=\"br0\">(</span><span class=\"st0\">\"CH9300762011623852957\"</span><span class=\"br0\">)</span>;<br/>    DoCheck<span class=\"br0\">(</span><span class=\"st0\">\"GB82WEST12345698765432\"</span><span class=\"br0\">)</span>;<br/>    DoCheck<span class=\"br0\">(</span><span class=\"st0\">\"SA0380000000608010167519\"</span><span class=\"br0\">)</span>;<br/>    DoCheck<span class=\"br0\">(</span><span class=\"st0\">\"XX0380000000608010167519\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span> Test;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  nations <span class=\"sy0\">:=</span> <span class=\"kw3\">NEW</span><span class=\"br0\">(</span>Dictionary.<span class=\"me1\">Dictionary</span><span class=\"br0\">(</span>STRING<span class=\"sy0\">,</span>Boxed.<span class=\"me1\">LongInt</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"AZ\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"BA\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"BG\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"HR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"CY\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"CZ\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"DO\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"EE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"FO\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"FI\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"GE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"DE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"GR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"GL\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;  <br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"GT\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"HU\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"IE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"IL\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"IT\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"KZ\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"LV\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"LB\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"LI\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"LT\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"LU\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"MR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"MU\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"MC\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"MD\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"ME\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"NL\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"PK\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"PS\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"PL\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"RO\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"SM\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"SA\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"RS\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"SK\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"SI\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"ES\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"SE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"CH\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"TN\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"TR\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"AE\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"GB\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>  nations.<span class=\"me1\">Set</span><span class=\"br0\">(</span><span class=\"st0\">\"VG\"</span><span class=\"sy0\">,</span><span class=\"kw3\">NEW</span><span class=\"br0\">(</span>IBANLen<span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>  Test;<br/><span class=\"kw1\">END</span> IBAN.<br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 108, "block": "<pre class=\"ocaml highlighted_source\">\u00a0<br/><span class=\"sy0\">#</span>load <span class=\"st0\">\"str.cma\"</span><br/><span class=\"sy0\">#</span>load <span class=\"st0\">\"nums.cma\"</span>  <span class=\"co1\">(* for module Big_int *)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Countries and length of their IBAN. *)</span><br/><span class=\"co1\">(* Taken from https://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country *)</span><br/><span class=\"kw1\">let</span> countries <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AZ\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span>, <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"BA\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BG\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"HR\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CY\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"CZ\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DO\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"TL\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"EE\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"FO\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"FI\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"GL\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"GT\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"HU\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IE\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IL\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"IT\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"JO\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"KZ\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"XK\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LV\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"LB\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LI\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LT\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"LU\"</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span>, <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span>, <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"MR\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MU\"</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MC\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MD\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"ME\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"NL\"</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span>, <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PK\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PS\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PL\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"QA\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"RO\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SM\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SA\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"RS\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SK\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SI\"</span>, <span class=\"nu0\">19</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"ES\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SE\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CH\"</span>, <span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"TN\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"TR\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AE\"</span>, <span class=\"nu0\">23</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"GB\"</span>, <span class=\"nu0\">22</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"VG\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"DZ\"</span>, <span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"AO\"</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BJ\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"BF\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"BI\"</span>, <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CM\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CV\"</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"IR\"</span>, <span class=\"nu0\">26</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"CI\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MG\"</span>, <span class=\"nu0\">27</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">(</span><span class=\"st0\">\"ML\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"MZ\"</span>, <span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"SN\"</span>, <span class=\"nu0\">28</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"st0\">\"UA\"</span>, <span class=\"nu0\">29</span><span class=\"br0\">)</span><br/><span class=\"br0\">]</span><br/><span class=\"co1\">(* Put the countries in a Hashtbl for faster search... *)</span><br/><span class=\"kw1\">let</span> tbl_countries <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> htbl <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html\"><span class=\"kw2\">Hashtbl</span></a><span class=\"sy0\">.</span>create <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>length countries<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>k, v<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html\"><span class=\"kw2\">Hashtbl</span></a><span class=\"sy0\">.</span>add htbl k v<span class=\"br0\">)</span> countries <span class=\"kw1\">in</span><br/>  htbl<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Delete spaces and put all letters in upper case. *)</span><br/><span class=\"kw1\">let</span> clean_iban iban <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Str.html\"><span class=\"kw2\">Str</span></a><span class=\"sy0\">.</span>global_replace <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Str.html\"><span class=\"kw2\">Str</span></a><span class=\"sy0\">.</span><span class=\"kw1\">regexp</span> <span class=\"st0\">\" +\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"\"</span> iban<br/>  <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>uppercase_ascii<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Each country has an IBAN with a specific length. *)</span><br/><span class=\"kw1\">let</span> check_length ib <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> iso_length <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>hd countries <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfst\"><span class=\"kw3\">fst</span></a> <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> country_code <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>sub ib <span class=\"nu0\">0</span> iso_length <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">try</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Hashtbl.html\"><span class=\"kw2\">Hashtbl</span></a><span class=\"sy0\">.</span>find tbl_countries country_code <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length ib<br/>  <span class=\"kw1\">with</span><br/>    Not_found <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">false</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Convert a string into a list of chars. *)</span><br/><span class=\"kw1\">let</span> charlist_of_string s <span class=\"sy0\">=</span> <br/>  <span class=\"kw1\">let</span> l <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length s <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> doloop i <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> i <span class=\"sy0\">&gt;=</span> l <span class=\"kw1\">then</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">else</span> s<span class=\"sy0\">.</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">::</span> doloop <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">in</span><br/>  doloop <span class=\"nu0\">0</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Letters are associated to values: A=10, B=11, ..., Z=35. *)</span><br/><span class=\"kw1\">let</span> val_of_char c <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">match</span> c <span class=\"kw1\">with</span><br/>  <span class=\"sy0\">|</span> <span class=\"sy0\">'</span><span class=\"nu0\">0</span><span class=\"sy0\">'</span> <span class=\"sy0\">..</span> <span class=\"sy0\">'</span><span class=\"nu0\">9</span><span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_char\"><span class=\"kw3\">int_of_char</span></a> c <span class=\"sy0\">-</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_char\"><span class=\"kw3\">int_of_char</span></a> <span class=\"sy0\">'</span><span class=\"nu0\">0</span><span class=\"sy0\">'</span><br/>  <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>A<span class=\"sy0\">'</span> <span class=\"sy0\">..</span> <span class=\"sy0\">'</span>Z<span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_char\"><span class=\"kw3\">int_of_char</span></a> c <span class=\"sy0\">-</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_char\"><span class=\"kw3\">int_of_char</span></a> <span class=\"sy0\">'</span>A<span class=\"sy0\">'</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><br/>  <span class=\"sy0\">|</span> _ <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">failwith</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>sprintf <span class=\"st0\">\"Character not allowed:\u00a0%c\"</span> c<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Compute the mod-97 value and check it is equal to 1. *)</span><br/><span class=\"kw1\">let</span> check_mod97 ib <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> l <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length ib<br/>  <span class=\"kw1\">and</span> taken <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> prefix <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>sub ib <span class=\"nu0\">0</span> taken<br/>  <span class=\"kw1\">and</span> rest <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>sub ib taken <span class=\"br0\">(</span>l <span class=\"sy0\">-</span> taken<span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> newval <span class=\"sy0\">=</span> rest <span class=\"sy0\">^</span> prefix <span class=\"co1\">(* move the 4 initial characters to the end of the string *)</span><br/>            <span class=\"sy0\">|&gt;</span> charlist_of_string  <span class=\"co1\">(* convert the string into a list of chars *)</span><br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map val_of_char  <span class=\"co1\">(* convert each char into its integer value *)</span><br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALstring_of_int\"><span class=\"kw3\">string_of_int</span></a>  <span class=\"co1\">(* convert the integers into strings... *)</span><br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>fold_left <span class=\"br0\">(</span><span class=\"sy0\">^</span><span class=\"br0\">)</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">in</span>  <span class=\"co1\">(* ...and concatenate said strings *)</span><br/>  <span class=\"co1\">(* Now compute the mod-97 using the Big Integers provided by OCaml, and<br/>   * compare the result to 1. *)</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Big_int.html\"><span class=\"kw2\">Big_int</span></a><span class=\"sy0\">.</span>eq_big_int<br/>    <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Big_int.html\"><span class=\"kw2\">Big_int</span></a><span class=\"sy0\">.</span>mod_big_int <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Big_int.html\"><span class=\"kw2\">Big_int</span></a><span class=\"sy0\">.</span>big_int_of_string newval<span class=\"br0\">)</span><br/>                         <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Big_int.html\"><span class=\"kw2\">Big_int</span></a><span class=\"sy0\">.</span>big_int_of_int <span class=\"nu0\">97</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Big_int.html\"><span class=\"kw2\">Big_int</span></a><span class=\"sy0\">.</span>big_int_of_int <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">(* Do the validation as described in the Wikipedia article at<br/> * https://en.wikipedia.org/wiki/International_Bank_Account_Number#Validating_the_IBAN *)</span><br/><span class=\"kw1\">let</span> validate iban <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> ib <span class=\"sy0\">=</span> clean_iban iban <span class=\"kw1\">in</span><br/>  check_length ib <span class=\"sy0\">&amp;&amp;</span> check_mod97 ib<br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> ibans <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span>, <span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span>, <span class=\"kw1\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"GB81 WEST 1234 5698 7654 32\"</span>, <span class=\"kw1\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 3\"</span>, <span class=\"kw1\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"SA03 8000 0000 6080 1016 7519\"</span>, <span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"CH93 0076 2011 6238 5295 7\"</span>, <span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">(</span><span class=\"st0\">\"\\\"</span>Completely incorrect iban\\<span class=\"st0\">\"\"</span>, <span class=\"kw1\">false</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">]</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> testit <span class=\"br0\">(</span>ib, <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexp\"><span class=\"kw3\">exp</span></a><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> res <span class=\"sy0\">=</span> validate ib <span class=\"kw1\">in</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%s is\u00a0%svalid. Expected\u00a0%b [%s]\\n\"</span><br/>                  ib <span class=\"br0\">(</span><span class=\"kw1\">if</span> res <span class=\"kw1\">then</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\"not \"</span><span class=\"br0\">)</span><br/>                  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexp\"><span class=\"kw3\">exp</span></a> <span class=\"br0\">(</span><span class=\"kw1\">if</span> res <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexp\"><span class=\"kw3\">exp</span></a> <span class=\"kw1\">then</span> <span class=\"st0\">\"PASS\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\"FAIL\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">in</span> <br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">fun</span> pair <span class=\"sy0\">-&gt;</span> testit pair<span class=\"br0\">)</span> ibans<br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 48, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> strict <span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings <span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Math<span class=\"sy0\">::</span><span class=\"me2\">BigInt</span> <span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">%countrycodelengths</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span> <span class=\"st0\">\"AL\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AD\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AT\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AZ\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>                           <span class=\"st0\">\"BE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BH\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BA\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">29</span><span class=\"sy0\">,</span><br/>                           <span class=\"st0\">\"BG\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"HR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CY\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"st0\">\"CZ\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"DK\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"DO\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"EE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span><br/>\t                   <span class=\"st0\">\"FO\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FI\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>\t                   <span class=\"st0\">\"DE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GI\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GL\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">18</span><span class=\"sy0\">,</span><br/>\t                   <span class=\"st0\">\"GT\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"HU\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IS\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">26</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>\t\t           <span class=\"st0\">\"IL\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IT\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"KZ\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"KW\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">30</span><span class=\"sy0\">,</span><br/>\t\t           <span class=\"st0\">\"LV\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LB\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LI\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LT\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span><br/>\t\t           <span class=\"st0\">\"LU\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MK\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">19</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MT\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>\t\t           <span class=\"st0\">\"MU\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MC\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MD\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"ME\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"st0\">\"NL\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"st0\">\"NO\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PK\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PS\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">29</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"st0\">\"PL\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">28</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PT\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">25</span><span class=\"sy0\">,</span> <span class=\"st0\">\"RO\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SM\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"st0\">\"SA\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"RS\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SK\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SI\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">19</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"st0\">\"ES\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"SE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CH\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"st0\">\"TN\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"st0\">\"TR\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">26</span><span class=\"sy0\">,</span> <span class=\"st0\">\"AE\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">23</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GB\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"st0\">\"VG\"</span> <span class=\"sy0\">=&gt;</span>  <span class=\"nu0\">24</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/><span class=\"kw2\">sub</span> validate_iban <span class=\"br0\">{</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"sy0\">;</span><br/>   <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/\\s+//g</span> <span class=\"sy0\">;</span><br/>   <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">unless</span> <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">=~</span> <span class=\"co2\">/[0-9a-zA-Z]+/</span> <span class=\"sy0\">;</span><br/>   <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/uc.html\"><span class=\"kw3\">uc</span></a> <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">;</span><br/>   <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"kw1\">not</span> <a href=\"http://perldoc.perl.org/functions/exists.html\"><span class=\"kw3\">exists</span></a> <span class=\"re0\">$countrycodelengths</span><span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span> <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">}</span>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"kw1\">if</span> <a href=\"http://perldoc.perl.org/functions/length.html\"><span class=\"kw3\">length</span></a> <span class=\"br0\">(</span> <span class=\"re0\">$ibanstring</span> <span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$countrycodelengths</span><span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/substr.html\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span> <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">,</span> <span class=\"nu0\">0</span> <span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"sy0\">;</span><br/>   <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/(.{4})(.+)/$2$1/</span> <span class=\"sy0\">;</span><br/>   <span class=\"re0\">$ibanstring</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/([A-Z])/ord( $1 ) - 55/eg</span> <span class=\"sy0\">;</span><br/>   <span class=\"kw1\">my</span> <span class=\"re0\">$number</span> <span class=\"sy0\">=</span> Math<span class=\"sy0\">::</span><span class=\"me2\">BigInt</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span> <span class=\"re0\">$ibanstring</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"re0\">$number</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">bmod</span><span class=\"br0\">(</span> <span class=\"nu0\">97</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">1</span> <span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>      <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span> validate_iban<span class=\"br0\">(</span> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32 is a valid IBAN number!<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>   <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"Sorry! GB82 WEST 1234 5698 7654 32 is not valid!<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span> validate_iban<span class=\"br0\">(</span> <span class=\"st0\">\"GB82TEST12345698765432\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"GB82TEST12345698765432 is valid!<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 19, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">subset</span> IBAN <span class=\"kw1\">of</span> Str <span class=\"kw1\">where</span> <span class=\"kw2\">sub</span> <span class=\"br0\">(</span><span class=\"re0\">$_</span> <span class=\"kw1\">is</span> copy<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    s<span class=\"sy0\">:</span>g<span class=\"sy0\">/</span>\\s<span class=\"sy0\">//;</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw1\">False</span> <span class=\"kw1\">if</span> <span class=\"co2\">m/&lt;-[ 0..9 A..Z a..z ]&gt;/</span> <span class=\"kw1\">or</span> <span class=\"sy0\">.</span><span class=\"kw3\">chars</span> <span class=\"sy0\">!=</span> <span class=\"sy0\">&lt;</span><br/>        AD <span class=\"nu0\">24</span> AE <span class=\"nu0\">23</span> AL <span class=\"nu0\">28</span> AT <span class=\"nu0\">20</span> AZ <span class=\"nu0\">28</span> BA <span class=\"nu0\">20</span> BE <span class=\"nu0\">16</span> BG <span class=\"nu0\">22</span> BH <span class=\"nu0\">22</span> BR <span class=\"nu0\">29</span> CH <span class=\"nu0\">21</span><br/>        CR <span class=\"nu0\">21</span> CY <span class=\"nu0\">28</span> CZ <span class=\"nu0\">24</span> DE <span class=\"nu0\">22</span> DK <span class=\"nu0\">18</span> DO <span class=\"nu0\">28</span> EE <span class=\"nu0\">20</span> ES <span class=\"nu0\">24</span> FI <span class=\"nu0\">18</span> FO <span class=\"nu0\">18</span> FR <span class=\"nu0\">27</span><br/>        GB <span class=\"nu0\">22</span> GE <span class=\"nu0\">22</span> GI <span class=\"nu0\">23</span> GL <span class=\"nu0\">18</span> GR <span class=\"nu0\">27</span> GT <span class=\"nu0\">28</span> HR <span class=\"nu0\">21</span> HU <span class=\"nu0\">28</span> IE <span class=\"nu0\">22</span> IL <span class=\"nu0\">23</span> IS <span class=\"nu0\">26</span><br/>        IT <span class=\"nu0\">27</span> KW <span class=\"nu0\">30</span> KZ <span class=\"nu0\">20</span> LB <span class=\"nu0\">28</span> LI <span class=\"nu0\">21</span> LT <span class=\"nu0\">20</span> LU <span class=\"nu0\">20</span> LV <span class=\"nu0\">21</span> MC <span class=\"nu0\">27</span> MD <span class=\"nu0\">24</span> ME <span class=\"nu0\">22</span><br/>        MK <span class=\"nu0\">19</span> MR <span class=\"nu0\">27</span> MT <span class=\"nu0\">31</span> MU <span class=\"nu0\">30</span> NL <span class=\"nu0\">18</span> NO <span class=\"nu0\">15</span> PK <span class=\"nu0\">24</span> PL <span class=\"nu0\">28</span> PS <span class=\"nu0\">29</span> PT <span class=\"nu0\">25</span> RO <span class=\"nu0\">24</span><br/>        RS <span class=\"nu0\">22</span> SA <span class=\"nu0\">24</span> SE <span class=\"nu0\">24</span> SI <span class=\"nu0\">19</span> SK <span class=\"nu0\">24</span> SM <span class=\"nu0\">27</span> TN <span class=\"nu0\">24</span> TR <span class=\"nu0\">26</span> VG <span class=\"nu0\">24</span><br/>    <span class=\"sy0\">&gt;.</span><span class=\"me1\">hash</span><span class=\"br0\">{</span><span class=\"sy0\">.</span><span class=\"kw3\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">uc</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co2\">s/(.**4)(.+)/$1$0/</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"sy0\">.</span><span class=\"kw3\">subst</span><span class=\"br0\">(</span><span class=\"sy0\">:</span>g<span class=\"sy0\">,</span> <span class=\"co2\">/\\D/</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"sy0\">:</span><span class=\"nu0\">36</span><span class=\"br0\">(</span><span class=\"sy0\">~</span><span class=\"re0\">$_</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st0\">\"$_ is {$_ ~~ IBAN\u00a0?? 'valid'\u00a0!! 'invalid' }\"</span> <span class=\"kw1\">for</span> <br/><span class=\"st_h\">'GB82 WEST 1234 5698 7654 32'</span><span class=\"sy0\">,</span><br/><span class=\"st_h\">'gb82 west 1234 5698 7654 32'</span><span class=\"sy0\">,</span><br/><span class=\"st_h\">'GB82 TEST 1234 5698 7654 32'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 59, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\IBAN.exw<br/>-- =====================<br/>--<br/>constant nations = {{\"AD\",24},  -- Andorra<br/>                    -- (full list in distro)<br/>                    {\"CH\",21},  -- Switzerland<br/>                    {\"GB\",22},  -- United Kingdom<br/>                    {\"SA\",24},  -- Saudi Arabia <br/>                    {\"XK\",20}}  -- Kosovo<br/>\u00a0<br/>constant {countries,lengths} = columnize(nations)<br/>\u00a0<br/>function iban(string code)<br/>-- This routine does and should reject codes containing spaces etc.<br/>-- Use iban_s() below for otherwise.<br/>    integer country = find(code[1..2],countries)<br/>    if country!=0<br/>    and length(code)=lengths[country] then<br/>        code = code[5..$]&amp;code[1..4]<br/>        integer c = 0<br/>        for i=1 to length(code) do<br/>            integer ch=code[i]<br/>            if ch&gt;='0' and ch&lt;='9' then<br/>                c = c*10+ch-'0'<br/>            elsif ch&gt;='A' and ch&lt;='Z' then<br/>                c = c*100+ch-55<br/>            else<br/>                return false<br/>            end if<br/>            c = mod(c,97)<br/>        end for<br/>        return c=1<br/>    end if<br/>    return false<br/>end function<br/>\u00a0<br/>function iban_s(string code)<br/>-- strips any embedded spaces and hyphens before validating.<br/>    code = substitute_all(code,{\" \",\"-\"},{\"\",\"\"})<br/>    return iban(code)<br/>end function<br/>\u00a0<br/>procedure test(string code, bool expected)<br/>    bool valid = iban_s(code)<br/>    string state<br/>    if valid=expected then<br/>        state = iff(valid?\"ok\":\"invalid (as expected)\")<br/>    else<br/>        state = iff(valid?\"OK!!\":\"INVALID!!\")&amp;\" (NOT AS EXPECTED)\"<br/>    end if<br/>    printf(1,\"%-34s\u00a0:%s\\n\",{code,state})<br/>end procedure<br/>\u00a0<br/>test(\"GB82 WEST 1234 5698 7654 32\",true)<br/>test(\"GB82 TEST 1234 5698 7654 32\",false)<br/>test(\"GB81 WEST 1234 5698 7654 32\",false)<br/>test(\"SA03 8000 0000 6080 1016 7519\",true)<br/>test(\"CH93 0076 2011 6238 5295 7\",true)</pre>"}, {"lang": "PHP", "loc": 81, "block": "<pre class=\"php highlighted_source\">\u00a0<br/><span class=\"kw2\">&lt;?php</span> <br/>\u00a0<br/><span class=\"kw2\">function</span> piece_wise<span class=\"br0\">(</span><span class=\"re0\">$iban_all_digits</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"re0\">$remainder</span> <span class=\"sy0\">=</span> <span class=\"kw4\">NULL</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$slice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><a href=\"http://www.php.net/strlen\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban_all_digits</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"re0\">$i</span><span class=\"sy0\">+</span><span class=\"re0\">$slice</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"re0\">$slice</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <br/>\u00a0<br/>        <span class=\"re0\">$part</span> <span class=\"sy0\">=</span> <span class=\"re0\">$remainder</span> <span class=\"sy0\">.</span> <a href=\"http://www.php.net/substr\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban_all_digits</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$slice</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"co1\">//echo \"REMAINDER: \" . $remainder . \"&lt;br&gt;\";</span><br/>        <span class=\"co1\">//echo \"PART: $part\" . \"&lt;br&gt;\";</span><br/>        <span class=\"re0\">$remainder</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/intval\"><span class=\"kw3\">intval</span></a><span class=\"br0\">(</span><span class=\"re0\">$part</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">return</span> <span class=\"re0\">$remainder</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re0\">$iban</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">//remove space</span><br/><span class=\"re0\">$iban</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/str_replace\"><span class=\"kw3\">str_replace</span></a><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"re0\">$iban</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <br/>\u00a0<br/><span class=\"co1\">//echo $iban; echo '&lt;br&gt;';</span><br/><span class=\"re0\">$iban_length</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/strlen\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$country_code</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/substr\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/*  <br/>    IBAN lengths are country specific <br/>    full list available at<br/>    https://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country<br/>*/</span><br/><span class=\"re0\">$lengths</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st_h\">'GB'</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">22</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$lengths</span><span class=\"br0\">[</span><span class=\"re0\">$country_code</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$iban_length</span><span class=\"br0\">)</span> <br/><span class=\"br0\">{</span> <br/>    <a href=\"http://www.php.net/exit\"><span class=\"kw3\">exit</span></a> <span class=\"br0\">(</span><span class=\"st0\">\"IBAN length not valid for <span class=\"es4\">$country_code</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">// 2. move first four characters to the end</span><br/><span class=\"re0\">$iban</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/substr\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <a href=\"http://www.php.net/substr\"><span class=\"kw3\">substr</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">//3. Replace letters in IBAN with digits </span><br/><span class=\"co1\">//(A=10, B=11 ... Z=35)</span><br/>\u00a0<br/><span class=\"re0\">$iban_arr</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/str_split\"><span class=\"kw3\">str_split</span></a><span class=\"br0\">(</span><span class=\"re0\">$iban</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re0\">$iban_all_digits</span> <span class=\"sy0\">=</span> <span class=\"st_h\">''</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$iban_arr</span> <span class=\"kw1\">as</span> <span class=\"re0\">$key</span><span class=\"sy0\">=&gt;</span><span class=\"re0\">$value</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/ctype_alpha\"><span class=\"kw3\">ctype_alpha</span></a><span class=\"br0\">(</span><span class=\"re0\">$value</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>    <span class=\"br0\">{</span><br/>        <span class=\"re0\">$value</span> <span class=\"sy0\">=</span> <a href=\"http://www.php.net/ord\"><span class=\"kw3\">ord</span></a><span class=\"br0\">(</span><span class=\"re0\">$value</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">55</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$iban_all_digits</span> <span class=\"sy0\">=</span> <span class=\"re0\">$iban_all_digits</span> <span class=\"sy0\">.</span> <span class=\"re0\">$value</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>piece_wise<span class=\"br0\">(</span><span class=\"re0\">$iban_all_digits</span><span class=\"br0\">)</span> <span class=\"sy0\">===</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st0\">\"VALID IBAN!\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">else</span> <br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">echo</span> <span class=\"st0\">\"IBAN NOT VALID\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 30, "block": "<pre class=\"text highlighted_source\">(setq *Sizes '((GB . 22) (CH . 21) (SA . 24)))<br/>\u00a0<br/>(de iban (Str)<br/>   (let Lst <br/>      (filter<br/>         '((X) (not (sp? X))) <br/>         (chop (uppc Str)) )<br/>      (when<br/>         (= <br/>            (cdr (assoc (pack (head 2 Lst)) *Sizes))<br/>            (length Lst) )<br/>         (% <br/>            (format <br/>               (mapcar<br/>                  '((X)<br/>                     (if (upp? X)<br/>                        (- (char X) 55)<br/>                        X ) )<br/>                  (append (nth Lst 5) (head 4 Lst)) ) )<br/>            97 ) ) ) )<br/>\u00a0<br/>(for I '(\"sa03 8000 0000 6080 1016 7519\" <br/>         \"CH9300762011623852957\"<br/>         \"gb82west1234 56987654 32\" <br/>         \"GB82WEST000\")<br/>   (if (= 1 (iban I))<br/>      (println 'Valid)<br/>      (println 'Invalid) ) )<br/>\u00a0<br/>(bye)</pre>"}, {"lang": "PowerShell", "loc": 28, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> verifIBAN <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><span class=\"re0\">$ibanS</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/><span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$ibanS</span>.Length <span class=\"kw4\">-ne</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"re0\">$false</span><span class=\"br0\">}</span> <span class=\"kw3\">else</span><br/><span class=\"br0\">{</span><br/><span class=\"re0\">$ibanI</span><span class=\"sy0\">=</span><span class=\"st0\">\"$($ibanS.Substring(4,23))$($ibanS.Substring(0,4))\"</span>.ToUpper<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><span class=\"re3\">int</span><span class=\"br0\">]</span><span class=\"re0\">$comptIBAN</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/><span class=\"re0\">$NumIBAN</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/><span class=\"kw3\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$comptIBAN</span> <span class=\"kw4\">-lt</span> <span class=\"nu0\">27</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">byte</span><span class=\"br0\">]</span><span class=\"re0\">$ibanI</span><span class=\"br0\">[</span><span class=\"re0\">$comptIBAN</span><span class=\"br0\">]</span> <span class=\"kw4\">-ge</span> <span class=\"nu0\">65</span> <span class=\"kw4\">-and</span> <span class=\"br0\">[</span><span class=\"re3\">byte</span><span class=\"br0\">]</span><span class=\"re0\">$ibanI</span><span class=\"br0\">[</span><span class=\"re0\">$comptIBAN</span><span class=\"br0\">]</span> <span class=\"kw4\">-le</span> <span class=\"nu0\">90</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span>        <br/>        <span class=\"re0\">$NumIban</span><span class=\"sy0\">+=</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re3\">byte</span><span class=\"br0\">]</span><span class=\"re0\">$ibanI</span><span class=\"br0\">[</span><span class=\"re0\">$comptIBAN</span><span class=\"br0\">]</span><span class=\"sy0\">-</span><span class=\"nu0\">55</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span> <span class=\"co1\">#pour transformer les lettres en chiffres (A=10, B=11...)</span><br/>        <span class=\"kw3\">else</span><br/>        <span class=\"br0\">{</span><br/>        <span class=\"re0\">$NumIban</span><span class=\"sy0\">+=</span><span class=\"re0\">$ibanI</span><span class=\"br0\">[</span><span class=\"re0\">$comptIBAN</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"re0\">$comptIBAN</span><span class=\"sy0\">++</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\">#cela fait un nombre de 30 chiffres\u00a0: trop pour powershell, je d\u00e9coupe donc les 9 premiers caract\u00e8res\u00a0:</span><br/><span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"st0\">\"$($NumIBAN.Substring(0,9)%97)$($NumIBAN.Substring(9,$NumIBAN.Length-9))\"</span><span class=\"sy0\">%</span>97 <span class=\"kw4\">-eq</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"re0\">$true</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">else</span><br/>    <span class=\"br0\">{</span><span class=\"kw3\">return</span> <span class=\"re0\">$false</span><span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"br0\">}</span> <span class=\"co1\">#fin fonction v\u00e9rification IBAN / St\u00e9phane RABANY 2018</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 92, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">EnableExplicit</span><br/><span class=\"kw1\">Enumeration</span> IBAN<br/>  #IBAN_VAL<br/>  #IBAN_SUM<br/>  #IBAN_NOSPACE <br/>  #IBAN_VAL_FORM<br/>  #IBAN_SUM_FORM<br/><span class=\"kw1\">EndEnumeration</span><br/>\u00a0<br/>NewMap CData.i<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Macro</span> CCD<span class=\"br0\">(</span>SIGN,LENGTH<span class=\"br0\">)</span><br/>  CData<span class=\"br0\">(</span>SIGN<span class=\"br0\">)</span><span class=\"sy0\">=</span>LENGTH<br/><span class=\"kw1\">EndMacro</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.s IBANForm<span class=\"br0\">(</span>iban.s,form.i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span> fn.s, c.i<br/>  fn<span class=\"sy0\">=</span><span class=\"kw2\">RemoveString</span><span class=\"br0\">(</span><span class=\"kw2\">UCase</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span>,<span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"br0\">)</span>      <br/>  <span class=\"kw1\">If</span> form<span class=\"sy0\">=</span>#IBAN_NOSPACE  \u00a0:   <span class=\"kw1\">ProcedureReturn</span> fn \u00a0:   <span class=\"kw1\">EndIf</span><br/>  fn<span class=\"sy0\">=</span><span class=\"kw2\">Mid</span><span class=\"br0\">(</span>fn,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"kw2\">Mid</span><span class=\"br0\">(</span>fn,<span class=\"nu0\">1</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> c<span class=\"sy0\">=</span><span class=\"nu0\">65</span> <span class=\"kw1\">To</span> <span class=\"nu0\">90</span><br/>    fn<span class=\"sy0\">=</span><span class=\"kw2\">ReplaceString</span><span class=\"br0\">(</span>fn,<span class=\"kw2\">Chr</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span>,<span class=\"kw2\">Str</span><span class=\"br0\">(</span>c<span class=\"sy0\">-</span><span class=\"nu0\">55</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span> c<br/>  <span class=\"kw1\">If</span> form<span class=\"sy0\">=</span>#IBAN_VAL_FORM \u00a0:   <span class=\"kw1\">ProcedureReturn</span> fn \u00a0:   <span class=\"kw1\">EndIf</span><br/>  fn<span class=\"sy0\">=</span><span class=\"kw2\">Left</span><span class=\"br0\">(</span>fn,<span class=\"kw2\">Len</span><span class=\"br0\">(</span>fn<span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\"00\"</span><br/>  <span class=\"kw1\">If</span> form<span class=\"sy0\">=</span>#IBAN_SUM_FORM \u00a0:   <span class=\"kw1\">ProcedureReturn</span> fn \u00a0:   <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.s m97iban<span class=\"br0\">(</span>iban.s,calculate.i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span> i.i, part.s, rest.s<br/>  <span class=\"kw1\">Select</span> calculate<br/>    <span class=\"kw1\">Case</span> #IBAN_VAL\u00a0: iban<span class=\"sy0\">=</span>IBANForm<span class=\"br0\">(</span>iban,#IBAN_VAL_FORM<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Case</span> #IBAN_SUM\u00a0: iban<span class=\"sy0\">=</span>IBANForm<span class=\"br0\">(</span>iban,#IBAN_SUM_FORM<span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndSelect</span>  <br/>  <span class=\"kw1\">For</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span>  <span class=\"co1\">; Validierung der Pr\u00fcfsumme</span><br/>    part<span class=\"sy0\">+</span><span class=\"kw2\">Mid</span><span class=\"br0\">(</span>iban,i,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span>rest<span class=\"sy0\">+</span>part<span class=\"br0\">)</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">97</span>\u00a0: <span class=\"kw1\">Continue</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>    rest<span class=\"sy0\">=</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span>rest<span class=\"sy0\">+</span>part<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">%</span>97<span class=\"br0\">)</span> \u00a0: part<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">Next</span>  <br/>  <span class=\"kw1\">Select</span> calculate<br/>    <span class=\"kw1\">Case</span> #IBAN_VAL\u00a0: <span class=\"kw1\">ProcedureReturn</span> rest<br/>    <span class=\"kw1\">Case</span> #IBAN_SUM\u00a0: <span class=\"kw1\">ProcedureReturn</span> <span class=\"kw2\">RSet</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"nu0\">98</span><span class=\"sy0\">-</span><span class=\"kw2\">Val</span><span class=\"br0\">(</span>rest<span class=\"sy0\">+</span>part<span class=\"br0\">)</span><span class=\"br0\">)</span>,<span class=\"nu0\">2</span>,<span class=\"st0\">\"0\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndSelect</span>  <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"AL\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"AD\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"AT\"</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"AZ\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"BE\"</span>,<span class=\"nu0\">16</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"BH\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"BA\"</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"BR\"</span>,<span class=\"nu0\">29</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"BG\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"CR\"</span>,<span class=\"nu0\">21</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"HR\"</span>,<span class=\"nu0\">21</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"CY\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"CZ\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"DK\"</span>,<span class=\"nu0\">18</span><span class=\"br0\">)</span><br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"DO\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"EE\"</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"FO\"</span>,<span class=\"nu0\">18</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"FI\"</span>,<span class=\"nu0\">18</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"FR\"</span>,<span class=\"nu0\">27</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"GE\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"DE\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span><br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"GI\"</span>,<span class=\"nu0\">23</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"GR\"</span>,<span class=\"nu0\">27</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"GL\"</span>,<span class=\"nu0\">18</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"GT\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"HU\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"IS\"</span>,<span class=\"nu0\">26</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"IE\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span><br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"IL\"</span>,<span class=\"nu0\">23</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"IT\"</span>,<span class=\"nu0\">27</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"KZ\"</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"KW\"</span>,<span class=\"nu0\">30</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"LV\"</span>,<span class=\"nu0\">21</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"LB\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"LI\"</span>,<span class=\"nu0\">21</span><span class=\"br0\">)</span><br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"LT\"</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"LU\"</span>,<span class=\"nu0\">20</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"MK\"</span>,<span class=\"nu0\">19</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"MT\"</span>,<span class=\"nu0\">31</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"MR\"</span>,<span class=\"nu0\">27</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"MU\"</span>,<span class=\"nu0\">30</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"MC\"</span>,<span class=\"nu0\">27</span><span class=\"br0\">)</span><br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"MD\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"ME\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"NL\"</span>,<span class=\"nu0\">18</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"NO\"</span>,<span class=\"nu0\">15</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"PK\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"PS\"</span>,<span class=\"nu0\">29</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"PL\"</span>,<span class=\"nu0\">28</span><span class=\"br0\">)</span>  <br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"PT\"</span>,<span class=\"nu0\">25</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"RO\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"SM\"</span>,<span class=\"nu0\">27</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"SA\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"RS\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"SK\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"SI\"</span>,<span class=\"nu0\">19</span><span class=\"br0\">)</span> <br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"ES\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"SE\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"CH\"</span>,<span class=\"nu0\">21</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"TN\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"TR\"</span>,<span class=\"nu0\">26</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"AE\"</span>,<span class=\"nu0\">23</span><span class=\"br0\">)</span>\u00a0: CCD<span class=\"br0\">(</span><span class=\"st0\">\"GB\"</span>,<span class=\"nu0\">22</span><span class=\"br0\">)</span>  <br/>CCD<span class=\"br0\">(</span><span class=\"st0\">\"VG\"</span>,<span class=\"nu0\">24</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">DataSection</span><br/>  IBANData:<br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"GB82WEST12345698765432\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"gb82 west 1234 5698 7654 32\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"GB29 NWBK 6016 1331 9268 19\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"SA03 8000 0000 6080 1016 7519\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"CH93 0076 2011 6238 5295 7\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"IL62 0108 0000 0009 9999 999\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"IL62-0108-0000-0009-9999-999\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"US12 3456 7890 0987 6543 210\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695X\"</span><br/>  <span class=\"kw1\">Data</span>.s <span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndDataSection</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> iban.s, cc.s<br/><span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Restore</span> IBANData<br/><span class=\"kw1\">Repeat</span><br/>  <span class=\"kw1\">Read</span>.s iban\u00a0: <span class=\"kw1\">If</span> iban<span class=\"sy0\">=</span><span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Break</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\"IBAN\"</span><span class=\"sy0\">+</span>#TAB$<span class=\"sy0\">+</span><span class=\"st0\">\": \"</span><span class=\"sy0\">+</span><span class=\"kw2\">LSet</span><span class=\"br0\">(</span>iban,<span class=\"nu0\">35</span>,<span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>#TAB$<span class=\"br0\">)</span><br/>  cc<span class=\"sy0\">=</span><span class=\"kw2\">Left</span><span class=\"br0\">(</span>IBANForm<span class=\"br0\">(</span>iban,#IBAN_NOSPACE<span class=\"br0\">)</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> CData<span class=\"br0\">(</span>cc<span class=\"br0\">)</span> <br/>    <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> CData<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"kw2\">Len</span><span class=\"br0\">(</span>IBANForm<span class=\"br0\">(</span>iban,#IBAN_NOSPACE<span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"[INCORRECT: LENGTH]\"</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Continue</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">Else</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"[INCORRECT: COUNTRY]\"</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Continue</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span>m97iban<span class=\"br0\">(</span>iban,#IBAN_VAL<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span>\u00a0: <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"[INCORRECT: MOD97]\"</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Continue</span>\u00a0: <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">Right</span><span class=\"br0\">(</span>IBANForm<span class=\"br0\">(</span>iban,#IBAN_VAL_FORM<span class=\"br0\">)</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>m97iban<span class=\"br0\">(</span>iban,#IBAN_SUM<span class=\"br0\">)</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"[INCORRECT: CHECKSUM]\"</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Continue</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"[CORRECT]\"</span><span class=\"br0\">)</span>  <br/><span class=\"kw1\">ForEver</span><br/><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "Python", "loc": 28, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">re</span><br/>\u00a0<br/>_country2length <span class=\"sy0\">=</span> <span class=\"kw2\">dict</span><span class=\"br0\">(</span><br/>    <span class=\"kw3\">AL</span><span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> AD<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> AT<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> AZ<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> BE<span class=\"sy0\">=</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> BH<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> BA<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> BR<span class=\"sy0\">=</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span><br/>    BG<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> CR<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> HR<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> CY<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> CZ<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> DK<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> DO<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> EE<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><br/>    FO<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> FI<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> FR<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> GE<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> DE<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> GI<span class=\"sy0\">=</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> GR<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> <span class=\"kw3\">GL</span><span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span><br/>    GT<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> HU<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> IS<span class=\"sy0\">=</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> IE<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> IL<span class=\"sy0\">=</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> IT<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> KZ<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> KW<span class=\"sy0\">=</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span><br/>    LV<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> LB<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> LI<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> LT<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> LU<span class=\"sy0\">=</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> MK<span class=\"sy0\">=</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span> MT<span class=\"sy0\">=</span><span class=\"nu0\">31</span><span class=\"sy0\">,</span> MR<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span><br/>    MU<span class=\"sy0\">=</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> MC<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> MD<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> ME<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> NL<span class=\"sy0\">=</span><span class=\"nu0\">18</span><span class=\"sy0\">,</span> NO<span class=\"sy0\">=</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> PK<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> PS<span class=\"sy0\">=</span><span class=\"nu0\">29</span><span class=\"sy0\">,</span><br/>    PL<span class=\"sy0\">=</span><span class=\"nu0\">28</span><span class=\"sy0\">,</span> PT<span class=\"sy0\">=</span><span class=\"nu0\">25</span><span class=\"sy0\">,</span> RO<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SM<span class=\"sy0\">=</span><span class=\"nu0\">27</span><span class=\"sy0\">,</span> SA<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> RS<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> SK<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SI<span class=\"sy0\">=</span><span class=\"nu0\">19</span><span class=\"sy0\">,</span><br/>    ES<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> SE<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> CH<span class=\"sy0\">=</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> TN<span class=\"sy0\">=</span><span class=\"nu0\">24</span><span class=\"sy0\">,</span> TR<span class=\"sy0\">=</span><span class=\"nu0\">26</span><span class=\"sy0\">,</span> AE<span class=\"sy0\">=</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span> GB<span class=\"sy0\">=</span><span class=\"nu0\">22</span><span class=\"sy0\">,</span> VG<span class=\"sy0\">=</span><span class=\"nu0\">24</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> valid_iban<span class=\"br0\">(</span>iban<span class=\"br0\">)</span>:<br/>    <span class=\"co1\"># Ensure upper alphanumeric input.</span><br/>    iban <span class=\"sy0\">=</span> iban.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy0\">,</span><span class=\"st0\">''</span><span class=\"br0\">)</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span>'</span><span class=\"sy0\">,</span><span class=\"st0\">''</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> <span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>r<span class=\"st0\">'^[<span class=\"es0\">\\d</span>A-Z]+$'</span><span class=\"sy0\">,</span> iban<span class=\"br0\">)</span>: <br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">False</span><br/>    <span class=\"co1\"># Validate country code against expected length.</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> _country2length<span class=\"br0\">[</span>iban<span class=\"br0\">[</span>:<span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span>:<br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">False</span><br/>    <span class=\"co1\"># Shift and convert.</span><br/>    iban <span class=\"sy0\">=</span> iban<span class=\"br0\">[</span><span class=\"nu0\">4</span>:<span class=\"br0\">]</span> + iban<span class=\"br0\">[</span>:<span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>    digits <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span>ch<span class=\"sy0\">,</span> <span class=\"nu0\">36</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> ch <span class=\"kw1\">in</span> iban<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">#BASE 36: 0..9,A..Z -&gt; 0..35</span><br/>    <span class=\"kw1\">return</span> digits\u00a0% <span class=\"nu0\">97</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">for</span> account <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><span class=\"br0\">]</span>:<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'%s validation is:\u00a0%s'</span>\u00a0% <span class=\"br0\">(</span>account<span class=\"sy0\">,</span> valid_iban<span class=\"br0\">(</span>account<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 25, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(define lens<br/>  '([AL 28] [AD 24] [AT 20] [AZ 28] [BH 22] [BE 16] [BA 20] [BR 29] [BG 22]<br/>    [CR 21] [HR 21] [CY 28] [CZ 24] [DK 18] [DO 28] [EE 20] [FO 18] [FI 18]<br/>    [FR 27] [GE 22] [DE 22] [GI 23] [GR 27] [GL 18] [GT 28] [HU 28] [IS 26]<br/>    [IE 22] [IL 23] [IT 27] [KZ 20] [KW 30] [LV 21] [LB 28] [LI 21] [LT 20]<br/>    [LU 20] [MK 19] [MT 31] [MR 27] [MU 30] [MC 27] [MD 24] [ME 22] [NL 18]<br/>    [NO 15] [PK 24] [PS 29] [PL 28] [PT 25] [RO 24] [SM 27] [SA 24] [RS 22]<br/>    [SK 24] [SI 19] [ES 24] [SE 24] [CH 21] [TN 24] [TR 26] [AE 23] [GB 22]<br/>    [VG 24]))<br/>(define (valid-iban? str)<br/>  (define str* (regexp-replace* #px\"\\\\s+\" str \"\"))<br/>  (define c (cond [(regexp-match #rx\"^[A-Z][A-Z]\" str*)<br/>                   =&gt; (\u03bb(x) (assq (string-&gt;symbol (car x)) lens))]<br/>                  [else #f]))<br/>  (define (letter c)<br/>    (number-&gt;string (+ (char-&gt;integer (string-ref c 0)) -65 10)))<br/>  (and c (= (cadr c) (string-length str*))<br/>       (regexp-match? #rx\"[A-Z0-9]\" str*)<br/>       (let* ([x (string-append (substring str* 4) (substring str* 0 4))]<br/>              [x (string-&gt;number (regexp-replace* #rx\"[A-Z]\" x letter))])<br/>         (= 1 (modulo x 97)))))<br/>\u00a0<br/>(valid-iban? \"GB82 WEST 1234 5698 7654 32\")\u00a0; =&gt; #t<br/>(valid-iban? \"GB82 TEST 1234 5698 7654 32\")\u00a0; =&gt; #f</pre>"}, {"lang": "REXX", "loc": 45, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program validates an  IBAN  (International Bank Account Number).                 */</span><br/>@<span class=\"sy0\">.</span>=;             @<span class=\"sy0\">.</span>1  =  <span class=\"st0\">'GB82 WEST 1234 5698 7654 32        '</span><br/>                 @<span class=\"sy0\">.</span>2  =  <span class=\"st0\">'Gb82 West 1234 5698 7654 32        '</span><br/>                 @<span class=\"sy0\">.</span>3  =  <span class=\"st0\">'GB82 TEST 1234 5698 7654 32        '</span><br/>                 @<span class=\"sy0\">.</span>4  =  <span class=\"st0\">'GR16 0110 1250 0000 0001 2300 695  '</span><br/>                 @<span class=\"sy0\">.</span>5  =  <span class=\"st0\">'GB29 NWBK 6016 1331 9268 19        '</span><br/>                 @<span class=\"sy0\">.</span>6  =  <span class=\"st0\">'SA03 8000 0000 6080 1016 7519      '</span><br/>                 @<span class=\"sy0\">.</span>7  =  <span class=\"st0\">'CH93 0076 2011 6238 5295 7         '</span><br/>                 @<span class=\"sy0\">.</span>8  =  <span class=\"st0\">'IL62 0108 0000 0009 9999 999       '</span><br/>                 @<span class=\"sy0\">.</span>9  =  <span class=\"st0\">'IL62-0108-0000-0009-9999-999       '</span><br/>                 @<span class=\"sy0\">.</span>10 =  <span class=\"st0\">'US12 3456 7890 0987 6543 210       '</span><br/>                 @<span class=\"sy0\">.</span>11 =  <span class=\"st0\">'GR16 0110 1250 0000 0001 2300 695X '</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> @<span class=\"sy0\">.</span>0                                             <span class=\"coMULTI\">/*get optional 1st arg from CL*/</span><br/>                 <span class=\"kw1\">do</span> k=<span class=\"nu0\">0</span> + <span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"br0\">)</span>==<span class=\"nu0\">0</span><span class=\"br0\">)</span>  <span class=\"kw2\">while</span> @<span class=\"sy0\">.</span>k<span class=\"sy0\">\\</span>==<span class=\"st0\">''</span>      <span class=\"coMULTI\">/*either:   0  or  1  \u2500\u2500\u25ba  n  */</span><br/>                 r = val_IBAN<span class=\"br0\">(</span>@<span class=\"sy0\">.</span>k<span class=\"br0\">)</span><br/>                 <span class=\"kw1\">if</span> r==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">'  valid IBAN:'</span>    @<span class=\"sy0\">.</span>k<br/>                          <span class=\"kw3\">else</span> <span class=\"kw1\">say</span> <span class=\"st0\">'invalid IBAN:'</span>    @<span class=\"sy0\">.</span>k      <span class=\"st0\">\"  \"</span>      r<br/>                 <span class=\"kw1\">if</span> k==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">leave</span>             <span class=\"coMULTI\">/*User specified IBAN?  Then we're done*/</span><br/>                 <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>val_IBAN:  <span class=\"kw1\">procedure</span>; <span class=\"kw1\">arg</span> x;  <span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> <span class=\"nu0\">200</span> <span class=\"coMULTI\">/*allow for big numbers in the IBAN's. */</span><br/>x=<span class=\"kw6\">space</span><span class=\"br0\">(</span>x,<span class=\"nu0\">0</span><span class=\"br0\">)</span>;                 L=<span class=\"kw6\">length</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>        <span class=\"coMULTI\">/*elide blanks;  determine the length. */</span><br/>cc= <span class=\"st0\">'AD 24 AE 23 AL 28 AT 20 AZ 28 BA 20 BE 16 BG 22 BH 22 BR 29 CH 21 CR 21 CY 28 CZ 24'</span>,<br/>    <span class=\"st0\">'DE 22 DK 18 DO 28 EE 20 ES 24 FI 18 FO 18 FR 27 GB 22 GE 22 GI 23 GL 18 GR 27 GT 28'</span>,<br/>    <span class=\"st0\">'HR 21 HU 28 IE 22 IL 23 IS 26 IT 27 KW 30 KZ 20 LB 28 LI 21 LT 20 LU 20 LV 21 MC 27'</span>,<br/>    <span class=\"st0\">'MD 24 ME 22 MK 19 MR 27 MT 31 MU 30 NL 18 NO 15 PK 24 PL 28 PS 29 PT 25 RO 24 RS 22'</span>,<br/>    <span class=\"st0\">'SA 24 SE 24 SI 19 SK 24 SM 27 TN 24 TR 26 VG 24'</span>      <span class=\"coMULTI\">/*a list of valid countries. */</span><br/>@ABC# = <span class=\"st0\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>   <span class=\"coMULTI\">/*the Latin alphabet and decimal digits*/</span><br/>cc_=<span class=\"kw6\">left</span><span class=\"br0\">(</span>x, <span class=\"nu0\">2</span><span class=\"br0\">)</span>;   kk=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>x, <span class=\"nu0\">3</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>             <span class=\"coMULTI\">/*get IBAN country code and checkDigits*/</span><br/>c#=<span class=\"kw6\">wordpos</span><span class=\"br0\">(</span>cc_, cc<span class=\"br0\">)</span>                              <span class=\"coMULTI\">/*find the country code index.         */</span><br/>cL=<span class=\"kw6\">word</span><span class=\"br0\">(</span>cc, c# + <span class=\"nu0\">1</span><span class=\"br0\">)</span>                              <span class=\"coMULTI\">/*get the length of the country's IBAN.*/</span><br/>e= <span class=\"st0\">'***error***  invalid IBAN'</span>                   <span class=\"coMULTI\">/*literal used when displaying an error*/</span><br/><span class=\"kw1\">if</span> c#==<span class=\"nu0\">0</span>               <span class=\"kw3\">then</span> <span class=\"kw1\">return</span>  e  <span class=\"st0\">'country code:'</span>   cc_<br/><span class=\"kw1\">if</span> <span class=\"sy0\">\\</span><span class=\"kw6\">datatype</span><span class=\"br0\">(</span>x, <span class=\"st0\">'A'</span><span class=\"br0\">)</span>   <span class=\"kw3\">then</span> <span class=\"kw1\">return</span>  e  <span class=\"st0\">'character:'</span>      <span class=\"kw6\">substr</span><span class=\"br0\">(</span>x, <span class=\"kw6\">verify</span><span class=\"br0\">(</span>x, @ABC#<span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">if</span> cL<span class=\"sy0\">\\</span>==L              <span class=\"kw3\">then</span> <span class=\"kw1\">return</span>  e  <span class=\"st0\">'length:'</span>         L     <span class=\"st0\">' (should be'</span>   cL<span class=\"st0\">\")\"</span><br/>y=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>x, <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"kw6\">left</span><span class=\"br0\">(</span>x, <span class=\"nu0\">4</span><span class=\"br0\">)</span>                         <span class=\"coMULTI\">/*put four digs in front \u2500\u2500\u2500\u25ba the back.*/</span><br/>z=                                               <span class=\"coMULTI\">/* [\u2193]  translate characters \u2500\u2500\u25ba digits*/</span><br/>     <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> L;      _=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>y, j, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>     <span class=\"kw1\">if</span> <span class=\"kw6\">datatype</span><span class=\"br0\">(</span>_, <span class=\"st0\">'U'</span><span class=\"br0\">)</span>  <span class=\"kw3\">then</span> z=z <span class=\"sy0\">||</span> <span class=\"kw6\">pos</span><span class=\"br0\">(</span>_, @ABC#<span class=\"br0\">)</span> + <span class=\"nu0\">9</span>        <span class=\"coMULTI\">/*if uppercase, then \u00b7\u00b7\u00b7 */</span><br/>                          <span class=\"kw3\">else</span> z=z <span class=\"sy0\">||</span> _<br/>     <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>\u00a0<br/><span class=\"kw1\">if</span> z<span class=\"sy0\">//</span><span class=\"nu0\">97</span>==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>                       <span class=\"coMULTI\">/*check if correct remainder (modulus).*/</span><br/>                  <span class=\"kw1\">return</span> e   <span class=\"st0\">'check digits.'</span></pre>"}, {"lang": "Ring", "loc": 54, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: IBAN<br/>\u00a0<br/>codes = list(5)<br/>codes[1] = \"GB82 WEST 1234 5698 7654 32\"<br/>codes[2] = \"GB82 TEST 1234 5698 7654 32\"<br/>codes[3] = \"GB81 WEST 1234 5698 7654 32\"<br/>codes[4] = \"SA03 8000 0000 6080 1016 7519\"<br/>codes[5] = \"CH93 0076 2011 6238 5295 7\"<br/>\u00a0<br/>for y = 1 to len(codes)<br/>      see codes[y]<br/>      flag = 1<br/>      codes[y] = substr(codes[y], \" \", \"\")<br/>      checkcode(codes[y])<br/>      check = checkiban(codes[y])<br/>      if check = 1<br/>         see \" is valid\" + nl<br/>      else<br/>         see \" is invalid\" + nl<br/>      ok<br/>next<br/>\u00a0<br/>func checkcode(code)<br/>        for n = 1 to 2<br/>              if ascii(code[n]) &lt; 65 or ascii(code[n]) &gt; 90<br/>                 flag = 0<br/>              ok<br/>        next<br/>        for m = 3 to len(code)<br/>              if (ascii(code[m]) &gt; 64 and ascii(code[m]) &lt; 91) or (ascii(code[m]) &gt; 47 and ascii(code[m]) &lt; 58)<br/>              else<br/>                  flag = 0<br/>              ok<br/>        next<br/>\u00a0<br/>func checkiban(code)<br/>        code= substr(code, 5, len(code) - 4) + left(code, 4)<br/>        for x = 1 to len(code)<br/>              if ascii(code[x]) &gt; 64 and ascii(code[x]) &lt; 91<br/>                 code = left(code, x-1) + string(ascii(code[x]) - 55) + right(code, len(code) - x)<br/>              ok<br/>        next<br/>        modold = left(code,9)\u00a0% 97<br/>        for p = 1 to floor((len(code)-9)/7)<br/>              modnew = string(modold) + substr(code, 10 + (p-1) * 7, 7)<br/>              modnew = number(modnew)\u00a0% 97<br/>              modold = modnew<br/>        next<br/>        modrest = right(code, len(code) - ((p-1)*7 + 9))<br/>        modnew = string(modold) + modrest<br/>        modnew = number(modnew)\u00a0% 97<br/>        return modnew<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 29, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> valid_iban? iban<br/>  len = <span class=\"br0\">{</span><br/>    AL: <span class=\"nu0\">28</span>, AD: <span class=\"nu0\">24</span>, AT: <span class=\"nu0\">20</span>, AZ: <span class=\"nu0\">28</span>, BE: <span class=\"nu0\">16</span>, BH: <span class=\"nu0\">22</span>, BA: <span class=\"nu0\">20</span>, BR: <span class=\"nu0\">29</span>,<br/>    BG: <span class=\"nu0\">22</span>, CR: <span class=\"nu0\">21</span>, HR: <span class=\"nu0\">21</span>, CY: <span class=\"nu0\">28</span>, CZ: <span class=\"nu0\">24</span>, DK: <span class=\"nu0\">18</span>, <span class=\"kw1\">DO</span>: <span class=\"nu0\">28</span>, EE: <span class=\"nu0\">20</span>,<br/>    FO: <span class=\"nu0\">18</span>, FI: <span class=\"nu0\">18</span>, FR: <span class=\"nu0\">27</span>, GE: <span class=\"nu0\">22</span>, DE: <span class=\"nu0\">22</span>, GI: <span class=\"nu0\">23</span>, GR: <span class=\"nu0\">27</span>, GL: <span class=\"nu0\">18</span>,<br/>    GT: <span class=\"nu0\">28</span>, HU: <span class=\"nu0\">28</span>, IS: <span class=\"nu0\">26</span>, IE: <span class=\"nu0\">22</span>, IL: <span class=\"nu0\">23</span>, IT: <span class=\"nu0\">27</span>, KZ: <span class=\"nu0\">20</span>, KW: <span class=\"nu0\">30</span>,<br/>    LV: <span class=\"nu0\">21</span>, LB: <span class=\"nu0\">28</span>, LI: <span class=\"nu0\">21</span>, LT: <span class=\"nu0\">20</span>, LU: <span class=\"nu0\">20</span>, MK: <span class=\"nu0\">19</span>, MT: <span class=\"nu0\">31</span>, MR: <span class=\"nu0\">27</span>,<br/>    MU: <span class=\"nu0\">30</span>, MC: <span class=\"nu0\">27</span>, MD: <span class=\"nu0\">24</span>, ME: <span class=\"nu0\">22</span>, NL: <span class=\"nu0\">18</span>, NO: <span class=\"nu0\">15</span>, PK: <span class=\"nu0\">24</span>, PS: <span class=\"nu0\">29</span>,<br/>    PL: <span class=\"nu0\">28</span>, PT: <span class=\"nu0\">25</span>, RO: <span class=\"nu0\">24</span>, SM: <span class=\"nu0\">27</span>, SA: <span class=\"nu0\">24</span>, RS: <span class=\"nu0\">22</span>, SK: <span class=\"nu0\">24</span>, SI: <span class=\"nu0\">19</span>,<br/>    ES: <span class=\"nu0\">24</span>, SE: <span class=\"nu0\">24</span>, CH: <span class=\"nu0\">21</span>, TN: <span class=\"nu0\">24</span>, TR: <span class=\"nu0\">26</span>, AE: <span class=\"nu0\">23</span>, GB: <span class=\"nu0\">22</span>, VG: <span class=\"nu0\">24</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\"># Ensure upper alphanumeric input.</span><br/>  iban.<span class=\"me1\">delete</span>! <span class=\"st0\">\" <span class=\"es0\">\\t</span>\"</span><br/>  <span class=\"kw2\">return</span> <span class=\"kw2\">false</span> <span class=\"kw1\">unless</span> iban =~ <span class=\"sy0\">/</span>^<span class=\"br0\">[</span>\\dA<span class=\"sy0\">-</span>Z<span class=\"br0\">]</span><span class=\"sy0\">+</span>$<span class=\"sy0\">/</span><br/>\u00a0<br/>  <span class=\"co1\"># Validate country code against expected length.</span><br/>  cc = iban<span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span>.<span class=\"me1\">to_sym</span><br/>  <span class=\"kw2\">return</span> <span class=\"kw2\">false</span> <span class=\"kw1\">unless</span> iban.<span class=\"me1\">size</span> == len<span class=\"br0\">[</span>cc<span class=\"br0\">]</span><br/>\u00a0<br/>  <span class=\"co1\"># Shift and convert.</span><br/>  iban = iban<span class=\"br0\">[</span><span class=\"nu0\">4</span>..<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> iban<span class=\"br0\">[</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>  iban.<span class=\"kw3\">gsub!</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>.<span class=\"sy0\">/</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>c<span class=\"sy0\">|</span> c.<span class=\"me1\">to_i</span><span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  iban.<span class=\"me1\">to_i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> == <span class=\"nu0\">1</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">p</span> valid_iban? <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span> <span class=\"co1\">#=&gt; true</span><br/><span class=\"kw3\">p</span> valid_iban? <span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span> <span class=\"co1\">#=&gt; false</span></pre>"}, {"lang": "Rust", "loc": 67, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>fn main() {<br/>    for iban in [<br/>        \"\",<br/>        \"x\",<br/>        \"QQ82\",<br/>        \"QQ82W\",<br/>        \"GB82 TEST 1234 5698 7654 322\",<br/>        \"gb82 WEST 1234 5698 7654 32\",<br/>        \"GB82 WEST 1234 5698 7654 32\",<br/>        \"GB82 TEST 1234 5698 7654 32\",<br/>        \"GB81 WEST 1234 5698 7654 32\",<br/>        \"SA03 8000 0000 6080 1016 7519\",<br/>        \"CH93 0076 2011 6238 5295 7\",<br/>    ].iter()<br/>    {<br/>        println!(<br/>            \"'{}' is {}valid\",<br/>            iban,<br/>            if validate_iban(iban) { \"\" } else { \"NOT \" }<br/>        );<br/>    }<br/>}<br/>\u00a0<br/>fn validate_iban(iban: &amp;str) -&gt; bool {<br/>    let iso_len = [<br/>        (\"AL\", 28), (\"AD\", 24), (\"AT\", 20), (\"AZ\", 28), (\"BE\", 16), (\"BH\", 22),<br/>        (\"BA\", 20), (\"BR\", 29), (\"BG\", 22), (\"HR\", 21), (\"CY\", 28), (\"CZ\", 24),<br/>        (\"DK\", 18), (\"DO\", 28), (\"EE\", 20), (\"FO\", 18), (\"FI\", 18), (\"FR\", 27),<br/>        (\"GE\", 22), (\"DE\", 22), (\"GI\", 23), (\"GL\", 18), (\"GT\", 28), (\"HU\", 28),<br/>        (\"IS\", 26), (\"IE\", 22), (\"IL\", 23), (\"IT\", 27), (\"KZ\", 20), (\"KW\", 30),<br/>        (\"LV\", 21), (\"LB\", 28), (\"LI\", 21), (\"LT\", 20), (\"LU\", 20), (\"MK\", 19),<br/>        (\"MT\", 31), (\"MR\", 27), (\"MU\", 30), (\"MC\", 27), (\"MD\", 24), (\"ME\", 22),<br/>        (\"NL\", 18), (\"NO\", 15), (\"PK\", 24), (\"PS\", 29), (\"PL\", 28), (\"PT\", 25),<br/>        (\"RO\", 24), (\"SM\", 27), (\"SA\", 24), (\"RS\", 22), (\"SK\", 24), (\"SI\", 19),<br/>        (\"ES\", 24), (\"SE\", 24), (\"CH\", 21), (\"TN\", 24), (\"TR\", 26), (\"AE\", 23),<br/>        (\"GB\", 22), (\"VG\", 24), (\"GR\", 27), (\"CR\", 21),<br/>    ];<br/>    let trimmed_iban = iban.chars()<br/>        .filter(|&amp;ch| ch\u00a0!= ' ')<br/>        .collect::&lt;String&gt;()<br/>        .to_uppercase();<br/>    if trimmed_iban.len() &lt; 4 {<br/>        return false;<br/>    }<br/>    let prefix = &amp;trimmed_iban[0..2];<br/>    if let Some(pair) = iso_len.iter().find(|&amp;&amp;(code, _)| code == prefix) {<br/>        if pair.1\u00a0!= trimmed_iban.len() {<br/>            return false;<br/>        }<br/>    } else {<br/>        return false;<br/>    }<br/>    let reversed_iban = format!(\"{}{}\", &amp;trimmed_iban[4..], &amp;trimmed_iban[0..4]);<br/>    let mut expanded_iban = String::new();<br/>    for ch in reversed_iban.chars() {<br/>        expanded_iban.push_str(&amp;if ch.is_numeric() {<br/>            format!(\"{}\", ch)<br/>        } else {<br/>            format!(\"{}\", ch as u8 - 'A' as u8 + 10u8)<br/>        });<br/>    }<br/>    expanded_iban.bytes().fold(0, |acc, ch| {<br/>        (acc * 10 + ch as u32 - '0' as u32)\u00a0% 97<br/>    }) == 1<br/>}<br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 45, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">collection</span>.<span class=\"me1\">immutable</span>.<span class=\"me1\">SortedMap</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Iban<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> iban<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"co1\">// Isolated tests</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> isAllUpperCase <span class=\"sy0\">=</span> iban.<span class=\"me1\">toUpperCase</span> <span class=\"sy0\">==</span> iban<br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> isValidpattern <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Iban.<span class=\"me1\">pattern</span> findFirstIn iban<span class=\"br0\">)</span>.<span class=\"me1\">nonEmpty</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> isNationalSize <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    Iban.<span class=\"me1\">ccVsLength</span>.<span class=\"me1\">getOrElse</span><span class=\"br0\">(</span>iban.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> iban.<span class=\"me1\">size</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> isCheckNumberOK <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> rearrange <span class=\"sy0\">=</span> <span class=\"br0\">(</span>iban.<span class=\"me1\">drop</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> + iban.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span>. <span class=\"co1\">// Move left country code part to end</span><br/>      <span class=\"co1\">// continue with each char converted to Int</span><br/>      map<span class=\"br0\">(</span>ch <span class=\"sy0\">=&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>ch.<span class=\"me1\">isDigit</span><span class=\"br0\">)</span> ch.<span class=\"me1\">toInt</span> - <span class=\"st0\">'0'</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> ch - <span class=\"st0\">'A'</span> + <span class=\"nu0\">10</span><span class=\"br0\">)</span>.<span class=\"me1\">mkString</span><br/>\u00a0<br/>    <span class=\"br0\">(</span>BigInt<span class=\"br0\">(</span>rearrange<span class=\"br0\">)</span> mod <span class=\"nu0\">97</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> isValidIban <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    isAllUpperCase <span class=\"sy0\">&amp;&amp;</span><br/>      isValidpattern <span class=\"sy0\">&amp;&amp;</span><br/>      isNationalSize <span class=\"sy0\">&amp;&amp;</span><br/>      isCheckNumberOK<br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Iban <span class=\"br0\">{</span><br/>  <span class=\"co1\">// IBAN length database</span><br/>  lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ccVsLength<span class=\"sy0\">:</span> SortedMap<span class=\"br0\">[</span>String, Int<span class=\"br0\">]</span> <span class=\"sy0\">=</span> SortedMap<span class=\"br0\">[</span>String, Int<span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"br0\">)</span> ++<br/>    <span class=\"st0\">\"\"</span><span class=\"st0\">\"AD24 AE23 AL28 AO25 AT20 AZ28 BA20 BE16 BF27 BG22 BH22 BI16<br/>      |BJ28 BR29 CG27 CH21 CI28 CM27 CR21 CV25 CY28 CZ24 DE22 DK18<br/>      |DO28 DZ24 EE20 EG27 ES24 FI18 FO18 FR27 GA27 GB22 GE22 GI23<br/>      |GL18 GR27 GT28 HR21 HU28 IE22 IL23 IR26 IS26 IT27 JO30 KW30<br/>      |KZ20 LB28 LI21 LT20 LU20 LV21 MC27 MD24 ME22 MG27 MK19 ML28<br/>      |MR27 MT31 MU30 MZ25 NL18 NO15 PK24 PL28 PS29 PT25 QA29 RO24<br/>      |RS22 SA24 SE24 SI19 SK24 SM27 SN28 TN24 TR26 UA29 VG24\"</span><span class=\"st0\">\"\"</span>.<br/>      <span class=\"me1\">stripMargin</span>.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"<span class=\"es0\">\\s</span>\"</span><span class=\"st0\">\"\"</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span>.<br/>      <span class=\"me1\">map</span><span class=\"br0\">(</span>v <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>v.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>, <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>v.<span class=\"me1\">isEmpty</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> v.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  lazy <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pattern <span class=\"sy0\">=</span> <span class=\"st0\">\"([A-Z]{2})([0-9]{2})([A-Z0-9]{4})([A-Z0-9]{0,2})([0-9]{7})(([A-Z0-9]?){0,16})\"</span>.<span class=\"me1\">r</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> apply<span class=\"br0\">(</span>s<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Iban<span class=\"br0\">(</span>s.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"<span class=\"es0\">\\s</span>\"</span><span class=\"st0\">\"\"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 57, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"bigint.s7i\";<br/>\u00a0<br/>const type: countryHash is hash [string] integer;<br/>\u00a0<br/>const func countryHash: initCountryCode is func<br/>  result<br/>    var countryHash: cc is countryHash.value;<br/>  begin<br/>    cc @:= [\"AL\"] 28; cc @:= [\"AD\"] 24; cc @:= [\"AT\"] 20; cc @:= [\"AZ\"] 28; cc @:= [\"BE\"] 16; cc @:= [\"BH\"] 22;<br/>    cc @:= [\"BA\"] 20; cc @:= [\"BR\"] 29; cc @:= [\"BG\"] 22; cc @:= [\"CR\"] 21; cc @:= [\"HR\"] 21; cc @:= [\"CY\"] 28;<br/>    cc @:= [\"CZ\"] 24; cc @:= [\"DK\"] 18; cc @:= [\"DO\"] 28; cc @:= [\"EE\"] 20; cc @:= [\"FO\"] 18; cc @:= [\"FI\"] 18;<br/>    cc @:= [\"FR\"] 27; cc @:= [\"GE\"] 22; cc @:= [\"DE\"] 22; cc @:= [\"GI\"] 23; cc @:= [\"GR\"] 27; cc @:= [\"GL\"] 18;<br/>    cc @:= [\"GT\"] 28; cc @:= [\"HU\"] 28; cc @:= [\"IS\"] 26; cc @:= [\"IE\"] 22; cc @:= [\"IL\"] 23; cc @:= [\"IT\"] 27;<br/>    cc @:= [\"KZ\"] 20; cc @:= [\"KW\"] 30; cc @:= [\"LV\"] 21; cc @:= [\"LB\"] 28; cc @:= [\"LI\"] 21; cc @:= [\"LT\"] 20;<br/>    cc @:= [\"LU\"] 20; cc @:= [\"MK\"] 19; cc @:= [\"MT\"] 31; cc @:= [\"MR\"] 27; cc @:= [\"MU\"] 30; cc @:= [\"MC\"] 27;<br/>    cc @:= [\"MD\"] 24; cc @:= [\"ME\"] 22; cc @:= [\"NL\"] 18; cc @:= [\"NO\"] 15; cc @:= [\"PK\"] 24; cc @:= [\"PS\"] 29;<br/>    cc @:= [\"PL\"] 28; cc @:= [\"PT\"] 25; cc @:= [\"RO\"] 24; cc @:= [\"SM\"] 27; cc @:= [\"SA\"] 24; cc @:= [\"RS\"] 22;<br/>    cc @:= [\"SK\"] 24; cc @:= [\"SI\"] 19; cc @:= [\"ES\"] 24; cc @:= [\"SE\"] 24; cc @:= [\"CH\"] 21; cc @:= [\"TN\"] 24;<br/>    cc @:= [\"TR\"] 26; cc @:= [\"AE\"] 23; cc @:= [\"GB\"] 22; cc @:= [\"VG\"] 24;<br/>  end func;<br/>\u00a0<br/>const countryHash: countryCode is initCountryCode;<br/>\u00a0<br/>const func boolean: isLegal (in var string: iban) is func<br/>  result<br/>    var boolean: legal is FALSE;<br/>  local<br/>    var char: ch is ' ';<br/>    var string: converted is \"\";<br/>  begin<br/>    iban\u00a0:= upper(replace(iban, \" \", \"\"));<br/>    legal\u00a0:= iban[.. 2] in countryCode and countryCode[iban[.. 2]] = length(iban);<br/>    iban\u00a0:= iban[5 ..] &amp; iban[.. 4];<br/>    for ch range iban do<br/>      case ch of<br/>        when {'0' .. '9'}: converted &amp;:= ch;<br/>        when {'A' .. 'Z'}: converted &amp;:= str(ord(ch) - ord('A') + 10);<br/>        otherwise: legal\u00a0:= FALSE;<br/>      end case;<br/>    end for;<br/>    legal\u00a0:= legal and (bigInteger parse converted) rem 97_ = 1_;<br/>  end func;<br/>\u00a0<br/>const proc: check (in string: iban) is func<br/>  begin<br/>    writeln(\"Valid \" &lt;&amp; iban &lt;&amp; \": \" &lt;&amp; isLegal(iban));<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    check(\"GB82 WEST 1234 5698 7654 32\");<br/>    check(\"GB82WEST12345698765432\");<br/>    check(\"gb82 west 1234 5698 7654 32\");<br/>    check(\"GB82 TEST 1234 5698 7654 32\");<br/>    check(\"GB82 WEST 1243 5698 7654 32\");<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 31, "block": "<pre class=\"ruby highlighted_source\">func valid_iban<span class=\"br0\">(</span>iban<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  static len = <span class=\"kw4\">Hash</span><span class=\"br0\">(</span><br/>    AD<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, AE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">23</span>, AL<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, AO<span class=\"sy0\">=&gt;</span><span class=\"nu0\">25</span>, AT<span class=\"sy0\">=&gt;</span><span class=\"nu0\">20</span>, AZ<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, BA<span class=\"sy0\">=&gt;</span><span class=\"nu0\">20</span>, BE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">16</span>, BF<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>,<br/>    BG<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, BH<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, BI<span class=\"sy0\">=&gt;</span><span class=\"nu0\">16</span>, BJ<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, BR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">29</span>, CG<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, CH<span class=\"sy0\">=&gt;</span><span class=\"nu0\">21</span>, CI<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, CM<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>,<br/>    CR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">21</span>, CV<span class=\"sy0\">=&gt;</span><span class=\"nu0\">25</span>, CY<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, CZ<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, DE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, DK<span class=\"sy0\">=&gt;</span><span class=\"nu0\">18</span>, <span class=\"kw1\">DO</span><span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, DZ<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, EE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">20</span>,<br/>    EG<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, ES<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, FI<span class=\"sy0\">=&gt;</span><span class=\"nu0\">18</span>, FO<span class=\"sy0\">=&gt;</span><span class=\"nu0\">18</span>, FR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, GA<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, GB<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, GE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, GI<span class=\"sy0\">=&gt;</span><span class=\"nu0\">23</span>,<br/>    GL<span class=\"sy0\">=&gt;</span><span class=\"nu0\">18</span>, GR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, GT<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, HR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">21</span>, HU<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, IE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, IL<span class=\"sy0\">=&gt;</span><span class=\"nu0\">23</span>, IR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">26</span>, IS<span class=\"sy0\">=&gt;</span><span class=\"nu0\">26</span>,<br/>    IT<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, JO<span class=\"sy0\">=&gt;</span><span class=\"nu0\">30</span>, KW<span class=\"sy0\">=&gt;</span><span class=\"nu0\">30</span>, KZ<span class=\"sy0\">=&gt;</span><span class=\"nu0\">20</span>, LB<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, LI<span class=\"sy0\">=&gt;</span><span class=\"nu0\">21</span>, LT<span class=\"sy0\">=&gt;</span><span class=\"nu0\">20</span>, LU<span class=\"sy0\">=&gt;</span><span class=\"nu0\">20</span>, LV<span class=\"sy0\">=&gt;</span><span class=\"nu0\">21</span>,<br/>    MC<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, MD<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, ME<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, MG<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, MK<span class=\"sy0\">=&gt;</span><span class=\"nu0\">19</span>, ML<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, MR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, MT<span class=\"sy0\">=&gt;</span><span class=\"nu0\">31</span>, MU<span class=\"sy0\">=&gt;</span><span class=\"nu0\">30</span>,<br/>    MZ<span class=\"sy0\">=&gt;</span><span class=\"nu0\">25</span>, NL<span class=\"sy0\">=&gt;</span><span class=\"nu0\">18</span>, NO<span class=\"sy0\">=&gt;</span><span class=\"nu0\">15</span>, PK<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, PL<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, PS<span class=\"sy0\">=&gt;</span><span class=\"nu0\">29</span>, PT<span class=\"sy0\">=&gt;</span><span class=\"nu0\">25</span>, QA<span class=\"sy0\">=&gt;</span><span class=\"nu0\">29</span>, RO<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>,<br/>    RS<span class=\"sy0\">=&gt;</span><span class=\"nu0\">22</span>, SA<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, SE<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, SI<span class=\"sy0\">=&gt;</span><span class=\"nu0\">19</span>, SK<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, SM<span class=\"sy0\">=&gt;</span><span class=\"nu0\">27</span>, SN<span class=\"sy0\">=&gt;</span><span class=\"nu0\">28</span>, TN<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>, TR<span class=\"sy0\">=&gt;</span><span class=\"nu0\">26</span>,<br/>    UA<span class=\"sy0\">=&gt;</span><span class=\"nu0\">29</span>, VG<span class=\"sy0\">=&gt;</span><span class=\"nu0\">24</span>,<br/>  <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"co1\"># Ensure upper alphanumeric input.</span><br/>  iban <span class=\"sy0\">-</span>= <span class=\"sy0\">/</span>\\s<span class=\"sy0\">+/</span>g<br/>  iban.<span class=\"me1\">uc</span>! ~~ <span class=\"sy0\">/</span>^<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">-</span>9A<span class=\"sy0\">-</span>Z<span class=\"br0\">]</span><span class=\"sy0\">+</span>\\z<span class=\"sy0\">/</span> <span class=\"sy0\">||</span> <span class=\"kw2\">return</span> <span class=\"kw2\">false</span><br/>\u00a0<br/>  <span class=\"co1\"># Validate country code against expected length.</span><br/>  var cc = iban.<span class=\"me1\">substr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  iban.<span class=\"me1\">len</span> == len<span class=\"br0\">{</span>cc<span class=\"br0\">}</span> <span class=\"sy0\">||</span> <span class=\"kw2\">return</span> <span class=\"kw2\">false</span><br/>\u00a0<br/>  <span class=\"co1\"># Shift and convert.</span><br/>  iban.<span class=\"kw3\">sub!</span><span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>.<span class=\"br0\">{</span><span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span>.<span class=\"sy0\">+</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>, <span class=\"br0\">{</span><span class=\"sy0\">|</span>a,b<span class=\"sy0\">|</span> b<span class=\"sy0\">+</span>a<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  iban.<span class=\"kw3\">gsub!</span><span class=\"br0\">(</span><span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"br0\">[</span>A<span class=\"sy0\">-</span>Z<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">/</span>,   <span class=\"br0\">{</span><span class=\"sy0\">|</span>a<span class=\"sy0\">|</span> a.<span class=\"me1\">ord</span> <span class=\"sy0\">-</span> <span class=\"nu0\">55</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>  iban.<span class=\"me1\">to_i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> == <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>say valid_iban<span class=\"br0\">(</span><span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span><span class=\"br0\">)</span> <span class=\"co1\">#=&gt; true</span><br/>say valid_iban<span class=\"br0\">(</span><span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span><span class=\"br0\">)</span> <span class=\"co1\">#=&gt; false</span></pre>"}, {"lang": "SNOBOL4", "loc": 81, "block": "<pre class=\"text highlighted_source\">* IBAN - International Bank Account Number validation<br/>      DEFINE('ibantable()')                          \u00a0:(iban_table_end)<br/>ibantable<br/>      ibantable = TABLE(70)<br/>      ibancodes =<br/>+        'AL28AD24AT20AZ28BE16BH22BA20BR29BG22CR21'<br/>+        'HR21CY28CZ24DK18DO28EE20FO18FI18FR27GE22'<br/>+        'DE22GI23GR27GL18GT28HU28IS26IE22IL23IT27'<br/>+        'KZ20KW30LV21LB28LI21LT20LU20MK19MT31MR27'<br/>+        'MU30MC27MD24ME22NL18NO15PK24PS29PL28PT25'<br/>+        'RO24SM27SA24RS22SK24SI19ES24SE24CH21TN24'<br/>+        'TR26AE23GB22VG24'<br/>      nordeacodes =<br/>+        'DZ24AO25BJ28FB27BI16CM27CV25IR26CI28MG27'<br/>+        'ML28MZ25SN28UA29'<br/>      allcodes = ibancodes nordeacodes<br/>iban1 allcodes LEN(2) . country LEN(2) . length =    \u00a0:F(return)<br/>      ibantable&lt;country&gt; = length                    \u00a0:(iban1)<br/>iban_table_end<br/>\u00a0<br/>      DEFINE('tonumbers(tonumbers)letter,p')         \u00a0:(tonumbers_end)<br/>tonumbers<br/>      tonumbers ANY(&amp;UCASE) . letter                 \u00a0:f(RETURN)<br/>      &amp;UCASE @p letter<br/>      tonumbers letter = p + 10                      \u00a0:(tonumbers)<br/>tonumbers_end<br/>\u00a0<br/>* modulo for long integers<br/>*<br/>      DEFINE('mod(m,n)')                             \u00a0:(mod_end)<br/>mod   m LEN(9) . r =                                 \u00a0:f(modresult)<br/>      mod = REMDR(CONVERT(r,\"INTEGER\"), n)<br/>mod0  m LEN(7) . r =                                 \u00a0:f(modresult)<br/>      mod = mod r<br/>      mod = REMDR(mod, n)                            \u00a0:(mod0)<br/>modresult<br/>      mod = GT(SIZE(m), 0) REMDR(mod m, n)           \u00a0:(RETURN)<br/>mod_end<br/>\u00a0<br/>      DEFINE('invalid(l,t)')                         \u00a0:(invalid_end)<br/>invalid<br/>      OUTPUT = \"Invalid IBAN: \" l \": \" t             \u00a0:(RETURN)<br/>invalid_end<br/>\u00a0<br/>***** main *****<br/>      ibant  = ibantable()<br/>      FREEZE(ibant)<br/>\u00a0<br/>      INPUT(.INPUT, 28,,'iban.dat') <br/>read  line   = INPUT                                 \u00a0:f(END)<br/>      country = checkdigits = line2 =<br/>**    GB82 WEST 1234 5698 7654 32<br/>**    Uppercase line2 and remove spaces.<br/>      line2 = REPLACE(line, &amp;LCASE, &amp;UCASE)<br/>space line2 ANY(\" \") =                               \u00a0:s(space)<br/>\u00a0<br/>**    GB82WEST12345698765432<br/>**    Capture country code and checkdigits.<br/>      line2 LEN(2) . country LEN(2) . checkdigits<br/>\u00a0<br/>**    1. Is the country code known?<br/>      IDENT(ibant&lt;country&gt;)<br/>+       invalid(line, \"unlisted country: \" country)  \u00a0:s(read)<br/>\u00a0<br/>**    2. Is the length correct for the country?<br/>      NE(SIZE(line2), ibant&lt;country&gt;)<br/>+       invalid(line, \"length: \" SIZE(line2)<br/>+       \" not \" ibant&lt;country&gt;)                      \u00a0:s(read)<br/>\u00a0<br/>**    3. Move first four chars to end of line.<br/>**    Convert line2 letters to numbers.<br/>**    3214282912345698765432161182<br/>      line2 = SUBSTR(line2,5) SUBSTR(line2,1,4)<br/>      line2 = tonumbers(line2)<br/>**    Mod_97 of line2 = 1?<br/>      modsum  = mod(line2, 97)<br/>      NE(modsum, 1)<br/>+       invalid(line, \"mod_97 \" modsum \" not = 1\")   \u00a0:s(read)<br/>\u00a0<br/>      OUTPUT = \"valid IBAN: \" line                   \u00a0:(read)<br/>END</pre>"}, {"lang": "Standard ML", "loc": 67, "block": "<pre class=\"text highlighted_source\">(* country_code\u00a0: string -&gt; int *)<br/>(* Get the length of a valid IBAN given the two chars long country code *)<br/>fun country_code (str\u00a0: string)\u00a0: int =<br/>  case str of<br/>    \"AL\" =&gt; 28 | \"AD\" =&gt; 24 | \"AT\" =&gt; 20 | \"AZ\" =&gt; 28<br/>  | \"BE\" =&gt; 16 | \"BH\" =&gt; 22 | \"BA\" =&gt; 20 | \"BR\" =&gt; 29<br/>  | \"BG\" =&gt; 22 | \"CR\" =&gt; 21 | \"HR\" =&gt; 21 | \"CY\" =&gt; 28<br/>  | \"CZ\" =&gt; 24 | \"DK\" =&gt; 18 | \"DO\" =&gt; 28 | \"EE\" =&gt; 20<br/>  | \"FO\" =&gt; 18 | \"FI\" =&gt; 18 | \"FR\" =&gt; 27 | \"GE\" =&gt; 22<br/>  | \"DE\" =&gt; 22 | \"GI\" =&gt; 23 | \"GR\" =&gt; 27 | \"GL\" =&gt; 18<br/>  | \"GT\" =&gt; 28 | \"HU\" =&gt; 28 | \"IS\" =&gt; 26 | \"IE\" =&gt; 22<br/>  | \"IL\" =&gt; 23 | \"IT\" =&gt; 27 | \"KZ\" =&gt; 20 | \"KW\" =&gt; 30<br/>  | \"LV\" =&gt; 21 | \"LB\" =&gt; 28 | \"LI\" =&gt; 21 | \"LT\" =&gt; 20<br/>  | \"LU\" =&gt; 20 | \"MK\" =&gt; 19 | \"MT\" =&gt; 31 | \"MR\" =&gt; 27<br/>  | \"MU\" =&gt; 30 | \"MC\" =&gt; 27 | \"MD\" =&gt; 24 | \"ME\" =&gt; 22<br/>  | \"NL\" =&gt; 18 | \"NO\" =&gt; 15 | \"PK\" =&gt; 24 | \"PS\" =&gt; 29<br/>  | \"PL\" =&gt; 28 | \"PT\" =&gt; 25 | \"RO\" =&gt; 24 | \"SM\" =&gt; 27<br/>  | \"SA\" =&gt; 24 | \"RS\" =&gt; 22 | \"SK\" =&gt; 24 | \"SI\" =&gt; 19<br/>  | \"ES\" =&gt; 24 | \"SE\" =&gt; 24 | \"CH\" =&gt; 21 | \"TN\" =&gt; 24<br/>  | \"TR\" =&gt; 26 | \"AE\" =&gt; 23 | \"GB\" =&gt; 22 | \"VG\" =&gt; 24<br/>  | _ =&gt; raise Domain<br/>\u00a0<br/>\u00a0<br/>(* removespace\u00a0: string -&gt; string *)<br/>(* Removes all spaces from a string *)<br/>fun removespace s = String.translate (fn #\" \" =&gt; \"\" | c =&gt; str c) s<br/>\u00a0<br/>(* to_upper\u00a0: string -&gt; string *)<br/>(* Convert every char to upper of a string *)<br/>fun to_upper (s\u00a0: string)\u00a0: string =<br/>  String.translate (fn c =&gt; str (Char.toUpper c)) s<br/>\u00a0<br/>(* convert_to_number\u00a0: char -&gt; string *)<br/>(* Covert a alphanumeric char into a numerical string *)<br/>fun convert_to_number (c\u00a0: char)\u00a0: string =<br/>  if Char.isDigit c then str c else<br/>    if Char.isUpper c then Int.toString (10 + ord c - ord #\"A\") else<br/>      raise Domain<br/>\u00a0<br/>\u00a0<br/>(* verify_iban\u00a0: string -&gt; bool *)<br/>(* Check weather a string is a valid IBAN *)<br/>fun verify_iban str =<br/>  let<br/>    (* Remove spaces and make upper case *)<br/>    val str = to_upper (removespace str)<br/>    (* Fetch first two chars (country code) *)<br/>    val country = String.substring (str, 0, 2)<br/>    val len = country_code country<br/>  in<br/>    (* size test *)<br/>    String.size str = len<br/>    andalso<br/>    (* Every char must be alphanumeric *)<br/>    List.all Char.isAlphaNum (explode str)<br/>    andalso<br/>    let<br/>      (* Reorder *)<br/>      val str = String.substring (str, 4, String.size str - 4) ^ String.substring (str, 0, 4)<br/>      (* Convert into digits *)<br/>      val str = String.translate convert_to_number str<br/>      (* Convert into a big number *)<br/>      val number = valOf (IntInf.fromString str)<br/>    in<br/>      IntInf.mod (number, 97) = 1<br/>    end<br/>  end handle Subscript =&gt; false | Domain =&gt; false</pre>"}, {"lang": "Tcl", "loc": 34, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> verifyIBAN <span class=\"br0\">{</span>iban<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># Normalize by up-casing and stripping illegal chars (e.g., space)</span><br/>    <span class=\"kw1\">set</span> iban <span class=\"br0\">[</span><span class=\"kw2\">regsub</span> -all <span class=\"br0\">{</span><span class=\"br0\">[</span>^A-Z0-<span class=\"nu0\">9</span><span class=\"br0\">]</span>+<span class=\"br0\">}</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> toupper <span class=\"re0\">$iban</span><span class=\"br0\">]</span> <span class=\"st0\">\"\"</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Get the expected length from the country-code part</span><br/>    <span class=\"kw1\">switch</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> range <span class=\"re0\">$iban</span> <span class=\"nu0\">0</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\tNO <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">15</span> <span class=\"br0\">}</span><br/>\tBE <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">16</span> <span class=\"br0\">}</span><br/>\tDK - FI - FO - GL - NL <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">18</span><span class=\"br0\">}</span><br/>\tMK - SI <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">19</span> <span class=\"br0\">}</span><br/>\tAT - BA - EE - KZ - LT - LU <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">20</span> <span class=\"br0\">}</span><br/>\tCH - CR - HR - LI - LV <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">21</span> <span class=\"br0\">}</span><br/>\tBG - BH - DE - GB - GE - IE - ME - RS <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">22</span> <span class=\"br0\">}</span><br/>\tAE - GI - IL <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">23</span> <span class=\"br0\">}</span><br/>\tAD - CZ - ES - MD - PK - RO - SA - SE - SK - TN - VG <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">24</span> <span class=\"br0\">}</span><br/>\tPT <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">25</span> <span class=\"br0\">}</span><br/>\tIS - TR <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">26</span> <span class=\"br0\">}</span><br/>\tFR - GR - IT - MC - MR - SM <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">27</span> <span class=\"br0\">}</span><br/>\tAL - AZ - CY - DO - GT - HU - LB - PL <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">28</span> <span class=\"br0\">}</span><br/>\tBR - PS <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">29</span> <span class=\"br0\">}</span><br/>\tKW - MU <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">30</span> <span class=\"br0\">}</span><br/>\tMT <span class=\"br0\">{</span> <span class=\"kw1\">set</span> len <span class=\"nu0\">31</span> <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">default</span> <span class=\"br0\">{</span><br/>\t    <span class=\"co1\"># unsupported country code</span><br/>\t    <span class=\"kw1\">return</span> false<br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\"># Convert to number</span><br/>    <span class=\"kw1\">set</span> num <span class=\"br0\">[</span><span class=\"kw2\">string</span> map <span class=\"br0\">{</span><br/>\tA <span class=\"nu0\">10</span> B <span class=\"nu0\">11</span> C <span class=\"nu0\">12</span> D <span class=\"nu0\">13</span> E <span class=\"nu0\">14</span> F <span class=\"nu0\">15</span> G <span class=\"nu0\">16</span> H <span class=\"nu0\">17</span> I <span class=\"nu0\">18</span> J <span class=\"nu0\">19</span> K <span class=\"nu0\">20</span> L <span class=\"nu0\">21</span> M <span class=\"nu0\">22</span><br/>\tN <span class=\"nu0\">23</span> O <span class=\"nu0\">24</span> P <span class=\"nu0\">25</span> Q <span class=\"nu0\">26</span> R <span class=\"nu0\">27</span> S <span class=\"nu0\">28</span> T <span class=\"nu0\">29</span> U <span class=\"nu0\">30</span> V <span class=\"nu0\">31</span> W <span class=\"nu0\">32</span> X <span class=\"nu0\">33</span> Y <span class=\"nu0\">34</span> Z <span class=\"nu0\">35</span><br/>    <span class=\"br0\">}</span> <span class=\"br0\">[</span><span class=\"kw2\">string</span> range <span class=\"re0\">$iban</span> <span class=\"nu0\">4</span> end<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> range <span class=\"re0\">$iban</span> <span class=\"nu0\">0</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Verify length and modulus</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">string</span> length <span class=\"re0\">$iban</span><span class=\"br0\">]</span> == <span class=\"re0\">$len</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$num</span> <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> == <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "UNIX Shell", "loc": 34, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw3\">declare</span> <span class=\"re5\">-A</span> <span class=\"re2\">base36</span>=<span class=\"br0\">(</span><br/>    <span class=\"br0\">[</span>A<span class=\"br0\">]</span>=<span class=\"nu0\">10</span> <span class=\"br0\">[</span>B<span class=\"br0\">]</span>=<span class=\"nu0\">11</span> <span class=\"br0\">[</span>C<span class=\"br0\">]</span>=<span class=\"nu0\">12</span> <span class=\"br0\">[</span>D<span class=\"br0\">]</span>=<span class=\"nu0\">13</span> <span class=\"br0\">[</span>E<span class=\"br0\">]</span>=<span class=\"nu0\">14</span> <span class=\"br0\">[</span>F<span class=\"br0\">]</span>=<span class=\"nu0\">15</span> <span class=\"br0\">[</span>G<span class=\"br0\">]</span>=<span class=\"nu0\">16</span> <span class=\"br0\">[</span>H<span class=\"br0\">]</span>=<span class=\"nu0\">17</span> <span class=\"br0\">[</span>I<span class=\"br0\">]</span>=<span class=\"nu0\">18</span><br/>    <span class=\"br0\">[</span>J<span class=\"br0\">]</span>=<span class=\"nu0\">19</span> <span class=\"br0\">[</span>K<span class=\"br0\">]</span>=<span class=\"nu0\">20</span> <span class=\"br0\">[</span>L<span class=\"br0\">]</span>=<span class=\"nu0\">21</span> <span class=\"br0\">[</span>M<span class=\"br0\">]</span>=<span class=\"nu0\">22</span> <span class=\"br0\">[</span>N<span class=\"br0\">]</span>=<span class=\"nu0\">23</span> <span class=\"br0\">[</span>O<span class=\"br0\">]</span>=<span class=\"nu0\">24</span> <span class=\"br0\">[</span>P<span class=\"br0\">]</span>=<span class=\"nu0\">25</span> <span class=\"br0\">[</span>Q<span class=\"br0\">]</span>=<span class=\"nu0\">26</span> <span class=\"br0\">[</span>R<span class=\"br0\">]</span>=<span class=\"nu0\">27</span><br/>    <span class=\"br0\">[</span>S<span class=\"br0\">]</span>=<span class=\"nu0\">28</span> <span class=\"br0\">[</span>T<span class=\"br0\">]</span>=<span class=\"nu0\">29</span> <span class=\"br0\">[</span>U<span class=\"br0\">]</span>=<span class=\"nu0\">30</span> <span class=\"br0\">[</span>V<span class=\"br0\">]</span>=<span class=\"nu0\">31</span> <span class=\"br0\">[</span>W<span class=\"br0\">]</span>=<span class=\"nu0\">32</span> <span class=\"br0\">[</span>X<span class=\"br0\">]</span>=<span class=\"nu0\">33</span> <span class=\"br0\">[</span>Y<span class=\"br0\">]</span>=<span class=\"nu0\">34</span> <span class=\"br0\">[</span>Z<span class=\"br0\">]</span>=<span class=\"nu0\">35</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">function</span> is_iban <span class=\"br0\">{</span><br/>    <span class=\"kw3\">local</span> <span class=\"re5\">-u</span> <span class=\"re2\">acct</span>=<span class=\"co1\">${1//[^[:alnum:]]/}</span><br/>    <span class=\"re2\">acct</span>=<span class=\"co1\">${acct:4}</span><span class=\"co1\">${acct:0:4}</span><br/>    <span class=\"kw3\">local</span> i char <span class=\"re2\">digits</span>=<span class=\"st0\">\"\"</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re2\">i</span>=<span class=\"nu0\">0</span>; i<span class=\"sy0\">&lt;</span><span class=\"co1\">${#acct}</span>; i++<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>        <span class=\"re2\">char</span>=<span class=\"co1\">${acct:i:1}</span><br/>        digits+=<span class=\"co1\">${base36[$char]:-$char}</span><br/>    <span class=\"kw1\">done</span><br/>    <span class=\"kw3\">local</span> <span class=\"re2\">mod</span>=$<span class=\"br0\">(</span>mod97 <span class=\"re1\">$digits</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span> mod == <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> mod97 <span class=\"br0\">{</span><br/>    <span class=\"kw3\">local</span> <span class=\"re2\">D</span>=<span class=\"re4\">$1</span><br/>    <span class=\"re2\">N</span>=<span class=\"co1\">${D:0:9}</span><br/>    <span class=\"re2\">D</span>=<span class=\"co1\">${D:9}</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">[</span><span class=\"br0\">[</span> <span class=\"re5\">-n</span> <span class=\"re1\">$D</span> <span class=\"br0\">]</span><span class=\"br0\">]</span>; <span class=\"kw1\">do</span><br/>        <span class=\"re2\">mod</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> N <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"re2\">N</span>=$<span class=\"br0\">(</span><span class=\"kw3\">printf</span> <span class=\"st0\">\"%02d%s\"</span> <span class=\"re1\">$mod</span> <span class=\"co1\">${D:0:7}</span><span class=\"br0\">)</span><br/>        <span class=\"re2\">D</span>=<span class=\"co1\">${D:7}</span><br/>    <span class=\"kw1\">done</span><br/>    <span class=\"kw3\">echo</span> $<span class=\"br0\">(</span><span class=\"br0\">(</span> N <span class=\"sy0\">%</span> <span class=\"nu0\">97</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"kw3\">test</span> <span class=\"kw1\">in</span> <span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span> <span class=\"st0\">\"GB42 WEST 1234 5698 7654 32\"</span>; <span class=\"kw1\">do</span><br/>    <span class=\"kw3\">printf</span> <span class=\"st0\">\"%s\u00a0: \"</span> <span class=\"st0\">\"<span class=\"es2\">$test</span>\"</span><br/>    is_iban <span class=\"st0\">\"<span class=\"es2\">$test</span>\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"kw2\">yes</span> <span class=\"sy0\">||</span> <span class=\"kw3\">echo</span> no<br/><span class=\"kw1\">done</span></pre>"}, {"lang": "VBScript", "loc": 60, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Function</span> validate_iban(s)<br/>\tvalidate_iban = Chr(34) &amp; s &amp; Chr(34) &amp; <span class=\"st0\">\" is NOT valid.\"</span><br/>\t<span class=\"kw4\">Set</span> cn_len = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Scripting.Dictionary\"</span>)<br/>\t<span class=\"kw3\">With</span> cn_len<br/>\t\t.Add <span class=\"st0\">\"AL\"</span>,28\u00a0: .Add <span class=\"st0\">\"AD\"</span>,24\u00a0: .Add <span class=\"st0\">\"AT\"</span>,20\u00a0: .Add <span class=\"st0\">\"AZ\"</span>,28\u00a0: .Add <span class=\"st0\">\"BH\"</span>,22\u00a0: .Add <span class=\"st0\">\"BE\"</span>,16<br/>\t\t.Add <span class=\"st0\">\"BA\"</span>,20\u00a0: .Add <span class=\"st0\">\"BR\"</span>,29\u00a0: .Add <span class=\"st0\">\"BG\"</span>,22\u00a0: .Add <span class=\"st0\">\"CR\"</span>,21\u00a0: .Add <span class=\"st0\">\"HR\"</span>,21\u00a0: .Add <span class=\"st0\">\"CY\"</span>,28<br/>\t\t.Add <span class=\"st0\">\"CZ\"</span>,24\u00a0: .Add <span class=\"st0\">\"DK\"</span>,18\u00a0: .Add <span class=\"st0\">\"DO\"</span>,28\u00a0: .Add <span class=\"st0\">\"EE\"</span>,20\u00a0: .Add <span class=\"st0\">\"FO\"</span>,18\u00a0: .Add <span class=\"st0\">\"FI\"</span>,18<br/>\t\t.Add <span class=\"st0\">\"FR\"</span>,27\u00a0: .Add <span class=\"st0\">\"GE\"</span>,22\u00a0: .Add <span class=\"st0\">\"DE\"</span>,22\u00a0: .Add <span class=\"st0\">\"GI\"</span>,23\u00a0: .Add <span class=\"st0\">\"GR\"</span>,27\u00a0: .Add <span class=\"st0\">\"GL\"</span>,18<br/>\t\t.Add <span class=\"st0\">\"GT\"</span>,28\u00a0: .Add <span class=\"st0\">\"HU\"</span>,28\u00a0: .Add <span class=\"st0\">\"IS\"</span>,26\u00a0: .Add <span class=\"st0\">\"IE\"</span>,22\u00a0: .Add <span class=\"st0\">\"IL\"</span>,23\u00a0: .Add <span class=\"st0\">\"IT\"</span>,27<br/>\t\t.Add <span class=\"st0\">\"JO\"</span>,30\u00a0: .Add <span class=\"st0\">\"KZ\"</span>,20\u00a0: .Add <span class=\"st0\">\"KW\"</span>,30\u00a0: .Add <span class=\"st0\">\"LV\"</span>,21\u00a0: .Add <span class=\"st0\">\"LB\"</span>,28\u00a0: .Add <span class=\"st0\">\"LI\"</span>,21<br/>\t\t.Add <span class=\"st0\">\"LT\"</span>,20\u00a0: .Add <span class=\"st0\">\"LU\"</span>,20\u00a0: .Add <span class=\"st0\">\"MK\"</span>,19\u00a0: .Add <span class=\"st0\">\"MT\"</span>,31\u00a0: .Add <span class=\"st0\">\"MR\"</span>,27\u00a0: .Add <span class=\"st0\">\"MU\"</span>,30<br/>\t\t.Add <span class=\"st0\">\"MC\"</span>,27\u00a0: .Add <span class=\"st0\">\"MD\"</span>,24\u00a0: .Add <span class=\"st0\">\"ME\"</span>,22\u00a0: .Add <span class=\"st0\">\"NL\"</span>,18\u00a0: .Add <span class=\"st0\">\"NO\"</span>,15\u00a0: .Add <span class=\"st0\">\"PK\"</span>,24<br/>\t\t.Add <span class=\"st0\">\"PS\"</span>,29\u00a0: .Add <span class=\"st0\">\"PL\"</span>,28\u00a0: .Add <span class=\"st0\">\"PT\"</span>,25\u00a0: .Add <span class=\"st0\">\"QA\"</span>,29\u00a0: .Add <span class=\"st0\">\"RO\"</span>,24\u00a0: .Add <span class=\"st0\">\"SM\"</span>,27<br/>\t\t.Add <span class=\"st0\">\"SA\"</span>,24\u00a0: .Add <span class=\"st0\">\"RS\"</span>,22\u00a0: .Add <span class=\"st0\">\"SK\"</span>,24\u00a0: .Add <span class=\"st0\">\"SI\"</span>,19\u00a0: .Add <span class=\"st0\">\"ES\"</span>,24\u00a0: .Add <span class=\"st0\">\"SE\"</span>,24<br/>\t\t.Add <span class=\"st0\">\"CH\"</span>,21\u00a0: .Add <span class=\"st0\">\"TN\"</span>,24\u00a0: .Add <span class=\"st0\">\"TR\"</span>,26\u00a0: .Add <span class=\"st0\">\"AE\"</span>,23\u00a0: .Add <span class=\"st0\">\"GB\"</span>,22\u00a0: .Add <span class=\"st0\">\"VG\"</span>,24<br/>\t<span class=\"kw3\">End</span> <span class=\"kw3\">With</span><br/>\tiban = Replace(s,<span class=\"st0\">\" \"</span>,<span class=\"st0\">\"\"</span>)<br/>\t<span class=\"kw3\">If</span> cn_len.Exists(Left(iban,2)) <span class=\"kw3\">And</span> Len(iban) = cn_len.Item(Left(iban,2)) <span class=\"kw3\">Then</span><br/>\t\t<span class=\"co1\">'move the first 4 characters to the end<br/></span>\t\tiban = Mid(iban,5,Len(iban)-4) &amp; Left(iban,4)<br/>\t\t<span class=\"co1\">'convert letters to numbers A=10 to Z=35<br/></span>\t\tD = <span class=\"st0\">\"\"</span><br/>\t\t<span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> Len(iban)<br/>\t\t\t<span class=\"kw3\">If</span> Asc(Mid(iban,i,1)) &gt;= 65 <span class=\"kw3\">And</span> Asc(Mid(iban,i,1)) &lt;= 90 <span class=\"kw3\">Then</span><br/>\t\t\t\tD = D &amp; CStr(Asc(Mid(iban,i,1)) - 55)<br/>\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\tD = D &amp; Mid(iban,i,1)<br/>\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t<span class=\"kw3\">Next</span><br/>\t\t<span class=\"co1\">'piece-wise modulo calculation<br/></span>\t\t<span class=\"kw3\">Do</span><br/>\t\t\t<span class=\"kw3\">If</span> Len(D) &gt; 9 <span class=\"kw3\">Then</span><br/>\t\t\t\tN = CLng(Left(D,9)) <span class=\"kw4\">Mod</span> 97<br/>\t\t\t\tD = CStr(N) &amp; Mid(D,10,Len(D)-9)<br/>\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\tN = CLng(Left(D,9)) <span class=\"kw4\">Mod</span> 97<br/>\t\t\t\t<span class=\"kw2\">Exit</span> <span class=\"kw3\">Do</span><br/>\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t<span class=\"kw3\">Loop</span><br/>\t\t<span class=\"kw3\">If</span> N = 1 <span class=\"kw3\">Then</span><br/>\t\t\tvalidate_iban = Chr(34) &amp; s &amp; Chr(34) &amp; <span class=\"st0\">\" is valid.\"</span><br/>\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/><span class=\"co1\">'test several scenarios<br/></span>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"GB82WEST12345698765432\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"gb82 west 1234 5698 7654 32\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"GB29 NWBK 6016 1331 9268 19\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"SA03 8000 0000 6080 1016 7519\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"CH93 0076 2011 6238 5295 7\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"IL62 0108 0000 0009 9999 999\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"IL62-0108-0000-0009-9999-999\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"US12 3456 7890 0987 6543 210\"</span>)<br/>WScript.StdOut.WriteLine validate_iban(<span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695X\"</span>)<br/>\u00a0</pre>"}, {"lang": "Yabasic", "loc": 73, "block": "<pre class=\"text highlighted_source\">// List updated to release 72, 25 November 2016, of IBAN Registry (75 countries)<br/>countryCodes$ = \"AD24 AE23 AL28 AT20 AZ28 BA20 BE16 BG22 BH22 BR29 BY28 CH21 CR22 CY28 CZ24 DE22 \"<br/>countryCodes$ = countryCodes$ + \"DK18 DO28 EE20 ES24 FI18 FO18 FR27 GB22 GE22 GI23 GL18 GR27 GT28 HR21 HU28 IE22 \"<br/>countryCodes$ = countryCodes$ + \"IL23 IQ23 IS26 IT27 JO30 KW30 KZ20 LB28 LC32 LI21 LT20 LU20 LV21 MC27 MD24 ME22 \"<br/>countryCodes$ = countryCodes$ + \"MK19 MR27 MT31 MU30 NL18 NO15 PK24 PL28 PS29 PT25 QA29 RO24 RS22 SA24 SC31 SE24 \"<br/>countryCodes$ = countryCodes$ + \"SI19 SK24 SM27 ST25 SV28 TL23 TN24 TR26 UA29 VG24 XK20\"<br/>\u00a0<br/>sub iban(code$)<br/>// This routine does and should reject codes containing spaces etc.<br/>// Use iban_s() below for otherwise.<br/>    local country, lcode, c, i, ch$<br/>\u00a0<br/>    lcode = len(code$)<br/>    country = instr(countryCodes$, upper$(left$(code$, 2)))<br/>\u00a0<br/>    if country and lcode = val(mid$(countryCodes$, country + 2, 2)) then<br/>        code$ = right$(code$, lcode - 4) + left$(code$, 4)<br/>        for i = 1 to lcode<br/>            ch$ = mid$(code$, i, 1)<br/>            if ch$ &gt;= \"0\" and ch$ &lt;= \"9\" then<br/>                c = c * 10 + asc(ch$) - asc(\"0\")<br/>            elsif ch$ &gt;= \"A\" and ch$ &lt;= \"Z\" then<br/>                c = c * 100 + asc(ch$) - 55<br/>            else<br/>                return false<br/>            end if<br/>            c = mod(c, 97)<br/>        next i<br/>        return c = 1<br/>    end if<br/>    return false<br/>end sub<br/>\u00a0<br/>sub iban_s(code$)<br/>// strips any embedded spaces and hyphens before validating.<br/>\tlocal i, t$(1), n<br/>\u00a0<br/>\ti = token(code$, t$(), \" -\")<br/>\tcode$ = \"\"<br/>\tfor n = 1 to i<br/>\t\tcode$ = code$ + t$(n)<br/>\tnext n<br/>\u00a0<br/>    return iban(code$)<br/>end sub<br/>\u00a0<br/>sub test(code$, expected)<br/>    local valid, state$<br/>\u00a0<br/>    valid = iban_s(code$)<br/>\u00a0<br/>    if valid = expected then<br/>    \tif valid then<br/>    \t\tstate$ = \"ok\"<br/>    \telse<br/>    \t\tstate$ = \"invalid (as expected)\"<br/>    \tend if<br/>    else<br/>    \tif valid then<br/>    \t\tstate$ = \"OK!!\"<br/>    \telse<br/>    \t\tstate$ = \"INVALID!!\"<br/>    \tend if<br/>    \tstate$ = state$ + \" (NOT AS EXPECTED)\"<br/>    end if<br/>    print code$, \"\\t \", state$<br/>end sub<br/>\u00a0<br/>test(\"GB82 WEST 1234 5698 7654 32\", true)<br/>test(\"GB82 TEST 1234 5698 7654 32\", false)<br/>test(\"GB81 WEST 1234 5698 7654 32\", false)<br/>test(\"SA03 8000 0000 6080 1016 7519\", true)<br/>test(\"CH93 0076 2011 6238 5295 7\", true)</pre>"}, {"lang": "zkl", "loc": 6, "block": "<pre class=\"text highlighted_source\">var BN=Import(\"zklBigNum\");<br/>fcn validateIBAN(iban){<br/>   iban=iban-\" \\t\";<br/>   alphaNums.matches(iban) and (ibans.find(iban[0,2])==iban.len()) and<br/>   ( BN((iban[4,*]+iban[0,4]).apply(\"toInt\",36))\u00a0% 97 == 1 )<br/>}</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 64, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"co3\">REM REM Used the following as official standard:</span><br/><span class=\"nu0\">20</span> <span class=\"co3\">REM REM  http://www.cnb.cz/cs/platebni_styk/iban/download/EBS204.pdf</span><br/><span class=\"nu0\">30</span> <span class=\"co3\">REM REM Pairs of ISO 3166 country code &amp; expected IBAN length for this country</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">LET</span> c$=<span class=\"st0\">\"AL28 AD24 AT20 AZ28 BE16 BH22 BA20 BR29 BG22 CR21 HR21 CY28 CZ24 DK18 DO28 EE20 \"</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">LET</span> c$=c$+<span class=\"st0\">\"FO18 FI18 FR27 GE22 DE22 GI23 GR27 GL18 GT28 HU28 IS26 IE22 IL23 IT27 KZ20 KW30 \"</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">LET</span> c$=c$+<span class=\"st0\">\"LV21 LB28 LI21 LT20 LU20 MK19 MT31 MR27 MU30 MC27 MD24 ME22 NL18 NO15 PK24 PS29 \"</span><br/><span class=\"nu0\">70</span> <span class=\"kw1\">LET</span> c$=c$+<span class=\"st0\">\"PL28 PT25 RO24 SM27 SA24 RS22 SK24 SI19 ES24 SE24 CH21 TN24 TR26 AE23 GB22 VG24 \"</span><br/><span class=\"nu0\">80</span> <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\"\"</span><br/><span class=\"nu0\">100</span> <span class=\"kw1\">LET</span> i$=<span class=\"st0\">\"GB82 WEST 1234 5698 7654 32\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">110</span> <span class=\"kw1\">LET</span> i$=<span class=\"st0\">\"gb82 west 1234 5698 7654 32\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">120</span> <span class=\"kw1\">LET</span> i$=<span class=\"st0\">\"GB82 TEST 1234 5698 7654 32\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">130</span> <span class=\"kw1\">LET</span> i$=<span class=\"st0\">\"GR16 0110 1250 0000 0001 2300 695\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">140</span> <span class=\"kw1\">LET</span> i$=<span class=\"st0\">\"IL62-0108-0000-0009-9999-999\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">900</span> STOP <br/><span class=\"nu0\">1000</span> <span class=\"co3\">REM IBAN check routine</span><br/><span class=\"nu0\">1010</span> <span class=\"kw1\">LET</span> explen=<span class=\"nu0\">0</span>: <span class=\"kw1\">LET</span> lenc=<span class=\"kw3\">LEN</span> c$<br/><span class=\"nu0\">1020</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> lenc <span class=\"kw4\">STEP</span> <span class=\"nu0\">5</span><br/><span class=\"nu0\">1030</span> <span class=\"kw1\">IF</span> i$<span class=\"br0\">(</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>=c$<span class=\"br0\">(</span>i <span class=\"kw1\">TO</span> i+<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> explen=<span class=\"kw3\">VAL</span> c$<span class=\"br0\">(</span>i+<span class=\"nu0\">2</span> <span class=\"kw1\">TO</span> i+<span class=\"nu0\">3</span><span class=\"br0\">)</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2000</span><br/><span class=\"nu0\">1040</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">2000</span> <span class=\"kw1\">LET</span> match=explen&gt;<span class=\"nu0\">0</span><br/><span class=\"nu0\">2010</span> <span class=\"co3\">REM Continue if country code found</span><br/><span class=\"nu0\">2020</span> <span class=\"kw1\">IF</span> <span class=\"kw4\">NOT</span> match <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\"country code: \"</span>+i$<span class=\"br0\">(</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3000</span><br/><span class=\"nu0\">2030</span> <span class=\"co3\">REM Remove espace = convert to digital IBAN</span><br/><span class=\"nu0\">2040</span> <span class=\"kw1\">LET</span> d$=<span class=\"st0\">\"\"</span><br/><span class=\"nu0\">2050</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">LEN</span> i$<br/><span class=\"nu0\">2060</span> <span class=\"kw1\">IF</span> i$<span class=\"br0\">(</span>i<span class=\"br0\">)</span>&gt;<span class=\"st0\">\" \"</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> d$=d$+i$<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">2070</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">2080</span> <span class=\"kw1\">LET</span> match=explen=<span class=\"kw3\">LEN</span> d$<br/><span class=\"nu0\">2090</span> <span class=\"co3\">REM Continue if length is correct</span><br/><span class=\"nu0\">2100</span> <span class=\"kw1\">IF</span> <span class=\"kw4\">NOT</span> match <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\"code length, expected length: \"</span>+<span class=\"kw3\">STR</span>$ explen: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3000</span><br/><span class=\"nu0\">2110</span> <span class=\"co3\">REM Create temporary string with country code appended</span><br/><span class=\"nu0\">2120</span> <span class=\"kw1\">LET</span> t$=d$<span class=\"br0\">(</span><span class=\"nu0\">5</span> <span class=\"kw1\">TO</span> <span class=\"br0\">)</span>+d$<span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/><span class=\"nu0\">2130</span> <span class=\"co3\">REM Make big number, replacing letters by numbers using next conversion table: A=10 ... Z=35</span><br/><span class=\"nu0\">2140</span> <span class=\"kw1\">LET</span> b$=<span class=\"st0\">\"\"</span><br/><span class=\"nu0\">2150</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">LEN</span> t$<br/><span class=\"nu0\">2160</span> <span class=\"kw1\">LET</span> c= <span class=\"kw3\">CODE</span> t$<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">2170</span> <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>c&gt;<span class=\"nu0\">64</span> <span class=\"kw4\">AND</span> c&lt;<span class=\"nu0\">91</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> b$=b$+<span class=\"kw3\">STR</span>$ <span class=\"br0\">(</span>c-<span class=\"nu0\">55</span><span class=\"br0\">)</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">2200</span><br/><span class=\"nu0\">2190</span> <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>c&gt;<span class=\"nu0\">47</span> <span class=\"kw4\">AND</span> c&lt;<span class=\"nu0\">58</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> b$=b$+t$<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">2200</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">2210</span> <span class=\"co3\">REM MOD 97 on bignum$+\"00\" and subtract result from 98 to obtain control number</span><br/><span class=\"nu0\">2220</span> <span class=\"kw1\">LET</span> k$=b$+<span class=\"st0\">\"00\"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">4000</span><br/><span class=\"nu0\">2230</span> <span class=\"kw1\">LET</span> kk=<span class=\"nu0\">98</span>-mod97<br/><span class=\"nu0\">2240</span> <span class=\"co3\">REM Compare with control number in IBAN</span><br/><span class=\"nu0\">2250</span> <span class=\"kw1\">LET</span> match=<span class=\"kw3\">VAL</span> i$<span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>=kk<br/><span class=\"nu0\">2260</span> <span class=\"co3\">REM Continue if control number matches</span><br/><span class=\"nu0\">2270</span> <span class=\"kw1\">IF</span> <span class=\"kw4\">NOT</span> match <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\"check digits, should be: \"</span>+<span class=\"kw3\">STR</span>$ kk: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3000</span><br/><span class=\"nu0\">2280</span> <span class=\"co3\">REM Append kk to bignum$ and determine if MOD 97 results in 1</span><br/><span class=\"nu0\">2285</span> <span class=\"kw1\">LET</span> k$=<span class=\"st0\">\"0\"</span>+<span class=\"kw3\">STR</span>$ kk<br/><span class=\"nu0\">2290</span> <span class=\"kw1\">LET</span> k$=b$+k$<span class=\"br0\">(</span><span class=\"kw3\">LEN</span> k$-<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"br0\">)</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">4000</span><br/><span class=\"nu0\">2300</span> <span class=\"kw1\">LET</span> match=mod97=<span class=\"nu0\">1</span><br/><span class=\"nu0\">2310</span> <span class=\"co3\">REM Continue if mod 97</span><br/><span class=\"nu0\">2320</span> <span class=\"kw1\">IF</span> <span class=\"kw4\">NOT</span> match <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\"result from modulo 97\"</span><br/><span class=\"nu0\">3000</span> <span class=\"kw1\">IF</span> match <span class=\"kw1\">THEN</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"  \"</span>: <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">3100</span><br/><span class=\"nu0\">3010</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"in\"</span>;: <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\" ***error!*** invalid \"</span>+e$<br/><span class=\"nu0\">3100</span> <span class=\"kw1\">PRINT</span> <span class=\"st0\">\"valid IBAN: \"</span>;i$;e$: <span class=\"kw1\">LET</span> e$=<span class=\"st0\">\"\"</span><br/><span class=\"nu0\">3110</span> <span class=\"kw1\">RETURN</span> <br/><span class=\"nu0\">4000</span> <span class=\"co3\">REM Modulo 97</span><br/><span class=\"nu0\">4010</span> <span class=\"kw1\">LET</span> mod97=<span class=\"nu0\">0</span><br/><span class=\"nu0\">4020</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">LEN</span> k$<br/><span class=\"nu0\">4030</span> <span class=\"kw1\">LET</span> d$=<span class=\"kw3\">STR</span>$ <span class=\"br0\">(</span>mod97<span class=\"br0\">)</span>+k$<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"nu0\">4040</span> <span class=\"kw1\">LET</span> mod97=FN m<span class=\"br0\">(</span><span class=\"kw3\">VAL</span> <span class=\"br0\">(</span>d$<span class=\"br0\">)</span>,<span class=\"nu0\">97</span><span class=\"br0\">)</span><br/><span class=\"nu0\">4050</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">4060</span> <span class=\"kw1\">RETURN</span> <br/><span class=\"nu0\">5000</span> DEF FN m<span class=\"br0\">(</span>a,b<span class=\"br0\">)</span>=a-<span class=\"kw3\">INT</span> <span class=\"br0\">(</span>a/b<span class=\"br0\">)</span>*b: <span class=\"co3\">REM modulo</span></pre>"}]}