{"task": "Jensen%27s_Device", "blocks": [{"lang": "Ada", "loc": 26, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;  <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Jensen_Device <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">function</span> Sum<br/>            <span class=\"br0\">(</span>  I\u00a0: <span class=\"kw2\">not</span> <span class=\"kw3\">null</span> <span class=\"kw3\">access</span> Float;<br/>               Lo, Hi\u00a0: Float;<br/>               F\u00a0: <span class=\"kw3\">access</span> <span class=\"kw3\">function</span> <span class=\"kw1\">return</span> Float<br/>            <span class=\"br0\">)</span>  <span class=\"kw1\">return</span> Float <span class=\"kw1\">is</span><br/>      Temp\u00a0: Float\u00a0:= <span class=\"nu0\">0.0</span>;<br/>   <span class=\"kw1\">begin</span><br/>      I.<span class=\"kw3\">all</span>\u00a0:= Lo;<br/>      <span class=\"kw1\">while</span> I.<span class=\"kw3\">all</span> &lt;= Hi <span class=\"kw1\">loop</span><br/>         Temp\u00a0:= Temp + F.<span class=\"kw3\">all</span>;<br/>         I.<span class=\"kw3\">all</span>\u00a0:= I.<span class=\"kw3\">all</span> + <span class=\"nu0\">1.0</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Temp;<br/>   <span class=\"kw1\">end</span> Sum;<br/>\u00a0<br/>   I\u00a0: <span class=\"kw3\">aliased</span> Float;<br/>   <span class=\"kw3\">function</span> Inv_I <span class=\"kw1\">return</span> Float <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">return</span> <span class=\"nu0\">1.0</span> / I;<br/>   <span class=\"kw1\">end</span> Inv_I;<br/><span class=\"kw1\">begin</span><br/>   Put_Line <span class=\"br0\">(</span>Float'Image <span class=\"br0\">(</span>Sum <span class=\"br0\">(</span>I'<span class=\"kw3\">Access</span>, <span class=\"nu0\">1.0</span>, <span class=\"nu0\">100.0</span>, Inv_I'<span class=\"kw3\">Access</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Jensen_Device;</pre>"}, {"lang": "ALGOL 60", "loc": 1, "block": "<pre><b>begin</b>\n   <b>integer</b> i;\n   <b>real procedure</b> sum (i, lo, hi, term);\n      <b>value</b> lo, hi;\n      <b>integer</b> i, lo, hi;\n      <b>real</b> term;\n      <b>comment</b> term is passed by-name, and so is i;\n   <b>begin</b>\n      <b>real</b> temp;\n      temp\u00a0:= 0;\n      <b>for</b> i\u00a0:= lo <b>step</b> 1 <b>until</b> hi <b>do</b>\n         temp\u00a0:= temp + term;\n      sum\u00a0:= temp\n   <b>end</b>;\n   <b>comment</b> note the correspondence between the mathematical notation and the call to sum;\n   print (sum (i, 1, 100, 1/i))\n<b>end</b>\n</pre>"}, {"lang": "ALGOL 68", "loc": 16, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw2\">BEGIN</span><br/>   <span class=\"kw3\">INT</span> i<span class=\"sy1\">;</span><br/>   <span class=\"kw4\">PROC</span> sum  <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> <span class=\"kw3\">INT</span> i<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span> lo<span class=\"sy1\">,</span> hi<span class=\"sy1\">,</span> <span class=\"kw4\">PROC</span> <span class=\"kw3\">REAL</span> <span class=\"kw22\">term</span><span class=\"br0\">)</span><span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/>      <span class=\"co1\">COMMENT term is passed by-name, and so is i COMMENT</span><br/>   <span class=\"kw2\">BEGIN</span><br/>      <span class=\"kw3\">REAL</span> temp <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>      i <span class=\"sy1\">:=</span> lo<span class=\"sy1\">;</span><br/>      <span class=\"kw2\">WHILE</span> i <span class=\"sy1\">&lt;=</span> hi <span class=\"kw2\">DO</span>           <span class=\"coMULTI\"># ALGOL 68 has a \"for\" loop but it creates a distinct #</span><br/>         temp <span class=\"sy1\">+:=</span> <span class=\"kw22\">term</span><span class=\"sy1\">;</span>          <span class=\"coMULTI\"># variable which would not be shared with the passed \"i\" #</span><br/>         i <span class=\"sy1\">+:=</span> 1                 <span class=\"coMULTI\"># Here the actual passed \"i\" is incremented. #</span><br/>      <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>      temp<br/>   <span class=\"kw2\">END</span><span class=\"sy1\">;</span><br/>   <span class=\"co1\">COMMENT note the correspondence between the mathematical notation and the call to sum COMMENT</span><br/>   <span class=\"kw22\">print</span> <span class=\"br0\">(</span>sum <span class=\"br0\">(</span>i<span class=\"sy1\">,</span> 1<span class=\"sy1\">,</span> 100<span class=\"sy1\">,</span> <span class=\"kw3\">REAL</span><span class=\"sy1\">:</span> 1<span class=\"sy1\">/</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">END</span></pre>"}, {"lang": "AppleScript", "loc": 17, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">set</span> i <span class=\"kw3\">to</span> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw3\">on</span> jsum<span class=\"br0\">(</span>i, lo, hi, term<span class=\"br0\">)</span><br/>\t<span class=\"kw3\">set</span> <span class=\"br0\">{</span>temp, i<span class=\"co2\">'</span>s <span class=\"kw1\">contents</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>, lo<span class=\"br0\">}</span><br/>\t<span class=\"kw3\">repeat</span> <span class=\"kw3\">while</span> i<span class=\"co2\">'</span>s <span class=\"kw1\">contents</span> \u2264 hi<br/>\t\t<span class=\"kw3\">set</span> <span class=\"br0\">{</span>temp, i<span class=\"co2\">'</span>s <span class=\"kw1\">contents</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span>temp <span class=\"sy0\">+</span> <span class=\"br0\">(</span>term<span class=\"co2\">'</span>s f<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span>i<span class=\"co2\">'</span>s <span class=\"kw1\">contents</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span><br/>\t<span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>\t<span class=\"kw3\">return</span> temp<br/><span class=\"kw3\">end</span> jsum<br/>\u00a0<br/><span class=\"kw3\">script</span> term_func<br/>\t<span class=\"kw3\">on</span> f<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>\t\t<span class=\"kw3\">return</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> i<br/>\t<span class=\"kw3\">end</span> f<br/><span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>\u00a0<br/><span class=\"kw3\">return</span> jsum<span class=\"br0\">(</span>a reference <span class=\"kw3\">to</span> i, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, term_func<span class=\"br0\">)</span></pre>"}, {"lang": "BBC BASIC", "loc": 11, "block": "<pre class=\"text highlighted_source\">      PRINT FNsum(j, 1, 100, FNreciprocal)<br/>      END<br/>\u00a0<br/>      DEF FNsum(RETURN i, lo, hi, RETURN func)<br/>      LOCAL temp<br/>      FOR i = lo TO hi<br/>        temp += FN(^func)<br/>      NEXT<br/>      = temp<br/>\u00a0<br/>      DEF FNreciprocal = 1/i</pre>"}, {"lang": "Bracmat", "loc": 14, "block": "<pre class=\"text highlighted_source\">( ( sum<br/>  =   I lo hi Term temp<br/>    .  \u00a0!arg:((=?I),?lo,?hi,(=?Term))<br/>      &amp; 0:?temp<br/>      &amp;\u00a0!lo:?!I<br/>      &amp;   whl<br/>        ' (\u00a0!!I:~&gt;!hi<br/>          &amp;\u00a0!temp+!Term:?temp<br/>          &amp; 1+!!I:?!I<br/>          )<br/>      &amp;\u00a0!temp<br/>  )<br/>&amp; sum$((=i),1,100,(=!i^-1))<br/>);</pre>"}, {"lang": "C", "loc": 16, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/><span class=\"kw4\">double</span> sum<span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span>i<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> lo<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> hi<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>term<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> temp <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>i <span class=\"sy0\">=</span> lo<span class=\"sy0\">;</span> <span class=\"sy0\">*</span>i <span class=\"sy0\">&lt;=</span> hi<span class=\"sy0\">;</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>i<span class=\"br0\">)</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        temp <span class=\"sy0\">+=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> temp<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> term_func<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"nu16\">1.0</span> <span class=\"sy0\">/</span> i<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%f<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> sum<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> term_func<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 16, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> i<span class=\"sy4\">;</span><br/><span class=\"kw4\">double</span> sum<span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy3\">&amp;</span>i, <span class=\"kw4\">int</span> lo, <span class=\"kw4\">int</span> hi, <span class=\"kw4\">double</span> <span class=\"br0\">(</span><span class=\"sy2\">*</span>term<span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> temp <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy1\">=</span> lo<span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;=</span> hi<span class=\"sy4\">;</span> i<span class=\"sy2\">++</span><span class=\"br0\">)</span><br/>        temp <span class=\"sy2\">+</span><span class=\"sy1\">=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> temp<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> term_func<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"nu16\">1.0</span> <span class=\"sy2\">/</span> i<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> sum<span class=\"br0\">(</span>i, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, term_func<span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 20, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> JensensDevice<br/><span class=\"br0\">{</span>    <br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> Sum<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> lo, <span class=\"kw4\">int</span> hi, Func<span class=\"sy0\">&lt;</span><span class=\"kw4\">double</span><span class=\"sy0\">&gt;</span> term<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">double</span> temp <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> lo<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> hi<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            temp <span class=\"sy0\">+=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> temp<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Sum<span class=\"br0\">(</span><span class=\"kw1\">ref</span> i, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clipper", "loc": 21, "block": "<pre class=\"text highlighted_source\">// Jensen's device in Clipper (or Harbour)<br/>//    A fairly direct translation of the Algol 60<br/>// John M Skelton 11-Feb-2012<br/>\u00a0<br/>function main()<br/>local i<br/>? transform(sum(@i, 1, 100, {|| 1 / i}), \"##.###############\")<br/>   // @ is the quite rarely used pass by ref, {|| ...} is a<br/>   // code block (an anonymous function, here without arguments)<br/>   // The @i makes it clear that something unusual is occurring;<br/>   // a called function which modifies a parameter is commonly<br/>   // poor design!<br/>return 0<br/>\u00a0<br/>function sum(i, lo, hi, bFunc)<br/>local temp\u00a0:= 0<br/>for i = lo to hi<br/>   temp += eval(bFunc)<br/>next i<br/>return temp<br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 7, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>declaim <span class=\"br0\">(</span>inline <span class=\"sy0\">%</span>sum<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> <span class=\"sy0\">%</span>sum <span class=\"br0\">(</span>lo hi func<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for i from lo to hi sum <span class=\"br0\">(</span><span class=\"kw1\">funcall</span> func i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defmacro</span> sum <span class=\"br0\">(</span>i lo hi term<span class=\"br0\">)</span><br/>  `<span class=\"br0\">(</span><span class=\"sy0\">%</span>sum <span class=\"sy0\">,</span>lo <span class=\"sy0\">,</span>hi <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"sy0\">,</span>i<span class=\"br0\">)</span> <span class=\"sy0\">,</span>term<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 14, "block": "<pre class=\"d highlighted_source\"><span class=\"kw4\">double</span> sum<span class=\"br0\">(</span><span class=\"kw2\">ref</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">int</span> lo<span class=\"sy0\">,</span> <span class=\"kw2\">in</span> <span class=\"kw4\">int</span> hi<span class=\"sy0\">,</span> <span class=\"kw2\">lazy</span> <span class=\"kw4\">double</span> term<span class=\"br0\">)</span><br/><span class=\"kw4\">pure</span> @<span class=\"kw4\">safe</span> <span class=\"coMULTI\">/*nothrow @nogc*/</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> result <span class=\"sy0\">=</span> <span class=\"nu16\">0.0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> lo<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> hi<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>        result <span class=\"sy0\">+=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>    sum<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu16\">1.0</span><span class=\"sy0\">/</span>i<span class=\"br0\">)</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "DWScript", "loc": 12, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">function</span> <span class=\"kw3\">sum</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span> lo<span class=\"sy1\">,</span> hi <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span> lazy term <span class=\"sy1\">:</span> Float<span class=\"br0\">)</span> <span class=\"sy1\">:</span> Float<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   i<span class=\"sy1\">:</span><span class=\"sy3\">=</span>lo<span class=\"sy1\">;</span><br/>   <span class=\"kw1\">while</span> i&lt;<span class=\"sy3\">=</span>hi <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>      Result <span class=\"sy3\">+=</span> term<span class=\"sy1\">;</span><br/>      <span class=\"kw3\">Inc</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> i <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/>PrintLn<span class=\"br0\">(</span><span class=\"kw3\">sum</span><span class=\"br0\">(</span>i<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"nu0\">1.0</span><span class=\"sy3\">/</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span></pre>"}, {"lang": "E", "loc": 14, "block": "<pre class=\"e highlighted_source\">pragma.<span class=\"me1\">enable</span><span class=\"br0\">(</span><span class=\"st0\">\"one-method-object\"</span><span class=\"br0\">)</span> <span class=\"co1\"># \"def _.get\" is experimental shorthand</span><br/><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> sum<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>i<span class=\"sy0\">,</span> lo<span class=\"sy0\">,</span> hi<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>term<span class=\"br0\">)</span> <span class=\"br0\">{</span>   <span class=\"co1\"># bind i and term to passed slots</span><br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> temp <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><br/>    i <span class=\"sy0\">:=</span> lo<br/>    <a href=\"http://wiki.erights.org/wiki/while\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> hi<span class=\"br0\">)</span> <span class=\"br0\">{</span>          <span class=\"co1\"># E has numeric-range iteration but it creates a distinct</span><br/>        temp <span class=\"sy0\">+=</span> term           <span class=\"co1\"># variable which would not be shared with the passed i</span><br/>        i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    return temp<br/><span class=\"br0\">}</span><br/><span class=\"br0\">{</span> <br/>    <a href=\"http://wiki.erights.org/wiki/var\"><span class=\"kw4\">var</span></a> i <span class=\"sy0\">:=</span> <a href=\"http://wiki.erights.org/wiki/null\"><span class=\"kw6\">null</span></a><br/>    sum<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> _.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> return <span class=\"nu0\">1</span><span class=\"sy0\">/</span>i <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elixir", "loc": 11, "block": "<pre class=\"text highlighted_source\">defmodule JensenDevice do<br/>  def task, do: sum( 1, 100, fn i -&gt; 1 / i end )<br/>\u00a0<br/>  defp sum( i, high, _term ) when i &gt; high, do: 0<br/>  defp sum( i, high, term ) do<br/>    temp = term.( i )<br/>    temp + sum( i + 1, high, term )<br/>  end<br/>end<br/>\u00a0<br/>IO.puts JensenDevice.task</pre>"}, {"lang": "Erlang", "loc": 13, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> jensens_device <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"re3\">sum</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"re5\">I</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">1</span> <span class=\"sy3\">/</span> <span class=\"re5\">I</span> <span class=\"kw1\">end</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">sum</span><span class=\"br0\">(</span> <span class=\"re5\">I</span><span class=\"sy1\">,</span> <span class=\"re5\">High</span><span class=\"sy1\">,</span> <span class=\"re5\">_Term</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">I</span> <span class=\"sy3\">&gt;</span> <span class=\"re5\">High</span> <span class=\"sy1\">-&gt;</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/><span class=\"re3\">sum</span><span class=\"br0\">(</span> <span class=\"re5\">I</span><span class=\"sy1\">,</span> <span class=\"re5\">High</span><span class=\"sy1\">,</span> <span class=\"re5\">Term</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"re5\">Temp</span> <span class=\"sy3\">=</span> <span class=\"re5\">T</span><span class=\"re3\">erm</span><span class=\"br0\">(</span> <span class=\"re5\">I</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>    <span class=\"re5\">Temp</span> <span class=\"sy3\">+</span> <span class=\"re3\">sum</span><span class=\"br0\">(</span> <span class=\"re5\">I</span> <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">High</span><span class=\"sy1\">,</span> <span class=\"re5\">Term</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 2, "block": "<pre class=\"text highlighted_source\">: sum 0 s&gt;f 1+ swap\u00a0?do i over execute f+ loop drop\u00a0;<br/>:noname s&gt;f 1 s&gt;f fswap f/\u00a0; 1 100 sum f.</pre>"}, {"lang": "Fortran", "loc": 8, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw1\">FUNCTION</span> SUM<span class=\"br0\">(</span>I,LO,HI,TERM<span class=\"br0\">)</span><br/>        SUM <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">DO</span> I <span class=\"sy0\">=</span> LO,HI<br/>          SUM <span class=\"sy0\">=</span> SUM <span class=\"sy0\">+</span> TERM<br/>        <span class=\"kw1\">END</span> <span class=\"kw1\">DO</span><br/>      <span class=\"kw1\">END</span> <span class=\"kw1\">FUNCTION</span> SUM<br/>      WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> SUM<span class=\"br0\">(</span>I,<span class=\"nu0\">1</span>,<span class=\"nu0\">100</span>,<span class=\"nu0\">1.0</span><span class=\"sy0\">/</span>I<span class=\"br0\">)</span><br/>      <span class=\"kw1\">END</span></pre>"}, {"lang": "Go", "loc": 17, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw1\">var</span> <span class=\"nu2\">i</span> <span class=\"kw4\">int</span><br/>\u00a0<br/><span class=\"kw4\">func</span> sum<span class=\"sy1\">(</span><span class=\"nu2\">i</span> <span class=\"sy3\">*</span><span class=\"kw4\">int</span><span class=\"sy1\">,</span> lo<span class=\"sy1\">,</span> hi <span class=\"kw4\">int</span><span class=\"sy1\">,</span> term <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">float64</span><span class=\"sy1\">)</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span><br/>    temp <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> <span class=\"sy3\">*</span><span class=\"nu2\">i</span> <span class=\"sy2\">=</span> lo<span class=\"sy1\">;</span> <span class=\"sy3\">*</span><span class=\"nu2\">i</span> &lt;<span class=\"sy2\">=</span> hi<span class=\"sy1\">;</span> <span class=\"sy1\">(</span><span class=\"sy3\">*</span><span class=\"nu2\">i</span><span class=\"sy1\">)</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        temp <span class=\"sy2\">+=</span> term<span class=\"sy1\">()</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> temp<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"%f<span class=\"es1\">\\n</span>\"</span><span class=\"sy1\">,</span> sum<span class=\"sy1\">(</span>&amp;<span class=\"nu2\">i</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"kw4\">float64</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span> <span class=\"sy3\">/</span> <span class=\"kw4\">float64</span><span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">)</span> <span class=\"sy1\">}))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 5, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> sum <span class=\"sy0\">=</span> <span class=\"br0\">{</span> i, lo, hi, term <span class=\"sy0\">-&gt;</span><br/>    <span class=\"br0\">(</span>lo..<span class=\"me1\">hi</span><span class=\"br0\">)</span>.<span class=\"me1\">sum</span> <span class=\"br0\">{</span> i.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> it<span class=\"sy0\">;</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> obj <span class=\"sy0\">=</span> <span class=\"br0\">[</span>:<span class=\"br0\">]</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"br0\">(</span>sum<span class=\"br0\">(</span>obj, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"br0\">{</span> <span class=\"nu0\">1</span> / obj.<span class=\"me1\">value</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 13, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><span class=\"sy0\">.</span>ST<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>STRef<br/>\u00a0<br/><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a><span class=\"st0\">' ref_i lo hi term =<br/>  return sum `ap`<br/>         mapM (<span class=\"es0\">\\i</span> -&gt; writeSTRef ref_i i &gt;&gt; term) [lo..hi]<br/>\u00a0<br/>foo = runST $ do<br/>        i &lt;- newSTRef undefined -- initial value doesn'</span>t matter<br/>        <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a><span class=\"st0\">' i 1 100 $ return recip `ap` readSTRef i<br/>\u00a0<br/>main = print foo</span></pre>"}, {"lang": "Icon and Unicon", "loc": 13, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">record</span> mutable<span class=\"br0\">(</span>value<span class=\"br0\">)</span>   <span class=\"co1\"># record wrapper to provide mutable access to immutable types</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    A <span class=\"sy1\">:=</span> mutable<span class=\"br0\">(</span><span class=\"br0\">)</span>      <br/>    <span class=\"kw4\">write</span><span class=\"br0\">(</span> sum<span class=\"br0\">(</span>A<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><span class=\"sy1\">,</span> <span class=\"kw1\">create</span> <span class=\"nu0\">1.0</span><span class=\"sy1\">/</span>A<span class=\"sy1\">.</span><span class=\"me1\">value</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> sum<span class=\"br0\">(</span>A<span class=\"sy1\">,</span> lo<span class=\"sy1\">,</span> hi<span class=\"sy1\">,</span> term<span class=\"br0\">)</span><br/>    temp <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">every</span> A<span class=\"sy1\">.</span><span class=\"me1\">value</span> <span class=\"sy1\">:=</span> lo <span class=\"kw1\">to</span> hi <span class=\"kw1\">do</span><br/>        temp <span class=\"sy1\">+:=</span> <span class=\"sy1\">@^</span>term<br/>    <span class=\"kw1\">return</span> temp<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 8, "block": "<pre class=\"j highlighted_source\">jensen=: monad define<br/>  <span class=\"st_h\">'name lo hi expression'</span>=. <span class=\"kw2\">y</span><br/>  temp=. <span class=\"nu0\">0</span><br/>  <span class=\"re0\">for_n.</span> lo+i.<span class=\"nu0\">1</span>+hi-lo <span class=\"kw1\">do.</span><br/>    <span class=\"sy0\">(</span>name<span class=\"sy0\">)</span>=. <span class=\"kw2\">n</span><br/>    temp=. temp + \".expression<br/>  <span class=\"kw1\">end.</span><br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 13, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.function.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.stream.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> Jensen <span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">double</span> sum<span class=\"br0\">(</span><span class=\"kw4\">int</span> lo, <span class=\"kw4\">int</span> hi, IntToDoubleFunction f<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> IntStream.<span class=\"me1\">rangeClosed</span><span class=\"br0\">(</span>lo, hi<span class=\"br0\">)</span>.<span class=\"me1\">mapToDouble</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span>.<span class=\"me1\">sum</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>sum<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"br0\">(</span>i <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1.0</span><span class=\"sy0\">/</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "JavaScript", "loc": 11, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> obj<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> sum<span class=\"br0\">(</span>o<span class=\"sy0\">,</span> lo<span class=\"sy0\">,</span> hi<span class=\"sy0\">,</span> term<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> tmp <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>o.<span class=\"me1\">val</span> <span class=\"sy0\">=</span> lo<span class=\"sy0\">;</span> o.<span class=\"me1\">val</span> <span class=\"sy0\">&lt;=</span> hi<span class=\"sy0\">;</span> o.<span class=\"me1\">val</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>    tmp <span class=\"sy0\">+=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> tmp<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>obj <span class=\"sy0\">=</span> <span class=\"br0\">{</span>val<span class=\"sy0\">:</span> <span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>alert<span class=\"br0\">(</span>sum<span class=\"br0\">(</span>obj<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw1\">return</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> obj.<span class=\"me1\">val</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Joy", "loc": 1, "block": "<pre class=\"text highlighted_source\">100 [0] [[1.0 swap /] dip +] primrec.</pre>"}, {"lang": "jq", "loc": 5, "block": "<pre class=\"text highlighted_source\">def sum(lo; hi; term):<br/>  reduce range(lo; hi+1) as $i (0; . + ($i|term));<br/>\u00a0<br/># The task:<br/>sum(1;100;1/.)</pre>"}, {"lang": "Julia", "loc": 14, "block": "<pre class=\"text highlighted_source\">macro sum(i, loname, hiname, term)<br/>    return quote<br/>        lo = $loname<br/>        hi = $hiname<br/>        tmp = 0.0<br/>        for i in lo:hi<br/>            tmp += $term<br/>        end<br/>        return tmp<br/>    end<br/>end<br/>\u00a0<br/>i = 0<br/>@sum(i, 1, 100, 1.0 / i)</pre>"}, {"lang": "Kotlin", "loc": 3, "block": "<pre class=\"scala highlighted_source\">fun sum<span class=\"br0\">(</span>lo<span class=\"sy0\">:</span> Int, hi<span class=\"sy0\">:</span> Int, f<span class=\"sy0\">:</span> <span class=\"br0\">(</span>Int<span class=\"br0\">)</span> -<span class=\"sy0\">&gt;</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>lo..<span class=\"me1\">hi</span><span class=\"br0\">)</span>.<span class=\"me1\">sumByDouble</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> println<span class=\"br0\">(</span>sum<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"br0\">{</span> <span class=\"nu0\">1.0</span> / it <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Lua", "loc": 10, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> sum<span class=\"br0\">(</span>var<span class=\"sy0\">,</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> str<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> ret <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> a<span class=\"sy0\">,</span> b <span class=\"kw1\">do</span><br/>    ret <span class=\"sy0\">=</span> ret <span class=\"sy0\">+</span> <span class=\"kw3\">setfenv</span><span class=\"br0\">(</span><span class=\"kw3\">loadstring</span><span class=\"br0\">(</span><span class=\"st0\">\"return \"</span><span class=\"sy0\">..</span>str<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>var<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">return</span> ret<br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span>sum<span class=\"br0\">(</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"st0\">\"1/i\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "M4", "loc": 8, "block": "<pre class=\"text highlighted_source\">define(`for',<br/>   `ifelse($#,0,``$0'',<br/>   `ifelse(eval($2&lt;=$3),1,<br/>   `pushdef(`$1',$2)$4`'popdef(`$1')$0(`$1',incr($2),$3,`$4')')')')<br/>define(`sum',<br/>   `pushdef(`temp',0)`'for(`$1',$2,$3,<br/>      `define(`temp',eval(temp+$4))')`'temp`'popdef(`temp')')<br/>sum(`i',1,100,`1000/i')</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 4, "block": "<pre class=\"text highlighted_source\">sum[term_, i_, lo_, hi_]\u00a0:= Block[{temp = 0},<br/>   \t\t\t\tDo[temp = temp + term, {i, lo, hi}];<br/>   \t\t\t\ttemp];<br/>SetAttributes[sum, HoldFirst];</pre>"}, {"lang": "Maxima", "loc": 15, "block": "<pre class=\"text highlighted_source\">mysum(e, v, lo, hi)\u00a0:= block([s: 0], for i from lo thru hi do s: s + subst(v=i, e), s)$<br/>\u00a0<br/>mysum(1/n, n, 1, 10);<br/>7381/2520<br/>\u00a0<br/>/* compare with builtin sum */<br/>sum(1/n, n, 1, 10);<br/>7381/2520<br/>\u00a0<br/>/* what if n is assigned a value\u00a0? */<br/>n: 200$<br/>\u00a0<br/>/* still works */<br/>mysum(1/n, n, 1, 10);<br/>7381/2520</pre>"}, {"lang": "NetRexx", "loc": 39, "block": "<pre class=\"netrexx highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> COM.<span class=\"me0\">ibm</span>.<span class=\"me0\">netrexx</span>.<span class=\"me0\">process</span>.<br/>\u00a0<br/><span class=\"kw1\">class</span> JensensDevice<br/>\u00a0<br/>  <span class=\"kw1\">properties</span> <span class=\"kw2\">static</span><br/>  interpreter=NetRexxA<br/>  exp=Rexx <span class=\"st0\">\"\"</span>    <br/>  termMethod=Method<br/>\u00a0<br/>  method main<span class=\"br0\">(</span>x=String<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw2\">static</span><br/>    <span class=\"kw1\">say</span> sum<span class=\"br0\">(</span><span class=\"st0\">'i'</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">100</span>,<span class=\"st0\">'1/i'</span><span class=\"br0\">)</span><br/>\u00a0<br/>  method sum<span class=\"br0\">(</span>i,lo,hi,term<span class=\"br0\">)</span> <span class=\"kw2\">static</span> <span class=\"kw2\">SIGNALS</span> IOException,NoSuchMethodException,IllegalAccessException,InvocationTargetException<br/>    sum=<span class=\"nu0\">0</span><br/>    <span class=\"kw1\">loop</span> iv=lo to hi<br/>      sum=sum+termeval<span class=\"br0\">(</span>i,iv,term<span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span><br/>    <span class=\"kw1\">return</span> sum<br/>\u00a0<br/>  method termeval<span class=\"br0\">(</span>i,iv,e<span class=\"br0\">)</span> <span class=\"kw2\">static</span> <span class=\"kw2\">returns</span> Rexx <span class=\"kw2\">SIGNALS</span> IOException,NoSuchMethodException,IllegalAccessException,InvocationTargetException <br/>    <span class=\"kw1\">if</span> e<span class=\"sy0\">\\</span>=exp <span class=\"kw3\">then</span> interpreter=null<br/>    exp=e<br/>\u00a0<br/>    <span class=\"kw1\">if</span> interpreter=null <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>      termpgm=<span class=\"st0\">'method term('</span>i<span class=\"st0\">'=Rexx) static returns rexx;return'</span> e<br/>      fw=FileWriter<span class=\"br0\">(</span><span class=\"st0\">\"termpgm.nrx\"</span><span class=\"br0\">)</span><br/>      fw.<span class=\"me0\">write</span><span class=\"br0\">(</span>termpgm,<span class=\"nu0\">0</span>,termpgm.<span class=\"me0\">length</span><span class=\"br0\">)</span><br/>      fw.<span class=\"me0\">close</span><br/>      interpreter=NetRexxA<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      interpreter.<span class=\"kw1\">parse</span><span class=\"br0\">(</span><span class=\"br0\">[</span>String <span class=\"st0\">'termpgm.nrx'</span><span class=\"br0\">]</span>,<span class=\"br0\">[</span>String <span class=\"st0\">'nocrossref'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>      termClass=interpreter.<span class=\"me0\">getClassObject</span><span class=\"br0\">(</span>null,<span class=\"st0\">'termpgm'</span><span class=\"br0\">)</span><br/>      classes=<span class=\"br0\">[</span>interpreter.<span class=\"me0\">getClassObject</span><span class=\"br0\">(</span><span class=\"st0\">'netrexx.lang'</span>, <span class=\"st0\">'Rexx'</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>      termMethod=termClass.<span class=\"me0\">getMethod</span><span class=\"br0\">(</span><span class=\"st0\">'term'</span>, classes<span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> Rexx termMethod.<span class=\"me0\">invoke</span><span class=\"br0\">(</span>null,<span class=\"br0\">[</span>iv<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 9, "block": "<pre class=\"text highlighted_source\">var i: int<br/>\u00a0<br/>proc harmonicSum(i: var int, lo, hi, term): float =<br/>  i = lo<br/>  while i &lt;= hi:<br/>    result += term()<br/>    inc i<br/>\u00a0<br/>echo harmonicSum(i, 1, 100, proc: float = 1.0 / float(i))</pre>"}, {"lang": "Objeck", "loc": 25, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> Jensens <span class=\"br0\">{</span><br/>    i <span class=\"sy0\">:</span> <span class=\"kw1\">static</span> <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Sum<span class=\"br0\">(</span>lo <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">,</span> hi <span class=\"sy0\">:</span> <span class=\"kw2\">Int</span><span class=\"sy0\">,</span> term <span class=\"sy0\">:</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span> <span class=\"br0\">{</span><br/>      temp <span class=\"sy0\">:=</span> <span class=\"nu0\">0.0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> lo<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> hi<span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        temp <span class=\"sy0\">+=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      <span class=\"kw1\">return</span> temp<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">return</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">/</span> i<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      Sum<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Float</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 13, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> i <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">42</span> <span class=\"co1\">(* initial value doesn't matter *)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> sum<span class=\"sy0\">'</span> i lo hi term <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> result <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span> <span class=\"kw1\">in</span><br/>    i <span class=\"sy0\">:=</span> lo<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">while</span> <span class=\"sy0\">!</span>i <span class=\"sy0\">&lt;=</span> hi <span class=\"kw1\">do</span><br/>      result <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span>result <span class=\"sy0\">+.</span> term <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">incr</span> i<br/>    <span class=\"kw1\">done</span><span class=\"sy0\">;</span><br/>    <span class=\"sy0\">!</span>result<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"%f\\n\"</span> <span class=\"br0\">(</span>sum<span class=\"sy0\">'</span> i <span class=\"nu0\">1</span> <span class=\"nu0\">100</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"sy0\">/.</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"sy0\">!</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Oforth", "loc": 1, "block": "<pre class=\"text highlighted_source\">: mysum(lo, hi, term)  | i | 0 lo hi for: i [ i term perform + ]\u00a0;</pre>"}, {"lang": "Oz", "loc": 14, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">Sum</span> I Lo Hi Term<span class=\"br0\">}</span><br/>     Temp = <span class=\"br0\">{</span>NewCell 0<span class=\"sy0\">.</span>0<span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     I <span class=\"sy0\">:=</span> Lo<br/>     <span class=\"kw1\">for</span> while:<span class=\"sy0\">@</span>I <span class=\"sy0\">=&lt;</span> Hi <span class=\"kw1\">do</span><br/>        Temp <span class=\"sy0\">:=</span> <span class=\"sy0\">@</span>Temp <span class=\"sy0\">+</span> <span class=\"br0\">{</span>Term<span class=\"br0\">}</span><br/>        I <span class=\"sy0\">:=</span> <span class=\"sy0\">@</span>I <span class=\"sy0\">+</span> 1<br/>     <span class=\"kw1\">end</span><br/>     <span class=\"sy0\">@</span>Temp<br/>  <span class=\"kw1\">end</span><br/>  I = <span class=\"br0\">{</span>NewCell <span class=\"kw1\">unit</span><span class=\"br0\">}</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Sum I 1 100 <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span><span class=\"br0\">}</span> 1<span class=\"sy0\">.</span>0 <span class=\"sy0\">/</span> <span class=\"br0\">{</span>Int<span class=\"sy0\">.</span>toFloat <span class=\"sy0\">@</span>I<span class=\"br0\">}</span> <span class=\"kw1\">end</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 28, "block": "<pre class=\"pascal highlighted_source\"><span class=\"co2\">{$MODE objFPC}</span><br/><span class=\"kw1\">type</span><br/>  tTerm <span class=\"sy3\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">real</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> term<span class=\"br0\">(</span>i<span class=\"sy1\">:</span><span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">real</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  term <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy3\">/</span>i<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> sum<span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy1\">:</span> <span class=\"kw4\">LongInt</span><span class=\"sy1\">;</span><br/>              lo<span class=\"sy1\">,</span>hi<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>              term<span class=\"sy1\">:</span>tTerm<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">real</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Begin</span><br/>  result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> lo<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">while</span> i&lt;<span class=\"sy3\">=</span>hi <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>    result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> result<span class=\"sy3\">+</span>term<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    inc<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span>     <br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  i <span class=\"sy1\">:</span> <span class=\"kw4\">LongInt</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>sum<span class=\"br0\">(</span>i<span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">100</span><span class=\"sy1\">,</span><span class=\"sy2\">@</span>term<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Pascal", "loc": 28, "block": "<pre class=\"pascal highlighted_source\"><span class=\"co2\">{$MODE objFPC}</span><br/><span class=\"kw1\">type</span><br/>  tTerm <span class=\"sy3\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">real</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> term<span class=\"br0\">(</span>i<span class=\"sy1\">:</span><span class=\"kw4\">integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">real</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  term <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy3\">/</span>i<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> sum<span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy1\">:</span> <span class=\"kw4\">LongInt</span><span class=\"sy1\">;</span><br/>              lo<span class=\"sy1\">,</span>hi<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>              term<span class=\"sy1\">:</span>tTerm<span class=\"br0\">)</span><span class=\"sy1\">:</span><span class=\"kw4\">real</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">Begin</span><br/>  result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> lo<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">while</span> i&lt;<span class=\"sy3\">=</span>hi <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>    result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> result<span class=\"sy3\">+</span>term<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    inc<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span>     <br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  i <span class=\"sy1\">:</span> <span class=\"kw4\">LongInt</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">Begin</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>sum<span class=\"br0\">(</span>i<span class=\"sy1\">,</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">100</span><span class=\"sy1\">,</span><span class=\"sy2\">@</span>term<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 11, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">sub</span> sum <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$lo</span><span class=\"sy0\">,</span> <span class=\"re0\">$hi</span><span class=\"sy0\">,</span> <span class=\"re0\">$term</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span> <br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$temp</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$lo</span><span class=\"sy0\">;</span> <span class=\"re0\">$$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$hi</span><span class=\"sy0\">;</span> <span class=\"re0\">$$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$temp</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$term</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$temp</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> sum<span class=\"br0\">(</span><span class=\"re0\">\\$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> <span class=\"re0\">$i</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 10, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> sum<span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"kw1\">is</span> rw<span class=\"sy0\">,</span> <span class=\"re0\">$lo</span><span class=\"sy0\">,</span> <span class=\"re0\">$hi</span><span class=\"sy0\">,</span> <span class=\"re0\">&amp;term</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$temp</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">loop</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$lo</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$hi</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$temp</span> <span class=\"sy0\">+=</span> term<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$temp</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> sum <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> <span class=\"re0\">$i</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 11, "block": "<pre class=\"text highlighted_source\">function sumr(integer lo, hi, rid)<br/>    atom res = 0<br/>    for i=lo to hi do<br/>        res += call_func(rid,{i})<br/>    end for<br/>    return res<br/>end function<br/>\u00a0<br/>function reciprocal(atom i) return 1/i end function<br/>\u00a0<br/>?sumr(1, 100, routine_id(\"reciprocal\"))</pre>"}, {"lang": "PHP", "loc": 25, "block": "<pre class=\"php highlighted_source\"><span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">function</span> sum <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$lo</span><span class=\"sy0\">,</span> <span class=\"re0\">$hi</span><span class=\"sy0\">,</span> <span class=\"re0\">$term</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$temp</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$lo</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$hi</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$temp</span> <span class=\"sy0\">+=</span> <span class=\"re0\">$term</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$temp</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">echo</span> sum<span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <a href=\"http://www.php.net/create_function\"><span class=\"kw3\">create_function</span></a><span class=\"br0\">(</span><span class=\"st_h\">''</span><span class=\"sy0\">,</span> <span class=\"st_h\">'global $i; return 1 / $i;'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"co1\">//Output: 5.18737751764 (5.1873775176396)</span><br/>\u00a0<br/><span class=\"kw2\">function</span> sum <span class=\"br0\">(</span><span class=\"re0\">$lo</span><span class=\"sy0\">,</span><span class=\"re0\">$hi</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/> <span class=\"re0\">$temp</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"re0\">$lo</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$hi</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><br/> <span class=\"br0\">{</span><br/>  <span class=\"re0\">$temp</span> <span class=\"sy0\">+=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">/</span> <span class=\"re0\">$i</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"br0\">}</span><br/> <span class=\"kw1\">return</span> <span class=\"re0\">$temp</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">echo</span> sum<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">//Output: 5.1873775176396</span><br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 14, "block": "<pre class=\"text highlighted_source\">(scl 6)<br/>\u00a0<br/>(de jensen (I Lo Hi Term)<br/>   (let Temp 0<br/>      (set I Lo)<br/>      (while (&gt;= Hi (val I))<br/>         (inc 'Temp (Term))<br/>         (inc I) )<br/>      Temp ) )<br/>\u00a0<br/>(let I (box)  # Create indirect reference<br/>   (format<br/>      (jensen I 1 100 '(() (*/ 1.0 (val I))))<br/>      *Scl ) )</pre>"}, {"lang": "PureBasic", "loc": 17, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Prototype</span>.d func<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">Global</span> i<br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.d Sum<span class=\"br0\">(</span><span class=\"sy0\">*</span>i.Integer, lo, hi, <span class=\"sy0\">*</span>term.func<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> Temp.d<br/>  <span class=\"kw1\">For</span> i<span class=\"sy0\">=</span>lo <span class=\"kw1\">To</span> hi<br/>    temp <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>term<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">ProcedureReturn</span> Temp<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.d term_func<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span>i<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>Answer.d <span class=\"sy0\">=</span> Sum<span class=\"br0\">(</span>@i, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, @term_func<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 18, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">class</span> Ref<span class=\"br0\">(</span><span class=\"kw2\">object</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> value<span class=\"sy0\">=</span><span class=\"kw2\">None</span><span class=\"br0\">)</span>:<br/>        <span class=\"kw2\">self</span>.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> value<br/>\u00a0<br/><span class=\"kw1\">def</span> harmonic_sum<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> lo<span class=\"sy0\">,</span> hi<span class=\"sy0\">,</span> term<span class=\"br0\">)</span>:<br/>    <span class=\"co1\"># term is passed by-name, and so is i</span><br/>    temp <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    i.<span class=\"me1\">value</span> <span class=\"sy0\">=</span> lo<br/>    <span class=\"kw1\">while</span> i.<span class=\"me1\">value</span> <span class=\"sy0\">&lt;=</span> hi:  <span class=\"co1\"># Python \"for\" loop creates a distinct which</span><br/>        temp +<span class=\"sy0\">=</span> term<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\"># would not be shared with the passed \"i\"</span><br/>        i.<span class=\"me1\">value</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>   <span class=\"co1\"># Here the actual passed \"i\" is incremented.</span><br/>    <span class=\"kw1\">return</span> temp<br/>\u00a0<br/>i <span class=\"sy0\">=</span> Ref<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\"># note the correspondence between the mathematical notation and the</span><br/><span class=\"co1\"># call to sum it's almost as good as sum(1/i for i in range(1,101))</span><br/><span class=\"kw1\">print</span> harmonic_sum<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"kw1\">lambda</span>: <span class=\"nu0\">1.0</span>/i.<span class=\"me1\">value</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 15, "block": "<pre class=\"text highlighted_source\">sum &lt;- function(var, lo, hi, term)<br/>  eval(substitute({<br/>    .temp &lt;- 0;<br/>    for (var in lo:hi) {<br/>      .temp &lt;- .temp + term<br/>    }<br/>    .temp<br/>  }, as.list(match.call()[-1])),<br/>  enclos=parent.frame())<br/>\u00a0<br/>sum(i, 1, 100, 1/i) #prints 5.187378<br/>\u00a0<br/>##and because of enclos=parent.frame(), the term can involve variables in the caller's scope:<br/>x &lt;- -1<br/>sum(i, 1, 100, i^x) #5.187378</pre>"}, {"lang": "Racket", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang algol60<br/>begin<br/>   integer i;<br/>   real procedure sum (i, lo, hi, term);<br/>      value lo, hi;<br/>      integer i, lo, hi;<br/>      real term;<br/>      comment term is passed by-name, and so is i;<br/>   begin<br/>      real temp;<br/>      temp\u00a0:= 0;<br/>      for i\u00a0:= lo step 1 until hi do<br/>         temp\u00a0:= temp + term;<br/>      sum\u00a0:= temp<br/>   end;<br/>   comment note the correspondence between the mathematical notation and the call to sum;<br/>   printnln (sum (i, 1, 100, 1/i))<br/>end<br/>\u00a0</pre>"}, {"lang": "Rascal", "loc": 7, "block": "<pre class=\"text highlighted_source\">public num Jenssen(int lo, int hi, num (int i) term){<br/>\ttemp = 0;<br/>\twhile (lo &lt;= hi){<br/>\t\ttemp += term(lo);<br/>\t\tlo += 1;}<br/>\treturn temp;<br/>}</pre>"}, {"lang": "REXX", "loc": 15, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program demonstrates   Jensen's device   (via call subroutine, and args by name).*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> d <span class=\"sy0\">.</span>;   <span class=\"kw1\">if</span> d==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> d==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> d=<span class=\"nu0\">100</span>   <span class=\"coMULTI\">/*Not specified?  Then use the default.*/</span><br/><span class=\"kw1\">numeric</span> <span class=\"kw2\">digits</span> d                                 <span class=\"coMULTI\">/*use  D  decimal digits (9 is default)*/</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'using '</span>    d    <span class=\"st0\">\" decimal digits:\"</span>          <span class=\"coMULTI\">/*display what's being used for digits.*/</span><br/><span class=\"kw1\">say</span><br/><span class=\"kw1\">say</span> sum<span class=\"br0\">(</span> <span class=\"st0\">'i'</span>,   <span class=\"st0\">\"1\"</span>,   <span class=\"st0\">'100'</span>,   <span class=\"st0\">\"1/i\"</span> <span class=\"br0\">)</span>          <span class=\"coMULTI\">/*invoke  SUM  (100th harmonic number).*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>sum: <span class=\"kw1\">procedure</span>;   <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> j,start,finish,exp;              $=<span class=\"nu0\">0</span><br/>\u00a0<br/>     <span class=\"kw1\">interpret</span>   <span class=\"st0\">'do'</span>    j    <span class=\"st0\">\"=\"</span>   start   <span class=\"st0\">'to'</span>   finish<span class=\"st0\">\";   $=$+\"</span>    exp    <span class=\"st0\">';   end'</span><br/>            <span class=\"coMULTI\">/*   \u2500\u2500\u2500\u2500    \u2550    \u2500\u2500\u2500   \u2550\u2550\u2550\u2550\u2550   \u2500\u2500\u2500\u2500   \u2550\u2550\u2550\u2550\u2550\u2550\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500    \u2550\u2550\u2550    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 */</span><br/>            <span class=\"coMULTI\">/*    lit   var   lit    var     lit     var   literal     var     literal  */</span><br/>\u00a0<br/>     <span class=\"kw1\">return</span> $</pre>"}, {"lang": "Ring", "loc": 15, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Jensen's Device<br/>\u00a0<br/>decimals(14)<br/>i = 100<br/>see sum(i,1,100,\"1/n\") + nl<br/>\u00a0<br/>func sum(i,lo,hi,term)<br/>        temp = 0<br/>        for n = lo to hi step 1<br/>             eval(\"num = \" + term)<br/>             temp = temp + num<br/>        next<br/>        return temp<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 8, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">def</span> sum<span class=\"br0\">(</span>var, lo, hi, term, context<span class=\"br0\">)</span><br/>  sum = <span class=\"nu0\">0.0</span><br/>  lo.<span class=\"me1\">upto</span><span class=\"br0\">(</span>hi<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>n<span class=\"sy0\">|</span><br/>    sum <span class=\"sy0\">+</span>= <span class=\"kw3\">eval</span> <span class=\"st0\">\"#{var} = #{n}; #{term}\"</span>, context<br/>  <span class=\"kw1\">end</span><br/>  sum<br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">p</span> sum <span class=\"st0\">\"i\"</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"st0\">\"1.0 / i\"</span>, <span class=\"kw3\">binding</span>   <span class=\"co1\"># =&gt; 5.18737751763962</span></pre>"}, {"lang": "Scala", "loc": 12, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> MyInt <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> i<span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> <span class=\"sy0\">_</span> <span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> i <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> MyInt<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> sum<span class=\"br0\">(</span>i<span class=\"sy0\">:</span> MyInt, lo<span class=\"sy0\">:</span> Int, hi<span class=\"sy0\">:</span> Int, term<span class=\"sy0\">:</span> <span class=\"sy0\">=&gt;</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> temp <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>  i.<span class=\"me1\">i</span> <span class=\"sy0\">=</span> lo<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a><span class=\"br0\">(</span>i.<span class=\"me1\">i</span> <span class=\"sy0\">&lt;=</span> hi<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    temp <span class=\"sy0\">=</span> temp + term<br/>    i.<span class=\"me1\">i</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>  <span class=\"br0\">}</span><br/>  temp<br/><span class=\"br0\">}</span><br/>sum<span class=\"br0\">(</span>i, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"nu0\">1.0</span> / i.<span class=\"me1\">i</span><span class=\"br0\">)</span></pre>"}, {"lang": "Scheme", "loc": 11, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define-syntax</span> sum<br/>  <span class=\"br0\">(</span><span class=\"kw1\">syntax-rules</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>sum var low high . body<span class=\"br0\">)</span><br/>     <span class=\"br0\">(</span><span class=\"kw1\">let</span> loop <span class=\"br0\">(</span><span class=\"br0\">(</span>var low<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span>result <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> var high<span class=\"br0\">)</span><br/>           result<br/>           <span class=\"br0\">(</span>loop <span class=\"br0\">(</span><span class=\"sy0\">+</span> var <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span><span class=\"sy0\">+</span> result . body<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 21, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$ include \"seed7_05.s7i\";<br/>  include \"float.s7i\";<br/>\u00a0<br/>var integer: i is 0;<br/>\u00a0<br/>const func float: sum (inout integer: i, in integer: lo, in integer: hi,<br/>    ref func float: term) is func<br/>  result<br/>    var float: sum is 0.0<br/>  begin<br/>    for i range lo to hi do<br/>      sum +:= term;<br/>    end for;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>   writeln(sum(i, 1, 100, 1.0/flt(i)) digits 6);<br/>  end func;<br/>\u00a0</pre>"}, {"lang": "Sidef", "loc": 9, "block": "<pre class=\"ruby highlighted_source\">var i;<br/>func sum <span class=\"br0\">(</span>i, lo, hi, term<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var temp = <span class=\"nu0\">0</span>;<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>i = lo; <span class=\"sy0\">*</span>i <span class=\"sy0\">&lt;</span>= hi; <span class=\"br0\">(</span><span class=\"sy0\">*</span>i<span class=\"br0\">)</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        temp <span class=\"sy0\">+</span>= term.<span class=\"me1\">run</span>;<br/>    <span class=\"br0\">}</span>;<br/>    <span class=\"kw2\">return</span> temp;<br/><span class=\"br0\">}</span>;<br/>say sum<span class=\"br0\">(</span>\\i, <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span>, <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> i <span class=\"br0\">}</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Simula", "loc": 23, "block": "<pre class=\"text highlighted_source\">comment Jensen's Device;<br/>begin<br/>   integer i;<br/>   real procedure sum (i, lo, hi, term);<br/>      name i, term;<br/>      value lo, hi;<br/>      integer i, lo, hi;<br/>      real term;<br/>      comment term is passed by-name, and so is i;<br/>   begin<br/>      integer j;<br/>      real temp;<br/>      temp\u00a0:= 0;<br/>      for j\u00a0:= lo step 1 until hi do<br/>      begin<br/>         i\u00a0:= j;<br/>         temp\u00a0:= temp + term<br/>      end;<br/>      sum\u00a0:= temp<br/>   end;<br/>   comment note the correspondence between the mathematical notation and the call to sum;<br/>   outreal (sum (i, 1, 100, 1/i), 7, 14)<br/>end</pre>"}, {"lang": "Standard ML", "loc": 15, "block": "<pre class=\"text highlighted_source\">val i = ref 42 (* initial value doesn't matter *)<br/>\u00a0<br/>fun sum' (i, lo, hi, term) = let<br/>  val result = ref 0.0<br/>in<br/>  i\u00a0:= lo;<br/>  while\u00a0!i &lt;= hi do (<br/>    result\u00a0:=\u00a0!result + term ();<br/>    i\u00a0:=\u00a0!i + 1<br/>  );<br/> \u00a0!result<br/>end<br/>\u00a0<br/>val () =<br/>  print (Real.toString (sum' (i, 1, 100, fn () =&gt; 1.0 / real (!i))) ^ \"\\n\")</pre>"}, {"lang": "Swift", "loc": 11, "block": "<pre class=\"text highlighted_source\">var i = 42 // initial value doesn't matter<br/>\u00a0<br/>func sum(inout i: Int, lo: Int, hi: Int, @autoclosure term: () -&gt; Double) -&gt; Double {<br/>  var result = 0.0<br/>  for i = lo; i &lt;= hi; i++ {<br/>    result += term()<br/>  }<br/>  return result<br/>}<br/>\u00a0<br/>println(sum(&amp;i, 1, 100, 1 / Double(i)))</pre>"}, {"lang": "Tcl", "loc": 9, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> sum <span class=\"br0\">{</span>var lo hi term<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">upvar</span> <span class=\"nu0\">1</span> <span class=\"re0\">$var</span> x<br/>    <span class=\"kw1\">set</span> sum <span class=\"nu0\">0.0</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> x <span class=\"re0\">$lo</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">$hi</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> x<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> sum <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$sum</span> + <span class=\"br0\">[</span><span class=\"kw1\">uplevel</span> <span class=\"nu0\">1</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"kw1\">expr</span> <span class=\"re0\">$term</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$sum</span><br/><span class=\"br0\">}</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span>sum i <span class=\"nu0\">1</span> <span class=\"nu0\">100</span> <span class=\"br0\">{</span><span class=\"nu0\">1.0</span>/<span class=\"re0\">$i</span><span class=\"br0\">}</span><span class=\"br0\">]</span> <span class=\"sy0\">;</span><span class=\"co1\"># 5.177377517639621</span></pre>"}, {"lang": "zkl", "loc": 6, "block": "<pre class=\"text highlighted_source\">fcn sum(ri, lo,hi, term){<br/>   temp:=0.0; ri.set(lo);<br/>   do{ temp+=term(ri); } while(ri.inc()&lt;hi); // inc return previous value<br/>   return(temp);<br/>}<br/>sum(Ref(0), 1,100, fcn(ri){ 1.0/ri.value }).println();</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 13, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> DEF FN r<span class=\"br0\">(</span>x<span class=\"br0\">)</span>=<span class=\"nu0\">1</span>/x<br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> f$=<span class=\"st0\">\"FN r(i)\"</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> lo=<span class=\"nu0\">1</span>: <span class=\"kw1\">LET</span> hi=<span class=\"nu0\">100</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">GO</span> <span class=\"kw1\">SUB</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">PRINT</span> temp<br/><span class=\"nu0\">60</span> STOP <br/><span class=\"nu0\">1000</span> <span class=\"co3\">REM Evaluation</span><br/><span class=\"nu0\">1010</span> <span class=\"kw1\">LET</span> temp=<span class=\"nu0\">0</span><br/><span class=\"nu0\">1020</span> <span class=\"kw1\">FOR</span> i=lo <span class=\"kw1\">TO</span> hi<br/><span class=\"nu0\">1030</span> <span class=\"kw1\">LET</span> temp=temp+<span class=\"kw3\">VAL</span> f$<br/><span class=\"nu0\">1040</span> <span class=\"kw1\">NEXT</span> i<br/><span class=\"nu0\">1050</span> <span class=\"kw1\">RETURN</span> <br/>\u00a0</pre>"}]}