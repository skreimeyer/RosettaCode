{"task": "Superellipse", "blocks": [{"lang": "C", "loc": 29, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include&lt;graphics.h&gt;</span><br/><span class=\"co2\">#include&lt;stdio.h&gt;</span><br/><span class=\"co2\">#include&lt;math.h&gt;</span><br/>\u00a0<br/><span class=\"co2\">#define pi M_PI</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\u00a0<br/>\t<span class=\"kw4\">double</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>n<span class=\"sy0\">,</span>i<span class=\"sy0\">,</span>incr <span class=\"sy0\">=</span> <span class=\"nu16\">0.0001</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Enter major and minor axes of the SuperEllipse\u00a0: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/scanf.html\"><span class=\"kw3\">scanf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%lf%lf\"</span><span class=\"sy0\">,&amp;</span>a<span class=\"sy0\">,&amp;</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Enter n\u00a0: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/scanf.html\"><span class=\"kw3\">scanf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%lf\"</span><span class=\"sy0\">,&amp;</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tinitwindow<span class=\"br0\">(</span><span class=\"nu0\">500</span><span class=\"sy0\">,</span><span class=\"nu0\">500</span><span class=\"sy0\">,</span><span class=\"st0\">\"Superellipse\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>pi<span class=\"sy0\">;</span>i<span class=\"sy0\">+=</span>incr<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\tputpixel<span class=\"br0\">(</span><span class=\"nu0\">250</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">*</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fabs.html\"><span class=\"kw3\">fabs</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/cos.html\"><span class=\"kw3\">cos</span></a><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>pi<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">&lt;</span>i <span class=\"sy0\">&amp;&amp;</span> i<span class=\"sy0\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy0\">*</span>pi<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">?-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">250</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">*</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/pow.html\"><span class=\"kw3\">pow</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fabs.html\"><span class=\"kw3\">fabs</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/sin.html\"><span class=\"kw3\">sin</span></a><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>pi<span class=\"sy0\">&lt;</span>i <span class=\"sy0\">&amp;&amp;</span> i<span class=\"sy0\">&lt;</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>pi<span class=\"sy0\">?-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Done.\u00a0%lf\"</span><span class=\"sy0\">,</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/getch.html\"><span class=\"kw3\">getch</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\tclosegraph<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 8, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'plot<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>eaxpt x n<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"br0\">(</span><span class=\"kw1\">abs</span> x<span class=\"br0\">)</span> n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>Ellie x y<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span>eaxpt <span class=\"br0\">(</span><span class=\"sy0\">//</span> x <span class=\"nu0\">200</span><span class=\"br0\">)</span> <span class=\"nu0\">2.5</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>eaxpt <span class=\"br0\">(</span><span class=\"sy0\">//</span> y <span class=\"nu0\">200</span><span class=\"br0\">)</span> <span class=\"nu0\">2.5</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>xy Ellie <span class=\"sy0\">-</span><span class=\"nu0\">400</span> <span class=\"sy0\">-</span><span class=\"nu0\">400</span><span class=\"br0\">)</span><br/>    \u2192 <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"x:auto\"</span> <span class=\"sy0\">-</span><span class=\"nu0\">400</span> <span class=\"nu0\">400</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"st0\">\"y:auto\"</span> <span class=\"sy0\">-</span><span class=\"nu0\">400</span> <span class=\"nu0\">400</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 55, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' version 23-10-2016</span><br/><span class=\"co1\">' compile with: fbc -s console</span><br/>\u00a0<br/><span class=\"kw1\">Const</span> scr_x = <span class=\"nu0\">800</span>       <span class=\"co1\">' screen 800 x 800</span><br/><span class=\"kw1\">Const</span> scr_y = <span class=\"nu0\">600</span><br/><span class=\"kw1\">Const</span> m_x = scr_x \\ <span class=\"nu0\">2</span>   <span class=\"co1\">' middle of screen</span><br/><span class=\"kw1\">Const</span> m_y = scr_y \\ <span class=\"nu0\">2</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">Sub</span> superellipse<span class=\"br0\">(</span>a <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span>, b <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span>, n <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">ReDim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span> y<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> a<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span> x<br/>\u00a0<br/>    y<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = b <span class=\"co1\">' value for x = 0</span><br/>    y<span class=\"br0\">(</span>a<span class=\"br0\">)</span> = <span class=\"nu0\">0</span> <span class=\"co1\">' value for x = a</span><br/>\u00a0<br/>    <span class=\"co1\">'(0,0) is in upper left corner</span><br/>\u00a0<br/>    <span class=\"kw1\">PSet</span> <span class=\"br0\">(</span>m_x, m_y - y<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">' set starting point</span><br/>\u00a0<br/>    <span class=\"kw1\">For</span> x = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> a-<span class=\"nu0\">1</span><br/>        y<span class=\"br0\">(</span>x<span class=\"br0\">)</span> = <span class=\"kw1\">Int</span><span class=\"br0\">(</span> <span class=\"kw1\">Exp</span><span class=\"br0\">(</span> <span class=\"kw1\">Log</span><span class=\"br0\">(</span><span class=\"nu0\">1</span> - <span class=\"br0\">(</span><span class=\"br0\">(</span>x / a<span class=\"br0\">)</span> ^ n<span class=\"br0\">)</span><span class=\"br0\">)</span> / n <span class=\"br0\">)</span> * b <span class=\"br0\">)</span><br/>        <span class=\"kw1\">Line</span> - <span class=\"br0\">(</span><span class=\"br0\">(</span>m_x + x<span class=\"br0\">)</span>, <span class=\"br0\">(</span>m_y - y<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>\u00a0<br/>    <span class=\"kw1\">For</span> x = a <span class=\"kw1\">To</span> <span class=\"nu0\">0</span> <span class=\"kw1\">Step</span> -<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">Line</span> - <span class=\"br0\">(</span><span class=\"br0\">(</span>m_x + x<span class=\"br0\">)</span>, <span class=\"br0\">(</span>m_y + y<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>\u00a0<br/>    <span class=\"kw1\">For</span> x = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> a<br/>        <span class=\"kw1\">Line</span> - <span class=\"br0\">(</span><span class=\"br0\">(</span>m_x - x<span class=\"br0\">)</span>, <span class=\"br0\">(</span>m_y + y<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>\u00a0<br/>    <span class=\"kw1\">For</span> x = a <span class=\"kw1\">To</span> <span class=\"nu0\">0</span> <span class=\"kw1\">Step</span> -<span class=\"nu0\">1</span><br/>        <span class=\"kw1\">Line</span> - <span class=\"br0\">(</span><span class=\"br0\">(</span>m_x - x<span class=\"br0\">)</span>, <span class=\"br0\">(</span>m_y - y<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"co1\">' ------=&lt; MAIN &gt;=------</span><br/>\u00a0<br/><span class=\"kw1\">ScreenRes</span> scr_x, scr_y, <span class=\"nu0\">32</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span>   a = <span class=\"nu0\">200</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Long</span>   b = <span class=\"nu0\">150</span><br/><span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Double</span> n = <span class=\"nu0\">2.5</span><br/>\u00a0<br/>superellipse<span class=\"br0\">(</span>a, b, n<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">' empty keyboard buffer</span><br/><span class=\"kw1\">While</span> <span class=\"kw1\">Inkey</span> &lt;&gt; <span class=\"st0\">\"\"</span>\u00a0: <span class=\"kw1\">Wend</span><br/><span class=\"kw1\">Print</span>\u00a0: <span class=\"kw1\">Print</span> <span class=\"st0\">\"hit any key to end program\"</span><br/><span class=\"kw1\">Sleep</span><br/><span class=\"kw1\">End</span></pre>"}, {"lang": "Haskell", "loc": 101, "block": "<pre class=\"haskell highlighted_source\"><span class=\"coMULTI\">{-# LANGUAGE OverloadedStrings, RankNTypes #-}</span><br/><span class=\"kw1\">import</span> Reflex<br/><span class=\"kw1\">import</span> Reflex<span class=\"sy0\">.</span>Dom<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Text <span class=\"br0\">(</span>Text<span class=\"sy0\">,</span> pack<span class=\"sy0\">,</span> unpack<span class=\"br0\">)</span> <br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Map <span class=\"br0\">(</span>Map<span class=\"sy0\">,</span> fromList<span class=\"sy0\">,</span> empty<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> Text<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Read\"><span class=\"kw4\">Read</span></a> <span class=\"br0\">(</span>readMaybe<span class=\"br0\">)</span><br/>\u00a0<br/>width <span class=\"sy0\">=</span> <span class=\"nu0\">600</span><br/>height <span class=\"sy0\">=</span> <span class=\"nu0\">500</span><br/>\u00a0<br/><span class=\"kw1\">type</span> Point <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"sy0\">,</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"br0\">)</span><br/><span class=\"kw1\">type</span> Segment <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Point<span class=\"sy0\">,</span>Point<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">data</span> Ellipse <span class=\"sy0\">=</span> Ellipse <span class=\"br0\">{</span>a <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"sy0\">,</span> b <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"sy0\">,</span> n <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"br0\">}</span><br/>\u00a0<br/>toFloat <span class=\"sy0\">::</span> Text <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><br/>toFloat  <span class=\"sy0\">=</span> readMaybe<span class=\"sy0\">.</span>unpack  <br/>\u00a0<br/>toEllipse <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> Ellipse<br/>toEllipse <span class=\"br0\">(</span>Just a<span class=\"br0\">)</span> <span class=\"br0\">(</span>Just b<span class=\"br0\">)</span> <span class=\"br0\">(</span>Just n<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <br/>    <span class=\"kw1\">if</span> a <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">||</span> b <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">||</span> n <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0.0</span>  <span class=\"co1\">-- not all floats are valid</span><br/>    <span class=\"kw1\">then</span> Nothing <br/>    <span class=\"kw1\">else</span> Just <span class=\"sy0\">$</span> Ellipse a b n<br/>\u00a0<br/>toEllipse <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> Nothing<br/>\u00a0<br/>showError <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> a <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>showError Nothing <span class=\"sy0\">=</span> <span class=\"st0\">\"invalid input\"</span><br/>showError <span class=\"sy0\">_</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>\u00a0<br/>reflect45 pts  <span class=\"sy0\">=</span>  pts <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>\\<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span> y<span class=\"sy0\">,</span>  x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:reverse\"><span class=\"kw3\">reverse</span></a> pts<span class=\"br0\">)</span><br/>rotate90  pts  <span class=\"sy0\">=</span>  pts <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>\\<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span> y<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span> pts<br/>rotate180 pts  <span class=\"sy0\">=</span>  pts <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>\\<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span>x<span class=\"sy0\">,</span> <span class=\"sy0\">-</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span> pts<br/>scale a b      <span class=\"sy0\">=</span>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>\\<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span> a<span class=\"sy0\">*</span>x<span class=\"sy0\">,</span> b<span class=\"sy0\">*</span>y <span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>segments  pts  <span class=\"sy0\">=</span>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> pts <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:tail\"><span class=\"kw3\">tail</span></a> pts<br/>\u00a0<br/>toLineMap <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> Ellipse <span class=\"sy0\">-&gt;</span> Map <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"sy0\">,</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"sy0\">,</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Float\"><span class=\"kw4\">Float</span></a><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>toLineMap <span class=\"br0\">(</span>Just <span class=\"br0\">(</span>Ellipse a b n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> f p <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> p<span class=\"sy0\">**</span>n<span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span><br/>        dp <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:iterate\"><span class=\"kw3\">iterate</span></a> <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"nu0\">0.9</span><span class=\"br0\">)</span> <span class=\"nu0\">1.0</span><br/>        ip <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <span class=\"br0\">(</span>\\p <span class=\"sy0\">-&gt;</span> <span class=\"nu0\">1.0</span> <span class=\"sy0\">-</span>p<span class=\"br0\">)</span> dp<br/>        points s <span class=\"sy0\">=</span> <br/>            <span class=\"kw1\">if</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1.0</span><br/>            <span class=\"kw1\">then</span> <span class=\"br0\">(</span>\\p <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> p <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> f p<span class=\"br0\">)</span><span class=\"br0\">)</span> ip<br/>            <span class=\"kw1\">else</span> <span class=\"br0\">(</span>\\p <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> f p<span class=\"br0\">)</span> p<span class=\"br0\">)</span> dp<br/>\u00a0<br/>    <span class=\"kw1\">in</span> fromList <span class=\"sy0\">$</span>  <span class=\"co1\">-- changes list to map (for listWithKey)</span><br/>       <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:zip\"><span class=\"kw3\">zip</span></a> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">..</span><span class=\"br0\">]</span> <span class=\"sy0\">$</span> <span class=\"co1\">-- annotates segments with index</span><br/>       segments <span class=\"sy0\">$</span>  <span class=\"co1\">-- changes points to line segments</span><br/>       scale a b <span class=\"sy0\">$</span> <br/>       rotate180 <span class=\"sy0\">$</span> <span class=\"co1\">-- doubles the point count</span><br/>       rotate90 <span class=\"sy0\">$</span>  <span class=\"co1\">-- doubles the point count</span><br/>       reflect45 <span class=\"sy0\">$</span> <span class=\"co1\">-- doubles the point count</span><br/>       takeWhile <span class=\"br0\">(</span>\\<span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> x <span class=\"sy0\">&lt;</span> y <span class=\"br0\">)</span> <span class=\"sy0\">$</span> <span class=\"co1\">-- stop at 45 degree line</span><br/>       points <span class=\"nu0\">0.9</span><br/>\u00a0<br/>toLineMap Nothing <span class=\"sy0\">=</span> empty<br/>\u00a0<br/>lineAttrs <span class=\"sy0\">::</span> Segment <span class=\"sy0\">-&gt;</span> Map Text Text<br/>lineAttrs <span class=\"br0\">(</span><span class=\"br0\">(</span>x1<span class=\"sy0\">,</span>y1<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span>x2<span class=\"sy0\">,</span>y2<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    fromList <span class=\"br0\">[</span> <span class=\"br0\">(</span> <span class=\"st0\">\"x1\"</span><span class=\"sy0\">,</span>    pack <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>width<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span>x1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"sy0\">,</span> <span class=\"br0\">(</span> <span class=\"st0\">\"y1\"</span><span class=\"sy0\">,</span>    pack <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>height<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span>y1<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"sy0\">,</span> <span class=\"br0\">(</span> <span class=\"st0\">\"x2\"</span><span class=\"sy0\">,</span>    pack <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>width<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span>x2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"sy0\">,</span> <span class=\"br0\">(</span> <span class=\"st0\">\"y2\"</span><span class=\"sy0\">,</span>    pack <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> <span class=\"br0\">(</span>height<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span>y2<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>             <span class=\"sy0\">,</span> <span class=\"br0\">(</span> <span class=\"st0\">\"style\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"stroke:brown;stroke-width:2\"</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">]</span>    <br/>\u00a0<br/>showLine <span class=\"sy0\">::</span> MonadWidget t m <span class=\"sy0\">=&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> Dynamic t Segment <span class=\"sy0\">-&gt;</span> m <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>showLine <span class=\"sy0\">_</span> dSegment <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    elSvgns <span class=\"st0\">\"line\"</span> <span class=\"br0\">(</span>lineAttrs <span class=\"sy0\">&lt;$&gt;</span> dSegment<span class=\"br0\">)</span> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> mainWidget <span class=\"sy0\">$</span> <span class=\"kw1\">do</span><br/>    elAttr <span class=\"st0\">\"h1\"</span> <span class=\"br0\">(</span><span class=\"st0\">\"style\"</span> <span class=\"sy0\">=</span>: <span class=\"st0\">\"color:brown\"</span><span class=\"br0\">)</span> <span class=\"sy0\">$</span> text <span class=\"st0\">\"Superellipse\"</span> <br/>    ta <span class=\"sy0\">&lt;-</span> el <span class=\"st0\">\"div\"</span> <span class=\"sy0\">$</span> <span class=\"kw1\">do</span><br/>        text <span class=\"st0\">\"a: \"</span><br/>        textInput def <span class=\"br0\">{</span> <span class=\"sy0\">_</span>textInputConfig<span class=\"sy0\">_</span>initialValue <span class=\"sy0\">=</span> <span class=\"st0\">\"200\"</span><span class=\"br0\">}</span><br/>\u00a0<br/>    tb <span class=\"sy0\">&lt;-</span> el <span class=\"st0\">\"div\"</span> <span class=\"sy0\">$</span> <span class=\"kw1\">do</span><br/>        text <span class=\"st0\">\"b: \"</span><br/>        textInput def <span class=\"br0\">{</span> <span class=\"sy0\">_</span>textInputConfig<span class=\"sy0\">_</span>initialValue <span class=\"sy0\">=</span> <span class=\"st0\">\"200\"</span><span class=\"br0\">}</span><br/>\u00a0<br/>    tn <span class=\"sy0\">&lt;-</span> el <span class=\"st0\">\"div\"</span> <span class=\"sy0\">$</span> <span class=\"kw1\">do</span><br/>        text <span class=\"st0\">\"n: \"</span><br/>        textInput def <span class=\"br0\">{</span> <span class=\"sy0\">_</span>textInputConfig<span class=\"sy0\">_</span>initialValue <span class=\"sy0\">=</span> <span class=\"st0\">\"2.5\"</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">let</span> <br/>        ab <span class=\"sy0\">=</span> zipDynWith toEllipse <span class=\"br0\">(</span>toFloat <span class=\"sy0\">&lt;$&gt;</span> value ta<span class=\"br0\">)</span> <span class=\"br0\">(</span>toFloat <span class=\"sy0\">&lt;$&gt;</span> value tb<span class=\"br0\">)</span><br/>        dEllipse <span class=\"sy0\">=</span> zipDynWith <span class=\"br0\">(</span><span class=\"sy0\">$</span><span class=\"br0\">)</span> ab <span class=\"br0\">(</span>toFloat <span class=\"sy0\">&lt;$&gt;</span> value tn<span class=\"br0\">)</span><br/>        dLines <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> toLineMap dEllipse <br/>\u00a0<br/>        dAttrs <span class=\"sy0\">=</span> constDyn <span class=\"sy0\">$</span> fromList <br/>                     <span class=\"br0\">[</span> <span class=\"br0\">(</span><span class=\"st0\">\"width\"</span> <span class=\"sy0\">,</span> pack <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> width<span class=\"br0\">)</span><br/>                     <span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"st0\">\"height\"</span><span class=\"sy0\">,</span> pack <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> height<span class=\"br0\">)</span><br/>                     <span class=\"br0\">]</span><br/>    elAttr <span class=\"st0\">\"div\"</span> <span class=\"br0\">(</span><span class=\"st0\">\"style\"</span> <span class=\"sy0\">=</span>: <span class=\"st0\">\"color:red\"</span><span class=\"br0\">)</span> <span class=\"sy0\">$</span> dynText <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <span class=\"br0\">(</span>pack<span class=\"sy0\">.</span>showError<span class=\"br0\">)</span> dEllipse<br/>    el <span class=\"st0\">\"div\"</span> <span class=\"sy0\">$</span> elSvgns <span class=\"st0\">\"svg\"</span> dAttrs <span class=\"sy0\">$</span> listWithKey dLines showLine<br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- At end to avoid Rosetta Code unmatched quotes problem.</span><br/>elSvgns <span class=\"sy0\">::</span> <span class=\"kw1\">forall</span> t m a<span class=\"sy0\">.</span> MonadWidget t m <span class=\"sy0\">=&gt;</span> Text <span class=\"sy0\">-&gt;</span> Dynamic t <span class=\"br0\">(</span>Map Text Text<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> m a <span class=\"sy0\">-&gt;</span> m <span class=\"br0\">(</span>El t<span class=\"sy0\">,</span> a<span class=\"br0\">)</span><br/>elSvgns <span class=\"sy0\">=</span> elDynAttrNS<span class=\"st0\">' (Just \"http://www.w3.org/2000/svg\")</span></pre>"}, {"lang": "J", "loc": 7, "block": "<pre class=\"j highlighted_source\">selips=: <span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span><br/>  <span class=\"st_h\">'n a b'</span>=. <span class=\"kw2\">y</span><br/>  <span class=\"nu0\">1</span> &gt;: <span class=\"sy0\">((</span><span class=\"kw2\">n</span>^~a%~]<span class=\"sy0\">)</span> +&amp;|/ <span class=\"kw2\">n</span>^~b%~]<span class=\"sy0\">)</span> i:<span class=\"kw2\">x</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>   require<span class=\"st_h\">'viewmat'</span><br/>   viewmat <span class=\"nu0\">300</span> selips <span class=\"nu0\">2.5</span> <span class=\"nu0\">200</span> <span class=\"nu0\">200</span></pre>"}, {"lang": "Java", "loc": 126, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.awt.geom.Path2D</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">static</span> java.<span class=\"me1\">lang</span>.<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">pow</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Hashtable</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">javax.swing.event.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> SuperEllipse <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajpanel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JPanel</span></a> <span class=\"kw1\">implements</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Achangelistener+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ChangeListener</span></a> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">private</span> <span class=\"kw4\">double</span> exp <span class=\"sy0\">=</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> SuperEllipse<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        setPreferredSize<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adimension+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Dimension</span></a><span class=\"br0\">(</span><span class=\"nu0\">650</span>, <span class=\"nu0\">650</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        setBackground<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">white</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        setFont<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Serif\"</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afont+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Font</span></a>.<span class=\"me1\">PLAIN</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawGrid<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        g.<span class=\"me1\">setStroke</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abasicstroke+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BasicStroke</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a><span class=\"br0\">(</span>0xEEEEEE<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw4\">int</span> w <span class=\"sy0\">=</span> getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> h <span class=\"sy0\">=</span> getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> spacing <span class=\"sy0\">=</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> w <span class=\"sy0\">/</span> spacing<span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, i <span class=\"sy0\">*</span> spacing, w, i <span class=\"sy0\">*</span> spacing<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> spacing, <span class=\"nu0\">0</span>, i <span class=\"sy0\">*</span> spacing, w<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, h <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>, w, h <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a><span class=\"br0\">(</span>0xAAAAAA<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, w, w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, <span class=\"nu0\">0</span>, w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, w<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawLegend<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">black</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setFont</span><span class=\"br0\">(</span>getFont<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"n = \"</span> <span class=\"sy0\">+</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>exp<span class=\"br0\">)</span>, getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">150</span>, <span class=\"nu0\">45</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"a = b = 200\"</span>, getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">150</span>, <span class=\"nu0\">75</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawEllipse<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw1\">final</span> <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">;</span> <span class=\"co1\">// a = b</span><br/>        <span class=\"kw4\">double</span><span class=\"br0\">[</span><span class=\"br0\">]</span> points <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">double</span><span class=\"br0\">[</span>a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        Path2D p <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Path2D.<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adouble+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Double</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        p.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>a, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"co1\">// calculate first quadrant</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span> x <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x<span class=\"sy0\">--</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            points<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> pow<span class=\"br0\">(</span>pow<span class=\"br0\">(</span>a, exp<span class=\"br0\">)</span> <span class=\"sy0\">-</span> pow<span class=\"br0\">(</span>x, exp<span class=\"br0\">)</span>, <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> exp<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// solve for y</span><br/>            p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>x, <span class=\"sy0\">-</span>points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\">// mirror to others</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;=</span> a<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>x, points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span> x <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x<span class=\"sy0\">--</span><span class=\"br0\">)</span><br/>            p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>x, points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;=</span> a<span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>x, <span class=\"sy0\">-</span>points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        g.<span class=\"me1\">translate</span><span class=\"br0\">(</span>getWidth<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span>, getHeight<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setStroke</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abasicstroke+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BasicStroke</span></a><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a><span class=\"br0\">(</span>0x25B0C4DE, <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">fill</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a><span class=\"br0\">(</span>0xB0C4DE<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\">// LightSteelBlue</span><br/>        g.<span class=\"me1\">draw</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> paintComponent<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics</span></a> gg<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">super</span>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a> g <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Agraphics2d+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Graphics2D</span></a><span class=\"br0\">)</span> gg<span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">KEY_ANTIALIASING</span>,<br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">KEY_TEXT_ANTIALIASING</span>,<br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arenderinghints+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">RenderingHints</span></a>.<span class=\"me1\">VALUE_TEXT_ANTIALIAS_ON</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        drawGrid<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        drawLegend<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        drawEllipse<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    @Override<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> stateChanged<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Achangeevent+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">ChangeEvent</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajslider+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JSlider</span></a> source <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajslider+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JSlider</span></a><span class=\"br0\">)</span> e.<span class=\"me1\">getSource</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        exp <span class=\"sy0\">=</span> source.<span class=\"me1\">getValue</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">;</span><br/>        repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aswingutilities+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SwingUtilities</span></a>.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a> f <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setDefaultCloseOperation</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajframe+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JFrame</span></a>.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setTitle</span><span class=\"br0\">(</span><span class=\"st0\">\"Super Ellipse\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setResizable</span><span class=\"br0\">(</span><span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            SuperEllipse panel <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> SuperEllipse<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">add</span><span class=\"br0\">(</span>panel, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderlayout+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderLayout</span></a>.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajslider+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JSlider</span></a> exponent <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajslider+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JSlider</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajslider+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JSlider</span></a>.<span class=\"me1\">HORIZONTAL</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            exponent.<span class=\"me1\">addChangeListener</span><span class=\"br0\">(</span>panel<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            exponent.<span class=\"me1\">setMajorTickSpacing</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            exponent.<span class=\"me1\">setPaintLabels</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            exponent.<span class=\"me1\">setBackground</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acolor+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Color</span></a>.<span class=\"me1\">white</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            exponent.<span class=\"me1\">setBorder</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderfactory+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderFactory</span></a>.<span class=\"me1\">createEmptyBorder</span><span class=\"br0\">(</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            Hashtable<span class=\"sy0\">&lt;</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainteger+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Integer</span></a>, JLabel<span class=\"sy0\">&gt;</span> labelTable <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Hashtable<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                labelTable.<span class=\"me1\">put</span><span class=\"br0\">(</span>i, <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ajlabel+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">JLabel</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            exponent.<span class=\"me1\">setLabelTable</span><span class=\"br0\">(</span>labelTable<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            f.<span class=\"me1\">add</span><span class=\"br0\">(</span>exponent, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aborderlayout+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BorderLayout</span></a>.<span class=\"me1\">SOUTH</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            f.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setLocationRelativeTo</span><span class=\"br0\">(</span><span class=\"kw2\">null</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            f.<span class=\"me1\">setVisible</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 24, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"kw1\">var</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">,</span> ctx<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> point<span class=\"br0\">(</span> x<span class=\"sy0\">,</span> y <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    ctx.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">function</span> start<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">var</span> can <span class=\"sy0\">=</span> document.<span class=\"me1\">createElement</span><span class=\"br0\">(</span><span class=\"st0\">'canvas'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    can.<span class=\"me1\">width</span>  <span class=\"sy0\">=</span> can.<span class=\"me1\">height</span> <span class=\"sy0\">=</span> <span class=\"nu0\">600</span><span class=\"sy0\">;</span><br/>    ctx <span class=\"sy0\">=</span> can.<span class=\"me1\">getContext</span><span class=\"br0\">(</span> <span class=\"st0\">\"2d\"</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">rect</span><span class=\"br0\">(</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> can.<span class=\"me1\">width</span><span class=\"sy0\">,</span> can.<span class=\"me1\">height</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"#000000\"</span><span class=\"sy0\">;</span> ctx.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    document.<span class=\"me1\">body</span>.<span class=\"me1\">appendChild</span><span class=\"br0\">(</span> can <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"#ffffff\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw1\">var</span> t <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> t <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span> t <span class=\"sy0\">+=</span> .1 <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       x <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">abs</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">cos</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">/</span> n <span class=\"br0\">)</span> <span class=\"sy0\">*</span> a <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sign</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">cos</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       y <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">pow</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">abs</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">/</span> n <span class=\"br0\">)</span> <span class=\"sy0\">*</span> b <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sign</span><span class=\"br0\">(</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">sin</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>       point<span class=\"br0\">(</span> x <span class=\"sy0\">+</span> <span class=\"br0\">(</span> can.<span class=\"me1\">width</span> <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> y <span class=\"sy0\">+</span> <span class=\"br0\">(</span> can.<span class=\"me1\">height</span> <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 20, "block": "<pre class=\"text highlighted_source\">function superellipse(n, a, b, step::Int=100)<br/>    @assert n &gt; 0 &amp;&amp; a &gt; 0 &amp;&amp; b &gt; 0<br/>    na = 2 / n<br/>    pc = 2\u03c0 / step<br/>    t  = 0<br/>    xp = Vector{Float64}(step + 1)<br/>    yp = Vector{Float64}(step + 1)<br/>    for i in 0:step<br/>        # because sin^n(x) is mathematically the same as (sin(x))^n...<br/>        xp[i+1] = abs((cos(t))) ^ na * a * sign(cos(t))<br/>        yp[i+1] = abs((sin(t))) ^ na * b * sign(sin(t))<br/>        t += pc<br/>    end<br/>    return xp, yp<br/>end<br/>\u00a0<br/>using UnicodePlots<br/>\u00a0<br/>x, y = superellipse(2.5, 200, 200)<br/>println(lineplot(x, y))</pre>"}, {"lang": "Kotlin", "loc": 63, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">geom</span>.<span class=\"me1\">Path2D</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"sy0\">*</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">lang</span>.<span class=\"me1\">Math</span>.<span class=\"me1\">pow</span><br/>\u00a0<br/><span class=\"coMULTI\">/* assumes a == b */</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> SuperEllipse<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> n<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> a<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> JPanel<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    init <span class=\"br0\">{</span><br/>        require<span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0.0</span> <span class=\"sy0\">&amp;&amp;</span> a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        preferredSize <span class=\"sy0\">=</span> Dimension<span class=\"br0\">(</span><span class=\"nu0\">650</span>, <span class=\"nu0\">650</span><span class=\"br0\">)</span><br/>        background <span class=\"sy0\">=</span> Color.<span class=\"me1\">black</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> fun drawEllipse<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> points <span class=\"sy0\">=</span> DoubleArray<span class=\"br0\">(</span>a + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> Path2D.<span class=\"me1\">Double</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        p.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>a.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"nu0\">0.0</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">// calculate first quadrant</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x in a downTo <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            points<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">=</span> pow<span class=\"br0\">(</span>pow<span class=\"br0\">(</span>a.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, n<span class=\"br0\">)</span> - pow<span class=\"br0\">(</span>x.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, n<span class=\"br0\">)</span>, <span class=\"nu0\">1.0</span> / n<span class=\"br0\">)</span> <br/>            p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>x.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, -points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"co1\">// mirror to others</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x in <span class=\"nu0\">0</span>..<span class=\"me1\">a</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>x.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span> <br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x in a downTo <span class=\"nu0\">0</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>-x.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x in <span class=\"nu0\">0</span>..<span class=\"me1\">a</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>-x.<span class=\"me1\">toDouble</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, -points<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a><span class=\"br0\">(</span>g<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            translate<span class=\"br0\">(</span>width / <span class=\"nu0\">2</span>, height / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>            color <span class=\"sy0\">=</span> Color.<span class=\"me1\">yellow</span><br/>            fill<span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun paintComponent<span class=\"br0\">(</span>gg<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> gg as Graphics2D<br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_ANTIALIASING</span>,<br/>                           RenderingHints.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>        g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_TEXT_ANTIALIASING</span>,<br/>                           RenderingHints.<span class=\"me1\">VALUE_TEXT_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>        drawEllipse<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span> <br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    SwingUtilities.<span class=\"me1\">invokeLater</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> JFrame<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a> <span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            defaultCloseOperation <span class=\"sy0\">=</span> JFrame.<span class=\"me1\">EXIT_ON_CLOSE</span><br/>            title <span class=\"sy0\">=</span> <span class=\"st0\">\"Super Ellipse\"</span><br/>            isResizable <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>            add<span class=\"br0\">(</span>SuperEllipse<span class=\"br0\">(</span><span class=\"nu0\">2.5</span>, <span class=\"nu0\">200</span><span class=\"br0\">)</span>, BorderLayout.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span>            <br/>            pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>            setLocationRelativeTo<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>            isVisible <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Maple", "loc": 1, "block": "<pre class=\"text highlighted_source\">plots:-implicitplot(abs((1/200)*x^2.5)+abs((1/200)*y^2.5) = 1, x = -10 .. 10, y = -10 .. 10);</pre>"}, {"lang": "Mathematica", "loc": 2, "block": "<pre class=\"text highlighted_source\">ContourPlot[<br/> Abs[x/200]^2.5 + Abs[y/200]^2.5 == 1, {x, -200, 200}, {y, -200, 200}]</pre>"}, {"lang": "ooRexx", "loc": 1, "block": "<pre>This program draws 5 super ellipses:\nblack 120,120,1.5\nblue  160,160,2\nred   200,200,2.5\ngreen 240,240,3  \nblack 280,280,4</pre>"}, {"lang": "Perl 6", "loc": 30, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">constant</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">constant</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">2.5</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># y in terms of x</span><br/><span class=\"kw2\">sub</span> y <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">sprintf</span> <span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span> b <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">/</span> a<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">abs</span> <span class=\"sy0\">**</span> n <span class=\"br0\">)</span> <span class=\"sy0\">**</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># find point pairs for one quadrant</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@q</span> <span class=\"sy0\">=</span> flat <span class=\"kw3\">map</span> <span class=\"sy0\">-&gt;</span> \\<span class=\"kw1\">x</span> <span class=\"br0\">{</span> <span class=\"kw1\">x</span><span class=\"sy0\">,</span> y<span class=\"br0\">(</span><span class=\"kw1\">x</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span> <span class=\"sy0\">...</span> <span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\"># Generate an SVG image</span><br/><span class=\"kw2\">INIT</span> <span class=\"kw3\">say</span> qq<span class=\"sy0\">:</span>to<span class=\"sy0\">/</span>STOP<span class=\"sy0\">/;</span><br/>    <span class=\"sy0\">&lt;?</span>xml version<span class=\"sy0\">=</span><span class=\"st0\">\"1.0\"</span> standalone<span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"sy0\">?&gt;</span><br/>    <span class=\"sy0\">&lt;!</span>DOCTYPE svg PUBLIC <span class=\"st0\">\"-//W3C//DTD SVG 1.1//EN\"</span> <span class=\"st0\">\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"</span><span class=\"sy0\">&gt;</span><br/>    <span class=\"sy0\">&lt;</span>svg height<span class=\"sy0\">=</span><span class=\"st0\">\"{b*2}\"</span> width<span class=\"sy0\">=</span><span class=\"st0\">\"{a*2}\"</span> version<span class=\"sy0\">=</span><span class=\"st0\">\"1.1\"</span> xmlns<span class=\"sy0\">=</span><span class=\"st0\">\"http://www.w3.org/2000/svg\"</span><span class=\"sy0\">&gt;</span><br/>    STOP<br/><span class=\"kw2\">END</span> <span class=\"kw3\">say</span> <span class=\"st_h\">'&lt;/svg&gt;'</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"sy0\">.</span><span class=\"me1\">put</span> <span class=\"kw1\">for</span><br/>pline<span class=\"br0\">(</span> <span class=\"re0\">@q</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>pline<span class=\"br0\">(</span> <span class=\"re0\">@q</span> \u00ab<span class=\"sy0\">*</span>\u00bb <span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"co1\"># flip and mirror</span><br/>pline<span class=\"br0\">(</span> <span class=\"re0\">@q</span> \u00ab<span class=\"sy0\">*</span>\u00bb <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"co1\"># for the other</span><br/>pline<span class=\"br0\">(</span> <span class=\"re0\">@q</span> \u00ab<span class=\"sy0\">*</span>\u00bb <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># three quadrants</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> pline <span class=\"br0\">(</span><span class=\"re0\">@q</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    qq<span class=\"sy0\">:</span>to<span class=\"sy0\">/</span><span class=\"kw2\">END</span><span class=\"sy0\">/;</span><br/>    <span class=\"sy0\">&lt;</span>polyline points<span class=\"sy0\">=</span><span class=\"st0\">\"{@q}\"</span><br/>    style<span class=\"sy0\">=</span><span class=\"st0\">\"fill:none; stroke:black; stroke-width:3\"</span> transform<span class=\"sy0\">=</span><span class=\"st0\">\"translate({a}, {b})\"</span> <span class=\"sy0\">/&gt;</span><br/>    <span class=\"kw2\">END</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Python", "loc": 28, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"co1\"># Superellipse drawing in Python 2.7.9</span><br/><span class=\"co1\"># pic can see at http://www.imgup.cz/image/712</span><br/>\u00a0<br/><span class=\"kw1\">import</span> matplotlib.<span class=\"me1\">pyplot</span> <span class=\"kw1\">as</span> plt<br/><span class=\"kw1\">from</span> <span class=\"kw3\">math</span> <span class=\"kw1\">import</span> sin<span class=\"sy0\">,</span> cos<span class=\"sy0\">,</span> pi<br/>\u00a0<br/><span class=\"kw1\">def</span> sgn<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:<br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>-<span class=\"br0\">(</span>x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>*<span class=\"nu0\">1</span><br/>\u00a0<br/>a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>n<span class=\"sy0\">=</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span><span class=\"nu0\">200</span><span class=\"sy0\">,</span><span class=\"nu0\">2.5</span> <span class=\"co1\"># param n making shape</span><br/>na<span class=\"sy0\">=</span><span class=\"nu0\">2</span>/n<br/>step<span class=\"sy0\">=</span><span class=\"nu0\">100</span> <span class=\"co1\"># accuracy</span><br/>piece<span class=\"sy0\">=</span><span class=\"br0\">(</span>pi*<span class=\"nu0\">2</span><span class=\"br0\">)</span>/step<br/>xp<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>yp<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\u00a0<br/>t<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/><span class=\"kw1\">for</span> t1 <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>step+<span class=\"nu0\">1</span><span class=\"br0\">)</span>:<br/>\t<span class=\"co1\"># because sin^n(x) is mathematically the same as (sin(x))^n...</span><br/>\tx<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"kw2\">abs</span><span class=\"br0\">(</span><span class=\"br0\">(</span>cos<span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>**na<span class=\"br0\">)</span>*a*sgn<span class=\"br0\">(</span>cos<span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\ty<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"kw2\">abs</span><span class=\"br0\">(</span><span class=\"br0\">(</span>sin<span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>**na<span class=\"br0\">)</span>*b*sgn<span class=\"br0\">(</span>sin<span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\txp.<span class=\"me1\">append</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span>yp.<span class=\"me1\">append</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><br/>\tt+<span class=\"sy0\">=</span>piece<br/>\u00a0<br/>plt.<span class=\"me1\">plot</span><span class=\"br0\">(</span>xp<span class=\"sy0\">,</span>yp<span class=\"br0\">)</span> <span class=\"co1\"># plotting all point from array xp, yp</span><br/>plt.<span class=\"me1\">title</span><span class=\"br0\">(</span><span class=\"st0\">\"Superellipse with parameter \"</span>+<span class=\"kw2\">str</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>plt.<span class=\"me1\">show</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 10, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>(require plot) <br/>#;(plot-new-window? #t)<br/>\u00a0<br/>(define ((superellipse a b n) x y)<br/>  (+ (expt (abs (/ x a)) n)<br/>     (expt (abs (/ y b)) n)))<br/>\u00a0<br/>(plot (isoline (superellipse 200 200 2.5) 1<br/>               -220 220 -220 220))</pre>"}, {"lang": "REXX", "loc": 162, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* REXX ***************************************************************<br/>* Create a BMP file showing a few super ellipses<br/>**********************************************************************/</span><br/><span class=\"kw1\">Parse</span> <span class=\"kw2\">Version</span> v<br/><span class=\"kw1\">If</span> <span class=\"kw6\">pos</span><span class=\"br0\">(</span><span class=\"st0\">'Regina'</span>,v<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"kw3\">Then</span><br/>  superegg=<span class=\"st0\">'superegga.bmp'</span><br/><span class=\"kw3\">Else</span><br/>  superegg=<span class=\"st0\">'supereggo.bmp'</span><br/><span class=\"st0\">'erase'</span> superegg<br/>s=<span class=\"st0\">'424d4600000000000000360000002800000038000000280000000100180000000000'</span>X<span class=\"sy0\">||</span>,<br/>  <span class=\"st0\">'1000000000000000000000000000000000000000'</span>x<br/>z<span class=\"sy0\">.</span>0=<span class=\"nu0\">0</span><br/>black=<span class=\"st0\">'000000'</span>x<br/>white=<span class=\"st0\">'ffffff'</span>x<br/>red  =<span class=\"st0\">'00ff00'</span>x<br/>green=<span class=\"st0\">'ff0000'</span>x<br/>blue =<span class=\"st0\">'0000ff'</span>x<br/>m=<span class=\"nu0\">80</span><br/>n=<span class=\"nu0\">80</span><br/>hor=m<span class=\"sy0\">*</span><span class=\"nu0\">8</span>      <span class=\"coMULTI\">/* 56 */</span><br/>ver=n<span class=\"sy0\">*</span><span class=\"nu0\">8</span>      <span class=\"coMULTI\">/* 40 */</span><br/>s=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>lend<span class=\"br0\">(</span>hor<span class=\"br0\">)</span>,s,<span class=\"nu0\">19</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>s=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>lend<span class=\"br0\">(</span>ver<span class=\"br0\">)</span>,s,<span class=\"nu0\">23</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>z<span class=\"sy0\">.</span>=<span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'f747ff'</span>x,<span class=\"nu0\">3192</span>%3<span class=\"br0\">)</span><br/>z<span class=\"sy0\">.</span>=<span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'ffffff'</span>x,<span class=\"nu0\">8</span><span class=\"sy0\">*</span>m<span class=\"br0\">)</span><br/>z<span class=\"sy0\">.</span>0=<span class=\"nu0\">648</span><br/>u=<span class=\"nu0\">320</span><br/>v=<span class=\"nu0\">320</span><br/><span class=\"kw1\">Call</span> supegg black,080,080,<span class=\"nu0\">0.5</span>,u,v<br/><span class=\"kw1\">Call</span> supegg black,<span class=\"nu0\">110</span>,<span class=\"nu0\">110</span>,<span class=\"nu0\">1</span> ,u,v<br/><span class=\"kw1\">Call</span> supegg black,<span class=\"nu0\">140</span>,<span class=\"nu0\">140</span>,<span class=\"nu0\">1.5</span>,u,v<br/><span class=\"kw1\">Call</span> supegg blue ,<span class=\"nu0\">170</span>,<span class=\"nu0\">170</span>,<span class=\"nu0\">2</span> ,u,v<br/><span class=\"kw1\">Call</span> supegg red ,<span class=\"nu0\">200</span>,<span class=\"nu0\">200</span>,<span class=\"nu0\">2.5</span>,u,v<br/><span class=\"kw1\">Call</span> supegg green,<span class=\"nu0\">230</span>,<span class=\"nu0\">230</span>,<span class=\"nu0\">3</span> ,u,v<br/><span class=\"kw1\">Call</span> supegg black,<span class=\"nu0\">260</span>,<span class=\"nu0\">260</span>,<span class=\"nu0\">4</span> ,u,v<br/><span class=\"kw1\">Call</span> supegg black,<span class=\"nu0\">290</span>,<span class=\"nu0\">290</span>,<span class=\"nu0\">7</span> ,u,v   <br/><span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> z<span class=\"sy0\">.</span>0<br/>  s=s<span class=\"sy0\">||</span>z<span class=\"sy0\">.</span>i<br/>  <span class=\"kw3\">End</span><br/>\u00a0<br/><span class=\"kw1\">Call</span> <span class=\"kw6\">lineout</span> superegg,s<br/><span class=\"kw1\">Call</span> <span class=\"kw6\">lineout</span> superegg<br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>supegg:<br/><span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> color,a,b,n,u,v<br/><span class=\"kw1\">Do</span> y=<span class=\"nu0\">0</span> <span class=\"kw2\">To</span> b<br/>  t=<span class=\"br0\">(</span><span class=\"nu0\">1</span>-power<span class=\"br0\">(</span>y<span class=\"sy0\">/</span>b,n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  x=a<span class=\"sy0\">*</span>power<span class=\"br0\">(</span>t,<span class=\"nu0\">1</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u+x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v+y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u-x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v+y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u+x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v-y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u-x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v-y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Do</span> x=<span class=\"nu0\">0</span> <span class=\"kw2\">To</span> a<br/>  t=<span class=\"br0\">(</span><span class=\"nu0\">1</span>-power<span class=\"br0\">(</span>x<span class=\"sy0\">/</span>b,n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  y=a<span class=\"sy0\">*</span>power<span class=\"br0\">(</span>t,<span class=\"nu0\">1</span><span class=\"sy0\">/</span>n<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u+x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v+y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u-x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v+y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u+x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v-y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Call</span> point color,<span class=\"kw6\">format</span><span class=\"br0\">(</span>u-x,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw6\">format</span><span class=\"br0\">(</span>v-y,<span class=\"nu0\">4</span>,<span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>lend:<br/><span class=\"kw1\">Return</span> <span class=\"kw6\">reverse</span><span class=\"br0\">(</span><span class=\"kw6\">d2c</span><span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>point: <span class=\"kw1\">Procedure</span> <span class=\"kw1\">Expose</span> z<span class=\"sy0\">.</span><br/>  <span class=\"kw1\">Call</span> <span class=\"kw1\">trace</span> <span class=\"st0\">'O'</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> color,x0,y0<br/>  <span class=\"co1\">--Say x0 y0</span><br/>  <span class=\"kw1\">Do</span> x=x0-<span class=\"nu0\">2</span> <span class=\"kw2\">To</span> x0+<span class=\"nu0\">2</span><br/>    <span class=\"kw1\">Do</span> y=y0-<span class=\"nu0\">2</span> <span class=\"kw2\">To</span> y0+<span class=\"nu0\">2</span><br/>      z<span class=\"sy0\">.</span>y=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span><span class=\"kw6\">copies</span><span class=\"br0\">(</span>color,<span class=\"nu0\">3</span><span class=\"br0\">)</span>,z<span class=\"sy0\">.</span>y,<span class=\"nu0\">3</span><span class=\"sy0\">*</span>x<span class=\"br0\">)</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">Return</span><br/>\u00a0<br/>power: <span class=\"kw1\">Procedure</span><br/><span class=\"coMULTI\">/***********************************************************************<br/>* Return b**x for any x -- with reasonable or specified precision<br/>* 920903 Walter Pachl<br/>***********************************************************************/</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> b,x,prec<br/>  <span class=\"kw1\">If</span> prec<span class=\"sy0\">&lt;</span><span class=\"nu0\">9</span> <span class=\"kw3\">Then</span> prec=<span class=\"nu0\">9</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>prec<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Fuzz</span>   <span class=\"nu0\">3</span><br/>  <span class=\"kw1\">If</span> b=<span class=\"nu0\">0</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Return</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">If</span> b<span class=\"sy0\">&lt;&gt;</span><span class=\"st0\">''</span> <span class=\"kw3\">Then</span> x=x<span class=\"sy0\">*</span>ln<span class=\"br0\">(</span>b,prec+<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>  o=<span class=\"nu0\">1</span><br/>  u=<span class=\"nu0\">1</span><br/>  r=<span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">By</span> <span class=\"nu0\">1</span><br/>    ra=r<br/>    o=o<span class=\"sy0\">*</span>x<br/>    u=u<span class=\"sy0\">*</span>i<br/>    r=r+<span class=\"br0\">(</span>o<span class=\"sy0\">/</span>u<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> r=ra <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span>prec<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Return</span> r+<span class=\"nu0\">0</span><br/>\u00a0<br/>ln: <span class=\"kw1\">Procedure</span><br/><span class=\"coMULTI\">/***********************************************************************<br/>* Return ln(x) -- with specified precision<br/>* Three different series are used for the ranges  0 to 0.5<br/>*                                                 0.5 to 1.5<br/>*                                                 1.5 to infinity<br/>* 920903 Walter Pachl<br/>***********************************************************************/</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> x,prec,b<br/>  <span class=\"kw1\">If</span> prec=<span class=\"st0\">''</span> <span class=\"kw3\">Then</span> prec=<span class=\"nu0\">9</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span>prec<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Fuzz</span>   <span class=\"nu0\">3</span><br/>  <span class=\"kw1\">Select</span><br/>    <span class=\"kw3\">When</span> x<span class=\"sy0\">&lt;</span>=<span class=\"nu0\">0</span> <span class=\"kw3\">Then</span> r=<span class=\"st0\">'*** invalid argument ***'</span><br/>    <span class=\"kw3\">When</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0.5</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>      z=<span class=\"br0\">(</span>x-<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>x+<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      o=z<br/>      r=z<br/>      k=<span class=\"nu0\">1</span><br/>      <span class=\"kw1\">Do</span> i=<span class=\"nu0\">3</span> <span class=\"kw2\">By</span> <span class=\"nu0\">2</span><br/>        ra=r<br/>        k=k+<span class=\"nu0\">1</span><br/>        o=o<span class=\"sy0\">*</span>z<span class=\"sy0\">*</span>z<br/>        r=r+o<span class=\"sy0\">/</span>i<br/>        <span class=\"kw1\">If</span> r=ra <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span><br/>        <span class=\"kw3\">End</span><br/>      r=<span class=\"nu0\">2</span><span class=\"sy0\">*</span>r<br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">When</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">1.5</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>      z=<span class=\"br0\">(</span>x-<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      o=z<br/>      r=z<br/>      k=<span class=\"nu0\">1</span><br/>      <span class=\"kw1\">Do</span> i=<span class=\"nu0\">2</span> <span class=\"kw2\">By</span> <span class=\"nu0\">1</span><br/>        ra=r<br/>        k=k+<span class=\"nu0\">1</span><br/>        o=-o<span class=\"sy0\">*</span>z<br/>        r=r+o<span class=\"sy0\">/</span>i<br/>        <span class=\"kw1\">If</span> r=ra <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span><br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">Otherwise</span> <span class=\"coMULTI\">/* 1.5&lt;=x */</span> <span class=\"kw1\">Do</span><br/>      z=<span class=\"br0\">(</span>x+<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"br0\">(</span>x-<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      o=<span class=\"nu0\">1</span><span class=\"sy0\">/</span>z<br/>      r=o<br/>      k=<span class=\"nu0\">1</span><br/>      <span class=\"kw1\">Do</span> i=<span class=\"nu0\">3</span> <span class=\"kw2\">By</span> <span class=\"nu0\">2</span><br/>        ra=r<br/>        k=k+<span class=\"nu0\">1</span><br/>        o=o<span class=\"sy0\">/</span><span class=\"br0\">(</span>z<span class=\"sy0\">*</span>z<span class=\"br0\">)</span><br/>        r=r+o<span class=\"sy0\">/</span>i<br/>        <span class=\"kw1\">If</span> r=ra <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span><br/>        <span class=\"kw3\">End</span><br/>      r=<span class=\"nu0\">2</span><span class=\"sy0\">*</span>r<br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">If</span> b<span class=\"sy0\">&lt;&gt;</span><span class=\"st0\">''</span> <span class=\"kw3\">Then</span><br/>    r=r<span class=\"sy0\">/</span>ln<span class=\"br0\">(</span>b<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span>prec<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Return</span> r+<span class=\"nu0\">0</span></pre>"}, {"lang": "Scala", "loc": 104, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"sy0\">_</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">geom</span>.<span class=\"me1\">Path2D</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"sy0\">_</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> javax.<span class=\"me1\">swing</span>.<span class=\"me1\">event</span>.<span class=\"br0\">{</span>ChangeEvent, ChangeListener<span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> SuperEllipse <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>\u00a0<br/>    SwingUtilities.<span class=\"me1\">invokeLater</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> JFrame<span class=\"br0\">(</span><span class=\"st0\">\"Super Ellipse\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> SuperEllipse <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> JPanel <a href=\"http://scala-lang.org\"><span class=\"kw1\">with</span></a> ChangeListener <span class=\"br0\">{</span><br/>          setPreferredSize<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Dimension<span class=\"br0\">(</span><span class=\"nu0\">650</span>, <span class=\"nu0\">650</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          setBackground<span class=\"br0\">(</span>Color.<span class=\"me1\">white</span><span class=\"br0\">)</span><br/>          setFont<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Font<span class=\"br0\">(</span><span class=\"st0\">\"Serif\"</span>, Font.<span class=\"me1\">PLAIN</span>, <span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> exp <span class=\"sy0\">=</span> <span class=\"nu0\">2.5</span><br/>\u00a0<br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> paintComponent<span class=\"br0\">(</span>gg<span class=\"sy0\">:</span> Graphics<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> g <span class=\"sy0\">=</span> gg.<span class=\"me1\">asInstanceOf</span><span class=\"br0\">[</span>Graphics2D<span class=\"br0\">]</span><br/>\u00a0<br/>           <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> drawGrid<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>              g.<span class=\"me1\">setStroke</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> BasicStroke<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Color<span class=\"br0\">(</span>0xEEEEEE<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> w <span class=\"sy0\">=</span> getWidth<br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> h <span class=\"sy0\">=</span> getHeight<br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> spacing <span class=\"sy0\">=</span> <span class=\"nu0\">25</span><br/>\u00a0<br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">0</span> until <span class=\"br0\">(</span>w / spacing<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, i <span class=\"sy0\">*</span> spacing, w, i <span class=\"sy0\">*</span> spacing<span class=\"br0\">)</span><br/>                g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> spacing, <span class=\"nu0\">0</span>, i <span class=\"sy0\">*</span> spacing, w<span class=\"br0\">)</span><br/>              <span class=\"br0\">}</span><br/>              g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, h - <span class=\"nu0\">1</span>, w, h - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Color<span class=\"br0\">(</span>0xAAAAAA<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, w / <span class=\"nu0\">2</span>, w, w / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">drawLine</span><span class=\"br0\">(</span>w / <span class=\"nu0\">2</span>, <span class=\"nu0\">0</span>, w / <span class=\"nu0\">2</span>, w<span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> drawLegend<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>              g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>Color.<span class=\"me1\">black</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">setFont</span><span class=\"br0\">(</span>getFont<span class=\"br0\">)</span><br/>              g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"n = \"</span> + String.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>exp<span class=\"br0\">)</span>, getWidth - <span class=\"nu0\">150</span>, <span class=\"nu0\">45</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span><span class=\"st0\">\"a = b = 200\"</span>, getWidth - <span class=\"nu0\">150</span>, <span class=\"nu0\">75</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> drawEllipse<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> a <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><br/>              <span class=\"co1\">// calculate first quadrant</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> points <span class=\"sy0\">=</span> Array.<span class=\"me1\">tabulate</span><span class=\"br0\">(</span>a + <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">(</span>n <span class=\"sy0\">=&gt;</span><br/>                math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>a, exp<span class=\"br0\">)</span> - math.<span class=\"me1\">pow</span><span class=\"br0\">(</span>n, exp<span class=\"br0\">)</span>, <span class=\"nu0\">1</span> / exp<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Path2D.<span class=\"me1\">Double</span><br/>\u00a0<br/>              p.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>a, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">&lt;</span>- a to <span class=\"nu0\">0</span> by -<span class=\"nu0\">1</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>n, -points<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <span class=\"co1\">// mirror to others</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span>- points.<span class=\"me1\">indices</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>x, points<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>y <span class=\"sy0\">&lt;</span>- a to <span class=\"nu0\">0</span> by -<span class=\"nu0\">1</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>-y, points<span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>z <span class=\"sy0\">&lt;</span>- points.<span class=\"me1\">indices</span><span class=\"br0\">)</span> p.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>-z, -points<span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">translate</span><span class=\"br0\">(</span>getWidth / <span class=\"nu0\">2</span>, getHeight / <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">setStroke</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> BasicStroke<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Color<span class=\"br0\">(</span>0x25B0C4DE, <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              g.<span class=\"me1\">fill</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>              g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Color<span class=\"br0\">(</span>0xB0C4DE<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">// LightSteelBlue</span><br/>              g.<span class=\"me1\">draw</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>gg<span class=\"br0\">)</span><br/>            g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_ANTIALIASING</span>, RenderingHints.<span class=\"me1\">VALUE_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>            g.<span class=\"me1\">setRenderingHint</span><span class=\"br0\">(</span>RenderingHints.<span class=\"me1\">KEY_TEXT_ANTIALIASING</span>, RenderingHints.<span class=\"me1\">VALUE_TEXT_ANTIALIAS_ON</span><span class=\"br0\">)</span><br/>            drawGrid<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>            drawLegend<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>            drawEllipse<span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>          <span class=\"br0\">}</span><br/>\u00a0<br/>          <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> stateChanged<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> ChangeEvent<span class=\"br0\">)</span><span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> source <span class=\"sy0\">=</span> e.<span class=\"me1\">getSource</span>.<span class=\"me1\">asInstanceOf</span><span class=\"br0\">[</span>JSlider<span class=\"br0\">]</span><br/>            exp <span class=\"sy0\">=</span> source.<span class=\"me1\">getValue</span> / <span class=\"nu0\">2.0</span><br/>            repaint<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        setDefaultCloseOperation<span class=\"br0\">(</span>WindowConstants.<span class=\"me1\">EXIT_ON_CLOSE</span><span class=\"br0\">)</span><br/>        setResizable<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> panel <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> SuperEllipse<br/>        add<span class=\"br0\">(</span>panel, BorderLayout.<span class=\"me1\">CENTER</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> exponent <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> JSlider<span class=\"br0\">(</span>SwingConstants.<span class=\"me1\">HORIZONTAL</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>        exponent.<span class=\"me1\">addChangeListener</span><span class=\"br0\">(</span>panel<span class=\"br0\">)</span><br/>        exponent.<span class=\"me1\">setBackground</span><span class=\"br0\">(</span>Color.<span class=\"me1\">white</span><span class=\"br0\">)</span><br/>        exponent.<span class=\"me1\">setBorder</span><span class=\"br0\">(</span>BorderFactory.<span class=\"me1\">createEmptyBorder</span><span class=\"br0\">(</span><span class=\"nu0\">20</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">20</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        exponent.<span class=\"me1\">setMajorTickSpacing</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        exponent.<span class=\"me1\">setPaintLabels</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> labelTable <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> util.<span class=\"me1\">Hashtable</span><span class=\"br0\">[</span>Integer, JLabel<span class=\"br0\">]</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span>- <span class=\"nu0\">1</span> until <span class=\"nu0\">10</span><span class=\"br0\">)</span> labelTable.<span class=\"me1\">put</span><span class=\"br0\">(</span>i, <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> JLabel<span class=\"br0\">(</span>String.<span class=\"me1\">valueOf</span><span class=\"br0\">(</span>i <span class=\"sy0\">*</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>        exponent.<span class=\"me1\">setLabelTable</span><span class=\"br0\">(</span>labelTable<span class=\"br0\">)</span><br/>        add<span class=\"br0\">(</span>exponent, BorderLayout.<span class=\"me1\">SOUTH</span><span class=\"br0\">)</span><br/>        pack<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        setLocationRelativeTo<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">null</span></a><span class=\"br0\">)</span><br/>        setVisible<span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Sidef", "loc": 34, "block": "<pre class=\"ruby highlighted_source\">const <span class=\"br0\">(</span><br/>    a = <span class=\"nu0\">200</span>,<br/>    b = <span class=\"nu0\">200</span>,<br/>    n = <span class=\"nu0\">2.5</span>,<br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\"># y in terms of x</span><br/>func y<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">{</span> b <span class=\"sy0\">*</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">-</span> abs<span class=\"br0\">(</span>x<span class=\"sy0\">/</span>a<span class=\"br0\">)</span><span class=\"sy0\">**</span>n <span class=\"sy0\">-&gt;</span> root<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> int <span class=\"br0\">}</span><br/>\u00a0<br/>func pline<span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"sy0\">&lt;&lt;-</span><span class=\"st0\">\"EOT\"</span>;<br/>    <span class=\"sy0\">&lt;</span>polyline points=<span class=\"st0\">\"#{q.join(' ')}\"</span><br/>    style=<span class=\"st0\">\"fill:none; stroke:black; stroke-width:3\"</span> transform=<span class=\"st0\">\"translate(#{a}, #{b})\"</span> <span class=\"sy0\">/&gt;</span><br/>    EOT<br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Generate an SVG image</span><br/>say <span class=\"sy0\">&lt;&lt;-</span><span class=\"st0\">\"EOT\"</span><br/>    <span class=\"sy0\">&lt;</span>?xml version=<span class=\"st0\">\"1.0\"</span> standalone=<span class=\"st0\">\"no\"</span>?<span class=\"sy0\">&gt;</span><br/>    <span class=\"sy0\">&lt;</span>!DOCTYPE svg PUBLIC <span class=\"st0\">\"-//W3C//DTD SVG 1.1//EN\"</span> <span class=\"st0\">\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"</span><span class=\"sy0\">&gt;</span><br/>    <span class=\"sy0\">&lt;</span>svg height=<span class=\"st0\">\"#{b*2}\"</span> width=<span class=\"st0\">\"#{a*2}\"</span> version=<span class=\"st0\">\"1.1\"</span> xmlns=<span class=\"st0\">\"http://www.w3.org/2000/svg\"</span><span class=\"sy0\">&gt;</span><br/>    EOT<br/>\u00a0<br/><span class=\"co1\"># find point pairs for one quadrant</span><br/>var q = <span class=\"br0\">{</span> <span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> <span class=\"br0\">(</span>x, y<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"nu0\">200</span> <span class=\"st0\">`by`</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">[</span><br/>    pline<span class=\"br0\">(</span>q<span class=\"br0\">)</span>,<br/>    pline<span class=\"br0\">(</span>q\u00a0\u00bb<span class=\"sy0\">*</span>\u00ab\u00a0<span class=\"br0\">[</span> <span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"co1\"># flip and mirror</span><br/>    pline<span class=\"br0\">(</span>q\u00a0\u00bb<span class=\"sy0\">*</span>\u00ab\u00a0<span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"co1\"># for the other</span><br/>    pline<span class=\"br0\">(</span>q\u00a0\u00bb<span class=\"sy0\">*</span>\u00ab\u00a0<span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"co1\"># three quadrants</span><br/><span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span> .<span class=\"kw3\">print</span> <span class=\"br0\">}</span><br/>\u00a0<br/>say <span class=\"st0\">'&lt;/svg&gt;'</span></pre>"}, {"lang": "Stata", "loc": 4, "block": "<pre class=\"text highlighted_source\">sca a=200<br/>sca b=200<br/>sca n=2.5<br/>twoway function y=b*(1-(abs(x/a))^n)^(1/n), range(-200 200) || function y=-b*(1-(abs(x/a))^n)^(1/n), range(-200 200)</pre>"}, {"lang": "zkl", "loc": 9, "block": "<pre class=\"text highlighted_source\">fcn superEllipse(plot,n,color=0xff0000){ // we'll assume width &lt;= height<br/>   a,p:=(plot.w/2).toFloat(), 1.0/n;  // just calculate upper right quadrant <br/>   foreach x in ([0.0 .. a]){<br/>      y:=(a.pow(n) - x.pow(n)).pow(p);  // a==b&gt;0 --&gt; y=(a^n - x^n)^(1/n)<br/>      //println( (x/a).abs().pow(n) + (y/b).abs().pow(n) );  // sanity check<br/>      plot[x,y]=plot[-x,-y]=plot[-x,y]=plot[x,-y]=color;  // all 4 quadrants<br/>   }<br/>   plot<br/>}</pre>"}]}