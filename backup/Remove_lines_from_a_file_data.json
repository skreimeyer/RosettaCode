{"task": "Remove_lines_from_a_file", "blocks": [{"lang": "Ada", "loc": 41, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>, Ada.<span class=\"me1\">Directories</span>, Ada.<span class=\"me1\">Command_Line</span>, Ada.<span class=\"me1\">IO_Exceptions</span>;<br/><span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Remove_Lines_From_File <span class=\"kw1\">is</span><br/>   Temporary: <span class=\"kw3\">constant</span> String\u00a0:= <span class=\"st0\">\".tmp\"</span>;<br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">if</span> Ada.<span class=\"me1\">Command_Line</span>.<span class=\"me1\">Argument_Count</span> /= <span class=\"nu0\">3</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">raise</span> Constraint_Error;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">declare</span><br/>      Filename: String\u00a0:= Ada.<span class=\"me1\">Command_Line</span>.<span class=\"me1\">Argument</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>      First: Positive\u00a0:= Integer'Value<span class=\"br0\">(</span>Ada.<span class=\"me1\">Command_Line</span>.<span class=\"me1\">Argument</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      Last: Natural\u00a0:= Integer'Value<span class=\"br0\">(</span>Ada.<span class=\"me1\">Command_Line</span>.<span class=\"me1\">Argument</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> + First - <span class=\"nu0\">1</span>;<br/>      Input, Output: File_Type;<br/>      Line_Number: Positive\u00a0:= <span class=\"nu0\">1</span>;<br/>   <span class=\"kw1\">begin</span><br/>      Open<span class=\"br0\">(</span>Input, In_File, Filename<span class=\"br0\">)</span>; <span class=\"co1\">-- open original file for reading</span><br/>      Create<span class=\"br0\">(</span>Output, Out_File, Filename &amp; Temporary<span class=\"br0\">)</span>; <span class=\"co1\">-- write to temp. file</span><br/>      <span class=\"kw1\">while</span> <span class=\"kw2\">not</span> End_Of_File<span class=\"br0\">(</span>Input<span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">declare</span><br/>            Line: String\u00a0:= Get_Line<span class=\"br0\">(</span>Input<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">begin</span><br/>            <span class=\"kw1\">if</span> Line_Number &lt; First <span class=\"kw2\">or</span> <span class=\"kw1\">else</span> Line_Number &gt; Last <span class=\"kw1\">then</span><br/>               Put_Line<span class=\"br0\">(</span>Output, Line<span class=\"br0\">)</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span>;<br/>         Line_Number\u00a0:= Line_Number + <span class=\"nu0\">1</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      Close<span class=\"br0\">(</span>Input<span class=\"br0\">)</span>;<br/>      Close<span class=\"br0\">(</span>Output<span class=\"br0\">)</span>;<br/>      Ada.<span class=\"me1\">Directories</span>.<span class=\"me1\">Rename</span><span class=\"br0\">(</span>Old_Name =&gt; Filename &amp; Temporary,<br/>                             New_Name =&gt; Filename<span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span>;<br/><span class=\"kw1\">exception</span><br/>   <span class=\"kw3\">when</span> Constraint_Error | Ada.<span class=\"me1\">IO_Exceptions</span>.<span class=\"me1\">Name_Error</span> =&gt;<br/>      Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"usage: \"</span> &amp; Ada.<span class=\"me1\">Command_Line</span>.<span class=\"me1\">Command_Name</span> &amp;<br/>                 <span class=\"st0\">\" &lt;filename&gt; &lt;first&gt; &lt;length&gt;\"</span><span class=\"br0\">)</span>;<br/>      Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"  opens &lt;filename&gt; for reading and \"</span> &amp;<br/>                 <span class=\"st0\">\"&lt;filename&gt;\"</span> &amp; Temporary &amp; <span class=\"st0\">\" for temporary writing\"</span><span class=\"br0\">)</span>;<br/>      Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"  requires first &gt; 0, length &gt;= 0\"</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Remove_Lines_From_File;</pre>"}, {"lang": "ALGOL 68", "loc": 121, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># removes the specified number of lines from a file, starting at start line (numbered from 1) #</span><br/><span class=\"coMULTI\"># returns TRUE if successful, FALSE otherwise #</span><br/><span class=\"kw4\">PROC</span> remove lines <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> file name<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span> start line<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span> number of lines <span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>     <span class=\"kw2\">IF</span>  number of lines <span class=\"sy1\">&lt;</span> 0 <span class=\"kw16\">OR</span> start line <span class=\"sy1\">&lt;</span> 1<br/>     <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># invalid parameters #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"number of lines must be &gt;= 0 and start line must be &gt;= 1\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw7\">FALSE</span><br/>     <span class=\"kw2\">ELIF</span>  <span class=\"kw6\">FILE</span> temp file<span class=\"sy1\">;</span><br/>           <span class=\"kw22\">create</span><span class=\"br0\">(</span> temp file<span class=\"sy1\">,</span> <span class=\"kw21\">stand back channel</span> <span class=\"br0\">)</span> <span class=\"sy1\">/=</span> 0<br/>     <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># unable to create a temporary output file #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span>  <span class=\"st0\">\"Unable to create temporary file\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw7\">FALSE</span><br/>     <span class=\"kw2\">ELIF</span> <span class=\"kw8\">NOT</span> <span class=\"kw22\">reset possible</span><span class=\"br0\">(</span> temp file <span class=\"br0\">)</span><br/>     <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># rewinding the temporary file is not possible #</span><br/>        <span class=\"coMULTI\"># we would have to get its name ( with \"idf( temp file )\", close it and re-open it #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Temp file is not rewindable\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw7\">FALSE</span><br/>     <span class=\"kw2\">ELIF</span>  <span class=\"kw6\">FILE</span> input file<span class=\"sy1\">;</span><br/>           <span class=\"kw22\">open</span><span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw21\">stand in channel</span> <span class=\"br0\">)</span> <span class=\"sy1\">/=</span> 0<br/>     <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># failed to open the file #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span>  <span class=\"st0\">\"Unable to open \"</span><span class=\"st0\">\"\"</span> <span class=\"sy1\">+</span> file name <span class=\"sy1\">+</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw7\">FALSE</span><br/>     <span class=\"kw2\">ELSE</span><br/>        <span class=\"coMULTI\"># files opened OK #</span><br/>        <span class=\"kw3\">BOOL</span> at eof <span class=\"sy1\">:=</span> <span class=\"kw7\">FALSE</span><span class=\"sy1\">;</span><br/>        <span class=\"coMULTI\"># set the EOF handler for the original file #</span><br/>        <span class=\"kw22\">on logical file end</span><span class=\"br0\">(</span> input file<br/>                           <span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"kw4\">REF</span> <span class=\"kw6\">FILE</span> f <span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>                             <span class=\"kw2\">BEGIN</span><br/>                                 <span class=\"coMULTI\"># note that we reached EOF on the latest read #</span><br/>                                 at eof <span class=\"sy1\">:=</span> <span class=\"kw7\">TRUE</span><span class=\"sy1\">;</span><br/>                                 <span class=\"coMULTI\"># return TRUE so processing can continue #</span><br/>                                 <span class=\"kw7\">TRUE</span><br/>                             <span class=\"kw2\">END</span><br/>                           <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"coMULTI\"># copy the input file to the temp file #</span><br/>        <span class=\"kw2\">WHILE</span> <span class=\"kw3\">STRING</span> line<span class=\"sy1\">;</span><br/>              get<span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>              <span class=\"kw8\">NOT</span> at eof<br/>        <span class=\"kw2\">DO</span><br/>            put<span class=\"br0\">(</span> temp file<span class=\"sy1\">,</span>    <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>        <span class=\"coMULTI\"># copy the temp file back to the input, removing the specified lines #</span><br/>        <span class=\"kw22\">close</span><span class=\"br0\">(</span> input file <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span>   <span class=\"kw22\">open</span><span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw21\">stand out channel</span> <span class=\"br0\">)</span> <span class=\"sy1\">/=</span> 0<br/>        <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># failed to open the original file for output #</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Unable to open \"</span><span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"st0\">\" for output\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            <span class=\"kw7\">FALSE</span><br/>        <span class=\"kw2\">ELSE</span><br/>            <span class=\"coMULTI\"># opened OK - copy the temporary file #</span><br/>            reset<span class=\"br0\">(</span> temp file <span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># rewinds the input file #</span><br/>            at eof <span class=\"sy1\">:=</span> <span class=\"kw7\">FALSE</span><span class=\"sy1\">;</span><br/>            <span class=\"kw22\">on logical file end</span><span class=\"br0\">(</span> temp file<br/>                               <span class=\"sy1\">,</span> <span class=\"br0\">(</span> <span class=\"kw4\">REF</span> <span class=\"kw6\">FILE</span> f <span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>                                 <span class=\"kw2\">BEGIN</span><br/>                                     <span class=\"coMULTI\"># note that we reached EOF on the latest read #</span><br/>                                     at eof <span class=\"sy1\">:=</span> <span class=\"kw7\">TRUE</span><span class=\"sy1\">;</span><br/>                                     <span class=\"coMULTI\"># return TRUE so processing can continue #</span><br/>                                     <span class=\"kw7\">TRUE</span><br/>                                 <span class=\"kw2\">END</span><br/>                               <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            <span class=\"kw3\">INT</span> end line <span class=\"sy1\">=</span> <span class=\"br0\">(</span> start line <span class=\"sy1\">-</span> 1 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> number of lines<span class=\"sy1\">;</span><br/>            <span class=\"kw3\">INT</span> line number <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>            <span class=\"kw2\">WHILE</span> <span class=\"kw3\">STRING</span> line<span class=\"sy1\">;</span><br/>                  get<span class=\"br0\">(</span> temp file<span class=\"sy1\">,</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                  <span class=\"kw8\">NOT</span> at eof<br/>            <span class=\"kw2\">DO</span><br/>                <span class=\"coMULTI\"># have another line #</span><br/>                line number <span class=\"sy1\">+:=</span> 1<span class=\"sy1\">;</span><br/>                <span class=\"kw2\">IF</span> line number <span class=\"sy1\">&lt;</span> start line <span class=\"kw16\">OR</span> line number <span class=\"sy1\">&gt;</span> end line<br/>                <span class=\"kw2\">THEN</span><br/>                    put<span class=\"br0\">(</span> input file<span class=\"sy1\">,</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>                <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            <span class=\"coMULTI\"># close the files #</span><br/>            <span class=\"kw22\">close</span><span class=\"br0\">(</span>   input file <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            <span class=\"kw22\">scratch</span><span class=\"br0\">(</span> temp file  <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>            <span class=\"kw2\">IF</span>   line number <span class=\"sy1\">&lt;</span> start line<br/>            <span class=\"kw2\">THEN</span><br/>                <span class=\"coMULTI\"># didn't find the start line #</span><br/>                <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Specified start line (\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> start line<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">\") not in \"</span><span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"kw7\">FALSE</span><br/>            <span class=\"kw2\">ELIF</span> line number <span class=\"sy1\">&lt;</span> end line<br/>            <span class=\"kw2\">THEN</span><br/>                <span class=\"coMULTI\"># the ending line was not in the file #</span><br/>                <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Final omitted line not in the file \"</span><span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                <span class=\"kw7\">FALSE</span><br/>            <span class=\"kw2\">ELSE</span><br/>                <span class=\"coMULTI\"># successful operation #</span><br/>                <span class=\"kw7\">TRUE</span><br/>            <span class=\"kw2\">FI</span><br/>        <span class=\"kw2\">FI</span><br/>     <span class=\"kw2\">FI</span> <span class=\"coMULTI\"># remove lines #</span> <span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># test the line removal #</span><br/><span class=\"kw2\">BEGIN</span><br/>    <span class=\"kw6\">FILE</span> t<span class=\"sy1\">;</span><br/>    <span class=\"kw22\">open</span><span class=\"br0\">(</span> t<span class=\"sy1\">,</span> <span class=\"st0\">\"test.txt\"</span><span class=\"sy1\">,</span> <span class=\"kw21\">stand out channel</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Before...\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> 10 <span class=\"kw2\">DO</span><br/>        <span class=\"kw3\">STRING</span> line <span class=\"sy1\">=</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> i<span class=\"sy1\">,</span> <span class=\"sy1\">-</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> i <span class=\"kw12\">MOD</span> 5 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> 3 <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        put<span class=\"br0\">(</span> t<span class=\"sy1\">,</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span>  <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">close</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    remove lines<span class=\"br0\">(</span> <span class=\"st0\">\"test.txt\"</span><span class=\"sy1\">,</span> 2<span class=\"sy1\">,</span> 3 <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"After...\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">open</span><span class=\"br0\">(</span> t<span class=\"sy1\">,</span> <span class=\"st0\">\"test.txt\"</span><span class=\"sy1\">,</span> <span class=\"kw21\">stand in channel</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span>  7 <span class=\"kw2\">DO</span><br/>        <span class=\"kw3\">STRING</span> line<span class=\"sy1\">;</span><br/>        get<span class=\"br0\">(</span> t<span class=\"sy1\">,</span> <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span>  <span class=\"br0\">(</span> line<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">close</span><span class=\"br0\">(</span> t <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"----\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">END</span></pre>"}, {"lang": "AutoHotkey", "loc": 11, "block": "<pre class=\"ahk highlighted_source\">RemoveLines<span class=\"br0\">(</span>filename<span class=\"sy0\">,</span> startingLine<span class=\"sy0\">,</span> numOfLines<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>       <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Read<span class=\"sy0\">,</span> <span class=\"re0\">%filename%</span><br/>               <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">&lt;</span> StartingLine <span class=\"br0\">)</span><br/>                       || <span class=\"br0\">(</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"sy0\">&gt;=</span> StartingLine <span class=\"sy0\">+</span> numOfLines <span class=\"br0\">)</span><br/>                               ret <span class=\"sy0\">.=</span> <span class=\"st0\">\"`r`n\"</span> <span class=\"sy0\">.</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopReadLine\"><span class=\"kw2\">A_LoopReadLine</span></a><br/>       <a href=\"http://www.autohotkey.com/docs/commands/FileDelete.htm\"><span class=\"kw3\">FileDelete</span></a><span class=\"sy0\">,</span>\u00a0% FileName<br/>       <a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,</span>\u00a0% <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">SubStr</span></a><span class=\"br0\">(</span>ret<span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\u00a0% FileName<br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/SetWorkingDir.htm\"><span class=\"kw3\">SetWorkingDir</span></a><span class=\"sy0\">,</span>\u00a0% <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScriptDir\"><span class=\"kw2\">A_ScriptDir</span></a><br/>RemoveLines<span class=\"br0\">(</span><span class=\"st0\">\"test.txt\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre>"}, {"lang": "AWK", "loc": 45, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f REMOVE_LINES_FROM_A_FILE.AWK</span><br/><span class=\"co1\"># show files after lines are removed:</span><br/><span class=\"co1\">#   GAWK \"FNR==1{print(FILENAME)};{print(FNR,$0)}\" TEST1 TEST2 TEST3</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    build_test_data<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    remove_lines<span class=\"br0\">(</span><span class=\"st0\">\"TEST0\"</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    remove_lines<span class=\"br0\">(</span><span class=\"st0\">\"TEST1\"</span>,<span class=\"nu0\">3</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>    remove_lines<span class=\"br0\">(</span><span class=\"st0\">\"TEST2\"</span>,<span class=\"nu0\">9</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    remove_lines<span class=\"br0\">(</span><span class=\"st0\">\"TEST3\"</span>,<span class=\"nu0\">11</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    exit<span class=\"br0\">(</span>errors<span class=\"sy3\">+</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> build_test_data<span class=\"br0\">(</span>  fn,i,j<span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\"># create 3 files with 10 lines each</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>; i<span class=\"sy2\">&lt;=</span><span class=\"nu0\">3</span>; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      fn = <span class=\"st0\">\"TEST\"</span> i<br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j=<span class=\"nu0\">1</span>; j<span class=\"sy2\">&lt;=</span><span class=\"nu0\">10</span>; j<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"line\u00a0%d<span class=\"es0\">\\n</span>\"</span>,j<span class=\"br0\">)</span> <span class=\"sy2\">&gt;</span>fn<br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw5\">close</span><span class=\"br0\">(</span>fn<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw6\">function</span> remove_lines<span class=\"br0\">(</span>fn,start,number_of_lines,  arr,<span class=\"kw3\">fnr</span>,i,n,rec,stop<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    stop = start <span class=\"sy3\">+</span> number_of_lines <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw5\">getline</span> rec <span class=\"sy2\">&lt;</span>fn <span class=\"sy2\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\"># read file</span><br/>      <span class=\"kw3\">fnr</span><span class=\"sy3\">++</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">fnr</span> <span class=\"sy2\">&lt;</span> start <span class=\"sy1\">||</span> <span class=\"kw3\">fnr</span> <span class=\"sy2\">&gt;</span> stop<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        arr<span class=\"br0\">[</span><span class=\"sy3\">++</span>n<span class=\"br0\">]</span> = rec<br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw5\">close</span><span class=\"br0\">(</span>fn<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">fnr</span> <span class=\"sy2\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"error: file\u00a0%s not found<span class=\"es0\">\\n</span>\"</span>,fn<span class=\"br0\">)</span><br/>      errors = <span class=\"nu0\">1</span><br/>      <span class=\"kw6\">return</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>; i<span class=\"sy2\">&lt;=</span>n; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\"># write file</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es0\">\\n</span>\"</span>,arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy2\">&gt;</span>fn<br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw5\">close</span><span class=\"br0\">(</span>fn<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>stop <span class=\"sy2\">&gt;</span> <span class=\"kw3\">fnr</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"error: file\u00a0%s trying to remove nonexistent lines<span class=\"es0\">\\n</span>\"</span>,fn<span class=\"br0\">)</span><br/>      errors = <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "BASIC", "loc": 309, "block": "<pre class=\"qbasic highlighted_source\">\u00a0<br/><span class=\"co1\">' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' '</span><br/><span class=\"co1\">' Remove File Lines V1.1                            '</span><br/><span class=\"co1\">'                                                   '</span><br/><span class=\"co1\">' Developed by A. David Garza Mar\u00edn in VB-DOS for   '</span><br/><span class=\"co1\">' RosettaCode. November 30, 2016.                   '</span><br/><span class=\"co1\">'                                                   '</span><br/><span class=\"co1\">' Date      | Change                                '</span><br/><span class=\"co1\">'-------------------------------------------------- '</span><br/><span class=\"co1\">' 2016/11/30| Original version                      '</span><br/><span class=\"co1\">' 2016/12/30| Added functionality to read parameters'</span><br/><span class=\"co1\">'           | from Command Line                     '</span><br/><span class=\"co1\">' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' '</span><br/>\u00a0<br/><span class=\"co1\">'OPTION _EXPLICIT ' For QB45</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckoption.shtml\"><span class=\"kw3\">OPTION</span></a> EXPLICIT <span class=\"co1\">' For VBDOS, PDS 7.1</span><br/>\u00a0<br/><span class=\"co1\">' SUBs and FUNCTIONs</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> DeleteLinesFromFile% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Start <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> HowMany <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> FileExists% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> GetDummyFile$ <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> getFileName$ <span class=\"br0\">(</span>CommandString <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> getHowManyLines&amp; <span class=\"br0\">(</span>CommandLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> getStartPoint&amp; <span class=\"br0\">(</span>CommandLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> ErrorMessage$ <span class=\"br0\">(</span>WhichError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> CountLines&amp; <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">' Var</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iOk <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iErr <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> lStart <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> lHowMany <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> lSize <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sCommand <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/><span class=\"co1\">' Const</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckconst.shtml\"><span class=\"kw3\">CONST</span></a> ProgramName <span class=\"sy0\">=</span> <span class=\"st0\">\"RemFLine (Remove File Lines) Enhanced V1.1\"</span><br/>\u00a0<br/><span class=\"co1\">' ----------------------------- Main program cycle --------------------------------</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckcls.shtml\"><span class=\"kw3\">CLS</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> ProgramName<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"This program will remove as many lines of a text file as you state, starting\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"with the line number you also state. If the starting line number is beyond\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"total lines in the text file stated, then the process will be aborted. If the\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"quantity of lines stated to be deleted is beyond the total lines in the text\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"file, the process also will be aborted. The program will give you a message\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"if everything ran ok or if any error happened. Includes a function to count\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"how many lines has the intended file.\"</span><br/><span class=\"co1\">' Verifies if parameters are specified</span><br/>sCommand <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckcommand%24.shtml\"><span class=\"kw3\">COMMAND$</span></a><br/><span class=\"kw1\">IF</span> sCommand <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>  sFile <span class=\"sy0\">=</span> getFileName$<span class=\"br0\">(</span>sCommand<span class=\"br0\">)</span><br/>  lSize <span class=\"sy0\">=</span> CountLines&amp;<span class=\"br0\">(</span>sFile<span class=\"br0\">)</span><br/>  lStart <span class=\"sy0\">=</span> getStartPoint&amp;<span class=\"br0\">(</span>sCommand<span class=\"br0\">)</span>  <span class=\"co1\">' Defaults to 1</span><br/>  lHowMany <span class=\"sy0\">=</span> getHowManyLines&amp;<span class=\"br0\">(</span>sCommand<span class=\"br0\">)</span> <span class=\"co1\">' Defaults to 1</span><br/><span class=\"kw1\">ELSE</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <span class=\"st0\">\"Please, type the name of the file\"</span>; sFile<br/>  sFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckltrim%24.shtml\"><span class=\"kw3\">LTRIM$</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckrtrim%24.shtml\"><span class=\"kw3\">RTRIM$</span></a><span class=\"br0\">(</span>sFile<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> sFile <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>    lSize <span class=\"sy0\">=</span> CountLines&amp;<span class=\"br0\">(</span>sFile<span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> lSize <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Delete starting on which line (Default=1, Max=\"</span>; lSize; <span class=\"st0\">\")\"</span>;<br/>      <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> lStart<br/>\u00a0<br/>      <span class=\"kw1\">IF</span> lStart <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> lStart <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">IF</span> lStart <span class=\"sy0\">&lt;</span> lSize <span class=\"kw1\">THEN</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"How many lines do you want to remove (Default=1, Max=\"</span>; <span class=\"br0\">(</span>lSize <span class=\"sy0\">-</span> lStart<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>; <span class=\"st0\">\")\"</span>;<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> lHowMany<br/>        <span class=\"kw1\">IF</span> lHowMany <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> lHowMany <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>      <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> <span class=\"st0\">\"Erasing \"</span>; lHowMany; <span class=\"st0\">\"lines from \"</span>; sFile; <span class=\"st0\">\" starting on line\"</span>; lStart; <span class=\"st0\">\".\"</span><br/><span class=\"kw1\">IF</span> lSize <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>  <span class=\"kw1\">IF</span> lHowMany <span class=\"sy0\">+</span> lStart <span class=\"sy0\">&lt;=</span> lSize <span class=\"kw1\">THEN</span><br/>    iOk <span class=\"sy0\">=</span> DeleteLinesFromFile%<span class=\"br0\">(</span>sFile<span class=\"sy0\">,</span> lStart<span class=\"sy0\">,</span> lHowMany<span class=\"br0\">)</span><br/>  <span class=\"kw1\">ELSEIF</span> lHowMany <span class=\"sy0\">+</span> lStart <span class=\"sy0\">&gt;</span> lSize <span class=\"kw1\">THEN</span><br/>    iOk <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">ELSEIF</span> lStart <span class=\"sy0\">&gt;</span> lSize <span class=\"kw1\">THEN</span><br/>    iOk <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/><span class=\"kw1\">ELSEIF</span> lSize <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span><br/>  iOk <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/><span class=\"kw1\">IF</span> lSize <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span><br/>  iOk <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><br/><span class=\"kw1\">ELSEIF</span> lSize <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>  iOk <span class=\"sy0\">=</span> <span class=\"nu0\">4</span>  <span class=\"co1\">' The file is not a text file</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/><span class=\"kw1\">IF</span> sFile <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span><br/>  iOk <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>  <span class=\"co1\">' Null file name not allowed</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> ErrorMessage$<span class=\"br0\">(</span>iOk<span class=\"br0\">)</span><br/><span class=\"co1\">'----------------End of Main program Cycle ----------------</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a><br/>\u00a0<br/>FileError:<br/>    iErr <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckerr.shtml\"><span class=\"kw3\">ERR</span></a><br/><span class=\"kw1\">RESUME</span> <span class=\"kw1\">NEXT</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> CountLines&amp; <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> l <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> li <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> j <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> lFileSize <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> lLines <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> strR <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>    <span class=\"co1\">' This function will count how many lines has the file</span><br/>    <span class=\"kw1\">IF</span> FileExists%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>        strR <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckchr%24.shtml\"><span class=\"kw3\">CHR$</span></a><span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span><br/>        li <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>        iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>        sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckspace%24.shtml\"><span class=\"kw3\">SPACE$</span></a><span class=\"br0\">(</span><span class=\"nu0\">128</span><span class=\"br0\">)</span><br/>        lLines <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckbinary.shtml\"><span class=\"kw3\">BINARY</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>          lFileSize <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qcklof.shtml\"><span class=\"kw3\">LOF</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span><br/>          <span class=\"kw1\">DO</span><br/>            <span class=\"kw1\">IF</span> <span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckloc.shtml\"><span class=\"kw3\">LOC</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> lFileSize <span class=\"kw1\">THEN</span><br/>              sLine <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckspace%24.shtml\"><span class=\"kw3\">SPACE$</span></a><span class=\"br0\">(</span>lFileSize <span class=\"sy0\">-</span> <a href=\"http://www.qbasicnews.com/qboho/qckloc.shtml\"><span class=\"kw3\">LOC</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>            <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>              <a href=\"http://www.qbasicnews.com/qboho/qckget.shtml\"><span class=\"kw3\">GET</span></a> #iFile<span class=\"sy0\">,</span> <span class=\"sy0\">,</span> sLine<br/>              <span class=\"kw1\">GOSUB</span> AnalizeLine<br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>          <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>sLine<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">128</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> iFile<br/>    <span class=\"kw1\">ELSE</span><br/>        lLines <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>    CountLines&amp; <span class=\"sy0\">=</span> lLines<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckexit.shtml\"><span class=\"kw3\">EXIT</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/>AnalizeLine:<br/>   li <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>   <span class=\"kw1\">DO</span><br/>     l <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>li<span class=\"sy0\">,</span> sLine<span class=\"sy0\">,</span> strR<span class=\"br0\">)</span><br/>     <span class=\"kw1\">IF</span> l <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>       lLines <span class=\"sy0\">=</span> lLines <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>       li <span class=\"sy0\">=</span> l <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>     <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>   <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> l <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">RETURN</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> DeleteLinesFromFile% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> Start <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> HowMany <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> lCount <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> iFile2 <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> lhm <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> iError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> sDummyFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>    <span class=\"kw1\">IF</span> FileExists%<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>        sDummyFile <span class=\"sy0\">=</span> GetDummyFile$<span class=\"br0\">(</span>WhichFile<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">' It is assumed a text file</span><br/>        iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>\u00a0<br/>        iFile2 <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> sDummyFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckoutput.shtml\"><span class=\"kw3\">OUTPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile2<br/>\u00a0<br/>        lhm <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">DO</span> <span class=\"kw1\">WHILE</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckeof.shtml\"><span class=\"kw3\">EOF</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckline.shtml\"><span class=\"kw3\">LINE</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> #iFile<span class=\"sy0\">,</span> sLine<br/>            lCount <span class=\"sy0\">=</span> lCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">IF</span> lCount <span class=\"sy0\">&gt;=</span> Start <a href=\"http://www.qbasicnews.com/qboho/qckand.shtml\"><span class=\"kw3\">AND</span></a> lhm <span class=\"sy0\">&lt;</span> HowMany <span class=\"kw1\">THEN</span><br/>                lhm <span class=\"sy0\">=</span> lhm <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">ELSE</span><br/>                <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> #iFile2<span class=\"sy0\">,</span> sLine<br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>        <span class=\"kw1\">LOOP</span><br/>\u00a0<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> iFile2<span class=\"sy0\">,</span> iFile<br/>\u00a0<br/>        <span class=\"co1\">' Check if everything went ok or not</span><br/>        iError <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">IF</span> lCount <span class=\"sy0\">&lt;</span> Start <span class=\"kw1\">THEN</span><br/>            iError <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"co1\">' Full file is shorter than the start line stated,</span><br/>                       <span class=\"co1\">'  process will be aborted.</span><br/>        <span class=\"kw1\">ELSEIF</span> lhm <span class=\"sy0\">&lt;</span> HowMany <span class=\"kw1\">THEN</span><br/>            iError <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"co1\">' File was shorter than lines requested to be removed,</span><br/>                       <span class=\"co1\">'  process will be aborted.</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>        <span class=\"kw1\">IF</span> iError <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>          <a href=\"http://www.qbasicnews.com/qboho/qckkill.shtml\"><span class=\"kw3\">KILL</span></a> sDummyFile  <span class=\"co1\">' Process aborted</span><br/>        <span class=\"kw1\">ELSE</span><br/>          <a href=\"http://www.qbasicnews.com/qboho/qckkill.shtml\"><span class=\"kw3\">KILL</span></a> WhichFile<br/>          <a href=\"http://www.qbasicnews.com/qboho/qckname.shtml\"><span class=\"kw3\">NAME</span></a> sDummyFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> WhichFile<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <span class=\"kw1\">ELSE</span><br/>      iError <span class=\"sy0\">=</span> <span class=\"nu0\">3</span> <span class=\"co1\">' The file doesn't exist. The process is aborted.</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>    DeleteLinesFromFile% <span class=\"sy0\">=</span> iError<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> ErrorMessage$ <span class=\"br0\">(</span>WhichError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sError <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>    <span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span> WhichError<br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">0</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"Everything went Ok. Lines removed from file.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">1</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"File is shorter than the number of lines stated to remove. Process aborted.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">2</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"Whole file is shorter than the starting point stated. Process aborted.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">3</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"File doesn't exist. Process aborted.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">4</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"The file doesn't seem to be a text file. Process aborted.\"</span><br/>      <span class=\"kw1\">CASE</span> <span class=\"nu0\">5</span>: sError <span class=\"sy0\">=</span> <span class=\"st0\">\"You need to provide a valid file name, please.\"</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">SELECT</span><br/>\u00a0<br/>    ErrorMessage$ <span class=\"sy0\">=</span> sError<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> FileExists% <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> iItExists <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckshared.shtml\"><span class=\"kw3\">SHARED</span></a> iErr <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> FileError<br/>    iFile <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckfreefile.shtml\"><span class=\"kw3\">FREEFILE</span></a><br/>    iErr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> WhichFile <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckbinary.shtml\"><span class=\"kw3\">BINARY</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> #iFile<br/>    <span class=\"kw1\">IF</span> iErr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        iItExists <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qcklof.shtml\"><span class=\"kw3\">LOF</span></a><span class=\"br0\">(</span>iFile<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>        <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> #iFile<br/>\u00a0<br/>        <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> iItExists <span class=\"kw1\">THEN</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckkill.shtml\"><span class=\"kw3\">KILL</span></a> WhichFile<br/>        <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> <span class=\"nu0\">0</span><br/>    FileExists% <span class=\"sy0\">=</span> iItExists<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> GetDummyFile$ <span class=\"br0\">(</span>WhichFile <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>    <span class=\"co1\">' Var</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> j <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/>    <span class=\"co1\">' Gets the path specified in WhichFile</span><br/>    i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">DO</span><br/>        j <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> WhichFile<span class=\"sy0\">,</span> <span class=\"st0\">\"\\\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> i <span class=\"sy0\">=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">LOOP</span> <span class=\"kw1\">UNTIL</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    GetDummyFile$ <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>WhichFile<span class=\"sy0\">,</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"$dummyf$.tmp\"</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> getFileName$ <span class=\"br0\">(</span>CommandString <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> sFileName <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>\u00a0<br/>  i <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>CommandString<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    sFileName <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>CommandString<span class=\"sy0\">,</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ELSEIF</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>CommandString<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    sFileName <span class=\"sy0\">=</span> CommandString<br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  getFileName$ <span class=\"sy0\">=</span> sFileName<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> getHowManyLines&amp; <span class=\"br0\">(</span>CommandLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> j <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> l <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><br/>\u00a0<br/>  i <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>CommandLine<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    j <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> CommandLine<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>      l <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">ELSE</span><br/>      l <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckclng.shtml\"><span class=\"kw3\">CLNG</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckval.shtml\"><span class=\"kw3\">VAL</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>CommandLine<span class=\"sy0\">,</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  getHowManyLines&amp; <span class=\"sy0\">=</span> l<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> getStartPoint&amp; <span class=\"br0\">(</span>CommandLine <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>  <span class=\"co1\">' Var</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><span class=\"sy0\">,</span> j <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> l <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><br/>\u00a0<br/>  i <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>CommandLine<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">IF</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>    j <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> CommandLine<span class=\"sy0\">,</span> <span class=\"st0\">\",\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">IF</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> j <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>CommandLine<span class=\"br0\">)</span><br/>    l <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckclng.shtml\"><span class=\"kw3\">CLNG</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckval.shtml\"><span class=\"kw3\">VAL</span></a><span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>CommandLine<span class=\"sy0\">,</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> j <span class=\"sy0\">-</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">ELSE</span><br/>    i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>  <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>\u00a0<br/>  getStartPoint&amp; <span class=\"sy0\">=</span> l<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "C", "loc": 61, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt; /* for atoi() and malloc() */</span><br/><span class=\"co2\">#include &lt;string.h&gt; /* for memmove() */</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Conveniently print to standard error and exit nonzero. */</span><br/><span class=\"co2\">#define ERROR(fmt, arg) return fprintf(stderr, fmt \"\\n\", arg)</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argc<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>argv<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    FILE <span class=\"sy0\">*</span>fp<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>buf<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">size_t</span> sz<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> start<span class=\"sy0\">,</span> count<span class=\"sy0\">,</span> lines <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> dest <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> src <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> pos <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Initialization and sanity checks */</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>argc <span class=\"sy0\">!=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>        ERROR<span class=\"br0\">(</span><span class=\"st0\">\"Usage:\u00a0%s &lt;file&gt; &lt;start&gt; &lt;count&gt;\"</span><span class=\"sy0\">,</span> argv<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>count <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>argv<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/* We're a no-op. */</span><br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>start <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>argv<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        ERROR<span class=\"br0\">(</span><span class=\"st0\">\"Error: &lt;start&gt; (%d) must be positive\"</span><span class=\"sy0\">,</span> start<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>fp <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html\"><span class=\"kw3\">fopen</span></a><span class=\"br0\">(</span>argv<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span><br/>        ERROR<span class=\"br0\">(</span><span class=\"st0\">\"No such file:\u00a0%s\"</span><span class=\"sy0\">,</span> argv<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Determine filesize and allocate a buffer accordingly. */</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fseek.html\"><span class=\"kw3\">fseek</span></a><span class=\"br0\">(</span>fp<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> SEEK_END<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    sz <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/ftell.html\"><span class=\"kw3\">ftell</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    buf <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>sz <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rewind.html\"><span class=\"kw3\">rewind</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Fill the buffer, count lines, and remember a few important offsets. */</span><br/>    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>buf<span class=\"br0\">[</span><span class=\"sy0\">++</span>pos<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fgetc.html\"><span class=\"kw3\">fgetc</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> EOF<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>buf<span class=\"br0\">[</span>pos<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"sy0\">++</span>lines<span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>lines <span class=\"sy0\">==</span> start<span class=\"br0\">)</span> dest <span class=\"sy0\">=</span> pos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>lines <span class=\"sy0\">==</span> start <span class=\"sy0\">+</span> count<span class=\"br0\">)</span> src <span class=\"sy0\">=</span> pos <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* We've been asked to do something weird; clean up and bail. */</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>start <span class=\"sy0\">+</span> count <span class=\"sy0\">&gt;</span> lines<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>buf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        ERROR<span class=\"br0\">(</span><span class=\"st0\">\"Error: invalid parameters for file with\u00a0%d lines\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">--</span>lines<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Overwrite the lines to be deleted with the survivors. */</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/memmove.html\"><span class=\"kw3\">memmove</span></a><span class=\"br0\">(</span>buf <span class=\"sy0\">+</span> dest<span class=\"sy0\">,</span> buf <span class=\"sy0\">+</span> src<span class=\"sy0\">,</span> pos <span class=\"sy0\">-</span> src<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"coMULTI\">/* Reopen the file and write back just enough of the buffer. */</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/freopen.html\"><span class=\"kw3\">freopen</span></a><span class=\"br0\">(</span>argv<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st0\">\"w\"</span><span class=\"sy0\">,</span> fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fwrite.html\"><span class=\"kw3\">fwrite</span></a><span class=\"br0\">(</span>buf<span class=\"sy0\">,</span> pos <span class=\"sy0\">-</span> src <span class=\"sy0\">+</span> dest<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>buf<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>fp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 12, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.IO</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Rosetta<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> RemoveLines<span class=\"br0\">(</span><span class=\"st0\">\"foobar.txt\"</span>, start<span class=\"sy0\">:</span> <span class=\"nu0\">1</span>, count<span class=\"sy0\">:</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> RemoveLines<span class=\"br0\">(</span><span class=\"kw4\">string</span> filename, <span class=\"kw4\">int</span> start, <span class=\"kw4\">int</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>        File<span class=\"sy0\">.</span><span class=\"me1\">WriteAllLines</span><span class=\"br0\">(</span>filename, File<span class=\"sy0\">.</span><span class=\"me1\">ReadAllLines</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/>            <span class=\"sy0\">.</span><span class=\"kw1\">Where</span><span class=\"br0\">(</span><span class=\"br0\">(</span>line, index<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> index <span class=\"sy0\">&lt;</span> start <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> index <span class=\"sy0\">&gt;=</span> start <span class=\"sy0\">+</span> count <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 58, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;fstream&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;cstdlib&gt;</span><br/><span class=\"co2\">#include &lt;list&gt;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> deleteLines<span class=\"br0\">(</span> <span class=\"kw4\">const</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span> <span class=\"sy3\">&amp;</span> , <span class=\"kw4\">int</span> , <span class=\"kw4\">int</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span> <span class=\"sy2\">*</span> argv<span class=\"br0\">[</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> argc <span class=\"sy3\">!</span><span class=\"sy1\">=</span> <span class=\"nu0\">4</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cerr</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Error! Invoke with &lt;deletelines filename startline skipnumber&gt;!<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">return</span> <span class=\"nu0\">1</span> <span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> filename<span class=\"br0\">(</span> argv<span class=\"br0\">[</span> <span class=\"nu0\">1</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">int</span> startfrom <span class=\"sy1\">=</span> <span class=\"kw3\">atoi</span><span class=\"br0\">(</span> argv<span class=\"br0\">[</span> <span class=\"nu0\">2</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw4\">int</span> howmany <span class=\"sy1\">=</span> <span class=\"kw3\">atoi</span><span class=\"br0\">(</span> argv<span class=\"br0\">[</span> <span class=\"nu0\">3</span> <span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   deleteLines <span class=\"br0\">(</span> filename , startfrom , howmany <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> deleteLines<span class=\"br0\">(</span> <span class=\"kw4\">const</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span> <span class=\"sy3\">&amp;</span> filename , <span class=\"kw4\">int</span> start , <span class=\"kw4\">int</span> skip <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">ifstream</span> infile<span class=\"br0\">(</span> filename.<span class=\"me1\">c_str</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> , std<span class=\"sy4\">::</span><span class=\"me2\">ios</span><span class=\"sy4\">::</span><span class=\"me2\">in</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span> infile.<span class=\"me1\">is_open</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      std<span class=\"sy4\">::</span><span class=\"me2\">string</span> line <span class=\"sy4\">;</span><br/>      std<span class=\"sy4\">::</span><span class=\"me2\">list</span><span class=\"sy1\">&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy1\">&gt;</span> filelines <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">while</span> <span class=\"br0\">(</span> infile <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t getline<span class=\"br0\">(</span> infile , line <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>\t filelines.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> line <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>      infile.<span class=\"me1\">close</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> start <span class=\"sy1\">&gt;</span> filelines.<span class=\"me1\">size</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t std<span class=\"sy4\">::</span><span class=\"kw3\">cerr</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Error! Starting to delete lines past the end of the file!<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>\t <span class=\"kw1\">return</span> <span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span> start <span class=\"sy2\">+</span> skip <span class=\"br0\">)</span> <span class=\"sy1\">&gt;</span> filelines.<span class=\"me1\">size</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t std<span class=\"sy4\">::</span><span class=\"kw3\">cerr</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Error! Trying to delete lines past the end of the file!<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>\t <span class=\"kw1\">return</span> <span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>      std<span class=\"sy4\">::</span><span class=\"me2\">list</span><span class=\"sy1\">&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">iterator</span> deletebegin <span class=\"sy1\">=</span> filelines.<span class=\"me1\">begin</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> , deleteend <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> start <span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t deletebegin<span class=\"sy2\">++</span> <span class=\"sy4\">;</span><br/>      deleteend <span class=\"sy1\">=</span> deletebegin <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;</span> skip <span class=\"sy4\">;</span> i<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t deleteend<span class=\"sy2\">++</span> <span class=\"sy4\">;</span><br/>      filelines.<span class=\"me1\">erase</span><span class=\"br0\">(</span> deletebegin , deleteend <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>      std<span class=\"sy4\">::</span><span class=\"me2\">ofstream</span> outfile<span class=\"br0\">(</span> filename.<span class=\"me1\">c_str</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> , std<span class=\"sy4\">::</span><span class=\"me2\">ios</span><span class=\"sy4\">::</span><span class=\"me2\">out</span> <span class=\"sy3\">|</span> std<span class=\"sy4\">::</span><span class=\"me2\">ios</span><span class=\"sy4\">::</span><span class=\"me2\">trunc</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span> outfile.<span class=\"me1\">is_open</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t <span class=\"kw1\">for</span> <span class=\"br0\">(</span> std<span class=\"sy4\">::</span><span class=\"me2\">list</span><span class=\"sy1\">&lt;</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">const_iterator</span> sli <span class=\"sy1\">=</span> filelines.<span class=\"me1\">begin</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>\t       sli <span class=\"sy3\">!</span><span class=\"sy1\">=</span> filelines.<span class=\"me1\">end</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span> sli<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    outfile <span class=\"sy1\">&lt;&lt;</span> <span class=\"sy2\">*</span>sli <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>      <span class=\"br0\">}</span><br/>      outfile.<span class=\"me1\">close</span><span class=\"br0\">(</span> <span class=\"br0\">)</span> <span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cerr</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Error! Could not find file \"</span> <span class=\"sy1\">&lt;&lt;</span> filename <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"\u00a0!<span class=\"es1\">\\n</span>\"</span> <span class=\"sy4\">;</span><br/>      <span class=\"kw1\">return</span> <span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 13, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span>require '<span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>java<span class=\"sy0\">.</span>io\u00a0:<span class=\"me1\">as</span> jio<span class=\"br0\">]</span><br/>         '<span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>string\u00a0:<span class=\"me1\">as</span> <span class=\"kw1\">str</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> remove<span class=\"sy0\">-</span>lines1 <span class=\"br0\">[</span>filepath start nskip<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>lines <span class=\"br0\">(</span><span class=\"kw1\">str</span><span class=\"sy0\">/</span>split<span class=\"sy0\">-</span>lines <span class=\"br0\">(</span>slurp filepath<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        new<span class=\"sy0\">-</span>lines <span class=\"br0\">(</span><span class=\"kw1\">concat</span> <span class=\"br0\">(</span><span class=\"kw1\">take</span> <span class=\"br0\">(</span><span class=\"kw1\">dec</span> start<span class=\"br0\">)</span> lines<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"kw1\">drop</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"kw1\">dec</span> start<span class=\"br0\">)</span> nskip<span class=\"br0\">)</span> lines<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        diff <span class=\"br0\">(</span><span class=\"sy0\">-</span> <span class=\"br0\">(</span><span class=\"kw1\">count</span> lines<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">count</span> new<span class=\"sy0\">-</span>lines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">when-not</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> diff<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>println <span class=\"st0\">\"WARN: You are trying to remove lines beyond EOF\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">with-open</span> <span class=\"br0\">[</span>wrt <span class=\"br0\">(</span>jio<span class=\"sy0\">/</span>writer <span class=\"br0\">(</span><span class=\"kw1\">str</span> filepath <span class=\"st0\">\".tmp\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span><span class=\"sy0\">.</span>write wrt <span class=\"br0\">(</span><span class=\"kw1\">str</span><span class=\"sy0\">/</span>join <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> new<span class=\"sy0\">-</span>lines<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">.</span>renameTo <span class=\"br0\">(</span>jio<span class=\"sy0\">/</span>file <span class=\"br0\">(</span><span class=\"kw1\">str</span> filepath <span class=\"st0\">\".tmp\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>jio<span class=\"sy0\">/</span>file filepath<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Common Lisp", "loc": 25, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> remove-lines <span class=\"br0\">(</span>filename start num<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>tmp-filename  <span class=\"br0\">(</span>concatenate 'string filename <span class=\"st0\">\".tmp\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>lines-omitted <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">;; Open a temp file to write the result to</span><br/>    <span class=\"br0\">(</span>with-open-file <span class=\"br0\">(</span>out tmp-filename<br/>\t\t\t <span class=\"sy0\">:</span><span class=\"me1\">direction</span> <span class=\"sy0\">:</span><span class=\"me1\">output</span><br/>\t\t\t <span class=\"sy0\">:</span><span class=\"me1\">if-exists</span> <span class=\"sy0\">:</span><span class=\"me1\">supersede</span><br/>\t\t\t <span class=\"sy0\">:</span><span class=\"me1\">if-does-not-exist</span> <span class=\"sy0\">:</span><span class=\"me1\">create</span><span class=\"br0\">)</span><br/>      <span class=\"co1\">;; Open the original file for reading</span><br/>      <span class=\"br0\">(</span>with-open-file <span class=\"br0\">(</span>in filename<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>loop<br/>\t   for line <span class=\"sy0\">=</span> <span class=\"br0\">(</span>read-line in <span class=\"kw1\">nil</span> 'eof<span class=\"br0\">)</span><br/>\t   for i from <span class=\"nu0\">1</span><br/>\t   until <span class=\"br0\">(</span><span class=\"kw1\">eql</span> line 'eof<span class=\"br0\">)</span><br/>\t   <span class=\"co1\">;; Write the line to temp file if it is not in the omitted range</span><br/>\t   <span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> i start<span class=\"br0\">)</span><br/>\t\t      <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> i <span class=\"br0\">(</span>+ start num<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span>write-line line out<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><span class=\"kw1\">setf</span> lines-omitted <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ lines-omitted<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">;; Swap in the temp file for the original</span><br/>    <span class=\"br0\">(</span>delete-file filename<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>rename-file tmp-filename filename<span class=\"br0\">)</span><br/>    <span class=\"co1\">;; Warn if line removal went past the end of the file</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> lines-omitted num<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>warn <span class=\"st0\">\"End of file reached with only ~d lines removed.\"</span> lines-omitted<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 25, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">file</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    deleteLines<span class=\"br0\">(</span><span class=\"st0\">\"deleteline_test.txt\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> deleteLines<span class=\"br0\">(</span><span class=\"kw4\">string</span> name<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> start<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> num<span class=\"br0\">)</span><br/><span class=\"kw2\">in</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>start <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Line counting must start at 1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw2\">body</span> <span class=\"br0\">{</span><br/>    start<span class=\"sy0\">--;</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>exists<span class=\"br0\">(</span>name<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"sy0\">!</span>isFile<span class=\"br0\">(</span>name<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">throw</span> <span class=\"kw2\">new</span> FileException<span class=\"br0\">(</span><span class=\"st0\">\"File not found\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">auto</span> lines <span class=\"sy0\">=</span> readText<span class=\"br0\">(</span>name<span class=\"br0\">)</span>.<span class=\"me1\">splitLines</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>lines.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> start <span class=\"sy0\">+</span> num<span class=\"br0\">)</span><br/>        <span class=\"kw2\">throw</span> <span class=\"kw2\">new</span> <span class=\"kw3\">Exception</span><span class=\"br0\">(</span><span class=\"st0\">\"Can't delete lines past the end of file!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>name<span class=\"sy0\">,</span> <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> line<span class=\"sy0\">;</span> lines<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>start <span class=\"sy0\">&gt;</span> i <span class=\"sy0\">||</span> i <span class=\"sy0\">&gt;=</span> start <span class=\"sy0\">+</span> num<span class=\"br0\">)</span><br/>            f.<span class=\"me1\">writeln</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "ECL", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>IMPORT STD;<br/>RemoveLines(logicalfile, startline, numlines)\u00a0:= FUNCTIONMACRO<br/>  EndLine\u00a0:= startline + numlines - 1;<br/>  RecCnt \u00a0:= COUNT(logicalfile);<br/>  Res\u00a0:= logicalfile[1..startline-1] + logicalfile[endline+1..];<br/>  RETURN WHEN(IF(RecCnt &lt; EndLine,logicalfile,Res), <br/>              IF(RecCnt &lt; EndLine,STD.System.Log.addWorkunitWarning('Attempted removal past end of file-removal ignored')));<br/>ENDMACRO;<br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 29, "block": "<pre class=\"text highlighted_source\">defmodule RC do<br/>  def remove_lines(filename, start, number) do<br/>    File.open!(filename, [:read], fn file -&gt;<br/>      remove_lines(file, start, number, IO.read(file,\u00a0:line))<br/>    end)<br/>  end<br/>\u00a0<br/>  defp remove_lines(_file, 0, 0,\u00a0:eof), do:\u00a0:ok<br/>  defp remove_lines(_file, _, _,\u00a0:eof) do<br/>    IO.puts(:stderr, \"Warning: End of file encountered before all lines removed\")<br/>  end<br/>  defp remove_lines(file, 0, 0, line) do<br/>    IO.write line<br/>    remove_lines(file, 0, 0, IO.read(file,\u00a0:line))<br/>  end<br/>  defp remove_lines(file, 0, number, _line) do<br/>    remove_lines(file, 0, number-1, IO.read(file,\u00a0:line))<br/>  end<br/>  defp remove_lines(file, start, number, line) do<br/>    IO.write line<br/>    remove_lines(file, start-1, number, IO.read(file,\u00a0:line))<br/>  end<br/>end<br/>\u00a0<br/>[filename, start, number] = System.argv<br/>IO.puts \"before:\"<br/>IO.puts File.read!(filename)<br/>IO.puts \"after:\"<br/>RC.remove_lines(filename, String.to_integer(start), String.to_integer(number)</pre>"}, {"lang": "Erlang", "loc": 31, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span> remove_lines <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span> <span class=\"br0\">[</span>from_file<span class=\"sy3\">/</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> task<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">from_file</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">How_many</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"re5\">Binary</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <span class=\"br0\">{</span><span class=\"re5\">Name</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">read_file</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span> <span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Lines</span> <span class=\"sy3\">=</span> <span class=\"re3\">compensate_for_last_newline</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">reverse</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">X</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"kw4\">binary</span>:<span class=\"re3\">split</span><span class=\"br0\">(</span> <span class=\"re5\">Binary</span><span class=\"sy1\">,</span> <span class=\"sy2\">&lt;&lt;</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">&gt;&gt;</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>global<span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Message</span><span class=\"sy1\">,</span> <span class=\"re5\">Keep_lines</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <span class=\"re3\">keep_lines</span><span class=\"br0\">(</span> <span class=\"re5\">Start</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"re5\">How_many</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">length</span><span class=\"br0\">(</span><span class=\"re5\">Lines</span><span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\tok <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">write_file</span><span class=\"br0\">(</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"kw4\">binary</span>:<span class=\"re3\">list_to_bin</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"sy2\">&lt;&lt;</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">&gt;&gt;</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Keep_lines</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~s~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Message</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">task</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">copy</span><span class=\"br0\">(</span> <span class=\"st0\">\"priv/foobar.txt\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"foobar.txt\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re3\">from_file</span><span class=\"br0\">(</span> <span class=\"st0\">\"foobar.txt\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">compensate_for_last_newline</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"sy2\">&lt;&lt;&gt;&gt;</span> | <span class=\"re5\">T</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">reverse</span><span class=\"br0\">(</span> <span class=\"re5\">T</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">compensate_for_last_newline</span><span class=\"br0\">(</span> <span class=\"re5\">Reversed_lines</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">reverse</span><span class=\"br0\">(</span> <span class=\"re5\">Reversed_lines</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">keep_lines</span><span class=\"br0\">(</span> <span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">_How_many</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"re5\">Available</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">Start</span> <span class=\"sy3\">&gt;</span> <span class=\"re5\">Available</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><span class=\"st0\">\"Start &gt; avaliable. Nothing removed.\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">keep_lines</span><span class=\"br0\">(</span> <span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">How_many</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"re5\">Available</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">Start</span> <span class=\"sy3\">+</span> <span class=\"re5\">How_many</span>  <span class=\"sy3\">&gt;</span> <span class=\"re5\">Available</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Message</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">flatten</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/io_lib.html\"><span class=\"kw5\">io_lib</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"Start + How_many &gt; avaliable. Only ~p removed.\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"re5\">Start</span> <span class=\"sy3\">+</span> <span class=\"re5\">How_many</span><span class=\"br0\">)</span> <span class=\"sy3\">-</span> <span class=\"re5\">Available</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Keeps</span><span class=\"sy1\">,</span> <span class=\"re5\">_Removes</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">split</span><span class=\"br0\">(</span> <span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Message</span><span class=\"sy1\">,</span> <span class=\"re5\">Keeps</span><span class=\"br0\">}</span><span class=\"sy1\">;</span><br/><span class=\"re3\">keep_lines</span><span class=\"br0\">(</span> <span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">How_many</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span><span class=\"sy1\">,</span> <span class=\"re5\">_Available</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><span class=\"re5\">Keeps</span><span class=\"sy1\">,</span> <span class=\"re5\">Removes</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">split</span><span class=\"br0\">(</span> <span class=\"re5\">Start</span><span class=\"sy1\">,</span> <span class=\"re5\">Lines</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">{</span><span class=\"st0\">\"ok\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Keeps</span> <span class=\"sy3\">++</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">nthtail</span><span class=\"br0\">(</span> <span class=\"re5\">How_many</span><span class=\"sy1\">,</span> <span class=\"re5\">Removes</span> <span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "F#", "loc": 15, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/><span class=\"kw1\">open</span> System.<span class=\"me1\">IO</span><br/>\u00a0<br/><span class=\"kw1\">let</span> cutOut <span class=\"br0\">(</span>arr\u00a0: <span class=\"st0\">'a[]) from n =  // confine syntax highlighting confusion'</span><br/>    <span class=\"kw1\">let</span> slicer <span class=\"sy0\">=</span> <span class=\"kw1\">fun</span> i <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">if</span> i <span class=\"sy0\">&lt;</span> from || <span class=\"br0\">(</span>from <span class=\"sy0\">+</span> n<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> i <span class=\"kw1\">then</span> Some<span class=\"br0\">(</span>arr.<span class=\"br0\">[</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">else</span> None<br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">choose</span> slicer <span class=\"br0\">[</span>| <span class=\"nu0\">1</span> .. <span class=\"me1\">arr</span>.<span class=\"me1\">Length</span> |<span class=\"br0\">]</span><span class=\"br0\">)</span>, from <span class=\"sy0\">+</span> n <span class=\"sy0\">-</span> arr.<span class=\"me1\">Length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> nums <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">choose</span> <span class=\"br0\">(</span>System.<span class=\"me1\">Int32</span>.<span class=\"me1\">TryParse</span> <span class=\"sy0\">&gt;&gt;</span> <span class=\"kw1\">function</span> | <span class=\"kw1\">true</span>, v <span class=\"sy0\">-&gt;</span> Some v | <span class=\"kw1\">false</span>, _ <span class=\"sy0\">-&gt;</span> None<span class=\"br0\">)</span> argv.<span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">2</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">let</span> lines <span class=\"sy0\">=</span> File.<span class=\"me1\">ReadAllLines</span><span class=\"br0\">(</span>argv.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> <span class=\"br0\">(</span>sliced, tooShort<span class=\"br0\">)</span> <span class=\"sy0\">=</span> cutOut lines nums.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> nums.<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">if</span> tooShort <span class=\"kw1\">then</span> Console.<span class=\"me1\">Error</span>.<span class=\"me1\">WriteLine</span> <span class=\"st0\">\"Not enough lines\"</span><br/>    File.<span class=\"me1\">WriteAllLines</span><span class=\"br0\">(</span>argv.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, sliced<span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Fortran", "loc": 53, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/>      <span class=\"kw1\">SUBROUTINE</span> CROAK<span class=\"br0\">(</span>GASP<span class=\"br0\">)</span>\t<span class=\"co1\">!Something bad has happened.</span><br/>       <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> GASP\t<span class=\"co1\">!As noted.</span><br/>        WRITE <span class=\"br0\">(</span><span class=\"nu0\">6</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span> <span class=\"st0\">\"Oh dear. \"</span>,GASP\t<span class=\"co1\">!So, gasp away.</span><br/>        <span class=\"kw1\">STOP</span> <span class=\"st0\">\"++ungood.\"</span>\t<span class=\"co1\">!Farewell, cruel world.</span><br/>      <span class=\"kw1\">END</span>\t\t\t<span class=\"co1\">!No return from this.</span><br/>\u00a0<br/>      <span class=\"kw1\">SUBROUTINE</span> FILEHACK<span class=\"br0\">(</span>FNAME,IST,N<span class=\"br0\">)</span><br/>       <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span> FNAME\t<span class=\"co1\">!Name for the file.</span><br/>       <span class=\"kw3\">INTEGER</span> IST\t\t<span class=\"co1\">!First record to be omitted.</span><br/>       <span class=\"kw3\">INTEGER</span> N\t\t<span class=\"co1\">!Number of records to be omitted.</span><br/>       <span class=\"kw3\">INTEGER</span> ENUFF,L\t\t<span class=\"co1\">!Some lengths.</span><br/>       <span class=\"kw3\">PARAMETER</span> <span class=\"br0\">(</span>ENUFF <span class=\"sy0\">=</span> <span class=\"nu0\">66666</span><span class=\"br0\">)</span><span class=\"co1\">!Surely?</span><br/>       <span class=\"kw3\">CHARACTER</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>ENUFF<span class=\"br0\">)</span> ALINE\t<span class=\"co1\">!But not in general...</span><br/>       <span class=\"kw3\">INTEGER</span> NREC\t\t<span class=\"co1\">!A counter.</span><br/>       <span class=\"kw3\">INTEGER</span> F,T\t\t<span class=\"co1\">!Mnemonics for file unit numbers.</span><br/>       <span class=\"kw3\">PARAMETER</span> <span class=\"br0\">(</span>F<span class=\"sy0\">=</span><span class=\"nu0\">66</span>,T<span class=\"sy0\">=</span><span class=\"nu0\">67</span><span class=\"br0\">)</span>\t<span class=\"co1\">!These should do.</span><br/>       <span class=\"kw3\">LOGICAL</span> <span class=\"kw1\">EXIST</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>FNAME.<span class=\"me1\">EQ</span>.<span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"kw1\">CALL</span> CROAK<span class=\"br0\">(</span><span class=\"st0\">\"Blank file name!\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>IST.<span class=\"me1\">LE</span>.0<span class=\"br0\">)</span>    <span class=\"kw1\">CALL</span> CROAK<span class=\"br0\">(</span><span class=\"st0\">\"First record must be positive!\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>N.<span class=\"me1\">LE</span>.0<span class=\"br0\">)</span>      <span class=\"kw1\">CALL</span> CROAK<span class=\"br0\">(</span><span class=\"st0\">\"Remove count must be positive!\"</span><span class=\"br0\">)</span><br/>        INQUIRE<span class=\"br0\">(</span><span class=\"kw1\">FILE</span> <span class=\"sy0\">=</span> FNAME, <span class=\"kw1\">EXIST</span> <span class=\"sy0\">=</span> <span class=\"kw1\">EXIST</span><span class=\"br0\">)</span>\t<span class=\"co1\">!This mishap is frequent, so attend to it.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span><span class=\"kw2\">.<span class=\"kw4\">NOT</span>.</span><span class=\"kw1\">EXIST</span><span class=\"br0\">)</span> <span class=\"kw1\">CALL</span> CROAK<span class=\"br0\">(</span><span class=\"st0\">\"Can't find a file called \"</span><span class=\"sy0\">//</span>FNAME<span class=\"br0\">)</span>\t<span class=\"co1\">!Tough love.</span><br/>        OPEN <span class=\"br0\">(</span>F,<span class=\"kw1\">FILE</span><span class=\"sy0\">=</span>FNAME,<span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"OLD\"</span>,<span class=\"kw1\">ACTION</span><span class=\"sy0\">=</span><span class=\"st0\">\"READ\"</span>,<span class=\"kw1\">FORM</span><span class=\"sy0\">=</span><span class=\"st0\">\"FORMATTED\"</span><span class=\"br0\">)</span>\t<span class=\"co1\">!Grab the source file.</span><br/>        OPEN <span class=\"br0\">(</span>T,<span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"SCRATCH\"</span>,<span class=\"kw1\">FORM</span><span class=\"sy0\">=</span><span class=\"st0\">\"FORMATTED\"</span><span class=\"br0\">)</span>\t<span class=\"co1\">!Request a temporary file.</span><br/>        NREC <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\t\t<span class=\"co1\">!Number of records read so far.</span><br/><span class=\"co1\">Copy the desired records to a temporary file.</span><br/>   <span class=\"nu0\">10</span>   READ <span class=\"br0\">(</span>F,<span class=\"nu0\">11</span>,<span class=\"kw1\">END</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> L,ALINE<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"kw4\">MIN</span><span class=\"br0\">(</span>L,ENUFF<span class=\"br0\">)</span><span class=\"br0\">)</span>\t<span class=\"co1\">!Minimal protection.</span><br/>   <span class=\"nu0\">11</span>   FORMAT <span class=\"br0\">(</span>Q,A<span class=\"br0\">)</span>\t\t<span class=\"co1\">!Obviously, Q = # of characters to come, A = their format.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>L.<span class=\"me1\">GT</span>.<span class=\"me1\">ENUFF</span><span class=\"br0\">)</span> <span class=\"kw1\">CALL</span> CROAK<span class=\"br0\">(</span><span class=\"st0\">\"Ow! Lengthy record!!\"</span><span class=\"br0\">)</span><br/>        NREC <span class=\"sy0\">=</span> NREC <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>\t\t<span class=\"co1\">!If we're here. we've read a record.</span><br/>        <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>NREC.<span class=\"me1\">LT</span>.<span class=\"me1\">IST</span> <span class=\"kw2\">.<span class=\"me1\">OR</span>.</span> NREC.<span class=\"me1\">GE</span>.<span class=\"me1\">IST</span> <span class=\"sy0\">+</span> N<span class=\"br0\">)</span> WRITE <span class=\"br0\">(</span>T,<span class=\"nu0\">12</span><span class=\"br0\">)</span> ALINE<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>L<span class=\"br0\">)</span>\t<span class=\"co1\">!A desired record?</span><br/>   <span class=\"nu0\">12</span>   FORMAT <span class=\"br0\">(</span>A<span class=\"br0\">)</span>\t\t<span class=\"co1\">!No character count is explicitly specified.</span><br/>        <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">10</span>\t\t<span class=\"co1\">!Keep on thumping.</span><br/><span class=\"co1\">Convert from input to output...</span><br/>   <span class=\"nu0\">20</span>   <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>NREC.<span class=\"me1\">LT</span>.<span class=\"me1\">IST</span> <span class=\"sy0\">+</span> N<span class=\"br0\">)</span> <span class=\"kw1\">CALL</span> CROAK<span class=\"br0\">(</span><span class=\"st0\">\"Insufficient records!\"</span><span class=\"br0\">)</span>\t<span class=\"co1\">!Finished ignoring records?</span><br/>        REWIND T\t\t<span class=\"co1\">!Not CLOSE! That would discard the file!</span><br/>        CLOSE<span class=\"br0\">(</span>F<span class=\"br0\">)</span>\t\t<span class=\"co1\">!The source file still exists.</span><br/>        OPEN <span class=\"br0\">(</span>F,<span class=\"kw1\">FILE</span><span class=\"sy0\">=</span>FNAME,<span class=\"kw1\">FORM</span><span class=\"sy0\">=</span><span class=\"st0\">\"FORMATTED\"</span>,\t<span class=\"co1\">!But,</span><br/>     <span class=\"nu0\">1</span>   <span class=\"kw1\">ACTION</span><span class=\"sy0\">=</span><span class=\"st0\">\"WRITE\"</span>,<span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"REPLACE\"</span><span class=\"br0\">)</span>\t<span class=\"co1\">!This dooms it!</span><br/><span class=\"co1\">Copy from the temporary file.</span><br/>   <span class=\"nu0\">21</span>   READ <span class=\"br0\">(</span>T,<span class=\"nu0\">11</span>,<span class=\"kw1\">END</span> <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span> L,ALINE<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>L<span class=\"br0\">)</span>\t<span class=\"co1\">!All records are not longer than ALINE.</span><br/>        WRITE <span class=\"br0\">(</span>F,<span class=\"nu0\">12</span><span class=\"br0\">)</span> ALINE<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>L<span class=\"br0\">)</span>\t\t\t<span class=\"co1\">!Out it goes.</span><br/>        <span class=\"kw1\">GO</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">21</span>\t\t<span class=\"co1\">!Keep on thumping.</span><br/><span class=\"co1\">Completed.</span><br/>   <span class=\"nu0\">30</span>   CLOSE<span class=\"br0\">(</span>T<span class=\"br0\">)</span>\t\t<span class=\"co1\">!Abandon the temporary file.</span><br/>        CLOSE<span class=\"br0\">(</span>F<span class=\"br0\">)</span>\t\t<span class=\"co1\">!Finished with the source file.</span><br/>      <span class=\"kw1\">END</span>\t\t<span class=\"co1\">!Done.</span><br/>\u00a0<br/>      <span class=\"kw1\">PROGRAM</span> CHOPPER<br/>       <span class=\"kw1\">CALL</span> FILEHACK<span class=\"br0\">(</span><span class=\"st0\">\"foobar.txt\"</span>,<span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">END</span><br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 51, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Sub</span> removeLines<span class=\"br0\">(</span>fileName <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, startLine <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span>, numLines <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> startLine = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> <br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"Starting line must be more than zero\"</span><br/>    <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">If</span> numLines = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"No lines to remove\"</span><br/>    <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span> <br/>  <span class=\"kw1\">Dim</span> fileNum <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">FreeFile</span><br/>  <span class=\"kw1\">Open</span> fileName <span class=\"kw1\">For</span> <span class=\"kw1\">Input</span> <span class=\"kw1\">As</span> <span class=\"co2\">#fileNum</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">err</span> &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"File could not be opened\"</span><br/>    <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Dim</span> tempFileName <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"temp_\"</span> + fileName<br/>  <span class=\"kw1\">Dim</span> fileNum2 <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">FreeFile</span><br/>  <span class=\"kw1\">Open</span> tempFileName <span class=\"kw1\">For</span> <span class=\"kw1\">Output</span> <span class=\"kw1\">As</span> <span class=\"co2\">#fileNum2</span><br/>  <span class=\"kw1\">Dim</span> count <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">Dim</span> ln <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>  <span class=\"kw1\">Dim</span> endLine <span class=\"kw1\">As</span> <span class=\"kw1\">UInteger</span> = startLine + numLines - <span class=\"nu0\">1</span> <br/>  <span class=\"kw1\">While</span> <span class=\"kw1\">Not</span> <span class=\"kw1\">Eof</span><span class=\"br0\">(</span>fileNum<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Input</span> <span class=\"co2\">#fileNum, ln</span><br/>    count += <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> count &gt;= startLine AndAlso count &lt;= endLine <span class=\"kw1\">Then</span> <span class=\"kw1\">Continue</span> <span class=\"kw1\">While</span><br/>    <span class=\"kw1\">Print</span> <span class=\"co2\">#fileNum2, ln</span><br/>  <span class=\"kw1\">Wend</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> count &lt; startLine <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"No lines were removed as starting line was beyond end of file\"</span><br/>    <span class=\"kw1\">Print</span><br/>  <span class=\"kw1\">ElseIf</span> count &lt; endLine <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"Only \"</span>; count - startLine + <span class=\"nu0\">1</span>; <span class=\"st0\">\" line(s) were removed as not enough lines to remove more\"</span><br/>    <span class=\"kw1\">Print</span><br/>  <span class=\"kw1\">Else</span> <br/>    <span class=\"kw1\">Print</span> <span class=\"kw1\">Str</span><span class=\"br0\">(</span>numLines<span class=\"br0\">)</span>; <span class=\"st0\">\" line(s) were removed\"</span><br/>    <span class=\"kw1\">Print</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Close</span> <span class=\"co2\">#fileNum\u00a0: Close #fileNum2</span><br/>  <span class=\"kw1\">Kill</span><span class=\"br0\">(</span>fileName<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Name</span> <span class=\"br0\">(</span>tempFileName, fileName<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>removeLines<span class=\"br0\">(</span><span class=\"st0\">\"foobar.txt\"</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>removeLines<span class=\"br0\">(</span><span class=\"st0\">\"foobar.txt\"</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>removeLines<span class=\"br0\">(</span><span class=\"st0\">\"foobar.txt\"</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Frink", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>removeLines[filename, start, len]\u00a0:=<br/>{<br/>   lines = array[lines[\"file:$filename\"]]<br/>   modified = lines.removeLen[start-1, len]<br/>   if modified\u00a0!= len<br/>      println[\"Was only able to remove $modified lines due to end-of-file.\"]<br/>\u00a0<br/>   w = new Writer[filename]<br/>   for line = lines<br/>      w.println[line]<br/>   w.close[]<br/>}<br/>\u00a0</pre>"}, {"lang": "Gambas", "loc": 45, "block": "<pre class=\"gambas highlighted_source\">sNewFile <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a>                                                                  <span class=\"co1\">'Global string for the 'New file' details</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sFileName <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">Home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"foobar.txt\"</span>                                 <span class=\"co1\">'File name</span><br/>\u00a0<br/>sNewFile <span class=\"sy0\">=</span> DeleteLines<span class=\"br0\">(</span>sFileName, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>                                             <span class=\"co1\">'Send the details to the DeleteLine routine 'The parameters should be: foobar.txt, 1, 2'</span><br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"New file: -\"</span> <span class=\"sy0\">&amp;</span> gb.<span class=\"me1\">NewLine</span> <span class=\"sy0\">&amp;</span> sNewFile                                         <span class=\"co1\">'Print details of the changed file</span><br/><a href=\"http://gambasdoc.org/help/lang/type/file\"><span class=\"kw4\">File</span></a>.<span class=\"me1\">Save</span><span class=\"br0\">(</span>sFileName, sNewFile<span class=\"br0\">)</span>                                                      <span class=\"co1\">'Save the file with the original name</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> DeleteLines<span class=\"br0\">(</span>sFile <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a>, siStart <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a>, siNum <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a> <span class=\"co1\">'DeleteLines routine</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sData <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span>                                                           <span class=\"co1\">'To store the existing file data</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a>                                                                <span class=\"co1\">'Counter</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sTemp, sDel <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a>                                                           <span class=\"co1\">'String variables</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> sTemp <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> <a href=\"http://gambasdoc.org/help/lang/split\"><span class=\"kw2\">Split</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/type/file\"><span class=\"kw4\">File</span></a>.<span class=\"me1\">Load</span><span class=\"br0\">(</span>sFile<span class=\"br0\">)</span>, gb.<span class=\"me1\">NewLine</span><span class=\"br0\">)</span>                               <span class=\"co1\">'Load the file, split the lines by NewLine </span><br/>  sData.<span class=\"me1\">Add</span><span class=\"br0\">(</span>sTemp<span class=\"br0\">)</span>                                                                  <span class=\"co1\">'Add to sData</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"Original file: -\"</span>                                                            <span class=\"co1\">'Print Title</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siStart <span class=\"sy0\">+</span> siNum <span class=\"sy0\">&gt;</span> sData.<a href=\"http://gambasdoc.org/help/lang/max\"><span class=\"kw2\">max</span></a> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a>                                                 <span class=\"co1\">'Check an attempt is made to remove lines beyond the end of the file</span><br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"Not enough lines in file to carry out request\"</span>                             <span class=\"co1\">'An appropriate message should appear if so</span><br/>  <a href=\"http://gambasdoc.org/help/lang/return\"><span class=\"kw1\">Return</span></a> <span class=\"st0\">\"\"</span>                                                                         <span class=\"co1\">'Return nothing</span><br/><a href=\"http://gambasdoc.org/help/lang/endif\"><span class=\"kw1\">Endif</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/dec\"><span class=\"kw1\">Dec</span></a> siStart                                                                         <span class=\"co1\">'For the purpose of this task, line numbers start at one (Program starts at 0)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount <span class=\"sy0\">=</span> siStart <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"br0\">(</span>siStart <span class=\"sy0\">+</span> siNum<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span>                                      <span class=\"co1\">'Loop through the lines to be deleted </span><br/>  sDel <span class=\"sy0\">&amp;=</span> <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siCount<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" \"</span>                                                        <span class=\"co1\">'Add then to sDel</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/>siCount <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span>                                                                        <span class=\"co1\">'Reset counter</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> sTemp <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> sData                                                             <span class=\"co1\">'For each line in the file..</span><br/>  <a href=\"http://gambasdoc.org/help/lang/inc\"><span class=\"kw1\">Inc</span></a> siCount                                                                       <span class=\"co1\">'Increase counter</span><br/>  <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> sTemp                                                                       <span class=\"co1\">'Print the line</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/instr\"><span class=\"kw2\">InStr</span></a><span class=\"br0\">(</span>sDel, <a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>siCount<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/continue\"><span class=\"kw1\">Continue</span></a>                                  <span class=\"co1\">'If the line number is listed in sDel then jump to the end of the loop</span><br/>  sNewFile <span class=\"sy0\">&amp;=</span> sTemp <span class=\"sy0\">&amp;</span> gb.<span class=\"me1\">NewLine</span>                                                    <span class=\"co1\">'Add the lines not to be removed into sNewFile</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/return\"><span class=\"kw1\">Return</span></a> sNewFile                                                                     <span class=\"co1\">'Return the details</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 72, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"bytes\"</span><br/>    <span class=\"st0\">\"errors\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"io/ioutil\"</span><br/>    <span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">:=</span> removeLines<span class=\"sy1\">(</span><span class=\"st0\">\"foobar.txt\"</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> removeLines<span class=\"sy1\">(</span>fn <span class=\"kw4\">string</span><span class=\"sy1\">,</span> start<span class=\"sy1\">,</span> n <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">(</span>err error<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> start &lt; <span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> errors<span class=\"sy3\">.</span>New<span class=\"sy1\">(</span><span class=\"st0\">\"invalid request.  line numbers start at 1.\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> n &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> errors<span class=\"sy3\">.</span>New<span class=\"sy1\">(</span><span class=\"st0\">\"invalid request.  negative number to remove.\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">var</span> f <span class=\"sy3\">*</span><a href=\"http://golang.org/search?q=os.File\"><span class=\"kw5\">os.<span class=\"me1\">File</span></span></a><br/>    <span class=\"kw1\">if</span> f<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> os<span class=\"sy3\">.</span>OpenFile<span class=\"sy1\">(</span>fn<span class=\"sy1\">,</span> os<span class=\"sy3\">.</span>O_RDWR<span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">defer</span> <span class=\"kw4\">func</span><span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> cErr <span class=\"sy2\">:=</span> f<span class=\"sy3\">.</span>Close<span class=\"sy1\">();</span> err <span class=\"sy3\">==</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>            err <span class=\"sy2\">=</span> cErr<br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}()</span><br/>    <span class=\"kw1\">var</span> b <span class=\"sy1\">[]</span><span class=\"kw4\">byte</span><br/>    <span class=\"kw1\">if</span> b<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> ioutil<span class=\"sy3\">.</span>ReadAll<span class=\"sy1\">(</span>f<span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    cut<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> skip<span class=\"sy1\">(</span>b<span class=\"sy1\">,</span> start<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> fmt<span class=\"sy3\">.</span>Errorf<span class=\"sy1\">(</span><span class=\"st0\">\"less than\u00a0%d lines\"</span><span class=\"sy1\">,</span> start<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> n <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> <span class=\"kw2\">nil</span><br/>    <span class=\"sy1\">}</span><br/>    tail<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> skip<span class=\"sy1\">(</span>cut<span class=\"sy1\">,</span> n<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span> fmt<span class=\"sy3\">.</span>Errorf<span class=\"sy1\">(</span><span class=\"st0\">\"less than\u00a0%d lines after line\u00a0%d\"</span><span class=\"sy1\">,</span> n<span class=\"sy1\">,</span> start<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    t <span class=\"sy2\">:=</span> <span class=\"kw4\">int64</span><span class=\"sy1\">(</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>b<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>cut<span class=\"sy1\">))</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">=</span> f<span class=\"sy3\">.</span>Truncate<span class=\"sy1\">(</span>t<span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>tail<span class=\"sy1\">)</span> &gt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        _<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> f<span class=\"sy3\">.</span>WriteAt<span class=\"sy1\">(</span>tail<span class=\"sy1\">,</span> t<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> skip<span class=\"sy1\">(</span>b <span class=\"sy1\">[]</span><span class=\"kw4\">byte</span><span class=\"sy1\">,</span> n <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"sy1\">([]</span><span class=\"kw4\">byte</span><span class=\"sy1\">,</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"sy1\">;</span> n &gt; <span class=\"nu0\">0</span><span class=\"sy1\">;</span> n<span class=\"sy2\">--</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>b<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> <span class=\"kw2\">nil</span><span class=\"sy1\">,</span> <span class=\"kw2\">false</span><br/>        <span class=\"sy1\">}</span><br/>        x <span class=\"sy2\">:=</span> bytes<span class=\"sy3\">.</span>IndexByte<span class=\"sy1\">(</span>b<span class=\"sy1\">,</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> x &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            x <span class=\"sy2\">=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>b<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            x<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span><br/>        b <span class=\"sy2\">=</span> b<span class=\"sy1\">[</span>x<span class=\"sy1\">:]</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> b<span class=\"sy1\">,</span> <span class=\"kw2\">true</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 8, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Environment <span class=\"br0\">(</span>getArgs<span class=\"br0\">)</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> getArgs <span class=\"sy0\">&gt;&gt;=</span> <span class=\"br0\">(</span>\\<span class=\"br0\">[</span>a<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> c<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <br/>            <span class=\"kw1\">do</span> contents <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:fmap\"><span class=\"kw3\">fmap</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:lines\"><span class=\"kw3\">lines</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:readFile\"><span class=\"kw3\">readFile</span></a> a<br/>               <span class=\"kw1\">let</span> b1 <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> b <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>                   c1 <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> c <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>               <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStr\"><span class=\"kw3\">putStr</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unlines\"><span class=\"kw3\">unlines</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concat\"><span class=\"kw3\">concat</span></a> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:take\"><span class=\"kw3\">take</span></a> <span class=\"br0\">(</span>b1 <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> contents<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:drop\"><span class=\"kw3\">drop</span></a> c1 <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:drop\"><span class=\"kw3\">drop</span></a> b1 contents<span class=\"br0\">]</span><br/>       <span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 18, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"co1\"># remove lines</span><br/>   removelines<span class=\"br0\">(</span><span class=\"st0\">\"foo.bar\"</span><span class=\"sy1\">,</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Failed to remove lines.\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> removelines<span class=\"br0\">(</span>fn<span class=\"sy1\">,</span>start<span class=\"sy1\">,</span>skip<span class=\"br0\">)</span><br/>\u00a0<br/>   f <span class=\"sy1\">:=</span> <span class=\"kw4\">open</span><span class=\"br0\">(</span>fn<span class=\"sy1\">,</span><span class=\"st0\">\"r\"</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span>                  <span class=\"co1\"># open to read</span><br/>   <span class=\"kw1\">every</span> <span class=\"kw4\">put</span><span class=\"br0\">(</span>F <span class=\"sy1\">:=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,|</span><span class=\"kw4\">read</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"br0\">)</span>               <span class=\"co1\"># file to list</span><br/>   <span class=\"kw4\">close</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>\u00a0<br/>   <span class=\"kw1\">if</span> <span class=\"sy1\">*</span>F <span class=\"sy1\">&lt;</span> start<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">+</span>skip <span class=\"kw1\">then</span> <span class=\"kw1\">fail</span><br/>   <span class=\"kw1\">every</span> F<span class=\"br0\">[</span>start <span class=\"sy1\">-</span> <span class=\"nu0\">1</span> <span class=\"sy1\">+</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> skip<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"sy1\">&amp;</span><span class=\"kw3\">null</span> <span class=\"co1\"># mark delete</span><br/>\u00a0<br/>   f <span class=\"sy1\">:=</span> <span class=\"kw4\">open</span><span class=\"br0\">(</span>fn<span class=\"sy1\">,</span><span class=\"st0\">\"w\"</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw1\">fail</span>                  <span class=\"co1\"># open to rewrite</span><br/>   <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"sy1\">\\!</span>F<span class=\"br0\">)</span>                          <span class=\"co1\"># write non-nulls</span><br/>   <span class=\"kw4\">close</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>   <span class=\"kw1\">return</span>                                    <span class=\"co1\"># done</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 6, "block": "<pre class=\"j highlighted_source\">removeLines=: <span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span><br/>  <span class=\"st_h\">'count start'</span>=. <span class=\"kw2\">x</span><br/>  file=. boxxopen <span class=\"kw2\">y</span><br/>  lines=. &lt;;.<span class=\"nu0\">2</span> fread file<br/>  <span class=\"sy0\">(</span>;lines {~ &lt;&lt;&lt; <span class=\"sy0\">(</span>start-<span class=\"nu0\">1</span><span class=\"sy0\">)</span>+i.count<span class=\"sy0\">)</span> fwrite file<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 57, "block": "<pre class=\"java highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> <span class=\"co2\">java.io.BufferedReader</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.io.File</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.io.FileReader</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.io.FileWriter</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> RemoveLines<br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"co1\">//Enter name of the file here</span><br/>\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> filename<span class=\"sy0\">=</span><span class=\"st0\">\"foobar.txt\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"co1\">//Enter starting line here</span><br/>\t\t<span class=\"kw4\">int</span> startline<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"co1\">//Enter number of lines here.</span><br/>\t\t<span class=\"kw4\">int</span> numlines<span class=\"sy0\">=</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tRemoveLines now<span class=\"sy0\">=</span><span class=\"kw1\">new</span> RemoveLines<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tnow.<span class=\"me1\">delete</span><span class=\"br0\">(</span>filename,startline,numlines<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw4\">void</span> delete<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> filename, <span class=\"kw4\">int</span> startline, <span class=\"kw4\">int</span> numlines<span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">try</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedreader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedReader</span></a> br<span class=\"sy0\">=</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Abufferedreader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">BufferedReader</span></a><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afilereader+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileReader</span></a><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"co1\">//String buffer to store contents of the file</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astringbuffer+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">StringBuffer</span></a> sb<span class=\"sy0\">=</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astringbuffer+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">StringBuffer</span></a><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"co1\">//Keep track of the line number</span><br/>\t\t\t<span class=\"kw4\">int</span> linenumber<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> line<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"br0\">(</span>line<span class=\"sy0\">=</span>br.<span class=\"me1\">readLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">!=</span><span class=\"kw2\">null</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"co1\">//Store each valid line in the string buffer</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>linenumber<span class=\"sy0\">&lt;</span>startline<span class=\"sy0\">||</span>linenumber<span class=\"sy0\">&gt;=</span>startline<span class=\"sy0\">+</span>numlines<span class=\"br0\">)</span><br/>\t\t\t\t\tsb.<span class=\"me1\">append</span><span class=\"br0\">(</span>line<span class=\"sy0\">+</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tlinenumber<span class=\"sy0\">++;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>startline<span class=\"sy0\">+</span>numlines<span class=\"sy0\">&gt;</span>linenumber<span class=\"br0\">)</span><br/>\t\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"End of file reached.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tbr.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afilewriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileWriter</span></a> fw<span class=\"sy0\">=</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afilewriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileWriter</span></a><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//Write entire string buffer into the file</span><br/>\t\t\tfw.<span class=\"me1\">write</span><span class=\"br0\">(</span>sb.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tfw.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Exception</span></a> e<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Something went horribly wrong: \"</span><span class=\"sy0\">+</span>e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "jq", "loc": 1, "block": "<pre class=\"text highlighted_source\">jq -s -R -r --arg start START --arg number NUMBER -f remove.jq INFILE</pre>"}, {"lang": "Julia", "loc": 33, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/env julia<br/>\u00a0<br/>const prgm = basename(Base.source_path())<br/>\u00a0<br/>if length(ARGS) &lt; 2<br/>    println(\"usage: \", prgm, \" &lt;file&gt; [line]...\")<br/>    exit(1)<br/>end<br/>\u00a0<br/>file = ARGS[1]<br/>\u00a0<br/>const numbers = map(x -&gt; begin<br/>    try<br/>        parse(Uint, x)<br/>    catch<br/>        println(prgm, \": \", x, \": not a number\")<br/>        exit(1)<br/>    end<br/>end, ARGS[2:end])<br/>\u00a0<br/>f = open(file)<br/>lines = readlines(f)<br/>close(f)<br/>\u00a0<br/>if maximum(numbers) &gt; length(lines)<br/>    println(prgm, \": detected extraneous line number\")<br/>    exit(1)<br/>end<br/>\u00a0<br/>deleteat!(lines, sort(unique(numbers)))<br/>f = open(file, \"w\")<br/>write(f, join(lines))<br/>close(f)</pre>"}, {"lang": "Kotlin", "loc": 43, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/>\u00a0<br/>fun removeLines<span class=\"br0\">(</span>fileName<span class=\"sy0\">:</span> String, startLine<span class=\"sy0\">:</span> Int, numLines<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    require<span class=\"br0\">(</span><span class=\"sy0\">!</span>fileName.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> startLine <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> numLines <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>fileName<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>f.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"$fileName does not exist\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> lines <span class=\"sy0\">=</span> f.<span class=\"me1\">readLines</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> size <span class=\"sy0\">=</span> lines.<span class=\"me1\">size</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>startLine <span class=\"sy0\">&gt;</span> size<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"The starting line is beyond the length of the file\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> n <span class=\"sy0\">=</span> numLines<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>startLine + numLines - <span class=\"nu0\">1</span> <span class=\"sy0\">&gt;</span> size<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"Attempting to remove some lines which are beyond the end of the file\"</span><span class=\"br0\">)</span><br/>        n <span class=\"sy0\">=</span> size - startLine + <span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>    lines <span class=\"sy0\">=</span> lines.<span class=\"me1\">take</span><span class=\"br0\">(</span>startLine - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + lines.<span class=\"me1\">drop</span><span class=\"br0\">(</span>startLine + n - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> text <span class=\"sy0\">=</span> lines.<span class=\"me1\">joinToString</span><span class=\"br0\">(</span>System.<span class=\"me1\">lineSeparator</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    f.<span class=\"me1\">writeText</span><span class=\"br0\">(</span>text<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun printFile<span class=\"br0\">(</span>fileName<span class=\"sy0\">:</span> String, message<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    require<span class=\"br0\">(</span><span class=\"sy0\">!</span>fileName.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>fileName<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>f.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"$fileName does not exist\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>Contents of $fileName $message:<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    f.<span class=\"me1\">forEachLine</span> <span class=\"br0\">{</span> println<span class=\"br0\">(</span>it<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    printFile<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"st0\">\"before removal\"</span><span class=\"br0\">)</span><br/>    removeLines<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>    printFile<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"st0\">\"after removal of 3 lines starting from the second\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 22, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/lasso9<br/>\u00a0<br/>local(<br/>\torgfilename\t\t= $argv -&gt; second,<br/>\tfile\t\t\t= file(#orgfilename),<br/>\tregexp\t\t\t= regexp(-find = `(?m)$`),<br/>\tcontent\t\t\t= #regexp -&gt; split(-input = #file -&gt; readstring) -&gt; asarray,<br/>\tstart\t\t\t= integer($argv -&gt; get(3) || 1),<br/>\trange\t\t\t= integer($argv -&gt; get(4) || 1)<br/>)<br/>stdout(#content)<br/>#file -&gt; copyto(#orgfilename + '.org')<br/>\u00a0<br/>fail_if(#content -&gt; size &lt; (#start + #range), -1, 'Not that many rows in the file')<br/>\u00a0<br/>#content -&gt; remove(#start, #range)<br/>\u00a0<br/>#file = file(#orgfilename)<br/>#file -&gt; opentruncate<br/>#file -&gt; dowithclose =&gt; {<br/>\t#file -&gt; writestring(#content -&gt; join(''))<br/>}</pre>"}, {"lang": "Liberty BASIC", "loc": 22, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">call</span> removeLines <span class=\"st0\">\"foobar.txt\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">sub</span> removeLines filename$<span class=\"sy0\">,</span> start<span class=\"sy0\">,</span> count<br/>    <span class=\"kw1\">open</span> filename$ <span class=\"kw1\">for</span> <span class=\"kw1\">input</span> <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>in<br/>    <span class=\"kw1\">open</span> filename$ <span class=\"sy0\">+</span> <span class=\"st0\">\".tmp\"</span> <span class=\"kw1\">for</span> <span class=\"kw1\">output</span> <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>out<br/>    lineCounter <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    firstAfterIgnored <span class=\"sy0\">=</span> start <span class=\"sy0\">+</span> count<br/>    <span class=\"kw1\">while</span> <span class=\"kw2\">not</span><span class=\"br0\">(</span><span class=\"kw2\">eof</span><span class=\"br0\">(</span><span class=\"sy0\">#</span>in<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">line</span> <span class=\"kw1\">input</span> <span class=\"sy0\">#</span>in<span class=\"sy0\">,</span> s$<br/>        <span class=\"kw1\">if</span> lineCounter <span class=\"sy0\">&lt;</span> start <span class=\"kw1\">or</span> lineCounter <span class=\"sy0\">&gt;=</span> firstAfterIgnored <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">print</span> <span class=\"sy0\">#</span>out<span class=\"sy0\">,</span> s$<br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        lineCounter <span class=\"sy0\">=</span> lineCounter <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">wend</span><br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>in<br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>out<br/>    <span class=\"co1\">'kill filename$</span><br/>    <span class=\"co1\">'name filename$ + \".tmp\" as filename$</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">sub</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 26, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> <span class=\"kw3\">remove</span><span class=\"br0\">(</span> filename<span class=\"sy0\">,</span> starting_line<span class=\"sy0\">,</span> num_lines <span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> fp <span class=\"sy0\">=</span> <span class=\"kw3\">io.open</span><span class=\"br0\">(</span> filename<span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> fp <span class=\"sy0\">==</span> <span class=\"kw4\">nil</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"kw4\">nil</span> <span class=\"kw1\">end</span><br/>\u00a0<br/>    content <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> line <span class=\"kw2\">in</span> fp<span class=\"sy0\">:</span>lines<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> i <span class=\"sy0\">&lt;</span> starting_line <span class=\"kw2\">or</span> i <span class=\"sy0\">&gt;=</span> starting_line <span class=\"sy0\">+</span> num_lines <span class=\"kw1\">then</span><br/>\t    content<span class=\"br0\">[</span><span class=\"sy0\">#</span>content<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> line<br/>\t<span class=\"kw1\">end</span><br/>\ti <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> i <span class=\"sy0\">&gt;</span> starting_line <span class=\"kw2\">and</span> i <span class=\"sy0\">&lt;</span> starting_line <span class=\"sy0\">+</span> num_lines <span class=\"kw1\">then</span><br/>\t<span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"Warning: Tried to remove lines after EOF.\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    fp<span class=\"sy0\">:</span>close<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    fp <span class=\"sy0\">=</span> <span class=\"kw3\">io.open</span><span class=\"br0\">(</span> filename<span class=\"sy0\">,</span> <span class=\"st0\">\"w+\"</span> <span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>content <span class=\"kw1\">do</span><br/>\tfp<span class=\"sy0\">:</span><span class=\"kw3\">write</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> content<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    fp<span class=\"sy0\">:</span>close<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Mathematica", "loc": 10, "block": "<pre class=\"text highlighted_source\">f[doc_String, start_Integer, n_Integer]\u00a0:= Module[{p, newdoc},<br/>  p = Import[doc, \"List\"];<br/>  If[start + n - 1 &lt;= <a class=\"__cf_email__\" data-cfemail=\"216d444f4655496151\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>,<br/>   p = Drop[p, {start, start + n - 1}];<br/>   newdoc = FileNameJoin[{DirectoryName[doc], FileBaseName[doc] &lt;&gt; \"_removed.txt\"}];<br/>   Export[newdoc, p, \"List\"];<br/>   ,<br/>   Print[\"Too few lines in document. Operation aborted.\"]<br/>  ]<br/> ]</pre>"}, {"lang": "NewLISP", "loc": 37, "block": "<pre class=\"newlisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#context\"><span class=\"kw1\">context</span></a> <span class=\"re5\">'ABC</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#define\"><span class=\"kw1\">define</span></a> <span class=\"br0\">(</span>remove<span class=\"sy1\">-</span>lines<span class=\"sy1\">-</span>from<span class=\"sy1\">-</span>a<span class=\"sy1\">-</span>file filename start num<span class=\"br0\">)</span>    <br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> new<span class=\"sy1\">-</span>content <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> row<span class=\"sy1\">-</span>counter <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> start<span class=\"sy1\">-</span>delete<span class=\"sy1\">-</span>row start<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> end<span class=\"sy1\">-</span>delete<span class=\"sy1\">-</span>row <span class=\"br0\">(</span><span class=\"sy1\">+</span> start num <span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> file<span class=\"sy1\">-</span>content <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#read-file\"><span class=\"kw1\">read-file</span></a> filename<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> max<span class=\"sy1\">-</span>rows <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#length\"><span class=\"kw1\">length</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#parse\"><span class=\"kw1\">parse</span></a> file<span class=\"sy1\">-</span>content <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#cond\"><span class=\"kw1\">cond</span></a><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">&lt;=</span> start <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a> <span class=\"st0\">\"Start line must be &gt;= 1. Value passed: \"</span> start<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">&lt;=</span> num <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a> <span class=\"st0\">\"# of lines to remove must be &gt;= 1. Value passed: \"</span> num<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">&gt;</span> start max<span class=\"sy1\">-</span>rows<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a> <span class=\"st0\">\"Start line must be &lt;= \"</span> max<span class=\"sy1\">-</span>rows <span class=\"st0\">\". Value passed: \"</span> start<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">&gt;</span> end<span class=\"sy1\">-</span>delete<span class=\"sy1\">-</span>row max<span class=\"sy1\">-</span>rows<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a> <span class=\"st0\">\"Not so much lines available to be removed. Max \"</span> <span class=\"br0\">(</span><span class=\"sy1\">-</span> max<span class=\"sy1\">-</span>rows start<span class=\"sy1\">-</span>delete<span class=\"sy1\">-</span>row<span class=\"br0\">)</span> <span class=\"st0\">\". Value passed: \"</span> num<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#true\"><span class=\"kw1\">true</span></a><br/>            <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#dolist\"><span class=\"kw1\">dolist</span></a> <span class=\"br0\">(</span>row <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#parse\"><span class=\"kw1\">parse</span></a> file<span class=\"sy1\">-</span>content <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"sy1\">++</span> row<span class=\"sy1\">-</span>counter<span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#or\"><span class=\"kw1\">or</span></a> <span class=\"br0\">(</span><span class=\"sy1\">&lt;</span> row<span class=\"sy1\">-</span>counter start<span class=\"sy1\">-</span>delete<span class=\"sy1\">-</span>row<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy1\">&gt;</span> row<span class=\"sy1\">-</span>counter end<span class=\"sy1\">-</span>delete<span class=\"sy1\">-</span>row<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#setf\"><span class=\"kw1\">setf</span></a> new<span class=\"sy1\">-</span>content <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#append\"><span class=\"kw1\">append</span></a> new<span class=\"sy1\">-</span>content row <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>                    <span class=\"br0\">)</span><br/>            <span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#write-file\"><span class=\"kw1\">write-file</span></a> filename new<span class=\"sy1\">-</span>content<span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#context\"><span class=\"kw1\">context</span></a> <span class=\"re5\">'MAIN</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>ABC<span class=\"sy1\">:</span><span class=\"me0\">remove-lines-from-a-file</span> <span class=\"st0\">\"foobar.txt\"</span> <span class=\"nu0\">8</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#exit\"><span class=\"kw1\">exit</span></a><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 33, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> input_line_opt ic <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">try</span> Some <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput_line\"><span class=\"kw3\">input_line</span></a> ic<span class=\"br0\">)</span><br/>  <span class=\"kw1\">with</span> End_of_file <span class=\"sy0\">-&gt;</span> None<br/>\u00a0<br/><span class=\"kw1\">let</span> delete_lines filename start skip <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> start <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> skip <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinvalid_arg\"><span class=\"kw3\">invalid_arg</span></a> <span class=\"st0\">\"delete_lines\"</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> tmp_file <span class=\"sy0\">=</span> filename <span class=\"sy0\">^</span> <span class=\"st0\">\".tmp\"</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> ic <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALopen_in\"><span class=\"kw3\">open_in</span></a> filename<br/>  <span class=\"kw1\">and</span> oc <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALopen_out\"><span class=\"kw3\">open_out</span></a> tmp_file <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> until <span class=\"sy0\">=</span> start <span class=\"sy0\">+</span> skip <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> aux i <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> input_line_opt ic <span class=\"kw1\">with</span><br/>    <span class=\"sy0\">|</span> Some line <span class=\"sy0\">-&gt;</span><br/>        <span class=\"kw1\">if</span> i <span class=\"sy0\">&lt;</span> start <span class=\"sy0\">||</span> i <span class=\"sy0\">&gt;</span> until<br/>        <span class=\"kw1\">then</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALoutput_string\"><span class=\"kw3\">output_string</span></a> oc line<span class=\"sy0\">;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALoutput_char\"><span class=\"kw3\">output_char</span></a> oc <span class=\"sy0\">'</span>\\n<span class=\"sy0\">'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        aux <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> i<span class=\"br0\">)</span><br/>    <span class=\"sy0\">|</span> None <span class=\"sy0\">-&gt;</span><br/>        <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALclose_in\"><span class=\"kw3\">close_in</span></a> ic<span class=\"sy0\">;</span><br/>        <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALclose_out\"><span class=\"kw3\">close_out</span></a> oc<span class=\"sy0\">;</span><br/>        <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>remove filename<span class=\"sy0\">;</span><br/>        <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>rename tmp_file filename<br/>  <span class=\"kw1\">in</span><br/>  aux <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"kw1\">let</span> usage <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"Usage:\\n%s &lt;filename&gt; &lt;startline&gt; &lt;skipnumber&gt;\\n\"</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALexit\"><span class=\"kw3\">exit</span></a> <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>length <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span> <span class=\"kw1\">then</span> usage <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  delete_lines<br/>    <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_string\"><span class=\"kw3\">int_of_string</span></a> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_string\"><span class=\"kw3\">int_of_string</span></a> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>argv<span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Oforth", "loc": 12, "block": "<pre class=\"text highlighted_source\">: removeLines(filename, startLine, numLines)<br/>| line b endLine |<br/>   ListBuffer new -&gt;b<br/>   startLine numLines + 1 - -&gt;endLine<br/>\u00a0<br/>   0 File new(filename) forEach: line [<br/>      1+ dup between(startLine, endLine) ifFalse: [ b add(line) continue ]<br/>      numLines 1- -&gt;numLines<br/>      ]<br/>   drop numLines 0 == ifFalse: [ \"Error\u00a0: Removing lines beyond end of file\" println return ]<br/>\u00a0<br/>   File new(filename) dup open(File.WRITE) b apply(#[ &lt;&lt; dup cr ]) close\u00a0;</pre>"}, {"lang": "Pascal", "loc": 110, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> RemLines<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$mode objfpc}{$H+}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  <span class=\"co2\">{$IFDEF UNIX}{$IFDEF UseCThreads}</span><br/>  cthreads<span class=\"sy1\">,</span><br/>  <span class=\"co2\">{$ENDIF}{$ENDIF}</span><br/>  Classes<span class=\"sy1\">,</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">type</span><br/>  TRLResponse<span class=\"sy3\">=</span><span class=\"br0\">(</span>rlrOk<span class=\"sy1\">,</span> rlrEmptyFile<span class=\"sy1\">,</span> rlrNotEnoughLines<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> RemoveLines<span class=\"br0\">(</span><span class=\"kw1\">const</span> FileName<span class=\"sy1\">:</span> <span class=\"kw4\">String</span><span class=\"sy1\">;</span> <span class=\"kw1\">const</span> From<span class=\"sy1\">,</span> Count<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> TRLResponse<span class=\"sy1\">;</span><br/><span class=\"kw1\">const</span><br/>  LineOffs <span class=\"sy3\">=</span> Length<span class=\"br0\">(</span>LineEnding<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  TIn<span class=\"sy1\">,</span> TOut<span class=\"sy1\">:</span> TFileStream<span class=\"sy1\">;</span><br/>  tmpFn<span class=\"sy1\">,</span> MemBuff<span class=\"sy1\">,</span> FileBuff<span class=\"sy1\">:</span> <span class=\"kw4\">String</span><span class=\"sy1\">;</span><br/>  EndingPos<span class=\"sy1\">,</span> CharRead<span class=\"sy1\">,</span> LineNumber<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">procedure</span> WriteLine<span class=\"br0\">(</span>Line<span class=\"sy1\">:</span> <span class=\"kw4\">String</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">begin</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>From &gt; <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw3\">and</span> <span class=\"br0\">(</span>LineNumber <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>From <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw3\">and</span> <span class=\"br0\">(</span>LineNumber <span class=\"sy3\">=</span> <span class=\"br0\">(</span>From<span class=\"sy3\">+</span>Count<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      <span class=\"co1\">// First line to write, without LineEnding =&gt; Line unchanged</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>From <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"br0\">(</span>From &lt;<span class=\"sy3\">=</span> LineNumber<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw3\">and</span> <span class=\"br0\">(</span>LineNumber &lt; <span class=\"br0\">(</span>From<span class=\"sy3\">+</span>Count<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      <span class=\"co1\">// No line to write</span><br/>      Line <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"co1\">// all other cases, write Line preceded (!) by LineEnding</span><br/>      Line <span class=\"sy1\">:</span><span class=\"sy3\">=</span> LineEnding <span class=\"sy3\">+</span> Line<span class=\"sy1\">;</span><br/>    <span class=\"co1\">// Write</span><br/>    <span class=\"kw1\">if</span> Line &lt;&gt; <span class=\"st0\">''</span> <span class=\"kw1\">then</span><br/>      TOut<span class=\"sy1\">.</span><span class=\"kw3\">Write</span><span class=\"br0\">(</span>Line<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> Length<span class=\"br0\">(</span>Line<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">End</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> FileExists<span class=\"br0\">(</span>FileName<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">raise</span> Exception<span class=\"sy1\">.</span><span class=\"me1\">CreateFmt</span><span class=\"br0\">(</span><span class=\"st0\">'No such file\u00a0%s'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>FileName<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">if</span> From &lt; <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">raise</span> Exception<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">'First line must be &gt;= 1'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  tmpFn <span class=\"sy1\">:</span><span class=\"sy3\">=</span> GetTempFileName<span class=\"br0\">(</span>ExtractFilePath<span class=\"br0\">(</span>FileName<span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  TIn <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TFileStream<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span>FileName<span class=\"sy1\">,</span> fmOpenRead<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">try</span><br/>    TOut <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TFileStream<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span>tmpFn<span class=\"sy1\">,</span> fmCreate<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">try</span><br/>      FileBuff <span class=\"sy1\">:</span><span class=\"sy3\">=</span> StringOfChar<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"sy1\">,</span> <span class=\"nu0\">1024</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// Reserve memory in a string</span><br/>      LineNumber <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>      MemBuff <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">while</span> <span class=\"kw2\">True</span> <span class=\"kw1\">do</span><br/>      <span class=\"kw1\">begin</span><br/>        CharRead <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TIn<span class=\"sy1\">.</span><span class=\"kw3\">Read</span><span class=\"br0\">(</span>FileBuff<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"nu0\">1024</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>CharRead <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>          <span class=\"kw1\">break</span><span class=\"sy1\">;</span> <span class=\"co1\">// no more char to process</span><br/>        MemBuff <span class=\"sy3\">+=</span> Copy<span class=\"br0\">(</span>FileBuff<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> CharRead<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// op += is FPC specific</span><br/>        <span class=\"kw1\">while</span> <span class=\"kw2\">True</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">begin</span><br/>          <span class=\"co1\">// LineEnding can contain 1 or 2 chars, depending on the OS</span><br/>          EndingPos <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Pos<span class=\"br0\">(</span>LineEnding<span class=\"sy1\">,</span> MemBuff<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>          <span class=\"kw1\">if</span> EndingPos <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">break</span><span class=\"sy1\">;</span> <span class=\"co1\">// EndingLine in the next reading, maybe</span><br/>          Inc<span class=\"br0\">(</span>LineNumber<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>          WriteLine<span class=\"br0\">(</span>Copy<span class=\"br0\">(</span>MemBuff<span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> EndingPos <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>          MemBuff <span class=\"sy1\">:</span><span class=\"sy3\">=</span> Copy<span class=\"br0\">(</span>MemBuff<span class=\"sy1\">,</span> EndingPos <span class=\"sy3\">+</span> LineOffs<span class=\"sy1\">,</span> MaxInt<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>          <span class=\"co1\">// Loop for another line in MemBuff</span><br/>        <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      Inc<span class=\"br0\">(</span>LineNumber<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>      WriteLine<span class=\"br0\">(</span>MemBuff<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// Writes what remains</span><br/>    <span class=\"kw1\">finally</span><br/>      TOut<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">finally</span><br/>    TIn<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"co1\">// Temp File replaces the original file.</span><br/>  <span class=\"kw1\">if</span> DeleteFile<span class=\"br0\">(</span>FileName<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    RenameFile<span class=\"br0\">(</span>tmpFn<span class=\"sy1\">,</span> FileName<span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw1\">raise</span> Exception<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">'Unable to process the file'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"co1\">// Response</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>LineNumber <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> rlrEmptyFile<br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>LineNumber &lt; <span class=\"br0\">(</span>From<span class=\"sy3\">+</span>Count<span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> rlrNotEnoughLines<br/>  <span class=\"kw1\">else</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> rlrOk<span class=\"sy1\">;</span><br/><span class=\"kw1\">End</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  FileName<span class=\"sy1\">:</span> <span class=\"kw4\">String</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  FileName <span class=\"sy1\">:</span><span class=\"sy3\">=</span> IncludeTrailingPathDelimiter<span class=\"br0\">(</span>ExtractFilePath<span class=\"br0\">(</span>ParamStr<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'test.txt'</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">try</span><br/>    <span class=\"kw1\">case</span> RemoveLines<span class=\"br0\">(</span>FileName<span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>    rlrOk<span class=\"sy1\">:</span> <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Lines deleted'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    rlrEmptyFile<span class=\"sy1\">:</span> <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span>Format<span class=\"br0\">(</span><span class=\"st0\">'File \"%s\" is empty!'</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>FileName<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    rlrNotEnoughLines<span class=\"sy1\">:</span> <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Can'</span><span class=\"st0\">'t delete lines past the end of file'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">except</span><br/>    on E<span class=\"sy1\">:</span> Exception <span class=\"kw1\">do</span><br/>      <span class=\"kw3\">WriteLn</span><span class=\"br0\">(</span><span class=\"st0\">'Error: '</span> <span class=\"sy3\">+</span> E<span class=\"sy1\">.</span><span class=\"me1\">Message</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">ReadLn</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">End</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 2, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl -n -s -i</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"kw1\">unless</span> <span class=\"co5\">$.</span> <span class=\"sy0\">&gt;=</span> <span class=\"re0\">$from</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"co5\">$.</span> <span class=\"sy0\">&lt;=</span> <span class=\"re0\">$to</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 6, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> MAIN <span class=\"br0\">(</span><span class=\"re0\">$filename</span><span class=\"sy0\">,</span> <span class=\"re0\">$beg</span><span class=\"sy0\">,</span> <span class=\"re0\">$len</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@lines</span> <span class=\"sy0\">=</span> <span class=\"kw3\">split</span> <span class=\"co2\">/^^/</span><span class=\"sy0\">,</span> slurp <span class=\"re0\">$filename</span><span class=\"sy0\">;</span><br/>    unlink <span class=\"re0\">$filename</span><span class=\"sy0\">;</span>  <span class=\"co1\"># or rename</span><br/>    <span class=\"kw3\">splice</span><span class=\"br0\">(</span><span class=\"re0\">@lines</span><span class=\"sy0\">,</span><span class=\"re0\">$beg</span><span class=\"sy0\">,</span><span class=\"re0\">$len</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"re0\">$len</span> <span class=\"kw1\">or</span> <span class=\"kw3\">warn</span> <span class=\"st0\">\"Too few lines\"</span><span class=\"sy0\">;</span><br/>    spurt <span class=\"re0\">$filename</span><span class=\"sy0\">,</span> <span class=\"re0\">@lines</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 15, "block": "<pre class=\"text highlighted_source\">procedure remove_lines(string filename, integer start, integer n)<br/>    integer fn = open(filename,'r')<br/>    if fn!=-1 then<br/>        sequence lines = get_text(fn,GT_LF_STRIPPED)<br/>        close(fn)<br/>    end if<br/>    if fn=-1 or n&lt;1 or start&lt;1 or length(lines)&lt;start+n-1 then<br/>        puts(1,\"bad parameters!\\n\")<br/>    else<br/>        lines[start..start+n-1] = {}<br/>        fn = open(filename,'w')<br/>        puts(fn,join(lines,\"\\n\")<br/>        close(fn)<br/>    end if<br/>end procedure</pre>"}, {"lang": "PicoLisp", "loc": 7, "block": "<pre class=\"text highlighted_source\">(de deleteLines (File Start Cnt)<br/>   (let L (in File (make (until (eof) (link (line)))))<br/>      (if (&gt; (+ (dec 'Start) Cnt) (length L))<br/>         (quit \"Not enough lines\")<br/>         (out File<br/>            (mapc prinl (cut Start 'L))<br/>            (mapc prinl (nth L (inc Cnt))) ) ) ) )</pre>"}, {"lang": "PowerBASIC", "loc": 37, "block": "<pre class=\"text highlighted_source\">#DIM ALL<br/>\u00a0<br/>FUNCTION PBMAIN () AS LONG<br/>    DIM filespec AS STRING, linein AS STRING<br/>    DIM linecount AS LONG, L0 AS LONG, ok AS LONG<br/>\u00a0<br/>    filespec = DIR$(COMMAND$(1))<br/>    WHILE LEN(filespec)<br/>        linecount = 0: ok = 0<br/>        OPEN filespec FOR INPUT AS 1<br/>        OPEN filespec &amp; \".tmp\" FOR OUTPUT AS 2<br/>        DO UNTIL EOF(1)<br/>            LINE INPUT #1, linein<br/>            INCR linecount<br/>            IF VAL(COMMAND$(2)) &lt;&gt; linecount THEN<br/>                PRINT #2, linein<br/>            ELSE<br/>                ok = -1<br/>                FOR L0 = 2 TO VAL(COMMAND$(3))<br/>                    IF EOF(1) THEN<br/>                        ok = 1<br/>                        PRINT \"Tried to remove beyond the end of \"; filespec<br/>                        EXIT DO<br/>                    END IF<br/>                    LINE INPUT #1, linein<br/>                NEXT<br/>            END IF<br/>        LOOP<br/>        IF 0 = ok THEN<br/>            PRINT \"Lines to remove are beyond the end of \"; filespec<br/>        ELSEIF -1 = ok THEN<br/>            PRINT filespec; \": done\"<br/>        END IF<br/>        CLOSE<br/>        filespec = DIR$<br/>    WEND<br/>END FUNCTION</pre>"}, {"lang": "PowerShell", "loc": 13, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> del<span class=\"sy0\">-</span>line<span class=\"br0\">(</span><span class=\"re0\">$file</span><span class=\"sy0\">,</span> <span class=\"re0\">$start</span><span class=\"sy0\">,</span> <span class=\"re0\">$end</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"re0\">$start</span><span class=\"sy0\">--</span><br/>    <span class=\"re0\">$end</span><span class=\"sy0\">--</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">Get-Content</span> <span class=\"re0\">$file</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw3\">where</span><span class=\"br0\">{</span><br/>        <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"kw4\">-lt</span> <span class=\"re0\">$start</span> <span class=\"kw4\">-or</span> <span class=\"re0\">$i</span> <span class=\"kw4\">-gt</span> <span class=\"re0\">$end</span><span class=\"br0\">)</span><br/>        <span class=\"re0\">$i</span><span class=\"sy0\">++</span><br/>    <span class=\"br0\">}</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$file</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">Get-Content</span> <span class=\"re0\">$file</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>del<span class=\"sy0\">-</span>line <span class=\"st0\">\"foobar.txt\"</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 71, "block": "<pre class=\"purebasic highlighted_source\">\u00a0<br/><span class=\"co1\">; Contents of file 'input.txt' before deletion of lines\u00a0:</span><br/><span class=\"co1\">;</span><br/><span class=\"co1\">; cat</span><br/><span class=\"co1\">; dog</span><br/><span class=\"co1\">; giraffe</span><br/><span class=\"co1\">; lion</span><br/><span class=\"co1\">; mouse</span><br/><span class=\"co1\">; pig</span><br/><span class=\"co1\">; tiger</span><br/><span class=\"co1\">; zebra</span><br/>\u00a0<br/><span class=\"kw1\">EnableExplicit</span><br/>\u00a0<br/>#Output$ <span class=\"sy0\">=</span> <span class=\"st0\">\"output.txt\"</span><span class=\"co1\">; insert path to temporary output file </span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> RemoveLines<span class=\"br0\">(</span><span class=\"kw2\">Input</span>$, StartLine, NbLines<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> lineCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">Protected</span> endline <span class=\"sy0\">=</span> StartLine <span class=\"sy0\">+</span> NbLines <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Protected</span> row$<br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">ReadFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"kw2\">Input</span>$<span class=\"br0\">)</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Error opening input file\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">ProcedureReturn</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">CreateFile</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, #Output$<span class=\"br0\">)</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Error creating output file\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">CloseFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">ProcedureReturn</span> <br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw1\">While</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">Eof</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    row$ <span class=\"sy0\">=</span> <span class=\"kw2\">ReadString</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    lineCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> lineCount <span class=\"sy0\">&lt;</span> StartLine <span class=\"kw1\">Or</span> lineCount <span class=\"sy0\">&gt;</span> endLine    <br/>      <span class=\"kw2\">WriteStringN</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, row$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndIf</span>    <br/>  <span class=\"kw1\">Wend</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> endLine <span class=\"sy0\">&gt;</span> lineCount<br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Attempted to remove lines beyond the end of the file\"</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">; but still allow removal of lines (if any) up to the end of the file</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw2\">CloseFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseFile</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">DeleteFile</span><span class=\"br0\">(</span><span class=\"kw2\">Input</span>$<span class=\"br0\">)</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Unable to delete input file so output file can be renamed\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">ProcedureReturn</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">RenameFile</span><span class=\"br0\">(</span>#Output$, <span class=\"kw2\">Input</span>$<span class=\"br0\">)</span><br/>    <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Unable to rename output file\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Define</span> fInput$<br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">; delete lines 2,3 amnd 4 of 'input.txt'</span><br/>  fInput$ <span class=\"sy0\">=</span> <span class=\"st0\">\"input.txt\"</span><span class=\"co1\">; insert path to input file </span><br/>  RemoveLines<span class=\"br0\">(</span>fInput$, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Press any key to close the console\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Repeat</span>: <span class=\"kw2\">Delay</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>\u00a0: <span class=\"kw1\">Until</span> <span class=\"kw2\">Inkey</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 13, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/env python</span><br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">fileinput</span><span class=\"sy0\">,</span> <span class=\"kw3\">sys</span><br/>\u00a0<br/>fname<span class=\"sy0\">,</span> start<span class=\"sy0\">,</span> count <span class=\"sy0\">=</span> <span class=\"kw3\">sys</span>.<span class=\"me1\">argv</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>start<span class=\"sy0\">,</span> count <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span>start<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> line <span class=\"kw1\">in</span> <span class=\"kw3\">fileinput</span>.<span class=\"kw2\">input</span><span class=\"br0\">(</span>fname<span class=\"sy0\">,</span> inplace<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> backup<span class=\"sy0\">=</span><span class=\"st0\">'.orig'</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">if</span> start <span class=\"sy0\">&lt;=</span> <span class=\"kw3\">fileinput</span>.<span class=\"me1\">lineno</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> start + count:<br/>        <span class=\"kw1\">pass</span><br/>    <span class=\"kw1\">else</span>:<br/>        <span class=\"kw1\">print</span> line<span class=\"br0\">[</span>:-<span class=\"nu0\">1</span><span class=\"br0\">]</span><br/><span class=\"kw3\">fileinput</span>.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(define (remove-lines file from num)<br/>  (define lines (file-&gt;lines file))<br/>  (define-values [pfx rest] (split-at lines (sub1 from)))<br/>  (display-lines-to-file (append pfx (drop rest num)) file #:exists 'replace))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 23, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program reads and writes a specified file  and  delete(s)  specified record(s).  */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span>  iFID   <span class=\"st0\">','</span>   N   <span class=\"st0\">\",\"</span>   many   <span class=\"sy0\">.</span>       <span class=\"coMULTI\">/*input FID, start of delete, how many.*/</span><br/><span class=\"kw1\">if</span> iFID=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> er  <span class=\"st0\">\"no input fileID specified.\"</span>                           <span class=\"coMULTI\">/*oops.*/</span><br/><span class=\"kw1\">if</span>    N=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> er  <span class=\"st0\">\"no start number specified.\"</span>                           <span class=\"coMULTI\">/*oops.*/</span><br/><span class=\"kw1\">if</span> many=<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> many=<span class=\"nu0\">1</span>                          <span class=\"coMULTI\">/*Not specified?  Assume delete 1 line.*/</span><br/>stop=N+many-<span class=\"nu0\">1</span>                                    <span class=\"coMULTI\">/*calculate  high end  of delete range.*/</span><br/>oFID=iFID<span class=\"st0\">'.$$$'</span>                                  <span class=\"coMULTI\">/*temp name (fileID) of the output file*/</span><br/>#=<span class=\"nu0\">0</span>                                              <span class=\"coMULTI\">/*the count (so far) of records written*/</span><br/>      <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">while</span>  <span class=\"kw6\">lines</span><span class=\"br0\">(</span>iFID<span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"nu0\">0</span>             <span class=\"coMULTI\">/*J  is the record# (line)  being read.*/</span><br/>      @=<span class=\"kw2\">linein</span><span class=\"br0\">(</span>iFID<span class=\"br0\">)</span>                             <span class=\"coMULTI\">/*read a record (line) from input file.*/</span><br/>      <span class=\"kw1\">if</span> j<span class=\"sy0\">&gt;</span>=N <span class=\"sy0\">&amp;</span> j<span class=\"sy0\">&lt;</span>=stop  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>            <span class=\"coMULTI\">/*if it's in the range, then ignore it.*/</span><br/>      <span class=\"kw1\">call</span> <span class=\"kw6\">lineout</span> oFID,@;    #=#+<span class=\"nu0\">1</span>              <span class=\"coMULTI\">/*write record (line);, bump write cnt.*/</span><br/>      <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                                <span class=\"coMULTI\">/* [\u2191]  by ignoring it is to delete it.*/</span><br/>j=j-<span class=\"nu0\">1</span>                                            <span class=\"coMULTI\">/*adjust J (because of DO loop advance)*/</span><br/><span class=\"kw1\">if</span> j<span class=\"sy0\">&lt;</span>stop  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span>  <span class=\"st0\">\"The number of lines in file is less than the range given.\"</span><br/>$=<span class=\"st0\">'\"'</span>                                            <span class=\"coMULTI\">/*handle cases of blanks in the FID(s).*/</span><br/><span class=\"st0\">'ERASE'</span>   $ <span class=\"sy0\">||</span> iFID <span class=\"sy0\">||</span> $                         <span class=\"coMULTI\">/*erase the original file.             */</span><br/><span class=\"st0\">'RENAME'</span>  $ <span class=\"sy0\">||</span> oFID <span class=\"sy0\">||</span> $      $ <span class=\"sy0\">||</span> iFID <span class=\"sy0\">||</span> $     <span class=\"coMULTI\">/*rename \"    new      \"  to original. */</span><br/><span class=\"kw1\">say</span> <span class=\"st0\">'file '</span>    iFID    <span class=\"st0\">\" had\"</span>    j    <span class=\"st0\">'record'</span>s<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"st0\">\", it now has\"</span>     #    <span class=\"st0\">'record'</span>s<span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"st0\">\".\"</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>er:   <span class=\"kw1\">say</span>;      <span class=\"kw1\">say</span> <span class=\"st0\">'***error***'</span>;        <span class=\"kw1\">say</span>;    <span class=\"kw1\">say</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>;         <span class=\"kw1\">say</span>;         <span class=\"kw1\">exit</span> <span class=\"nu0\">13</span><br/>s:    <span class=\"kw1\">if</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>;   <span class=\"kw1\">return</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span><span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"st0\">'s'</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>       <span class=\"coMULTI\">/*pluralizer.*/</span></pre>"}, {"lang": "Ring", "loc": 15, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>cStr = read(\"C:\\Ring\\bin\\filename.txt\")<br/>aList = str2list(cStr)<br/>see aList + nl<br/>lineStart = 3<br/>lineCount = 5<br/>num = -1<br/>for n = lineStart to lineStart+lineCount-1<br/>    num += 1<br/>    del(aList,n-num) <br/>next<br/>cStr = list2str(aList)<br/>see cStr + nl<br/>write(\"C:\\Ring\\bin\\filename.txt\",cStr)<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 38, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'tempfile'</span><br/>\u00a0<br/><span class=\"kw1\">def</span> remove_lines<span class=\"br0\">(</span>filename, start, num<span class=\"br0\">)</span><br/>  tmp = <span class=\"kw4\">Tempfile</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>fp<span class=\"sy0\">|</span><br/>    <span class=\"kw4\">File</span>.<span class=\"me1\">foreach</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>line<span class=\"sy0\">|</span><br/>      <span class=\"kw1\">if</span> $. <span class=\"sy0\">&gt;</span>= start <span class=\"kw1\">and</span> num <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>        num <span class=\"sy0\">-</span>= <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">else</span><br/>        fp.<span class=\"kw3\">puts</span> line<br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    fp<br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"Warning: End of file encountered before all lines removed\"</span> <span class=\"kw1\">if</span> num <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw4\">FileUtils</span>.<span class=\"me1\">copy</span><span class=\"br0\">(</span>tmp.<span class=\"me1\">path</span>, filename<span class=\"br0\">)</span><br/>  tmp.<span class=\"me1\">unlink</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\"># Test code</span><br/><span class=\"kw1\">def</span> setup<span class=\"br0\">(</span>filename, start, remove<span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"remove #{remove} lines starting at line #{start}\"</span><br/>  <span class=\"kw4\">File</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>filename, <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>fh<span class=\"sy0\">|</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">5</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>i<span class=\"sy0\">|</span> fh.<span class=\"kw3\">puts</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">*</span>i <span class=\"sy0\">+</span> i.<span class=\"me1\">to_s</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"before:\"</span>, <span class=\"kw4\">File</span>.<span class=\"me1\">read</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> teardown<span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"after:\"</span>, <span class=\"kw4\">File</span>.<span class=\"me1\">read</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span><br/>  <span class=\"kw4\">File</span>.<span class=\"me1\">unlink</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>filename = <span class=\"st0\">\"foobar.txt\"</span><br/>start = <span class=\"nu0\">2</span><br/><span class=\"br0\">[</span><span class=\"nu0\">2</span>, <span class=\"nu0\">6</span><span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>remove<span class=\"sy0\">|</span><br/>  setup<span class=\"br0\">(</span>filename, start, remove<span class=\"br0\">)</span><br/>  remove_lines<span class=\"br0\">(</span>filename, start, remove<span class=\"br0\">)</span><br/>  teardown<span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Run BASIC", "loc": 14, "block": "<pre class=\"text highlighted_source\">fileName$ = \"aFile.txt\"<br/>startLine = 100<br/>lineCount = 10<br/>\u00a0<br/>open filename$          for input  as #in<br/>open filename$\u00a0; \"_tmp\" for output as #out<br/>\u00a0<br/>while not(eof(#in))<br/>   lineNum = lineNum + 1<br/>   line input #in, a$<br/>   if lineNum &lt; startLine or lineNum &gt;= startLine + lineCount then print #out, a$<br/>wend<br/>close #in<br/>close #out</pre>"}, {"lang": "Rust", "loc": 34, "block": "<pre class=\"text highlighted_source\">extern crate rustc_serialize;<br/>extern crate docopt;<br/>\u00a0<br/>use docopt::Docopt;<br/>\u00a0<br/>use std::io::{BufReader,BufRead};<br/>use std::fs::File;<br/>\u00a0<br/>const USAGE: &amp;'static str = \"<br/>Usage: rosetta &lt;start&gt; &lt;count&gt; &lt;file&gt;<br/>\";<br/>\u00a0<br/>#[derive(Debug, RustcDecodable)]<br/>struct Args {<br/>    arg_start: usize,<br/>    arg_count: usize,<br/>    arg_file: String,<br/>}<br/>\u00a0<br/>fn main() {<br/>    let args: Args = Docopt::new(USAGE)<br/>        .and_then(|d| d.decode())<br/>        .unwrap_or_else(|e| e.exit());<br/>\u00a0<br/>    let file = BufReader::new(File::open(args.arg_file).unwrap());<br/>\u00a0<br/>    for (i, line) in file.lines().enumerate() {<br/>        let cur = i + 1;<br/>\u00a0<br/>        if cur &lt; args.arg_start || cur &gt;= (args.arg_start + args.arg_count) {<br/>            println!(\"{}\", line.unwrap());<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "Scala", "loc": 18, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> RemoveLinesFromAFile <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  args <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>filename, start, num<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span><br/>\u00a0<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">nio</span>.<span class=\"me1\">file</span>.<span class=\"br0\">{</span>Files,Paths<span class=\"br0\">}</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> lines <span class=\"sy0\">=</span> scala.<span class=\"me1\">io</span>.<span class=\"me1\">Source</span>.<span class=\"me1\">fromFile</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span>.<span class=\"me1\">getLines</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> keep <span class=\"sy0\">=</span> start.<span class=\"me1\">toInt</span> - <span class=\"nu0\">1</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> top <span class=\"sy0\">=</span> lines.<span class=\"me1\">take</span><span class=\"br0\">(</span>keep<span class=\"br0\">)</span>.<span class=\"me1\">toList</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> drop <span class=\"sy0\">=</span> lines.<span class=\"me1\">take</span><span class=\"br0\">(</span>num.<span class=\"me1\">toInt</span><span class=\"br0\">)</span>.<span class=\"me1\">toList</span><br/>      Files.<span class=\"me1\">write</span><span class=\"br0\">(</span>Paths.<span class=\"me1\">get</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span>, scala.<span class=\"me1\">collection</span>.<span class=\"me1\">JavaConversions</span>.<span class=\"me1\">asJavaIterable</span><span class=\"br0\">(</span>top ++ lines<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>top.<span class=\"me1\">size</span> <span class=\"sy0\">&lt;</span> keep || drop.<span class=\"me1\">size</span> <span class=\"sy0\">&lt;</span> num.<span class=\"me1\">toInt</span><span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span>s<span class=\"st0\">\"Too few lines: removed only ${drop.size} of $num lines starting at $start\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span><br/>      println<span class=\"br0\">(</span><span class=\"st0\">\"Usage: RemoveLinesFromAFile &lt;filename&gt; &lt;startLine&gt; &lt;numLines&gt;\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 31, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"osfiles.s7i\";<br/>\u00a0<br/>const proc: removeLines (in string: fileName, in integer: start, in integer: count) is func<br/>  local<br/>    var file: inFile is STD_NULL;<br/>    var file: outFile is STD_NULL;<br/>    var integer: lineNumber is 1;<br/>    var string: line is \"\";<br/>  begin<br/>    inFile\u00a0:= open(fileName, \"r\");<br/>    outFile\u00a0:= open(fileName &amp; \".tmp\", \"w\");<br/>    while hasNext(inFile) do<br/>      line\u00a0:= getln(inFile);<br/>      if lineNumber &lt; start or lineNumber &gt;= start + count then<br/>        writeln(outFile, line);<br/>      end if;<br/>      incr(lineNumber);<br/>    end while;<br/>    close(inFile);<br/>    close(outFile);<br/>    removeFile(fileName);<br/>    moveFile(fileName &amp; \".tmp\", fileName);<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    if length(argv(PROGRAM)) = 3 then<br/>      removeLines(argv(PROGRAM)[1], integer parse (argv(PROGRAM)[2]), integer parse (argv(PROGRAM)[3]));<br/>    end if;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 7, "block": "<pre class=\"ruby highlighted_source\">func remove_lines<span class=\"br0\">(</span>file, beg, len<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var lines = file.<span class=\"me1\">open_r</span>.<span class=\"me1\">lines</span>;<br/>    lines.<span class=\"me1\">splice</span><span class=\"br0\">(</span>beg, len<span class=\"br0\">)</span>.<span class=\"me1\">len</span> == len <span class=\"sy0\">||</span> warn <span class=\"st0\">\"Too few lines\"</span>;<br/>    file.<span class=\"me1\">open_w</span>.<span class=\"kw3\">print</span><span class=\"br0\">(</span>lines.<span class=\"me1\">join</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>remove_lines<span class=\"br0\">(</span><span class=\"kw4\">File</span><span class=\"br0\">(</span><span class=\"kw2\">__FILE__</span><span class=\"br0\">)</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Stata", "loc": 5, "block": "<pre class=\"text highlighted_source\">* drop lines 20 to 30<br/>drop in 20/30<br/>\u00a0<br/>* keep lines 20 to 30, and remove everything else<br/>keep in 20/30</pre>"}, {"lang": "Tcl", "loc": 13, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> removeLines <span class=\"br0\">{</span>fileName startLine count<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\"># Work out range to remove</span><br/>    <span class=\"kw1\">set</span> from <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$startLine</span> - <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> to <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$startLine</span> + <span class=\"re0\">$count</span> - <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Read the lines</span><br/>    <span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$fileName</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> lines <span class=\"br0\">[</span><span class=\"kw2\">split</span> <span class=\"br0\">[</span><span class=\"kw2\">read</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">]</span><br/>    <span class=\"kw2\">close</span> <span class=\"re0\">$f</span><br/>    <span class=\"co1\"># Write the lines back out, without removed range</span><br/>    <span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$fileName</span> w<span class=\"br0\">]</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"re0\">$f</span> <span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"br0\">[</span><span class=\"kw2\">lreplace</span> <span class=\"re0\">$lines</span> <span class=\"re0\">$from</span> <span class=\"re0\">$to</span><span class=\"br0\">]</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">]</span><br/>    <span class=\"kw2\">close</span> <span class=\"re0\">$f</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TUSCRIPT", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$! input=testfile,begnr=3,endnr=4<br/>$$ MODE TUSCRIPT<br/>- CREATE inputfile<br/>ERROR/STOP CREATE (input,FDF-o,-std-)<br/>FILE/ERASE $input<br/> LOOP n=1,9<br/> content=CONCAT (\"line\",n)<br/> DATA {content}<br/> ENDLOOP<br/>ENDFILE<br/>\u00a0<br/>- CREATE outputfile<br/>output=\"outputfile\"<br/>\u00a0<br/>ERROR/STOP CREATE (output,fdf-o,-std-)<br/>ACCESS q:  READ/RECORDS/utf8 $input  L,line<br/>ACCESS z: WRITE/RECORDS/utf8 $output L,line<br/>PRINT \"content: of output-file\"<br/>LOOP/9999<br/>READ/NEXT/EXIT q<br/>IF (begnr&lt;=L&amp;&amp;endnr&gt;=L) CYCLE<br/>PRINT line<br/>WRITE z<br/>ENDLOOP<br/>ENDACCESS/PRINT q<br/>ENDACCESS/PRINT z<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 17, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/sh</span><br/>error<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">echo</span> <span class=\"sy0\">&gt;&amp;</span><span class=\"nu0\">2</span> <span class=\"st0\">\"$0: $*\"</span><br/>  <span class=\"kw3\">exit</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">[</span> <span class=\"re4\">$#</span> <span class=\"re5\">-ne</span> <span class=\"nu0\">3</span> <span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> error <span class=\"st0\">\"Incorrect number of parameters\"</span><br/>\u00a0<br/><span class=\"re2\">file</span>=<span class=\"re4\">$1</span><br/><span class=\"re2\">start</span>=<span class=\"re4\">$2</span><br/><span class=\"re2\">count</span>=<span class=\"re4\">$3</span><br/><span class=\"re2\">end</span>=<span class=\"sy0\">`</span><span class=\"kw2\">expr</span> <span class=\"re1\">$start</span> + <span class=\"re1\">$count</span> - <span class=\"nu0\">1</span><span class=\"sy0\">`</span><br/>\u00a0<br/><span class=\"br0\">[</span> <span class=\"re5\">-f</span> <span class=\"st0\">\"<span class=\"es2\">$file</span>\"</span> <span class=\"br0\">]</span> <span class=\"sy0\">||</span> error <span class=\"st0\">\"<span class=\"es2\">$file</span> does not exist\"</span><br/>\u00a0<br/><span class=\"kw2\">sed</span> <span class=\"st0\">\"<span class=\"es2\">$start</span>,<span class=\"es3\">${end}</span>d\"</span> <span class=\"st0\">\"<span class=\"es2\">$file</span>\"</span> <span class=\"sy0\">&gt;/</span>tmp<span class=\"sy0\">/</span><span class=\"re4\">$$</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw2\">mv</span> <span class=\"sy0\">/</span>tmp<span class=\"sy0\">/</span><span class=\"re4\">$$</span> <span class=\"st0\">\"<span class=\"es2\">$file</span>\"</span><br/>\u00a0</pre>"}, {"lang": "VBA", "loc": 35, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> Main()<br/>   <span class=\"co1\">'See Output #1<br/></span>   RemoveLines <span class=\"st0\">\"C:\\Users\\\"</span> &amp; Environ(<span class=\"st0\">\"username\"</span>) &amp; <span class=\"st0\">\"\\Desktop\\foobar.txt\"</span>, 11, 5<br/>   <span class=\"co1\">'See Output #2<br/></span>   RemoveLines <span class=\"st0\">\"C:\\Users\\\"</span> &amp; Environ(<span class=\"st0\">\"username\"</span>) &amp; <span class=\"st0\">\"\\Desktop\\foobar.txt\"</span>, 8, 5<br/>   <span class=\"co1\">'See Output #3<br/></span>   RemoveLines <span class=\"st0\">\"C:\\Users\\\"</span> &amp; Environ(<span class=\"st0\">\"username\"</span>) &amp; <span class=\"st0\">\"\\Desktop\\foobar.txt\"</span>, 3, 5<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Private</span> <span class=\"kw2\">Sub</span> RemoveLines(StrFile <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, StartLine <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span>, NumberOfLines <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span>)<br/><span class=\"kw4\">Dim</span> Nb <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, s <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, count <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span>, out <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/>   Nb = FreeFile<br/>   <span class=\"kw4\">Open</span> StrFile <span class=\"kw3\">For</span> <span class=\"kw4\">Input</span> <span class=\"kw4\">As</span> #Nb<br/>      <span class=\"kw3\">While</span> <span class=\"kw3\">Not</span> EOF(Nb)<br/>         count = count + 1<br/>         <span class=\"kw4\">Line</span> <span class=\"kw4\">Input</span> #Nb, s<br/>         <span class=\"kw3\">If</span> count &lt; StartLine <span class=\"kw3\">Or</span> count &gt;= StartLine + NumberOfLines <span class=\"kw3\">Then</span><br/>            out = out &amp; s &amp; vbCrLf<br/>         <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>      Wend<br/>   <span class=\"kw3\">Close</span> #Nb<br/>   <span class=\"kw3\">If</span> StartLine &gt;= count <span class=\"kw3\">Then</span><br/>      MsgBox <span class=\"st0\">\"The file contains only \"</span> &amp; count &amp; <span class=\"st0\">\" lines\"</span><br/>   <span class=\"kw3\">ElseIf</span> StartLine + NumberOfLines &gt; count <span class=\"kw3\">Then</span><br/>      MsgBox <span class=\"st0\">\"You only can remove \"</span> &amp; count - StartLine &amp; <span class=\"st0\">\" lines\"</span><br/>   <span class=\"kw3\">Else</span><br/>      Nb = FreeFile<br/>      <span class=\"kw4\">Open</span> StrFile <span class=\"kw3\">For</span> <span class=\"kw4\">Output</span> <span class=\"kw4\">As</span> #Nb<br/>         <span class=\"kw4\">Print</span> #Nb, out<br/>      <span class=\"kw3\">Close</span> #Nb<br/>   <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0</pre>"}, {"lang": "VBScript", "loc": 33, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Sub</span> remove_lines(filepath,start,number)<br/>\t<span class=\"kw4\">Set</span> objFSO = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Scripting.FileSystemObject\"</span>)<br/>\t<span class=\"kw4\">Set</span> InFile = objFSO.OpenTextFile(filepath,1,<span class=\"kw5\">False</span>)<br/>\tline_count = 1<br/>\tdiscard_count = 1<br/>\tout_txt = <span class=\"st0\">\"\"</span><br/>\t<span class=\"kw3\">Do</span> <span class=\"kw3\">Until</span> InFile.AtEndOfStream<br/>\t\t<span class=\"kw4\">line</span> = InFile.ReadLine<br/>\t\t<span class=\"kw3\">If</span> line_count &lt;&gt; start <span class=\"kw3\">Then</span><br/>\t\t\t<span class=\"kw3\">If</span> InFile.AtEndOfStream = <span class=\"kw5\">False</span> <span class=\"kw3\">Then</span><br/>\t\t\t\tout_txt = out_txt &amp; <span class=\"kw4\">line</span> &amp; vbCrLf<br/>\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\tout_txt = out_txt &amp; <span class=\"kw4\">line</span><br/>\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t\tline_count = line_count + 1<br/>\t\t<span class=\"kw3\">Else</span><br/>\t\t\t<span class=\"kw3\">Do</span> <span class=\"kw3\">Until</span> discard_count = number<br/>\t\t\t\tInFile.SkipLine<br/>\t\t\t\tdiscard_count = discard_count + 1<br/>\t\t\t<span class=\"kw3\">Loop</span><br/>\t\tline_count = line_count + 1<br/>\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t<span class=\"kw3\">Loop</span><br/>\tInFile.<span class=\"kw3\">Close</span><br/>\t<span class=\"kw4\">Set</span> OutFile = objFSO.OpenTextFile(filepath,2,<span class=\"kw5\">False</span>)<br/>\tOutFile.Write(out_txt)<br/>\tOutFile.<span class=\"kw3\">Close</span><br/>\t<span class=\"kw4\">Set</span> objFSO = <span class=\"kw5\">Nothing</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Call</span> remove_lines(<span class=\"st0\">\"C:\\Test.txt\"</span>,3,4)<br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 8, "block": "<pre class=\"text highlighted_source\">fcn deleteLinesM(fname, start,num){<br/>    blob:=File(fname).read();     // file to memory<br/>    n:=blob.seek(Void,start-1);   // seek to line and remember it<br/>    blob.del(n,blob.seek(Void,num)-n);<br/>\u00a0<br/>    File.stdout.write(blob);<br/>}<br/>deleteLinesM(\"nn.zkl\", 2,5);</pre>"}]}