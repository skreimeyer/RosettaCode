{"task": "Strip_a_set_of_characters_from_a_string", "blocks": [{"lang": "360 Assembly", "loc": 74, "block": "<pre class=\"text highlighted_source\">*        Strip a set of characters from a string  07/07/2016<br/>STRIPCH  CSECT<br/>         USING  STRIPCH,R13        base register<br/>         B      72(R15)            skip savearea<br/>         DC     17F'0'             savearea<br/>         STM    R14,R12,12(R13)    prolog<br/>         ST     R13,4(R15)         \" &lt;-<br/>         ST     R15,8(R13)         \" -&gt;<br/>         LR     R13,R15            \" addressability<br/>         LA     R1,PARMLIST        parameter list<br/>         BAL    R14,STRIPCHR       c3=stripchr(c1,c2)<br/>         LA     R2,PG              @pg<br/>         LH     R3,C3              length(c3)<br/>         LA     R4,C3+2            @c3<br/>         LR     R5,R3              length(c3)<br/>         MVCL   R2,R4              pg=c3<br/>         XPRNT  PG,80              print buffer<br/>         L      R13,4(0,R13)       epilog <br/>         LM     R14,R12,12(R13)    \" restore<br/>         XR     R15,R15            \" rc=0<br/>         BR     R14                exit<br/>PARMLIST DC     A(C3)              @c3<br/>         DC     A(C1)              @c1<br/>         DC     A(C2)              @c2<br/>C1       DC     H'43',CL62'She was a soul stripper. She took my heart!'<br/>C2       DC     H'3',CL14'aei'     c2      [varchar(14)]<br/>C3       DS     H,CL62             c3      [varchar(62)]<br/>PG       DC     CL80' '            buffer  [char(80)]<br/>*------- stripchr -----------------------------------------------------<br/>STRIPCHR L      R9,0(R1)           @parm1<br/>         L      R2,4(R1)           @parm2<br/>         L      R3,8(R1)           @parm3<br/>         MVC    PHRASE(64),0(R2)   phrase=parm2<br/>         MVC    REMOVE(16),0(R3)   remove=parm3<br/>         SR     R8,R8              k=0<br/>         LA     R6,1               i=1<br/>LOOPI    CH     R6,PHRASE          do i=1 to length(phrase)<br/>         BH     ELOOPI             \"<br/>         LA     R4,PHRASE+1          @phrase<br/>         AR     R4,R6                +i<br/>         MVC    CI(1),0(R4)          ci=substr(phrase,i,1)<br/>         MVI    OK,X'01'             ok='1'B<br/>         LA     R7,1                 j=1<br/>LOOPJ    CH     R7,REMOVE            do j=1 to length(remove)<br/>         BH     ELOOPJ               \"<br/>         LA     R4,REMOVE+1            @remove<br/>         AR     R4,R7                  +j<br/>         MVC    CJ,0(R4)               cj=substr(remove,j,1)<br/>         CLC    CI,CJ                  if ci=cj<br/>         BNE    CINECJ                 then<br/>         MVI    OK,X'00'                 ok='0'B<br/>         B      ELOOPJ                   leave j<br/>CINECJ   LA     R7,1(R7)               j=j+1<br/>         B      LOOPJ                end do j<br/>ELOOPJ   CLI    OK,X'01'             if ok<br/>         BNE    NOTOK                then<br/>         LA     R8,1(R8)               k=k+1<br/>         LA     R4,RESULT+1            @result<br/>         AR     R4,R8                  +k<br/>         MVC    0(1,R4),CI             substr(result,k,1)=ci<br/>NOTOK    LA     R6,1(R6)           i=i+1<br/>         B      LOOPI              end do i<br/>ELOOPI   STH    R8,RESULT          length(result)=k<br/>         MVC    0(64,R9),RESULT    return(result)<br/>         BR     R14                return to caller<br/>CI       DS     CL1                ci      [char(1)]<br/>CJ       DS     CL1                cj      [char(1)]<br/>OK       DS     X                  ok      [boolean]<br/>PHRASE   DS     H,CL62             phrase  [varchar(62)]<br/>REMOVE   DS     H,CL14             remove  [varchar(14)]<br/>RESULT   DS     H,CL62             result  [varchar(62)]<br/>*        ----   -------------------------------------------------------<br/>         YREGS<br/>         END    STRIPCH</pre>"}, {"lang": "Ada", "loc": 27, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Strip_Characters_From_String <span class=\"kw1\">is</span><br/>\u00a0<br/>   <span class=\"kw3\">function</span> Strip<span class=\"br0\">(</span>The_String: String; The_Characters: String<span class=\"br0\">)</span><br/>                  <span class=\"kw1\">return</span> String <span class=\"kw1\">is</span><br/>      Keep:   <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Character<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Boolean\u00a0:= <span class=\"br0\">(</span><span class=\"kw3\">others</span> =&gt; True<span class=\"br0\">)</span>;<br/>      Result: String<span class=\"br0\">(</span>The_String'<span class=\"kw3\">Range</span><span class=\"br0\">)</span>;<br/>      Last:   Natural\u00a0:= Result'First-<span class=\"nu0\">1</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> The_Characters'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Keep<span class=\"br0\">(</span>The_Characters<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>\u00a0:= False;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">for</span> J <span class=\"kw3\">in</span> The_String'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">if</span> Keep<span class=\"br0\">(</span>The_String<span class=\"br0\">(</span>J<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            Last\u00a0:= Last+<span class=\"nu0\">1</span>;<br/>            Result<span class=\"br0\">(</span>Last<span class=\"br0\">)</span>\u00a0:= The_String<span class=\"br0\">(</span>J<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Result<span class=\"br0\">(</span>Result'First .. <span class=\"me1\">Last</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Strip;<br/>\u00a0<br/>   S: String\u00a0:= <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>;<br/>\u00a0<br/><span class=\"kw1\">begin</span> <span class=\"co1\">-- main</span><br/>   Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span><span class=\"br0\">(</span>Strip<span class=\"br0\">(</span>S, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Strip_Characters_From_String;</pre>"}, {"lang": "Aime", "loc": 31, "block": "<pre class=\"text highlighted_source\">text<br/>stripchars1(data b, text w)<br/>{<br/>    integer p;<br/>\u00a0<br/>    p = b.look(0, w);<br/>    while (p &lt; ~b) {<br/>        b.delete(p);<br/>        p += b.look(p, w);<br/>    }<br/>\u00a0<br/>     b;<br/>}<br/>\u00a0<br/>text<br/>stripchars2(data b, text w)<br/>{<br/>    b.drop(w);<br/>}<br/>\u00a0<br/>integer<br/>main(void)<br/>{<br/>    o_text(stripchars1(\"She was a soul stripper. She took my heart!\", \"aei\"));<br/>    o_newline();<br/>\u00a0<br/>    o_text(stripchars2(\"She was a soul stripper. She took my heart!\", \"aei\"));<br/>    o_newline();<br/>\u00a0<br/>    return 0;<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 13, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\">#!/usr/local/bin/a68g --script #</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> strip chars <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">STRING</span> mine<span class=\"sy1\">,</span> ore<span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>  <span class=\"kw3\">STRING</span> out <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/>  <span class=\"kw2\">FOR</span> i <span class=\"kw2\">FROM</span> <span class=\"kw8\">LWB</span> mine <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> mine <span class=\"kw2\">DO</span><br/>    <span class=\"kw2\">IF</span> <span class=\"kw8\">NOT</span> <span class=\"kw26\">char in string</span><span class=\"br0\">(</span>mine<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"kw4\">LOC</span> <span class=\"kw3\">INT</span><span class=\"sy1\">,</span> ore<span class=\"br0\">)</span> <span class=\"kw2\">THEN</span><br/>      out <span class=\"sy1\">+:=</span> mine<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>    <span class=\"kw2\">FI</span><br/>  <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>  out<span class=\"br0\">[</span><span class=\"sy1\">@</span><span class=\"kw8\">LWB</span> mine<span class=\"br0\">]</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$gl$<span class=\"sy1\">,</span>stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "AppleScript", "loc": 13, "block": "<pre class=\"applescript highlighted_source\">stripChar<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw3\">on</span> stripChar<span class=\"br0\">(</span>str, chrs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> AppleScript<br/>        <span class=\"kw3\">set</span> oldTIDs <span class=\"kw3\">to</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span><br/>        <span class=\"kw3\">set</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> characters <span class=\"kw3\">of</span> chrs<br/>        <span class=\"kw3\">set</span> TIs <span class=\"kw3\">to</span> <span class=\"kw1\">text</span> <span class=\"kw1\">items</span> <span class=\"kw3\">of</span> str<br/>        <span class=\"kw3\">set</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> <span class=\"st0\">\"\"</span><br/>        <span class=\"kw3\">set</span> str <span class=\"kw3\">to</span> TIs <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><br/>        <span class=\"kw3\">set</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> oldTIDs<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/>    <span class=\"kw3\">return</span> str<br/><span class=\"kw3\">end</span> stripChar</pre>"}, {"lang": "Applesoft BASIC", "loc": 21, "block": "<pre class=\"text highlighted_source\">100  LET S$ = \"SHE WAS A SOUL STRIPPER. SHE TOOK MY HEART!\"<br/>110  LET RM$ = \"AEI\"<br/>120  GOSUB 200STRIPCHARS<br/>130  PRINT SC$<br/>190  END <br/>200  REM <br/>210  REM STRIPCHARS<br/>220  REM <br/>230  LET SC$ = \"\"<br/>240  LET SL =  LEN (S$)<br/>250  IF SL = 0 THEN  RETURN <br/>260  FOR SI = 1 TO SL<br/>270  LET SM$ =  MID$ (S$,SI,1)<br/>280  FOR SJ = 1 TO  LEN (RM$)<br/>290  LET SR$ =  MID$ (RM$,SJ,1)<br/>300  LET ST = SR$ &lt;  &gt; SM$<br/>310  IF ST THEN  NEXT SJ<br/>320  IF ST THEN SC$ = SC$ + SM$<br/>330  NEXT SI<br/>340  RETURN<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 7, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>StripChars<span class=\"br0\">(</span>string<span class=\"sy0\">,</span> charsToStrip<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>   <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a> Parse<span class=\"sy0\">,</span> charsToStrip<br/>      <a href=\"http://www.autohotkey.com/docs/commands/StringReplace.htm\"><span class=\"kw3\">StringReplace</span></a><span class=\"sy0\">,</span> string<span class=\"sy0\">,</span> string<span class=\"sy0\">,</span>\u00a0% <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> All<br/>   <span class=\"kw1\">return</span> string<br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 7, "block": "<pre class=\"awk highlighted_source\"><span class=\"co1\">#!/usr/bin/awk -f </span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>   x = <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>;<br/>   <span class=\"kw5\">print</span> x;<br/>   <span class=\"kw4\">gsub</span><span class=\"br0\">(</span><span class=\"sy3\">/</span><span class=\"br0\">[</span>aei<span class=\"br0\">]</span><span class=\"sy3\">/</span>,<span class=\"st0\">\"\"</span>,x<span class=\"br0\">)</span>;<br/>   <span class=\"kw5\">print</span> x;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BASIC", "loc": 19, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckdeclare.shtml\"><span class=\"kw3\">DECLARE</span></a> <span class=\"kw1\">FUNCTION</span> stripchars$<span class=\"br0\">(</span>src <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> remove <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> stripchars$<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">FUNCTION</span> stripchars$<span class=\"br0\">(</span>src <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"sy0\">,</span> remove <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><span class=\"br0\">)</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> l0 <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> t <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qcklong.shtml\"><span class=\"kw3\">LONG</span></a><span class=\"sy0\">,</span> s <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/>    s <span class=\"sy0\">=</span> src<br/>    <span class=\"kw1\">FOR</span> l0 <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <a href=\"http://www.qbasicnews.com/qboho/qcklen.shtml\"><span class=\"kw3\">LEN</span></a><span class=\"br0\">(</span>remove<span class=\"br0\">)</span><br/>        <span class=\"kw1\">DO</span><br/>            t <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckinstr.shtml\"><span class=\"kw3\">INSTR</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">,</span> <a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>remove<span class=\"sy0\">,</span> l0<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">IF</span> t <span class=\"kw1\">THEN</span><br/>                s <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckleft%24.shtml\"><span class=\"kw3\">LEFT$</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">,</span> t <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <a href=\"http://www.qbasicnews.com/qboho/qckmid%24.shtml\"><span class=\"kw3\">MID$</span></a><span class=\"br0\">(</span>s<span class=\"sy0\">,</span> t <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">ELSE</span><br/>                <a href=\"http://www.qbasicnews.com/qboho/qckexit.shtml\"><span class=\"kw3\">EXIT</span></a> <span class=\"kw1\">DO</span><br/>            <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>        <span class=\"kw1\">LOOP</span><br/>    <span class=\"kw1\">NEXT</span><br/>    stripchars$ <span class=\"sy0\">=</span> s<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">FUNCTION</span></pre>"}, {"lang": "BBC BASIC", "loc": 13, "block": "<pre class=\"text highlighted_source\">      PRINT FNstripchars(\"She was a soul stripper. She took my heart!\", \"aei\")<br/>      END<br/>\u00a0<br/>      DEF FNstripchars(A$, S$)<br/>      LOCAL I%, C%, C$<br/>      FOR I% = 1 TO LEN(S$)<br/>        C$ = MID$(S$, I%, 1)<br/>        REPEAT<br/>          C% = INSTR(A$, C$)<br/>          IF C% A$ = LEFT$(A$, C%-1) + MID$(A$, C%+1)<br/>        UNTIL C% = 0<br/>      NEXT<br/>      = A$</pre>"}, {"lang": "Bracmat", "loc": 23, "block": "<pre class=\"text highlighted_source\">( ( strip<br/>  =   string chars s pat<br/>    .    \u00a0!arg:(?string.?chars)<br/>        &amp;\u00a0:?s<br/>        &amp;     <br/>            ' (\u00a0?<br/>                (\u00a0%<br/>               \u00a0: [%( utf$!sjt<br/>                    &amp; ( @($chars:?\u00a0!sjt\u00a0?)<br/>                      | rev$!sjt\u00a0!s:?s<br/>                      )<br/>                    &amp; ~<br/>                    )<br/>                )<br/>               \u00a0?<br/>              )<br/>         \u00a0: (=?pat)<br/>        &amp; @(!string:!pat)<br/>      | rev$(str$!s)<br/>  )<br/>&amp;   out<br/>  $ (strip$(\"\u0410\u043f\u043f\u0435\u0442\u0438\u0442 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0435\u0434\u044b\".\u0432\u0435\u043f)<br/>);</pre>"}, {"lang": "Burlesque", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>blsq ) \"She was a soul stripper. She took my heart!\"{\"aei\"\\/~[n!}f[<br/>\"Sh ws  soul strppr. Sh took my hrt!\"<br/>\u00a0</pre>"}, {"lang": "C", "loc": 29, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;string.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/>  <span class=\"coMULTI\">/* removes all chars from string */</span><br/><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>strip_chars<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>string<span class=\"sy0\">,</span> <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>chars<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">char</span> <span class=\"sy0\">*</span> newstr <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>string<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">int</span> counter <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"sy0\">;</span> <span class=\"sy0\">*</span>string<span class=\"sy0\">;</span> string<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strchr.html\"><span class=\"kw3\">strchr</span></a><span class=\"br0\">(</span>chars<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>string<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      newstr<span class=\"br0\">[</span> counter <span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>string<span class=\"sy0\">;</span><br/>      <span class=\"sy0\">++</span> counter<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  newstr<span class=\"br0\">[</span>counter<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> newstr<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>new <span class=\"sy0\">=</span> strip_chars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> new<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>new<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 20, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;algorithm&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/>\u00a0<br/>std<span class=\"sy4\">::</span><span class=\"me2\">string</span> stripchars<span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span> str, <span class=\"kw4\">const</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span> <span class=\"sy3\">&amp;</span>chars<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    str.<span class=\"me1\">erase</span><span class=\"br0\">(</span><br/>        std<span class=\"sy4\">::</span><span class=\"me2\">remove_if</span><span class=\"br0\">(</span>str.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, str.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"br0\">[</span><span class=\"sy3\">&amp;</span><span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"kw4\">char</span> c<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> chars.<span class=\"me1\">find</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy3\">!</span><span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy4\">::</span><span class=\"me2\">npos</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><span class=\"br0\">)</span>,<br/>        str.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> str<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 15, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">string</span> RemoveCharactersFromString<span class=\"br0\">(</span><span class=\"kw4\">string</span> testString, <span class=\"kw4\">string</span> removeChars<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> charAry <span class=\"sy0\">=</span> removeChars<span class=\"sy0\">.</span><span class=\"me1\">ToCharArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">string</span> returnString <span class=\"sy0\">=</span> testString<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> c <span class=\"kw1\">in</span> charAry<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>returnString<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            returnString <span class=\"sy0\">=</span> returnString<span class=\"sy0\">.</span><span class=\"kw1\">Remove</span><span class=\"br0\">(</span>returnString<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> returnString<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 5, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defn</span> strip <span class=\"br0\">[</span>coll chars<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"kw1\">str</span> <span class=\"br0\">(</span><span class=\"kw1\">remove</span> #<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">set</span> chars<span class=\"br0\">)</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span> coll<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>strip <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/><span class=\"co1\">;; =&gt; \"Sh ws  soul strppr. Sh took my hrt!\"</span></pre>"}, {"lang": "COBOL", "loc": 47, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> Strip-Chars<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  Str-<span class=\"kw3\">Size</span>  CONSTANT <span class=\"nu0\">128</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       LOCAL-STORAGE <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  I       <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  Str-Pos <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  Offset  <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  New-Pos <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  Str-<span class=\"kw3\">End</span> <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  Str     <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span>Str-<span class=\"kw3\">Size</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  Chars-To-<span class=\"kw3\">Replace</span> <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> Str <span class=\"kw3\">BY</span> <span class=\"kw3\">VALUE</span> Chars-To-<span class=\"kw3\">Replace</span><span class=\"sy0\">.</span><br/>       <span class=\"kw1\">Main</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> I <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span><br/>                   <span class=\"kw2\">UNTIL</span> Chars-To-<span class=\"kw3\">Replace</span> <span class=\"br0\">(</span>I:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> X<span class=\"st0\">\"00\"</span><br/>\u00a0<br/>               <span class=\"kw2\">MOVE</span> <span class=\"kw3\">ZERO</span> <span class=\"kw2\">TO</span> Offset<br/>\u00a0<br/><span class=\"co1\">*              *&gt; Overwrite the characters to remove by left-shifting</span><br/><span class=\"co1\">*              *&gt; following characters over them.</span><br/>               <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> Str-Pos <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span><br/>                       <span class=\"kw2\">UNTIL</span> Str-<span class=\"kw3\">Size</span> &lt; Str-Pos<br/>                   <span class=\"kw1\">IF</span> Str <span class=\"br0\">(</span>Str-Pos:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> Chars-To-<span class=\"kw3\">Replace</span> <span class=\"br0\">(</span>I:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                       <span class=\"kw2\">ADD</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> Offset<br/>                   <span class=\"kw3\">ELSE</span> <span class=\"kw1\">IF</span> Offset <span class=\"kw3\">NOT</span> <span class=\"sy0\">=</span> <span class=\"kw3\">ZERO</span><br/>                       <span class=\"kw2\">COMPUTE</span> New-Pos <span class=\"sy0\">=</span> Str-Pos<span class=\"sy0\"> - </span>Offset<br/>                       <span class=\"kw2\">MOVE</span> Str <span class=\"br0\">(</span>Str-Pos:<span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">TO</span> Str <span class=\"br0\">(</span>New-Pos:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                   END-<span class=\"kw1\">IF</span><br/>               END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/><span class=\"co1\">*              *&gt; Move spaces to characters at the end that have been</span><br/><span class=\"co1\">*              *&gt; shifted over.</span><br/>               <span class=\"kw2\">COMPUTE</span> Str-<span class=\"kw3\">End</span> <span class=\"sy0\">=</span> Str-<span class=\"kw3\">Size</span><span class=\"sy0\"> - </span>Offset<br/>               <span class=\"kw2\">MOVE</span> <span class=\"kw3\">SPACES</span> <span class=\"kw2\">TO</span> Str <span class=\"br0\">(</span>Str-<span class=\"kw3\">End</span>:Offset<span class=\"br0\">)</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span></pre>"}, {"lang": "ColdFusion", "loc": 8, "block": "<pre class=\"cfm highlighted_source\">\u00a0<br/><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfset</span> theString <span class=\"sy0\">=</span> <span class=\"st0\">'She was a soul stripper. She took my heart!'</span><span class=\"sy0\">&gt;</span></span><br/><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfset</span> theStrip <span class=\"sy0\">=</span> <span class=\"st0\">'aei'</span><span class=\"sy0\">&gt;</span></span><br/><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfloop</span> <span class=\"kw6\">from</span><span class=\"sy0\">=</span><span class=\"st0\">\"1\"</span> <span class=\"kw6\">to</span><span class=\"sy0\">=</span><span class=\"st0\">\"#len(theStrip)#\"</span> <span class=\"kw6\">index</span><span class=\"sy0\">=</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">&gt;</span></span><br/>  <span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">cfset</span> theString <span class=\"sy0\">=</span> <span class=\"kw5\">replace</span><span class=\"br0\">(</span>theString, <span class=\"kw5\">Mid</span><span class=\"br0\">(</span>theStrip, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"st0\">''</span>, <span class=\"st0\">'all'</span><span class=\"br0\">)</span><span class=\"sy0\">&gt;</span></span><br/><span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">Cfloop</span><span class=\"sy0\">&gt;</span></span><br/><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfoutput</span><span class=\"sy0\">&gt;</span></span><span class=\"sc2\">#theString#</span><span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">Cfoutput</span><span class=\"sy0\">&gt;</span></span><br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 13, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> strip-chars <span class=\"br0\">(</span>str chars<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>remove-<span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>ch<span class=\"br0\">)</span> <span class=\"br0\">(</span>find ch chars<span class=\"br0\">)</span><span class=\"br0\">)</span> str<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>strip-chars <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/><span class=\"co1\">;; =&gt; \"Sh ws  soul strppr. Sh took my hrt!\"</span><br/>\u00a0<br/><span class=\"co1\">;; strip whitespace:</span><br/><span class=\"br0\">(</span>string-trim <br/>      '<span class=\"br0\">(</span>#\\Space #\\Newline #\\Backspace #\\Tab <br/>        #\\Linefeed #\\Page #\\<span class=\"kw1\">Return</span> #\\Rubout<span class=\"br0\">)</span><br/>      <span class=\"st0\">\"  A string   \"</span><span class=\"br0\">)</span><br/><span class=\"co1\">;; =&gt; \"A string\"</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 7, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">auto</span> s <span class=\"sy0\">=</span> <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">auto</span> ss <span class=\"sy0\">=</span> <span class=\"st0\">\"Sh ws  soul strppr. Sh took my hrt!\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw2\">assert</span><span class=\"br0\">(</span>s.<span class=\"me1\">removechars</span><span class=\"br0\">(</span><span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> ss<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 21, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> StripCharacters<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> StripChars<span class=\"br0\">(</span><span class=\"kw1\">const</span> aSrc<span class=\"sy1\">,</span> aCharsToStrip<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"br0\">)</span><span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  c<span class=\"sy1\">:</span> <span class=\"kw4\">Char</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> aSrc<span class=\"sy1\">;</span><br/>  <span class=\"kw1\">for</span> c <span class=\"kw1\">in</span> aCharsToStrip <span class=\"kw1\">do</span><br/>    Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">StringReplace</span><span class=\"br0\">(</span>Result<span class=\"sy1\">,</span> c<span class=\"sy1\">,</span> <span class=\"st0\">''</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span>rfReplaceAll<span class=\"sy1\">,</span> rfIgnoreCase<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">const</span><br/>  TEST_STRING <span class=\"sy3\">=</span> <span class=\"st0\">'She was a soul stripper. She took my heart!'</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>TEST_STRING<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>StripChars<span class=\"br0\">(</span>TEST_STRING<span class=\"sy1\">,</span> <span class=\"st0\">'aei'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "EchoLisp", "loc": 9, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"co1\">;; using regexp /[chars]/g</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>strip<span class=\"sy0\">-</span>chars <span class=\"kw1\">string</span> chars<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>replace <span class=\"kw1\">string</span> <span class=\"br0\">(</span><span class=\"kw1\">string-append</span> <span class=\"st0\">\"/[\"</span> chars <span class=\"st0\">\"]/g\"</span><span class=\"br0\">)</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>strip<span class=\"sy0\">-</span>chars <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>    \u2192 <span class=\"st0\">\"Sh ws soul strppr. Sh took my hrt!\"</span><br/>\u00a0</pre>"}, {"lang": "Elena", "loc": 10, "block": "<pre class=\"text highlighted_source\">import extensions.<br/>import system'routines.<br/>\u00a0<br/>program =<br/>[<br/>    var testString\u00a0:= \"She was a soul stripper. She took my heart!\".<br/>    var removeChars\u00a0:= \"aei\".<br/>\u00a0<br/>    console printLine(testString filterBy(:ch)(removeChars indexOf:ch at:0 == -1); summarize(String new)).<br/>].</pre>"}, {"lang": "Elixir", "loc": 3, "block": "<pre class=\"text highlighted_source\">str = \"She was a soul stripper. She took my heart!\"<br/>String.replace(str, ~r/[aei]/, \"\")<br/># =&gt; Sh ws  soul strppr. Sh took my hrt!</pre>"}, {"lang": "Erlang", "loc": 1, "block": "<pre>4&gt; F = fun(To_stripp, Strip_with) -&gt; lists:filter( fun(C) -&gt; not lists:member(C, Strip_with) end, To_stripp ) end.\n#Fun&lt;erl_eval.12.111823515&gt;\n5&gt; F(\"She was a soul stripper. She took my heart!\", \"aei\").\n\"Sh ws  soul strppr. Sh took my hrt!\"\n</pre>"}, {"lang": "Euphoria", "loc": 8, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">include</span> std\\<span class=\"kw2\">sequence</span>.e<br/><span class=\"kw1\">include</span> std\\console.e<br/>\u00a0<br/><span class=\"kw2\">sequence</span> originalString <span class=\"sy1\">=</span> <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><br/><span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"Before\u00a0: \"</span> <span class=\"sy1\">&amp;</span> originalString <span class=\"sy1\">&amp;</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>originalString <span class=\"sy1\">=</span> transmute<span class=\"br0\">(</span>originalString<span class=\"sy2\">,</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"sy2\">,</span> <span class=\"st0\">\"a\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"e\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"i\"</span><span class=\"br0\">}</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"sy2\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy2\">,</span> <span class=\"st0\">\"\"</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"kw2\">puts</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"After\u00a0: \"</span> <span class=\"sy1\">&amp;</span> originalString <span class=\"sy1\">&amp;</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>any_key<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 9, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> stripChars text <span class=\"br0\">(</span>chars:<span class=\"kw4\">string</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">fold</span> <span class=\"br0\">(</span><br/>        <span class=\"kw1\">fun</span> <span class=\"br0\">(</span>s:<span class=\"kw4\">string</span><span class=\"br0\">)</span> c <span class=\"sy0\">-&gt;</span> s.<span class=\"me1\">Replace</span><span class=\"br0\">(</span>c.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,<span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span> text <span class=\"br0\">(</span>chars.<span class=\"me1\">ToCharArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main args <span class=\"sy0\">=</span><br/>    printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>stripChars <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Factor", "loc": 6, "block": "<pre class=\"text highlighted_source\">USING: io sequences splitting\u00a0;<br/>IN: rosetta-code.strip-chars<br/>\u00a0<br/>: strip-chars ( str str -- str ) split concat\u00a0;<br/>\u00a0<br/>\"She was a soul stripper. She took my heart!\" \"aei\" strip-chars print</pre>"}, {"lang": "Forth", "loc": 16, "block": "<pre class=\"text highlighted_source\">: append-char ( char str -- ) dup &gt;r  count dup 1+ r&gt; c! + c!\u00a0;  \\ append char to a counted string<br/>: strippers   ( -- addr len)  s\" aeiAEI\"\u00a0;     \\ a string literal returns addr and length<br/>\u00a0<br/>: stripchars ( addr1 len1  addr2 len2 -- PAD len )<br/>        0 PAD c!                               \\ clear the PAD buffer<br/>        bounds                                 \\ calc loop limits for addr2<br/>        DO<br/>           2dup I <a class=\"__cf_email__\" data-cfemail=\"9fdcdf\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> ( -- addr1 len1 addr1 len1 char)<br/>           scan nip 0=                         \\ scan for char in addr1, test for zero<br/>           IF                                  \\ if stack = true (ie. NOT found)<br/>              I <a class=\"__cf_email__\" data-cfemail=\"f794b7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> PAD append-char             \\ fetch addr2 char, append to PAD<br/>           THEN                                \\ ...then ... continue the loop<br/>        LOOP<br/>        2drop                                  \\ we don't need STRIPPERS now<br/>        PAD count\u00a0;                            \\ return PAD address and length<br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 17, "block": "<pre class=\"fortran highlighted_source\">elemental <span class=\"kw1\">subroutine</span> strip<span class=\"br0\">(</span>string,set<span class=\"br0\">)</span><br/>  <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">inout</span><span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">string</span><br/>  <span class=\"kw3\">character</span><span class=\"br0\">(</span><span class=\"kw4\">len</span><span class=\"sy0\">=*</span><span class=\"br0\">)</span>, <span class=\"kw3\">intent</span><span class=\"br0\">(</span><span class=\"kw3\">in</span><span class=\"br0\">)</span>    <span class=\"sy0\">::</span> <span class=\"me2\">set</span><br/>  <span class=\"kw3\">integer</span>                         <span class=\"sy0\">::</span> <span class=\"me2\">old</span>, new, stride<br/>  old <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; new <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">do</span><br/>    stride <span class=\"sy0\">=</span> <span class=\"kw4\">scan</span><span class=\"br0\">(</span> string<span class=\"br0\">(</span> old <span class=\"sy0\">:</span> <span class=\"br0\">)</span>, set <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> stride &gt; <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      string<span class=\"br0\">(</span> new <span class=\"sy0\">:</span> new<span class=\"sy0\">+</span>stride<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> string<span class=\"br0\">(</span> old <span class=\"sy0\">:</span> old<span class=\"sy0\">+</span>stride<span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"br0\">)</span><br/>      old <span class=\"sy0\">=</span> old<span class=\"sy0\">+</span>stride<br/>      new <span class=\"sy0\">=</span> new<span class=\"sy0\">+</span>stride<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"kw1\">else</span><br/>      string<span class=\"br0\">(</span> new <span class=\"sy0\">:</span> <span class=\"br0\">)</span> <span class=\"sy0\">=</span> string<span class=\"br0\">(</span> old <span class=\"sy0\">:</span> <span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">subroutine</span> strip</pre>"}, {"lang": "FreeBASIC", "loc": 33, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> stripChars<span class=\"br0\">(</span>s <span class=\"kw1\">As</span> <span class=\"kw1\">Const</span> <span class=\"kw1\">String</span>, chars <span class=\"kw1\">As</span> <span class=\"kw1\">Const</span> <span class=\"kw1\">String</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>  <span class=\"kw1\">If</span> s = <span class=\"st0\">\"\"</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Return</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">Dim</span> count <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">Dim</span> strip<span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> Boolean<br/>  <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> j <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>chars<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">If</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = chars<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"kw1\">Then</span> <br/>        count += <span class=\"nu0\">1</span><br/>        strip<span class=\"br0\">(</span>i<span class=\"br0\">)</span> = <span class=\"kw1\">True</span><br/>        <span class=\"kw1\">Exit</span> <span class=\"kw1\">For</span> <br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span> j<br/>  <span class=\"kw1\">Next</span> i<br/>\u00a0<br/>  <span class=\"kw1\">Dim</span> buffer <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"kw1\">Space</span><span class=\"br0\">(</span><span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - count<span class=\"br0\">)</span><br/>  count  = <span class=\"nu0\">0</span>  <br/>  <span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> Strip<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>      buffer<span class=\"br0\">[</span>count<span class=\"br0\">]</span> = s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><br/>      count += <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">Return</span> buffer<br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><br/><span class=\"kw1\">Dim</span> chars <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"aei\"</span><br/><span class=\"kw1\">Print</span> stripChars<span class=\"br0\">(</span>s, chars<span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Gambas", "loc": 16, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> StripChars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a><br/><span class=\"co1\">'_____________________________________________________________________</span><br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> StripChars<span class=\"br0\">(</span>sText <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a>, sRemove <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <a href=\"http://gambasdoc.org/help/lang/len\"><span class=\"kw2\">Len</span></a><span class=\"br0\">(</span>sRemove<span class=\"br0\">)</span><br/>  sText <span class=\"sy0\">=</span> <a href=\"http://gambasdoc.org/help/lang/replace\"><span class=\"kw2\">Replace</span></a><span class=\"br0\">(</span>sText, <a href=\"http://gambasdoc.org/help/lang/mid\"><span class=\"kw2\">Mid</span></a><span class=\"br0\">(</span>sRemove, siCount, <span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/return\"><span class=\"kw1\">Return</span></a> sText<br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 20, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> stripchars<span class=\"sy1\">(</span>str<span class=\"sy1\">,</span> chr <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">return</span> strings<span class=\"sy3\">.</span>Map<span class=\"sy1\">(</span><span class=\"kw4\">func</span><span class=\"sy1\">(</span>r rune<span class=\"sy1\">)</span> rune <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> strings<span class=\"sy3\">.</span>IndexRune<span class=\"sy1\">(</span>chr<span class=\"sy1\">,</span> r<span class=\"sy1\">)</span> &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">return</span> r<br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><br/>    <span class=\"sy1\">},</span> str<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>stripchars<span class=\"sy1\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy1\">,</span><br/>        <span class=\"st0\">\"aei\"</span><span class=\"sy1\">))</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 5, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> stripChars <span class=\"sy0\">=</span> <span class=\"br0\">{</span> string, stripChars <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> list <span class=\"sy0\">=</span> string <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20as\"><span class=\"kw2\">as</span></a> <a href=\"http://www.google.de/search?as_q=List&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">List</span></a><br/>    list.<span class=\"me1\">removeAll</span><span class=\"br0\">(</span>stripChars <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20as\"><span class=\"kw2\">as</span></a> <a href=\"http://www.google.de/search?as_q=List&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">List</span></a><span class=\"br0\">)</span><br/>    list.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20join\"><span class=\"kw5\">join</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 2, "block": "<pre class=\"haskell highlighted_source\">stripChars <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>stripChars <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:flip\"><span class=\"kw3\">flip</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:notElem\"><span class=\"kw3\">notElem</span></a></pre>"}, {"lang": "Icon and Unicon", "loc": 10, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>A<span class=\"br0\">)</span><br/>    cs <span class=\"sy0\">:=</span> <span class=\"sy0\">\\</span>A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">|</span> <span class=\"st0\">'aei'</span>   <span class=\"co1\"># argument is set of characters to strip</span><br/>    <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span>stripChars<span class=\"br0\">(</span><span class=\"sy0\">!&amp;</span><span class=\"kw3\">input</span><span class=\"sy0\">,</span> cs<span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"co1\"># strip all input lines</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> stripChars<span class=\"br0\">(</span>s<span class=\"sy0\">,</span>cs<span class=\"br0\">)</span><br/>    ns <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><br/>    s <span class=\"sy0\">?</span> <span class=\"kw1\">while</span> ns <span class=\"sy0\">||:=</span> <span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"kw4\">pos</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">upto</span><span class=\"br0\">(</span>cs<span class=\"br0\">)</span><span class=\"sy0\">|</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span>cs<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">return</span> ns<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\">   <span class=\"st_h\">'She was a soul stripper. She took my heart!'</span> -. <span class=\"st_h\">'aei'</span><br/>Sh ws  soul strppr. Sh took my hrt!</pre>"}, {"lang": "Java", "loc": 13, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">class</span> StripChars <span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> stripChars<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> inString, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> toStrip<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">return</span> inString.<span class=\"me1\">replaceAll</span><span class=\"br0\">(</span><span class=\"st0\">\"[\"</span> <span class=\"sy0\">+</span> toStrip <span class=\"sy0\">+</span> <span class=\"st0\">\"]\"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> sentence <span class=\"sy0\">=</span> <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> chars <span class=\"sy0\">=</span> <span class=\"st0\">\"aei\"</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"sentence: \"</span> <span class=\"sy0\">+</span> sentence<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"to strip: \"</span> <span class=\"sy0\">+</span> chars<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"stripped: \"</span> <span class=\"sy0\">+</span> stripChars<span class=\"br0\">(</span>sentence, chars<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 3, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> stripchars<span class=\"br0\">(</span>string<span class=\"sy0\">,</span> chars<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> string.<span class=\"me1\">replace</span><span class=\"br0\">(</span>RegExp<span class=\"br0\">(</span><span class=\"st0\">'['</span><span class=\"sy0\">+</span>chars<span class=\"sy0\">+</span><span class=\"st0\">']'</span><span class=\"sy0\">,</span><span class=\"st0\">'g'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "jq", "loc": 2, "block": "<pre class=\"text highlighted_source\">def stripchars(string; banish):<br/>  (string | explode) - (banish | explode) | implode;</pre>"}, {"lang": "Julia", "loc": 4, "block": "<pre class=\"text highlighted_source\">teststr = \"She was a soul stripper. She took my heart!\"<br/>testrem = \"aei\"<br/>fullstrip(str::AbstractString, chars) = replace(str, collect(chars), \"\")<br/>println(\"# $teststr\\n -&gt; \", fullstrip(teststr, testrem))</pre>"}, {"lang": "Kotlin", "loc": 7, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun stripChars<span class=\"br0\">(</span>s<span class=\"sy0\">:</span> String, r<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">=</span> s.<span class=\"me1\">replace</span><span class=\"br0\">(</span>Regex<span class=\"br0\">(</span><span class=\"st0\">\"[$r]\"</span><span class=\"br0\">)</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span>stripChars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 7, "block": "<pre class=\"text highlighted_source\">define stripper(in::string,destroy::string) =&gt; {<br/>\twith toremove in #destroy-&gt;values do =&gt; {<br/>\t\t#in-&gt;replace(#toremove,'')<br/>\t}<br/>\treturn #in<br/>}<br/>stripper('She was a soul stripper. She took my heart!','aei')</pre>"}, {"lang": "Logo", "loc": 7, "block": "<pre class=\"text highlighted_source\">to strip\u00a0:string\u00a0:chars<br/>  output filter [not substringp\u00a0?\u00a0:chars]\u00a0:string<br/>end<br/>\u00a0<br/>print strip \"She\\ was\\ a\\ soul\\ stripper.\\ She\\ took\\ my\\ heart! \"aei<br/>\u00a0<br/>bye</pre>"}, {"lang": "Lua", "loc": 11, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> stripchars<span class=\"br0\">(</span>str<span class=\"sy0\">,</span> chrs<span class=\"br0\">)</span><br/>  <span class=\"kw1\">local</span> s <span class=\"sy0\">=</span> str<span class=\"sy0\">:</span><span class=\"kw3\">gsub</span><span class=\"br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"sy0\">..</span>chrs<span class=\"sy0\">:</span><span class=\"kw3\">gsub</span><span class=\"br0\">(</span><span class=\"st0\">\"%W\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"%%%1\"</span><span class=\"br0\">)</span><span class=\"sy0\">..</span><span class=\"st0\">\"]\"</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> s<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">print</span><span class=\"br0\">(</span> stripchars<span class=\"br0\">(</span> <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"co1\">--&gt; Sh ws  soul strppr. Sh took my hrt!</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span> stripchars<span class=\"br0\">(</span> <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"a-z\"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"co1\">--&gt; She ws  soul stripper. She took my hert!</span><br/>\u00a0</pre>"}, {"lang": "Liberty BASIC", "loc": 11, "block": "<pre class=\"lb highlighted_source\"><span class=\"kw1\">Print</span> stripchars$<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> stripchars$<span class=\"br0\">(</span>strip$<span class=\"sy0\">,</span> chars$<span class=\"sy0\">,</span> num<span class=\"br0\">)</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>strip$<span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> <span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>strip$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>chars$<span class=\"sy0\">,</span> num<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>            stripchars$ <span class=\"sy0\">=</span> <span class=\"br0\">(</span>stripchars$ <span class=\"sy0\">+</span> <span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>strip$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span> i<br/>    <span class=\"kw1\">If</span> <span class=\"br0\">(</span>num <span class=\"sy0\">&lt;=</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>chars$<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> stripchars$ <span class=\"sy0\">=</span> stripchars$<span class=\"br0\">(</span>stripchars$<span class=\"sy0\">,</span> chars$<span class=\"sy0\">,</span> <span class=\"br0\">(</span>num <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span></pre>"}, {"lang": "LiveCode", "loc": 8, "block": "<pre class=\"text highlighted_source\">function stripChars str charlist<br/>    local strstripped<br/>    put str into strstripped<br/>    repeat for each char c in charlist<br/>        replace c with empty in strstripped<br/>    end repeat<br/>    return strstripped<br/>end stripChars</pre>"}, {"lang": "Maple", "loc": 3, "block": "<pre class=\"text highlighted_source\">with(StringTools):<br/>\u00a0<br/>Remove(c-&gt;Has(\"aei\",c), \"She was a soul stripper. She took my heart!\");</pre>"}, {"lang": "Mathematica", "loc": 3, "block": "<pre class=\"text highlighted_source\">stripchars[a_,b_]:=StringReplace[a,(#-&gt;\"\")&amp;/@Characters[b]]<br/>stripchars[\"She was a soul stripper. She took my heart!\",\"aei\"]<br/>-&gt;Sh ws  soul strppr. Sh took my hrt!</pre>"}, {"lang": "MATLAB / Octave", "loc": 3, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> str = stripchars<span class=\"br0\">(</span>str, charlist<span class=\"br0\">)</span><br/>  <span class=\"co1\">% MATLAB after 2016b: str = erase(str, charlist);</span><br/>  str<span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/ismember.html\"><span class=\"kw2\">ismember</span></a><span class=\"br0\">(</span>str, charlist<span class=\"br0\">)</span><span class=\"br0\">)</span> = <span class=\"co2\">''</span>;</pre>"}, {"lang": "Nemerle", "loc": 5, "block": "<pre class=\"text highlighted_source\">StripChars( text\u00a0: string, remove\u00a0: string )\u00a0: string<br/>{<br/>    def chuck = Explode(remove);<br/>    Concat( \"\", Split(text, chuck))<br/>}</pre>"}, {"lang": "NetRexx", "loc": 16, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>\u00a0<br/>options replace format comments java crossref savelog symbols<br/>\u00a0<br/><span class=\"kw1\">say</span> stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">return</span><br/>\u00a0<br/>method stripchars<span class=\"br0\">(</span>haystack, chs<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span><br/>\u00a0<br/>  <span class=\"kw1\">loop</span> c_ = <span class=\"nu0\">1</span> to chs.<span class=\"me0\">length</span><br/>    needle = chs.<span class=\"kw6\">substr</span><span class=\"br0\">(</span>c_, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    haystack = haystack.<span class=\"kw6\">changestr</span><span class=\"br0\">(</span>needle, <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">end</span> c_<br/>\u00a0<br/>  <span class=\"kw1\">return</span> haystack</pre>"}, {"lang": "NewLISP", "loc": 2, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#let\"><span class=\"kw1\">let</span></a> <span class=\"br0\">(</span>sentence <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#replace\"><span class=\"kw1\">replace</span></a> <span class=\"st0\">\"[aei]\"</span> sentence <span class=\"st0\">\"\"</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Nim", "loc": 9, "block": "<pre class=\"text highlighted_source\">import strutils<br/>\u00a0<br/>proc `$` (x: seq[string]): string =<br/>   result = x.join(\"\")<br/>\u00a0<br/>echo(split(\"She was a soul stripper. She took my heart!\", {'a','e','i'}).join(\"\"))<br/>\u00a0<br/># using the above proc to overload the toString operator `$` as an alternative to using join()<br/>echo($split(\"She was a soul stripper. She took my heart!\", {'a','e','i'}))</pre>"}, {"lang": "Objective-C", "loc": 9, "block": "<pre class=\"objc highlighted_source\"><span class=\"kw1\">@interface</span> <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"br0\">(</span>StripCharacters<span class=\"br0\">)</span><br/><span class=\"sy0\">-</span> <span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"sy0\">*</span><span class=\"br0\">)</span> stripCharactersInSet<span class=\"sy0\">:</span> <span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSCharacterSet_Class/\"><span class=\"kw5\">NSCharacterSet</span></a> <span class=\"sy0\">*</span><span class=\"br0\">)</span> chars;<br/><span class=\"kw1\">@end</span><br/>\u00a0<br/><span class=\"kw1\">@implementation</span> <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"br0\">(</span>StripCharacters<span class=\"br0\">)</span><br/><span class=\"sy0\">-</span> <span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> <span class=\"sy0\">*</span><span class=\"br0\">)</span> stripCharactersInSet<span class=\"sy0\">:</span> <span class=\"br0\">(</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSCharacterSet_Class/\"><span class=\"kw5\">NSCharacterSet</span></a> <span class=\"sy0\">*</span><span class=\"br0\">)</span> chars <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>self componentsSeparatedByCharactersInSet<span class=\"sy0\">:</span>chars<span class=\"br0\">]</span> componentsJoinedByString<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"\"</span><span class=\"br0\">]</span>;<br/><span class=\"br0\">}</span><br/><span class=\"kw1\">@end</span></pre>"}, {"lang": "OCaml", "loc": 13, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> stripchars s cs <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> len <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length s <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> res <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>create len <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> aux i j <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> i <span class=\"sy0\">&gt;=</span> len <span class=\"kw1\">then</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>sub res <span class=\"nu0\">0</span> j<br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>contains cs s<span class=\"sy0\">.</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">then</span><br/>      aux <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> i<span class=\"br0\">)</span> <span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">begin</span><br/>      res<span class=\"sy0\">.</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">&lt;-</span> s<span class=\"sy0\">.</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      aux <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> i<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> j<span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">in</span><br/>  aux <span class=\"nu0\">0</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "Oforth", "loc": 3, "block": "<pre class=\"text highlighted_source\">String method: stripChars(str)  #[ str include not ] self filter\u00a0;<br/>\u00a0<br/>\"She was a soul stripper. She took my heart!\" stripChars(\"aei\") println</pre>"}, {"lang": "PARI/GP", "loc": 8, "block": "<pre class=\"parigp highlighted_source\">stripchars<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> bad<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  bad<span class=\"sy0\">=</span><span class=\"kw1\">Set</span><span class=\"br0\">(</span><span class=\"kw1\">Vec</span><span class=\"br0\">(</span><span class=\"kw1\">Vecsmall</span><span class=\"br0\">(</span>bad<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  s<span class=\"sy0\">=</span><span class=\"kw1\">Vecsmall</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  my<span class=\"br0\">(</span>v<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>#s<span class=\"sy0\">,</span><span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"kw1\">setsearch</span><span class=\"br0\">(</span>bad<span class=\"sy0\">,</span>s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>v<span class=\"sy0\">=</span><span class=\"kw1\">concat</span><span class=\"br0\">(</span>v<span class=\"sy0\">,</span>s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">Strchr</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 7, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> stripchars <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$chars</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$s</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/[$chars]//g</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 7, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">sub</span> stripchars <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$chars</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$s</span> <span class=\"sy0\">=~</span> <span class=\"co2\">s/[$chars]//g</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$s</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 5, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> strip_chars <span class=\"br0\">(</span> <span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$chars</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$s</span><span class=\"sy0\">.</span><span class=\"kw3\">trans</span><span class=\"br0\">(</span> <span class=\"re0\">$chars</span><span class=\"sy0\">.</span><span class=\"kw3\">comb</span> <span class=\"kw1\">X</span><span class=\"sy0\">=&gt;</span> <span class=\"st_h\">''</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">say</span> strip_chars<span class=\"br0\">(</span> <span class=\"st_h\">'She was a soul stripper. She took my heart!'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'aei'</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 8, "block": "<pre class=\"text highlighted_source\">function stripchars(string s, string chars)<br/>    for i=1 to length(chars) do<br/>        s = substitute(s,chars[i..i],\"\")<br/>    end for<br/>    return s<br/>end function<br/>\u00a0<br/>?stripchars(\"She was a soul stripper. She took my heart!\",\"aei\")</pre>"}, {"lang": "PHP", "loc": 7, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw2\">function</span> stripchars<span class=\"br0\">(</span><span class=\"re0\">$s</span><span class=\"sy0\">,</span> <span class=\"re0\">$chars</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <a href=\"http://www.php.net/str_replace\"><span class=\"kw3\">str_replace</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/str_split\"><span class=\"kw3\">str_split</span></a><span class=\"br0\">(</span><span class=\"re0\">$chars</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$s</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">echo</span> stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 2, "block": "<pre class=\"text highlighted_source\">(de strDiff (Str1 Str2)<br/>   (pack (diff (chop Str1) (chop Str2))) )</pre>"}, {"lang": "PL/I", "loc": 14, "block": "<pre class=\"text highlighted_source\">strip_chars: procedure (text, chars) returns (character (100) varying);<br/>   declare text character (*) varying, chars character (*) varying;<br/>   declare out_text character (100);<br/>   declare ch character (1);<br/>   declare (i, j) fixed binary;<br/>\u00a0<br/>   j = 0;<br/>   do i = 1 to length(text);<br/>      ch = substr(text, i, 1);<br/>      if index(chars, ch) = 0 then<br/>         do; j = j + 1; substr(out_text, j, 1) = ch; end;<br/>   end;<br/>   return (substr(out_text, 1, j) );<br/>end strip_chars;</pre>"}, {"lang": "Powershell", "loc": 3, "block": "<pre class=\"powershell highlighted_source\"><span class=\"st0\">'She was a soul stripper. She took my heart!'</span> <span class=\"kw4\">-replace</span> <span class=\"st0\">'[aei]'</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><br/>Sh ws  soul strppr. Sh took my hrt<span class=\"sy0\">!</span><br/>\u00a0</pre>"}, {"lang": "Prolog", "loc": 6, "block": "<pre class=\"prolog highlighted_source\"><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>lambda<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>stripchars<span class=\"br0\">(</span>String<span class=\"sy4\">,</span> Exclude<span class=\"sy4\">,</span> Result<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\texclude<span class=\"br0\">(</span>\\X^<span class=\"br0\">(</span>member<span class=\"br0\">(</span>X<span class=\"sy4\">,</span> Exclude<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span> String<span class=\"sy4\">,</span> Result1<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tstring_to_list<span class=\"br0\">(</span>Result<span class=\"sy4\">,</span> Result1<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 18, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span>.s stripChars<span class=\"br0\">(</span>source.s,  charsToStrip.s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> i, <span class=\"sy0\">*</span>ptrChar.Character, length <span class=\"sy0\">=</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>source<span class=\"br0\">)</span>, result.s<br/>  <span class=\"sy0\">*</span>ptrChar <span class=\"sy0\">=</span> @source<br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> length<br/>    <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> <span class=\"kw2\">FindString</span><span class=\"br0\">(</span>charsToStrip, <span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>ptrChar<span class=\"sy0\">\\</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      result <span class=\"sy0\">+</span> <span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>ptrChar<span class=\"sy0\">\\</span>c<span class=\"br0\">)</span><br/>    <span class=\"kw1\">EndIf</span><br/>    <span class=\"sy0\">*</span>ptrChar <span class=\"sy0\">+</span> <span class=\"kw2\">SizeOf</span><span class=\"br0\">(</span>Character<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/>  <span class=\"kw1\">ProcedureReturn</span> result <br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>stripChars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 5, "block": "<pre class=\"python highlighted_source\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">def</span> stripchars<span class=\"br0\">(</span>s<span class=\"sy0\">,</span> chars<span class=\"br0\">)</span>:<br/>...     <span class=\"kw1\">return</span> s.<span class=\"me1\">translate</span><span class=\"br0\">(</span><span class=\"kw2\">None</span><span class=\"sy0\">,</span> chars<span class=\"br0\">)</span><br/>... <br/><span class=\"sy0\">&gt;&gt;&gt;</span> stripchars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/><span class=\"st0\">'Sh ws  soul strppr. Sh took my hrt!'</span></pre>"}, {"lang": "Racket", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>;; Using list operations<br/>(define (stripchars1 text chars)<br/>  (list-&gt;string (remove* (string-&gt;list chars) (string-&gt;list text))))<br/>\u00a0<br/>;; Using a regexp<br/>;; =&gt; will be broken if chars have \"-\" or \"]\" or \"\\\\\"<br/>(define (stripchars2 text chars)<br/>  (regexp-replace* (~a \"[\" chars \"]+\") text \"\"))<br/>\u00a0</pre>"}, {"lang": "Red", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>stripchars: func [str chars] [trim/with str chars]<br/>stripchars \"She was a soul stripper. She took my heart!\" \"aei\"</pre>"}, {"lang": "REXX", "loc": 9, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  removes  a list of characters from a string  (the haystack).            */</span><br/><span class=\"kw1\">say</span> stripChars<span class=\"br0\">(</span><span class=\"st0\">'She was a soul stripper. She took my heart!'</span>,   <span class=\"st0\">\"iea\"</span><span class=\"br0\">)</span>     <span class=\"coMULTI\">/*elide: iea */</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>stripChars: <span class=\"kw1\">procedure</span>;  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> haystack, remove<br/>                                <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"kw6\">length</span><span class=\"br0\">(</span>remove<span class=\"br0\">)</span><br/>                                haystack=<span class=\"kw6\">changestr</span><span class=\"br0\">(</span> <span class=\"kw6\">substr</span><span class=\"br0\">(</span> remove, j, <span class=\"nu0\">1</span><span class=\"br0\">)</span>,  haystack, <span class=\"st0\">''</span><span class=\"br0\">)</span><br/>                                <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>            <span class=\"kw1\">return</span> haystack</pre>"}, {"lang": "Ring", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>aList = \"She was a soul stripper. She took my heart!\"<br/>bList = \"aei\"<br/>see aList + nl<br/>see stripChars(aList,bList)<br/>\u00a0<br/>func stripChars cList, dList<br/>     for n = 1 to len(dList)<br/>         cList = substr(cList,dList[n],\"\") + nl<br/>     next <br/>     return cList      <br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 1, "block": "<pre class=\"ruby highlighted_source\"><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>.<span class=\"me1\">delete</span><span class=\"br0\">(</span><span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span>  <span class=\"co1\"># =&gt; \"Sh ws  soul strppr. Sh took my hrt!\"</span></pre>"}, {"lang": "Rust", "loc": 11, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>fn strip_characters(original\u00a0: &amp;str, to_strip\u00a0: &amp;str) -&gt; String {<br/>    let mut result = String::new();<br/>    for c in original.chars() {<br/>        if\u00a0!to_strip.contains(c) {<br/>           result.push(c);<br/>       }<br/>    }<br/>    result<br/>}<br/>\u00a0</pre>"}, {"lang": "SAS", "loc": 4, "block": "<pre class=\"sas highlighted_source\"><span class=\"kw2\">%let</span> string=She was a soul stripper. She took my heart!;<br/><span class=\"kw2\">%let</span> chars=aei;<br/><span class=\"kw2\">%let</span> stripped=<span class=\"kw2\">%sysfunc</span><span class=\"br0\">(</span><span class=\"kw3\">compress</span><span class=\"br0\">(</span><span class=\"st0\">\"&amp;string\"</span>,<span class=\"st0\">\"&amp;chars\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw2\">%put</span> <span class=\"re0\">&amp;stripped</span>;</pre>"}, {"lang": "Scala", "loc": 4, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> stripChars<span class=\"br0\">(</span>s<span class=\"sy0\">:</span>String, ch<span class=\"sy0\">:</span>String<span class=\"br0\">)</span><span class=\"sy0\">=</span> s filterNot <span class=\"br0\">(</span>ch contains <span class=\"sy0\">_</span><span class=\"br0\">)</span><br/>\u00a0<br/>stripChars<span class=\"br0\">(</span><span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>, <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><br/><span class=\"co1\">// =&gt; Sh ws  soul strppr. Sh took my hrt!</span></pre>"}, {"lang": "Scheme", "loc": 29, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>import <span class=\"br0\">(</span>scheme base<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>scheme <span class=\"kw1\">write</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>only <span class=\"br0\">(</span>srfi <span class=\"nu0\">13</span><span class=\"br0\">)</span> string<span class=\"sy0\">-</span>delete<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>only <span class=\"br0\">(</span>srfi <span class=\"nu0\">14</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span>char<span class=\"sy0\">-</span>set<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; implementation in plain Scheme</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>strip<span class=\"sy0\">-</span>chars str chars<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>char<span class=\"sy0\">-</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span><span class=\"kw1\">list</span> chars<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>do<span class=\"sy0\">-</span>strip str<span class=\"sy0\">-</span><span class=\"kw1\">list</span> result<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">null?</span> str<span class=\"sy0\">-</span><span class=\"kw1\">list</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span><span class=\"kw1\">reverse</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">member</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> str<span class=\"sy0\">-</span><span class=\"kw1\">list</span><span class=\"br0\">)</span> char<span class=\"sy0\">-</span><span class=\"kw1\">list</span> <span class=\"kw1\">char=?</span><span class=\"br0\">)</span><br/>             <span class=\"br0\">(</span>do<span class=\"sy0\">-</span>strip <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> str<span class=\"sy0\">-</span><span class=\"kw1\">list</span><span class=\"br0\">)</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">else</span><br/>              <span class=\"br0\">(</span>do<span class=\"sy0\">-</span>strip <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> str<span class=\"sy0\">-</span><span class=\"kw1\">list</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"br0\">(</span><span class=\"kw1\">car</span> str<span class=\"sy0\">-</span><span class=\"kw1\">list</span><span class=\"br0\">)</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>list<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span><br/>      <span class=\"br0\">(</span>do<span class=\"sy0\">-</span>strip <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span><span class=\"kw1\">list</span> str<span class=\"br0\">)</span> '<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span>strip<span class=\"sy0\">-</span>chars <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; using functions in SRFI 13 and SRFI 14</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>strip<span class=\"sy0\">-</span>chars2 str chars<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>delete <span class=\"br0\">(</span><span class=\"sy0\">-&gt;</span>char<span class=\"sy0\">-</span>set chars<span class=\"br0\">)</span> str<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"br0\">(</span>strip<span class=\"sy0\">-</span>chars2 <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "ScriptBasic", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>str1 = \"She was a soul stripper. She took my heart!\"<br/>rmv = \"aei\"<br/>FOR i = 1 TO LEN(rmv)<br/>  str1 = REPLACE(str1, MID(rmv, i, 1), \"\")<br/>NEXT<br/>PRINT str1,\"\\n\"<br/>\u00a0</pre>"}, {"lang": "Sed", "loc": 6, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/bash</span><br/>\u00a0<br/>strip_char<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"$1\"</span> <span class=\"sy0\">|</span> <span class=\"kw2\">sed</span> <span class=\"st0\">\"s/[$2]//g\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Seed7", "loc": 18, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const func string: stripchars (in string: mainStri, in string: charList) is func<br/>  result<br/>    var string: strippedStri is \"\";<br/>  local<br/>    var char: ch is ' ';<br/>  begin<br/>    strippedStri\u00a0:= mainStri;<br/>    for ch range charList do<br/>      strippedStri\u00a0:= replace(strippedStri, str(ch), \"\");<br/>    end for;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(stripchars(\"She was a soul stripper. She took my heart!\", \"aei\"));<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 3, "block": "<pre class=\"ruby highlighted_source\">func stripchars<span class=\"br0\">(</span>str, char_list<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    str.<span class=\"me1\">tr</span><span class=\"br0\">(</span>char_list, <span class=\"st0\">\"\"</span>, <span class=\"st0\">\"d\"</span><span class=\"br0\">)</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Standard ML", "loc": 9, "block": "<pre class=\"text highlighted_source\">fun stripchars (string, chars) = let<br/>  fun aux c =<br/>    if String.isSubstring (str c) chars then<br/>      \"\"<br/>    else<br/>      str c<br/>in<br/>  String.translate aux string<br/>end</pre>"}, {"lang": "Smalltalk", "loc": 8, "block": "<pre class=\"smalltalk highlighted_source\">|<span class=\"re3\"> stripChars </span>|<br/><span class=\"re6\">stripChars</span> <span class=\"sy0\">:=</span> <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">string</span>\u00a0:<span class=\"re5\">chars</span> | <br/>\tstring reject: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">c</span> | chars includes: <span class=\"re5\">c</span> <span class=\"br0\">]</span> <span class=\"br0\">]</span>.<br/><span class=\"re5\">stripChars</span> <br/>\tvalue: <span class=\"st0\">'She was a soul stripper. She took my heart!'</span><br/>\tvalue: <span class=\"st0\">'aei'</span>.<br/>\u00a0<br/><span class=\"coMULTI\">\"'Sh ws  soul strppr. Sh took my hrt!'\"</span></pre>"}, {"lang": "SNOBOL4", "loc": 9, "block": "<pre class=\"text highlighted_source\">      DEFINE(\"strip(strip,c)\")        \u00a0:(strip_end)<br/>strip strip ANY(c) =                  \u00a0:S(strip)F(RETURN)<br/>strip_end<br/>\u00a0<br/>      chars = HOST(2, HOST(3))  \u00a0;* Get command line argument<br/>      chars = IDENT(chars) \"aei\"<br/>again line = INPUT                   \u00a0:F(END)<br/>      OUTPUT = strip(line, chars)    \u00a0:(again)<br/>END</pre>"}, {"lang": "Swift", "loc": 10, "block": "<pre class=\"text highlighted_source\">extension String {<br/>  func stripCharactersInSet(chars: [Character]) -&gt; String {<br/>    return String(seq: filter(self) {find(chars, $0) == nil})<br/>  }<br/>}<br/>\u00a0<br/>let aString = \"She was a soul stripper. She took my heart!\"<br/>let chars: [Character] = [\"a\", \"e\", \"i\"]<br/>\u00a0<br/>println(aString.stripCharactersInSet(chars))</pre>"}, {"lang": "Tcl", "loc": 7, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> stripchars <span class=\"br0\">{</span>str chars<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> c <span class=\"br0\">[</span><span class=\"kw2\">split</span> <span class=\"re0\">$chars</span> <span class=\"st0\">\"\"</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> str <span class=\"br0\">[</span><span class=\"kw2\">string</span> map <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$c</span> <span class=\"st0\">\"\"</span><span class=\"br0\">]</span> <span class=\"re0\">$str</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"re0\">$str</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">set</span> s <span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span>stripchars <span class=\"re0\">$s</span> <span class=\"st0\">\"aei\"</span><span class=\"br0\">]</span></pre>"}, {"lang": "TorqueScript", "loc": 1, "block": "<pre> $string = \"She was a soul stripper. She took my heart!\";\n $chars = \"aei\";\n $newString = stripChars($string, $chars);\n echo($string);\n echo($newString);\n</pre>"}, {"lang": "TUSCRIPT", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT,{}<br/>string=\"She was a soul stripper. She took my heart!\"<br/>stringstrip=EXCHANGE (string,\"_[aei]__\")<br/>print string<br/>print stringstrip<br/>\u00a0</pre>"}, {"lang": "TXR", "loc": 13, "block": "<pre class=\"text highlighted_source\">(defun strip-chars (str set)<br/>  (let* ((regex-ast ^(set ,*(list-str set)))<br/>         (regex-obj (regex-compile regex-ast)))<br/>    (regsub regex-obj \"\" str)))<br/>\u00a0<br/>(defun usage ()<br/>  (pprinl `usage: @{(ldiff *full-args* *args*) \" \"} &lt;string&gt; &lt;set&gt;`)<br/>  (exit 1))<br/>\u00a0<br/>(tree-case *args*<br/>  ((str set extra) (usage))<br/>  ((str set . junk) (pprinl (strip-chars str set)))<br/>  (else (usage)))</pre>"}, {"lang": "UNIX Shell", "loc": 3, "block": "<pre class=\"bash highlighted_source\">strip_chars<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw3\">echo</span> <span class=\"st0\">\"$1\"</span> <span class=\"sy0\">|</span> <span class=\"kw2\">tr</span> <span class=\"re5\">-d</span> <span class=\"st0\">\"$2\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ursala", "loc": 5, "block": "<pre class=\"text highlighted_source\">strip = ~&amp;j<br/>\u00a0<br/>#cast\u00a0%s<br/>\u00a0<br/>test = strip('she was a soul stripper. she took my heart','aei')</pre>"}, {"lang": "VBA", "loc": 12, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Function</span> StripChars(stString <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, stStripChars <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, <span class=\"kw4\">Optional</span> bSpace <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span>)<br/><span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, stReplace <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/>    <span class=\"kw3\">If</span> bSpace = <span class=\"kw5\">True</span> <span class=\"kw3\">Then</span><br/>        stReplace = <span class=\"st0\">\" \"</span><br/>    <span class=\"kw3\">Else</span><br/>        stReplace = <span class=\"st0\">\"\"</span><br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> Len(stStripChars)<br/>        stString = Replace(stString, Mid(stStripChars, i, 1), stReplace)<br/>    <span class=\"kw3\">Next</span> i<br/>    StripChars = stString<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span></pre>"}, {"lang": "VBScript", "loc": 12, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Function</span> stripchars(s1,s2)<br/>\t<span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> Len(s1)<br/>\t\t<span class=\"kw3\">If</span> InStr(s2,Mid(s1,i,1)) <span class=\"kw3\">Then</span><br/>\t\t\ts1 = Replace(s1,Mid(s1,i,1),<span class=\"st0\">\"\"</span>)<br/>\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t<span class=\"kw3\">Next</span><br/>\tstripchars = s1<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/>WScript.StdOut.Write stripchars(<span class=\"st0\">\"She was a soul stripper. She took my heart!\"</span>,<span class=\"st0\">\"aei\"</span>)<br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 2, "block": "<pre class=\"text highlighted_source\">println(\"She was a soul stripper. She took my heart!\" - \"aei\")<br/>//--&gt;Sh ws  soul strppr. Sh took my hrt!</pre>"}]}