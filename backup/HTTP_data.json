{"task": "HTTP", "blocks": [{"lang": "8th", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\"http://www.rosettacode.org\" net:get drop &gt;s .<br/>\u00a0</pre>"}, {"lang": "ActionScript", "loc": 23, "block": "<pre class=\"actionscript highlighted_source\">\u00a0<br/>package<br/><span class=\"br0\">{</span><br/>    <span class=\"kw3\">import</span> flash.<span class=\"me1\">display</span>.<span class=\"me1\">Sprite</span>;<br/>    <span class=\"kw3\">import</span> flash.<span class=\"me1\">events</span>.<span class=\"me1\">Event</span>;<br/>    <span class=\"kw3\">import</span> flash.<span class=\"me1\">net</span>.<span class=\"sy0\">*</span>;<br/>\u00a0<br/>    <span class=\"kw3\">public</span> <span class=\"kw2\">class</span> RequestExample <span class=\"kw3\">extends</span> Sprite<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw3\">public</span> <span class=\"kw2\">function</span> RequestExample<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw2\">var</span> loader:URLLoader = <span class=\"kw2\">new</span> URLLoader<span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>            loader.<span class=\"me1\">addEventListener</span><span class=\"br0\">(</span>Event.<span class=\"me1\">COMPLETE</span>, loadComplete<span class=\"br0\">)</span>;<br/>            loader.<span class=\"kw3\">load</span><span class=\"br0\">(</span><span class=\"kw2\">new</span> URLRequest<span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw3\">private</span> <span class=\"kw2\">function</span> loadComplete<span class=\"br0\">(</span>evt:Event<span class=\"br0\">)</span>:<span class=\"kw3\">void</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw3\">trace</span><span class=\"br0\">(</span>evt.<span class=\"kw3\">target</span>.<span class=\"kw3\">data</span><span class=\"br0\">)</span>;<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Ada", "loc": 11, "block": "<pre class=\"ada highlighted_source\">\u00a0<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">with</span> AWS.<span class=\"me1\">Client</span>;<br/><span class=\"kw3\">with</span> AWS.<span class=\"me1\">Response</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> HTTP_Request <span class=\"kw1\">is</span><br/><span class=\"kw1\">begin</span><br/>   Put_Line <span class=\"br0\">(</span>AWS.<span class=\"me1\">Response</span>.<span class=\"me1\">Message_Body</span> <span class=\"br0\">(</span>AWS.<span class=\"me1\">Client</span>.<span class=\"me1\">Get</span> <span class=\"br0\">(</span>URL =&gt; <span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> HTTP_Request;<br/>\u00a0</pre>"}, {"lang": "ALGOL 68", "loc": 31, "block": "<pre class=\"algol68 highlighted_source\">\u00a0<br/><span class=\"kw3\">STRING</span> domain<span class=\"sy1\">=</span><span class=\"st0\">\"rosettacode.org\"</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">STRING</span> page<span class=\"sy1\">=</span><span class=\"st0\">\"wiki/Main_Page\"</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw3\">STRING</span> re success<span class=\"sy1\">=</span><span class=\"st0\">\"^HTTP/[0-9.]* 200\"</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">STRING</span> re result description<span class=\"sy1\">=</span><span class=\"st0\">\"^HTTP/[0-9.]* [0-9]+ [a-zA-Z ]*\"</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">STRING</span> re doctype <span class=\"sy1\">=</span><span class=\"st0\">\"\\s\\s&lt;!DOCTYPE html PUBLIC \"</span><span class=\"st0\">\"[^&gt;]+\"</span><span class=\"st0\">\"&gt;\\s+\"</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> html page <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">REF</span> <span class=\"kw3\">STRING</span> page<span class=\"br0\">)</span> <span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span> <span class=\"br0\">(</span><br/>     <span class=\"kw3\">BOOL</span> out<span class=\"sy1\">=</span>grep in string<span class=\"br0\">(</span>re success<span class=\"sy1\">,</span> page<span class=\"sy1\">,</span> <span class=\"kw7\">NIL</span><span class=\"sy1\">,</span> <span class=\"kw7\">NIL</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> 0<span class=\"sy1\">;</span><br/>     <span class=\"kw2\">IF</span> <span class=\"kw3\">INT</span> start<span class=\"sy1\">,</span> end<span class=\"sy1\">;</span><br/>        grep in string<span class=\"br0\">(</span>re result description<span class=\"sy1\">,</span> page<span class=\"sy1\">,</span> start<span class=\"sy1\">,</span> end<span class=\"br0\">)</span> <span class=\"sy1\">=</span> 0<br/>     <span class=\"kw2\">THEN</span><br/>        page<span class=\"sy1\">:=</span>page<span class=\"br0\">[</span>end<span class=\"sy1\">+</span>1<span class=\"sy1\">:</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span> grep in string<span class=\"br0\">(</span>re doctype<span class=\"sy1\">,</span> page<span class=\"sy1\">,</span> start<span class=\"sy1\">,</span> end<span class=\"br0\">)</span> <span class=\"sy1\">=</span> 0<br/>        <span class=\"kw2\">THEN</span> page<span class=\"sy1\">:=</span>page<span class=\"br0\">[</span>start<span class=\"sy1\">+</span>2<span class=\"sy1\">:</span><span class=\"br0\">]</span><br/>        <span class=\"kw2\">ELSE</span> <span class=\"kw22\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"unknown format retrieving page\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw2\">FI</span><br/>     <span class=\"kw2\">ELSE</span> <span class=\"kw22\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"unknown error retrieving page\"</span><span class=\"br0\">)</span><br/>     <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>     out<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw2\">IF</span> <span class=\"kw3\">STRING</span> reply<span class=\"sy1\">;</span><br/>   <span class=\"kw3\">INT</span> rc <span class=\"sy1\">=</span><br/>      http content <span class=\"br0\">(</span>reply<span class=\"sy1\">,</span> domain<span class=\"sy1\">,</span> <span class=\"st0\">\"http://\"</span><span class=\"sy1\">+</span>domain<span class=\"sy1\">+</span><span class=\"st0\">\"/\"</span><span class=\"sy1\">+</span>page<span class=\"sy1\">,</span> 0<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>   rc <span class=\"sy1\">=</span> 0 <span class=\"kw16\">AND</span> html page <span class=\"br0\">(</span>reply<span class=\"br0\">)</span><br/><span class=\"kw2\">THEN</span> <span class=\"kw22\">print</span> <span class=\"br0\">(</span>reply<span class=\"br0\">)</span><br/><span class=\"kw2\">ELSE</span> <span class=\"kw22\">print</span> <span class=\"br0\">(</span><span class=\"kw27\">strerror</span> <span class=\"br0\">(</span>rc<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw2\">FI</span><br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 4, "block": "<pre class=\"autohotkey highlighted_source\">\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/URLDownloadToFile.htm\"><span class=\"kw3\">UrlDownloadToFile</span></a><span class=\"sy0\">,</span> http:<span class=\"sy0\">//</span>rosettacode<span class=\"sy0\">.</span>org<span class=\"sy0\">,</span> url<span class=\"sy0\">.</span>html<br/><a href=\"http://www.autohotkey.com/docs/commands/Run.htm\"><span class=\"kw3\">Run</span></a><span class=\"sy0\">,</span> cmd <span class=\"sy0\">/</span>k type url<span class=\"sy0\">.</span>html<br/>\u00a0</pre>"}, {"lang": "AWK", "loc": 20, "block": "<pre class=\"awk highlighted_source\"><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>  site=<span class=\"st0\">\"en.wikipedia.org\"</span><br/>  path=<span class=\"st0\">\"/wiki/\"</span><br/>  name=<span class=\"st0\">\"Rosetta_Code\"</span><br/>\u00a0<br/>  server = <span class=\"st0\">\"/inet/tcp/0/\"</span> site <span class=\"st0\">\"/80\"</span><br/>  <span class=\"kw5\">print</span> <span class=\"st0\">\"GET \"</span> path name <span class=\"st0\">\" HTTP/1.0\"</span> |&amp; server<br/>  <span class=\"kw5\">print</span> <span class=\"st0\">\"Host: \"</span> site |&amp; server<br/>  <span class=\"kw5\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span><span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span> |&amp; server<br/>\u00a0<br/>  <span class=\"kw1\">while</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span>server |&amp; <span class=\"kw5\">getline</span> fish<span class=\"br0\">)</span> <span class=\"sy2\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"sy3\">++</span>scale <span class=\"sy2\">==</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><br/>      ship = fish<br/>    <span class=\"kw1\">else</span><br/>      ship = ship <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> fish<br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw5\">close</span><span class=\"br0\">(</span>server<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw5\">print</span> ship<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BaCon", "loc": 18, "block": "<pre class=\"qbasic highlighted_source\"><span class=\"co1\">'</span><br/><span class=\"co1\">' Read and display a website</span><br/><span class=\"co1\">'</span><br/><span class=\"kw1\">IF</span> AMOUNT<span class=\"br0\">(</span>ARGUMENT$<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">THEN</span><br/>    website$ <span class=\"sy0\">=</span> <span class=\"st0\">\"www.basic-converter.org\"</span><br/><span class=\"kw1\">ELSE</span><br/>    website$ <span class=\"sy0\">=</span> TOKEN$<span class=\"br0\">(</span>ARGUMENT$<span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>ENDIF<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> website$ &amp; <span class=\"st0\">\":80\"</span> <span class=\"kw1\">FOR</span> NETWORK <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> mynet<br/>SEND <span class=\"st0\">\"GET / HTTP/1.1\\r\\nHost: \"</span> &amp; website$ &amp; <span class=\"st0\">\"\\r\\n\\r\\n\"</span> <span class=\"kw1\">TO</span> mynet<br/>REPEAT<br/>    RECEIVE dat$ FROM mynet<br/>    total$ <span class=\"sy0\">=</span> total$ &amp; dat$<br/><span class=\"kw1\">UNTIL</span> ISFALSE<span class=\"br0\">(</span><a href=\"http://www.qbasicnews.com/qboho/qckwait.shtml\"><span class=\"kw3\">WAIT</span></a><span class=\"br0\">(</span>mynet<span class=\"sy0\">,</span> <span class=\"nu0\">500</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a> NETWORK mynet<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> total$<br/>\u00a0</pre>"}, {"lang": "Batch File", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>curl.exe -s -L http://rosettacode.org/<br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 9, "block": "<pre class=\"text highlighted_source\">      SYS \"LoadLibrary\", \"URLMON.DLL\" TO urlmon%<br/>      SYS \"GetProcAddress\", urlmon%, \"URLDownloadToFileA\" TO URLDownloadToFile<br/>\u00a0<br/>      url$ = \"http://www.bbcbasic.co.uk/aboutus.html\"<br/>      file$ = @tmp$ + \"rosetta.tmp\"<br/>      SYS URLDownloadToFile, 0, url$, file$, 0, 0 TO fail%<br/>      IF fail% ERROR 100, \"File download failed\"<br/>\u00a0<br/>      OSCLI \"TYPE \"\"\" + file$ + \"\"\"\"</pre>"}, {"lang": "Biferno", "loc": 1, "block": "<pre class=\"text highlighted_source\">$httpExt.ExecRemote(\"www.tabasoft.it\")</pre>"}, {"lang": "C", "loc": 24, "block": "<pre class=\"c highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;curl/curl.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span><br/>main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>        CURL <span class=\"sy0\">*</span>curl<span class=\"sy0\">;</span><br/>        <span class=\"kw4\">char</span> buffer<span class=\"br0\">[</span>CURL_ERROR_SIZE<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>curl <span class=\"sy0\">=</span> curl_easy_init<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> NULL<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                curl_easy_setopt<span class=\"br0\">(</span>curl<span class=\"sy0\">,</span> CURLOPT_URL<span class=\"sy0\">,</span> <span class=\"st0\">\"http://www.rosettacode.org/\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                curl_easy_setopt<span class=\"br0\">(</span>curl<span class=\"sy0\">,</span> CURLOPT_FOLLOWLOCATION<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                curl_easy_setopt<span class=\"br0\">(</span>curl<span class=\"sy0\">,</span> CURLOPT_ERRORBUFFER<span class=\"sy0\">,</span> buffer<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>curl_easy_perform<span class=\"br0\">(</span>curl<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> CURLE_OK<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span> <span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> buffer<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                        <span class=\"kw1\">return</span> EXIT_FAILURE<span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                curl_easy_cleanup<span class=\"br0\">(</span>curl<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> EXIT_SUCCESS<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C++", "loc": 40, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;winsock2.h&gt;</span><br/><span class=\"co2\">#include &lt;ws2tcpip.h&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tWSADATA wsaData<span class=\"sy4\">;</span><br/>\tWSAStartup<span class=\"br0\">(</span> MAKEWORD<span class=\"br0\">(</span> <span class=\"nu0\">2</span>, <span class=\"nu0\">2</span> <span class=\"br0\">)</span>, <span class=\"sy3\">&amp;</span>wsaData <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\taddrinfo <span class=\"sy2\">*</span>result <span class=\"sy1\">=</span> <span class=\"kw2\">NULL</span><span class=\"sy4\">;</span><br/>\taddrinfo hints<span class=\"sy4\">;</span><br/>\u00a0<br/>\tZeroMemory<span class=\"br0\">(</span> <span class=\"sy3\">&amp;</span>hints, <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span> hints <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\thints.<span class=\"me1\">ai_family</span> <span class=\"sy1\">=</span> AF_UNSPEC<span class=\"sy4\">;</span><br/>\thints.<span class=\"me1\">ai_socktype</span> <span class=\"sy1\">=</span> SOCK_STREAM<span class=\"sy4\">;</span><br/>\thints.<span class=\"me1\">ai_protocol</span> <span class=\"sy1\">=</span> IPPROTO_TCP<span class=\"sy4\">;</span><br/>\u00a0<br/>\tgetaddrinfo<span class=\"br0\">(</span> <span class=\"st0\">\"74.125.45.100\"</span>, <span class=\"st0\">\"80\"</span>, <span class=\"sy3\">&amp;</span>hints, <span class=\"sy3\">&amp;</span>result <span class=\"br0\">)</span><span class=\"sy4\">;</span> <span class=\"co1\">// http://www.google.com</span><br/>\u00a0<br/>\tSOCKET s <span class=\"sy1\">=</span> socket<span class=\"br0\">(</span> result<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>ai_family, result<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>ai_socktype, result<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>ai_protocol <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\tconnect<span class=\"br0\">(</span> s, result<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>ai_addr, <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>result<span class=\"sy2\">-</span><span class=\"sy1\">&gt;</span>ai_addrlen <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\tfreeaddrinfo<span class=\"br0\">(</span> result <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\tsend<span class=\"br0\">(</span> s, <span class=\"st0\">\"GET / HTTP/1.0<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw4\">char</span> buffer<span class=\"br0\">[</span><span class=\"nu0\">512</span><span class=\"br0\">]</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw4\">int</span> bytes<span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>\t\tbytes <span class=\"sy1\">=</span> recv<span class=\"br0\">(</span> s, buffer, <span class=\"nu0\">512</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span> bytes <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>\t\t\tstd<span class=\"sy4\">::</span><span class=\"kw3\">cout</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>buffer, bytes<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span> bytes <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 15, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Text</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Net</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        WebClient wc <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> WebClient<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">string</span> content <span class=\"sy0\">=</span> wc<span class=\"sy0\">.</span><span class=\"me1\">DownloadString</span><span class=\"br0\">(</span><span class=\"st0\">\"http://www.google.com\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>content<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Cach\u00e9 ObjectScript", "loc": 1, "block": "<pre>USER&gt;Set HttpRequest=##class(%Net.HttpRequest).%New()\nUSER&gt;Set HttpRequest.Server=\"checkip.dyndns.org\"\nUSER&gt;Do HttpRequest.Get(\"/\")\nUSER&gt;Do HttpRequest.HttpResponse.Data.OutputToDevice()\n</pre>"}, {"lang": "Clojure", "loc": 8, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> get<span class=\"sy0\">-</span>http <span class=\"br0\">[</span>url<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>sc <span class=\"br0\">(</span>java<span class=\"sy0\">.</span>util<span class=\"sy0\">.</span>Scanner<span class=\"sy0\">.</span> <br/>\t    <span class=\"br0\">(</span><span class=\"sy0\">.</span>openStream <span class=\"br0\">(</span>java<span class=\"sy0\">.</span>net<span class=\"sy0\">.</span>URL<span class=\"sy0\">.</span> url<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span>while <span class=\"br0\">(</span><span class=\"sy0\">.</span>hasNext sc<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"sy0\">.</span>nextLine sc<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>get<span class=\"sy0\">-</span>http <span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 292, "block": "<pre class=\"cobol highlighted_source\"><span class=\"kw2\">COBOL</span>  &gt;&gt;<span class=\"kw1\">SOURCE</span> FORMAT <span class=\"kw3\">IS</span> FIXED<br/>       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> curl-rosetta<span class=\"sy0\">.</span><br/>\u00a0<br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       repository<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">function</span> read-url<br/>           <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw2\">copy</span> <span class=\"st0\">\"gccurlsym.cpy\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> web-<span class=\"kw3\">page</span>             <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">16777216</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> curl-<span class=\"kw3\">status</span>          <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> cli                  <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"kw3\">external</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">88</span> helping           <span class=\"kw3\">values</span> <span class=\"st0\">\"-h\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-help\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"help\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">88</span> displaying        <span class=\"kw3\">value</span> <span class=\"st0\">\"display\"</span><span class=\"sy0\">.</span>            <br/>          <span class=\"nu0\">88</span> summarizing       <span class=\"kw3\">value</span> <span class=\"st0\">\"summary\"</span><span class=\"sy0\">.</span> <br/>\u00a0<br/>      *&gt; ***************************************************************<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw2\">accept</span> cli <span class=\"kw3\">from</span> command-<span class=\"kw3\">line</span><br/>       <span class=\"kw1\">if</span> helping <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"./curl-rosetta [help|display|summary]\"</span><br/>           goback<br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>      *&gt;<br/>      *&gt; Read a web resource <span class=\"kw2\">into</span> fixed ram<span class=\"sy0\">.</span><br/>      *&gt;   Caller <span class=\"kw3\">is</span> <span class=\"kw3\">in</span> charge <span class=\"kw3\">of</span> sizing the buffer<span class=\"sy0\">,</span><br/>      *&gt;     <span class=\"br0\">(</span><span class=\"kw3\">or</span> getting trickier <span class=\"kw3\">with</span> the <span class=\"kw3\">write</span> callback<span class=\"br0\">)</span><br/>      *&gt; Pass URL <span class=\"kw3\">and</span> <span class=\"kw3\">working-storage</span> variable<span class=\"sy0\">,</span><br/>      *&gt;   get back libcURL <span class=\"kw3\">error</span> <span class=\"kw1\">code</span> <span class=\"kw3\">or</span> <span class=\"nu0\">0</span> <span class=\"kw3\">for</span> success<br/>\u00a0<br/>       <span class=\"kw2\">move</span> read-url<span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"sy0\">,</span> web-<span class=\"kw3\">page</span><span class=\"br0\">)</span><br/>         <span class=\"kw2\">to</span> curl-<span class=\"kw3\">status</span><br/>\u00a0<br/>       <span class=\"kw2\">perform</span> <span class=\"kw1\">check</span><br/>       <span class=\"kw2\">perform</span> show<br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>      *&gt; ***************************************************************<br/>\u00a0<br/>      *&gt; Now tesing the result<span class=\"sy0\">,</span> relying <span class=\"kw3\">on</span> the gccurlsym<br/>      *&gt;   GnuCOBOL Curl Symbol <span class=\"kw2\">copy</span> book<br/>       <span class=\"kw1\">check</span><span class=\"sy0\">.</span><br/>       <span class=\"kw1\">if</span> curl-<span class=\"kw3\">status</span> <span class=\"kw3\">not</span> <span class=\"kw3\">equal</span> <span class=\"kw3\">zero</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span><br/>               curl-<span class=\"kw3\">status</span> <span class=\"st0\">\" \"</span><br/>               CURLEMSG<span class=\"br0\">(</span>curl-<span class=\"kw3\">status</span><span class=\"br0\">)</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"sy0\">.</span><br/>\u00a0<br/>      *&gt; <span class=\"kw3\">And</span> <span class=\"kw2\">display</span> the <span class=\"kw3\">page</span><br/>       show<span class=\"sy0\">.</span><br/>       <span class=\"kw1\">if</span> summarizing <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"Length: \"</span> stored-char-<span class=\"kw4\">length</span><span class=\"br0\">(</span>web-<span class=\"kw3\">page</span><span class=\"br0\">)</span><br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"kw1\">if</span> displaying <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> trim<span class=\"br0\">(</span>web-<span class=\"kw3\">page</span> <span class=\"kw3\">trailing</span><span class=\"br0\">)</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">REPLACE</span> <span class=\"kw3\">ALSO</span> <span class=\"sy0\">==</span>:EXCEPTION-HANDLERS:<span class=\"sy0\">==</span> <span class=\"kw3\">BY</span><br/>       <span class=\"sy0\">==</span><br/>      *&gt; informational warnings <span class=\"kw3\">and</span> abends<br/>       soft-<span class=\"kw3\">exception</span><span class=\"sy0\">.</span><br/>         <span class=\"kw2\">display</span> <span class=\"kw3\">space</span> <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"--Exception Report-- \"</span> <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Time of exception:   \"</span> current-<span class=\"kw3\">date</span> <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Module:              \"</span> module-id <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Module-path:         \"</span> module-path <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Module-source:       \"</span> module-<span class=\"kw1\">source</span> <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Exception-file:      \"</span> exception-<span class=\"kw3\">file</span> <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Exception-status:    \"</span> exception-<span class=\"kw3\">status</span> <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Exception-location:  \"</span> exception-location <span class=\"kw3\">upon</span> syserr<br/>         <span class=\"kw2\">display</span> <span class=\"st0\">\"Exception-statement: \"</span> exception-statement <span class=\"kw3\">upon</span> syserr<br/>       <span class=\"sy0\">.</span><br/>\u00a0<br/>       hard-<span class=\"kw3\">exception</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">perform</span> soft-<span class=\"kw3\">exception</span><br/>           <span class=\"kw3\">stop</span> <span class=\"kw3\">run</span> returning <span class=\"nu0\">127</span> <br/>       <span class=\"sy0\">.</span><br/>       <span class=\"sy0\">==.</span><br/>\u00a0<br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> curl-rosetta<span class=\"sy0\">.</span><br/>      *&gt; ***************************************************************<br/>\u00a0<br/>      *&gt; ***************************************************************<br/>      *&gt;<br/>      *&gt; The <span class=\"kw3\">function</span> hiding <span class=\"kw3\">all</span> the curl details<br/>      *&gt;<br/>      *&gt; Purpose:   <span class=\"kw2\">Call</span> libcURL <span class=\"kw3\">and</span> read <span class=\"kw2\">into</span> <span class=\"kw3\">memory</span><br/>      *&gt; ***************************************************************<br/>       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       function-id<span class=\"sy0\">.</span> read-url<span class=\"sy0\">.</span><br/>\u00a0<br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       repository<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw2\">copy</span> <span class=\"st0\">\"gccurlsym.cpy\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">replace</span> <span class=\"kw3\">also</span> <span class=\"sy0\">==</span>:CALL-<span class=\"kw3\">EXCEPTION</span>:<span class=\"sy0\">==</span> <span class=\"kw3\">by</span><br/>       <span class=\"sy0\">==</span><br/>           <span class=\"kw3\">on</span> <span class=\"kw3\">exception</span><br/>               <span class=\"kw2\">perform</span> hard-<span class=\"kw3\">exception</span><br/>       <span class=\"sy0\">==.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> curl-handle          <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> callback-handle      <span class=\"kw3\">usage</span> procedure-<span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> memory-<span class=\"kw3\">block</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> memory-<span class=\"kw3\">address</span>    <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span> <span class=\"kw3\">sync</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> memory-<span class=\"kw3\">size</span>       <span class=\"kw3\">usage</span> binary-long <span class=\"kw3\">sync</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> running-total     <span class=\"kw3\">usage</span> binary-long <span class=\"kw3\">sync</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> curl-result          <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> cli                  <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"kw3\">external</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">88</span> helping           <span class=\"kw3\">values</span> <span class=\"st0\">\"-h\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-help\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"help\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">spaces</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">88</span> displaying        <span class=\"kw3\">value</span> <span class=\"st0\">\"display\"</span><span class=\"sy0\">.</span>            <br/>          <span class=\"nu0\">88</span> summarizing       <span class=\"kw3\">value</span> <span class=\"st0\">\"summary\"</span><span class=\"sy0\">.</span> <br/>\u00a0<br/>       <span class=\"kw3\">linkage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> url                  <span class=\"kw3\">pic</span> x <span class=\"kw3\">any</span> <span class=\"kw4\">length</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> buffer               <span class=\"kw3\">pic</span> x <span class=\"kw3\">any</span> <span class=\"kw4\">length</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> curl-<span class=\"kw3\">status</span>          <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>      *&gt; ***************************************************************<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span> <span class=\"kw3\">using</span> url buffer returning curl-<span class=\"kw3\">status</span><span class=\"sy0\">.</span><br/>       <span class=\"kw1\">if</span> displaying <span class=\"kw3\">or</span> summarizing <span class=\"kw3\">then</span> <br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"Read: \"</span> url <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>      *&gt; <span class=\"kw2\">initialize</span> libcurl<span class=\"sy0\">,</span> hint <span class=\"kw3\">at</span> missing <span class=\"kw1\">library</span> <span class=\"kw1\">if</span> need be<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_global_init\"</span> <span class=\"kw3\">using</span> <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> CURL_GLOBAL_ALL<br/>           <span class=\"kw3\">on</span> <span class=\"kw3\">exception</span><br/>               <span class=\"kw2\">display</span><br/>                   <span class=\"st0\">\"need libcurl, link with -lcurl\"</span> <span class=\"kw3\">upon</span> syserr<br/>               <span class=\"kw3\">stop</span> <span class=\"kw3\">run</span> returning <span class=\"nu0\">1</span><br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; <span class=\"kw2\">initialize</span> handle<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_init\"</span> returning curl-handle<br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>       <span class=\"kw1\">if</span> curl-handle <span class=\"kw3\">equal</span> <span class=\"kw3\">NULL</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"no curl handle\"</span> <span class=\"kw3\">upon</span> syserr<br/>           <span class=\"kw3\">stop</span> <span class=\"kw3\">run</span> returning <span class=\"nu0\">1</span><br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>      *&gt; <span class=\"kw3\">Set</span> the URL<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_setopt\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> CURLOPT_URL<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> concatenate<span class=\"br0\">(</span>trim<span class=\"br0\">(</span>url <span class=\"kw3\">trailing</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> x<span class=\"st0\">\"00\"</span><span class=\"br0\">)</span><br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; follow <span class=\"kw3\">all</span> redirects<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_setopt\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> CURLOPT_FOLLOWLOCATION<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> <span class=\"nu0\">1</span><br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; <span class=\"kw3\">set</span> the <span class=\"kw2\">call</span> back <span class=\"kw2\">to</span> <span class=\"kw3\">write</span> <span class=\"kw2\">to</span> <span class=\"kw3\">memory</span><br/>       <span class=\"kw3\">set</span> callback-handle <span class=\"kw2\">to</span> <span class=\"kw3\">address</span> <span class=\"kw3\">of</span> entry <span class=\"st0\">\"curl-write-callback\"</span><br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_setopt\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> CURLOPT_WRITEFUNCTION<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> callback-handle<br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; <span class=\"kw3\">set</span> the curl handle <span class=\"kw3\">data</span> handling structure<br/>       <span class=\"kw3\">set</span> memory-<span class=\"kw3\">address</span> <span class=\"kw2\">to</span> <span class=\"kw3\">address</span> <span class=\"kw3\">of</span> buffer<br/>       <span class=\"kw2\">move</span> <span class=\"kw4\">length</span><span class=\"br0\">(</span>buffer<span class=\"br0\">)</span> <span class=\"kw2\">to</span> memory-<span class=\"kw3\">size</span><br/>       <span class=\"kw2\">move</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> running-total<br/>\u00a0<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_setopt\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> CURLOPT_WRITEDATA<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> <span class=\"kw3\">address</span> <span class=\"kw3\">of</span> memory-<span class=\"kw3\">block</span><br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; some servers demand an agent<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_setopt\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> CURLOPT_USERAGENT<br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">reference</span> concatenate<span class=\"br0\">(</span><span class=\"st0\">\"libcurl-agent/1.0\"</span><span class=\"sy0\">,</span> x<span class=\"st0\">\"00\"</span><span class=\"br0\">)</span><br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; let curl do <span class=\"kw3\">all</span> the hard work<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_perform\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           returning curl-result<br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>      *&gt; the <span class=\"kw2\">call</span> back will handle filling ram<span class=\"sy0\">,</span> <span class=\"kw2\">return</span> the result <span class=\"kw1\">code</span><br/>       <span class=\"kw2\">move</span> curl-result <span class=\"kw2\">to</span> curl-<span class=\"kw3\">status</span><br/>\u00a0<br/>      *&gt; curl clean <span class=\"kw3\">up</span><span class=\"sy0\">,</span> more important <span class=\"kw1\">if</span> testing cookies<br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"curl_easy_cleanup\"</span> <span class=\"kw3\">using</span><br/>           <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> curl-handle<br/>           returning <span class=\"kw3\">omitted</span><br/>          \u00a0:CALL-<span class=\"kw3\">EXCEPTION</span>:<br/>       end-<span class=\"kw2\">call</span><br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>\u00a0<br/>      \u00a0:EXCEPTION-HANDLERS:<br/>\u00a0<br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">function</span> read-url<span class=\"sy0\">.</span><br/>      *&gt; ***************************************************************<br/>\u00a0<br/>      *&gt; ***************************************************************<br/>      *&gt; Supporting libcurl callback<br/>       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> curl-write-callback<span class=\"sy0\">.</span><br/>\u00a0<br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       repository<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> real-<span class=\"kw3\">size</span>            <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>      *&gt; libcURL will pass a <span class=\"kw3\">pointer</span> <span class=\"kw2\">to</span> this structure <span class=\"kw3\">in</span> the callback<br/>       <span class=\"nu0\">01</span> memory-<span class=\"kw3\">block</span>         based<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> memory-<span class=\"kw3\">address</span>    <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span> <span class=\"kw3\">sync</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> memory-<span class=\"kw3\">size</span>       <span class=\"kw3\">usage</span> binary-long <span class=\"kw3\">sync</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> running-total     <span class=\"kw3\">usage</span> binary-long <span class=\"kw3\">sync</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> content-buffer       <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">65536</span><span class=\"br0\">)</span> based<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> web-<span class=\"kw3\">space</span>            <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">16777216</span><span class=\"br0\">)</span> based<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> left-over            <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">linkage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> contents             <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> element-<span class=\"kw3\">size</span>         <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> element-<span class=\"kw3\">count</span>        <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> memory-structure     <span class=\"kw3\">usage</span> <span class=\"kw3\">pointer</span><span class=\"sy0\">.</span><br/>\u00a0<br/>      *&gt; ***************************************************************<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><br/>           <span class=\"kw3\">using</span><br/>              <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> contents<br/>              <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> element-<span class=\"kw3\">size</span><br/>              <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> element-<span class=\"kw3\">count</span><br/>              <span class=\"kw3\">by</span> <span class=\"kw3\">value</span> memory-structure<br/>          returning real-<span class=\"kw3\">size</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">set</span> <span class=\"kw3\">address</span> <span class=\"kw3\">of</span> memory-<span class=\"kw3\">block</span> <span class=\"kw2\">to</span> memory-structure<br/>       <span class=\"kw2\">compute</span> real-<span class=\"kw3\">size</span> <span class=\"sy0\">=</span> element-<span class=\"kw3\">size</span><span class=\"sy0\"> * </span>element-<span class=\"kw3\">count</span> end-<span class=\"kw2\">compute</span><br/>\u00a0<br/>      *&gt; Fence <span class=\"kw3\">off</span> the <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> buffer<br/>       <span class=\"kw2\">compute</span><br/>           left-over <span class=\"sy0\">=</span> memory-<span class=\"kw3\">size</span><span class=\"sy0\"> - </span>running-total<br/>       end-<span class=\"kw2\">compute</span><br/>       <span class=\"kw1\">if</span> left-over &gt; <span class=\"nu0\">0</span> <span class=\"kw3\">and</span> &lt; real-<span class=\"kw3\">size</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">move</span> left-over <span class=\"kw2\">to</span> real-<span class=\"kw3\">size</span><br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>      *&gt; <span class=\"kw1\">if</span> there <span class=\"kw3\">is</span> more buffer<span class=\"sy0\">,</span> <span class=\"kw3\">and</span> <span class=\"kw3\">data</span> <span class=\"kw3\">not</span> <span class=\"kw3\">zero</span> <span class=\"kw4\">length</span><br/>       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>left-over &gt; <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw3\">and</span> <span class=\"br0\">(</span>real-<span class=\"kw3\">size</span> &gt; <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw3\">set</span> <span class=\"kw3\">address</span> <span class=\"kw3\">of</span> content-buffer <span class=\"kw2\">to</span> contents<br/>           <span class=\"kw3\">set</span> <span class=\"kw3\">address</span> <span class=\"kw3\">of</span> web-<span class=\"kw3\">space</span> <span class=\"kw2\">to</span> memory-<span class=\"kw3\">address</span><br/>\u00a0<br/>           <span class=\"kw2\">move</span> content-buffer<span class=\"br0\">(</span><span class=\"nu0\">1</span>:real-<span class=\"kw3\">size</span><span class=\"br0\">)</span><br/>             <span class=\"kw2\">to</span> web-<span class=\"kw3\">space</span><span class=\"br0\">(</span>running-total:real-<span class=\"kw3\">size</span><span class=\"br0\">)</span><br/>\u00a0<br/>           <span class=\"kw2\">add</span> real-<span class=\"kw3\">size</span> <span class=\"kw2\">to</span> running-total<br/>       <span class=\"kw3\">else</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"curl buffer sizing problem\"</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> curl-write-callback<span class=\"sy0\">.</span></pre>"}, {"lang": "ColdFusion", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>  &lt;cfhttp url=\"http://www.rosettacode.org\" result=\"result\"&gt;<br/>  &lt;cfoutput&gt;#result.FileContent#&lt;/cfoutput&gt;<br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 7, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> wget-clisp <span class=\"br0\">(</span>url<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>ext<span class=\"sy0\">:</span><span class=\"me1\">with-http-input</span> <span class=\"br0\">(</span>stream url<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>loop for line <span class=\"sy0\">=</span> <span class=\"br0\">(</span>read-line stream <span class=\"kw1\">nil</span> <span class=\"kw1\">nil</span><span class=\"br0\">)</span><br/>            while line<br/>            <span class=\"kw1\">do</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"~a~%\"</span> line<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "D", "loc": 6, "block": "<pre class=\"d highlighted_source\">\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">net</span>.<span class=\"me1\">curl</span><span class=\"sy0\">;</span><br/>  writeln<span class=\"br0\">(</span>get<span class=\"br0\">(</span><span class=\"st0\">\"http://google.com\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Dart", "loc": 8, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> <span class=\"st0\">'dart:io'</span><span class=\"sy0\">;</span><br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  var url <span class=\"sy0\">=</span> <span class=\"st0\">'http://rosettacode.org'</span><span class=\"sy0\">;</span><br/>  var client <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> HttpClient<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  client.<span class=\"me1\">getUrl</span><span class=\"br0\">(</span>Uri.<span class=\"me1\">parse</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        .<span class=\"me1\">then</span><span class=\"br0\">(</span><span class=\"br0\">(</span>HttpClientRequest request<span class=\"br0\">)</span>   <span class=\"sy0\">=&gt;</span> request.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        .<span class=\"me1\">then</span><span class=\"br0\">(</span><span class=\"br0\">(</span>HttpClientResponse response<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> response.<span class=\"me1\">pipe</span><span class=\"br0\">(</span>stdout<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 45, "block": "<pre class=\"delphi highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> HTTP<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"co2\">{$DEFINE DEBUG}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  Classes<span class=\"sy1\">,</span><br/>  httpsend<span class=\"sy1\">;</span> <span class=\"co1\">// Synapse httpsend class</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  Response<span class=\"sy1\">:</span> TStrings<span class=\"sy1\">;</span><br/>  HTTPObj<span class=\"sy1\">:</span> THTTPSend<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  HTTPObj <span class=\"sy1\">:</span><span class=\"sy3\">=</span> THTTPSend<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">try</span><br/>    <span class=\"coMULTI\">{ Stringlist object to capture HTML returned<br/>      from URL }</span><br/>    Response <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TStringList<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">try</span><br/>      <span class=\"kw1\">if</span> HTTPObj<span class=\"sy1\">.</span><span class=\"me1\">HTTPMethod</span><span class=\"br0\">(</span><span class=\"st0\">'GET'</span><span class=\"sy1\">,</span><span class=\"st0\">'http://www.mgis.uk.com'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">begin</span><br/>          <span class=\"coMULTI\">{ Load HTTP Document into Stringlist }</span><br/>          Response<span class=\"sy1\">.</span><span class=\"me1\">LoadFromStream</span><span class=\"br0\">(</span>HTTPObj<span class=\"sy1\">.</span><span class=\"me1\">Document</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>          <span class=\"coMULTI\">{ Write the response to the console window }</span><br/>          <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>Response<span class=\"sy1\">.</span><span class=\"me1\">Text</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">else</span><br/>        <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Error retrieving data'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">finally</span><br/>      Response<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">finally</span><br/>    HTTPObj<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Keep console window open</span><br/>  Readln<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "E", "loc": 5, "block": "<pre class=\"e highlighted_source\">\u00a0<br/>when <span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/def\"><span class=\"kw4\">def</span></a> t <span class=\"sy0\">:=</span> <span class=\"sy0\">&lt;</span>http<span class=\"sy0\">://</span>www.<span class=\"me1\">rosettacode</span>.<span class=\"me1\">org</span><span class=\"sy0\">&gt;</span> <span class=\"sy0\">&lt;-</span> getText<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">{</span><br/>    <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span>t<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "EchoLisp", "loc": 6, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"co1\">;; asynchronous call back definition</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>success name text<span class=\"br0\">)</span> <span class=\"br0\">(</span>writeln 'Loaded name<span class=\"br0\">)</span> <span class=\"br0\">(</span>writeln text<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">;; </span><br/><span class=\"br0\">(</span>file<span class=\"sy0\">-&gt;</span><span class=\"kw1\">string</span> success <span class=\"st0\">\"http://www.google.com\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Emacs Lisp", "loc": 6, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>with-current-buffer<br/>    <span class=\"br0\">(</span>url-retrieve-synchronously <span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>goto-char <span class=\"br0\">(</span>point-<span class=\"kw1\">min</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>search-forward <span class=\"st0\">\"<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">nil</span> t<span class=\"br0\">)</span>  <span class=\"co1\">;; skip headers</span><br/>  <span class=\"br0\">(</span>prin1 <span class=\"br0\">(</span>buffer-substring <span class=\"br0\">(</span>point<span class=\"br0\">)</span> <span class=\"br0\">(</span>point-<span class=\"kw1\">max</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>kill-buffer <span class=\"br0\">(</span>current-buffer<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Erlang", "loc": 11, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>main<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>main<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">Url</span>|<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>   <a href=\"http://erlang.org/doc/man/inets.html\"><span class=\"kw5\">inets</span></a>:<span class=\"re3\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>   <span class=\"kw1\">case</span> <a href=\"http://erlang.org/doc/man/http.html\"><span class=\"kw5\">http</span></a>:<span class=\"re3\">request</span><span class=\"br0\">(</span><span class=\"re5\">Url</span><span class=\"br0\">)</span> <span class=\"kw1\">of</span><br/>       <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"br0\">{</span><span class=\"re5\">_V</span><span class=\"sy1\">,</span> <span class=\"re5\">_H</span><span class=\"sy1\">,</span> <span class=\"re5\">Body</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"~p~n\"</span><span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"re5\">Body</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>       <span class=\"br0\">{</span>error<span class=\"sy1\">,</span> <span class=\"re5\">Res</span><span class=\"br0\">}</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span><span class=\"st0\">\"~p~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Res</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "F#", "loc": 7, "block": "<pre class=\"fsharp highlighted_source\">\u00a0<br/><span class=\"kw1\">let</span> wget <span class=\"br0\">(</span>url\u00a0: <span class=\"kw4\">string</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">use</span> c <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> System.<span class=\"me1\">Net</span>.<span class=\"me1\">WebClient</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    c.<span class=\"me1\">DownloadString</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span><br/>\u00a0<br/>printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span>wget <span class=\"st0\">\"http://www.rosettacode.org/\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 3, "block": "<pre class=\"text highlighted_source\">USE: http.client<br/>\"http://www.rosettacode.org\" http-get nip print<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>include unix/socket.fs<br/>\u00a0<br/>s\" localhost\" 80 open-socket<br/>dup s\\\" GET / HTTP/1.0\\n\\n\" rot write-socket<br/>dup pad 8092 read-socket  type<br/>close-socket<br/>\u00a0</pre>"}, {"lang": "friendly interactive shell", "loc": 1, "block": "<pre class=\"text highlighted_source\">curl -s -L http://rosettacode.org/</pre>"}, {"lang": "Frink", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>print[read[\"http://futureboy.us/frinkdocs/\"]]<br/>\u00a0</pre>"}, {"lang": "Gastona", "loc": 6, "block": "<pre class=\"text highlighted_source\">#listix#<br/>\u00a0<br/>   &lt;main&gt;<br/>      LOOP, TEXT FILE, http://www.rosettacode.org<br/>          , BODY, @&lt;value&gt;<br/>\u00a0</pre>"}, {"lang": "GML", "loc": 1, "block": "<pre class=\"gml highlighted_source\">get <span class=\"sy0\">=</span> http_get<span class=\"br0\">(</span>\"http:<span class=\"co1\">//www.rosettacode.org/\");</span></pre>"}, {"lang": "Go", "loc": 18, "block": "<pre class=\"go highlighted_source\">\u00a0<br/><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"io\"</span><br/>    <span class=\"st0\">\"log\"</span><br/>    <span class=\"st0\">\"net/http\"</span><br/>    <span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    r<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> http<span class=\"sy3\">.</span>Get<span class=\"sy1\">(</span><span class=\"st0\">\"http://rosettacode.org/robots.txt\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        log<span class=\"sy3\">.</span>Fatalln<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    io<span class=\"sy3\">.</span>Copy<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Stdout<span class=\"sy1\">,</span> r<span class=\"sy3\">.</span>Body<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0</pre>"}, {"lang": "Groovy", "loc": 3, "block": "<pre class=\"groovy highlighted_source\">\u00a0<br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=URL&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">URL</span></a><span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20eachLine\"><span class=\"kw7\">eachLine</span></a> <span class=\"br0\">{</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> it <span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "GUISS", "loc": 3, "block": "<pre class=\"text highlighted_source\">Start,Programs,Applications,Mozilla Firefox,Inputbox:address bar&gt;www.rosettacode.org,Button:Go,<br/>Click:Area:browser window,Type:[Control A],[Control C],Start,Programs,Accessories,Notepad,<br/>Menu:Edit,Paste</pre>"}, {"lang": "Halon", "loc": 1, "block": "<pre class=\"text highlighted_source\">echo http(\"http://www.rosettacode.org\");</pre>"}, {"lang": "Haskell", "loc": 12, "block": "<pre class=\"haskell highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> Network<span class=\"sy0\">.</span>Browser<br/><span class=\"kw1\">import</span> Network<span class=\"sy0\">.</span>HTTP<br/><span class=\"kw1\">import</span> Network<span class=\"sy0\">.</span>URI<br/>\u00a0<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span> <br/>    rsp <span class=\"sy0\">&lt;-</span> Network<span class=\"sy0\">.</span>Browser<span class=\"sy0\">.</span>browse <span class=\"sy0\">$</span> <span class=\"kw1\">do</span><br/>        setAllowRedirects True<br/>        setOutHandler <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:const\"><span class=\"kw3\">const</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        request <span class=\"sy0\">$</span> getRequest <span class=\"st0\">\"http://www.rosettacode.org/\"</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> rspBody <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:snd\"><span class=\"kw3\">snd</span></a> rsp<br/>\u00a0</pre>"}, {"lang": "Icon and Unicon", "loc": 21, "block": "<pre class=\"icon highlighted_source\">\u00a0<br/><span class=\"kw1\">link</span> cfunc<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>arglist<span class=\"br0\">)</span><br/>   <span class=\"kw4\">get</span><span class=\"br0\">(</span>arglist<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> <span class=\"kw4\">get</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span><br/>   <span class=\"kw2\">local</span> f<span class=\"sy1\">,</span> host<span class=\"sy1\">,</span> port<span class=\"sy1\">,</span> path<br/>   url <span class=\"sy1\">?</span> <span class=\"br0\">{</span><br/>         <span class=\"sy1\">=</span><span class=\"st0\">\"http://\"</span> <span class=\"sy1\">|</span> <span class=\"sy1\">=</span><span class=\"st0\">\"HTTP://\"</span><br/>         host <span class=\"sy1\">:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">upto</span><span class=\"br0\">(</span><span class=\"st0\">':/'</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>         <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy1\">=</span><span class=\"st0\">\":\"</span> <span class=\"sy1\">&amp;</span> <span class=\"br0\">(</span>port <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">upto</span><span class=\"br0\">(</span><span class=\"st0\">'/'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> port <span class=\"sy1\">:=</span> <span class=\"nu0\">80</span><br/>         <span class=\"kw1\">if</span> <span class=\"kw4\">pos</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> path <span class=\"sy1\">:=</span> <span class=\"st0\">\"/\"</span> <span class=\"kw1\">else</span> path <span class=\"sy1\">:=</span> <span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>host<span class=\"br0\">)</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span>path<span class=\"br0\">)</span><br/>   f <span class=\"sy1\">:=</span> tconnect<span class=\"br0\">(</span>host<span class=\"sy1\">,</span> port<span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Unable to connect\"</span><span class=\"br0\">)</span><br/>   <span class=\"kw4\">writes</span><span class=\"br0\">(</span>f<span class=\"sy1\">,</span> <span class=\"st0\">\"GET \"</span><span class=\"sy1\">,</span> path <span class=\"sy1\">|</span> <span class=\"st0\">\"/\"</span> <span class=\"sy1\">,</span><span class=\"st0\">\" HTTP/1.0<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span><span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">while</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"kw4\">read</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">require<span class=\"st_h\">'web/gethttp'</span><br/>gethttp <span class=\"st_h\">'http://www.rosettacode.org'</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 11, "block": "<pre class=\"java5 highlighted_source\"><span class=\"kw2\">import</span> <span class=\"co2\">java.util.Scanner</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> <span class=\"co2\">java.net.URL</span><span class=\"sy0\">;</span>  <br/>\u00a0<br/><span class=\"kw2\">public</span> <span class=\"kw2\">class</span> Main <span class=\"br0\">{</span><br/>    <span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw3\">void</span> main<span class=\"br0\">(</span><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/String.html\"><span class=\"kw21\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"kw2\">throws</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/Exception.html\"><span class=\"kw21\">Exception</span></a> <span class=\"br0\">{</span>         <br/>        <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Scanner.html\"><span class=\"kw46\">Scanner</span></a> sc = <span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/util/Scanner.html\"><span class=\"kw46\">Scanner</span></a><span class=\"br0\">(</span><span class=\"kw2\">new</span> <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/net/URL.html\"><span class=\"kw28\">URL</span></a><span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span>.<span class=\"me1\">openStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>sc.<span class=\"me1\">hasNext</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/lang/System.html\"><span class=\"kw21\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>sc.<span class=\"me1\">nextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>         <br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "JavaScript", "loc": 7, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> req <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> XMLHttpRequest<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>req.<span class=\"me1\">onload</span> <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"kw1\">this</span>.<span class=\"me1\">responseText</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>req.<span class=\"me1\">open</span><span class=\"br0\">(</span><span class=\"st0\">'get'</span><span class=\"sy0\">,</span> <span class=\"st0\">'http://rosettacode.org'</span><span class=\"sy0\">,</span> <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>req.<span class=\"me1\">send</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Julia", "loc": 3, "block": "<pre class=\"text highlighted_source\">readurl(url) = open(readlines, download(url))<br/>\u00a0<br/>readurl(\"http://rosettacode.org/index.html\")</pre>"}, {"lang": "Kotlin", "loc": 13, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">net</span>.<span class=\"me1\">URL</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">InputStreamReader</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Scanner</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> url <span class=\"sy0\">=</span> URL<span class=\"br0\">(</span><span class=\"st0\">\"http://www.puzzlers.org/pub/wordlists/unixdict.txt\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> isr <span class=\"sy0\">=</span> InputStreamReader<span class=\"br0\">(</span>url.<span class=\"me1\">openStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sc <span class=\"sy0\">=</span> Scanner<span class=\"br0\">(</span>isr<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>sc.<span class=\"me1\">hasNextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> println<span class=\"br0\">(</span>sc.<span class=\"me1\">nextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    sc.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lasso", "loc": 10, "block": "<pre class=\"text highlighted_source\">// using include_url wrapper:<br/>include_url('http://rosettacode.org/index.html')<br/>\u00a0<br/>// one line curl<br/>curl('http://rosettacode.org/index')-&gt;result-&gt;asString<br/>\u00a0<br/>// using curl for more complex operations and feedback<br/>local(x = curl('http://rosettacode.org/index'))<br/>local(y = #x-&gt;result)<br/>#y-&gt;asString</pre>"}, {"lang": "LFE", "loc": 7, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">inets</span> start<span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">case</span> <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">httpc</span> request '<span class=\"st0\">\"http://lfe.github.io\"</span><span class=\"br0\">)</span> <br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span>tuple 'ok result<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">io</span> format '<span class=\"st0\">\"Result: ~p\"</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>  <span class=\"br0\">(</span><span class=\"br0\">(</span>tuple '<span class=\"kw1\">error</span> reason<span class=\"br0\">)</span> <br/>    <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">io</span> format '<span class=\"st0\">\"Error: ~p~n\"</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> reason<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Liberty BASIC", "loc": 22, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/>result <span class=\"sy0\">=</span> DownloadToFile<span class=\"br0\">(</span> <span class=\"st0\">\"http://rosettacode.org/wiki/Main_Page\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"in.html\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">timer</span> <span class=\"nu0\">2000</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"kw1\">on</span><span class=\"br0\">]</span><br/><span class=\"kw1\">wait</span><br/><span class=\"br0\">[</span><span class=\"kw1\">on</span><span class=\"br0\">]</span><br/><span class=\"kw1\">timer</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">if</span> result <span class=\"sy0\">&lt;&gt;</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"Error downloading.\"</span><br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> DownloadToFile<span class=\"br0\">(</span> urlfile$<span class=\"sy0\">,</span> localfile$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">open</span> <span class=\"st0\">\"URLmon\"</span> <span class=\"kw1\">for</span> <span class=\"kw1\">dll</span> <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>url<br/>    <span class=\"kw1\">calldll</span> <span class=\"sy0\">#</span>url<span class=\"sy0\">,</span> <span class=\"st0\">\"URLDownloadToFileA\"</span><span class=\"sy0\">,</span>_<br/>    <span class=\"nu0\">0</span> <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><span class=\"sy0\">,</span>_         <span class=\"co1\">'null</span><br/>    urlfile$ <span class=\"kw1\">as</span> <span class=\"kw1\">ptr</span><span class=\"sy0\">,</span>_   <span class=\"co1\">'url to download</span><br/>    localfile$ <span class=\"kw1\">as</span> <span class=\"kw1\">ptr</span><span class=\"sy0\">,</span>_ <span class=\"co1\">'save file name</span><br/>    <span class=\"nu0\">0</span> <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><span class=\"sy0\">,</span>_         <span class=\"co1\">'reserved, must be 0</span><br/>    <span class=\"nu0\">0</span> <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><span class=\"sy0\">,</span>_         <span class=\"co1\">'callback address, can be 0</span><br/>    DownloadToFile <span class=\"kw1\">as</span> <span class=\"kw1\">ulong</span>  <span class=\"co1\">'0=success</span><br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>url<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0</pre>"}, {"lang": "Lingo", "loc": 30, "block": "<pre class=\"text highlighted_source\">property _netID<br/>property _cbHandler<br/>property _cbTarget<br/>\u00a0<br/>----------------------------------------<br/>-- Simple HTTP GET request<br/>-- @param {string} url<br/>-- @param {symbol} cbHandler<br/>-- @param {object} [cbTarget=_movie]<br/>----------------------------------------<br/>on new (me, url, cbHandler, cbTarget)<br/>  if voidP(cbTarget) then cbTarget = _movie<br/>  me._netID = getNetText(url)<br/>  me._cbHandler = cbHandler<br/>  me._cbTarget = cbTarget<br/>  _movie.actorList.add(me)<br/>  return me<br/>end<br/>\u00a0<br/>----------------------------------------<br/>-- @callback<br/>----------------------------------------<br/>on stepFrame (me)<br/>  if netDone(me._netID) then<br/>    res = netTextResult(me._netID)<br/>    err = netError(me._netID)<br/>    _movie.actorList.deleteOne(me)<br/>    call(me._cbHandler, me._cbTarget, res, err)<br/>  end if<br/>end</pre>"}, {"lang": "LiveCode", "loc": 3, "block": "<pre class=\"text highlighted_source\">put true into libURLFollowHttpRedirects<br/>get URL \"http://httpbin.org/html\"<br/>put it</pre>"}, {"lang": "LSL", "loc": 21, "block": "<pre class=\"text highlighted_source\">string sURL = \"http://www.RosettaCode.Org\";<br/>key kHttpRequestId;<br/>default {<br/>\tstate_entry() {<br/>\t\tkHttpRequestId = llHTTPRequest(sURL, [], \"\");<br/>\t}<br/>\thttp_response(key kRequestId, integer iStatus, list lMetaData, string sBody) {<br/>\t\tif(kRequestId==kHttpRequestId) {<br/>\t\t\tllOwnerSay(\"Status=\"+(string)iStatus);<br/>\t\t\tinteger x = 0;<br/>\t\t\tfor(x=0\u00a0; x&lt;llGetListLength(lMetaData)\u00a0; x++) {<br/>\t\t\t\tllOwnerSay(\"llList2String(lMetaData, \"+(string)x+\")=\"+llList2String(lMetaData, x));<br/>\t\t\t}<br/>\t\t\tlist lBody = llParseString2List(sBody, [\"\\n\"], []);<br/>\t\t\tfor(x=0\u00a0; x&lt;llGetListLength(lBody)\u00a0; x++) {<br/>\t\t\t\tllOwnerSay(\"llList2String(lBody, \"+(string)x+\")=\"+llList2String(lBody, x));<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>}<br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 6, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">local</span> http <span class=\"sy0\">=</span> <span class=\"kw3\">require</span><span class=\"br0\">(</span><span class=\"st0\">\"socket.http\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">local</span> url <span class=\"sy0\">=</span> <span class=\"kw3\">require</span><span class=\"br0\">(</span><span class=\"st0\">\"socket.url\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">local</span> page <span class=\"sy0\">=</span> http<span class=\"sy0\">.</span>request<span class=\"br0\">(</span><span class=\"st0\">'http://www.google.com/m/search?q='</span> <span class=\"sy0\">..</span> url<span class=\"sy0\">.</span>escape<span class=\"br0\">(</span><span class=\"st0\">\"lua\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span>page<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "M2000 Interpreter", "loc": 31, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module CheckIt  {<br/>      Declare  xml \"Microsoft.XMLHTTP\"<br/>      const testUrl$ = \"http://www.rosettacode.org\"<br/>      With  xml, \"readyState\" as ReadyState<br/>      Method xml \"Open\", \"Get\", testUrl$, True  ' True means Async<br/>      Method xml \"send\"<br/>      \\\\ We set a thread to count time<br/>      k=0<br/>      Thread {<br/>            k++<br/>      }  as TimeOut interval 100<br/>      \\\\ In main thread we can check ReadyState and Mouse button<br/>      Task.Main 100 {<br/>            Print ReadyState<br/>            If ReadyState=4 then exit<br/>            if k&gt;20 then exit   ' 20*100= 2 sec<br/>            if mouse then exit ' exit if mouse click<br/>      }<br/>      \\\\ So now we can read<br/>      if ReadyState=4 then {<br/>            With  xml, \"responseText\" AS AA$<br/>            \\\\ break AA$ to lines<br/>            Document BB$=AA$<br/>            \\\\ using line breaks as CRLF<br/>            Report BB$<br/>      }<br/>      Declare xml Nothing<br/>}<br/>CheckIt<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>content\u00a0:= URL:-Get( \"http://www.google.com/\" );<br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Print[Import[\"http://www.google.com/webhp?complete=1&amp;hl=en\", \"Source\"]]<br/>\u00a0</pre>"}, {"lang": "MATLAB / Octave", "loc": 7, "block": "<pre class=\"matlab highlighted_source\">\u00a0<br/>&gt;&gt; random = urlread<span class=\"br0\">(</span><span class=\"co2\">'http://www.random.org/integers/?num=1&amp;min=1&amp;max=100&amp;col=1&amp;base=10&amp;format=plain&amp;rnd=new'</span><span class=\"br0\">)</span><br/>\u00a0<br/>random =<br/>\u00a0<br/><span class=\"nu0\">61</span><br/>\u00a0</pre>"}, {"lang": "MIRC Scripting Language", "loc": 17, "block": "<pre class=\"text highlighted_source\">using System;<br/>using System.Console;<br/>using System.Net;<br/>using System.IO;<br/>\u00a0<br/>module HTTP<br/>{<br/>    Main()\u00a0: void<br/>    {<br/>        def wc = WebClient();<br/>        def myStream = wc.OpenRead(\"http://rosettacode.org\");<br/>        def sr = StreamReader(myStream);<br/>\u00a0<br/>        WriteLine(sr.ReadToEnd());<br/>        myStream.Close()<br/>    }<br/>}</pre>"}, {"lang": "Nemerle", "loc": 17, "block": "<pre class=\"text highlighted_source\">using System;<br/>using System.Console;<br/>using System.Net;<br/>using System.IO;<br/>\u00a0<br/>module HTTP<br/>{<br/>    Main()\u00a0: void<br/>    {<br/>        def wc = WebClient();<br/>        def myStream = wc.OpenRead(\"http://rosettacode.org\");<br/>        def sr = StreamReader(myStream);<br/>\u00a0<br/>        WriteLine(sr.ReadToEnd());<br/>        myStream.Close()<br/>    }<br/>}</pre>"}, {"lang": "NetRexx", "loc": 17, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols <span class=\"kw2\">binary</span><br/>\u00a0<br/><span class=\"kw1\">import</span> java.<span class=\"me0\">util</span>.<span class=\"me0\">Scanner</span><br/><span class=\"kw1\">import</span> java.<span class=\"me0\">net</span>.<span class=\"me0\">URL</span><br/>\u00a0<br/><span class=\"kw1\">do</span><br/>  rosettaUrl = <span class=\"st0\">\"http://www.rosettacode.org\"</span><br/>  sc = Scanner<span class=\"br0\">(</span>URL<span class=\"br0\">(</span>rosettaUrl<span class=\"br0\">)</span>.<span class=\"me0\">openStream</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">loop</span> while sc.<span class=\"me0\">hasNext</span><br/>    <span class=\"kw1\">say</span> sc.<span class=\"me0\">nextLine</span><br/>  <span class=\"kw3\">end</span><br/><span class=\"kw3\">catch</span> ex = Exception<br/>  ex.<span class=\"me0\">printStackTrace</span><br/><span class=\"kw3\">end</span><br/>\u00a0<br/><span class=\"kw1\">return</span></pre>"}, {"lang": "NewLisp", "loc": 3, "block": "<pre class=\"newlisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#get-url\"><span class=\"kw1\">get-url</span></a> <span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 4, "block": "<pre class=\"text highlighted_source\">import httpclient<br/>\u00a0<br/>var client = newHttpClient()<br/>echo client.getContent \"http://rosettacode.org\"</pre>"}, {"lang": "Objeck", "loc": 11, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">use</span> HTTP<span class=\"sy0\">;</span><br/><span class=\"kw1\">use</span> Collection<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> HttpTest <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    lines <span class=\"sy0\">:=</span> HttpClient<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Get</span><span class=\"br0\">(</span><span class=\"st0\">\"http://rosettacode.org\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">each</span><span class=\"br0\">(</span>i <span class=\"sy0\">:</span> lines<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">Get</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">As</span><span class=\"br0\">(</span><span class=\"kw2\">String</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Objective-C", "loc": 17, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"kw4\">int</span> argc, <span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    @autoreleasepool <span class=\"br0\">{</span><br/>\u00a0<br/>        <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSError_Class/\"><span class=\"kw5\">NSError</span></a>        <span class=\"sy0\">*</span>error;<br/>        <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSURLResponse_Class/\"><span class=\"kw5\">NSURLResponse</span></a> <span class=\"sy0\">*</span>response;<br/>        <a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSData_Class/\"><span class=\"kw5\">NSData</span></a> <span class=\"sy0\">*</span>data <span class=\"sy0\">=</span> <span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSURLConnection_Class/\"><span class=\"kw5\">NSURLConnection</span></a> sendSynchronousRequest<span class=\"sy0\">:</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSURLRequest_Class/\"><span class=\"kw5\">NSURLRequest</span></a> requestWithURL<span class=\"sy0\">:</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSURL_Class/\"><span class=\"kw5\">NSURL</span></a> URLWithString<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"http://rosettacode.org\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>                                                returningResponse<span class=\"sy0\">:&amp;</span>response<br/>                                                            error<span class=\"sy0\">:&amp;</span>error<span class=\"br0\">]</span>;<br/>\u00a0<br/>        NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"%@\"</span>, <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/\"><span class=\"kw5\">NSString</span></a> alloc<span class=\"br0\">]</span> initWithData<span class=\"sy0\">:</span>data<br/>                                              encoding<span class=\"sy0\">:</span>NSUTF8StringEncoding<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 7, "block": "<pre class=\"ocaml highlighted_source\">\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> url <span class=\"sy0\">=</span> <span class=\"st0\">\"http://www.rosettacode.org\"</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> _,_, page_content <span class=\"sy0\">=</span> make_request <span class=\"re1\">~url</span> <span class=\"re1\">~kind</span><span class=\"sy0\">:</span>GET <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> page_content<span class=\"sy0\">;</span><br/><span class=\"sy0\">;;</span><br/>\u00a0</pre>"}, {"lang": "ooRexx", "loc": 6, "block": "<pre class=\"oorexx highlighted_source\">url=<span class=\"sy0\">.</span>bsf~new<span class=\"br0\">(</span><span class=\"st0\">\"java.net.URL\"</span>,<span class=\"st0\">\"http://teletext.orf.at\"</span><span class=\"br0\">)</span><br/>sc =<span class=\"sy0\">.</span>bsf~new<span class=\"br0\">(</span><span class=\"st0\">\"java.util.Scanner\"</span>,url~openStream<span class=\"br0\">)</span><br/><span class=\"kw1\">loop</span> <span class=\"kw2\">while</span> sc~hasNext<br/>  <span class=\"kw1\">say</span> sc~nextLine<br/>  <span class=\"kw3\">End</span><br/>::requires BSF<span class=\"sy0\">.</span>CLS   <span class=\"co1\">-- get Java camouflaging support</span></pre>"}, {"lang": "Oz", "loc": 12, "block": "<pre class=\"oz highlighted_source\">\u00a0<br/><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">GetPage</span> Url<span class=\"br0\">}</span><br/>     F = <span class=\"br0\">{</span>New Open<span class=\"sy0\">.</span>file init<span class=\"br0\">(</span>url:Url<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>     Contents = <span class=\"br0\">{</span>F read<span class=\"br0\">(</span>list:$ size:all<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>F close<span class=\"br0\">}</span><br/>     Contents<br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>System<span class=\"sy0\">.</span>showInfo <span class=\"br0\">{</span>GetPage <span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Pascal", "loc": 16, "block": "<pre class=\"pascal highlighted_source\"><span class=\"co2\">{$mode objfpc}{$H+}</span><br/><span class=\"kw1\">uses</span> fphttpclient<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  s<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/>  hc<span class=\"sy1\">:</span> tfphttpclient<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  hc <span class=\"sy1\">:</span><span class=\"sy3\">=</span> tfphttpclient<span class=\"sy1\">.</span><span class=\"me1\">create</span><span class=\"br0\">(</span><span class=\"kw2\">nil</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">try</span><br/>    s <span class=\"sy1\">:</span><span class=\"sy3\">=</span> hc<span class=\"sy1\">.</span><span class=\"kw3\">get</span><span class=\"br0\">(</span><span class=\"st0\">'http://www.example.com'</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">finally</span><br/>    hc<span class=\"sy1\">.</span><span class=\"me1\">free</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Peloton", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&lt;@ SAYURLLIT&gt;http://rosettacode.org/wiki/Main_Page&lt;/@&gt;<br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 5, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span> <span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/require.html\"><span class=\"kw3\">require</span></a> <span class=\"nu0\">5.014</span><span class=\"sy0\">;</span> <span class=\"co1\"># check HTTP::Tiny part of core</span><br/><span class=\"kw2\">use</span> HTTP<span class=\"sy0\">::</span><span class=\"me2\">Tiny</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a><span class=\"br0\">(</span> HTTP<span class=\"sy0\">::</span><span class=\"me2\">Tiny</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">get</span><span class=\"br0\">(</span> <span class=\"st_h\">'http://rosettacode.org'</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>content<span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 7, "block": "<pre class=\"perl6 highlighted_source\">\u00a0<br/><span class=\"kw2\">use</span> v6<span class=\"sy0\">;</span><br/><span class=\"co1\"># Using LWP::Simple from: git://github.com/cosimo/perl6-lwp-simple.git</span><br/><span class=\"kw2\">use</span> LWP<span class=\"sy0\">::</span><span class=\"me2\">Simple</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">print</span> LWP<span class=\"sy0\">::</span><span class=\"me2\">Simple</span><span class=\"sy0\">.</span><span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Phix", "loc": 9, "block": "<pre class=\"text highlighted_source\">include builtins\\libcurl.e<br/>curl_global_init()<br/>atom curl = curl_easy_init()<br/>curl_easy_setopt(curl, CURLOPT_URL, \"http://rosettacode.org/robots.txt\")<br/>object res = curl_easy_perform_ex(curl)<br/>curl_easy_cleanup(curl)<br/>curl_global_cleanup()<br/>\u00a0<br/>puts(1,res)</pre>"}, {"lang": "PHP", "loc": 3, "block": "<pre class=\"php highlighted_source\">\u00a0<br/><a href=\"http://www.php.net/readfile\"><span class=\"kw3\">readfile</span></a><span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(load \"@lib/http.l\")<br/>\u00a0<br/>(client \"rosettacode.org\" 80 NIL       # Connect to rosettacode<br/>   (out NIL (echo)) )                  # Echo to standard output<br/>\u00a0</pre>"}, {"lang": "Pike", "loc": 3, "block": "<pre class=\"pike highlighted_source\">\u00a0<br/>write<span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span>,Protocols.<span class=\"me1\">HTTP</span>.<span class=\"me1\">get_url_data</span><span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "PowerShell", "loc": 4, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"re0\">$wc</span> <span class=\"sy0\">=</span> <span class=\"kw1\">New-Object</span> Net.WebClient<br/><span class=\"re0\">$wc</span>.DownloadString<span class=\"br0\">(</span><span class=\"st0\">'http://www.rosettacode.org'</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Prolog", "loc": 8, "block": "<pre class=\"prolog highlighted_source\">\u00a0<br/><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span> http<span class=\"sy3\">/</span>http_open <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>http <span class=\"sy1\">:-</span><br/>\thttp_open<span class=\"br0\">(</span><span class=\"st_h\">'http://www.rosettacode.org/'</span><span class=\"sy4\">,</span>In<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tcopy_stream_data<span class=\"br0\">(</span>In<span class=\"sy4\">,</span> user_output<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">close</span></a><span class=\"br0\">(</span>In<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 19, "block": "<pre class=\"purebasic highlighted_source\">\u00a0<br/><span class=\"kw2\">InitNetwork</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>tmpdir$   <span class=\"sy0\">=</span> <span class=\"kw2\">GetTemporaryDirectory</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>filename$ <span class=\"sy0\">=</span> tmpdir$ <span class=\"sy0\">+</span> <span class=\"st0\">\"PB_tempfile\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">200000</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\".html\"</span><br/>\u00a0<br/><span class=\"kw1\">If</span> ReceiveHTTPFile<span class=\"br0\">(</span><span class=\"st0\">\"http://rosettacode.org/wiki/Main_Page\"</span>, filename$<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">ReadFile</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, filename$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Repeat</span><br/>      <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">ReadString</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Until</span> <span class=\"kw2\">Eof</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"co1\">; to prevent console from closing if on windows</span><br/>    <span class=\"kw2\">CloseFile</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw2\">DeleteFile</span><span class=\"br0\">(</span>filename$<span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 4, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">urllib</span>.<span class=\"me1\">request</span><br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw3\">urllib</span>.<span class=\"me1\">request</span>.<span class=\"me1\">urlopen</span><span class=\"br0\">(</span><span class=\"st0\">\"http://rosettacode.org\"</span><span class=\"br0\">)</span>.<span class=\"me1\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "R", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>library(RCurl)<br/>webpage &lt;- getURL(\"http://rosettacode.org\")<br/>\u00a0<br/>#If you are linking to a page that no longer exists and need to follow the redirect, use followlocation=TRUE<br/>webpage &lt;- getURL(\"http://www.rosettacode.org\", .opts=list(followlocation=TRUE))<br/>\u00a0<br/>#If you are behind a proxy server, you will need to use something like:<br/>webpage &lt;- getURL(\"http://rosettacode.org\", <br/>   .opts=list(proxy=\"123.123.123.123\", proxyusername=\"domain\\\\username\", proxypassword=\"mypassword\", proxyport=8080))<br/>#Don't forget that backslashes in your username or password need to be escaped!<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>(require net/url)<br/>(copy-port (get-pure-port (string-&gt;url \"http://www.rosettacode.org\")<br/>                          #:redirections 100)<br/>           (current-output-port))<br/>\u00a0</pre>"}, {"lang": "REALbasic", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>  Dim sock As New HTTPSocket<br/>  Print(sock.Get(\"http://www.rosettacode.org\", 10))  //set the timeout period to 10 seconds.<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 3, "block": "<pre class=\"rebol highlighted_source\">\u00a0<br/><span class=\"kw3\">print</span> <span class=\"kw3\">read</span> http:<span class=\"sy0\">//</span>rosettacode.org<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 5, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* ft=rexx */</span><br/><span class=\"coMULTI\">/* GET2.RX - Display contents of an URL on the terminal. */</span><br/><span class=\"coMULTI\">/* Usage: rexx get.rx http://rosettacode.org             */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> url <span class=\"sy0\">.</span><br/><span class=\"st0\">'curl'</span> url</pre>"}, {"lang": "RLaB", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>// get cvs data from Yahoo for Pfeizer (PFE)<br/>url=\"http://ichart.finance.yahoo.com/table.csv?s=PFE&amp;a=00&amp;b=4&amp;c=1982&amp;d=00&amp;e=10&amp;f=2010&amp;g=d&amp;ignore=.csv\";<br/>\u00a0<br/>opt = &lt;&lt;&gt;&gt;;<br/>// opt.CURLOPT_PROXY     = \"your.proxy.here\";<br/>// opt.CURLOPT_PROXYPORT = YOURPROXYPORT;<br/>// opt.CURLOPT_PROXYTYPE = \"http\";<br/>open(url, opt);<br/>x = readm(url);<br/>close (url);<br/>\u00a0</pre>"}, {"lang": "Ring", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>See download(\"http://rosettacode.org\") <br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 5, "block": "<pre class=\"ruby highlighted_source\">\u00a0<br/><span class=\"kw3\">require</span> <span class=\"st0\">'open-uri'</span><br/>\u00a0<br/><span class=\"kw3\">print</span> <span class=\"kw3\">open</span><span class=\"br0\">(</span><span class=\"st0\">\"http://rosettacode.org\"</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>f<span class=\"sy0\">|</span> f.<span class=\"me1\">read</span><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Run BASIC", "loc": 1, "block": "<pre class=\"text highlighted_source\">print httpget$(\"http://rosettacode.org/wiki/Main_Page\")</pre>"}, {"lang": "Rust", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>[dependencies]<br/>hyper = \"0.6\"<br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 7, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">io</span>.<span class=\"me1\">Source</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> HttpTest <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  System.<span class=\"me1\">setProperty</span><span class=\"br0\">(</span><span class=\"st0\">\"http.agent\"</span>, <span class=\"st0\">\"*\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  Source.<span class=\"me1\">fromURL</span><span class=\"br0\">(</span><span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">)</span>.<span class=\"me1\">getLines</span>.<span class=\"me1\">foreach</span><span class=\"br0\">(</span>println<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 28, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"co1\">; Use the regular expression module to parse the url (included with Guile)</span><br/><span class=\"br0\">(</span>use<span class=\"sy0\">-</span>modules <span class=\"br0\">(</span>ice<span class=\"sy0\">-</span><span class=\"nu0\">9</span> regex<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Set the url and parse the hostname, port, and path into variables</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> url <span class=\"st0\">\"http://www.rosettacode.org/wiki/HTTP\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> r <span class=\"br0\">(</span>make<span class=\"sy0\">-</span>regexp <span class=\"st0\">\"^(http://)?([^:/]+)(:)?(([0-9])+)?(/.*)?\"</span> regexp<span class=\"sy0\">/</span>icase<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> host <span class=\"br0\">(</span>match:<span class=\"kw1\">substring</span> <span class=\"br0\">(</span>regexp<span class=\"sy0\">-</span>exec r url<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> port <span class=\"br0\">(</span>match:<span class=\"kw1\">substring</span> <span class=\"br0\">(</span>regexp<span class=\"sy0\">-</span>exec r url<span class=\"br0\">)</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> path <span class=\"br0\">(</span>match:<span class=\"kw1\">substring</span> <span class=\"br0\">(</span>regexp<span class=\"sy0\">-</span>exec r url<span class=\"br0\">)</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Set port to 80 if it wasn't set above and convert from a string to a number</span><br/><span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">eq?</span> port #f<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">define</span> port <span class=\"st0\">\"80\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> port <span class=\"br0\">(</span>string<span class=\"sy0\">-&gt;</span>number port<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Connect to remote host on specified port</span><br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">s</span> <span class=\"br0\">(</span>socket PF_INET SOCK_STREAM <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>connect <span class=\"kw1\">s</span> AF_INET <span class=\"br0\">(</span><span class=\"kw1\">car</span> <span class=\"br0\">(</span>hostent:addr<span class=\"sy0\">-</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span>gethostbyname host<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> port<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Send a HTTP request for the specified path</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\"GET \"</span> <span class=\"kw1\">s</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">display</span> path <span class=\"kw1\">s</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">display</span> <span class=\"st0\">\" HTTP/1.0<span class=\"es0\">\\r</span><span class=\"es0\">\\n</span><span class=\"es0\">\\r</span><span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">s</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; Display the received HTML</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c <span class=\"br0\">(</span><span class=\"kw1\">read-char</span> <span class=\"kw1\">s</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">read-char</span> <span class=\"kw1\">s</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">eof-object?</span> c<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">display</span> c<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$ include \"seed7_05.s7i\";<br/>  include \"gethttp.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(getHttp(\"www.rosettacode.org\"));<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 13, "block": "<pre class=\"ruby highlighted_source\">func get<span class=\"br0\">(</span>url<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var lwp = <span class=\"br0\">(</span><br/>        try   <span class=\"br0\">{</span> <span class=\"kw3\">require</span><span class=\"br0\">(</span><span class=\"st0\">'LWP::UserAgent'</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>        <span class=\"kw3\">catch</span> <span class=\"br0\">{</span> warn <span class=\"st0\">\"'LWP::UserAgent' is not installed!\"</span>; <span class=\"kw2\">return</span> <span class=\"kw2\">nil</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">)</span><br/>    var ua = lwp.<span class=\"me1\">new</span><span class=\"br0\">(</span>agent <span class=\"sy0\">=&gt;</span> <span class=\"st0\">'Mozilla/5.0'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>var resp = ua.<span class=\"me1\">get</span><span class=\"br0\">(</span>url<span class=\"br0\">)</span>; resp.<span class=\"me1\">is_success</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">return</span> resp.<span class=\"me1\">decoded_content</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">return</span> <span class=\"kw2\">nil</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">print</span> get<span class=\"br0\">(</span><span class=\"st0\">\"http://rosettacode.org\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "SNOBOL4", "loc": 8, "block": "<pre class=\"text highlighted_source\">-include \"tcp.sno\"<br/>\ttcp.open(.conn,'www.rosettacode.org','http')\t:s(cont1)<br/>\tterminal = \"cannot open\"\t:(end)<br/>cont1\tconn = \"GET http://rosettacode.org/wiki/Main_Page HTTP/1.0\" char(10) char(10)<br/>while\toutput = conn\t:s(while)<br/>\ttcp.close(.conn)<br/>end<br/>\u00a0</pre>"}, {"lang": "Smalltalk", "loc": 3, "block": "<pre class=\"smalltalk highlighted_source\">\u00a0<br/><span class=\"re0\">Transcript</span> show: <span class=\"st0\">'http://rosettacode.org'</span> asUrl retrieveContents contentStream.<br/>\u00a0</pre>"}, {"lang": "Swift", "loc": 15, "block": "<pre class=\"text highlighted_source\">import Foundation<br/>\u00a0<br/>let request = NSURLRequest(URL: NSURL(string: \"http://rosettacode.org/\")!)<br/>\u00a0<br/>// Using trailing closure<br/>NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue()) {res, data, err in<br/>\u00a0<br/>    // data is binary<br/>    if (data\u00a0!= nil) {<br/>        let string = NSString(data: data!, encoding: NSUTF8StringEncoding)<br/>        println(string)<br/>    }<br/>}<br/>\u00a0<br/>CFRunLoopRun() // dispatch</pre>"}, {"lang": "Tcl", "loc": 5, "block": "<pre class=\"tcl highlighted_source\">\u00a0<br/><span class=\"kw2\">package</span> require <span class=\"kw2\">http</span><br/><span class=\"kw1\">set</span> request <span class=\"br0\">[</span><span class=\"kw2\">http</span>::<span class=\"me1\">geturl</span> <span class=\"st0\">\"http://www.rosettacode.org\"</span><span class=\"br0\">]</span><br/><span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">http</span>::<span class=\"me1\">data</span> <span class=\"re0\">$request</span><span class=\"br0\">]</span><br/><span class=\"kw2\">http</span>::<span class=\"me1\">cleanup</span> <span class=\"re0\">$request</span></pre>"}, {"lang": "TSE SAL", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\u00a0<br/>DLL \"&lt;urlmon.dll&gt;\"<br/> INTEGER PROC FNUrlGetSourceApiI(<br/>  INTEGER lpunknown,<br/>  STRING urlS\u00a0: CSTRVAL,<br/>  STRING filenameS\u00a0: CSTRVAL,<br/>  INTEGER dword,<br/>  INTEGER tlpbindstatuscallback<br/>)\u00a0: \"URLDownloadToFileA\"<br/>END<br/>\u00a0<br/>// library: url: get: source &lt;description&gt;&lt;/description&gt; &lt;version control&gt;&lt;/version control&gt; &lt;version&gt;1.0.0.0.3&lt;/version&gt; (filenamemacro=geturgso.s) [kn, ri, su, 13-04-2008 05:12:53]<br/>PROC PROCUrlGetSource( STRING urlS, STRING filenameS )<br/> FNUrlGetSourceApiI( 0, urlS, filenameS, 0, 0 )<br/>END<br/>\u00a0<br/>PROC Main()<br/>STRING s1[255] = \"http://www.google.com/index.html\"<br/>STRING s2[255] = \"c:\\temp\\ddd.txt\"<br/>IF ( NOT ( Ask( \"url: get: source: urlS = \", s1, _EDIT_HISTORY_ ) ) AND ( Length( s1 ) &gt; 0 ) ) RETURN() ENDIF<br/>IF ( NOT ( AskFilename( \"url: get: source: filenameS = \", s2, _DEFAULT_, _EDIT_HISTORY_ ) ) AND ( Length( s2 ) &gt; 0 ) ) RETURN() ENDIF<br/> PROCUrlGetSource( s1, s2 )<br/> EditFile( s2 )<br/>END<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "TUSCRIPT", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>SET DATEN = REQUEST (\"http://www.rosettacode.org\")<br/>*{daten}<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 1, "block": "<pre class=\"bash highlighted_source\">curl <span class=\"re5\">-s</span> <span class=\"re5\">-L</span> http:<span class=\"sy0\">//</span>rosettacode.org<span class=\"sy0\">/</span></pre>"}, {"lang": "VBScript", "loc": 19, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/>Const sURL=<span class=\"st0\">\"http://rosettacode.org/\"</span><br/>\u00a0<br/><span class=\"kw4\">Dim</span> oHTTP<br/><span class=\"kw4\">Set</span> oHTTP = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Microsoft.XmlHTTP\"</span>)<br/>\u00a0<br/><span class=\"kw4\">On</span> <span class=\"kw4\">Error</span> <span class=\"kw4\">Resume</span> <span class=\"kw3\">Next</span><br/>oHTTP.<span class=\"kw4\">Open</span> <span class=\"st0\">\"GET\"</span>, sURL, <span class=\"kw5\">False</span><br/>oHTTP.Send <span class=\"st0\">\"\"</span><br/><span class=\"kw3\">If</span> Err.Number = 0 <span class=\"kw3\">Then</span><br/>     WScript.Echo oHTTP.responseText<br/><span class=\"kw3\">Else</span><br/>     Wscript.Echo <span class=\"st0\">\"error \"</span> &amp; Err.Number &amp; <span class=\"st0\">\": \"</span> &amp; Err.Description<br/><span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\u00a0<br/><span class=\"kw4\">Set</span> oHTTP = <span class=\"kw5\">Nothing</span><br/>\u00a0</pre>"}, {"lang": "Visual Basic .NET", "loc": 7, "block": "<pre class=\"vbnet highlighted_source\">\u00a0<br/><span class=\"kw1\">Imports</span> System<span class=\"sy0\">.</span><span class=\"me1\">Net</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> client <span class=\"kw1\">As</span> WebClient <span class=\"sy0\">=</span> <span class=\"kw1\">New</span> WebClient<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Dim</span> content <span class=\"kw1\">As</span> <span class=\"kw2\">String</span> <span class=\"sy0\">=</span> client<span class=\"sy0\">.</span><span class=\"me1\">DownloadString</span><span class=\"br0\">(</span><span class=\"st0\">\"http://www.google.com\"</span><span class=\"br0\">)</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>content<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 14, "block": "<pre class=\"text highlighted_source\">url\u00a0:= ask(0,\"URL: \");<br/>\u00a0<br/>host\u00a0:= url;<br/>dir \u00a0:= \"/\";<br/>port\u00a0:= 80;<br/>if (n\u00a0:= url.find(\"/\"))  { dir  = url[n,*];    host = url[0,n];  }<br/>if (n\u00a0:= host.find(\":\")) { port = host[n+1,*]; host = host[0,n]; }<br/>\u00a0<br/>get\u00a0:= \"GET\u00a0%s HTTP/1.0\\r\\nHost:\u00a0%s:%s\\r\\n\\r\\n\".fmt(dir,host,port.toInt());<br/>println(\"--&gt;\",get);<br/>server\u00a0:= Network.TCPClientSocket.connectTo(host,port);<br/>server.write(get);<br/>data\u00a0:= server.read(True);<br/>println(data.text);</pre>"}, {"lang": "Zsh", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>zmodload zsh/net/tcp<br/>ztcp example.com 80<br/>fd=$REPLY<br/>print -l -u $fd -- 'GET / HTTP/1.1' 'Host: example.com' ''<br/>while read -u $fd -r -e -t 1; do;\u00a0:; done<br/>ztcp -c $fd<br/>\u00a0</pre>"}]}