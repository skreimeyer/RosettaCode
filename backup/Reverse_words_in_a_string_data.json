{"task": "Reverse_words_in_a_string", "blocks": [{"lang": "Ada", "loc": 11, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">package</span> Simple_Parse <span class=\"kw1\">is</span><br/>   <span class=\"co1\">-- a very simplistic parser, useful to split a string into words</span><br/>\u00a0<br/>   <span class=\"kw3\">function</span> Next_Word<span class=\"br0\">(</span>S: String; Point: <span class=\"kw3\">in</span> <span class=\"kw3\">out</span> Positive<span class=\"br0\">)</span> <br/>\t\t     <span class=\"kw1\">return</span> String;<br/>   <span class=\"co1\">-- a \"word\" is a sequence of non-space characters</span><br/>   <span class=\"co1\">-- if S(Point .. S'Last) holds at least one word W</span><br/>   <span class=\"co1\">-- then  Next_Word increments Point by len(W) and returns W. </span><br/>   <span class=\"co1\">-- else  Next_Word sets Point to S'Last+1 and returns \"\"</span><br/>\u00a0<br/><span class=\"kw1\">end</span> Simple_Parse;</pre>"}, {"lang": "Aime", "loc": 23, "block": "<pre class=\"text highlighted_source\">integer j;<br/>list l, x;<br/>text s, t;<br/>\u00a0<br/>l = list(\"---------- Ice and Fire ------------\",<br/>         \"\",<br/>         \"fire, in end will world the say Some\",<br/>         \"ice. in say Some\",<br/>         \"desire of tasted I've what From\",<br/>         \"fire. favor who those with hold I\",<br/>         \"\",<br/>         \"... elided paragraph last ...\",<br/>         \"\",<br/>         \"Frost Robert -----------------------\");<br/>\u00a0<br/>for (, t in l) {<br/>    file().b_affix(t).list(x, 0);<br/>    for (j, s in x.reverse) {<br/>        o_space(sign(j));<br/>        o_text(s);<br/>    }<br/>    o_newline();<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 44, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># returns original phrase with the order of the words reversed #</span><br/><span class=\"coMULTI\"># a word is a sequence of non-blank characters                 #</span><br/><span class=\"kw4\">PROC</span> reverse word order <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> original phrase <span class=\"br0\">)</span><span class=\"kw3\">STRING</span><span class=\"sy1\">:</span><br/>     <span class=\"kw2\">BEGIN</span><br/>        <span class=\"kw3\">STRING</span> words reversed <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/>        <span class=\"kw3\">STRING</span> separator      <span class=\"sy1\">:=</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">;</span><br/>        <span class=\"kw3\">INT</span>    start pos      <span class=\"sy1\">:=</span> <span class=\"kw8\">LWB</span> original phrase<span class=\"sy1\">;</span><br/>        <span class=\"kw2\">WHILE</span><br/>            <span class=\"coMULTI\"># skip leading spaces #</span><br/>            <span class=\"kw2\">WHILE</span> <span class=\"kw2\">IF</span> start pos <span class=\"sy1\">&lt;=</span> <span class=\"kw8\">UPB</span> original phrase<br/>                  <span class=\"kw2\">THEN</span> original phrase<span class=\"br0\">[</span> start pos <span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><br/>                  <span class=\"kw2\">ELSE</span> <span class=\"kw7\">FALSE</span><br/>                  <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">DO</span> start pos <span class=\"sy1\">+:=</span> 1<br/>            <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            start pos <span class=\"sy1\">&lt;=</span> <span class=\"kw8\">UPB</span> original phrase<br/>        <span class=\"kw2\">DO</span><br/>            <span class=\"coMULTI\"># have another word, find it #</span><br/>            <span class=\"kw3\">INT</span> end pos <span class=\"sy1\">:=</span> start pos<span class=\"sy1\">;</span><br/>            <span class=\"kw2\">WHILE</span> <span class=\"kw2\">IF</span> end pos <span class=\"sy1\">&lt;=</span> <span class=\"kw8\">UPB</span> original phrase<br/>                  <span class=\"kw2\">THEN</span> original phrase<span class=\"br0\">[</span> end pos <span class=\"br0\">]</span> <span class=\"sy1\">/=</span> <span class=\"st0\">\" \"</span><br/>                  <span class=\"kw2\">ELSE</span> <span class=\"kw7\">FALSE</span><br/>                  <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">DO</span> end pos <span class=\"sy1\">+:=</span> 1<br/>            <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            <span class=\"br0\">(</span> original phrase<span class=\"br0\">[</span> start pos <span class=\"sy1\">:</span> end pos <span class=\"sy1\">-</span> 1 <span class=\"br0\">]</span> <span class=\"sy1\">+</span> separator <span class=\"br0\">)</span> <span class=\"sy1\">+=:</span> words reversed<span class=\"sy1\">;</span><br/>            separator <span class=\"sy1\">:=</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">;</span><br/>            start pos <span class=\"sy1\">:=</span> end pos <span class=\"sy1\">+</span> 1<br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>        words reversed<br/>     <span class=\"kw2\">END</span> <span class=\"coMULTI\"># reverse word order #</span> <span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># reverse the words in the lines as per the task #</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"--------- Ice and Fire ------------ \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"                                    \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"fire, in end will world the say Some\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"ice. in say Some                    \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"desire of tasted I've what From     \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"fire. favor who those with hold I   \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"                                    \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"... elided paragraph last ...       \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"                                    \"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> reverse word order <span class=\"br0\">(</span> <span class=\"st0\">\"Frost Robert -----------------------\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "AppleScript", "loc": 92, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>\u00a0<br/>    unlines<span class=\"br0\">(</span>map<span class=\"br0\">(</span>reverseWords, |lines|<span class=\"br0\">(</span><span class=\"st0\">\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- GENERIC FUNCTIONS ---------------------------------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- reverseWords\u00a0:: String -&gt; String</span><br/><span class=\"kw3\">on</span> reverseWords<span class=\"br0\">(</span>str<span class=\"br0\">)</span><br/>    unwords<span class=\"br0\">(</span>|reverse|<span class=\"br0\">(</span>|words|<span class=\"br0\">(</span>str<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> reverseWords<br/>\u00a0<br/><span class=\"co1\">-- |reverse|\u00a0:: [a] -&gt; [a]</span><br/><span class=\"kw3\">on</span> |reverse|<span class=\"br0\">(</span>xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> xs <span class=\"kw3\">is</span> <span class=\"kw1\">text</span> <span class=\"kw3\">then</span><br/>        <span class=\"br0\">(</span>reverse <span class=\"kw3\">of</span> characters <span class=\"kw3\">of</span> xs<span class=\"br0\">)</span> <span class=\"kw2\">as</span> <span class=\"kw1\">text</span><br/>    <span class=\"kw3\">else</span><br/>        reverse <span class=\"kw3\">of</span> xs<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> |reverse|<br/>\u00a0<br/><span class=\"co1\">-- |lines|\u00a0:: Text -&gt; [Text]</span><br/><span class=\"kw3\">on</span> |lines|<span class=\"br0\">(</span>str<span class=\"br0\">)</span><br/>    splitOn<span class=\"br0\">(</span>linefeed, str<span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> |lines|<br/>\u00a0<br/><span class=\"co1\">-- |words|\u00a0:: Text -&gt; [Text]</span><br/><span class=\"kw3\">on</span> |words|<span class=\"br0\">(</span>str<span class=\"br0\">)</span><br/>    splitOn<span class=\"br0\">(</span><span class=\"kw1\">space</span>, str<span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> |words|<br/>\u00a0<br/><span class=\"co1\">-- ulines\u00a0:: [Text] -&gt; Text</span><br/><span class=\"kw3\">on</span> unlines<span class=\"br0\">(</span>lstLines<span class=\"br0\">)</span><br/>    intercalate<span class=\"br0\">(</span>linefeed, lstLines<span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> unlines<br/>\u00a0<br/><span class=\"co1\">-- unwords\u00a0:: [Text] -&gt; Text</span><br/><span class=\"kw3\">on</span> unwords<span class=\"br0\">(</span>lstWords<span class=\"br0\">)</span><br/>    intercalate<span class=\"br0\">(</span><span class=\"kw1\">space</span>, lstWords<span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> unwords<br/>\u00a0<br/><span class=\"co1\">-- splitOn\u00a0:: Text -&gt; Text -&gt; [Text]</span><br/><span class=\"kw3\">on</span> splitOn<span class=\"br0\">(</span>strDelim, strMain<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>dlm, <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span>, strDelim<span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> lstParts <span class=\"kw3\">to</span> <span class=\"kw1\">text</span> <span class=\"kw1\">items</span> <span class=\"kw3\">of</span> strMain<br/>    <span class=\"kw3\">set</span> <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> dlm<br/>    lstParts<br/><span class=\"kw3\">end</span> splitOn<br/>\u00a0<br/><span class=\"co1\">-- interCalate\u00a0:: Text -&gt; [Text] -&gt; Text</span><br/><span class=\"kw3\">on</span> intercalate<span class=\"br0\">(</span>strText, lstText<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>dlm, <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span><span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span>, strText<span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> strJoined <span class=\"kw3\">to</span> lstText <span class=\"kw2\">as</span> <span class=\"kw1\">text</span><br/>    <span class=\"kw3\">set</span> <span class=\"kw3\">my</span> <span class=\"kw1\">text</span> <span class=\"kw1\">item</span> <span class=\"kw1\">delimiters</span> <span class=\"kw3\">to</span> dlm<br/>    strJoined<br/><span class=\"kw3\">end</span> intercalate<br/>\u00a0<br/><span class=\"co1\">-- map\u00a0:: (a -&gt; b) -&gt; [a] -&gt; [b]</span><br/><span class=\"kw3\">on</span> map<span class=\"br0\">(</span>f, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>        <span class=\"kw3\">set</span> lng <span class=\"kw3\">to</span> length <span class=\"kw3\">of</span> xs<br/>        <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>        <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> lng<br/>            <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> lambda<span class=\"br0\">(</span><span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> xs, i, xs<span class=\"br0\">)</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">return</span> lst<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/><span class=\"kw3\">end</span> map<br/>\u00a0<br/><span class=\"co1\">-- Lift 2nd class handler function into 1st class script wrapper</span><br/><span class=\"co1\">-- mReturn\u00a0:: Handler -&gt; Script</span><br/><span class=\"kw3\">on</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> f <span class=\"kw3\">is</span> <span class=\"kw3\">script</span> <span class=\"kw3\">then</span><br/>        f<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span><br/>            <span class=\"kw3\">property</span> lambda\u00a0: f<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> mReturn<br/>\u00a0</pre>"}, {"lang": "Applesoft BASIC", "loc": 27, "block": "<pre class=\"text highlighted_source\">100 DATA\"---------- ICE AND FIRE ------------\"<br/>110 DATA\"                                    \"<br/>120 DATA\"FIRE, IN END WILL WORLD THE SAY SOME\"<br/>130 DATA\"ICE. IN SAY SOME                    \"<br/>140 DATA\"DESIRE OF TASTED I'VE WHAT FROM     \"<br/>150 DATA\"FIRE. FAVOR WHO THOSE WITH HOLD I   \"<br/>160 DATA\"                                    \"<br/>170 DATA\"... ELIDED PARAGRAPH LAST ...       \"<br/>180 DATA\"                                    \"<br/>190 DATA\"FROST ROBERT -----------------------\"<br/>\u00a0<br/>200 FOR L = 1 TO 10<br/>210     READ T$<br/>220     I = LEN(T$)<br/>240     IF I THEN GOSUB 300\u00a0: PRINT W$;\u00a0: IF I THEN PRINT \" \";\u00a0: GOTO 240<br/>250     PRINT<br/>260 NEXT L<br/>270 END<br/>\u00a0<br/>300 W$ = \"\"<br/>310 FOR I = I TO 1 STEP -1<br/>320     IF MID$(T$, I, 1) = \" \" THEN NEXT I\u00a0: RETURN<br/>330 FOR I = I TO 1 STEP -1<br/>340     C$ = MID$(T$, I, 1)<br/>350     IF C$ &lt;&gt; \" \" THEN  W$ = C$ + W$\u00a0: NEXT I<br/>360 RETURN<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 21, "block": "<pre class=\"autohotkey highlighted_source\">Data <span class=\"sy0\">:=</span> <span class=\"st0\">\"<br/>(Join`r`n<br/>---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert ----------------------- <br/>)\"</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Parse<span class=\"sy0\">,</span> Data<span class=\"sy0\">,</span> `n<span class=\"sy0\">,</span> `r<br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Parse<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a><span class=\"sy0\">,</span>\u00a0% <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Space\"><span class=\"kw2\">A_Space</span></a><br/>\t\tLine <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"st0\">\" \"</span> Line<br/>\tOutput <span class=\"sy0\">.=</span> Line <span class=\"st0\">\"`n\"</span><span class=\"sy0\">,</span> Line <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span>\u00a0% RTrim<span class=\"br0\">(</span>Output<span class=\"sy0\">,</span> <span class=\"st0\">\"`n\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "AWK", "loc": 24, "block": "<pre class=\"awk highlighted_source\">\u00a0<br/><span class=\"co1\"># syntax: GAWK -f REVERSE_WORDS_IN_A_STRING.AWK</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"fire, in end will world the say Some\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"ice. in say Some\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"desire of tasted I've what From\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"fire. favor who those with hold I\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"... elided paragraph last ...\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"\"</span><br/>    text<span class=\"br0\">[</span><span class=\"sy3\">++</span>i<span class=\"br0\">]</span> = <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>    leng = i<br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>; i<span class=\"sy2\">&lt;=</span>leng; i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      n = <span class=\"kw4\">split</span><span class=\"br0\">(</span>text<span class=\"br0\">[</span>i<span class=\"br0\">]</span>,arr,<span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j=n; j<span class=\"sy2\">&gt;</span><span class=\"nu0\">0</span>; j<span class=\"sy3\">--</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s \"</span>,arr<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw5\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    exit<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "BaCon", "loc": 12, "block": "<pre class=\"qbasic highlighted_source\">\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"ice. in say Some                    \"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"desire of tasted I've what From     \"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"fire. favor who those with hold I   \"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"... elided paragraph last ...       \"</span><span class=\"br0\">)</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> REV$<span class=\"br0\">(</span><span class=\"st0\">\"Frost Robert -----------------------\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Batch File", "loc": 35, "block": "<pre class=\"dos highlighted_source\"><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off<br/><span class=\"co2\"><br/>::The Main Thing...</span><br/>cls<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"---------- Ice and Fire ------------\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span><br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"fire, <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> end will world the say Some\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"ice. <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> say Some\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"desire of tasted I've what From\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"fire. favor who those with hold I\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span><br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"... elided paragraph last ...\"<br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span><br/><a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">reverse</span> \"Frost Robert -----------------------\" <br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<br/>pause<span class=\"sy0\">&gt;</span><a href=\"http://www.ss64.com/nt/nul.html\"><span class=\"kw4\">nul</span></a><br/><a href=\"http://www.ss64.com/nt/exit.html\"><span class=\"kw1\">exit</span></a><br/><span class=\"co2\">::/The Main Thing...</span><br/><span class=\"co2\"><br/>::The Function...</span><br/>:<span class=\"re0\">reverse</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> reversed=<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> word=<span class=\"sy0\">&amp;</span><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> str=<span class=\"sy0\">%</span><span class=\"re3\">1</span><br/>:<span class=\"re0\">process</span><br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /f \"tokens=1,*\" <span class=\"sy0\">%%</span><span class=\"re3\">A</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(%</span><span class=\"re3\">str</span><span class=\"sy0\">%)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <span class=\"sy0\">(</span><br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> str=<span class=\"sy0\">%%</span><span class=\"re3\">B</span><br/>\t<a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> word=<span class=\"sy0\">%%</span><span class=\"re3\">A</span><br/><span class=\"sy0\">)</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> reversed=<span class=\"sy0\">%</span><span class=\"re3\">word</span><span class=\"sy0\">%</span> <span class=\"sy0\">%</span><span class=\"re3\">reversed</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> str=\"<span class=\"sy0\">%</span><span class=\"re3\">str</span><span class=\"sy0\">%</span>\"<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <a href=\"http://www.ss64.com/nt/not.html\"><span class=\"kw2\">not</span></a> <span class=\"sy0\">%</span><span class=\"re3\">str</span><span class=\"sy0\">%</span>==\"\" <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a> process<br/>\u00a0<br/><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a>.<span class=\"sy0\">%</span><span class=\"re3\">reversed</span><span class=\"sy0\">%</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">EOF</span><br/><span class=\"co2\">::/The Function...</span></pre>"}, {"lang": "BBC BASIC", "loc": 16, "block": "<pre class=\"text highlighted_source\">      PRINT FNreverse(\"---------- Ice and Fire ------------\")\\<br/>      \\    'FNreverse(\"\")\\<br/>      \\    'FNreverse(\"fire, in end will world the say Some\")\\<br/>      \\    'FNreverse(\"ice. in say Some\")\\<br/>      \\    'FNreverse(\"desire of tasted I've what From\")\\<br/>      \\    'FNreverse(\"fire. favor who those with hold I\")\\<br/>      \\    'FNreverse(\"\")\\<br/>      \\    'FNreverse(\"... elided paragraph last ...\")\\<br/>      \\    'FNreverse(\"\")\\<br/>      \\    'FNreverse(\"Frost Robert -----------------------\")<br/>      END<br/>\u00a0<br/>      DEF FNreverse(s$)<br/>      LOCAL sp%<br/>      sp%=INSTR(s$,\" \")<br/>      IF sp% THEN =FNreverse(MID$(s$,sp%+1))+\" \"+LEFT$(s$,sp%-1) ELSE =s$</pre>"}, {"lang": "Bracmat", "loc": 37, "block": "<pre class=\"text highlighted_source\">(\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some                    <br/>desire of tasted I've what From     <br/>fire. favor who those with hold I   <br/>\u00a0<br/>... elided paragraph last ...       <br/>\u00a0<br/>Frost Robert -----------------------\"<br/> \u00a0:\u00a0?text<br/>&amp; ( reverse<br/>  =   token tokens reversed<br/>    .  \u00a0:?tokens<br/>      &amp;   whl<br/>        ' ( @(\u00a0!arg<br/>            \u00a0:\u00a0?token (\" \"|\\t|\\r)\u00a0?arg<br/>             )<br/>          &amp;\u00a0!tokens\u00a0!token:?tokens<br/>          )<br/>      &amp;\u00a0!tokens\u00a0!arg:?tokens<br/>      &amp;\u00a0:?reversed<br/>      &amp;   whl<br/>        ' (\u00a0!tokens:%?token\u00a0%?tokens<br/>          &amp; \" \"\u00a0!token\u00a0!reversed:?reversed<br/>          )<br/>      &amp;\u00a0!tokens\u00a0!reversed:?reversed<br/>      &amp; str$!reversed<br/>  )<br/>&amp;\u00a0:?output<br/>&amp;   whl<br/>  ' ( @(!text:?line \\n\u00a0?text)<br/>    &amp;\u00a0!output reverse$!line \\n:?output<br/>    )<br/>&amp;\u00a0!output reverse$!text:?output<br/>&amp; out$str$!output<br/>);</pre>"}, {"lang": "Burlesque", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>blsq ) \"It is not raining\"wd&lt;-wd<br/>\"raining not is It\"<br/>blsq ) \"ice. in say some\"wd&lt;-wd<br/>\"some say in ice.\"<br/>\u00a0</pre>"}, {"lang": "C", "loc": 35, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;ctype.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> rev_print<span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> n<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;</span> <span class=\"sy0\">*</span>s <span class=\"sy0\">&amp;&amp;</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/isspace.html\"><span class=\"kw3\">isspace</span></a><span class=\"br0\">(</span><span class=\"sy0\">*</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span> s<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>s<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>e<span class=\"sy0\">;</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span>e <span class=\"sy0\">=</span> s<span class=\"sy0\">;</span> <span class=\"sy0\">*</span>e <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/isspace.html\"><span class=\"kw3\">isspace</span></a><span class=\"br0\">(</span><span class=\"sy0\">*</span>e<span class=\"br0\">)</span><span class=\"sy0\">;</span> e<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                rev_print<span class=\"br0\">(</span>e<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%.*s%s\"</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>e <span class=\"sy0\">-</span> s<span class=\"br0\">)</span><span class=\"sy0\">,</span> s<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> n<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es1\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>        <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>s<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>                <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"                                    \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"ice. in say Some                    \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"desire of tasted I've what From     \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"fire. favor who those with hold I   \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"                                    \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"... elided paragraph last ...       \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"                                    \"</span><span class=\"sy0\">,</span><br/>                <span class=\"st0\">\"Frost Robert -----------------------\"</span><span class=\"sy0\">,</span><br/>                <span class=\"nu0\">0</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> rev_print<span class=\"br0\">(</span>s<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 62, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;algorithm&gt;</span><br/><span class=\"co2\">#include &lt;functional&gt;</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/><span class=\"co2\">#include &lt;vector&gt;</span><br/>\u00a0<br/><span class=\"co1\">//code for a C++11 compliant compiler</span><br/><span class=\"kw2\">template</span> <span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> BidirectionalIterator, <span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/><span class=\"kw4\">void</span> block_reverse_cpp11<span class=\"br0\">(</span>BidirectionalIterator first, BidirectionalIterator last, T <span class=\"kw4\">const</span><span class=\"sy3\">&amp;</span> separator<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">reverse</span><span class=\"br0\">(</span>first, last<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   <span class=\"kw4\">auto</span> block_last <span class=\"sy1\">=</span> first<span class=\"sy4\">;</span><br/>   <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      <span class=\"kw2\">using</span> std<span class=\"sy4\">::</span><span class=\"me2\">placeholders</span><span class=\"sy4\">::</span>_1<span class=\"sy4\">;</span><br/>      <span class=\"kw4\">auto</span> block_first <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">find_if_not</span><span class=\"br0\">(</span>block_last, last, <br/>         std<span class=\"sy4\">::</span><span class=\"me2\">bind</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">equal_to</span><span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span>,_1, separator<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      block_last <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">find</span><span class=\"br0\">(</span>block_first, last, separator<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      std<span class=\"sy4\">::</span><span class=\"me2\">reverse</span><span class=\"br0\">(</span>block_first, block_last<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span>block_last <span class=\"sy3\">!</span><span class=\"sy1\">=</span> last<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">//code for a C++03 compliant compiler</span><br/><span class=\"kw2\">template</span> <span class=\"sy1\">&lt;</span><span class=\"kw2\">class</span> BidirectionalIterator, <span class=\"kw2\">class</span> T<span class=\"sy1\">&gt;</span><br/><span class=\"kw4\">void</span> block_reverse_cpp03<span class=\"br0\">(</span>BidirectionalIterator first, BidirectionalIterator last, T <span class=\"kw4\">const</span><span class=\"sy3\">&amp;</span> separator<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">reverse</span><span class=\"br0\">(</span>first, last<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   BidirectionalIterator block_last <span class=\"sy1\">=</span> first<span class=\"sy4\">;</span><br/>   <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>      BidirectionalIterator block_first <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">find_if</span><span class=\"br0\">(</span>block_last, last, <br/>         std<span class=\"sy4\">::</span><span class=\"me2\">bind2nd</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">not_equal_to</span><span class=\"sy1\">&lt;</span>T<span class=\"sy1\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, separator<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      block_last <span class=\"sy1\">=</span> std<span class=\"sy4\">::</span><span class=\"me2\">find</span><span class=\"br0\">(</span>block_first, last, separator<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      std<span class=\"sy4\">::</span><span class=\"me2\">reverse</span><span class=\"br0\">(</span>block_first, block_last<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span>block_last <span class=\"sy3\">!</span><span class=\"sy1\">=</span> last<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>   std<span class=\"sy4\">::</span><span class=\"me2\">string</span> str1<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <br/>    <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"---------- Ice and Fire ------------\"</span>,<br/>        <span class=\"st0\">\"\"</span>,<br/>        <span class=\"st0\">\"fire, in end will world the say Some\"</span>,<br/>        <span class=\"st0\">\"ice. in say Some\"</span>,<br/>        <span class=\"st0\">\"desire of tasted I've what From\"</span>,<br/>        <span class=\"st0\">\"fire. favor who those with hold I\"</span>,<br/>        <span class=\"st0\">\"\"</span>,<br/>        <span class=\"st0\">\"... elided paragraph last ...\"</span>,<br/>        <span class=\"st0\">\"\"</span>,<br/>        <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>    <span class=\"br0\">}</span><span class=\"sy4\">;</span><br/>\u00a0<br/>   std<span class=\"sy4\">::</span><span class=\"me2\">for_each</span><span class=\"br0\">(</span>begin<span class=\"br0\">(</span>str1<span class=\"br0\">)</span>, end<span class=\"br0\">(</span>str1<span class=\"br0\">)</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy3\">&amp;</span> s<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      block_reverse_cpp11<span class=\"br0\">(</span>begin<span class=\"br0\">(</span>s<span class=\"br0\">)</span>, end<span class=\"br0\">(</span>s<span class=\"br0\">)</span>, <span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> s <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>   std<span class=\"sy4\">::</span><span class=\"me2\">for_each</span><span class=\"br0\">(</span>begin<span class=\"br0\">(</span>str1<span class=\"br0\">)</span>, end<span class=\"br0\">(</span>str1<span class=\"br0\">)</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span><span class=\"sy3\">&amp;</span> s<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      block_reverse_cpp03<span class=\"br0\">(</span>begin<span class=\"br0\">(</span>s<span class=\"br0\">)</span>, end<span class=\"br0\">(</span>s<span class=\"br0\">)</span>, <span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> s <span class=\"sy1\">&lt;&lt;</span> std<span class=\"sy4\">::</span><span class=\"me2\">endl</span><span class=\"sy4\">;</span><br/>   <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>   <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 27, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> ReverseWordsInString<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">string</span> text <span class=\"sy0\">=</span> <span class=\"st_h\">@\"<br/>            ---------- Ice and Fire ------------<br/>\u00a0<br/>            fire, in end will world the say Some<br/>            ice. in say Some<br/>            desire of tasted I've what From<br/>            fire. favor who those with hold I<br/>\u00a0<br/>            ... elided paragraph last ...<br/>\u00a0<br/>            Frost Robert -----------------------<br/>            \"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">string</span> line <span class=\"kw1\">in</span> text<span class=\"sy0\">.</span><span class=\"me1\">Split</span><span class=\"br0\">(</span>Environment<span class=\"sy0\">.</span><span class=\"me1\">NewLine</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"co1\">//Splits on any whitespace, not just spaces</span><br/>            <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> words <span class=\"sy0\">=</span> line<span class=\"sy0\">.</span><span class=\"me1\">Split</span><span class=\"br0\">(</span><span class=\"kw1\">default</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span>, StringSplitOptions<span class=\"sy0\">.</span><span class=\"me1\">RemoveEmptyEntries</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Array<span class=\"sy0\">.</span><span class=\"me1\">Reverse</span><span class=\"br0\">(</span>words<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            WriteLine<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"kw1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, words<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 16, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">def</span> poem <br/>  <span class=\"st0\">\"---------- Ice and Fire ------------<br/>\u00a0<br/>   fire, in end will world the say Some<br/>   ice. in say Some <br/>   desire of tasted I've what From<br/>   fire. favor who those with hold I<br/>\u00a0<br/>   ... elided paragraph last ...<br/>\u00a0<br/>   Frost Robert -----------------------\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">dorun</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">map</span> println <span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span><span class=\"kw1\">apply</span> <span class=\"kw1\">str</span> <span class=\"br0\">(</span><span class=\"kw1\">interpose</span> <span class=\"st0\">\" \"</span> <span class=\"br0\">(</span><span class=\"kw1\">reverse</span> <span class=\"br0\">(</span><span class=\"kw1\">re-seq</span> #<span class=\"st0\">\"[^<span class=\"es0\">\\s</span>]+\"</span> <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>clojure<span class=\"sy0\">.</span>string<span class=\"sy0\">/</span>split poem #<span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 64, "block": "<pre class=\"cobol highlighted_source\">\u00a0<br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> rev-word<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> text-<span class=\"kw3\">block</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"                                    \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"ice. in say Some                    \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"desire of tasted I've what From     \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"fire. favor who those with hold I   \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"                                    \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"... elided paragraph last ...       \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"                                    \"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"Frost Robert -----------------------\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> <span class=\"kw3\">redefines</span> text-<span class=\"kw3\">block</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">occurs</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><br/>         <span class=\"nu0\">3</span> text-<span class=\"kw3\">line</span> <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> text-word<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> wk-len <span class=\"kw3\">binary</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> wk-word <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> word-stack<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">occurs</span> <span class=\"nu0\">10</span><span class=\"sy0\">.</span><br/>         <span class=\"nu0\">3</span> word-entry<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">4</span> word-len <span class=\"kw3\">binary</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">4</span> word <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">36</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> <span class=\"kw3\">binary</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> i <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> pos <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> word-stack-ptr <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span><br/>           <span class=\"kw2\">until</span> i &gt; <span class=\"nu0\">10</span><br/>               <span class=\"kw2\">perform</span> push-<span class=\"kw3\">words</span><br/>               <span class=\"kw2\">perform</span> pop-<span class=\"kw3\">words</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"kw3\">stop</span> <span class=\"kw3\">run</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       push-<span class=\"kw3\">words</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">move</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> pos<br/>           <span class=\"kw2\">move</span> <span class=\"nu0\">0</span> <span class=\"kw2\">to</span> word-stack-ptr<br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">until</span> pos &gt; <span class=\"nu0\">36</span><br/>               <span class=\"kw3\">unstring</span> text-<span class=\"kw3\">line</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw3\">delimited</span> <span class=\"kw3\">by</span> <span class=\"kw3\">all</span> <span class=\"kw3\">space</span><br/>               <span class=\"kw2\">into</span> wk-word <span class=\"kw3\">count</span> <span class=\"kw3\">in</span> wk-len<br/>               <span class=\"kw3\">pointer</span> pos<br/>               <span class=\"kw3\">end-unstring</span><br/>               <span class=\"kw2\">add</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> word-stack-ptr<br/>               <span class=\"kw2\">move</span> text-word <span class=\"kw2\">to</span> word-entry <span class=\"br0\">(</span>word-stack-ptr<span class=\"br0\">)</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       pop-<span class=\"kw3\">words</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> word-stack-ptr <span class=\"kw3\">from</span> word-stack-ptr<br/>               <span class=\"kw3\">by</span> -<span class=\"nu0\">1</span><br/>           <span class=\"kw2\">until</span> word-stack-ptr &lt; <span class=\"nu0\">1</span><br/>               <span class=\"kw2\">move</span> word-entry <span class=\"br0\">(</span>word-stack-ptr<span class=\"br0\">)</span> <span class=\"kw2\">to</span> text-word<br/>               <span class=\"kw2\">display</span> wk-word <span class=\"br0\">(</span><span class=\"nu0\">1</span>:wk-len<span class=\"br0\">)</span> <span class=\"kw3\">space</span> <span class=\"kw3\">with</span> <span class=\"kw3\">no</span> <span class=\"kw3\">advancing</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"kw2\">display</span> <span class=\"kw3\">space</span><br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> rev-word<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "CoffeeScript", "loc": 12, "block": "<pre class=\"coffeescript highlighted_source\">strReversed = <span class=\"st0\">'---------- Ice and Fire ------------<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span><br/>fire, in end will world the say Some<span class=\"es0\">\\n</span><br/>ice. in say Some<span class=\"es0\">\\n</span><br/>desire of tasted I<span class=\"es0\">\\'</span>ve what From<span class=\"es0\">\\n</span><br/>fire. favor who those with hold I<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span><br/>... elided paragraph last ...<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span><br/>Frost Robert -----------------------'</span><br/>\u00a0<br/>reverseString = <span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  s.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> l.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"sy0\">/</span>\\s<span class=\"sy0\">/</span><span class=\"br0\">)</span>.<span class=\"me1\">reverse</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><br/>\u00a0<br/>console.<span class=\"me1\">log</span> reverseString<span class=\"br0\">(</span>strReversed<span class=\"br0\">)</span></pre>"}, {"lang": "Common Lisp", "loc": 29, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> split-and-<span class=\"kw1\">reverse</span> <span class=\"br0\">(</span>str<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>labels <br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span>iter <span class=\"br0\">(</span>s lst<span class=\"br0\">)</span><br/>       <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>s2 <span class=\"br0\">(</span>string-trim '<span class=\"br0\">(</span>#\\space<span class=\"br0\">)</span> s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span><span class=\"kw1\">if</span> s2<br/>             <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>word-end <span class=\"br0\">(</span>position #\\space s2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> word-end <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ word-end<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> s2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span>iter <span class=\"br0\">(</span>subseq s2 <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ word-end<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                         <span class=\"br0\">(</span><span class=\"kw1\">cons</span> <span class=\"br0\">(</span>subseq s2 <span class=\"nu0\">0</span> word-end<span class=\"br0\">)</span> lst<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                   <span class=\"br0\">(</span><span class=\"kw1\">cons</span> s2 lst<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>               lst<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>iter str <span class=\"kw1\">NIL</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defparameter *poem* <br/>  <span class=\"st0\">\"---------- Ice and Fire ------------<br/>\u00a0<br/>   fire, in end will world the say Some<br/>   ice. in say Some <br/>   desire of tasted I've what From<br/>   fire. favor who those with hold I<br/>\u00a0<br/>   ... elided paragraph last ...<br/>\u00a0<br/>   Frost Robert -----------------------\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>with-input-from-string <span class=\"br0\">(</span>s *poem*<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for line <span class=\"sy0\">=</span> <span class=\"br0\">(</span>read-line s <span class=\"kw1\">NIL</span><span class=\"br0\">)</span><br/>        while line<br/>        <span class=\"kw1\">do</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"~{~a~#[~:; ~]~}~%\"</span> <span class=\"br0\">(</span>split-and-<span class=\"kw1\">reverse</span> line<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 18, "block": "<pre class=\"d highlighted_source\"><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">range</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">immutable</span> text <span class=\"sy0\">=</span><br/><span class=\"st0\">\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"%(%-(%s\u00a0%)<span class=\"es1\">\\n</span>%)\"</span><span class=\"sy0\">,</span><br/>             text.<span class=\"me1\">splitLines</span>.<span class=\"me1\">map</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>r <span class=\"sy0\">=&gt;</span> r.<span class=\"me1\">split</span>.<span class=\"me1\">retro</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 18, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"kw1\">S</span> #<span class=\"sy0\">&lt;&lt;</span><br/><span class=\"sy0\">----------</span> Ice <span class=\"kw1\">and</span> Fire <span class=\"sy0\">------------</span><br/>\u00a0<br/>fire, in end will world the say Some <br/>ice. in say Some             <br/>desire of tasted I've what From <br/>fire. favor who those with hold I <br/>\u00a0<br/>... elided paragraph last ... <br/>\u00a0<br/>Frost Robert <span class=\"sy0\">-----------------------</span><br/><span class=\"sy0\">&gt;&gt;</span>#<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">for-each</span> writeln <br/>    <span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">list</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>line <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>split <span class=\"kw1\">S</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>        <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>join <span class=\"br0\">(</span><span class=\"kw1\">reverse</span> <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>split line <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Elena", "loc": 25, "block": "<pre class=\"text highlighted_source\">import extensions.<br/>import system'routines.<br/>\u00a0<br/>program =<br/>[<br/>    var text\u00a0:= (\"---------- Ice and Fire ------------\",<br/>                  \"\",<br/>                  \"fire, in end will world the say Some\",<br/>                  \"ice. in say Some\",<br/>                  \"desire of tasted I've what From\",<br/>                  \"fire. favor who those with hold I\",<br/>                  \"\",<br/>                  \"... elided paragraph last ...\",<br/>                  \"\",<br/>                  \"Frost Robert -----------------------\").<br/>\u00a0<br/>    text forEach(:line)<br/>    [ <br/>        line split by:\" \"; sequenceReverse; forEach(:word)<br/>        [<br/>            console print(word,\" \")<br/>        ].<br/>        console writeLine.<br/>    ].<br/>].</pre>"}, {"lang": "Elixir", "loc": 10, "block": "<pre class=\"text highlighted_source\">defmodule RC do<br/>  def reverse_words(txt) do<br/>    txt |&gt; String.split(\"\\n\")       # split lines<br/>        |&gt; Enum.map(&amp;(              # in each line<br/>             &amp;1 |&gt; String.split       # split words<br/>                |&gt; Enum.reverse       # reverse words<br/>                |&gt; Enum.join(\" \")))   # rejoin words<br/>        |&gt; Enum.join(\"\\n\")          # rejoin lines<br/>  end <br/>end</pre>"}, {"lang": "Elm", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>reversedPoem =<br/>  String.trim \"\"\"<br/>    ---------- Ice and Fire ------------<br/>\u00a0<br/>    fire, in end will world the say Some<br/>    ice. in say Some<br/>    desire of tasted I've what From<br/>    fire. favor who those with hold I<br/>\u00a0<br/>    ... elided paragraph last ...<br/>\u00a0<br/>    Frost Robert -----------------------<br/>    \"\"\"<br/>\u00a0<br/>reverseWords string =<br/>  string |&gt; String.words |&gt; List.reverse |&gt; String.join \" \"<br/>\u00a0<br/>reverseLinesWords string =<br/>  string |&gt; String.lines |&gt; List.map reverseWords |&gt; String.join \"\\n\"<br/>\u00a0<br/>poem = <br/>  reverseLinesWords reversedPoem<br/>\u00a0</pre>"}, {"lang": "Emacs Lisp", "loc": 21, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(defun reverse-words (line)<br/>  (insert<br/>   (format \"%s\\n\"<br/>           (mapconcat 'identity (reverse (split-string line)) \" \"))))<br/>\u00a0<br/>(defun reverse-lines (lines)<br/>  (mapcar 'reverse-words lines))<br/>\u00a0<br/>(reverse-lines<br/> '(\"---------- Ice and Fire ------------\"<br/>   \"\"<br/>   \"fire, in end will world the say Some\"<br/>   \"ice. in say Some\"<br/>   \"desire of tasted I've what From\"<br/>   \"fire. favor who those with hold I\"<br/>   \"\"<br/>   \"... elided paragraph last ...\"<br/>   \"\"<br/>   \"Frost Robert ----------------------- \"))<br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 15, "block": "<pre class=\"text highlighted_source\">USING: io sequences splitting\u00a0;<br/>IN: rosetta-code.reverse-words<br/>\u00a0<br/>\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\"<br/>\u00a0<br/>\"\\n\" split [ \" \" split reverse \" \" join ] map [ print ] each</pre>"}, {"lang": "Forth", "loc": 31, "block": "<pre class=\"text highlighted_source\">create buf 1000 chars allot                    \\ string buffer<br/>buf value pp                                   \\ pp points to buffer address<br/>\u00a0<br/>: tr        ( caddr u -- )<br/>            dup &gt;r pp swap cmove               \\ move string into buffer<br/>            r&gt; pp + to pp \u00a0;                   \\ advance pointer by u bytes<br/>\u00a0<br/>: collect   ( -- addr len .. addr[n] len[n])   \\ words deposit on data stack<br/>            begin<br/>              parse-name dup                   \\ parse input stream, dup the len<br/>            while                              \\ while  stack &lt;&gt; 0<br/>              tuck pp &gt;r tr r&gt;  swap<br/>            repeat<br/>            2drop\u00a0;                            \\ clean up stack<br/>\u00a0<br/>: reverse   ( -- )<br/>            buf to pp                          \\ initialize pointer to buffer address<br/>            collect<br/>            depth 2/ 0\u00a0?do  type space  loop   \\ type the strings with a trailing space<br/>            cr\u00a0;                               \\ final new line<br/>\u00a0<br/>reverse ---------- Ice and Fire ------------<br/>reverse<br/>reverse fire, in end will world the say Some<br/>reverse ice. in say Some<br/>reverse desire of tasted I've what From<br/>reverse fire. favor who those with hold I<br/>reverse<br/>reverse ... elided paragraph last ...<br/>reverse<br/>reverse Frost Robert -----------------------</pre>"}, {"lang": "Fortran", "loc": 30, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/> <span class=\"kw3\">character</span><span class=\"sy0\">*</span><span class=\"nu0\">40</span> words<br/> <span class=\"kw3\">character</span><span class=\"sy0\">*</span><span class=\"nu0\">40</span> reversed<br/> <span class=\"kw3\">logical</span> inblank<br/> ierr<span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/> read <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"kw1\">fmt</span><span class=\"sy0\">=</span><span class=\"st0\">\"(a)\"</span>,<span class=\"kw1\">iostat</span><span class=\"sy0\">=</span>ierr<span class=\"br0\">)</span>words<br/> <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>ierr.<span class=\"me1\">eq</span>.0<span class=\"br0\">)</span><br/> inblank<span class=\"sy0\">=</span><span class=\"kw2\">.<span class=\"me1\">true</span>.</span><br/> ipos<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/> <span class=\"kw1\">do</span> i<span class=\"sy0\">=</span><span class=\"nu0\">40</span>,<span class=\"nu0\">1</span>,<span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>   <span class=\"kw1\">if</span><span class=\"br0\">(</span>words<span class=\"br0\">(</span>i<span class=\"sy0\">:</span>i<span class=\"br0\">)</span><span class=\"kw2\">.<span class=\"me1\">ne</span>.</span><span class=\"st0\">' '</span>.<span class=\"me1\">and</span>.<span class=\"me1\">inblank</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>     last<span class=\"sy0\">=</span>i<br/>     inblank<span class=\"sy0\">=</span><span class=\"kw2\">.<span class=\"me1\">false</span>.</span><br/>     <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>.<span class=\"kw4\">not</span>.<span class=\"me1\">inblank</span>.<span class=\"me1\">and</span>.<span class=\"me1\">words</span><span class=\"br0\">(</span>i<span class=\"sy0\">:</span>i<span class=\"br0\">)</span><span class=\"kw2\">.<span class=\"me1\">eq</span>.</span><span class=\"st0\">' '</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      reversed<span class=\"br0\">(</span>ipos<span class=\"sy0\">:</span>ipos<span class=\"sy0\">+</span>last<span class=\"sy0\">-</span>i<span class=\"br0\">)</span><span class=\"sy0\">=</span>words<span class=\"br0\">(</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>last<span class=\"br0\">)</span><br/>      ipos<span class=\"sy0\">=</span>ipos<span class=\"sy0\">+</span>last<span class=\"sy0\">-</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>      inblank<span class=\"sy0\">=</span><span class=\"kw2\">.<span class=\"me1\">true</span>.</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>     <span class=\"kw1\">if</span><span class=\"br0\">(</span>.<span class=\"kw4\">not</span>.<span class=\"me1\">inblank</span>.<span class=\"me1\">and</span>.<span class=\"me1\">i</span>.<span class=\"me1\">eq</span>.1<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>       reversed<span class=\"br0\">(</span>ipos<span class=\"sy0\">:</span>ipos<span class=\"sy0\">+</span>last<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>words<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>last<span class=\"br0\">)</span><br/>       ipos<span class=\"sy0\">=</span>ipos<span class=\"sy0\">+</span>last<br/>       <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/> print <span class=\"sy0\">*</span>,words,<span class=\"st0\">'=&gt; '</span>,reversed<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>ipos<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/> read <span class=\"br0\">(</span><span class=\"nu0\">5</span>,<span class=\"kw1\">fmt</span><span class=\"sy0\">=</span><span class=\"st0\">\"(a)\"</span>,<span class=\"kw1\">iostat</span><span class=\"sy0\">=</span>ierr<span class=\"br0\">)</span>words<br/> <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/> <span class=\"kw1\">end</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 52, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"kw1\">Sub</span> split <span class=\"br0\">(</span>s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, sepList <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, result<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span>, removeEmpty <span class=\"kw1\">As</span> Boolean = <span class=\"kw1\">False</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> s = <span class=\"st0\">\"\"</span> OrElse sepList = <span class=\"st0\">\"\"</span> <span class=\"kw1\">Then</span> <br/>     <span class=\"kw1\">Redim</span> result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>     result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = s<br/>     <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> i, j, count = <span class=\"nu0\">0</span>, empty = <span class=\"nu0\">0</span>, length<br/>  <span class=\"kw1\">Dim</span> <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> position<span class=\"br0\">(</span><span class=\"kw1\">Len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  position<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = <span class=\"nu0\">0</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> i = <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"kw1\">len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">For</span> j = <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"kw1\">Len</span><span class=\"br0\">(</span>sepList<span class=\"br0\">)</span> - <span class=\"nu0\">1</span><br/>      <span class=\"kw1\">If</span> s<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = sepList<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"kw1\">Then</span> <br/>        count += <span class=\"nu0\">1</span><br/>        position<span class=\"br0\">(</span>count<span class=\"br0\">)</span> = i + <span class=\"nu0\">1</span>       <br/>      <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span> j<br/>  <span class=\"kw1\">Next</span> i<br/>\u00a0<br/>  <span class=\"kw1\">Redim</span> result<span class=\"br0\">(</span>count<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> count  = <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span><br/>    result<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> = s<br/>    <span class=\"kw1\">Return</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>\u00a0<br/>  position<span class=\"br0\">(</span>count + <span class=\"nu0\">1</span><span class=\"br0\">)</span> = <span class=\"kw1\">len</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span> + <span class=\"nu0\">1</span><br/>\u00a0<br/>  <span class=\"kw1\">For</span> i = <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> count + <span class=\"nu0\">1</span>  <br/>    length = position<span class=\"br0\">(</span>i<span class=\"br0\">)</span> - position<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span><span class=\"br0\">)</span> - <span class=\"nu0\">1</span> <br/>    result<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span> - empty<span class=\"br0\">)</span> = <span class=\"kw1\">Mid</span><span class=\"br0\">(</span>s, position<span class=\"br0\">(</span>i - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"nu0\">1</span>, length<span class=\"br0\">)</span><br/>    <span class=\"kw1\">If</span> removeEmpty Andalso CBool<span class=\"br0\">(</span>length = <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> empty += <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Next</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> empty &gt; <span class=\"nu0\">0</span> <span class=\"kw1\">Then</span> <span class=\"kw1\">Redim</span> <span class=\"kw1\">Preserve</span> result<span class=\"br0\">(</span>count - empty<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"kw1\">Dim</span> s <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"Hey you, Bub!\"</span><br/><span class=\"kw1\">Dim</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><br/>split<span class=\"br0\">(</span>s, <span class=\"st0\">\" \"</span>, a<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"kw1\">true</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Dim</span> reversed <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">For</span> i <span class=\"kw1\">As</span> <span class=\"kw1\">Integer</span> = <span class=\"kw1\">UBound</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">To</span> <span class=\"kw1\">LBound</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">Step</span> -<span class=\"nu0\">1</span><br/>  reversed += a<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> i &gt; <span class=\"kw1\">LBound</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"kw1\">Then</span> reversed += <span class=\"st0\">\" \"</span><br/><span class=\"kw1\">Next</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Original String = \"</span>; s<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Reversed String = \"</span>; reversed<br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Frink", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>lines=split[\"\\n\", <br/>\"\"\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/> .. elided paragraph last ...  <br/>\u00a0<br/>Frost Robert -----------------------\"\"\"]<br/>\u00a0<br/>for line = lines<br/>    println[join[\" \", reverse[split[%r/\\s+/, line]]]]<br/>\u00a0</pre>"}, {"lang": "Gema", "loc": 1, "block": "<pre class=\"text highlighted_source\">\\L&lt;G&gt; &lt;U&gt;<a class=\"__cf_email__\" data-cfemail=\"a29fe2\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{$2} $1</pre>"}, {"lang": "Gambas", "loc": 36, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sString <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span>                                     <span class=\"co1\">'Array for the input text</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sLine <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/new\"><span class=\"kw1\">New</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span>                                         <span class=\"co1\">'Array of each word in a line</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount0, siCount1 <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a>                                   <span class=\"co1\">'Counters</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sOutput, sReverse, sTemp <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a>                            <span class=\"co1\">'Strings</span><br/>\u00a0<br/>sString<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"---------- Ice And Fire ------------\"</span>               <span class=\"co1\">'Input text</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"                                    \"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"fire, in end will world the say Some\"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"ice. in say Some                    \"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"desire of tasted I've what From     \"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"fire. favor who those with hold I   \"</span> <br/>sString<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"                                    \"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"... elided paragraph last ...       \"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"                                    \"</span><br/>sString<span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount0 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">9</span>                                             <span class=\"co1\">'To work through each line of input text</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/trim\"><span class=\"kw2\">Trim</span></a><span class=\"br0\">(</span>sString<span class=\"br0\">[</span>siCount0<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> sString<span class=\"br0\">[</span>siCount0<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span>    <span class=\"co1\">'If the line is all spaces then make it 1 space</span><br/>\u00a0<br/>  <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> <a href=\"http://gambasdoc.org/help/lang/each\"><span class=\"kw1\">Each</span></a> sTemp <a href=\"http://gambasdoc.org/help/lang/in\"><span class=\"kw1\">In</span></a> <a href=\"http://gambasdoc.org/help/lang/split\"><span class=\"kw2\">Split</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/trim\"><span class=\"kw2\">Trim</span></a><span class=\"br0\">(</span>sString<span class=\"br0\">[</span>siCount0<span class=\"br0\">]</span><span class=\"br0\">)</span>, <span class=\"st0\">\" \"</span><span class=\"br0\">)</span>           <span class=\"co1\">'Split the trimmed line by spaces</span><br/>    sLine.<span class=\"me1\">Add</span><span class=\"br0\">(</span>sTemp<span class=\"br0\">)</span>                                              <span class=\"co1\">'Add each word to the sLine array</span><br/>  <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/>  <a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount1 <span class=\"sy0\">=</span> sLine.<a href=\"http://gambasdoc.org/help/lang/max\"><span class=\"kw2\">max</span></a> DownTo <span class=\"nu0\">0</span>                               <span class=\"co1\">'Loop from the last in the sLine array to 0</span><br/>    sReverse <span class=\"sy0\">&amp;=</span> sLine<span class=\"br0\">[</span>siCount1<span class=\"br0\">]</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" \"</span>                             <span class=\"co1\">'Fill sReverse with words reversed, adding a space</span><br/>  <a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/>  sOutput <span class=\"sy0\">&amp;=</span> <a href=\"http://gambasdoc.org/help/lang/trim\"><span class=\"kw2\">Trim</span></a><span class=\"br0\">(</span>sReverse<span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> gb.<span class=\"me1\">NewLine</span>                          <span class=\"co1\">'Add the reversed words to sOutput and add a newline</span><br/>  sReverse <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span>                                                   <span class=\"co1\">'Clear sReverse</span><br/>  sLine.<span class=\"me1\">Clear</span>                                                     <span class=\"co1\">'Clear sLine array</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> sOutput                                                     <span class=\"co1\">'Print the output</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 36, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// a number of strings</span><br/><span class=\"kw1\">var</span> n <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span><br/>    <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"                                    \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"ice. in say Some                    \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"desire of tasted I've what From     \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"fire. favor who those with hold I   \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"                                    \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"... elided paragraph last ...       \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"                                    \"</span><span class=\"sy1\">,</span><br/>    <span class=\"st0\">\"Frost Robert -----------------------\"</span><span class=\"sy1\">,</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> s <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> n <span class=\"sy1\">{</span><br/>        t <span class=\"sy2\">:=</span> strings<span class=\"sy3\">.</span>Fields<span class=\"sy1\">(</span>s<span class=\"sy1\">)</span> <span class=\"co1\">// tokenize</span><br/>        <span class=\"co1\">// reverse</span><br/>        last <span class=\"sy2\">:=</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>t<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">for</span> j<span class=\"sy1\">,</span> k <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> t<span class=\"sy1\">[:</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>t<span class=\"sy1\">)</span><span class=\"sy3\">/</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>            t<span class=\"sy1\">[</span>j<span class=\"sy1\">],</span> t<span class=\"sy1\">[</span>last<span class=\"sy3\">-</span>j<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> t<span class=\"sy1\">[</span>last<span class=\"sy3\">-</span>j<span class=\"sy1\">],</span> k<br/>        <span class=\"sy1\">}</span><br/>        n<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>t<span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// display result</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> t <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> n <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>t<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 15, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> text <span class=\"sy0\">=</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> StringBuilder<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'---------- Ice and Fire ------------<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'                                    <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'fire, in end will world the say Some<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'ice. in say Some                    <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'desire of tasted I<span class=\"es0\">\\'</span>ve what From     <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'fire. favor who those with hold I   <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'                                    <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'... elided paragraph last ...       <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'                                    <span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><br/>    .<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20append\"><span class=\"kw7\">append</span></a><span class=\"br0\">(</span><span class=\"st0\">'Frost Robert -----------------------<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span>.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>text.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20eachLine\"><span class=\"kw7\">eachLine</span></a> <span class=\"br0\">{</span> line <span class=\"sy0\">-&gt;</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"$line   --&gt;   ${line.split(' ').reverse().join(' ')}\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Haskell", "loc": 20, "block": "<pre class=\"haskell highlighted_source\">\u00a0<br/>revstr <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>revstr <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unwords\"><span class=\"kw3\">unwords</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:reverse\"><span class=\"kw3\">reverse</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:words\"><span class=\"kw3\">words</span></a> <span class=\"co1\">-- point-free style</span><br/><span class=\"co1\">--equivalent:</span><br/><span class=\"co1\">--revstr s = unwords (reverse (words s))</span><br/>\u00a0<br/>revtext <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>revtext <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:unlines\"><span class=\"kw3\">unlines</span></a> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> revstr <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:lines\"><span class=\"kw3\">lines</span></a> <span class=\"co1\">-- applies revstr to each line independently</span><br/>\u00a0<br/>test <span class=\"sy0\">=</span> revtext <span class=\"st0\">\"---------- Ice and Fire ------------<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\\\</span>n<span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\f</span>ire, in end will world the say Some<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\i</span>ce. in say Some<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\d</span>esire of tasted I've what From<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\f</span>ire. favor who those with hold I<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\\\</span>n<span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\.</span>.. elided paragraph last ...<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\\\</span>n<span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\F</span>rost Robert -----------------------<span class=\"es0\">\\n</span>\"</span> <span class=\"co1\">--multiline string notation requires \\ at end and start of lines, and \\n to be manually input</span><br/>\u00a0</pre>"}, {"lang": "Icon and Unicon", "loc": 14, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span>rWords<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span><span class=\"kw3\">input</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> rWords<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> <span class=\"sy0\">!</span>f <span class=\"sy0\">?</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">every</span> <span class=\"br0\">(</span>s <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"sy0\">:=</span> genWords<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> s<br/>        <span class=\"kw1\">suspend</span> s<br/>        <span class=\"br0\">}</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> genWords<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">while</span> w <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">upto</span><span class=\"br0\">(</span><span class=\"st0\">\" <span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"kw4\">tab</span><span class=\"br0\">(</span><span class=\"kw4\">many</span><span class=\"br0\">(</span><span class=\"st0\">\" <span class=\"es0\">\\t</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"st0\">\" \"</span> <span class=\"kw1\">do</span> <span class=\"kw1\">suspend</span> w<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 23, "block": "<pre class=\"j highlighted_source\">   <span class=\"sy0\">(</span>[:;@|.[:&lt;;.<span class=\"nu0\">1</span> <span class=\"st_h\">' '</span>,]<span class=\"sy0\">)</span>;.<span class=\"nu0\">_2</span>]<span class=\"nu0\">0</span>\u00a0:<span class=\"nu0\">0</span><br/>---------- Ice and Fire ------------<br/>\u00a0<br/>  fire, in end will world the say Some<br/>  ice. in say Some<br/>  desire of tasted I<span class=\"co3\">'ve what From</span><br/>  fire. favor who those with hold I<br/>\u00a0<br/>   ... elided paragraph last ...<br/>\u00a0<br/>  Frost Robert -----------------------<br/><span class=\"sy0\">)</span><br/> ------------ Fire and Ice ----------  <br/>\u00a0<br/> Some say the world will end in fire,  <br/> Some say in ice.                      <br/> From what I<span class=\"co3\">'ve tasted of desire       </span><br/> I hold with those who favor fire.     <br/>\u00a0<br/> ... last paragraph elided ...         <br/>\u00a0<br/> ----------------------- Robert Frost  <br/>\u00a0</pre>"}, {"lang": "Java", "loc": 22, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> ReverseWords <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> lines <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <span class=\"st0\">\" ----------- Ice and Fire ----------- \"</span>,<br/>        <span class=\"st0\">\"                                      \"</span>,<br/>        <span class=\"st0\">\" fire, in end will world the say Some \"</span>,<br/>        <span class=\"st0\">\" ice. in say Some                     \"</span>,<br/>        <span class=\"st0\">\" desire of tasted I've what From      \"</span>,<br/>        <span class=\"st0\">\" fire. favor who those with hold I    \"</span>,<br/>        <span class=\"st0\">\"                                      \"</span>,<br/>        <span class=\"st0\">\" ... elided paragraph last ...        \"</span>,<br/>        <span class=\"st0\">\" Frost Robert ----------------------- \"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> line <span class=\"sy0\">:</span> lines<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> words <span class=\"sy0\">=</span> line.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\\\</span>s\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> words.<span class=\"me1\">length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s \"</span>, words<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 23, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> strReversed <span class=\"sy0\">=</span><br/><span class=\"st0\">\"---------- Ice and Fire ------------<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/><span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>fire, in end will world the say Some<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>ice. in say Some<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>desire of tasted I've what From<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>fire. favor who those with hold I<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/><span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>... elided paragraph last ...<span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/><span class=\"es0\">\\n</span><span class=\"es0\">\\</span><br/>Frost Robert -----------------------\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> reverseString<span class=\"br0\">(</span>s<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">return</span> s.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><br/>    <span class=\"kw1\">function</span> <span class=\"br0\">(</span>line<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">return</span> line.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"co2\">/\\s/</span><span class=\"br0\">)</span>.<span class=\"me1\">reverse</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><br/>  reverseString<span class=\"br0\">(</span>strReversed<span class=\"br0\">)</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "jq", "loc": 1, "block": "<pre class=\"text highlighted_source\">split(\"[ \\t\\n\\r]+\") | reverse | join(\" \")</pre>"}, {"lang": "Julia", "loc": 1, "block": "<pre class=\"text highlighted_source\">revstring (str) = join(reverse(split(str, \" \")), \" \")</pre>"}, {"lang": "Kotlin", "loc": 22, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/>fun reversedWords<span class=\"br0\">(</span>s<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">=</span> s.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span>.<span class=\"me1\">reversed</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">joinToString</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> s <span class=\"sy0\">=</span> <span class=\"st0\">\"Hey you, Bub!\"</span><br/>    println<span class=\"br0\">(</span>reversedWords<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sl <span class=\"sy0\">=</span> listOf<span class=\"br0\">(</span><br/>        <span class=\"st0\">\" ---------- Ice and Fire ------------ \"</span>, <br/>        <span class=\"st0\">\"                                      \"</span>,<br/>        <span class=\"st0\">\" fire, in end will world the say Some \"</span>, <br/>        <span class=\"st0\">\" ice. in say Some                     \"</span>, <br/>        <span class=\"st0\">\" desire of tasted I've what From      \"</span>, <br/>        <span class=\"st0\">\" fire. favor who those with hold I    \"</span>,  <br/>        <span class=\"st0\">\"                                      \"</span>,  <br/>        <span class=\"st0\">\" ... elided paragraph last ...        \"</span>, <br/>        <span class=\"st0\">\"                                      \"</span>,  <br/>        <span class=\"st0\">\" Frost Robert ----------------------- \"</span><br/>    <span class=\"br0\">)</span> <br/>    sl.<span class=\"me1\">forEach</span> <span class=\"br0\">{</span> println<span class=\"br0\">(</span>reversedWords<span class=\"br0\">(</span>it<span class=\"br0\">)</span>.<span class=\"me1\">trimStart</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 28, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">10</span><br/>    <span class=\"kw1\">read</span> string$<br/>    <span class=\"kw1\">print</span> reverse$<span class=\"br0\">(</span>string$<span class=\"br0\">)</span><br/><span class=\"kw1\">next</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> reverse$<span class=\"br0\">(</span>string$<span class=\"br0\">)</span><br/>    token$<span class=\"sy0\">=</span><span class=\"st0\">\"*\"</span><br/>    <span class=\"kw1\">while</span> token$<span class=\"sy0\">&lt;&gt;</span><span class=\"st0\">\"\"</span><br/>        i<span class=\"sy0\">=</span>i<span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>        token$ <span class=\"sy0\">=</span> <span class=\"kw1\">word</span>$<span class=\"br0\">(</span>string$<span class=\"sy0\">,</span> i<span class=\"br0\">)</span><br/>        <span class=\"kw1\">output</span>$<span class=\"sy0\">=</span>token$<span class=\"sy0\">+</span><span class=\"st0\">\" \"</span><span class=\"sy0\">+</span><span class=\"kw1\">output</span>$<br/>    <span class=\"kw1\">wend</span><br/>    reverse$ <span class=\"sy0\">=</span> <span class=\"kw2\">trim$</span><span class=\"br0\">(</span><span class=\"kw1\">output</span>$<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">data</span> <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"fire, in end will world the say Some\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"ice. in say Some\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"desire of tasted I've what From\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"fire. favor who those with hold I\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"... elided paragraph last ...\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">data</span> <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>\u00a0</pre>"}, {"lang": "LiveCode", "loc": 7, "block": "<pre class=\"text highlighted_source\">repeat for each line txtln in fld \"Fieldtxt\"<br/>    repeat with i = the number of words of txtln down to 1<br/>        put word i of txtln &amp; space after txtrev<br/>    end repeat<br/>    put cr after txtrev  -- preserve line<br/>end repeat<br/>put txtrev</pre>"}, {"lang": "LiveScript", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>poem =<br/>    \"\"\"<br/>    ---------- Ice and Fire ------------<br/>\u00a0<br/>    fire, in end will world the say Some<br/>    ice. in say Some <br/>    desire of tasted I've what From<br/>    fire. favor who those with hold I<br/>\u00a0<br/>    ... elided paragraph last ...<br/>\u00a0<br/>    Frost Robert -----------------------<br/>    \"\"\"<br/>\u00a0<br/>reverse-words  = (.split ' ') &gt;&gt; (.reverse!) &gt;&gt; (.join ' ')<br/>reverse-string = (.split '\\n') &gt;&gt; (.map reverse-words) &gt;&gt; (.join '\\n')<br/>reverse-string poem<br/>\u00a0</pre>"}, {"lang": "Logo", "loc": 5, "block": "<pre class=\"text highlighted_source\">do.until [<br/>  make \"line readlist<br/>  print reverse\u00a0:line<br/>] [word?\u00a0:line]<br/>bye</pre>"}, {"lang": "Lua", "loc": 11, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">local</span> lines <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw1\">for</span> line <span class=\"kw2\">in</span> <span class=\"br0\">(</span>s <span class=\"sy0\">..</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>gmatch<span class=\"br0\">(</span><span class=\"st0\">\"(.-)<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>\t<span class=\"kw1\">local</span> this <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\t<span class=\"kw1\">for</span> word <span class=\"kw2\">in</span> line<span class=\"sy0\">:</span>gmatch<span class=\"br0\">(</span><span class=\"st0\">\"%S+\"</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>\t\t<span class=\"kw3\">table.insert</span><span class=\"br0\">(</span>this<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> word<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">end</span><br/>\tlines<span class=\"br0\">[</span><span class=\"sy0\">#</span>lines <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">table.concat</span><span class=\"br0\">(</span>this<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"kw3\">table.concat</span><span class=\"br0\">(</span>lines<span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 7, "block": "<pre class=\"text highlighted_source\">while (true) do<br/>\tinput\u00a0:= readline(\"input.txt\"):<br/>\tif input = 0 then break: fi:<br/>\tinput\u00a0:= StringTools:-Trim(input): # remove leading/trailing space<br/>\tinput\u00a0:= StringTools:-Join(ListTools:-Reverse(StringTools:-Split(input, \" \")),\" \"):<br/>\tprintf(\"%s\\n\", input):<br/>od:</pre>"}, {"lang": "Mathematica", "loc": 16, "block": "<pre class=\"text highlighted_source\">poem = \"---------- Ice and Fire ------------<br/>\u00a0<br/>     fire, in end will world the say Some<br/>     ice. in say Some <br/>     desire of tasted I've what From<br/>     fire. favor who those with hold I<br/>\u00a0<br/>     ... elided paragraph last ...<br/>\u00a0<br/>     Frost Robert -----------------------\";<br/>lines = StringSplit[poem, \"\\n\"];<br/>wordArray = StringSplit[#] &amp;   @ lines\u00a0;<br/>reversedWordArray = Reverse[#] &amp; /@ wordArray\u00a0;<br/>linesWithReversedWords = <br/>  StringJoin[Riffle[#, \" \"]] &amp; /@ reversedWordArray;<br/>finaloutput = StringJoin[Riffle[#, \"\\n\"]] &amp;  @ linesWithReversedWords</pre>"}, {"lang": "MATLAB", "loc": 25, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> testReverseWords<br/>    testStr = <span class=\"br0\">{</span><span class=\"co2\">'---------- Ice and Fire ------------'</span>\u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">''</span>                                           \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">'fire, in end will world the say Some'</span>       \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">'ice. in say Some'</span>                           \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">'desire of tasted I'</span><span class=\"co2\">'ve what From'</span>           \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">'fire. favor who those with hold I'</span>          \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">''</span>                                           \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">'... elided paragraph last ...'</span>              \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">''</span>                                           \u00a0; <span class=\"sy0\">...</span><br/>        <span class=\"co2\">'Frost Robert -----------------------'</span>        <span class=\"br0\">}</span>;<br/>    <span class=\"kw1\">for</span> k = <span class=\"nu0\">1</span>:<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/length.html\"><span class=\"kw2\">length</span></a><span class=\"br0\">(</span>testStr<span class=\"br0\">)</span><br/>        <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%s\\n'</span>, reverseWords<span class=\"br0\">(</span>testStr<span class=\"br0\">{</span>k<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> strOut = reverseWords<span class=\"br0\">(</span>strIn<span class=\"br0\">)</span><br/>    strOut = strtrim<span class=\"br0\">(</span>strIn<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">if</span> ~isempty<span class=\"br0\">(</span>strOut<span class=\"br0\">)</span><br/>        <span class=\"co1\">% Could use strsplit() instead of textscan() in R2013a or later</span><br/>        words = textscan<span class=\"br0\">(</span>strOut, <span class=\"co2\">'%s'</span><span class=\"br0\">)</span>;<br/>        words = words<span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span>;<br/>        strOut = strtrim<span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sprintf.html\"><span class=\"kw2\">sprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%s '</span>, words<span class=\"br0\">{</span><span class=\"kw1\">end</span>:-<span class=\"nu0\">1</span>:<span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Modula-2", "loc": 60, "block": "<pre class=\"modula2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> ReverseWords;<br/>\u00a0<br/><span class=\"kw1\">FROM</span> STextIO <span class=\"kw1\">IMPORT</span><br/>  WriteString<span class=\"sy0\">,</span> WriteLn;<br/><span class=\"kw1\">FROM</span> Strings <span class=\"kw1\">IMPORT</span><br/>  Assign<span class=\"sy0\">,</span> Concat<span class=\"sy0\">,</span> Append;<br/>\u00a0<br/><span class=\"kw1\">CONST</span><br/>  NL <span class=\"sy0\">=</span> <span class=\"kw3\">CHR</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>;<br/>  Sp <span class=\"sy0\">=</span> <span class=\"st_h\">' '</span>;<br/>  Txt <span class=\"sy0\">=</span> <span class=\"st0\">\"---------- Ice and Fire -----------\"</span> <span class=\"sy0\">+</span> NL <span class=\"sy0\">+</span><br/>    NL <span class=\"sy0\">+</span><br/>    <span class=\"st0\">\"fire, in end will world the say Some\"</span> <span class=\"sy0\">+</span> NL <span class=\"sy0\">+</span><br/>    <span class=\"st0\">\"ice. in say Some\"</span> <span class=\"sy0\">+</span> NL <span class=\"sy0\">+</span><br/>    <span class=\"st0\">\"desire of tasted I've what From\"</span> <span class=\"sy0\">+</span> NL <span class=\"sy0\">+</span><br/>    <span class=\"st0\">\"fire. favor who those with hold I\"</span> <span class=\"sy0\">+</span> NL <span class=\"sy0\">+</span><br/>    NL <span class=\"sy0\">+</span><br/>    <span class=\"st0\">\"... elided paragraph last ...\"</span> <span class=\"sy0\">+</span> NL <span class=\"sy0\">+</span><br/>    NL <span class=\"sy0\">+</span><br/>    <span class=\"st0\">\"Frost Robert -----------------------\"</span> <span class=\"sy0\">+</span> NL;<br/>\u00a0<br/><span class=\"kw1\">TYPE</span><br/>  String400 <span class=\"sy0\">=</span> <span class=\"kw1\">ARRAY</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span> .. <span class=\"nu0\">399</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> AddWord<span class=\"br0\">(</span>Source<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>; <span class=\"kw1\">VAR</span> INOUT Destination<span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">VAR</span><br/>  R<span class=\"sy0\">:</span> String400;<br/><span class=\"kw1\">BEGIN</span><br/>  Concat<span class=\"br0\">(</span>Source<span class=\"sy0\">,</span> Sp<span class=\"sy0\">,</span> R<span class=\"br0\">)</span>;<br/>  Append<span class=\"br0\">(</span>Destination<span class=\"sy0\">,</span> R<span class=\"br0\">)</span>;<br/>  Assign<span class=\"br0\">(</span>R<span class=\"sy0\">,</span> Destination<span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> AddWord;<br/>\u00a0<br/><span class=\"kw1\">VAR</span><br/>  I<span class=\"sy0\">:</span> <span class=\"kw4\">CARDINAL</span>;<br/>  SingleWord<span class=\"sy0\">,</span> CurrentLine<span class=\"sy0\">:</span> String400;<br/>  C<span class=\"sy0\">:</span> <span class=\"kw4\">CHAR</span>;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  SingleWord <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span>;<br/>  CurrentLine <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span>;<br/>  <span class=\"kw1\">FOR</span> I <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">TO</span> <span class=\"kw3\">HIGH</span><span class=\"br0\">(</span>Txt<span class=\"br0\">)</span> <span class=\"kw1\">DO</span><br/>    C <span class=\"sy0\">:=</span> Txt<span class=\"br0\">[</span>I<span class=\"br0\">]</span>;<br/>    <span class=\"kw1\">CASE</span> C <span class=\"kw1\">OF</span><br/>      Sp<span class=\"sy0\">:</span><br/>        AddWord<span class=\"br0\">(</span>SingleWord<span class=\"sy0\">,</span> CurrentLine<span class=\"br0\">)</span>;<br/>        SingleWord <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span>; |<br/>      NL<span class=\"sy0\">:</span><br/>        AddWord<span class=\"br0\">(</span>SingleWord<span class=\"sy0\">,</span> CurrentLine<span class=\"br0\">)</span>;<br/>        WriteString<span class=\"br0\">(</span>CurrentLine<span class=\"br0\">)</span>;<br/>        WriteLn;<br/>        SingleWord <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span>;<br/>        CurrentLine <span class=\"sy0\">:=</span> <span class=\"st0\">\"\"</span>; |<br/>    <span class=\"kw1\">ELSE</span><br/>      Append<span class=\"br0\">(</span>C<span class=\"sy0\">,</span> SingleWord<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">END</span>;<br/>  <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> ReverseWords.<br/>\u00a0</pre>"}, {"lang": "Nial", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Define a function to convert a list of strings to a single string.<br/>join is rest link (' ' eachboth link)<br/>\u00a0<br/>iterate (write join reverse (' ' string_split)) \\<br/>  \\<br/>  \\<br/>  '------------ Eldorado ----------' \\<br/>  '' \\<br/>  '... here omitted lines ...' \\<br/>  '' \\<br/>  'Mountains the \"Over' \\<br/>  'Moon, the Of' \\<br/>  'Shadow, the of Valley the Down' \\<br/>  'ride,\" boldly Ride,' \\<br/>  'replied,--- shade The' \\<br/>  'Eldorado!\" for seek you \"If' \\<br/>  '' \\<br/>  'Poe Edgar -----------------------'<br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 27, "block": "<pre class=\"text highlighted_source\">import strutils<br/>\u00a0<br/>let text = \"\"\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\"\"\"<br/>\u00a0<br/>proc reversed*[T](a: openArray[T], first, last: int): seq[T] =<br/>  result = newSeq[T](last - first + 1)<br/>  var x = first<br/>  var y = last<br/>  while x &lt;= last:<br/>    result[x] = a[y]<br/>    dec(y)<br/>    inc(x)<br/>\u00a0<br/>proc reversed*[T](a: openArray[T]): seq[T] =<br/>  reversed(a, 0, a.high)<br/>\u00a0<br/>for line in text.splitLines():<br/>  echo line.split(' ').reversed().join(\" \")</pre>"}, {"lang": "Objeck", "loc": 29, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">use</span> Collection<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">class</span> Reverselines <span class=\"br0\">{</span><br/>  <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>    lines <span class=\"sy0\">:=</span> List<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"ice. in say Some\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"desire of tasted I've what From\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"fire. favor who those with hold I\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"... elided paragraph last ...\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">AddBack</span><span class=\"br0\">(</span><span class=\"st0\">\"Frost Robert -----------------------\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">Rewind</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">each</span><span class=\"br0\">(</span>i <span class=\"sy0\">:</span> lines<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      words <span class=\"sy0\">:=</span> lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">Get</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">As</span><span class=\"br0\">(</span><span class=\"kw2\">String</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Split</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>words <span class=\"sy0\">&lt;&gt;</span> <span class=\"kw2\">Nil</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>      <br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span>j <span class=\"sy0\">:=</span> words<span class=\"sy0\">-&gt;</span><span class=\"me1\">Size</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">-=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          IO.Console<span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span>words<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">Print</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      IO.Console<span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      lines<span class=\"sy0\">-&gt;</span><span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 16, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"sy0\">#</span>load <span class=\"st0\">\"str.cma\"</span><br/><span class=\"kw1\">let</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput\"><span class=\"kw3\">input</span></a> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"ice. in say Some\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"desire of tasted I've what From\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"fire. favor who those with hold I\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"... elided paragraph last ...\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>        <span class=\"st0\">\"Frost Robert -----------------------\"</span><span class=\"br0\">]</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> splitted <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Str.html\"><span class=\"kw2\">Str</span></a><span class=\"sy0\">.</span>split <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Str.html\"><span class=\"kw2\">Str</span></a><span class=\"sy0\">.</span><span class=\"kw1\">regexp</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALinput\"><span class=\"kw3\">input</span></a> <span class=\"kw1\">in</span><br/><span class=\"kw1\">let</span> reversed <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>rev splitted <span class=\"kw1\">in</span><br/><span class=\"kw1\">let</span> final <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>map <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>concat <span class=\"st0\">\" \"</span><span class=\"br0\">)</span> reversed <span class=\"kw1\">in</span><br/><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> final<span class=\"sy0\">;;</span></pre>"}, {"lang": "Oforth", "loc": 14, "block": "<pre class=\"text highlighted_source\">: revWords(s) <br/>   s words reverse unwords\u00a0;<br/>\u00a0<br/>: reverseWords<br/>   \"---------- Ice and Fire ------------\" revWords println<br/>   \"                                    \" revWords println<br/>   \"fire, in end will world the say Some\" revWords println<br/>   \"ice. in say Some                    \" revWords println<br/>   \"desire of tasted I've what From     \" revWords println<br/>   \"fire. favor who those with hold I   \" revWords println<br/>   \"                                    \" revWords println<br/>   \"... elided paragraph last ...       \" revWords println<br/>   \"                                    \" revWords println<br/>   \"Frost Robert -----------------------\" revWords println\u00a0;</pre>"}, {"lang": "Pascal", "loc": 46, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> Reverse_words<span class=\"br0\">(</span>Output<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"co2\">{$H+}</span><br/>\u00a0<br/><span class=\"kw1\">const</span><br/>  nl <span class=\"sy3\">=</span> <span class=\"kw3\">chr</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// Linefeed</span><br/>  sp <span class=\"sy3\">=</span> <span class=\"kw3\">chr</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"co1\">// Space</span><br/>  TXT <span class=\"sy3\">=</span><br/>  <span class=\"st0\">'---------- Ice and Fire -----------'</span><span class=\"sy3\">+</span>nl<span class=\"sy3\">+</span><br/>  nl<span class=\"sy3\">+</span><br/>  <span class=\"st0\">'fire, in end will world the say Some'</span><span class=\"sy3\">+</span>nl<span class=\"sy3\">+</span><br/>  <span class=\"st0\">'ice. in say Some'</span><span class=\"sy3\">+</span>nl<span class=\"sy3\">+</span><br/>  <span class=\"st0\">'desire of tasted I'</span><span class=\"st0\">'ve what From'</span><span class=\"sy3\">+</span>nl<span class=\"sy3\">+</span><br/>  <span class=\"st0\">'fire. favor who those with hold I'</span><span class=\"sy3\">+</span>nl<span class=\"sy3\">+</span><br/>  nl<span class=\"sy3\">+</span><br/>  <span class=\"st0\">'... elided paragraph last ...'</span><span class=\"sy3\">+</span>nl<span class=\"sy3\">+</span><br/>  nl<span class=\"sy3\">+</span><br/>  <span class=\"st0\">'Frost Robert -----------------------'</span><span class=\"sy3\">+</span>nl<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  I <span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/>  ew<span class=\"sy1\">,</span> lw <span class=\"sy1\">:</span> <span class=\"kw4\">ansistring</span><span class=\"sy1\">;</span><br/>  c <span class=\"sy1\">:</span> <span class=\"kw4\">char</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> addW <span class=\"sy1\">:</span> <span class=\"kw4\">ansistring</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span> r <span class=\"sy1\">:</span> <span class=\"kw4\">ansistring</span> <span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  r <span class=\"sy1\">:</span><span class=\"sy3\">=</span> ew <span class=\"sy3\">+</span> sp <span class=\"sy3\">+</span> lw<span class=\"sy1\">;</span><br/>  ew <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/>  addW <span class=\"sy1\">:</span><span class=\"sy3\">=</span> r<br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  ew <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/>  lw <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> I <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> strlen<span class=\"br0\">(</span>TXT<span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    c <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TXT<span class=\"br0\">[</span>I<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>    <span class=\"kw1\">case</span> c <span class=\"kw1\">of</span><br/>      sp <span class=\"sy1\">:</span> lw <span class=\"sy1\">:</span><span class=\"sy3\">=</span> addW<span class=\"sy1\">;</span><br/>      nl <span class=\"sy1\">:</span> <span class=\"kw1\">begin</span> <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>addW<span class=\"br0\">)</span><span class=\"sy1\">;</span> lw <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"st0\">''</span> <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>      <span class=\"kw1\">else</span> ew <span class=\"sy1\">:</span><span class=\"sy3\">=</span> ew <span class=\"sy3\">+</span> c<br/>    <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">readln</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "Perl", "loc": 13, "block": "<pre class=\"perl highlighted_source\"><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <a href=\"http://perldoc.perl.org/functions/join.html\"><span class=\"kw3\">join</span></a><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/reverse.html\"><span class=\"kw3\">reverse</span></a> <a href=\"http://perldoc.perl.org/functions/split.html\"><span class=\"kw3\">split</span></a><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">for</span> <span class=\"re4\">&lt;DATA&gt;</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">__DATA__</span><br/><span class=\"sy0\">----------</span> Ice <span class=\"kw1\">and</span> Fire <span class=\"sy0\">------------</span><br/>\u00a0<br/>fire<span class=\"sy0\">,</span> in end will world the say Some<br/>ice<span class=\"sy0\">.</span> in say Some                    <br/>desire of tasted I<span class=\"st_h\">'ve what From     <br/>fire. favor who those with hold I   <br/>\u00a0<br/>... elided paragraph last ...       <br/>\u00a0<br/>Frost Robert -----------------------<br/></span></pre>"}, {"lang": "Perl 6", "loc": 1, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw3\">say</span> <span class=\"sy0\">~.</span><span class=\"kw3\">words</span><span class=\"sy0\">.</span><span class=\"kw3\">reverse</span> <span class=\"kw1\">for</span> lines</pre>"}, {"lang": "Phix", "loc": 17, "block": "<pre class=\"text highlighted_source\">constant test=\"\"\"<br/>---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------<br/>\"\"\"<br/>sequence lines = split(test,'\\n')<br/>for i=1 to length(lines) do<br/>    lines[i] = join(reverse(split(lines[i])))<br/>end for<br/>puts(1,join(lines,\"\\n\"))</pre>"}, {"lang": "PicoLisp", "loc": 5, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>(in \"FireIce.txt\" <br/> (until (eof)<br/>  (prinl (glue \" \" (flip (split (line) \" \"))))))<br/>\u00a0</pre>"}, {"lang": "PL/I", "loc": 33, "block": "<pre class=\"text highlighted_source\">rev: procedure options (main);          /* 5 May 2014 */<br/>   declare (s, reverse) character (50) varying;<br/>   declare (i, j) fixed binary;<br/>   declare in file;<br/>\u00a0<br/>   open file (in) title ('/REV-WRD.DAT,type(text),recsize(5&gt; Nil) {      <br/>        for(j\u00a0:= words-&gt;Size() - 1; j &gt; -1; j-=1;) {<br/>          IO.Console-&gt;Print(words[j])-&gt;Print(\" \");<br/>        };<br/>      };<br/>      IO.Console-&gt;PrintLine();<br/>      lines-&gt;Next();<br/>    };<br/>  }<br/>}0)');<br/>\u00a0<br/>   do j = 1 to 10;<br/>      get file (in) edit (s) (L);<br/>      put skip list (trim(s));<br/>\u00a0<br/>      reverse = '';<br/>\u00a0<br/>      do while (length(s) &gt; 0);<br/>         s = trim(s);<br/>         i = index(s, ' ');<br/>         if i = 0 then<br/>            if s ^= '' then i = length(s)+1;<br/>         if i &gt; 0 then reverse = substr(s, 1, i-1) || ' ' || reverse;<br/>         if length(s) = i then s = ''; else s = substr(s, i);<br/>      end;<br/>      put edit ('---&gt; ', reverse) (col(40), 2 A);<br/>   end;<br/>end rev;</pre>"}, {"lang": "PowerShell", "loc": 22, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">Function</span> Reverse<span class=\"sy0\">-</span>Words<span class=\"br0\">(</span><span class=\"re0\">$lines</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$lines</span> <span class=\"sy0\">|</span> <span class=\"kw3\">foreach</span> <span class=\"br0\">{</span> <br/>        <span class=\"re0\">$array</span> <span class=\"sy0\">=</span> <span class=\"re0\">$PSItem</span>.Split<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span> <br/>        <span class=\"re0\">$array</span><span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"re0\">$array</span>.Count<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>..<span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">-</span>join <span class=\"st0\">' '</span><br/>    <span class=\"br0\">}</span> <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"re0\">$lines</span> <span class=\"sy0\">=</span><br/><span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"ice. in say Some\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"desire of tasted I've what From\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"fire. favor who those with hold I\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"... elided paragraph last ...\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"\"</span><span class=\"sy0\">,</span><br/><span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>\u00a0<br/>Reverse<span class=\"sy0\">-</span>Words<span class=\"br0\">(</span><span class=\"re0\">$lines</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 22, "block": "<pre class=\"purebasic highlighted_source\">a$ <span class=\"sy0\">=</span>    <span class=\"st0\">\"---------- Ice and Fire ------------\"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"                                    \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"fire, in end will world the say Some\"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"ice. in say Some                    \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"desire of tasted I've what From     \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"fire. favor who those with hold I   \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"                                    \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"... elided paragraph last ...       \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"                                    \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span><br/>        <span class=\"st0\">\"Frost Robert -----------------------\"</span> <span class=\"sy0\">+</span>#CRLF$<br/>a$ <span class=\"sy0\">=</span>    <span class=\"st0\">\"Hey you, Bub!                       \"</span> <span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span>#CRLF$<span class=\"sy0\">+</span> a$<br/>\u00a0<br/><span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">For</span> p1<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw2\">CountString</span><span class=\"br0\">(</span>a$,#CRLF$<span class=\"br0\">)</span><br/>  b$<span class=\"sy0\">=</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>a$,p1,#CRLF$<span class=\"br0\">)</span>\u00a0: c$<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span>  <br/>  <span class=\"kw1\">For</span> p2<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw2\">CountString</span><span class=\"br0\">(</span>b$,<span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span>  <br/>    c$<span class=\"sy0\">=</span><span class=\"kw2\">StringField</span><span class=\"br0\">(</span>b$,p2,<span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"kw2\">Space</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>c$    <br/>  <span class=\"kw1\">Next</span>  <br/>  <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">LSet</span><span class=\"br0\">(</span>b$,<span class=\"nu0\">36</span>,<span class=\"kw2\">Chr</span><span class=\"br0\">(</span><span class=\"nu0\">32</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">\" ---&gt; \"</span><span class=\"sy0\">+</span><span class=\"kw2\">Trim</span><span class=\"br0\">(</span>c$<span class=\"br0\">)</span><span class=\"br0\">)</span>  <br/><span class=\"kw1\">Next</span><br/><span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "PHP", "loc": 29, "block": "<pre class=\"php highlighted_source\">\u00a0<br/><span class=\"kw2\">&lt;?php</span><br/>\u00a0<br/> <span class=\"kw2\">function</span> strInv <span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\u00a0<br/> \t<span class=\"re0\">$str_inv</span> <span class=\"sy0\">=</span> <span class=\"st_h\">''</span> <span class=\"sy0\">;</span> <br/>\u00a0<br/>\t <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"re0\">$s</span><span class=\"sy0\">=</span><a href=\"http://www.php.net/count\"><span class=\"kw3\">count</span></a><span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"re0\">$i</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$s</span><span class=\"sy0\">;</span><span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t \t<span class=\"re0\">$str_inv</span> <span class=\"sy0\">.=</span> <a href=\"http://www.php.net/implode\"><span class=\"kw3\">implode</span></a><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"sy0\">,</span><a href=\"http://www.php.net/array_reverse\"><span class=\"kw3\">array_reverse</span></a><span class=\"br0\">(</span><a href=\"http://www.php.net/explode\"><span class=\"kw3\">explode</span></a><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"sy0\">,</span><span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t \t<span class=\"re0\">$str_inv</span> <span class=\"sy0\">.=</span> <span class=\"st_h\">'&lt;br&gt;'</span><span class=\"sy0\">;</span><br/>\t <span class=\"br0\">}</span><br/>\u00a0<br/> \t<span class=\"kw1\">return</span> <span class=\"re0\">$str_inv</span><span class=\"sy0\">;</span><br/>\u00a0<br/> <span class=\"br0\">}</span><br/>\u00a0<br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"fire, in end will world the say Some\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"ice. in say Some\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"desire of tasted I've what From\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"fire. favor who those with hold I\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"... elided paragraph last ...\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/> <span class=\"re0\">$string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span>  <span class=\"st0\">\"Frost Robert ----------------------- \"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">echo</span> strInv<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Python", "loc": 13, "block": "<pre class=\"python highlighted_source\"> text <span class=\"sy0\">=</span> <span class=\"st0\">'''<span class=\"es0\">\\</span><br/>---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------'''</span><br/>\u00a0<br/><span class=\"kw1\">for</span> line <span class=\"kw1\">in</span> text.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\n</span>'</span><span class=\"br0\">)</span>: <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span>line.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">[</span>::-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>whack &lt;- function(s) {<br/>  paste( rev( unlist(strsplit(s, \" \"))), collapse=' ' ) }<br/>\u00a0<br/>poem &lt;- unlist( strsplit(<br/>'------------ Eldorado ----------<br/>\u00a0<br/>... here omitted lines ...<br/>\u00a0<br/>Mountains the \"Over<br/>Moon, the Of<br/>Shadow, the of Valley the Down<br/>ride,\" boldly Ride,<br/>replied,--- shade The<br/>Eldorado!\" for seek you \"If<br/>\u00a0<br/>Poe Edgar -----------------------', \"\\n\"))<br/>\u00a0<br/>for (line in poem) cat( whack(line), \"\\n\" )<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 28, "block": "<pre class=\"text highlighted_source\">#lang racket/base<br/>\u00a0<br/>(require racket/string)<br/>\u00a0<br/>(define (split-reverse str)<br/>  (string-join <br/>   (reverse <br/>    (string-split str))))<br/>\u00a0<br/>(define poem <br/>  \"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\")<br/>\u00a0<br/>\u00a0<br/>(let ([poem-port (open-input-string poem)])<br/>  (let loop ([l (read-line poem-port)])<br/>    (unless (eof-object? l)<br/>      (begin (displayln (split-reverse l))<br/>              (loop (read-line poem-port))))))<br/>\u00a0</pre>"}, {"lang": "Red", "loc": 16, "block": "<pre class=\"text highlighted_source\">Red []<br/>foreach line<br/>split <br/>{---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------} newline [<br/> print reverse split line \" \"<br/>]<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 20, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program reverses the order of tokens in a string (but not the letters).*/</span><br/>@<span class=\"sy0\">.</span>=;                    @<span class=\"sy0\">.</span>1  =  <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><br/>                        @<span class=\"sy0\">.</span>2  =  <span class=\"st0\">' '</span><br/>                        @<span class=\"sy0\">.</span>3  =  <span class=\"st0\">\"fire, in end will world the say Some\"</span><br/>                        @<span class=\"sy0\">.</span>4  =  <span class=\"st0\">\"ice. in say Some\"</span><br/>                        @<span class=\"sy0\">.</span>5  =  <span class=\"st0\">\"desire of tasted I've what From\"</span><br/>                        @<span class=\"sy0\">.</span>6  =  <span class=\"st0\">\"fire. favor who those with hold I\"</span><br/>                        @<span class=\"sy0\">.</span>7  =  <span class=\"st0\">' '</span><br/>                        @<span class=\"sy0\">.</span>8  =  <span class=\"st0\">\"... elided paragraph last ...\"</span><br/>                        @<span class=\"sy0\">.</span>9  =  <span class=\"st0\">' '</span><br/>                        @<span class=\"sy0\">.</span>10 =  <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>\u00a0<br/>  <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">while</span>  @<span class=\"sy0\">.</span>j<span class=\"sy0\">\\</span>==<span class=\"st0\">''</span>              <span class=\"coMULTI\">/*process each of the 10 lines of poem.*/</span><br/>  $=                                   <span class=\"coMULTI\">/*nullify the  $  string (the new line)*/</span><br/>     <span class=\"kw1\">do</span> k=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span>  <span class=\"kw6\">words</span><span class=\"br0\">(</span>@<span class=\"sy0\">.</span>j<span class=\"br0\">)</span>           <span class=\"coMULTI\">/*process each word in a   @.j  string.*/</span><br/>     $=<span class=\"kw6\">word</span><span class=\"br0\">(</span>@<span class=\"sy0\">.</span>j,k<span class=\"br0\">)</span> $                   <span class=\"coMULTI\">/*prepend a word to the new line  ($). */</span><br/>     <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*k*/</span>                       <span class=\"coMULTI\">/* [\u2191]  we could do this another way.  */</span><br/>\u00a0<br/>  <span class=\"kw1\">say</span> $                                <span class=\"coMULTI\">/*display the newly constructed line.  */</span><br/>  <span class=\"kw3\">end</span>      <span class=\"coMULTI\">/*j*/</span>                       <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>aList = str2list(\"<br/>---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------<br/>\")<br/>aList = str2list(cStr)<br/>for x in aList<br/>   x2 = substr(x,\" \",nl) alist2 = str2list(x2) aList2 = reverse(aList2)<br/>   for y in aList2 see y + \" \" next see nl<br/>next<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 13, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">puts</span> <span class=\"co4\">&lt;&lt;EOS<br/>---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------<br/>EOS</span><br/>  .<span class=\"me1\">each_line</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>line<span class=\"sy0\">|</span> line.<span class=\"kw3\">split</span>.<span class=\"me1\">reverse</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">}</span></pre>"}, {"lang": "Run BASIC", "loc": 22, "block": "<pre class=\"text highlighted_source\">for i = 1 to 10<br/>    read string$<br/>   j = 1<br/>   r$ = \"\"<br/>    while word$(string$,j) &lt;&gt; \"\"<br/>     r$ = word$(string$,j) + \" \" + r$<br/>     j = j + 1<br/>    WEND<br/>    print r$<br/>next<br/>end<br/>\u00a0<br/>data \"---------- Ice and Fire ------------\"<br/>data \"\"<br/>data \"fire, in end will world the say Some\"<br/>data \"ice. in say Some\"<br/>data \"desire of tasted I've what From\"<br/>data \"fire. favor who those with hold I\"<br/>data \"\"<br/>data \"... elided paragraph last ...\"<br/>data \"\"<br/>data \"Frost Robert -----------------------\"</pre>"}, {"lang": "Rust", "loc": 23, "block": "<pre class=\"text highlighted_source\">const TEXT: &amp;'static str = <br/>\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\";<br/>\u00a0<br/>fn main() {<br/>    println!(\"{}\", <br/>             TEXT.lines() // Returns iterator over lines<br/>             .map(|line|  // Applies closure to each item in iterator (for each line)<br/>                  line.split_whitespace() // Returns iterator of words<br/>                  .rev() // Reverses iterator of words<br/>                  .collect::&lt;Vec&lt;_&gt;&gt;() // Collects words into Vec&lt;&amp;str&gt;<br/>                  .join(\" \")) // Convert vector of words back into line<br/>             .collect::&lt;Vec&lt;_&gt;&gt;() // Collect lines into Vec&lt;String&gt;<br/>             .join(\"\\n\")); // Concatenate lines into String<br/>}</pre>"}, {"lang": "S-lang", "loc": 16, "block": "<pre class=\"text highlighted_source\">variable ln, in =<br/>  [\"---------- Ice and Fire ------------\",<br/>   \"fire, in end will world the say Some\",<br/>   \"ice. in say Some\",<br/>   \"desire of tasted I've what From\",<br/>   \"fire. favor who those with hold I\",<br/>   \"\",<br/>   \"... elided paragraph last ...\",<br/>   \"\",<br/>   \"Frost Robert -----------------------\"];<br/>\u00a0<br/>foreach ln (in) {<br/>  ln = strtok(ln, \" \\t\");<br/>  array_reverse(ln);<br/>  () = printf(\"%s\\n\", strjoin(ln, \" \"));<br/>}</pre>"}, {"lang": "Scala", "loc": 17, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> ReverseWords <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>\u00a0<br/>  <span class=\"st0\">\"\"</span><span class=\"st0\">\"|  ---------- Ice and Fire ------------<br/>     |<br/>     |  fire, in end will world the say Some  <br/>     |  ice. in say Some                      <br/>     |  desire of tasted I've what From       <br/>     |  fire. favor who those with hold I     <br/>     |<br/>     |  ... elided paragraph last ...         <br/>     |<br/>     |  Frost Robert -----------------------  \"</span><span class=\"st0\">\"\"</span><br/>    .<span class=\"me1\">stripMargin</span>.<span class=\"me1\">lines</span>.<span class=\"me1\">toList</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">_</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">}</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span><span class=\"sy0\">_</span>.<span class=\"me1\">reverse</span><span class=\"br0\">}</span><br/>    .<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">mkString</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    .<span class=\"me1\">foreach</span><span class=\"br0\">{</span>println<span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 16, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">for-each</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span><span class=\"kw1\">s</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>print <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>join <span class=\"br0\">(</span><span class=\"kw1\">reverse</span> <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>split <span class=\"kw1\">s</span> #<span class=\"sy0\">/</span> <span class=\"sy0\">+/</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>string<span class=\"sy0\">-</span>split<br/>    <span class=\"st0\">\"---------- Ice and Fire ------------<br/>\u00a0<br/>    fire, in end will world the say Some<br/>    ice. in say Some<br/>    desire of tasted I've what From<br/>    fire. favor who those with hold I<br/>\u00a0<br/>    ... elided paragraph last ...<br/>\u00a0<br/>    Frost Robert -----------------------\"</span><br/>    #<span class=\"sy0\">/</span><span class=\"br0\">[</span> \\r<span class=\"br0\">]</span><span class=\"sy0\">*</span>\\n<span class=\"br0\">[</span> \\r<span class=\"br0\">]</span><span class=\"sy0\">*/</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 28, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const array string: lines is [] (<br/>    \"---------- Ice and Fire ------------\",<br/>    \"\",<br/>    \"fire, in end will world the say Some\",<br/>    \"ice. in say Some\",<br/>    \"desire of tasted I've what From\",<br/>    \"fire. favor who those with hold I\",<br/>    \"\",<br/>    \"... elided paragraph last ...\",<br/>    \"\",<br/>    \"Frost Robert -----------------------\");<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var string: line is \"\";<br/>    var array string: words is 0 times \"\";<br/>    var integer: index is 0;<br/>  begin<br/>    for line range lines do<br/>      words\u00a0:= split(line, ' ');<br/>      for index range length(words) downto 1 do<br/>        write(words[index] &lt;&amp; \" \");<br/>      end for;<br/>      writeln;<br/>    end for;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 13, "block": "<pre class=\"ruby highlighted_source\">DATA.<span class=\"me1\">each</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>line<span class=\"sy0\">|</span> line.<span class=\"me1\">words</span>.<span class=\"me1\">reverse</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span>.<span class=\"me1\">say</span><span class=\"br0\">}</span>;<br/>\u00a0<br/>__DATA__<br/><span class=\"sy0\">----------</span> Ice <span class=\"kw1\">and</span> Fire <span class=\"sy0\">------------</span><br/>\u00a0<br/>fire, <span class=\"kw1\">in</span> <span class=\"kw1\">end</span> will world the say Some<br/>ice. <span class=\"kw1\">in</span> say Some<br/>desire of tasted I<span class=\"st0\">'ve what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------</span></pre>"}, {"lang": "Smalltalk", "loc": 14, "block": "<pre class=\"smalltalk highlighted_source\">\u00a0<br/><span class=\"re6\">poem</span> <span class=\"sy0\">:=</span> <span class=\"st0\">'---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I'</span><span class=\"st0\">'ve what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------'</span>.<br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"re5\">poem</span> lines collect: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">line</span> | <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re5\">line</span> splitOn: <span class=\"st0\">' '</span><span class=\"br0\">)</span> reverse<span class=\"br0\">)</span> joinUsing: <span class=\"st0\">' '</span>  <span class=\"br0\">]</span><span class=\"br0\">)</span> joinUsing: <span class=\"br0\">(</span><span class=\"re0\">String</span> cr<span class=\"br0\">)</span>.<br/>\u00a0</pre>"}, {"lang": "Sparkling", "loc": 20, "block": "<pre class=\"text highlighted_source\">let lines = split(\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\", \"\\n\");<br/>\u00a0<br/>foreach(lines, function(idx, line) {<br/>\tlet words = split(line, \" \");<br/>\tlet reverseWords = map(words, function(idx) { return words[sizeof words - idx - 1]; });<br/>\tforeach(reverseWords, function(idx, word) {<br/>\t\tprintf(\"%s \", word);<br/>\t});<br/>\u00a0<br/>\tprint();<br/>});</pre>"}, {"lang": "Swift", "loc": 21, "block": "<pre class=\"text highlighted_source\">import Foundation<br/>\u00a0<br/>// convenience extension for better clarity<br/>extension String {<br/>    var lines: [String] {<br/>        get {<br/>            return self.componentsSeparatedByCharactersInSet(NSCharacterSet.newlineCharacterSet())<br/>        }<br/>    }<br/>    var words: [String] {<br/>        get {<br/>            return self.componentsSeparatedByCharactersInSet(NSCharacterSet.whitespaceCharacterSet())<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>let input = \"---------- Ice and Fire ------------\\n\\nfire, in end will world the say Some\\nice. in say Some\\ndesire of tasted I've what From\\nfire. favor who those with hold I\\n\\n... elided paragraph last ...\\n\\nFrost Robert -----------------------\\n\"<br/>\u00a0<br/>let output = input.lines.map { $0.words.reverse().joinWithSeparator(\" \") }.joinWithSeparator(\"\\n\")<br/>\u00a0<br/>print(output)</pre>"}, {"lang": "Tcl", "loc": 17, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">set</span> lines <span class=\"br0\">{</span><br/>    <span class=\"st0\">\"---------- Ice and Fire ------------\"</span><br/>    <span class=\"st0\">\"\"</span><br/>    <span class=\"st0\">\"fire, in end will world the say Some\"</span><br/>    <span class=\"st0\">\"ice. in say Some\"</span><br/>    <span class=\"st0\">\"desire of tasted I've what From\"</span><br/>    <span class=\"st0\">\"fire. favor who those with hold I\"</span><br/>    <span class=\"st0\">\"\"</span><br/>    <span class=\"st0\">\"... elided paragraph last ...\"</span><br/>    <span class=\"st0\">\"\"</span><br/>    <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">foreach</span> line <span class=\"re0\">$lines</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw2\">join</span> <span class=\"br0\">[</span>lreverse <span class=\"br0\">[</span><span class=\"kw2\">regexp</span> -all -inline <span class=\"br0\">{</span>\\S+<span class=\"br0\">}</span> <span class=\"re0\">$line</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># This would also work for data this simple:</span><br/>    <span class=\"co1\">### puts [lreverse $line]</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "TXR", "loc": 1, "block": "<pre class=\"bash highlighted_source\">txr reverse.txr verse.txt</pre>"}, {"lang": "UNIX Shell", "loc": 17, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw1\">while</span> <span class=\"kw2\">read</span> <span class=\"re5\">-a</span> words; <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re2\">i</span>=<span class=\"co1\">${#words[@]}</span><span class=\"re5\">-1</span>; i<span class=\"sy0\">&gt;</span>=<span class=\"nu0\">0</span>; i--<span class=\"br0\">)</span><span class=\"br0\">)</span>; <span class=\"kw1\">do</span><br/>        <span class=\"kw3\">printf</span> <span class=\"st0\">\"%s \"</span> <span class=\"st0\">\"<span class=\"es3\">${words[i]}</span>\"</span><br/>    <span class=\"kw1\">done</span><br/>    <span class=\"kw3\">echo</span><br/><span class=\"kw1\">done</span> <span class=\"co2\">&lt;&lt; END<br/>---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some                   <br/>desire of tasted I've what From   <br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...       <br/>\u00a0<br/>Frost Robert ----------------------- <br/>END</span></pre>"}, {"lang": "VBA", "loc": 39, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> Main()<br/><span class=\"kw4\">Dim</span> Lines(9) <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, i&amp;<br/>    <span class=\"co1\">'Input<br/></span>    Lines(0) = <span class=\"st0\">\"------------- Ice And Fire -------------\"</span><br/>    Lines(1) = <span class=\"st0\">\"\"</span><br/>    Lines(2) = <span class=\"st0\">\"fire, in end will world the say Some\"</span><br/>    Lines(3) = <span class=\"st0\">\"ice. in say Some\"</span><br/>    Lines(4) = <span class=\"st0\">\"desire of tasted I've what From\"</span><br/>    Lines(5) = <span class=\"st0\">\"fire. favor who those with hold I\"</span><br/>    Lines(6) = <span class=\"st0\">\"\"</span><br/>    Lines(7) = <span class=\"st0\">\"... elided paragraph last ...\"</span><br/>    Lines(8) = <span class=\"st0\">\"\"</span><br/>    Lines(9) = <span class=\"st0\">\"Frost Robert -----------------------\"</span><br/>    <span class=\"co1\">'Output<br/></span>    <span class=\"kw3\">For</span> i = 0 <span class=\"kw3\">To</span> 9<br/>        Debug.<span class=\"kw4\">Print</span> ReverseLine(Lines(i), <span class=\"st0\">\" \"</span>)<br/>    <span class=\"kw3\">Next</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Private</span> <span class=\"kw2\">Function</span> ReverseLine(<span class=\"kw4\">Line</span> <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, <span class=\"kw4\">Optional</span> Separat <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/><span class=\"kw4\">Dim</span> T, R, i&amp;, j&amp;, deb&amp;, fin&amp;<br/>    <span class=\"kw3\">If</span> Len(<span class=\"kw4\">Line</span>) = 0 <span class=\"kw3\">Then</span><br/>        ReverseLine = vbNullString<br/>    <span class=\"kw3\">Else</span><br/>        <span class=\"kw3\">If</span> Separat = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span> Separat = <span class=\"st0\">\" \"</span><br/>        T = Split(<span class=\"kw4\">Line</span>, Separat)<br/>        <span class=\"kw4\">ReDim</span> R(<span class=\"kw4\">UBound</span>(T)): j = <span class=\"kw4\">LBound</span>(T)<br/>        deb = <span class=\"kw4\">UBound</span>(T): fin = deb / 2<br/>        <span class=\"kw3\">For</span> i = deb <span class=\"kw3\">To</span> fin <span class=\"kw3\">Step</span> -1<br/>            R(j) = T(i)<br/>            R(i) = T(j)<br/>            j = j + 1<br/>        <span class=\"kw3\">Next</span> i<br/>        ReverseLine = Join(R, Separat)<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span></pre>"}, {"lang": "VBScript", "loc": 41, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw4\">Dim</span> objFSO, objInFile, objOutFile<br/><span class=\"kw4\">Dim</span> srcDir, <span class=\"kw4\">line</span><br/>\u00a0<br/><span class=\"kw4\">Set</span> objFSO = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Scripting.FileSystemObject\"</span>)<br/>\u00a0<br/>srcDir = objFSO.GetParentFolderName(WScript.ScriptFullName) &amp; <span class=\"st0\">\"\\\"</span><br/>\u00a0<br/><span class=\"kw4\">Set</span> objInFile = objFSO.OpenTextFile(srcDir &amp; <span class=\"st0\">\"In.txt\"</span>,1,<span class=\"kw5\">False</span>,0)<br/>\u00a0<br/><span class=\"kw4\">Set</span> objOutFile = objFSO.OpenTextFile(srcDir &amp; <span class=\"st0\">\"Out.txt\"</span>,2,<span class=\"kw5\">True</span>,0)<br/>\u00a0<br/><span class=\"kw3\">Do</span> <span class=\"kw3\">Until</span> objInFile.AtEndOfStream<br/>\t<span class=\"kw4\">line</span> = objInFile.ReadLine<br/>\t<span class=\"kw3\">If</span> <span class=\"kw4\">line</span> = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>\t\tobjOutFile.WriteLine <span class=\"st0\">\"\"</span><br/>\t<span class=\"kw3\">Else</span><br/>\t\tobjOutFile.WriteLine Reverse_String(<span class=\"kw4\">line</span>)<br/>\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">Loop</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> Reverse_String(s)<br/>\t<span class=\"kw4\">Dim</span> arr, i<br/>\tarr = Split(s,<span class=\"st0\">\" \"</span>)<br/>\t<span class=\"kw3\">For</span> i = <span class=\"kw4\">UBound</span>(arr) <span class=\"kw3\">To</span> <span class=\"kw4\">LBound</span>(arr) <span class=\"kw3\">Step</span> -1<br/>\t\t<span class=\"kw3\">If</span> arr(i) &lt;&gt; <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>\t\t\t<span class=\"kw3\">If</span> i = <span class=\"kw4\">UBound</span>(arr) <span class=\"kw3\">Then</span><br/>\t\t\t\tReverse_String = Reverse_String &amp; arr(i)<br/>\t\t\t<span class=\"kw3\">Else</span><br/>\t\t\t\tReverse_String = Reverse_String &amp; <span class=\"st0\">\" \"</span> &amp; arr(i)<br/>\t\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t\t<span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>\t<span class=\"kw3\">Next</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0<br/>objInFile.<span class=\"kw3\">Close</span><br/>objOutFile.<span class=\"kw3\">Close</span><br/><span class=\"kw4\">Set</span> objFSO = <span class=\"kw5\">Nothing</span><br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 17, "block": "<pre class=\"text highlighted_source\">text:=Data(0,String,<br/>#&lt;&lt;&lt;<br/>\"---------- Ice and Fire ------------<br/>\u00a0<br/>fire, in end will world the say Some<br/>ice. in say Some<br/>desire of tasted I've what From<br/>fire. favor who those with hold I<br/>\u00a0<br/>... elided paragraph last ...<br/>\u00a0<br/>Frost Robert -----------------------\");<br/>#&lt;&lt;&lt;<br/>\u00a0<br/>text.pump(11,Data,fcn(s){ // process stripped lines<br/>   s.split(\" \").reverse().concat(\" \") + \"\\n\" })<br/>   .text.print();</pre>"}]}