{"task": "Execute_HQ9%2B", "blocks": [{"lang": "Ada", "loc": 48, "block": "<pre class=\"text highlighted_source\"># HQ9+ interpreter<br/>\u00a0<br/># execute an HQ9+ program in the code string - code is not case sensitive<br/>hq9\u00a0:= proc( code\u00a0:: string ) is<br/>    local hq9Accumulator\u00a0:= 0; # the HQ9+ accumulator<br/>    local hq9Operations \u00a0:=    # table of HQ9+ operations and their implemntations<br/>          [ \"q\" ~ proc() is print( code ) end<br/>          , \"h\" ~ proc() is print( \"Hello, world!\" ) end<br/>          , \"9\" ~ proc() is<br/>                      local writeBottles\u00a0:= proc( bottleCount\u00a0:: number, message\u00a0:: string ) is<br/>                                                print( bottleCount<br/>                                                     &amp; \" bottle\"<br/>                                                     &amp; if bottleCount &lt;&gt; 1 then \"s \" else \" \" fi<br/>                                                     &amp; message<br/>                                                     )<br/>                                            end;<br/>\u00a0<br/>                      for bottles from 99 to 1 by -1 do<br/>                          writeBottles( bottles, \"of beer on the wall\" );<br/>                          writeBottles( bottles, \"of beer\" );<br/>                          print( \"Take one down, pass it around,\" );<br/>                          if bottles &gt; 1 then<br/>                              writeBottles( bottles - 1, \"of beer on the wall.\" )<br/>                          fi;<br/>                          print()<br/>                      od;<br/>                      print( \"No more bottles of beer on the wall.\" )<br/>                  end<br/>          , \"+\" ~ proc() is inc hq9Accumulator, 1 end<br/>          ];<br/>    for op in lower( code ) do<br/>        if hq9Operations[ op ] &lt;&gt; null then<br/>            hq9Operations[ op ]()<br/>        else<br/>            print( '\"' &amp; op &amp; '\" not implemented' )<br/>        fi<br/>    od<br/>end;<br/>\u00a0<br/># prompt for HQ9+ code and execute it, repeating until an empty code string is entered<br/>scope<br/>    local code;<br/>    do<br/>        write( \"HQ9+&gt; \" );<br/>        code\u00a0:= io.read();<br/>        hq9( code )<br/>    until code = \"\"<br/>epocs;</pre>"}, {"lang": "Agena", "loc": 48, "block": "<pre class=\"text highlighted_source\"># HQ9+ interpreter<br/>\u00a0<br/># execute an HQ9+ program in the code string - code is not case sensitive<br/>hq9\u00a0:= proc( code\u00a0:: string ) is<br/>    local hq9Accumulator\u00a0:= 0; # the HQ9+ accumulator<br/>    local hq9Operations \u00a0:=    # table of HQ9+ operations and their implemntations<br/>          [ \"q\" ~ proc() is print( code ) end<br/>          , \"h\" ~ proc() is print( \"Hello, world!\" ) end<br/>          , \"9\" ~ proc() is<br/>                      local writeBottles\u00a0:= proc( bottleCount\u00a0:: number, message\u00a0:: string ) is<br/>                                                print( bottleCount<br/>                                                     &amp; \" bottle\"<br/>                                                     &amp; if bottleCount &lt;&gt; 1 then \"s \" else \" \" fi<br/>                                                     &amp; message<br/>                                                     )<br/>                                            end;<br/>\u00a0<br/>                      for bottles from 99 to 1 by -1 do<br/>                          writeBottles( bottles, \"of beer on the wall\" );<br/>                          writeBottles( bottles, \"of beer\" );<br/>                          print( \"Take one down, pass it around,\" );<br/>                          if bottles &gt; 1 then<br/>                              writeBottles( bottles - 1, \"of beer on the wall.\" )<br/>                          fi;<br/>                          print()<br/>                      od;<br/>                      print( \"No more bottles of beer on the wall.\" )<br/>                  end<br/>          , \"+\" ~ proc() is inc hq9Accumulator, 1 end<br/>          ];<br/>    for op in lower( code ) do<br/>        if hq9Operations[ op ] &lt;&gt; null then<br/>            hq9Operations[ op ]()<br/>        else<br/>            print( '\"' &amp; op &amp; '\" not implemented' )<br/>        fi<br/>    od<br/>end;<br/>\u00a0<br/># prompt for HQ9+ code and execute it, repeating until an empty code string is entered<br/>scope<br/>    local code;<br/>    do<br/>        write( \"HQ9+&gt; \" );<br/>        code\u00a0:= io.read();<br/>        hq9( code )<br/>    until code = \"\"<br/>epocs;</pre>"}, {"lang": "ALGOL 68", "loc": 47, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># the increment-only accumulator #</span><br/><span class=\"kw3\">INT</span> hq9accumulator <span class=\"sy1\">:=</span> 0<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># interpret a HQ9+ code string #</span><br/><span class=\"kw4\">PROC</span> hq9 <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> code <span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><br/>    <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> code<br/>    <span class=\"kw2\">DO</span><br/>        <span class=\"kw3\">CHAR</span>   op <span class=\"sy1\">=</span> code<span class=\"br0\">[</span> i <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        <span class=\"kw2\">IF</span> op <span class=\"sy1\">=</span> <span class=\"st0\">\"Q\"</span> <span class=\"kw16\">OR</span> op <span class=\"sy1\">=</span> <span class=\"st0\">\"q\"</span><br/>        <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># display the program #</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> code<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">ELIF</span> op <span class=\"sy1\">=</span> <span class=\"st0\">\"H\"</span> <span class=\"kw16\">OR</span> op <span class=\"sy1\">=</span> <span class=\"st0\">\"h\"</span><br/>        <span class=\"kw2\">THEN</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Hello, world!\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">ELIF</span> op <span class=\"sy1\">=</span> <span class=\"st0\">\"9\"</span><br/>        <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># 99 bottles of beer #</span><br/>            <span class=\"kw2\">FOR</span> bottles <span class=\"kw2\">FROM</span> 99 <span class=\"kw2\">BY</span> <span class=\"sy1\">-</span>1 <span class=\"kw2\">TO</span> 1 <span class=\"kw2\">DO</span><br/>                 <span class=\"kw3\">STRING</span> bottle count <span class=\"sy1\">=</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> bottles<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span> <span class=\"sy1\">+</span> <span class=\"kw2\">IF</span> bottles <span class=\"sy1\">&gt;</span> 1 <span class=\"kw2\">THEN</span> <span class=\"st0\">\" bottles\"</span> <span class=\"kw2\">ELSE</span> <span class=\"st0\">\" bottle\"</span> <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>                 <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> bottle count<span class=\"sy1\">,</span> <span class=\"st0\">\" of beer on the wall\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                 <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> bottle count<span class=\"sy1\">,</span> <span class=\"st0\">\" bottles of beer.\"</span><span class=\"sy1\">,</span>    <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                 <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Take one down, pass it around,\"</span><span class=\"sy1\">,</span>     <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>                 <span class=\"kw2\">IF</span> bottles <span class=\"sy1\">&gt;</span> 1<br/>                 <span class=\"kw2\">THEN</span><br/>                     <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">whole</span><span class=\"br0\">(</span> bottles <span class=\"sy1\">-</span> 1<span class=\"sy1\">,</span> 0 <span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"st0\">\" bottles of beer on the wall.\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>                 <span class=\"kw2\">FI</span><br/>            <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"No more bottles of beer on the wall.\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">ELIF</span> op <span class=\"sy1\">=</span> <span class=\"st0\">\"+\"</span><br/>        <span class=\"kw2\">THEN</span><br/>            <span class=\"coMULTI\"># increment the accumulator #</span><br/>            hq9accumulator <span class=\"sy1\">+:=</span> 1<br/>        <span class=\"kw2\">ELSE</span><br/>            <span class=\"coMULTI\"># unimplemented operation #</span><br/>            <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> op<span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"st0\">\" not implemented\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>        <span class=\"kw2\">FI</span><br/>    <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"coMULTI\"># test the interpreter #</span><br/><span class=\"kw2\">BEGIN</span><br/>    <span class=\"kw3\">STRING</span> code<span class=\"sy1\">;</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"HQ9+&gt; \"</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    read<span class=\"br0\">(</span> <span class=\"br0\">(</span> code<span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    hq9<span class=\"br0\">(</span> code <span class=\"br0\">)</span><br/><span class=\"kw2\">END</span></pre>"}, {"lang": "ALGOL W", "loc": 52, "block": "<pre class=\"text highlighted_source\">begin<br/>\u00a0<br/>    procedure writeBottles( integer value bottleCount )\u00a0;<br/>        begin<br/>            write( bottleCount, \" bottle\" );<br/>            if bottleCount not = 1 then writeon( \"s \" ) else writeon( \" \" );<br/>        end writeBottles\u00a0;<br/>\u00a0<br/>    procedure hq9 ( string(32) value code  \u00a0% code to execute\u00a0%<br/>                 \u00a0; integer    value length\u00a0% length of code \u00a0%<br/>                  )\u00a0;<br/>        for i\u00a0:= 0 until length - 1 do begin<br/>            string(1) op;<br/>\u00a0<br/>           \u00a0% the increment-only accumulator\u00a0%<br/>            integer   hq9accumulator;<br/>\u00a0<br/>            hq9accumulator\u00a0:= 0;<br/>            op            \u00a0:= code(i//1);<br/>\u00a0<br/>            if op = \"Q\" or op = \"q\" then write( code )<br/>            else if op = \"H\" OR op = \"h\" then write( \"Hello, World!\" )<br/>            else if op = \"9\" then begin<br/>               \u00a0% 99 bottles of beer\u00a0%<br/>                i_w\u00a0:= 1; s_w\u00a0:= 0;<br/>                for bottles\u00a0:= 99 step -1 until 1 do begin<br/>                    writeBottles( bottles ); writeon( \"of beer on the wall\" );<br/>                    writeBottles( bottles ); writeon( \"of beer\" );;<br/>                    write( \"Take one down, pass it around,\" );<br/>                    if bottles &gt; 1 then begin<br/>                        writeBottles( bottles - 1 ); writeon( \"of beer on the wall.\" )<br/>                    end;<br/>                    write()<br/>                end;<br/>                write( \"No more bottles of beer on the wall.\" )<br/>                end<br/>            else if op = \"+\" then hq9accumulator\u00a0:= hq9accumulator + 1<br/>            else write( \"\"\"\", op, \"\"\" not implemented\" )<br/>        end hq9\u00a0;<br/>\u00a0<br/>\u00a0<br/>   \u00a0% test the interpreter\u00a0%<br/>    begin<br/>        string(32) code;<br/>        integer    codeLength;<br/>        write( \"HQ9+&gt; \" );<br/>        read( code );<br/>        codeLength\u00a0:= 31;<br/>        while codeLength &gt;= 0 and code(codeLength//1) = \" \" do codeLength\u00a0:= codeLength - 1;<br/>        hq9( code, codeLength + 1 )<br/>    end<br/>end.</pre>"}, {"lang": "Applesoft BASIC", "loc": 19, "block": "<pre class=\"text highlighted_source\">100 INPUT \"HQ9+\u00a0: \"; I$<br/>110 LET J$ = I$ + CHR$(13)<br/>120 LET H$ = \"HELLO, WORLD!\"<br/>130 LET B$ = \"BOTTLES OF BEER\"<br/>140 LET W$ = \" ON THE WALL\"<br/>150 LET W$ = W$ + CHR$(13)<br/>160 FOR I = 1 TO LEN(I$)<br/>170     LET C$ = MID$(J$, I, 1)<br/>180     IF C$ = \"H\" THEN PRINT H$<br/>190     IF C$ = \"Q\" THEN PRINT I$<br/>200     LET A = A + (C$ = \"+\")<br/>210     IF C$ &lt;&gt; \"9\" THEN 280<br/>220     FOR B = 99 TO 1 STEP -1<br/>230         PRINT B \" \" B$ W$ B \" \" B$<br/>240         PRINT \"TAKE ONE DOWN, \";<br/>250         PRINT \"PASS IT AROUND\"<br/>260         PRINT B - 1 \" \" B$ W$<br/>270     NEXT B<br/>280 NEXT I</pre>"}, {"lang": "x86 Assembly", "loc": 134, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\u00a0<br/>;ds:si: pointer to asciiz string containing HQ9++ source code<br/>ExecuteHQ9:<br/>\tpush ax<br/>\tpush dx<br/>\tpush si<br/>\tpush di<br/>\tpush es<br/>\tpush bx<br/>\tmov bx, si<br/>\t.interpret:<br/>\t\tlodsb<br/>\t\tcmp al, 'H'<br/>\t\tje .doHelloWorld<br/>\t\tcmp al, 'Q'<br/>\t\tje .doPrintCode<br/>\t\tcmp al, '9'<br/>\t\tje .doDrinkBeer<br/>\t\tcmp al, '+'<br/>\t\tje .doCounter<br/>\t\tpop bx<br/>\t\tpop es<br/>\t\tpop di<br/>\t\tpop si<br/>\t\tpop dx<br/>\t\tpop ax<br/>\t\tret<br/>\u00a0<br/>\t.doHelloWorld:<br/>\t\tpush ds<br/>\t\tmov ax, cs<br/>\t\tmov ds, ax<br/>\t\tpush si<br/>\t\tmov si, .dataHelloWorld<br/>\t\tcall .printString<br/>\t\tpop si<br/>\t\tpop ds<br/>\t\tjmp .interpret<br/>\u00a0<br/>\t.doPrintCode:<br/>\t\tpush si<br/>\t\tmov si, bx<br/>\t\tcall .printString<br/>\t\tpop si<br/>\t\tjmp .interpret<br/>\u00a0<br/>\t.doDrinkBeer:<br/>\t\tpush ds<br/>\t\tpush si<br/>\t\tpush ax<br/>\t\tmov ax, cs<br/>\t\tmov ds, ax<br/>\t\tmov ax, 99<br/>\t\t.beer_loop:<br/>\t\t\tcall .printHexNumber<br/>\t\t\tmov si, .dataBeerSong1<br/>\t\t\tcall .printString<br/>\t\t\tcall .printHexNumber<br/>\t\t\tmov si, .dataBeerSong2<br/>\t\t\tcall .printString<br/>\t\t\tdec ax<br/>\t\t\tcall .printHexNumber<br/>\t\t\tmov si, .dataBeerSong3<br/>\t\t\tcall .printString<br/>\t\t\ttest ax, ax<br/>\t\t\tjnz .beer_loop<br/>\t\tpop ax<br/>\t\tpop si<br/>\t\tpop ds<br/>\t\tjmp .interpret<br/>\u00a0<br/>\t.doCounter:<br/>\t\tpush ax<br/>\t\tinc ax<br/>\t\tpop ax<br/>\t\tjmp .interpret<br/>\u00a0<br/>\t.printString:<br/>\t\tpush ax<br/>\t\tpush si<br/>\t .looping:<br/>\t\tlodsb<br/>\t\ttest al, al<br/>\t\tjz .done<br/>\t\tmov ah, 0Eh<br/>\t\tint 10h<br/>\t\tjmp .looping<br/>\t .done:<br/>\t\tpop si<br/>\t\tpop ax<br/>\t\tret<br/>\u00a0<br/>\t.printHexNumber:<br/>\t\t\tpusha<br/>\t\t\tpush ds<br/>\t\t\tmov ax, cs<br/>\t\t\tmov ds, ax<br/>\t\t\tpush word 0<br/>\t\t\tmov bx, ax<br/>\t\t\txor dx, dx<br/>\t\t\tmov cx, 4r<br/>\t .convert_loop:<br/>\t\t\tmov ax, bx<br/>\t\t\tand ax, 0Fh<br/>\t\t\tcmp ax, 9<br/>\t\t\tja  .greater_than_9<br/>\t\t\tadd ax, '0'<br/>\t\t\tjmp .converted<br/>\t .greater_than_9:<br/>\t\t\tadd ax, 'A'-0Ah<br/>\t .converted:<br/>\t\t\tpush ax<br/>\t\t\tshr bx, 4<br/>\t\t\tdec cx<br/>\t\t\tjnz .convert_loop<br/>\t .popoff:<br/>\t\t\tpop ax<br/>\t\t\tcmp ax, 0<br/>\t\t\tje .done<br/>\t\t\tmov ah, 0Eh<br/>\t\t\tint 10h<br/>\t\t\tjmp .popoff<br/>\t\t.done:<br/>\t\t\tpop ds<br/>\t\t\tpopa<br/>\t\t\tret<br/>\u00a0<br/>\t.dataHelloWorld: db \"Hello World!\", 0<br/>\t.dataBeerSong1: db \" bottles of beer on the wall \", 0<br/>\t.dataBeerSong2: db \" bottles of beer\", 13, 10, \"Take one down, pass it around \"<br/>\t.dataBeerSong3: db 0, \" bottles of beer on the wall\", 0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 28, "block": "<pre class=\"autohotkey highlighted_source\"><span class=\"co1\">; http://www.autohotkey.com/forum/viewtopic.php?p=356268#356268</span><br/>\u00a0<br/>testCode <span class=\"sy0\">:=</span> <span class=\"st0\">\"hq9+HqQ+Qq\"</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% RunHQ9Plus<span class=\"br0\">(</span>testCode<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;---------------------------------</span><br/>\u00a0<br/>RunHQ9Plus<span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/commands/Input.htm\"><span class=\"kw3\">input</span></a><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> Parse<span class=\"sy0\">,</span> <a href=\"http://www.autohotkey.com/docs/commands/Input.htm\"><span class=\"kw3\">input</span></a><br/>    <span class=\"kw1\">If</span> <span class=\"br0\">(</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"+\"</span> <span class=\"br0\">)</span><br/>      acc<span class=\"sy0\">++</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"H\"</span> <span class=\"br0\">)</span><br/>      output <span class=\"sy0\">.=</span> <span class=\"st0\">\"Hello, world!`n\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"Q\"</span> <span class=\"br0\">)</span><br/>      output <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/commands/Input.htm\"><span class=\"kw3\">input</span></a> <span class=\"st0\">\"`n\"</span><br/>    <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_LoopField\"><span class=\"kw2\">A_LoopField</span></a> <span class=\"sy0\">=</span> <span class=\"st0\">\"9\"</span> <span class=\"br0\">)</span><br/>      <a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">99</span><br/>      <span class=\"br0\">{</span><br/>        <span class=\"co1\">; following 4 lines could be only 1 long line</span><br/>        output <span class=\"sy0\">.=</span> <span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">)</span> <span class=\"st0\">\" bottles of beer on the wall`n\"</span><br/>        output <span class=\"sy0\">.=</span> <span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">-</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">)</span> <span class=\"st0\">\" bottles of beer`n\"</span><br/>        output <span class=\"sy0\">.=</span> <span class=\"st0\">\"Take one down, pass it around`n\"</span><br/>        output <span class=\"sy0\">.=</span> <span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"sy0\">-</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"br0\">)</span> <span class=\"st0\">\" bottles of beer on the wall`n`n\"</span><br/>      <span class=\"br0\">}</span><br/>  <span class=\"kw1\">Return</span> output<br/><span class=\"br0\">}</span></pre>"}, {"lang": "BBC BASIC", "loc": 22, "block": "<pre class=\"text highlighted_source\">      PROChq9plus(\"hq9+HqQ+Qq\")<br/>      END<br/>\u00a0<br/>      DEF PROChq9plus(code$)<br/>      LOCAL accumulator%, i%, bottles%<br/>      FOR i% = 1 TO LEN(code$)<br/>        CASE MID$(code$, i%, 1) OF<br/>          WHEN \"h\",\"H\": PRINT \"Hello, world!\"<br/>          WHEN \"q\",\"Q\": PRINT code$<br/>          WHEN \"9\":<br/>            bottles% = 99<br/>            WHILE bottles%<br/>              PRINT\u00a0;bottles% \" bottles of beer on the wall, \";<br/>              PRINT\u00a0;bottles% \" bottles of beer,\"<br/>              bottles% -= 1<br/>              PRINT \"Take one down, pass it around, \";<br/>              PRINT\u00a0;bottles% \" bottles of beer on the wall.\"<br/>            ENDWHILE<br/>          WHEN \"+\": accumulator% += 1<br/>        ENDCASE<br/>      NEXT i%<br/>      ENDPROC</pre>"}, {"lang": "C", "loc": 35, "block": "<pre class=\"c highlighted_source\"><span class=\"kw4\">void</span> runCode<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>code<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> c_len <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html\"><span class=\"kw3\">strlen</span></a><span class=\"br0\">(</span>code<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> bottles<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">unsigned</span> accumulator<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>c_len<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">switch</span><span class=\"br0\">(</span>code<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy0\">:</span><br/>                <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> code<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'H'</span><span class=\"sy0\">:</span><br/>                <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Hello, world!<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'9'</span><span class=\"sy0\">:</span><br/>                <span class=\"co1\">//Nice bottles song alg. from RC\u00a0:)</span><br/>                bottles <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>                    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d bottles of beer on the wall<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> bottles<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d bottles of beer<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> bottles<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Take one down, pass it around<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%d bottles of beer on the wall<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">--</span>bottles<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span> bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'+'</span><span class=\"sy0\">:</span><br/>                <span class=\"co1\">//Am I the only one finding this one weird?\u00a0:o</span><br/>                accumulator<span class=\"sy0\">++;</span><br/>                <span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "C++", "loc": 35, "block": "<pre class=\"cpp highlighted_source\"><span class=\"kw4\">void</span> runCode<span class=\"br0\">(</span>string code<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> c_len <span class=\"sy1\">=</span> code.<span class=\"me1\">length</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">unsigned</span> accumulator<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/>    <span class=\"kw4\">int</span> bottles<span class=\"sy4\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy1\">=</span><span class=\"nu0\">0</span><span class=\"sy4\">;</span>i<span class=\"sy1\">&lt;</span>c_len<span class=\"sy4\">;</span>i<span class=\"sy2\">++</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">switch</span><span class=\"br0\">(</span>code<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy4\">:</span><br/>                <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> code <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'H'</span><span class=\"sy4\">:</span><br/>                <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Hello, world!\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'9'</span><span class=\"sy4\">:</span><br/>                <span class=\"co1\">//Nice bottles song alg. from RC\u00a0:)</span><br/>                bottles <span class=\"sy1\">=</span> <span class=\"nu0\">99</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>                    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> bottles <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" bottles of beer on the wall\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>                    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> bottles <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" bottles of beer\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>                    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Take one down, pass it around\"</span> <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>                    <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"sy2\">--</span>bottles <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" bottles of beer on the wall\"</span> <span class=\"sy1\">&lt;&lt;</span> endl <span class=\"sy1\">&lt;&lt;</span> endl<span class=\"sy4\">;</span><br/>                <span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span> bottles <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'+'</span><span class=\"sy4\">:</span><br/>                <span class=\"co1\">//Am I the only one finding this one weird?\u00a0:o</span><br/>                accumulator<span class=\"sy2\">++</span><span class=\"sy4\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span></pre>"}, {"lang": "C#", "loc": 23, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Collections.Generic</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Linq</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> RunCode<span class=\"br0\">(</span><span class=\"kw4\">string</span> code<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> accumulator <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">var</span> opcodes <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Dictionary<span class=\"sy0\">&lt;</span><span class=\"kw4\">char</span>, Action<span class=\"sy0\">&gt;</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"br0\">{</span><span class=\"st0\">'H'</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello, World!\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">'Q'</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>code<span class=\"br0\">)</span> <span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">'9'</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Enumerable<span class=\"sy0\">.</span><span class=\"me1\">Range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Reverse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw1\">Select</span><span class=\"br0\">(</span>n <span class=\"sy0\">=&gt;</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Format</span><span class=\"br0\">(</span><span class=\"st0\">\"{0} bottles of beer on the wall<span class=\"es0\">\\n</span>{0} bottles of beer<span class=\"es0\">\\n</span>Take one down, pass it around<span class=\"es0\">\\n</span>{1} bottles of beer on the wall<span class=\"es0\">\\n</span>\"</span>, n, n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Aggregate</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a,b<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> a <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span> b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span>,<br/>            <span class=\"br0\">{</span><span class=\"st0\">'+'</span>, <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> accumulator<span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">foreach</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> c <span class=\"kw1\">in</span> code<span class=\"br0\">)</span><br/>            opcodes<span class=\"br0\">[</span>c<span class=\"br0\">]</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Ceylon", "loc": 38, "block": "<pre class=\"text highlighted_source\">shared void run() {<br/>\u00a0<br/>\tvoid eval(String code) {<br/>\u00a0<br/>\t\tvariable value accumulator = 0;<br/>\u00a0<br/>\t\tfor(c in code.trimmed.lowercased) {<br/>\t\t\tswitch(c)<br/>\t\t\tcase('h') {<br/>\t\t\t\tprint(\"Hello, world!\");<br/>\t\t\t}<br/>\t\t\tcase('q') {<br/>\t\t\t\tprint(code);<br/>\t\t\t}<br/>\t\t\tcase('9') {<br/>\t\t\t\tfunction bottles(Integer i) =&gt;<br/>\t\t\t\t\t\tswitch(i)<br/>\t\t\t\t\t\tcase(0) \"No bottles\"<br/>\t\t\t\t\t\tcase(1) \"One bottle\"<br/>\t\t\t\t\t\telse \"``i`` bottles\";<br/>\t\t\t\tfor(i in 99..1) {<br/>\t\t\t\t\tprint(\"``bottles(i)`` of beer on the wall,<br/>\t\t\t\t\t       ``bottles(i)`` of beer,<br/>\t\t\t\t\t       take one down and pass it around,<br/>\t\t\t\t\t       ``bottles(i - 1)`` of beer on the wall!\");<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t\tcase('+') {<br/>\t\t\t\taccumulator++;<br/>\t\t\t}<br/>\t\t\telse {<br/>\t\t\t\tprint(\"syntax error\");<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>\u00a0<br/>\teval(\"hq9+\");<br/>}</pre>"}, {"lang": "Clojure", "loc": 23, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">ns</span> anthony<span class=\"sy0\">.</span>random<span class=\"sy0\">.</span>hq9plus<br/>  <span class=\"br0\">(</span>:<span class=\"me1\">require</span> <span class=\"br0\">[</span>clojure<span class=\"sy0\">.</span>string\u00a0:<span class=\"me1\">as</span> <span class=\"kw1\">str</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> bottles <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">loop</span> <span class=\"br0\">[</span>bottle <span class=\"nu0\">99</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">==</span> bottle <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">do</span><br/>        <span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">str</span> bottle <span class=\"st0\">\" bottles of beer on the wall\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">str</span> bottle <span class=\"st0\">\" bottles of beer\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>println <span class=\"st0\">\"Take one down, pass it around\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">str</span> bottle <span class=\"st0\">\" bottles of beer on the wall\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">recur</span> <span class=\"br0\">(</span><span class=\"kw1\">dec</span> bottle<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defn</span> execute<span class=\"sy0\">-</span>hq9plus <span class=\"br0\">[</span><span class=\"sy0\">&amp;</span> commands<span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>accumulator <span class=\"br0\">(</span>atom <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">loop</span> <span class=\"br0\">[</span>pointer <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">condp</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>nth commands pointer<span class=\"br0\">)</span><br/>        \\H <span class=\"br0\">(</span>println <span class=\"st0\">\"Hello, world!\"</span><span class=\"br0\">)</span><br/>        \\Q <span class=\"br0\">(</span>println <span class=\"br0\">(</span><span class=\"kw1\">str</span><span class=\"sy0\">/</span>join commands<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        \\<span class=\"nu0\">9</span> <span class=\"br0\">(</span>bottles<span class=\"br0\">)</span><br/>        \\<span class=\"sy0\">+</span> <span class=\"br0\">(</span>reset<span class=\"sy0\">!</span> accumulator <span class=\"br0\">(</span><span class=\"kw1\">inc</span> @accumulator<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">if-not</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">inc</span> pointer<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">count</span> commands<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">recur</span> <span class=\"br0\">(</span><span class=\"kw1\">inc</span> pointer<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 44, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> Exec-Hq9<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       LOCAL-STORAGE <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">78</span>  Code-<span class=\"kw4\">Length</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">256</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  i           <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  accumulator <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  bottles     <span class=\"kw3\">PIC</span> <span class=\"nu0\">999</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">LINKAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  hq9-<span class=\"kw1\">code</span>    <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span>Code-<span class=\"kw4\">Length</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span> <span class=\"kw3\">USING</span> <span class=\"kw3\">BY</span> <span class=\"kw3\">VALUE</span> hq9-<span class=\"kw1\">code</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">VARYING</span> i <span class=\"kw3\">FROM</span> <span class=\"nu0\">1</span> <span class=\"kw3\">BY</span> <span class=\"nu0\">1</span> <span class=\"kw2\">UNTIL</span> Code-<span class=\"kw4\">Length</span> &lt; i<br/>               <span class=\"kw2\">EVALUATE</span> hq9-<span class=\"kw1\">code</span> <span class=\"br0\">(</span>i:<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                   <span class=\"kw3\">WHEN</span> <span class=\"st0\">\"Q\"</span><br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>hq9-<span class=\"kw1\">code</span><span class=\"br0\">)</span><br/>\u00a0<br/>                   <span class=\"kw3\">WHEN</span> <span class=\"st0\">\"H\"</span><br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Hello, World!\"</span><br/>\u00a0<br/>                   <span class=\"kw3\">WHEN</span> <span class=\"st0\">\"9\"</span><br/>                       <span class=\"kw2\">MOVE</span> <span class=\"nu0\">99</span> <span class=\"kw2\">TO</span> bottles<br/>                       <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">UNTIL</span> bottles <span class=\"sy0\">=</span> <span class=\"kw3\">ZERO</span><br/>                           <span class=\"kw2\">DISPLAY</span><br/>                               bottles <span class=\"st0\">\" bottles of beer on the wall\"</span><br/>                           <span class=\"kw2\">DISPLAY</span> bottles <span class=\"st0\">\" bottles of beer\"</span><br/>                           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Take one down, pass it around\"</span><br/>                           <span class=\"kw3\">SUBTRACT</span> <span class=\"nu0\">1</span> <span class=\"kw3\">FROM</span> bottles<br/>                           <span class=\"kw2\">DISPLAY</span><br/>                               bottles <span class=\"st0\">\" bottles of beer on the wall\"</span><br/>                           <span class=\"kw2\">DISPLAY</span> <span class=\"kw3\">SPACE</span><br/>                       END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>                   <span class=\"kw3\">WHEN</span> <span class=\"st0\">\"+\"</span><br/>                       <span class=\"kw2\">ADD</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> accumulator<br/>               END-<span class=\"kw2\">EVALUATE</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 36, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>args.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span><br/>        args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">countchars</span><span class=\"br0\">(</span><span class=\"st0\">\"hHqQ9+\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writeln<span class=\"br0\">(</span><span class=\"st0\">\"Not valid HQ9+ code.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">ulong</span> accumulator<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> c<span class=\"sy0\">;</span> args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">final</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy0\">,</span> <span class=\"st0\">'q'</span><span class=\"sy0\">:</span><br/>                writeln<span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'H'</span><span class=\"sy0\">,</span> <span class=\"st0\">'h'</span><span class=\"sy0\">:</span><br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Hello, world!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'9'</span><span class=\"sy0\">:</span><br/>                <span class=\"kw4\">int</span> bottles <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">while</span> <span class=\"br0\">(</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    writeln<span class=\"br0\">(</span>bottles<span class=\"sy0\">,</span> <span class=\"st0\">\" bottles of beer on the wall,\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    writeln<span class=\"br0\">(</span>bottles<span class=\"sy0\">,</span> <span class=\"st0\">\" bottles of beer.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Take one down, pass it around,\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                        writeln<span class=\"br0\">(</span>bottles<span class=\"sy0\">,</span><br/>                                <span class=\"st0\">\" bottles of beer on the wall.<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"1 bottle of beer on the wall.<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'+'</span><span class=\"sy0\">:</span><br/>                accumulator<span class=\"sy0\">++;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "D", "loc": 36, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>args.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span><br/>        args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span> <span class=\"sy0\">!=</span> args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">countchars</span><span class=\"br0\">(</span><span class=\"st0\">\"hHqQ9+\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writeln<span class=\"br0\">(</span><span class=\"st0\">\"Not valid HQ9+ code.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">ulong</span> accumulator<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> c<span class=\"sy0\">;</span> args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">final</span> <span class=\"kw1\">switch</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy0\">,</span> <span class=\"st0\">'q'</span><span class=\"sy0\">:</span><br/>                writeln<span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'H'</span><span class=\"sy0\">,</span> <span class=\"st0\">'h'</span><span class=\"sy0\">:</span><br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"Hello, world!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'9'</span><span class=\"sy0\">:</span><br/>                <span class=\"kw4\">int</span> bottles <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">while</span> <span class=\"br0\">(</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                    writeln<span class=\"br0\">(</span>bottles<span class=\"sy0\">,</span> <span class=\"st0\">\" bottles of beer on the wall,\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    writeln<span class=\"br0\">(</span>bottles<span class=\"sy0\">,</span> <span class=\"st0\">\" bottles of beer.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    writeln<span class=\"br0\">(</span><span class=\"st0\">\"Take one down, pass it around,\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>                        writeln<span class=\"br0\">(</span>bottles<span class=\"sy0\">,</span><br/>                                <span class=\"st0\">\" bottles of beer on the wall.<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                writeln<span class=\"br0\">(</span><span class=\"st0\">\"1 bottle of beer on the wall.<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">'+'</span><span class=\"sy0\">:</span><br/>                accumulator<span class=\"sy0\">++;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "DWScript", "loc": 28, "block": "<pre class=\"text highlighted_source\">procedure RunCode(code\u00a0: String);<br/>var<br/>   i\u00a0: Integer;<br/>   accum, bottles\u00a0: Integer;<br/>begin<br/>   for i:=1 to Length(code) do begin<br/>      case code[i] of<br/>         'Q', 'q'\u00a0: PrintLn(code);<br/>         'H', 'h'\u00a0: PrintLn('Hello, world!');<br/>         '9'\u00a0: begin<br/>            bottles:=99;<br/>            while bottles&gt;1 do begin<br/>               Print(bottles); PrintLn(' bottles of beer on the wall,');<br/>               Print(bottles); PrintLn(' bottles of beer.');<br/>               PrintLn('Take one down, pass it around,');<br/>               Dec(bottles);<br/>               if bottles&gt;1 then begin<br/>                  Print(bottles); PrintLn(' bottles of beer on the wall.'#13#10);<br/>               end;<br/>            end;<br/>            PrintLn('1 bottle of beer on the wall.');<br/>         end;<br/>         '+'\u00a0: Inc(accum);<br/>      else<br/>         PrintLn('Syntax Error');<br/>      end;<br/>   end;<br/>end;</pre>"}, {"lang": "E", "loc": 21, "block": "<pre class=\"text highlighted_source\">open unsafe.console char unsafe.cell imperative<br/>\u00a0<br/>eval src = eval' src<br/>     where eval' [] = ()<br/>           eval' (x::xs) | be 'H' = h() `seq` eval' xs<br/>                         | be 'Q' = q() `seq` eval' xs<br/>                         | be '9' = n() `seq` eval' xs<br/>                         | be '+' = p() `seq` eval' xs<br/>                         | else = fail (\"Unrecognized \" ++ x)<br/>                         where r = ref 0<br/>                               be c = char.upper x == c<br/>                               h () = writen \"Hello, world!\"<br/>                               q () = writen src<br/>                               p () = r.+<br/>                               n () = bottles [99,98..1]<br/>                                  where bottles [] = ()<br/>                                        bottles (x::xs) = rec write <br/>                                          (show x) \" bottles of beer of the wall\\r\\n\"<br/>                                          (show x) \" bottles of beer\\r\\n\"<br/>                                          \"Take one down, pass it around\\r\\n\"<br/>                                          `seq` bottles xs</pre>"}, {"lang": "Ela", "loc": 21, "block": "<pre class=\"text highlighted_source\">open unsafe.console char unsafe.cell imperative<br/>\u00a0<br/>eval src = eval' src<br/>     where eval' [] = ()<br/>           eval' (x::xs) | be 'H' = h() `seq` eval' xs<br/>                         | be 'Q' = q() `seq` eval' xs<br/>                         | be '9' = n() `seq` eval' xs<br/>                         | be '+' = p() `seq` eval' xs<br/>                         | else = fail (\"Unrecognized \" ++ x)<br/>                         where r = ref 0<br/>                               be c = char.upper x == c<br/>                               h () = writen \"Hello, world!\"<br/>                               q () = writen src<br/>                               p () = r.+<br/>                               n () = bottles [99,98..1]<br/>                                  where bottles [] = ()<br/>                                        bottles (x::xs) = rec write <br/>                                          (show x) \" bottles of beer of the wall\\r\\n\"<br/>                                          (show x) \" bottles of beer\\r\\n\"<br/>                                          \"Take one down, pass it around\\r\\n\"<br/>                                          `seq` bottles xs</pre>"}, {"lang": "Erlang", "loc": 58, "block": "<pre class=\"erlang highlighted_source\"><span class=\"co1\">% hq9+ Erlang implementation (JWL)</span><br/><span class=\"co1\">% http://www.erlang.org/</span><br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>hq9p<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>main<span class=\"sy3\">/</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">%% bottle helper routine</span><br/><span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"No more bottles of beer \"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"1 bottle of beer \"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">N</span> <span class=\"sy3\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~w bottles of beer \"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">N</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">%% Implementation of instructions\t</span><br/><span class=\"re3\">beer</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"on the wall~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"on the wall~nGo to the store and buy some more~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"99 bottles of beer on the wall.~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">beer</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"on the wall~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~nTake one down and pass it around~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">bottle</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"on the wall~n~n\"</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">beer</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">hello</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello world!~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">prog</span><span class=\"br0\">(</span><span class=\"re5\">Prog</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"~s~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Prog</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">inc</span><span class=\"br0\">(</span><span class=\"re5\">Acc</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re5\">Acc</span><span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"co1\">%% Interpreter\t</span><br/><span class=\"re3\">execute</span><span class=\"br0\">(</span><span class=\"re5\">Instruction</span><span class=\"sy1\">,</span> <span class=\"re5\">Prog</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"kw1\">case</span> <span class=\"re5\">Instruction</span> <span class=\"kw1\">of</span><br/>    <span class=\"re6\">$H</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">hello</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"sy1\">;</span><br/>    <span class=\"re6\">$Q</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">prog</span><span class=\"br0\">(</span><span class=\"re5\">Prog</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"sy1\">;</span><br/>    <span class=\"re6\">$9</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">beer</span><span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"sy1\">;</span><br/>    $<span class=\"sy3\">+</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">inc</span><span class=\"br0\">(</span><span class=\"re5\">Acc</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>       <span class=\"re5\">_</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid instruction: ~c~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Instruction</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"re5\">_Prog</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re5\">Acc</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"re5\">Instruction</span> | <span class=\"re5\">Rest</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"re5\">Prog</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re5\">NewAcc</span> <span class=\"sy3\">=</span> <span class=\"re3\">execute</span><span class=\"br0\">(</span><span class=\"re5\">Instruction</span><span class=\"sy1\">,</span> <span class=\"re5\">Prog</span><span class=\"sy1\">,</span> <span class=\"re5\">Acc</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"re5\">Rest</span><span class=\"sy1\">,</span> <span class=\"re5\">Prog</span><span class=\"sy1\">,</span> <span class=\"re5\">NewAcc</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"re5\">Prog</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>  <span class=\"re5\">Compiled</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">to_upper</span><span class=\"br0\">(</span><span class=\"re5\">Prog</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>  <span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"re5\">Compiled</span><span class=\"sy1\">,</span> <span class=\"re5\">Prog</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 11, "block": "<pre class=\"text highlighted_source\">variable accumulator<br/>: H cr .\" Hello, world!\"\u00a0;<br/>: Q cr 2dup type\u00a0;<br/>: 9 99 verses\u00a0;  \\ http://rosettacode.org/wiki/99_Bottles_of_Beer#Forth<br/>: + 1 accumulator +!\u00a0;<br/>\u00a0<br/>: hq9+ ( \"code\" -- )<br/>  parse-word 2dup bounds\u00a0?do<br/>    i 1 [ get-current literal ] search-wordlist<br/>    if execute else true abort\" invalid HQ9+ instruction\"<br/>  then loop 2drop\u00a0;</pre>"}, {"lang": "Fortran", "loc": 1, "block": "<pre class=\"fortran highlighted_source\"><span class=\"st0\">\"bottle\"</span> <span class=\"sy0\">//</span> <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>B.<span class=\"me1\">NE</span>.1<span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">\"s\"</span> FI <span class=\"sy0\">//</span> <span class=\"st0\">\" of beer\"</span></pre>"}, {"lang": "Go", "loc": 41, "block": "<pre class=\"text highlighted_source\">module hq9plus<br/>\u00a0<br/>function main = |args| {<br/>  var accumulator = 0<br/>  let source = readln(\"please enter your source code: \")<br/>  foreach ch in source: chars() {<br/>    case {<br/>      when ch == 'h' or ch == 'H' {<br/>        println(\"Hello, world!\")<br/>      }<br/>      when ch == 'q' or ch == 'Q' {<br/>  \t\t\tprintln(source)<br/>  \t\t}<br/>  \t\twhen ch == '9' {<br/>        ninety9Bottles()<br/>  \t\t}<br/>      when ch == '+' {<br/>        accumulator = accumulator + 1<br/>      }<br/>      otherwise {<br/>        println(\"syntax error\")<br/>      }<br/>    }<br/>  }<br/>}<br/>\u00a0<br/>function bottles = |amount| -&gt; match {<br/>  when amount == 1 then \"One bottle\"<br/>  when amount == 0 then \"No bottles\"<br/>  otherwise amount + \" bottles\"<br/>}<br/>\u00a0<br/>function ninety9Bottles = {<br/>  foreach n in [99..0]: decrementBy(1) {<br/>    println(bottles(n) + \" of beer on the wall,\")<br/>    println(bottles(n) + \" of beer!\")<br/>    println(\"Take one down, pass it around,\")<br/>    println(bottles(n - 1) + \" of beer on the wall!\")<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Golo", "loc": 41, "block": "<pre class=\"text highlighted_source\">module hq9plus<br/>\u00a0<br/>function main = |args| {<br/>  var accumulator = 0<br/>  let source = readln(\"please enter your source code: \")<br/>  foreach ch in source: chars() {<br/>    case {<br/>      when ch == 'h' or ch == 'H' {<br/>        println(\"Hello, world!\")<br/>      }<br/>      when ch == 'q' or ch == 'Q' {<br/>  \t\t\tprintln(source)<br/>  \t\t}<br/>  \t\twhen ch == '9' {<br/>        ninety9Bottles()<br/>  \t\t}<br/>      when ch == '+' {<br/>        accumulator = accumulator + 1<br/>      }<br/>      otherwise {<br/>        println(\"syntax error\")<br/>      }<br/>    }<br/>  }<br/>}<br/>\u00a0<br/>function bottles = |amount| -&gt; match {<br/>  when amount == 1 then \"One bottle\"<br/>  when amount == 0 then \"No bottles\"<br/>  otherwise amount + \" bottles\"<br/>}<br/>\u00a0<br/>function ninety9Bottles = {<br/>  foreach n in [99..0]: decrementBy(1) {<br/>    println(bottles(n) + \" of beer on the wall,\")<br/>    println(bottles(n) + \" of beer!\")<br/>    println(\"Take one down, pass it around,\")<br/>    println(bottles(n - 1) + \" of beer on the wall!\")<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Haskell", "loc": 21, "block": "<pre class=\"javascript highlighted_source\"><span class=\"co1\">// live demo: http://try.haxe.org/#2E7D4</span><br/><span class=\"kw1\">static</span> <span class=\"kw1\">function</span> hq9plus<span class=\"br0\">(</span>code<span class=\"sy0\">:</span><span class=\"kw4\">String</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw4\">String</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> out<span class=\"sy0\">:</span><span class=\"kw4\">String</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">var</span> acc<span class=\"sy0\">:</span>Int <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>position <span class=\"kw1\">in</span> <span class=\"nu0\">0</span> ... <span class=\"me1\">code</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span> <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>code.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>position<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"H\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"h\"</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> <span class=\"st0\">\"Hello, World!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"Q\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"q\"</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> <span class=\"st0\">'$code<span class=\"es0\">\\n</span>'</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"9\"</span><span class=\"sy0\">:</span><br/>\t\t\t<span class=\"kw1\">var</span> quantity<span class=\"sy0\">:</span>Int <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><span class=\"sy0\">;</span><br/>\t\t\twhile <span class=\"br0\">(</span>quantity <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\tout <span class=\"sy0\">+=</span> <span class=\"st0\">'$quantity bottles of beer on the wall, $quantity bottles of beer.<span class=\"es0\">\\n</span>'</span><span class=\"sy0\">;</span><br/>\t\t\t\tout <span class=\"sy0\">+=</span> <span class=\"st0\">'Take one down and pass it around, ${--quantity} bottles of beer.<span class=\"es0\">\\n</span>'</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\tout <span class=\"sy0\">+=</span> <span class=\"st0\">\"1 bottle of beer on the wall, 1 bottle of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"Take one down and pass it around, no more bottles of beer on the wall.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"No more bottles of beer on the wall, no more bottles of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"Go to the store and buy some more, 99 bottles of beer on the wall.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"+\"</span><span class=\"sy0\">:</span> acc<span class=\"sy0\">++;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> out<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Haxe", "loc": 21, "block": "<pre class=\"javascript highlighted_source\"><span class=\"co1\">// live demo: http://try.haxe.org/#2E7D4</span><br/><span class=\"kw1\">static</span> <span class=\"kw1\">function</span> hq9plus<span class=\"br0\">(</span>code<span class=\"sy0\">:</span><span class=\"kw4\">String</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw4\">String</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> out<span class=\"sy0\">:</span><span class=\"kw4\">String</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">var</span> acc<span class=\"sy0\">:</span>Int <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>position <span class=\"kw1\">in</span> <span class=\"nu0\">0</span> ... <span class=\"me1\">code</span>.<span class=\"me1\">length</span><span class=\"br0\">)</span> <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>code.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>position<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"H\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"h\"</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> <span class=\"st0\">\"Hello, World!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"Q\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"q\"</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> <span class=\"st0\">'$code<span class=\"es0\">\\n</span>'</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"9\"</span><span class=\"sy0\">:</span><br/>\t\t\t<span class=\"kw1\">var</span> quantity<span class=\"sy0\">:</span>Int <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><span class=\"sy0\">;</span><br/>\t\t\twhile <span class=\"br0\">(</span>quantity <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\tout <span class=\"sy0\">+=</span> <span class=\"st0\">'$quantity bottles of beer on the wall, $quantity bottles of beer.<span class=\"es0\">\\n</span>'</span><span class=\"sy0\">;</span><br/>\t\t\t\tout <span class=\"sy0\">+=</span> <span class=\"st0\">'Take one down and pass it around, ${--quantity} bottles of beer.<span class=\"es0\">\\n</span>'</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\tout <span class=\"sy0\">+=</span> <span class=\"st0\">\"1 bottle of beer on the wall, 1 bottle of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"Take one down and pass it around, no more bottles of beer on the wall.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"No more bottles of beer on the wall, no more bottles of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>\t\t\t\t<span class=\"st0\">\"Go to the store and buy some more, 99 bottles of beer on the wall.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"+\"</span><span class=\"sy0\">:</span> acc<span class=\"sy0\">++;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> out<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Inform 7", "loc": 23, "block": "<pre class=\"text highlighted_source\">HQ9+ is a room.<br/>\u00a0<br/>After reading a command:<br/>\tinterpret the player's command;<br/>\treject the player's command.<br/>\u00a0<br/>To interpret (code - indexed text):<br/>\tlet accumulator be 0;<br/>\trepeat with N running from 1 to the number of characters in code:<br/>\t\tlet C be character number N in code in upper case;<br/>\t\tif C is \"H\":<br/>\t\t\tsay \"Hello, world!\";<br/>\t\totherwise if C is \"Q\":<br/>\t\t\tsay \"[code][line break]\";<br/>\t\totherwise if C is \"9\":<br/>\t\t\trepeat with iteration running from 1 to 99:<br/>\t\t\t\tlet M be 100 - iteration;<br/>\t\t\t\tsay \"[M] bottle[s] of beer on the wall[line break]\";<br/>\t\t\t\tsay \"[M] bottle[s] of beer[line break]\";<br/>\t\t\t\tsay \"Take one down, pass it around[line break]\";<br/>\t\t\t\tsay \"[M - 1] bottle[s] of beer on the wall[paragraph break]\";<br/>\t\totherwise if C is \"+\":<br/>\t\t\tincrease accumulator by 1.</pre>"}, {"lang": "Icon and Unicon", "loc": 27, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>A<span class=\"br0\">)</span><br/><span class=\"kw1\">repeat</span> <span class=\"kw4\">writes</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter HQ9+ code: \"</span><span class=\"br0\">)</span> <span class=\"sy1\">&amp;</span> HQ9<span class=\"br0\">(</span><span class=\"kw4\">get</span><span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy1\">|</span><span class=\"kw4\">read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">|</span><span class=\"kw1\">break</span><span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">procedure</span> HQ9<span class=\"br0\">(</span>code<span class=\"br0\">)</span><br/><span class=\"kw2\">static</span> bnw<span class=\"sy1\">,</span>bcr<br/><span class=\"kw1\">initial</span> <span class=\"br0\">{</span>  <span class=\"co1\"># number matching words and line feeds for the b-th bottle </span><br/>   bnw   <span class=\"sy1\">:=</span> <span class=\"kw4\">table</span><span class=\"br0\">(</span><span class=\"st0\">\" bottles\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> bnw<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"st0\">\" bottle\"</span><span class=\"sy1\">;</span> bnw<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">:=</span> <span class=\"st0\">\"No more bottles\"</span><br/>   bcr   <span class=\"sy1\">:=</span> <span class=\"kw4\">table</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> bcr<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy1\">:=</span><span class=\"st0\">\"\"</span><br/>   <span class=\"br0\">}</span><br/><span class=\"kw1\">every</span> c <span class=\"sy1\">:=</span> <span class=\"kw4\">map</span><span class=\"br0\">(</span><span class=\"sy1\">!</span>code<span class=\"br0\">)</span> <span class=\"kw1\">do</span>                         <span class=\"co1\"># ignore case </span><br/>   <span class=\"kw1\">case</span> c <span class=\"kw1\">of</span> <span class=\"br0\">{</span>                                   <span class=\"co1\"># interpret</span><br/>   <span class=\"st0\">\"h\"</span>  <span class=\"sy1\">:</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello, World!\"</span><span class=\"br0\">)</span>                 <span class=\"co1\"># . hello</span><br/>   <span class=\"st0\">\"q\"</span>  <span class=\"sy1\">:</span> <span class=\"kw4\">write</span><span class=\"br0\">(</span>code<span class=\"br0\">)</span>                            <span class=\"co1\"># . quine</span><br/>   <span class=\"st0\">\"9\"</span>  <span class=\"sy1\">:</span> <span class=\"br0\">{</span>                                      <span class=\"co1\"># . 99 bottles </span><br/>          <span class=\"kw1\">every</span> b <span class=\"sy1\">:=</span> <span class=\"nu0\">99</span> <span class=\"kw1\">to</span> <span class=\"nu0\">1</span> by <span class=\"sy1\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span> <span class=\"kw4\">writes</span><span class=\"br0\">(</span><br/>             bcr<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy1\">,</span>b<span class=\"sy1\">,</span>bnw<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"st0\">\" of beer on the wall<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/>             b<span class=\"sy1\">,</span>bnw<span class=\"br0\">[</span>b<span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"st0\">\" of beer<span class=\"es0\">\\n</span>Take one down, pass it around<span class=\"es0\">\\n</span>\"</span><span class=\"sy1\">,</span><br/>             <span class=\"nu0\">1</span><span class=\"sy1\">~=</span>b<span class=\"sy1\">|</span><span class=\"st0\">\"\"</span><span class=\"sy1\">,</span>bnw<span class=\"br0\">[</span>b<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">,</span><span class=\"st0\">\" of beer on the wall\"</span><span class=\"sy1\">,</span>bcr<span class=\"br0\">[</span>b<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span>            <br/>          <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"sy1\">,</span><span class=\"kw4\">map</span><span class=\"br0\">(</span>bnw<span class=\"br0\">[</span>b<span class=\"sy1\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><span class=\"st0\">\" of beer.<span class=\"es0\">\\n</span>Go to the store \"</span><span class=\"sy1\">,</span><br/>                <span class=\"st0\">\"and buy some more, 99 bottles of beer on the wall.\"</span><span class=\"br0\">)</span>               <br/>          <span class=\"br0\">}</span><br/>   <span class=\"st0\">\"+\"</span>  <span class=\"sy1\">:</span> <span class=\"br0\">{</span> <span class=\"sy1\">/</span>acc <span class=\"sy1\">:=</span> <span class=\"nu0\">0</span> <span class=\"sy1\">;</span> acc <span class=\"sy1\">+:=</span><span class=\"nu0\">1</span> <span class=\"br0\">}</span>                <span class=\"co1\"># . yes it is weird</span><br/>   <span class=\"kw1\">default</span><span class=\"sy1\">:</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Syntax error in \"</span><span class=\"sy1\">,</span>code<span class=\"br0\">)</span>         <span class=\"co1\"># . error/exit</span><br/>   <span class=\"br0\">}</span><br/><span class=\"kw1\">return</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 3, "block": "<pre class=\"j highlighted_source\">bob =: \": , <span class=\"st_h\">' bottle'</span> , <span class=\"sy0\">(</span><span class=\"nu0\">1</span> = ]<span class=\"sy0\">)</span> }. <span class=\"st_h\">'s of beer'</span>\"<span class=\"nu0\">_</span><br/>bobw=: bob , <span class=\"st_h\">' on the wall'</span>\"<span class=\"nu0\">_</span><br/>beer=: bobw , <span class=\"st_h\">', '</span> , bob , <span class=\"st_h\">'; take one down and pass it around, '</span> , <a class=\"__cf_email__\" data-cfemail=\"02606d607542\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>&lt;:</pre>"}, {"lang": "Java", "loc": 23, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> hq9plus<span class=\"br0\">(</span>code<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> out <span class=\"sy0\">=</span> <span class=\"st0\">''</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> acc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;</span>code.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>code.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'H'</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> <span class=\"st0\">\"hello, world<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> code <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'9'</span><span class=\"sy0\">:</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> j<span class=\"sy0\">=</span><span class=\"nu0\">99</span><span class=\"sy0\">;</span> j<span class=\"sy0\">&gt;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">--</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          out <span class=\"sy0\">+=</span> j <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer on the wall, \"</span> <span class=\"sy0\">+</span> j <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>          out <span class=\"sy0\">+=</span> <span class=\"st0\">\"Take one down and pass it around, \"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        out <span class=\"sy0\">+=</span> <span class=\"st0\">\"1 bottle of beer on the wall, 1 bottle of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>            <span class=\"st0\">\"Take one down and pass it around, no more bottles of beer on the wall.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>            <span class=\"st0\">\"No more bottles of beer on the wall, no more bottles of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>            <span class=\"st0\">\"Go to the store and buy some more, 99 bottles of beer on the wall.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'+'</span><span class=\"sy0\">:</span> acc<span class=\"sy0\">++;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> out<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 23, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> hq9plus<span class=\"br0\">(</span>code<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> out <span class=\"sy0\">=</span> <span class=\"st0\">''</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">var</span> acc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;</span>code.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>code.<span class=\"me1\">charAt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'H'</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> <span class=\"st0\">\"hello, world<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'Q'</span><span class=\"sy0\">:</span> out <span class=\"sy0\">+=</span> code <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'9'</span><span class=\"sy0\">:</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> j<span class=\"sy0\">=</span><span class=\"nu0\">99</span><span class=\"sy0\">;</span> j<span class=\"sy0\">&gt;</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">--</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          out <span class=\"sy0\">+=</span> j <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer on the wall, \"</span> <span class=\"sy0\">+</span> j <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>          out <span class=\"sy0\">+=</span> <span class=\"st0\">\"Take one down and pass it around, \"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>j<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        out <span class=\"sy0\">+=</span> <span class=\"st0\">\"1 bottle of beer on the wall, 1 bottle of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>            <span class=\"st0\">\"Take one down and pass it around, no more bottles of beer on the wall.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>            <span class=\"st0\">\"No more bottles of beer on the wall, no more bottles of beer.<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span><br/>            <span class=\"st0\">\"Go to the store and buy some more, 99 bottles of beer on the wall.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">case</span> <span class=\"st0\">'+'</span><span class=\"sy0\">:</span> acc<span class=\"sy0\">++;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">return</span> out<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Julia", "loc": 31, "block": "<pre class=\"text highlighted_source\">hello()   = println(\"Hello, world!\")<br/>quine()   = println(src)<br/>bottles() = for i = 99:-1:1 print(\"\\n$i bottles of beer on the wall\\n$i bottles of beer\\nTake one down, pass it around\\n$(i-1) bottles of beer on the wall\\n\") end<br/>acc = 0<br/>incr()    = global acc += 1<br/>\u00a0<br/>const dispatch = Dict(<br/>'h' =&gt; hello,<br/>'q' =&gt; quine,<br/>'9' =&gt; bottles,<br/>'+' =&gt; incr)<br/>\u00a0<br/>if length(ARGS) &lt; 1<br/>    println(\"Usage: julia ./HQ9+.jl file.hq9\")<br/>    exit(1)<br/>else<br/>    file = ARGS[1]<br/>end<br/>\u00a0<br/>try<br/>    open(file) do s<br/>        global src = readstring(s)<br/>    end<br/>catch<br/>    warning(\"can't open $file\")<br/>    exit(1)<br/>end<br/>\u00a0<br/>for i in lowercase(src)<br/>    if haskey(dispatch, i) dispatch[i]() end<br/>end</pre>"}, {"lang": "Kotlin", "loc": 33, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/>fun hq9plus<span class=\"br0\">(</span>code<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> acc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sb <span class=\"sy0\">=</span> StringBuilder<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>c in code<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        sb.<span class=\"me1\">append</span><span class=\"br0\">(</span><br/>            when <span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"st0\">'h'</span>, <span class=\"st0\">'H'</span> -<span class=\"sy0\">&gt;</span> <span class=\"st0\">\"Hello, world!<span class=\"es1\">\\n</span>\"</span><br/>                <span class=\"st0\">'q'</span>, <span class=\"st0\">'Q'</span> -<span class=\"sy0\">&gt;</span> code + <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><br/>                <span class=\"st0\">'9'</span>-<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sb2 <span class=\"sy0\">=</span> StringBuilder<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">99</span> downTo <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> s <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"st0\">\"s\"</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"st0\">\"\"</span><br/>                        sb2.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"st0\">\"$i bottle$s of beer on the wall<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>                        sb2.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"st0\">\"$i bottle$s of beer<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>                        sb2.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"st0\">\"Take one down, pass it around<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">}</span><br/>                    sb2.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"st0\">\"No more bottles of beer on the wall!<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>                    sb2.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">}</span><br/>                <span class=\"st0\">'+'</span>  -<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span> acc++<span class=\"sy0\">;</span> <span class=\"st0\">\"\"</span> <span class=\"br0\">}</span>  <span class=\"co1\">// yeah, it's weird!</span><br/>                <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> -<span class=\"sy0\">&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">throw</span></a> IllegalArgumentException<span class=\"br0\">(</span><span class=\"st0\">\"Code contains illegal operation '$c'\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    println<span class=\"br0\">(</span>sb<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> code <span class=\"sy0\">=</span> args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>  <span class=\"co1\">// pass in code as command line argument (using hq9+)</span><br/>    hq9plus<span class=\"br0\">(</span>code<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 33, "block": "<pre class=\"lb highlighted_source\"><span class=\"co1\">'Try this hq9+ program - \"hq9+HqQ+Qq\"</span><br/><span class=\"kw1\">Prompt</span> <span class=\"st0\">\"Please input your hq9+ program.\"</span>; code$<br/><span class=\"kw1\">Print</span> hq9plus$<span class=\"br0\">(</span>code$<span class=\"br0\">)</span><br/><span class=\"kw1\">End</span><br/>\u00a0<br/><span class=\"kw1\">Function</span> hq9plus$<span class=\"br0\">(</span>code$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>code$<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Select</span> <span class=\"kw1\">Case</span><br/>            <span class=\"kw1\">Case</span> <span class=\"kw2\">Upper$</span><span class=\"br0\">(</span><span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>code$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"H\"</span><br/>                hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Hello, world!\"</span><br/>            <span class=\"kw1\">Case</span> <span class=\"kw2\">Upper$</span><span class=\"br0\">(</span><span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>code$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Q\"</span><br/>                hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> code$<br/>            <span class=\"kw1\">Case</span> <span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>code$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"9\"</span><br/>                <span class=\"kw1\">For</span> bottles <span class=\"sy0\">=</span> <span class=\"nu0\">99</span> <span class=\"kw1\">To</span> <span class=\"nu0\">1</span> Step <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>                     hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span>bottles<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottle\"</span><br/>                     <span class=\"kw1\">If</span> <span class=\"br0\">(</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\"s\"</span><br/>                     hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\" of beer on the wall, \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span>bottles<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottle\"</span><br/>                     <span class=\"kw1\">If</span> <span class=\"br0\">(</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\"s\"</span><br/>                     hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\" of beer,\"</span>  <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"Take one down, pass it around, \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">str$</span><span class=\"br0\">(</span>bottles <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottle\"</span><br/>                     <span class=\"kw1\">If</span> <span class=\"br0\">(</span>bottles <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">Or</span> <span class=\"br0\">(</span>bottles <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">Then</span> hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\"s\"</span><br/>                     hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\" of beer on the wall.\"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">Next</span> bottles<br/>                hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"st0\">\"No more bottles of beer on the wall, no more bottles of beer.\"</span> _<br/>                                    <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"Go to the store and buy some more, 99 bottles of beer on the wall.\"</span><br/>            <span class=\"kw1\">Case</span> <span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>code$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"+\"</span><br/>                accumulator <span class=\"sy0\">=</span> <span class=\"br0\">(</span>accumulator <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">Select</span><br/>        <span class=\"kw1\">If</span> <span class=\"kw2\">Mid$</span><span class=\"br0\">(</span>code$<span class=\"sy0\">,</span> i<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"+\"</span> <span class=\"kw1\">Then</span><br/>            hq9plus$ <span class=\"sy0\">=</span> hq9plus$ <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">13</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"kw2\">chr$</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/>    <span class=\"kw1\">Next</span> i<br/>    hq9plus$ <span class=\"sy0\">=</span> <span class=\"kw2\">Left$</span><span class=\"br0\">(</span>hq9plus$<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw2\">Len</span><span class=\"br0\">(</span>hq9plus$<span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Function</span></pre>"}, {"lang": "Lua", "loc": 22, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"kw1\">function</span> runCode<span class=\"br0\">(</span> code <span class=\"br0\">)</span><br/>    <span class=\"kw1\">local</span> acc<span class=\"sy0\">,</span> lc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">#</span>code <span class=\"kw1\">do</span><br/>        lc <span class=\"sy0\">=</span> code<span class=\"sy0\">:</span>sub<span class=\"br0\">(</span> i<span class=\"sy0\">,</span> i <span class=\"br0\">)</span><span class=\"sy0\">:</span>upper<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> lc <span class=\"sy0\">==</span> <span class=\"st0\">\"Q\"</span> <span class=\"kw1\">then</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span> lc <span class=\"br0\">)</span><br/>        <span class=\"kw1\">elseif</span> lc <span class=\"sy0\">==</span> <span class=\"st0\">\"H\"</span> <span class=\"kw1\">then</span> <span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"Hello, World!\"</span> <span class=\"br0\">)</span><br/>        <span class=\"kw1\">elseif</span> lc <span class=\"sy0\">==</span> <span class=\"st0\">\"+\"</span> <span class=\"kw1\">then</span> acc <span class=\"sy0\">=</span> acc <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">elseif</span> lc <span class=\"sy0\">==</span> <span class=\"st0\">\"9\"</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>                <span class=\"kw1\">if</span> j <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>                    <span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"kw3\">string.format</span><span class=\"br0\">(</span> <span class=\"st0\">\"%d bottles of beer on the wall<span class=\"es1\">\\n</span>%d bottles of beer<span class=\"es1\">\\n</span>Take one down, pass it around<span class=\"es1\">\\n</span>%d bottles of beer on the wall<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> j<span class=\"sy0\">,</span> j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>                <span class=\"kw1\">else</span><br/>                    <span class=\"kw3\">print</span><span class=\"br0\">(</span> <span class=\"st0\">\"1 bottle of beer on the wall<span class=\"es1\">\\n</span>1 bottle of beer<span class=\"es1\">\\n</span>Take one down and pass it around<span class=\"es1\">\\n</span>no more bottles of beer on the wall<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">..</span><br/>                           <span class=\"st0\">\"No more bottles of beer on the wall<span class=\"es1\">\\n</span>No more bottles of beer<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">..</span><br/>                           <span class=\"st0\">\"Go to the store and buy some more<span class=\"es1\">\\n</span>99 bottles of beer on the wall.<span class=\"es1\">\\n</span>\"</span> <span class=\"br0\">)</span><br/>                <span class=\"kw1\">end</span><br/>            <span class=\"kw1\">end</span><br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 10, "block": "<pre class=\"text highlighted_source\">hq9plus[program_]\u00a0:= <br/> Module[{accumulator = 0, bottle}, <br/>  bottle[n_]\u00a0:= <br/>   ToString[n] &lt;&gt; If[n == 1, \" bottle\", \" bottles\"] &lt;&gt; \" of beer\"; <br/>  Do[Switch[chr, \"H\", <a class=\"__cf_email__\" data-cfemail=\"38684a51564c78\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\"hello, world\", \"Q\", <a class=\"__cf_email__\" data-cfemail=\"79290b10170d39090b161e0b1814\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>, \"9\", <br/>    <a class=\"__cf_email__\" data-cfemail=\"a3f3d1cacdd7e3f0d7d1cacdc4e9cccacd\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[<br/>      Table[bottle[n] &lt;&gt; \" on the wall\\n\" &lt;&gt; bottle[n] &lt;&gt; <br/>        \"\\ntake one down, pass it around\\n\" &lt;&gt; bottle[n - 1] &lt;&gt; <br/>        \" on the wall\" &lt;&gt; If[n == 1, \"\", \"\\n\\n\"], {n, 99, 1, -1}]], <br/>    \"+\", accumulator++], {chr, <a class=\"__cf_email__\" data-cfemail=\"66250e0714070512031415261614090114070b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>}]; accumulator]</pre>"}, {"lang": "NetRexx", "loc": 33, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>var program = \"9hHqQ+\"<br/>var i = 0<br/>\u00a0<br/>proc bottle(n: int): string =<br/>  case n<br/>  of 0:<br/>    result = \"No more bottles\"<br/>  of 1:<br/>    result = \"1 bottle\"<br/>  else:<br/>    result = $n &amp; \" bottles\"<br/>\u00a0<br/>proc ninetyNineBottles =<br/>  for n in countdown(99, 1):<br/>    echo bottle(n), \" bottle of beer on the wall\"<br/>    echo bottle(n), \" bottle of beer\"<br/>    echo \"Take one down, pass it around\"<br/>    echo bottle(n - 1), \" of beer on the wall\"<br/>\u00a0<br/>for token in items(program):<br/>  case token<br/>  of 'h', 'H':<br/>    echo(\"Hello, world!\")<br/>  of 'q', 'Q':<br/>    echo(program)<br/>  of '9':<br/>    ninetyNineBottles()<br/>  of '+':<br/>    inc(i)<br/>  else:<br/>    echo(\"Unknown command: \", token)<br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 33, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>var program = \"9hHqQ+\"<br/>var i = 0<br/>\u00a0<br/>proc bottle(n: int): string =<br/>  case n<br/>  of 0:<br/>    result = \"No more bottles\"<br/>  of 1:<br/>    result = \"1 bottle\"<br/>  else:<br/>    result = $n &amp; \" bottles\"<br/>\u00a0<br/>proc ninetyNineBottles =<br/>  for n in countdown(99, 1):<br/>    echo bottle(n), \" bottle of beer on the wall\"<br/>    echo bottle(n), \" bottle of beer\"<br/>    echo \"Take one down, pass it around\"<br/>    echo bottle(n - 1), \" of beer on the wall\"<br/>\u00a0<br/>for token in items(program):<br/>  case token<br/>  of 'h', 'H':<br/>    echo(\"Hello, world!\")<br/>  of 'q', 'Q':<br/>    echo(program)<br/>  of '9':<br/>    ninetyNineBottles()<br/>  of '+':<br/>    inc(i)<br/>  else:<br/>    echo(\"Unknown command: \", token)<br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 9, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> hq9p line <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> accumulator <span class=\"sy0\">=</span> <span class=\"kw1\">ref</span> <span class=\"nu0\">0</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">to</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>length line <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">match</span> line<span class=\"sy0\">.</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">with</span><br/>    <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>h<span class=\"sy0\">'</span> <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>H<span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> <span class=\"st0\">\"Hello, world!\"</span><br/>    <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>q<span class=\"sy0\">'</span> <span class=\"sy0\">|</span> <span class=\"sy0\">'</span>Q<span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> line<br/>    <span class=\"sy0\">|</span> <span class=\"sy0\">'</span><span class=\"nu0\">9</span><span class=\"sy0\">'</span> <span class=\"sy0\">-&gt;</span> beer <span class=\"nu0\">99</span><br/>    <span class=\"sy0\">|</span> <span class=\"sy0\">'+'</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">incr</span> accumulator<br/>  <span class=\"kw1\">done</span></pre>"}, {"lang": "PARI/GP", "loc": 23, "block": "<pre class=\"parigp highlighted_source\">beer<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu1\">1</span><span class=\"sy0\">,</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"1 bottle of beer on the wall\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"1 bottle of beer\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Take one down and pass it around\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"No bottles of beer on the wall\"</span><span class=\"br0\">)</span><br/>  <span class=\"sy0\">,</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span>n<span class=\"st0\">\" bottles of beer on the wall\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span>n<span class=\"st0\">\" bottles of beer\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Take one down and pass it around\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"st0\">\" bottles of beer on the wall<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    beer<span class=\"br0\">(</span>n<span class=\"sy0\">-</span><span class=\"nu1\">1</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>HQ9p<span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  my<span class=\"br0\">(</span>accum<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>v<span class=\"sy0\">=</span><span class=\"kw1\">Vec</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>#s<span class=\"sy0\">,</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"H\"</span> <span class=\"sy0\">||</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"h\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello, world!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">next</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Q\"</span> <span class=\"sy0\">||</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"q\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">next</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"9\"</span><span class=\"sy0\">,</span> beer<span class=\"br0\">(</span><span class=\"nu1\">99</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">next</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"+\"</span><span class=\"sy0\">,</span> accum<span class=\"sy0\">++,</span> <span class=\"kw1\">error</span><span class=\"br0\">(</span><span class=\"st0\">\"Nasal demons\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 52, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> feature <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>say switch<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@programme</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"kw1\">or</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"No input. Specify a program file or pipe it to the standard input.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">@programme</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$char</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/split.html\"><span class=\"kw3\">split</span></a> <span class=\"sy0\">//</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        given <span class=\"br0\">(</span><span class=\"re0\">$char</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            when <span class=\"br0\">(</span><span class=\"st_h\">'H'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> hello<span class=\"br0\">(</span><span class=\"br0\">)</span>             <span class=\"br0\">}</span><br/>            when <span class=\"br0\">(</span><span class=\"st_h\">'Q'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> quinne<span class=\"br0\">(</span><span class=\"re0\">@programme</span><span class=\"br0\">)</span>  <span class=\"br0\">}</span><br/>            when <span class=\"br0\">(</span><span class=\"st_h\">'9'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> bottles<span class=\"br0\">(</span><span class=\"br0\">)</span>           <span class=\"br0\">}</span><br/>            default    <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Unknown instruction $char.<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">}</span> <span class=\"co1\"># Comment this line to ignore other instructions.</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> hello <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st_h\">'Hello World'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> quinne <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"re0\">@programme</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> bottles <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/reverse.html\"><span class=\"kw3\">reverse</span></a> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">99</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$before</span> <span class=\"sy0\">=</span> bottle_count<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$after</span>  <span class=\"sy0\">=</span> bottle_count<span class=\"br0\">(</span><span class=\"re0\">$n</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$action</span> <span class=\"sy0\">=</span> bottle_action<span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        say <span class=\"st0\">\"<span class=\"es0\">\\u</span>$before of beer on the wall, $before of beer.\"</span><span class=\"sy0\">;</span><br/>        say <span class=\"st0\">\"$action, $after of beer on the wall.\"</span><span class=\"sy0\">;</span><br/>        say <a href=\"http://perldoc.perl.org/functions/q.html\"><span class=\"kw3\">q</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$n</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> bottle_count <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    given <span class=\"br0\">(</span><span class=\"re0\">$n</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        when    <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'99 bottles'</span>      <span class=\"br0\">}</span><br/>        when    <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'no more bottles'</span> <span class=\"br0\">}</span><br/>        when    <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'1 bottle'</span>        <span class=\"br0\">}</span><br/>        default      <span class=\"br0\">{</span> <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st0\">\"$n bottles\"</span>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> bottle_action <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$n</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'Take one down and pass it around'</span> <span class=\"kw1\">if</span> <span class=\"re0\">$n</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"st_h\">'Go to the store and buy some more'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 37, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">class</span> HQ9Interpreter <span class=\"br0\">{</span><br/>    <span class=\"kw1\">has</span> <span class=\"re0\">@!code</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> <span class=\"re0\">$!accumulator</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">has</span> <span class=\"re0\">$!pointer</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw2\">method</span> run <span class=\"br0\">(</span><span class=\"re0\">$code</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">@!code</span> <span class=\"sy0\">=</span> <span class=\"re0\">$code</span><span class=\"sy0\">.</span><span class=\"kw3\">comb</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$!accumulator</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$!pointer</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">while</span> <span class=\"re0\">$!pointer</span> <span class=\"sy0\">&lt;</span> <span class=\"re0\">@!code</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">given</span> <span class=\"re0\">@!code</span><span class=\"br0\">[</span><span class=\"re0\">$!pointer</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"kw3\">lc</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'h'</span> <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st_h\">'Hello world!'</span> <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'q'</span> <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"re0\">@!code</span> <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'9'</span> <span class=\"br0\">{</span> bob<span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'+'</span> <span class=\"br0\">{</span> <span class=\"re0\">$!accumulator</span><span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/>                <span class=\"kw1\">default</span>  <span class=\"br0\">{</span> note <span class=\"st0\">\"Syntax error: Unknown command <span class=\"es0\">\\\"</span>{@!code[$!pointer]}<span class=\"es0\">\\\"</span>\"</span> <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>\t    <span class=\"re0\">$!pointer</span><span class=\"sy0\">++;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">sub</span> bob <span class=\"br0\">(</span><span class=\"re0\">$beer</span> <span class=\"kw1\">is</span> copy<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw2\">sub</span> what  <span class=\"br0\">{</span> <span class=\"st0\">\"{$beer??$beer!!'No more'} bottle{$beer-1??'s'!!''} of beer\"</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">sub</span> <span class=\"kw1\">where</span> <span class=\"br0\">{</span> <span class=\"st_h\">'on the wall'</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">sub</span> drink <span class=\"br0\">{</span> <span class=\"re0\">$beer</span><span class=\"sy0\">--;</span> <span class=\"st0\">\"Take one down, pass it around,\"</span> <span class=\"br0\">}</span><br/>        <span class=\"kw1\">while</span> <span class=\"re0\">$beer</span> <span class=\"br0\">{</span><br/>            <span class=\"sy0\">.</span><span class=\"kw3\">say</span> <span class=\"kw1\">for</span> <span class=\"st0\">\"&amp;what() &amp;where(),\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"&amp;what()!\"</span><span class=\"sy0\">,</span><br/>                     <span class=\"st0\">\"&amp;drink()\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"&amp;what() &amp;where()!\"</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Feed it a command string:</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$hq9</span> <span class=\"sy0\">=</span> HQ9Interpreter<span class=\"sy0\">.</span><span class=\"kw2\">new</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$hq9</span><span class=\"sy0\">.</span><span class=\"me1\">run</span><span class=\"br0\">(</span><span class=\"st0\">\"hHq+++Qq\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st_h\">''</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$hq9</span><span class=\"sy0\">.</span><span class=\"me1\">run</span><span class=\"br0\">(</span><span class=\"st0\">\"Jhq.k+hQ\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 32, "block": "<pre class=\"text highlighted_source\">constant ninetynine = 99 -- (set this to 9 for testing)<br/>\u00a0<br/>function bottles(integer count)<br/>    if count=0 then     return \"no more bottles\"<br/>    elsif count=1 then  return \"1 bottle\" end if<br/>    if count=-1 then count = ninetynine end if<br/>    return sprintf(\"%d bottles\",count)<br/>end function<br/>\u00a0<br/>function bob(integer count)<br/>    return bottles(count)&amp;\" of beer\"<br/>end function<br/>\u00a0<br/>function up1(string bob)<br/>-- Capitalise sentence start (needed just the once, \"no more\"=&gt;\"No more\")<br/>    bob[1] = upper(bob[1])<br/>    return bob<br/>end function<br/>\u00a0<br/>procedure ninetyninebottles()<br/>string this = bob(ninetynine)<br/>string that = \"Take one down, pass it around,\\n\"<br/>    for i=ninetynine to 0 by -1 do<br/>        puts(1,up1(this)&amp;\" on the wall,\\n\")<br/>        puts(1,this&amp;\".\\n\")<br/>        if i=0 then that = \"Go to the store, buy some more,\\n\"<br/>        elsif i=1 then that[6..8] = \"it\" end if<br/>        this = bob(i-1)<br/>        puts(1,that&amp;this&amp;\" on the wall.\\n\\n\")<br/>    end for<br/>--  if getc(0) then end if<br/>end procedure</pre>"}, {"lang": "PicoLisp", "loc": 15, "block": "<pre class=\"text highlighted_source\">(de hq9+ (Code)<br/>   (let Accu 0<br/>      (for C (chop Code)<br/>         (case C<br/>            (\"H\" (prinl \"Hello, world\"))<br/>            (\"Q\" (prinl Code))<br/>            (\"9\"<br/>               (for (N 99 (gt0 N))<br/>                  (prinl N \" bottles of beer on the wall\")<br/>                  (prinl N \" bottles of beer\")<br/>                  (prinl \"Take one down, pass it around\")<br/>                  (prinl (dec 'N) \" bottles of beer on the wall\")<br/>                  (prinl) ) )<br/>            (\"+\" (inc 'Accu)) ) )<br/>      Accu ) )</pre>"}, {"lang": "PowerShell", "loc": 45, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> Invoke<span class=\"sy0\">-</span>HQ9PlusInterpreter <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw3\">switch</span><span class=\"br0\">]</span><span class=\"re0\">$Global</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"re0\">$sb</span> <span class=\"sy0\">=</span> <span class=\"kw1\">New-Object</span> <span class=\"kw5\">-TypeName</span> System.Text.StringBuilder<br/>\u00a0<br/>    <span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">99</span>; <span class=\"re0\">$i</span> <span class=\"kw4\">-gt</span> <span class=\"nu0\">2</span>; <span class=\"re0\">$i</span><span class=\"sy0\">--</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span> <br/>        <span class=\"re0\">$sb</span>.Append<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"{0,2} bottles of beer on the wall, \"</span> <span class=\"sy0\">+</span><br/>                     <span class=\"st0\">\"{0,2} bottles of beer! Take one down, pass it around, \"</span> <span class=\"sy0\">+</span><br/>                     <span class=\"st0\">\"{1,2} bottles of beer on the wall.<span class=\"es0\">`n</span>\"</span><span class=\"br0\">)</span> <span class=\"kw4\">-f</span> <span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Out-Null</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$sb</span>.Append<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\" 2 bottles of beer on the wall, \"</span> <span class=\"sy0\">+</span><br/>                <span class=\"st0\">\" 2 bottles of beer! Take one down, pass it around, \"</span> <span class=\"sy0\">+</span><br/>                <span class=\"st0\">\" 1 bottle  of beer on the wall.<span class=\"es0\">`n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Out-Null</span><br/>    <span class=\"re0\">$sb</span>.Append<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\" 1 bottle  of beer on the wall, \"</span> <span class=\"sy0\">+</span><br/>                <span class=\"st0\">\" 1 bottle  of beer! Take one down, pass it around...<span class=\"es0\">`n</span>\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Out-Null</span><br/>    <span class=\"re0\">$sb</span>.Append<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"No more bottles of beer on the wall, No more bottles of beer!<span class=\"es0\">`n</span>\"</span> <span class=\"sy0\">+</span><br/>                <span class=\"st0\">\"Go to the store and get us some more, 99 bottles of beer on the wall!\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Out-Null</span><br/>\u00a0<br/>    <span class=\"re0\">$99BottlesOfBeer</span> <span class=\"sy0\">=</span> <span class=\"re0\">$sb</span>.ToString<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"re0\">$helloWorld</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello, world!\"</span><br/>\u00a0<br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$Global</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"kw1\">New-Variable</span> <span class=\"kw5\">-Name</span> <span class=\"st0\">\"+\"</span> <span class=\"kw5\">-Value</span> <span class=\"nu0\">0</span> <span class=\"kw5\">-Scope</span> Global <span class=\"kw5\">-ErrorAction</span> SilentlyContinue<span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">Write-Host</span> <span class=\"st0\">\"Press Ctrl-C or Enter nothing to exit.\"</span> <span class=\"kw5\">-ForegroundColor</span> Cyan<br/>\u00a0<br/>    <span class=\"kw3\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$code</span> <span class=\"kw4\">-ne</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"re0\">$code</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Read-Host</span> <span class=\"kw5\">-Prompt</span> <span class=\"st0\">\"HQ9+\"</span><br/>\u00a0<br/>        <span class=\"br0\">(</span><span class=\"re0\">$code</span>.ToCharArray<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Select-String</span> <span class=\"kw5\">-Pattern</span> <span class=\"st0\">\"[HQ9+]\"</span><span class=\"br0\">)</span>.Matches.Value <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><br/>            <span class=\"kw3\">switch</span> <span class=\"br0\">(</span><a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"st0\">\"H\"</span> <span class=\"br0\">{</span><span class=\"re0\">$helloWorld</span>;           <span class=\"kw3\">break</span><span class=\"br0\">}</span><br/>                <span class=\"st0\">\"Q\"</span> <span class=\"br0\">{</span><span class=\"re0\">$code</span>;                 <span class=\"kw3\">break</span><span class=\"br0\">}</span><br/>                <span class=\"st0\">\"9\"</span> <span class=\"br0\">{</span><span class=\"re0\">$99BottlesOfBeer</span>;      <span class=\"kw3\">break</span><span class=\"br0\">}</span><br/>                <span class=\"st0\">\"+\"</span> <span class=\"br0\">{</span><span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$Global</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>$<span class=\"br0\">{</span>global:<span class=\"sy0\">+</span><span class=\"br0\">}</span><span class=\"sy0\">++</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">Set-Alias</span> <span class=\"kw5\">-Name</span> HQ9<span class=\"sy0\">+</span> <span class=\"kw5\">-Value</span> Invoke<span class=\"sy0\">-</span>HQ9PlusInterpreter<br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 28, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Procedure</span> hq9plus<span class=\"br0\">(</span>code.s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> accumulator, i, bottles<br/>  <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"kw2\">Len</span><span class=\"br0\">(</span>code<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Select</span> <span class=\"kw2\">Mid</span><span class=\"br0\">(</span>code, i, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> <span class=\"st0\">\"h\"</span>, <span class=\"st0\">\"H\"</span><br/>        <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello, world!\"</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> <span class=\"st0\">\"q\"</span>, <span class=\"st0\">\"Q\"</span><br/>        <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span>code<span class=\"br0\">)</span><br/>      <span class=\"kw1\">Case</span> <span class=\"st0\">\"9\"</span><br/>        bottles <span class=\"sy0\">=</span> <span class=\"nu0\">99</span><br/>        <span class=\"kw1\">While</span> bottles<br/>          <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>bottles<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer on the wall, \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>bottles<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer,\"</span><span class=\"br0\">)</span><br/>          bottles <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>          <span class=\"kw2\">PrintN</span><span class=\"br0\">(</span><span class=\"st0\">\"Take one down, pass it around, \"</span> <span class=\"sy0\">+</span> <span class=\"kw2\">Str</span><span class=\"br0\">(</span>bottles<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" bottles of beer on the wall.\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">Wend</span><br/>      <span class=\"kw1\">Case</span> <span class=\"st0\">\"+\"</span><br/>        accumulator <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">EndSelect</span><br/>  <span class=\"kw1\">Next</span> i<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">OpenConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Define</span> testCode.s <span class=\"sy0\">=</span> <span class=\"st0\">\"hq9+HqQ+Qq\"</span><br/>  hq9plus<span class=\"br0\">(</span>testCode<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw2\">Print</span><span class=\"br0\">(</span>#CRLF$ <span class=\"sy0\">+</span> #CRLF$ <span class=\"sy0\">+</span> <span class=\"st0\">\"Press ENTER to exit\"</span><span class=\"br0\">)</span>: <span class=\"kw2\">Input</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">CloseConsole</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span></pre>"}, {"lang": "Python", "loc": 48, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>; if we `for` over the port, we won't have the program in memory for 'Q'<br/>(define (parse-HQ9+ the-program)<br/>  (define oTW \" on the wall\")<br/>  (and\u00a0; ensures the accumulator is never seen!<br/>   (for/fold ((A 0))<br/>     ((token (in-string the-program)))<br/>     (case token<br/>       ((#\\H) (display \"hello, world\") A)<br/>       ((#\\Q) (display the-program) A)<br/>      \u00a0;; official esolang version of 99-BoB at:<br/>      \u00a0;;  http://esolangs.org/wiki/99_bottles_of_beer<br/>       ((#\\9)<br/>        (displayln<br/>        (let ((BoB (lambda (n)<br/>                     (string-append<br/>                      (case n ((1) \"1 bottle\") ((0) \"No bottles\")<br/>                        (else (format \"~a bottles\" n)))<br/>                      \" of beer\"))))<br/>          (string-join<br/>           (for/list ((btls (in-range 99 0 -1)))<br/>            (string-append (BoB btls)oTW\",\\n\"(BoB btls)<br/>                           \".\\nTake one down, pass it around,\\n\"<br/>                           (BoB (sub1 btls))oTW\".\"))<br/>           \"\\n\\n\"))) A)<br/>       ((#\\+) (add1 A))<br/>       ((#\\newline)\u00a0; language extension, makes getting standard in easier<br/>        (eprintf \"warning: HQ9+: language extension ~s\" token)<br/>        A)<br/>       (else (error \"syntax error: HQ9+: unrecognised token ~s\" token))))<br/>   (void)))<br/>\u00a0<br/>(module+ main (parse-HQ9+ (port-&gt;string)))<br/>\u00a0<br/>(module+ test<br/>  (require rackunit)<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"H\"))) \"hello, world\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"Q\"))) \"Q\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"QQ\"))) \"QQQQ\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"++\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+++\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+++++++++++++++++\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ (make-string 10000 #\\+)))) \"\")<br/> \u00a0;;; you can jolly well read (and sing along to) the output of '9'<br/>  )</pre>"}, {"lang": "Racket", "loc": 48, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>; if we `for` over the port, we won't have the program in memory for 'Q'<br/>(define (parse-HQ9+ the-program)<br/>  (define oTW \" on the wall\")<br/>  (and\u00a0; ensures the accumulator is never seen!<br/>   (for/fold ((A 0))<br/>     ((token (in-string the-program)))<br/>     (case token<br/>       ((#\\H) (display \"hello, world\") A)<br/>       ((#\\Q) (display the-program) A)<br/>      \u00a0;; official esolang version of 99-BoB at:<br/>      \u00a0;;  http://esolangs.org/wiki/99_bottles_of_beer<br/>       ((#\\9)<br/>        (displayln<br/>        (let ((BoB (lambda (n)<br/>                     (string-append<br/>                      (case n ((1) \"1 bottle\") ((0) \"No bottles\")<br/>                        (else (format \"~a bottles\" n)))<br/>                      \" of beer\"))))<br/>          (string-join<br/>           (for/list ((btls (in-range 99 0 -1)))<br/>            (string-append (BoB btls)oTW\",\\n\"(BoB btls)<br/>                           \".\\nTake one down, pass it around,\\n\"<br/>                           (BoB (sub1 btls))oTW\".\"))<br/>           \"\\n\\n\"))) A)<br/>       ((#\\+) (add1 A))<br/>       ((#\\newline)\u00a0; language extension, makes getting standard in easier<br/>        (eprintf \"warning: HQ9+: language extension ~s\" token)<br/>        A)<br/>       (else (error \"syntax error: HQ9+: unrecognised token ~s\" token))))<br/>   (void)))<br/>\u00a0<br/>(module+ main (parse-HQ9+ (port-&gt;string)))<br/>\u00a0<br/>(module+ test<br/>  (require rackunit)<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"H\"))) \"hello, world\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"Q\"))) \"Q\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"QQ\"))) \"QQQQ\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"++\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+++\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ \"+++++++++++++++++\"))) \"\")<br/>  (check-equal? (with-output-to-string (lambda () (parse-HQ9+ (make-string 10000 #\\+)))) \"\")<br/> \u00a0;;; you can jolly well read (and sing along to) the output of '9'<br/>  )</pre>"}, {"lang": "REXX", "loc": 31, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program implements the   HQ9+   language. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/><span class=\"kw1\">arg</span> pgm <span class=\"sy0\">.</span>                                                    <span class=\"coMULTI\">/*obtain optional argument.*/</span><br/>accumulator=<span class=\"nu0\">0</span>                                                <span class=\"coMULTI\">/*assign default to accum. */</span><br/>\u00a0<br/>      <span class=\"kw1\">do</span> instructions=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"kw6\">length</span><span class=\"br0\">(</span>pgm<span class=\"br0\">)</span>;              \u00a0?=<span class=\"kw6\">substr</span><span class=\"br0\">(</span>pgm, instructions, <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>           <span class=\"kw1\">select</span><br/>           <span class=\"kw3\">when</span>\u00a0?==<span class=\"st0\">'H'</span> <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">\"Hello, world!\"</span>              <span class=\"coMULTI\">/*text varies on definition*/</span><br/>           <span class=\"kw3\">when</span>\u00a0?==<span class=\"st0\">'Q'</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> <span class=\"kw6\">sourceline</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;   <span class=\"kw1\">say</span> <span class=\"kw6\">sourceline</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span>;   <span class=\"kw3\">end</span>  <span class=\"coMULTI\">/*j*/</span><br/>           <span class=\"kw3\">when</span>\u00a0?== <span class=\"nu0\">9</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span> <span class=\"nu0\">99</span><br/>           <span class=\"kw3\">when</span>\u00a0?==<span class=\"st0\">'+'</span> <span class=\"kw3\">then</span> accumulator=accumulator+<span class=\"nu0\">1</span><br/>           <span class=\"kw3\">otherwise</span> <span class=\"kw1\">say</span> <span class=\"st0\">'invalid HQ9+ instruction:'</span>\u00a0?<br/>           <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*select*/</span><br/>      <span class=\"kw3\">end</span>        <span class=\"coMULTI\">/*instructions*/</span><br/><span class=\"kw1\">exit</span>                                             <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/><span class=\"nu0\">99</span>:           <span class=\"kw1\">do</span> j=<span class=\"nu0\">99</span>  <span class=\"kw2\">by</span> -<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> <span class=\"nu0\">1</span><br/>              <span class=\"kw1\">say</span> j <span class=\"st0\">'bottle'</span>s<span class=\"br0\">(</span>j<span class=\"br0\">)</span>  <span class=\"st0\">\"of beer the wall,\"</span><br/>              <span class=\"kw1\">say</span> j <span class=\"st0\">'bottle'</span>s<span class=\"br0\">(</span>j<span class=\"br0\">)</span>  <span class=\"st0\">\"of beer.\"</span><br/>              <span class=\"kw1\">say</span> <span class=\"st0\">'Take one down, pass it around,'</span><br/>              n=j-<span class=\"nu0\">1</span><br/>              <span class=\"kw1\">if</span> n==<span class=\"nu0\">0</span> <span class=\"kw3\">then</span> n=<span class=\"st0\">'no'</span>                                 <span class=\"coMULTI\">/*cheating to use  0. */</span><br/>              <span class=\"kw1\">say</span> n  <span class=\"st0\">'bottle'</span>s<span class=\"br0\">(</span>j-<span class=\"nu0\">1</span><span class=\"br0\">)</span>  <span class=\"st0\">\"of beer the wall.\"</span><br/>              <span class=\"kw1\">say</span><br/>              <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>    <span class=\"kw1\">say</span> <span class=\"st0\">'No more bottles of beer on the wall,'</span>                    <span class=\"coMULTI\">/*finally, last verse.*/</span><br/>    <span class=\"kw1\">say</span> <span class=\"st0\">'no more bottles of beer.'</span><br/>    <span class=\"kw1\">say</span> <span class=\"st0\">'Go to the store and buy some more,'</span><br/>    <span class=\"kw1\">say</span> <span class=\"st0\">'99 bottles of beer on the wall.'</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"coMULTI\">/*\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500*/</span><br/>s:  <span class=\"kw1\">if</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>==<span class=\"nu0\">1</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"st0\">''</span>;             <span class=\"kw1\">return</span> <span class=\"st0\">\"s\"</span>          <span class=\"coMULTI\">/*a simple pluralizer.*/</span></pre>"}, {"lang": "Ring", "loc": 31, "block": "<pre class=\"text highlighted_source\">\u00a0<br/># Project\u00a0: Execute HQ9<br/>\u00a0<br/>bottle(\"hq9+HqQ+Qq\")<br/>\u00a0<br/>func bottle(code)<br/>     accumulator = 0<br/>     for i = 1 to len(code)<br/>         switch code[i] <br/>                on \"h\"<br/>                    see \"Hello, world!\" + nl<br/>                on \"H\"<br/>                    see \"hello, world!\" + nl<br/>                on \"q\"<br/>                    see code + nl<br/>                on \"Q\"<br/>                    see code + nl<br/>                on \"9\"<br/>                    bottles = 99<br/>                    while bottles &gt; 0<br/>                          see \"\" + bottles + \" bottles of beer on the wall, \" <br/>                          see \"\" + bottles + \" bottles of beer,\" + nl<br/>                          bottles = bottles - 1<br/>                          see \"take one down, pass it around, \"<br/>                          see \"\" + bottles + \" bottles of beer on the wall.\" + nl<br/>                    end<br/>                on \"+\"<br/>                    accumulator = accumulator + 1<br/>         off<br/>     next <br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 32, "block": "<pre class=\"text highlighted_source\">use std::env;<br/>\u00a0<br/>// HQ9+ requires that '+' increments an accumulator, but it's inaccessible (and thus, unused).<br/>#[allow(unused_variables)]<br/>fn execute(code: &amp;str) {<br/>    let mut accumulator = 0;<br/>\u00a0<br/>    for c in code.chars() {<br/>        match c {<br/>            'Q' =&gt; println!(\"{}\", code),<br/>            'H' =&gt; println!(\"Hello, World!\"),<br/>            '9' =&gt; {<br/>                for n in (1..100).rev() {<br/>                    println!(\"{} bottles of beer on the wall\", n);<br/>                    println!(\"{} bottles of beer\", n);<br/>                    println!(\"Take one down, pass it around\");<br/>                    if (n - 1) &gt; 1 {<br/>                        println!(\"{} bottles of beer on the wall\\n\", n - 1);<br/>                    } else {<br/>                        println!(\"1 bottle of beer on the wall\\n\");<br/>                    }<br/>                }<br/>            }<br/>            '+' =&gt; accumulator += 1,<br/>            _ =&gt; panic!(\"Invalid character '{}' found in source.\", c),<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    execute(&amp;env::args().nth(1).unwrap());<br/>}</pre>"}, {"lang": "Rust", "loc": 32, "block": "<pre class=\"text highlighted_source\">use std::env;<br/>\u00a0<br/>// HQ9+ requires that '+' increments an accumulator, but it's inaccessible (and thus, unused).<br/>#[allow(unused_variables)]<br/>fn execute(code: &amp;str) {<br/>    let mut accumulator = 0;<br/>\u00a0<br/>    for c in code.chars() {<br/>        match c {<br/>            'Q' =&gt; println!(\"{}\", code),<br/>            'H' =&gt; println!(\"Hello, World!\"),<br/>            '9' =&gt; {<br/>                for n in (1..100).rev() {<br/>                    println!(\"{} bottles of beer on the wall\", n);<br/>                    println!(\"{} bottles of beer\", n);<br/>                    println!(\"Take one down, pass it around\");<br/>                    if (n - 1) &gt; 1 {<br/>                        println!(\"{} bottles of beer on the wall\\n\", n - 1);<br/>                    } else {<br/>                        println!(\"1 bottle of beer on the wall\\n\");<br/>                    }<br/>                }<br/>            }<br/>            '+' =&gt; accumulator += 1,<br/>            _ =&gt; panic!(\"Invalid character '{}' found in source.\", c),<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    execute(&amp;env::args().nth(1).unwrap());<br/>}</pre>"}, {"lang": "Scala", "loc": 35, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> hq9plus<span class=\"br0\">(</span>code<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">:</span> String <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> out <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> acc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> bottle<span class=\"br0\">(</span>num<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> Unit <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>num <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            out +<span class=\"sy0\">=</span> num + <span class=\"st0\">\" bottles of beer on the wall, \"</span> + num + <span class=\"st0\">\" bottles of beer.<span class=\"es1\">\\n</span>\"</span><br/>            out +<span class=\"sy0\">=</span> <span class=\"st0\">\"Take one down and pass it around, \"</span> + <span class=\"br0\">(</span>num - <span class=\"nu0\">1</span><span class=\"br0\">)</span> + <span class=\"st0\">\" bottle\"</span><br/>\u00a0<br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>num <span class=\"sy0\">&gt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> out +<span class=\"sy0\">=</span> <span class=\"st0\">\"s\"</span><br/>\u00a0<br/>            out +<span class=\"sy0\">=</span> <span class=\"st0\">\" of beer.<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span><br/>            bottle<span class=\"br0\">(</span>num - <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"br0\">{</span><br/>            out +<span class=\"sy0\">=</span> <span class=\"st0\">\"1 bottle of beer on the wall, 1 bottle of beer.<span class=\"es1\">\\n</span>\"</span> +<br/>                <span class=\"st0\">\"Take one down and pass it around, no more bottles of beer on the wall.<span class=\"es1\">\\n</span><span class=\"es1\">\\n</span>\"</span> +<br/>                <span class=\"st0\">\"No more bottles of beer on the wall, no more bottles of beer.<span class=\"es1\">\\n</span>\"</span> +<br/>                <span class=\"st0\">\"Go to the store and buy some more, 99 bottles of beer on the wall.<span class=\"es1\">\\n</span>\"</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> handle<span class=\"br0\">(</span><span class=\"kw2\">char</span><span class=\"sy0\">:</span> Char<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw2\">char</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"st0\">'H'</span> <span class=\"sy0\">=&gt;</span> out +<span class=\"sy0\">=</span> <span class=\"st0\">\"Hello world!<span class=\"es1\">\\n</span>\"</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"st0\">'Q'</span> <span class=\"sy0\">=&gt;</span> out +<span class=\"sy0\">=</span> code + <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"st0\">'+'</span> <span class=\"sy0\">=&gt;</span> acc +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"st0\">'9'</span> <span class=\"sy0\">=&gt;</span> bottle<span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    code.<span class=\"me1\">toList</span> foreach handle<br/>    out<br/><span class=\"br0\">}</span><br/>\u00a0<br/>println<span class=\"br0\">(</span>hq9plus<span class=\"br0\">(</span><span class=\"st0\">\"HQ9+\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Seed7", "loc": 32, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: runCode (in string: code) is func<br/>  local<br/>    var char: ch is ' ';<br/>    var integer: bottles is 0;<br/>    var integer: accumulator is 0;<br/>  begin<br/>    for ch range code do<br/>      case ch of<br/>        when {'H'}: writeln(\"Hello, world!\");<br/>        when {'Q'}: writeln(code);<br/>        when {'9'}: bottles\u00a0:= 99;<br/>                    repeat<br/>                      writeln(bottles &lt;&amp; \" bottles of beer on the wall\");<br/>                      writeln(bottles &lt;&amp; \" bottles of beer\");<br/>                      writeln(\"Take one down, pass it around\");<br/>                      decr(bottles);<br/>                      writeln(bottles &lt;&amp; \" bottles of beer on the wall\");<br/>                      writeln;<br/>                    until bottles = 0;<br/>        when {'+'}: incr(accumulator);<br/>      end case;<br/>    end for;<br/>  end func;<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    if length(argv(PROGRAM)) &gt;= 1 then<br/>      runCode(argv(PROGRAM)[1]);<br/>    end if;<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 31, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw1\">class</span> HQ9Interpreter <span class=\"br0\">{</span><br/>    has pointer;<br/>    has accumulator;<br/>\u00a0<br/>    func bob <span class=\"br0\">(</span>beer<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        func what  <span class=\"br0\">{</span> <span class=\"st0\">\"#{beer\u00a0? beer\u00a0: 'No more'} bottle#{beer-1\u00a0? 's'\u00a0: ''} of beer\"</span> <span class=\"br0\">}</span><br/>        func where <span class=\"br0\">{</span> <span class=\"st0\">'on the wall'</span> <span class=\"br0\">}</span><br/>        func drink <span class=\"br0\">{</span> beer<span class=\"sy0\">--</span>; <span class=\"st0\">\"Take one down, pass it around,\"</span> <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>beer.<span class=\"me1\">is_pos</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"br0\">[</span><span class=\"br0\">[</span>what<span class=\"br0\">(</span><span class=\"br0\">)</span>, where<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span>what<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span>,<br/>            <span class=\"br0\">[</span>drink<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span>what<span class=\"br0\">(</span><span class=\"br0\">)</span>, where<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span>.<span class=\"me1\">each</span><span class=\"br0\">{</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span>.<span class=\"me1\">say</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    method run <span class=\"br0\">(</span>code<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        var chars = code.<span class=\"me1\">chars</span>;<br/>        accumulator = <span class=\"nu0\">0</span>;<br/>        pointer = <span class=\"nu0\">0</span>;<br/>        <span class=\"kw1\">while</span> <span class=\"br0\">(</span>pointer <span class=\"sy0\">&lt;</span> chars.<span class=\"me1\">len</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            given <span class=\"br0\">(</span>chars<span class=\"br0\">[</span>pointer<span class=\"br0\">]</span>.<span class=\"me1\">lc</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"st0\">'h'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> say <span class=\"st0\">'Hello world!'</span> <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"st0\">'q'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> say code <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"st0\">'9'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> bob<span class=\"br0\">(</span><span class=\"nu0\">99</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"st0\">'+'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> accumulator<span class=\"sy0\">++</span> <span class=\"br0\">}</span><br/>                default    <span class=\"br0\">{</span> warn <span class=\"sy0\">%</span>Q<span class=\"br0\">(</span>Syntax error: Unknown command <span class=\"st0\">\"#{chars[pointer]}\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            pointer<span class=\"sy0\">++</span>;<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Tcl", "loc": 53, "block": "<pre class=\"xml highlighted_source\"><span class=\"sc3\"><span class=\"re1\">&lt;?xml</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">?&gt;</span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;xsl:stylesheet</span> <span class=\"re0\">xmlns:xsl</span>=<span class=\"st0\">\"http://www.w3.org/1999/XSL/Transform\"</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">&gt;</span></span><br/>\t<span class=\"sc-1\">&lt;!-- bottles.xsl defines $entire-bottles-song --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:import</span> <span class=\"re0\">href</span>=<span class=\"st0\">\"bottles.xsl\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:output</span> <span class=\"re0\">method</span>=<span class=\"st0\">\"text\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"utf-8\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"hello-world\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span>Hello, world!<span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:variable<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Main template --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">match</span>=<span class=\"st0\">\"/\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"string(.)\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Runs HQ9+ code from string starting at given index (default 1) --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"1\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Fetches instruction and forces to upper-case --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"inst\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"translate(substring($code, $starting-at, 1), 'hq', 'HQ')\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Only if not at end --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst\u00a0!= ''\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'H'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$hello-world\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'Q'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span><span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '9'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$entire-bottles-song\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '+'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc-1\">&lt;!-- XSLT has no meaningful equivalent of write-only variables --&gt;</span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc-1\">&lt;!-- Otherwise, do nothing --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t\t<span class=\"sc-1\">&lt;!-- Proceed with next instruction --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$starting-at + 1\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:stylesheet<span class=\"re2\">&gt;</span></span></span></pre>"}, {"lang": "Ursa", "loc": 53, "block": "<pre class=\"xml highlighted_source\"><span class=\"sc3\"><span class=\"re1\">&lt;?xml</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">?&gt;</span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;xsl:stylesheet</span> <span class=\"re0\">xmlns:xsl</span>=<span class=\"st0\">\"http://www.w3.org/1999/XSL/Transform\"</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">&gt;</span></span><br/>\t<span class=\"sc-1\">&lt;!-- bottles.xsl defines $entire-bottles-song --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:import</span> <span class=\"re0\">href</span>=<span class=\"st0\">\"bottles.xsl\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:output</span> <span class=\"re0\">method</span>=<span class=\"st0\">\"text\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"utf-8\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"hello-world\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span>Hello, world!<span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:variable<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Main template --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">match</span>=<span class=\"st0\">\"/\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"string(.)\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Runs HQ9+ code from string starting at given index (default 1) --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"1\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Fetches instruction and forces to upper-case --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"inst\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"translate(substring($code, $starting-at, 1), 'hq', 'HQ')\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Only if not at end --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst\u00a0!= ''\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'H'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$hello-world\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'Q'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span><span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '9'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$entire-bottles-song\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '+'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc-1\">&lt;!-- XSLT has no meaningful equivalent of write-only variables --&gt;</span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc-1\">&lt;!-- Otherwise, do nothing --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t\t<span class=\"sc-1\">&lt;!-- Proceed with next instruction --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$starting-at + 1\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:stylesheet<span class=\"re2\">&gt;</span></span></span></pre>"}, {"lang": "Ursala", "loc": 53, "block": "<pre class=\"xml highlighted_source\"><span class=\"sc3\"><span class=\"re1\">&lt;?xml</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">?&gt;</span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;xsl:stylesheet</span> <span class=\"re0\">xmlns:xsl</span>=<span class=\"st0\">\"http://www.w3.org/1999/XSL/Transform\"</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">&gt;</span></span><br/>\t<span class=\"sc-1\">&lt;!-- bottles.xsl defines $entire-bottles-song --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:import</span> <span class=\"re0\">href</span>=<span class=\"st0\">\"bottles.xsl\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:output</span> <span class=\"re0\">method</span>=<span class=\"st0\">\"text\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"utf-8\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"hello-world\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span>Hello, world!<span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:variable<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Main template --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">match</span>=<span class=\"st0\">\"/\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"string(.)\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Runs HQ9+ code from string starting at given index (default 1) --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"1\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Fetches instruction and forces to upper-case --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"inst\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"translate(substring($code, $starting-at, 1), 'hq', 'HQ')\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Only if not at end --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst\u00a0!= ''\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'H'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$hello-world\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'Q'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span><span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '9'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$entire-bottles-song\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '+'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc-1\">&lt;!-- XSLT has no meaningful equivalent of write-only variables --&gt;</span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc-1\">&lt;!-- Otherwise, do nothing --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t\t<span class=\"sc-1\">&lt;!-- Proceed with next instruction --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$starting-at + 1\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:stylesheet<span class=\"re2\">&gt;</span></span></span></pre>"}, {"lang": "XSLT", "loc": 53, "block": "<pre class=\"xml highlighted_source\"><span class=\"sc3\"><span class=\"re1\">&lt;?xml</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">?&gt;</span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;xsl:stylesheet</span> <span class=\"re0\">xmlns:xsl</span>=<span class=\"st0\">\"http://www.w3.org/1999/XSL/Transform\"</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">&gt;</span></span><br/>\t<span class=\"sc-1\">&lt;!-- bottles.xsl defines $entire-bottles-song --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:import</span> <span class=\"re0\">href</span>=<span class=\"st0\">\"bottles.xsl\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:output</span> <span class=\"re0\">method</span>=<span class=\"st0\">\"text\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"utf-8\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"hello-world\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span>Hello, world!<span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:variable<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Main template --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">match</span>=<span class=\"st0\">\"/\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"string(.)\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Runs HQ9+ code from string starting at given index (default 1) --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"1\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Fetches instruction and forces to upper-case --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"inst\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"translate(substring($code, $starting-at, 1), 'hq', 'HQ')\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Only if not at end --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst\u00a0!= ''\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'H'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$hello-world\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = 'Q'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:text<span class=\"re2\">&gt;</span></span></span><span class=\"sc1\">&amp;#10;</span><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:text<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '9'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$entire-bottles-song\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:when</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$inst = '+'\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t\t<span class=\"sc-1\">&lt;!-- XSLT has no meaningful equivalent of write-only variables --&gt;</span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:when<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t\t<span class=\"sc-1\">&lt;!-- Otherwise, do nothing --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:choose<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t\t<span class=\"sc-1\">&lt;!-- Proceed with next instruction --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"run\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"code\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$code\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"starting-at\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$starting-at + 1\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:stylesheet<span class=\"re2\">&gt;</span></span></span></pre>"}, {"lang": "zkl", "loc": 23, "block": "<pre class=\"text highlighted_source\">fcn runHQ9(code){<br/>   acc:=0;<br/>   foreach c in (code){<br/>      switch(c){<br/>\t case(\"H\"){ println(\"hello, world\"); }<br/>\t case(\"Q\"){ print(code); }<br/>\t case(\"+\"){ acc+=1; }<br/>\t case(\"9\"){ wall_O_beer(); }<br/>      }<br/>   }<br/>}<br/>fcn wall_O_beer(){<br/>   [99..0,-1].pump(fcn(n){<br/>      println(beers(n), \" on the wall, \", beers(n).toLower(), \".\\n\",<br/>\t n==0 and (\"Go to the store and buy some more, 99 bottles of beer\") or<br/>\t (\"Take one down and pass it around, \" + beers(n-1).toLower()),<br/>\t \" on the wall.\\n\")<br/>   });<br/>}<br/>fcn beers(n){<br/>    (n==0 and \"No more bottles\" or (n==1 and \"1 bottle\" or \"\" + n + \" bottles\"))<br/>    + \" of beer\"<br/>}</pre>"}]}