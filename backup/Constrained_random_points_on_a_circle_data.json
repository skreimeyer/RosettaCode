{"task": "Constrained_random_points_on_a_circle", "blocks": [{"lang": "Ada", "loc": 94, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>;<br/><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span>;<br/><span class=\"kw3\">procedure</span> Circle <span class=\"kw1\">is</span><br/>   <span class=\"co1\">-- extreme coordinate values are -15:0, 15:0, 0:-15, 0:15</span><br/>   <span class=\"kw3\">subtype</span> Coordinate <span class=\"kw1\">is</span> Integer <span class=\"kw3\">range</span> -<span class=\"nu0\">15</span> .. <span class=\"nu0\">15</span>;<br/>   <span class=\"kw3\">type</span> Point <span class=\"kw1\">is</span> <span class=\"kw3\">record</span><br/>      X, Y\u00a0: Coordinate;<br/>   <span class=\"kw1\">end</span> <span class=\"kw3\">record</span>;<br/>   <span class=\"kw3\">type</span> Point_List <span class=\"kw1\">is</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Positive <span class=\"kw3\">range</span> &lt;&gt;<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Point;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Acceptable <span class=\"br0\">(</span>Position\u00a0: Point<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Boolean <span class=\"kw1\">is</span><br/>      Squared_Sum\u00a0: Natural\u00a0:= Position.<span class=\"me1\">X</span> ** <span class=\"nu0\">2</span> + Position.<span class=\"me1\">Y</span> ** <span class=\"nu0\">2</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">return</span> <span class=\"nu0\">10</span> ** <span class=\"nu0\">2</span> &lt;= Squared_Sum <span class=\"kw2\">and</span> Squared_Sum &lt;= <span class=\"nu0\">15</span> ** <span class=\"nu0\">2</span>;<br/>   <span class=\"kw1\">end</span> Acceptable;<br/>\u00a0<br/>   <span class=\"co1\">-- first algorithm</span><br/>   <span class=\"kw3\">function</span> Generate_Random_Points<br/>     <span class=\"br0\">(</span>Count\u00a0: Positive\u00a0:= <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span>  Point_List<br/>   <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">package</span> RNG <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span> <span class=\"br0\">(</span>Coordinate<span class=\"br0\">)</span>;<br/>      Generator \u00a0: RNG.<span class=\"me1\">Generator</span>;<br/>      Next_Point\u00a0: Point;<br/>      Result    \u00a0: Point_List <span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"me1\">Count</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">begin</span><br/>      RNG.<span class=\"me1\">Reset</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> N <span class=\"kw3\">in</span> Result'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">loop</span><br/>            Next_Point.<span class=\"me1\">X</span>\u00a0:= RNG.<span class=\"me1\">Random</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span>;<br/>            Next_Point.<span class=\"me1\">Y</span>\u00a0:= RNG.<span class=\"me1\">Random</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span>;<br/>            <span class=\"kw3\">exit</span> <span class=\"kw3\">when</span> Acceptable <span class=\"br0\">(</span>Next_Point<span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         Result <span class=\"br0\">(</span>N<span class=\"br0\">)</span>\u00a0:= Next_Point;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Result;<br/>   <span class=\"kw1\">end</span> Generate_Random_Points;<br/>\u00a0<br/>   <span class=\"co1\">-- second algorithm</span><br/>   <span class=\"kw3\">function</span> Choose_Precalculated<br/>     <span class=\"br0\">(</span>Count\u00a0: Positive\u00a0:= <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span>  Point_List<br/>   <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">subtype</span> Possible_Points <span class=\"kw1\">is</span> Positive <span class=\"kw3\">range</span> <span class=\"nu0\">1</span> .. <span class=\"nu0\">404</span>;<br/>      <span class=\"kw3\">package</span> RNG <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Ada.<span class=\"me1\">Numerics</span>.<span class=\"me1\">Discrete_Random</span> <span class=\"br0\">(</span>Possible_Points<span class=\"br0\">)</span>;<br/>      Generator \u00a0: RNG.<span class=\"me1\">Generator</span>;<br/>      Point_Pool\u00a0: Point_List <span class=\"br0\">(</span>Possible_Points<span class=\"br0\">)</span>;<br/>      Next_Point\u00a0: Point;<br/>      Next_Index\u00a0: Possible_Points\u00a0:= <span class=\"nu0\">1</span>;<br/>      Result    \u00a0: Point_List <span class=\"br0\">(</span><span class=\"nu0\">1</span> .. <span class=\"me1\">Count</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"co1\">-- precalculate</span><br/>      Precalculate\u00a0: <span class=\"kw1\">for</span> X <span class=\"kw3\">in</span> Coordinate'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Next_Point.<span class=\"me1\">X</span>\u00a0:= X;<br/>         <span class=\"kw1\">for</span> Y <span class=\"kw3\">in</span> Coordinate'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>            Next_Point.<span class=\"me1\">Y</span>\u00a0:= Y;<br/>            <span class=\"kw1\">if</span> Acceptable <span class=\"br0\">(</span>Next_Point<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>               Point_Pool <span class=\"br0\">(</span>Next_Index<span class=\"br0\">)</span>\u00a0:= Next_Point;<br/>               <span class=\"kw3\">exit</span> Precalculate <span class=\"kw3\">when</span> Next_Index = Possible_Points'Last;<br/>               Next_Index\u00a0:= Next_Index + <span class=\"nu0\">1</span>;<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span> Precalculate;<br/>      <span class=\"co1\">-- choose</span><br/>      RNG.<span class=\"me1\">Reset</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">for</span> N <span class=\"kw3\">in</span> Result'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Result <span class=\"br0\">(</span>N<span class=\"br0\">)</span>\u00a0:= Point_Pool <span class=\"br0\">(</span>RNG.<span class=\"me1\">Random</span> <span class=\"br0\">(</span>Generator<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">return</span> Result;<br/>   <span class=\"kw1\">end</span> Choose_Precalculated;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> Print_Points <span class=\"br0\">(</span>Points\u00a0: Point_List<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      Output_String\u00a0: <span class=\"kw3\">array</span> <span class=\"br0\">(</span>Coordinate, Coordinate<span class=\"br0\">)</span> <span class=\"kw3\">of</span> Character\u00a0:=<br/>        <span class=\"br0\">(</span><span class=\"kw3\">others</span> =&gt; <span class=\"br0\">(</span><span class=\"kw3\">others</span> =&gt; ' '<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">for</span> N <span class=\"kw3\">in</span> Points'<span class=\"kw3\">Range</span> <span class=\"kw1\">loop</span><br/>         Output_String <span class=\"br0\">(</span>Points <span class=\"br0\">(</span>N<span class=\"br0\">)</span>.<span class=\"me1\">X</span>, Points <span class=\"br0\">(</span>N<span class=\"br0\">)</span>.<span class=\"me1\">Y</span><span class=\"br0\">)</span>\u00a0:= '*';<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>      <span class=\"kw1\">for</span> Line <span class=\"kw3\">in</span> Output_String'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>         <span class=\"kw1\">for</span> Column <span class=\"kw3\">in</span> Output_String'<span class=\"kw3\">Range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">loop</span><br/>            Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put</span> <span class=\"br0\">(</span>Output_String <span class=\"br0\">(</span>Column, Line<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>         <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>         Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">New_Line</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/>   <span class=\"kw1\">end</span> Print_Points;<br/>\u00a0<br/>   My_Circle_Randomly     \u00a0: Point_List\u00a0:= Generate_Random_Points;<br/>   My_Circle_Precalculated\u00a0: Point_List\u00a0:= Choose_Precalculated;<br/><span class=\"kw1\">begin</span><br/>   Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Randomly generated:\"</span><span class=\"br0\">)</span>;<br/>   Print_Points <span class=\"br0\">(</span>My_Circle_Randomly<span class=\"br0\">)</span>;<br/>   Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">Put_Line</span> <span class=\"br0\">(</span><span class=\"st0\">\"Chosen from precalculated:\"</span><span class=\"br0\">)</span>;<br/>   Print_Points <span class=\"br0\">(</span>My_Circle_Precalculated<span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> Circle;</pre>"}, {"lang": "ALGOL 68", "loc": 72, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"kw4\">PROC</span> clrscr <span class=\"sy1\">=</span> <span class=\"kw3\">VOID</span><span class=\"sy1\">:</span> <br/>        <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"st0\">\"[2J\"</span>$<span class=\"sy1\">,</span><span class=\"kw8\">REPR</span> 27<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># ansi.sys #</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> gotoxy <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> x<span class=\"sy1\">,</span>y<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span> <br/>        <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$g<span class=\"st0\">\"[\"</span>g<span class=\"br0\">(</span>0<span class=\"br0\">)</span><span class=\"st0\">\";\"</span>g<span class=\"br0\">(</span>0<span class=\"br0\">)</span><span class=\"st0\">\"H\"</span>$<span class=\"sy1\">,</span><span class=\"kw8\">REPR</span> 27<span class=\"sy1\">,</span> y<span class=\"sy1\">,</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># ansi.sys #</span><br/>\u00a0<br/><span class=\"kw4\">MODE</span> POINT <span class=\"sy1\">=</span> <span class=\"kw6\">STRUCT</span><span class=\"br0\">(</span><br/>    <span class=\"kw3\">INT</span> x<span class=\"sy1\">,</span>y<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw3\">INT</span> radius <span class=\"sy1\">=</span> 15<span class=\"sy1\">;</span><br/><span class=\"kw3\">INT</span> inside radius <span class=\"sy1\">=</span> 10<span class=\"sy1\">;</span><br/>\u00a0<br/>POINT center <span class=\"sy1\">=</span> <span class=\"br0\">(</span>radius<span class=\"sy1\">+</span>1<span class=\"sy1\">,</span> radius<span class=\"sy1\">+</span>1<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">FLEX</span><span class=\"br0\">[</span>0<span class=\"br0\">]</span>POINT set<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> swap with last set <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">INT</span> position<span class=\"sy1\">,</span><span class=\"kw3\">INT</span> where last set<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>        <span class=\"kw3\">INT</span> temp <span class=\"sy1\">:=</span> x <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>position<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        x <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>position<span class=\"br0\">]</span><span class=\"sy1\">:=</span>x <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>where last set<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        x <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>where last set<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> temp<span class=\"sy1\">;</span><br/>\u00a0<br/>        temp <span class=\"sy1\">:=</span> y <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>position<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        y <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>position<span class=\"br0\">]</span><span class=\"sy1\">:=</span>y <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>where last set<span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>        y <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>where last set<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> temp<br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> <span class=\"kw22\">create</span> set <span class=\"sy1\">=</span> <span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>        set <span class=\"sy1\">:=</span> <span class=\"kw4\">HEAP</span><span class=\"br0\">[</span><span class=\"br0\">(</span>2<span class=\"sy1\">*</span>radius<span class=\"sy1\">+</span>1<span class=\"br0\">)</span><span class=\"sy1\">**</span>2<span class=\"br0\">]</span>POINT<span class=\"sy1\">;</span><br/>        <span class=\"kw3\">INT</span> x<span class=\"sy1\">,</span>y<span class=\"sy1\">,</span>i<span class=\"sy1\">:=</span><span class=\"kw8\">LWB</span> set<span class=\"sy1\">;</span><br/>\u00a0<br/>        <span class=\"kw2\">FOR</span> x <span class=\"kw2\">FROM</span> <span class=\"sy1\">-</span>radius <span class=\"kw2\">TO</span> radius <span class=\"kw2\">DO</span><br/>                <span class=\"kw2\">FOR</span> y <span class=\"kw2\">FROM</span> <span class=\"sy1\">-</span>radius <span class=\"kw2\">TO</span> radius <span class=\"kw2\">DO</span><br/>                        <span class=\"kw2\">IF</span> <span class=\"kw24\">sqrt</span><span class=\"br0\">(</span>x<span class=\"sy1\">*</span>x<span class=\"sy1\">+</span>y<span class=\"sy1\">*</span>y<span class=\"br0\">)</span><span class=\"sy1\">&gt;=</span>inside radius <span class=\"kw16\">AND</span> <span class=\"kw24\">sqrt</span><span class=\"br0\">(</span>x<span class=\"sy1\">*</span>x<span class=\"sy1\">+</span>y<span class=\"sy1\">*</span>y<span class=\"br0\">)</span><span class=\"sy1\">&lt;=</span>radius <span class=\"kw2\">THEN</span><br/>                                x <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> x<span class=\"sy1\">;</span><br/>                                y <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">:=</span> y<span class=\"sy1\">;</span><br/>                                i<span class=\"sy1\">+:=</span>1<br/>                        <span class=\"kw2\">FI</span><br/>                <span class=\"kw2\">OD</span><br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>\u00a0<br/>        set<span class=\"sy1\">:=</span>set<span class=\"br0\">[</span><span class=\"sy1\">:</span>i<span class=\"sy1\">-</span>1<span class=\"br0\">]</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw4\">PROC</span> plot fuzzy set <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">CHAR</span> ch<span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>        <span class=\"kw3\">INT</span> pos<span class=\"sy1\">,</span>i<span class=\"sy1\">;</span><br/>\u00a0<br/>        <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> set <span class=\"kw2\">DO</span><br/>                pos <span class=\"sy1\">:=</span> <span class=\"kw8\">ENTIER</span><span class=\"br0\">(</span>random <span class=\"sy1\">*</span> <span class=\"kw8\">UPB</span> set<span class=\"br0\">)</span> <span class=\"sy1\">+</span> 1<span class=\"sy1\">;</span><br/>\u00a0<br/>                gotoxy<span class=\"br0\">(</span>x <span class=\"kw6\">OF</span> center <span class=\"sy1\">+</span> x <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>pos<span class=\"br0\">]</span><span class=\"sy1\">,</span>y <span class=\"kw6\">OF</span> center <span class=\"sy1\">+</span> y <span class=\"kw6\">OF</span> set<span class=\"br0\">[</span>pos<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>                <span class=\"kw22\">print</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>                swap with last set<span class=\"br0\">(</span>pos<span class=\"sy1\">,</span><span class=\"kw8\">UPB</span> set<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw2\">OD</span><br/><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>main<span class=\"sy1\">:</span><br/><span class=\"br0\">(</span><br/>        <span class=\"coMULTI\"># srand((INT)time(NIL)); #</span><br/>\u00a0<br/>        clrscr<span class=\"sy1\">;</span><br/>        <span class=\"kw22\">create</span> set<span class=\"sy1\">;</span><br/>        plot fuzzy set<span class=\"br0\">(</span><span class=\"st0\">\"*\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        gotoxy<span class=\"br0\">(</span>2<span class=\"sy1\">*</span>radius<span class=\"sy1\">+</span>1<span class=\"sy1\">,</span> 2<span class=\"sy1\">*</span>radius<span class=\"sy1\">+</span>1<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw22\">newline</span><span class=\"br0\">(</span>stand in<span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "AutoHotkey", "loc": 18, "block": "<pre class=\"ahk highlighted_source\">z<span class=\"sy0\">=</span><span class=\"nu0\">100</span> <span class=\"co1\">; x = x-coord; y = y-coord; z = count; pBitmap = a pointer to the image; f = filename</span><br/>\u00a0<br/>pToken\t<span class=\"sy0\">:=</span> Gdip_Startup<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>pBitmap <span class=\"sy0\">:=</span> Gdip_CreateBitmap<span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"sy0\">,</span> <span class=\"nu0\">32</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">While</span> z<br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Random.htm\"><span class=\"kw3\">Random</span></a><span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">,</span><span class=\"nu0\">20</span><br/>\t<span class=\"kw1\">If</span> <span class=\"br0\">(</span> t <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">sqrt</span></a><span class=\"br0\">(</span>x<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> y<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&amp;&amp;</span> t <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><br/>\t\tGdip_SetPixel<span class=\"br0\">(</span>pBitmap<span class=\"sy0\">,</span> x<span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> y<span class=\"sy0\">+</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">255</span><span class=\"sy0\">&lt;&lt;</span><span class=\"nu0\">24</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> z<span class=\"sy0\">--</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>Gdip_SaveBitmapToFile<span class=\"br0\">(</span>pBitmap<span class=\"sy0\">,</span> f <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_ScriptDir\"><span class=\"kw2\">A_ScriptDir</span></a> <span class=\"st0\">\"\\ahk_fuzzycircle.png\"</span><span class=\"br0\">)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/Run.htm\"><span class=\"kw3\">run</span></a>\u00a0% f<br/>\u00a0<br/>Gdip_DisposeImage<span class=\"br0\">(</span>pBitmap<span class=\"br0\">)</span><br/>Gdip_Shutdown<span class=\"br0\">(</span>pToken<span class=\"br0\">)</span></pre>"}, {"lang": "BASIC", "loc": 8, "block": "<pre class=\"text highlighted_source\">      MODE 8<br/>      ORIGIN 640, 512<br/>      FOR i% = 1 TO 1000<br/>        x% = RND(31)-16<br/>        y% = RND(31)-16<br/>        r = SQR(x%^2 + y%^2)<br/>        IF r &gt;= 10 IF r &lt;= 15 PLOT x%*2, y%*2<br/>      NEXT</pre>"}, {"lang": "C", "loc": 35, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw2\">inline</span><br/><span class=\"kw4\">int</span> randn<span class=\"br0\">(</span><span class=\"kw4\">int</span> m<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> rand_max <span class=\"sy0\">=</span> RAND_MAX <span class=\"sy0\">-</span> <span class=\"br0\">(</span>RAND_MAX <span class=\"sy0\">%</span> m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> r<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>r <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> rand_max<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> r <span class=\"sy0\">/</span> <span class=\"br0\">(</span>rand_max <span class=\"sy0\">/</span> m<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> i<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> r2<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> buf<span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* could just use 2d array */</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tx <span class=\"sy0\">=</span> randn<span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\t\ty <span class=\"sy0\">=</span> randn<span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\t\tr2 <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x <span class=\"sy0\">+</span> y <span class=\"sy0\">*</span> y<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>r2 <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">100</span> <span class=\"sy0\">&amp;&amp;</span> r2 <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">225</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tbuf<span class=\"br0\">[</span><span class=\"nu0\">15</span> <span class=\"sy0\">+</span> y<span class=\"br0\">]</span> <span class=\"sy0\">|=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\ti<span class=\"sy0\">++;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>y <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;</span> <span class=\"nu0\">31</span><span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">31</span><span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span>buf<span class=\"br0\">[</span>y<span class=\"br0\">]</span> <span class=\"sy0\">&amp;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">&lt;&lt;</span> x<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\". \"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"  \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 67, "block": "<pre class=\"cpp highlighted_source\">\u00a0<br/><span class=\"co2\">#include &lt;windows.h&gt;</span><br/><span class=\"co2\">#include &lt;list&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/>\u00a0<br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> point<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">int</span> x, y<span class=\"sy4\">;</span><br/>    point<span class=\"br0\">(</span><span class=\"br0\">)</span>                  <span class=\"br0\">{</span> x <span class=\"sy1\">=</span> y <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    point<span class=\"br0\">(</span> <span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b <span class=\"br0\">)</span>    <span class=\"br0\">{</span> x <span class=\"sy1\">=</span> a<span class=\"sy4\">;</span> y <span class=\"sy1\">=</span> b<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw4\">void</span> set<span class=\"br0\">(</span> <span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b <span class=\"br0\">)</span> <span class=\"br0\">{</span> x <span class=\"sy1\">=</span> a<span class=\"sy4\">;</span> y <span class=\"sy1\">=</span> b<span class=\"sy4\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw2\">class</span> rndCircle<br/><span class=\"br0\">{</span><br/><span class=\"kw2\">public</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> draw<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tcreatePoints<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tdrawPoints<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">private</span><span class=\"sy4\">:</span><br/>    <span class=\"kw4\">void</span> createPoints<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tpoint pt<span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span> x <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span> x <span class=\"sy1\">&lt;</span> <span class=\"nu0\">200</span><span class=\"sy4\">;</span> x<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t<span class=\"br0\">{</span><br/>\t    <span class=\"kw4\">int</span> a, b, c<span class=\"sy4\">;</span><br/>\t    <span class=\"kw1\">while</span><span class=\"br0\">(</span> <span class=\"kw2\">true</span> <span class=\"br0\">)</span><br/>\t    <span class=\"br0\">{</span><br/>\t\ta <span class=\"sy1\">=</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> <span class=\"nu0\">31</span> <span class=\"sy2\">-</span> <span class=\"nu0\">15</span><span class=\"sy4\">;</span><br/>\t\tb <span class=\"sy1\">=</span> <span class=\"kw3\">rand</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy2\">%</span> <span class=\"nu0\">31</span> <span class=\"sy2\">-</span> <span class=\"nu0\">15</span><span class=\"sy4\">;</span><br/>\t\tc <span class=\"sy1\">=</span> a <span class=\"sy2\">*</span> a <span class=\"sy2\">+</span> b <span class=\"sy2\">*</span> b<span class=\"sy4\">;</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> c <span class=\"sy1\">&gt;=</span> <span class=\"nu0\">100</span> <span class=\"sy3\">&amp;&amp;</span> c <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">225</span> <span class=\"br0\">)</span> <span class=\"kw1\">break</span><span class=\"sy4\">;</span><br/>\t    <span class=\"br0\">}</span><br/>\t    pt.<span class=\"me1\">set</span><span class=\"br0\">(</span> a, b <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t    _ptList.<span class=\"me1\">push_back</span><span class=\"br0\">(</span> pt <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> drawPoints<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>\tHDC dc <span class=\"sy1\">=</span> GetDC<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span> list<span class=\"sy1\">&lt;</span>point<span class=\"sy1\">&gt;</span><span class=\"sy4\">::</span><span class=\"me2\">iterator</span> it <span class=\"sy1\">=</span> _ptList.<span class=\"me1\">begin</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> it <span class=\"sy3\">!</span><span class=\"sy1\">=</span> _ptList.<span class=\"me1\">end</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span> it<span class=\"sy2\">++</span> <span class=\"br0\">)</span><br/>\t    SetPixel<span class=\"br0\">(</span> dc, <span class=\"nu0\">300</span> <span class=\"sy2\">+</span> <span class=\"nu0\">10</span> <span class=\"sy2\">*</span> <span class=\"br0\">(</span> <span class=\"sy2\">*</span>it <span class=\"br0\">)</span>.<span class=\"me1\">x</span>, <span class=\"nu0\">300</span> <span class=\"sy2\">+</span> <span class=\"nu0\">10</span> <span class=\"sy2\">*</span> <span class=\"br0\">(</span> <span class=\"sy2\">*</span>it <span class=\"br0\">)</span>.<span class=\"me1\">y</span>, RGB<span class=\"br0\">(</span> <span class=\"nu0\">255</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    list<span class=\"sy1\">&lt;</span>point<span class=\"sy1\">&gt;</span> _ptList<span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><span class=\"sy4\">;</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span> <span class=\"kw4\">int</span> argc, <span class=\"kw4\">char</span><span class=\"sy2\">*</span> argv<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    ShowWindow<span class=\"br0\">(</span> GetConsoleWindow<span class=\"br0\">(</span><span class=\"br0\">)</span>, SW_MAXIMIZE <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">srand</span><span class=\"br0\">(</span> GetTickCount<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    rndCircle c<span class=\"sy4\">;</span><br/>    c.<span class=\"me1\">draw</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw3\">system</span><span class=\"br0\">(</span> <span class=\"st0\">\"pause\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"co1\">//--------------------------------------------------------------------------------------------------</span><br/>\u00a0</pre>"}, {"lang": "C#", "loc": 38, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Diagnostics</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Drawing</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">namespace</span> RosettaConstrainedRandomCircle<br/><span class=\"br0\">{</span><br/>    <span class=\"kw4\">class</span> Program<br/>    <span class=\"br0\">{</span><br/>        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"kw1\">var</span> points <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">[</span><span class=\"nu0\">404</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">;</span> y <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span> y<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">404</span><span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    <span class=\"kw1\">var</span> c <span class=\"sy0\">=</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Sqrt</span><span class=\"br0\">(</span>x <span class=\"sy0\">*</span> x <span class=\"sy0\">+</span> y <span class=\"sy0\">*</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">10</span> <span class=\"sy0\">&lt;=</span> c <span class=\"sy0\">&amp;&amp;</span> c <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>                    <span class=\"br0\">{</span><br/>                        points<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Point<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> bm <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Bitmap<span class=\"br0\">(</span><span class=\"nu0\">600</span>, <span class=\"nu0\">600</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">var</span> g <span class=\"sy0\">=</span> Graphics<span class=\"sy0\">.</span><span class=\"me1\">FromImage</span><span class=\"br0\">(</span>bm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">var</span> brush <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> SolidBrush<span class=\"br0\">(</span>Color<span class=\"sy0\">.</span><span class=\"me1\">Magenta</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw1\">var</span> r <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> <span class=\"kw5\">System</span><span class=\"sy0\">.</span><span class=\"me1\">Random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> count <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> count<span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                <span class=\"kw1\">var</span> p <span class=\"sy0\">=</span> points<span class=\"br0\">[</span>r<span class=\"sy0\">.</span><span class=\"me1\">Next</span><span class=\"br0\">(</span><span class=\"nu0\">403</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                g<span class=\"sy0\">.</span><span class=\"me1\">FillEllipse</span><span class=\"br0\">(</span>brush, <a href=\"http://www.google.com/search?q=new+msdn.microsoft.com\"><span class=\"kw3\">new</span></a> Rectangle<span class=\"br0\">(</span><span class=\"nu0\">290</span> <span class=\"sy0\">+</span> <span class=\"nu0\">19</span> <span class=\"sy0\">*</span> p<span class=\"sy0\">.</span><span class=\"me1\">X</span>, <span class=\"nu0\">290</span> <span class=\"sy0\">+</span> <span class=\"nu0\">19</span> <span class=\"sy0\">*</span> p<span class=\"sy0\">.</span><span class=\"me1\">Y</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">const</span> <span class=\"kw4\">string</span> filename <span class=\"sy0\">=</span> <span class=\"st0\">\"Constrained Random Circle.png\"</span><span class=\"sy0\">;</span><br/>            bm<span class=\"sy0\">.</span><span class=\"me1\">Save</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            Process<span class=\"sy0\">.</span><span class=\"me1\">Start</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 19, "block": "<pre class=\"clojure highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">ns</span> rosettacode<span class=\"sy0\">.</span>circle<span class=\"sy0\">-</span>random<span class=\"sy0\">-</span>points<br/>  <span class=\"br0\">(</span>:<span class=\"kw1\">import</span> <span class=\"br0\">[</span>java<span class=\"sy0\">.</span>awt Color Graphics Dimension<span class=\"br0\">]</span><br/>           <span class=\"br0\">[</span>javax<span class=\"sy0\">.</span>swing JFrame JPanel<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>points <span class=\"br0\">(</span><span class=\"sy0\">-&gt;&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">for</span> <span class=\"br0\">[</span>x <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span>, y <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>\t\t\t:<span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span> <span class=\"br0\">(</span>Math<span class=\"sy0\">/</span>hypot x y<span class=\"br0\">)</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\t\t    <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy0\">+</span> x <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> y <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t  shuffle<br/>\t\t  <span class=\"br0\">(</span><span class=\"kw1\">take</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">doto</span> <span class=\"br0\">(</span>JFrame<span class=\"sy0\">.</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">.</span>add <span class=\"br0\">(</span><span class=\"kw1\">doto</span> <span class=\"br0\">(</span><span class=\"kw1\">proxy</span> <span class=\"br0\">[</span>JPanel<span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\t\t  <span class=\"br0\">(</span>paint <span class=\"br0\">[</span><span class=\"sy0\">^</span>Graphics g<span class=\"br0\">]</span><br/>                    <span class=\"br0\">(</span><span class=\"kw1\">doseq</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>x y<span class=\"br0\">]</span> points<span class=\"br0\">]</span><br/>                      <span class=\"br0\">(</span><span class=\"sy0\">.</span>fillRect g <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">10</span> x<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"nu0\">10</span> y<span class=\"br0\">)</span> <span class=\"nu0\">10</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span><span class=\"sy0\">.</span>setPreferredSize <span class=\"br0\">(</span>Dimension<span class=\"sy0\">.</span> <span class=\"nu0\">310</span> <span class=\"nu0\">310</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">.</span>setResizable false<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"sy0\">.</span>setDefaultCloseOperation JFrame<span class=\"sy0\">/</span>DISPOSE_ON_CLOSE<span class=\"br0\">)</span><br/>    <span class=\"sy0\">.</span>pack<br/>    <span class=\"sy0\">.</span>show<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 115, "block": "<pre class=\"cobol highlighted_source\">\u00a0<br/>       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> circle<span class=\"sy0\">.</span><br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">input-output</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">file-control</span><span class=\"sy0\">.</span><br/>           <span class=\"kw3\">select</span> plot-<span class=\"kw3\">file</span> <span class=\"kw3\">assign</span> <span class=\"st0\">\"circle.txt\"</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">file</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">fd</span> plot-<span class=\"kw3\">file</span> <span class=\"kw3\">report</span> plot<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> <span class=\"kw3\">binary</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> seed <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">18</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> x <span class=\"kw3\">pic</span> s9<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> y <span class=\"kw3\">pic</span> s9<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> i <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> dot-<span class=\"kw3\">count</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> dot-count-<span class=\"kw1\">save</span> <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw3\">value</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> temp-points<span class=\"sy0\">.</span><br/>         <span class=\"nu0\">3</span> <span class=\"kw3\">pic</span> s9<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw3\">occurs</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> xy-<span class=\"kw3\">table</span><span class=\"sy0\">.</span><br/>         <span class=\"nu0\">3</span> point-pair <span class=\"kw3\">occurs</span> <span class=\"nu0\">0</span> <span class=\"kw2\">to</span> <span class=\"nu0\">404</span> <span class=\"kw3\">depending</span> dot-<span class=\"kw3\">count</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">4</span> x-point <span class=\"kw3\">pic</span> s9<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>          <span class=\"nu0\">4</span> y-point <span class=\"kw3\">pic</span> s9<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> plot-<span class=\"kw3\">table</span> <span class=\"kw3\">value</span> <span class=\"kw3\">all</span> <span class=\"st0\">\"0\"</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">occurs</span> <span class=\"nu0\">31</span><span class=\"sy0\">.</span><br/>         <span class=\"nu0\">3</span> dot <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span> <span class=\"kw3\">occurs</span> <span class=\"nu0\">31</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> cur-date-<span class=\"kw3\">time</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> yyyymmdd <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> hh <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> mm <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> ss <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> plot-work<span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> plot-item <span class=\"kw3\">pic</span> xb <span class=\"kw3\">occurs</span> <span class=\"nu0\">31</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">report</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">rd</span> plot<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">1</span> plot-<span class=\"kw3\">line</span> <span class=\"kw3\">type</span> <span class=\"kw3\">de</span><span class=\"sy0\">.</span><br/>        <span class=\"nu0\">2</span> <span class=\"kw3\">line</span> <span class=\"kw3\">plus</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/>         <span class=\"nu0\">3</span> <span class=\"kw3\">column</span> <span class=\"kw3\">is</span> <span class=\"nu0\">1</span> <span class=\"kw1\">source</span> <span class=\"kw3\">is</span> plot-work <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">62</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       begin<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">perform</span> compute-seed<br/>           <span class=\"kw2\">perform</span> find-all-valid-points<br/>           <span class=\"kw2\">perform</span> shuffle-point-pairs<br/>           <span class=\"kw2\">perform</span> select-<span class=\"nu0\">100</span>-dots<br/>           <span class=\"kw2\">perform</span> print-dots<br/>           <span class=\"kw3\">stop</span> <span class=\"kw3\">run</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       find-all-valid-points<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> x <span class=\"kw3\">from</span> -<span class=\"nu0\">15</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> x &gt; +<span class=\"nu0\">15</span><br/>               <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> y <span class=\"kw3\">from</span> -<span class=\"nu0\">15</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> y &gt; +<span class=\"nu0\">15</span><br/>                   <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">function</span> <span class=\"kw4\">sqrt</span> <span class=\"br0\">(</span>x<span class=\"sy0\"> ** </span><span class=\"nu0\">2</span><span class=\"sy0\"> + </span>y<span class=\"sy0\"> ** </span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                       &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"kw3\">and</span> &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">15</span><br/>                   <span class=\"kw3\">then</span><br/>                       <span class=\"kw2\">move</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> dot <span class=\"br0\">(</span>x<span class=\"sy0\"> + </span><span class=\"nu0\">16</span> y<span class=\"sy0\"> + </span><span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>                       <span class=\"kw2\">add</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> dot-<span class=\"kw3\">count</span><br/>                       <span class=\"kw2\">compute</span> x-point <span class=\"br0\">(</span>dot-<span class=\"kw3\">count</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> x<span class=\"sy0\"> + </span><span class=\"nu0\">16</span><br/>                       <span class=\"kw2\">compute</span> y-point <span class=\"br0\">(</span>dot-<span class=\"kw3\">count</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> y<span class=\"sy0\"> + </span><span class=\"nu0\">16</span><br/>                   end-<span class=\"kw1\">if</span><br/>               end-<span class=\"kw2\">perform</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"Total points: \"</span> dot-<span class=\"kw3\">count</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       shuffle-point-pairs<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">move</span> dot-<span class=\"kw3\">count</span> <span class=\"kw2\">to</span> dot-count-<span class=\"kw1\">save</span><br/>           <span class=\"kw2\">compute</span> i <span class=\"sy0\">=</span> <span class=\"kw3\">function</span> <span class=\"kw4\">random</span> <span class=\"br0\">(</span>seed<span class=\"br0\">)</span><span class=\"sy0\"> * </span>dot-<span class=\"kw3\">count</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> dot-<span class=\"kw3\">count</span> <span class=\"kw3\">from</span> dot-<span class=\"kw3\">count</span> <span class=\"kw3\">by</span> -<span class=\"nu0\">1</span><br/>           <span class=\"kw2\">until</span> dot-<span class=\"kw3\">count</span> &lt; <span class=\"nu0\">2</span><br/>               <span class=\"kw2\">move</span> point-pair <span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw2\">to</span> temp-points<br/>               <span class=\"kw2\">move</span> point-pair <span class=\"br0\">(</span>dot-<span class=\"kw3\">count</span><span class=\"br0\">)</span> <span class=\"kw2\">to</span> point-pair <span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>               <span class=\"kw2\">move</span> temp-points  <span class=\"kw2\">to</span> point-pair <span class=\"br0\">(</span>dot-<span class=\"kw3\">count</span><span class=\"br0\">)</span><br/>               <span class=\"kw2\">compute</span> i <span class=\"sy0\">=</span> <span class=\"kw3\">function</span> <span class=\"kw4\">random</span><span class=\"sy0\"> * </span>dot-<span class=\"kw3\">count</span><span class=\"sy0\"> + </span><span class=\"nu0\">1</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"kw2\">move</span> dot-count-<span class=\"kw1\">save</span> <span class=\"kw2\">to</span> dot-<span class=\"kw3\">count</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       select-<span class=\"nu0\">100</span>-dots<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span><br/>           <span class=\"kw2\">until</span> i &gt; <span class=\"nu0\">100</span><br/>               <span class=\"kw2\">compute</span> x <span class=\"sy0\">=</span> x-point <span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>               <span class=\"kw2\">compute</span> y <span class=\"sy0\">=</span> y-point <span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>               <span class=\"kw2\">move</span> <span class=\"nu0\">2</span> <span class=\"kw2\">to</span> dot <span class=\"br0\">(</span>x y<span class=\"br0\">)</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       print-dots<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">open</span> <span class=\"kw3\">output</span> plot-<span class=\"kw3\">file</span><br/>           <span class=\"kw3\">initiate</span> plot<br/>           <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> y <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> y &gt; <span class=\"nu0\">31</span><br/>               <span class=\"kw2\">move</span> <span class=\"kw3\">spaces</span> <span class=\"kw2\">to</span> plot-work<br/>               <span class=\"kw2\">perform</span> <span class=\"kw2\">varying</span> x <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">by</span> <span class=\"nu0\">1</span> <span class=\"kw2\">until</span> x &gt; <span class=\"nu0\">31</span><br/>                   <span class=\"kw1\">if</span> dot <span class=\"br0\">(</span>x y<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>                       <span class=\"kw2\">move</span> <span class=\"st0\">\"o\"</span> <span class=\"kw2\">to</span> plot-item <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>                   end-<span class=\"kw1\">if</span><br/>               end-<span class=\"kw2\">perform</span><br/>               <span class=\"kw3\">generate</span> plot-<span class=\"kw3\">line</span><br/>           end-<span class=\"kw2\">perform</span><br/>           <span class=\"kw3\">terminate</span> plot<br/>           <span class=\"kw2\">close</span> plot-<span class=\"kw3\">file</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       compute-seed<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">unstring</span> <span class=\"kw3\">function</span> current-<span class=\"kw3\">date</span> <span class=\"kw2\">into</span><br/>               yyyymmdd hh mm ss<br/>           <span class=\"kw2\">compute</span> seed <span class=\"sy0\">=</span><br/>               <span class=\"br0\">(</span><span class=\"kw3\">function</span> integer-of-<span class=\"kw3\">date</span> <span class=\"br0\">(</span>yyyymmdd<span class=\"br0\">)</span><span class=\"sy0\"> * </span><span class=\"nu0\">86400</span><span class=\"br0\">)</span><br/>           <span class=\"kw2\">compute</span> seed <span class=\"sy0\">=</span> seed<br/>                <span class=\"sy0\"> + </span><span class=\"br0\">(</span>hh<span class=\"sy0\"> * </span><span class=\"nu0\">3600</span><span class=\"br0\">)</span><span class=\"sy0\"> + </span><span class=\"br0\">(</span>mm<span class=\"sy0\"> * </span><span class=\"nu0\">60</span><span class=\"br0\">)</span><span class=\"sy0\"> + </span>ss<br/>           <span class=\"kw2\">compute</span> seed <span class=\"sy0\">=</span> <span class=\"kw3\">function</span> <span class=\"kw4\">mod</span> <span class=\"br0\">(</span>seed <span class=\"nu0\">32768</span><span class=\"br0\">)</span><br/>           <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> circle<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "CoffeeScript", "loc": 29, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>NUM_POINTS = <span class=\"nu0\">100</span><br/>MIN_R = <span class=\"nu0\">10</span><br/>MAX_R = <span class=\"nu0\">15</span><br/>\u00a0<br/>random_circle_points = <span class=\"sy0\">-&gt;</span><br/>  rand_point = <span class=\"sy0\">-&gt;</span><br/>    Math.<span class=\"me1\">floor</span> <span class=\"br0\">(</span>Math.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>MAX_R <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> MAX_R<span class=\"br0\">)</span><br/>\u00a0<br/>  points = <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>  cnt = <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">while</span> cnt <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><br/>    x = rand_point<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    y = rand_point<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">continue</span> <span class=\"kw1\">unless</span> MIN_R <span class=\"sy0\">*</span> MIN_R <span class=\"sy0\">&lt;</span>= x<span class=\"sy0\">*</span>x <span class=\"sy0\">+</span> y<span class=\"sy0\">*</span>y <span class=\"sy0\">&lt;</span>= MAX_R <span class=\"sy0\">*</span> MAX_R<br/>    points<span class=\"br0\">[</span><span class=\"st0\">\"#{x},#{y}\"</span><span class=\"br0\">]</span> = <span class=\"kw4\">true</span><br/>    cnt <span class=\"sy0\">+</span>= <span class=\"nu0\">1</span><br/>  points<br/>\u00a0<br/>plot = <span class=\"br0\">(</span>points<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  range = <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">*</span> MAX_R .. <span class=\"me1\">MAX_R</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> range<br/>    s = <span class=\"st0\">''</span><br/>    <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> range<br/>      s <span class=\"sy0\">+</span>= <span class=\"kw1\">if</span> points<span class=\"br0\">[</span><span class=\"st0\">\"#{x},#{y}\"</span><span class=\"br0\">]</span> <span class=\"kw1\">then</span> <span class=\"st0\">'*'</span> <span class=\"kw1\">else</span> <span class=\"st0\">' '</span><br/>    console.<span class=\"me1\">log</span> s<br/>\u00a0<br/>plot random_circle_points<span class=\"br0\">(</span><span class=\"br0\">)</span>    <br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 9, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>flet <span class=\"br0\">(</span><span class=\"br0\">(</span>good-p <span class=\"br0\">(</span>x y<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span> <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>* x x<span class=\"br0\">)</span> <span class=\"br0\">(</span>* y y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop with x with y with cnt <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>\twith scr <span class=\"sy0\">=</span> <span class=\"br0\">(</span>loop repeat <span class=\"nu0\">31</span> collect <span class=\"br0\">(</span>loop repeat <span class=\"nu0\">31</span> collect <span class=\"st0\">\"  \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\twhile <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> cnt <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span>good-p <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">setf</span> x <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><br/>\t\t\t <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">setf</span> y <span class=\"br0\">(</span><span class=\"kw1\">random</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t     <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>elt <span class=\"br0\">(</span>elt scr y<span class=\"br0\">)</span> x<span class=\"br0\">)</span> <span class=\"st0\">\"@ \"</span><span class=\"br0\">)</span><br/>\t     <span class=\"br0\">(</span>incf cnt<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\tfinally <span class=\"br0\">(</span><span class=\"kw1\">mapc</span> #'<span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>row<span class=\"br0\">)</span> <span class=\"br0\">(</span>format t <span class=\"st0\">\"~{~a~^~}~%\"</span> row<span class=\"br0\">)</span><span class=\"br0\">)</span> scr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 16, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">random</span><span class=\"sy0\">,</span> std.<span class=\"me1\">math</span><span class=\"sy0\">,</span> std.<span class=\"me1\">complex</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span> table <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> _<span class=\"sy0\">;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>            x <span class=\"sy0\">=</span> uniform<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            y <span class=\"sy0\">=</span> uniform<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">while</span><span class=\"br0\">(</span>abs<span class=\"br0\">(</span><span class=\"nu16\">12.5</span> <span class=\"sy0\">-</span> complex<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span>.<span class=\"me1\">abs</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu16\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        table<span class=\"br0\">[</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"br0\">[</span>y <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'*'</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    writefln<span class=\"br0\">(</span><span class=\"st0\">\"%-(%s<span class=\"es1\">\\n</span>%)\"</span><span class=\"sy0\">,</span> table<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "EchoLisp", "loc": 18, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'math<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>lib 'plot<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>points <span class=\"br0\">(</span>n <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>radius <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>rmin <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>rmax <span class=\"nu0\">15</span><span class=\"br0\">)</span>   <span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>clear<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>x<span class=\"sy0\">-</span>minmax <span class=\"br0\">(</span><span class=\"sy0\">-</span> rmax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>y<span class=\"sy0\">-</span>minmax<span class=\"br0\">(</span> <span class=\"sy0\">-</span> rmax<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\t<span class=\"br0\">(</span>for <span class=\"br0\">[</span><span class=\"br0\">(</span>i n<span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> x <span class=\"br0\">(</span>round <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span>random <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> rmax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> y <span class=\"br0\">(</span>round <span class=\"br0\">(</span><span class=\"sy0\">*</span> <span class=\"br0\">(</span>random <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> rmax<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t#:when <span class=\"br0\">(</span>in<span class=\"sy0\">-</span>interval? <span class=\"br0\">(</span>pythagore x y<span class=\"br0\">)</span> rmin rmax<span class=\"br0\">)</span><br/>\t<span class=\"co1\">;; add a little bit of randomness\u00a0: dots color and radius</span><br/>\t<span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>fill<span class=\"sy0\">-</span>color   <span class=\"br0\">(</span>hsv<span class=\"sy0\">-&gt;</span>rgb <span class=\"br0\">(</span>random<span class=\"br0\">)</span> <span class=\"nu0\">0.9</span> <span class=\"nu0\">0.9</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>circle x y <span class=\"br0\">(</span>random radius<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>plot<span class=\"sy0\">-</span>edit<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Elixir", "loc": 23, "block": "<pre class=\"text highlighted_source\">defmodule Random do<br/>  defp generate_point(0, _, _, set), do: set<br/>  defp generate_point(n, f, condition, set) do<br/>    point = {x,y} = {f.(), f.()}<br/>    if x*x + y*y in condition and not point in set,<br/>      do:   generate_point(n-1, f, condition, MapSet.put(set, point)),<br/>      else: generate_point(n,   f, condition, set)<br/>  end<br/>\u00a0<br/>  def circle do<br/>    f = fn -&gt;\u00a0:rand.uniform(31) - 16 end<br/>    points = generate_point(100, f, 10*10..15*15, MapSet.new)<br/>    range = -15..15<br/>    for x &lt;- range do<br/>      for y &lt;- range do<br/>        IO.write if {x,y} in points, do: \"x\", else: \" \"<br/>      end<br/>      IO.puts \"\"<br/>    end<br/>  end<br/>end<br/>\u00a0<br/>Random.circle</pre>"}, {"lang": "Euphoria", "loc": 65, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">include</span> std<span class=\"sy1\">/</span>console.e<br/>\u00a0<br/><span class=\"kw2\">sequence</span> validpoints <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw2\">sequence</span> discardedpoints <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw2\">sequence</span> rand100points <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/><span class=\"kw2\">atom</span> coordresult<br/><span class=\"kw2\">integer</span> randindex<br/>\u00a0<br/><span class=\"co1\">--scan for all possible values. store discarded ones in another sequence, for extra reference.</span><br/><span class=\"kw1\">for</span> y <span class=\"sy1\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">15</span> <span class=\"kw1\">to</span> <span class=\"nu0\">15</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">for</span> x <span class=\"sy1\">=</span> <span class=\"sy1\">-</span><span class=\"nu0\">15</span> <span class=\"kw1\">to</span> <span class=\"nu0\">15</span> <span class=\"kw1\">do</span><br/>\u00a0<br/>        coordresult <span class=\"sy1\">=</span> <span class=\"kw2\">sqrt</span><span class=\"br0\">(</span> x <span class=\"sy1\">*</span> x <span class=\"sy1\">+</span> y <span class=\"sy1\">*</span> y <span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span> coordresult &gt;<span class=\"sy1\">=</span> <span class=\"nu0\">10</span> <span class=\"kw1\">and</span> coordresult &lt;<span class=\"sy1\">=</span> <span class=\"nu0\">15</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if it would fall in the ring area</span><br/>            validpoints <span class=\"sy1\">&amp;=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span>x<span class=\"sy2\">,</span> y<span class=\"sy2\">,</span> coordresult<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"co1\">--concatenate (add to the end) the coordinate pair x, y and the</span><br/>            <span class=\"co1\">-- result into a subsequence of sequence validpoints</span><br/>            <span class=\"kw1\">else</span><br/>                discardedpoints <span class=\"sy1\">&amp;=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span>x<span class=\"sy2\">,</span> y<span class=\"sy2\">,</span> coordresult<span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"co1\">--else put it in the discarded sequence    </span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> label <span class=\"st0\">\"oneofhundred\"</span> <span class=\"kw1\">do</span> <span class=\"co1\">--make 100 random coordinate pairs</span><br/>    randindex <span class=\"sy1\">=</span> <span class=\"kw2\">rand</span><span class=\"br0\">(</span><span class=\"kw2\">length</span><span class=\"br0\">(</span>validpoints<span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"co1\">--random value from 1 to the number of 3 value subsequences in validpoints (the data)</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>rand100points<span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if rand100points sequence is empty, add the first subsequence to it.</span><br/>        rand100points <span class=\"sy1\">&amp;=</span> <span class=\"br0\">{</span>validpoints<span class=\"br0\">[</span>randindex<span class=\"br0\">]</span><span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">else</span> <span class=\"co1\">--if it isn't empty, then..</span><br/>            <span class=\"kw1\">for</span> j <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>rand100points<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"co1\">--loop through each \"data chunk\" in rand100points</span><br/>\u00a0<br/>                <span class=\"kw1\">if</span> <span class=\"kw2\">equal</span><span class=\"br0\">(</span>validpoints<span class=\"br0\">[</span>randindex<span class=\"br0\">]</span><span class=\"sy2\">,</span> rand100points<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">then</span> <span class=\"co1\">--if any are the same as the randomly chosen chunk in</span><br/>                    retry <span class=\"st0\">\"oneofhundred\"</span> <span class=\"co1\">-- validpoints, then retry from one line below the \"oneofhundred\" loop without incrementing i.</span><br/>                <span class=\"kw1\">end</span> <span class=\"kw1\">if</span> <span class=\"co1\">--the continue keyword would increment i instead.</span><br/>\u00a0<br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/>            rand100points <span class=\"sy1\">&amp;=</span> <span class=\"br0\">{</span>validpoints<span class=\"br0\">[</span>randindex<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"co1\">--length of rand100points isnt 0 and no data chunks match ones that the program</span><br/>            <span class=\"co1\">--already picked before, so add this subsequence chunk to rand100points.</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">32</span> <span class=\"kw1\">do</span> <span class=\"co1\">--32 lines</span><br/>    <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> j <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">32</span> label <span class=\"st0\">\"xscan\"</span> <span class=\"kw1\">do</span> <span class=\"co1\">--32 characters on each line</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span> k <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>rand100points<span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"co1\">--for every subsequence in this</span><br/>            <span class=\"kw1\">if</span> rand100points<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy1\">+</span><span class=\"nu0\">16</span> <span class=\"sy1\">=</span> j <span class=\"kw1\">and</span> rand100points<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy1\">+</span><span class=\"nu0\">16</span> <span class=\"sy1\">=</span> i <span class=\"kw1\">then</span> <span class=\"co1\">--if the x and y coordinates in the picked points</span><br/>                <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"nu0\">178</span><span class=\"br0\">)</span> <span class=\"co1\">--(adjusted to minimum of 1,1) are at the same place as in the console output grid</span><br/>                continue <span class=\"st0\">\"xscan\"</span> <span class=\"co1\">--print a funny character and continue to the next \"xscan\"</span><br/>            <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/>        <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"nu0\">176</span><span class=\"br0\">)</span> <span class=\"co1\">--if no picked points were there, print another funny character to represent a blank space</span><br/>\u00a0<br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Number of valid coordinate pairs\u00a0%d\u00a0:\"</span><span class=\"sy2\">,</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>validpoints<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Number of discarded coordinate pairs\u00a0:\u00a0%d\"</span><span class=\"sy2\">,</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>discardedpoints<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Number of randomly picked coordinate pairs\u00a0:\u00a0%d<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span> <span class=\"kw2\">length</span><span class=\"br0\">(</span>rand100points<span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>any_key<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 24, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">module</span> CirclePoints <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> main args <span class=\"sy0\">=</span><br/>        <span class=\"kw1\">let</span> rnd <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> System.<span class=\"me1\">Random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">let</span> rand size <span class=\"sy0\">=</span> rnd.<span class=\"me1\">Next</span><span class=\"br0\">(</span>size<span class=\"br0\">)</span> <span class=\"sy0\">-</span> size<span class=\"sy0\">/</span><span class=\"nu0\">2</span><br/>        <span class=\"kw1\">let</span> size <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><br/>        <span class=\"kw1\">let</span> gen n <span class=\"sy0\">=</span><br/>            <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> f <span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>                <span class=\"kw1\">let</span> t <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"br0\">(</span><span class=\"kw3\">sqrt</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span> <span class=\"br0\">(</span>x<span class=\"sy0\">*</span>x <span class=\"sy0\">+</span> y<span class=\"sy0\">*</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&lt;=</span> t &amp;&amp; t <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span> <span class=\"kw1\">then</span> <span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"kw1\">else</span> f <span class=\"br0\">(</span>rand size, rand size<span class=\"br0\">)</span><br/>            f <span class=\"br0\">(</span>rand size, rand size<span class=\"br0\">)</span><br/>        <span class=\"kw1\">let</span> plot <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">init</span> <span class=\"nu0\">100</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> n <span class=\"sy0\">-&gt;</span> gen n<span class=\"br0\">)</span><br/>        <span class=\"kw1\">for</span> row <span class=\"kw1\">in</span> <span class=\"nu0\">0</span> .. <span class=\"me1\">size</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">let</span> chars <span class=\"sy0\">=</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">create</span> <span class=\"br0\">(</span>size<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"st0\">' '</span><br/>            <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">choose</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">if</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span>row<span class=\"sy0\">-</span>size<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> Some<span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">else</span> None<span class=\"br0\">)</span> plot<br/>            <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Array</span></a>.<span class=\"me1\">iter</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> x <span class=\"sy0\">-&gt;</span> chars.<span class=\"br0\">[</span>x<span class=\"sy0\">+</span>size<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;-</span> <span class=\"st0\">'o'</span><span class=\"br0\">)</span><br/>            printfn <span class=\"st0\">\"%s\"</span> <span class=\"br0\">(</span><span class=\"kw1\">new</span> <span class=\"kw4\">string</span><span class=\"br0\">(</span>chars<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"co2\">#if INTERACTIVE</span><br/>CirclePoints.<span class=\"me1\">main</span> fsi.<span class=\"me1\">CommandLineArgs</span><br/><span class=\"co2\">#else</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main args <span class=\"sy0\">=</span> CirclePoints.<span class=\"me1\">main</span> args<br/><span class=\"co2\">#endif</span></pre>"}, {"lang": "Falcon", "loc": 19, "block": "<pre class=\"falcon highlighted_source\">\u00a0<br/><span class=\"co1\">// Generate points in [min,max]^2 with constraint</span><br/><span class=\"kw1\">function</span> random_point <span class=\"br0\">(</span><a href=\"http://falconpl.org/project_docs/core/functions.html#min\"><span class=\"kw6\">min</span></a><span class=\"sy0\">,</span> <a href=\"http://falconpl.org/project_docs/core/functions.html#max\"><span class=\"kw6\">max</span></a><span class=\"sy0\">,</span> constraint<span class=\"br0\">)</span><br/>  <span class=\"br0\">[</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><a href=\"http://falconpl.org/project_docs/core/functions.html#random\"><span class=\"kw6\">random</span></a><span class=\"br0\">(</span><a href=\"http://falconpl.org/project_docs/core/functions.html#min\"><span class=\"kw6\">min</span></a><span class=\"sy0\">,</span> <a href=\"http://falconpl.org/project_docs/core/functions.html#max\"><span class=\"kw6\">max</span></a><span class=\"br0\">)</span><span class=\"sy0\">,</span> <a href=\"http://falconpl.org/project_docs/core/functions.html#random\"><span class=\"kw6\">random</span></a><span class=\"br0\">(</span><a href=\"http://falconpl.org/project_docs/core/functions.html#min\"><span class=\"kw6\">min</span></a><span class=\"sy0\">,</span> <a href=\"http://falconpl.org/project_docs/core/functions.html#max\"><span class=\"kw6\">max</span></a><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">return</span> constraint<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"br0\">[</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">]</span> <span class=\"sy0\">:</span> random_point<span class=\"br0\">(</span><a href=\"http://falconpl.org/project_docs/core/functions.html#min\"><span class=\"kw6\">min</span></a><span class=\"sy0\">,</span> <a href=\"http://falconpl.org/project_docs/core/functions.html#max\"><span class=\"kw6\">max</span></a><span class=\"sy0\">,</span> constraint<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">// Generate point list</span><br/>in_circle <span class=\"sy0\">=</span> <span class=\"br0\">{</span> x<span class=\"sy0\">,</span> y <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;=</span> x<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> y<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"kw3\">and</span> x<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> y<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"br0\">}</span><br/>points <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>.<span class=\"me0\">comp</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span><span class=\"nu0\">100</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span>__ <span class=\"sy0\">=&gt;</span> random_point<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> in_circle<span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">// Show points</span><br/><span class=\"kw1\">for</span> i <span class=\"kw3\">in</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">:</span><span class=\"nu0\">16</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">for</span> j <span class=\"kw3\">in</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">:</span><span class=\"nu0\">16</span><span class=\"br0\">]</span><br/>    <span class=\"sy0\">&gt;&gt;</span> <span class=\"br0\">[</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">]</span> <span class=\"kw3\">in</span> points <span class=\"sy0\">?</span> <span class=\"st0\">\"x\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\" \"</span> <br/>  <span class=\"kw1\">end</span> <br/>  <span class=\"sy0\">&gt;</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 76, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> Constrained_Points<br/>  <span class=\"kw3\">implicit</span> <span class=\"kw3\">none</span><br/>\u00a0<br/>  <span class=\"kw3\">integer</span>, <span class=\"kw3\">parameter</span> <span class=\"sy0\">::</span> <span class=\"me2\">samples</span> <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/>  <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span>, j, n, randpoint<br/>  <span class=\"kw3\">real</span> <span class=\"sy0\">::</span> <span class=\"me2\">r</span><br/>\u00a0<br/>  <span class=\"kw3\">type</span> points<br/>    <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">x</span>, y<br/>  <span class=\"kw1\">end</span> <span class=\"kw3\">type</span><br/>\u00a0<br/>  <span class=\"kw3\">type</span><span class=\"br0\">(</span>points<span class=\"br0\">)</span> <span class=\"sy0\">::</span> <span class=\"me2\">set</span><span class=\"br0\">(</span><span class=\"nu0\">500</span><span class=\"br0\">)</span>, temp<br/>\u00a0<br/><span class=\"co1\">! Create set of valid points</span><br/>  n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span>, <span class=\"nu0\">15</span><br/>    <span class=\"kw1\">do</span> j <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span>, <span class=\"nu0\">15</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw4\">sqrt</span><span class=\"br0\">(</span><span class=\"kw3\">real</span><span class=\"br0\">(</span>i<span class=\"sy0\">*</span>i <span class=\"sy0\">+</span> j<span class=\"sy0\">*</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span> &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">10.0</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> <span class=\"kw4\">sqrt</span><span class=\"br0\">(</span><span class=\"kw3\">real</span><span class=\"br0\">(</span>i<span class=\"sy0\">*</span>i <span class=\"sy0\">+</span> j<span class=\"sy0\">*</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span> &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">15.0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        n <span class=\"sy0\">=</span> n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><br/>        set<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">%</span>x <span class=\"sy0\">=</span> i<br/>        set<span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">%</span>y <span class=\"sy0\">=</span> j<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"co1\">! create 100 random points</span><br/><span class=\"co1\">! Choose a random number between 1 and n inclusive and swap point at this index with point at index 1</span><br/><span class=\"co1\">! Choose a random number between 2 and n inclusive and swap point at this index with point at index 2</span><br/><span class=\"co1\">! Continue in this fashion until 100 points have been selected</span><br/>  <span class=\"kw1\">call</span> <span class=\"kw4\">random_seed</span><br/>  <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, samples<br/>    <span class=\"kw1\">call</span> <span class=\"kw4\">random_number</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><br/>    randpoint <span class=\"sy0\">=</span> r <span class=\"sy0\">*</span> <span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">-</span> i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> i<br/>    temp <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>    set<span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>randpoint<span class=\"br0\">)</span><br/>    set<span class=\"br0\">(</span>randpoint<span class=\"br0\">)</span> <span class=\"sy0\">=</span> temp<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"co1\">! In order to facilitate printing sort random points into ascending order</span><br/><span class=\"co1\">! sort x in ascending order</span><br/>  <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, samples<br/>     j <span class=\"sy0\">=</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>     temp <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>        <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>j&gt;<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> set<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">%</span>x &gt; temp<span class=\"sy0\">%</span>x<span class=\"br0\">)</span><br/>           set<span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>           j <span class=\"sy0\">=</span> j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>     set<span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> temp<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"co1\">! sort y in ascending order for same x</span><br/>  <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, samples<br/>     j <span class=\"sy0\">=</span> i <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>     temp <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>        <span class=\"kw1\">do</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>j&gt;<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> set<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">%</span>x <span class=\"sy0\">==</span> temp<span class=\"sy0\">%</span>x <span class=\"kw2\">.<span class=\"me1\">and</span>.</span> set<span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">%</span>y &gt; temp<span class=\"sy0\">%</span>y<span class=\"br0\">)</span><br/>           set<span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>j<span class=\"br0\">)</span><br/>           j <span class=\"sy0\">=</span> j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>     set<span class=\"br0\">(</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> temp<br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"co1\">! print circle</span><br/>  write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">\"(a,a)\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"br0\">)</span> <span class=\"kw4\">repeat</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, set<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>y<span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"br0\">)</span>, <span class=\"st0\">\"*\"</span><br/>  <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, samples<br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">%</span>x <span class=\"sy0\">==</span> set<span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>x<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">\"(a,a)\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"br0\">)</span> <span class=\"kw4\">repeat</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">%</span>y <span class=\"sy0\">-</span> set<span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>y<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>, <span class=\"st0\">\"*\"</span><br/>    <span class=\"kw1\">else</span><br/>      n <span class=\"sy0\">=</span> set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">%</span>x <span class=\"sy0\">-</span> set<span class=\"br0\">(</span>i<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">%</span>x<br/>      <span class=\"kw1\">do</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, n<br/>        write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"sy0\">*</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>      write<span class=\"br0\">(</span><span class=\"sy0\">*</span>,<span class=\"st0\">\"(a,a)\"</span>, <span class=\"kw1\">advance</span><span class=\"sy0\">=</span><span class=\"st0\">\"no\"</span><span class=\"br0\">)</span> <span class=\"kw4\">repeat</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>, set<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">%</span>y<span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"br0\">)</span>, <span class=\"st0\">\"*\"</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>  <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/>\u00a0<br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span></pre>"}, {"lang": "gnuplot", "loc": 29, "block": "<pre class=\"gnuplot highlighted_source\">\u00a0<br/><span class=\"co1\">## Ring of random points 2/18/17 aev</span><br/><span class=\"kw1\">reset</span><br/><span class=\"re0\">fn=</span><span class=\"st0\">\"RingRandPntsGnu\"</span>;<br/><span class=\"re0\">ttl=</span><span class=\"st0\">\"Ring of random points\"</span><br/><span class=\"re0\">ofn=</span>fn<span class=\"sy0\">.</span><span class=\"st0\">\".png\"</span>; <span class=\"re0\">lim=</span><span class=\"nu0\">1000</span>;<br/>randgp<span class=\"br0\">(</span><span class=\"kw5\">top</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"kw4\">floor</span><span class=\"br0\">(</span><span class=\"kw4\">rand</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw5\">top</span><span class=\"br0\">)</span><br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+terminal%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">terminal</span></a> <span class=\"kw5\">png</span> <span class=\"kw5\">font</span> arial <span class=\"nu0\">12</span> <a href=\"http://www.google.com/search?q=%22set+size%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">size</span></a> <span class=\"nu0\">640</span><span class=\"sy0\">,</span><span class=\"nu0\">640</span><br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+output%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">output</span></a> ofn<br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+title%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">title</span></a> ttl <span class=\"kw5\">font</span> <span class=\"st0\">\"Arial:Bold,12\"</span><br/><span class=\"kw1\">unset</span> <a href=\"http://www.google.com/search?q=%22set+key%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">key</span></a>;<br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+size%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">size</span></a> square <br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+parametric%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">parametric</span></a><br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+xrange%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">xrange</span></a> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"br0\">]</span>; <span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+yrange%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">yrange</span></a> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">20</span><span class=\"sy0\">:</span><span class=\"nu0\">20</span><span class=\"br0\">]</span>;<br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+style%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">style</span></a> li<span class=\"sy0\">ne</span> <span class=\"nu0\">1</span> <span class=\"kw5\">lt</span> rgb <span class=\"st0\">\"red\"</span><br/><span class=\"sy0\">$</span>rring <span class=\"sy0\">&lt;&lt;</span> EOD<br/>EOD<br/><span class=\"kw1\">set</span> <span class=\"kw1\">print</span> <span class=\"sy0\">$</span>rring append<br/>do for <span class=\"br0\">[</span><span class=\"re0\">i=</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>lim<span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>  <span class=\"kw5\">x</span><span class=\"sy0\">=</span>randgp<span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span>; <span class=\"kw5\">y</span><span class=\"sy0\">=</span>randgp<span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span>;<br/>  <span class=\"re0\">r=</span><span class=\"kw4\">sqrt</span><span class=\"br0\">(</span><span class=\"kw5\">x</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"sy0\">+</span><span class=\"kw5\">y</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>r<span class=\"sy0\">&gt;=</span><span class=\"nu0\">10</span><span class=\"sy0\">&amp;&amp;</span>r<span class=\"sy0\">&lt;=</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> \\<br/>    <span class=\"br0\">{</span><span class=\"kw1\">print</span> <span class=\"kw5\">x</span><span class=\"sy0\">,</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span><span class=\"kw5\">y</span>; <span class=\"kw1\">print</span> <span class=\"sy0\">-</span><span class=\"kw5\">x</span><span class=\"sy0\">,</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,-</span><span class=\"kw5\">y</span>;<span class=\"kw1\">print</span> <span class=\"kw5\">x</span><span class=\"sy0\">,</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,-</span><span class=\"kw5\">y</span>; <span class=\"kw1\">print</span> <span class=\"sy0\">-</span><span class=\"kw5\">x</span><span class=\"sy0\">,</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span><span class=\"kw5\">y</span>;<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">plot</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">:</span><span class=\"nu0\">2</span><span class=\"sy0\">*</span><span class=\"kw3\">pi</span><span class=\"br0\">]</span> <span class=\"kw4\">sin</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"kw4\">cos</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"kw4\">sin</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"kw4\">cos</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">15</span> <span class=\"kw5\">ls</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span>\\<br/><span class=\"sy0\">$</span>rring <span class=\"kw5\">using</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">2</span> <span class=\"kw5\">with</span> <span class=\"kw5\">points</span>  pt <span class=\"nu0\">7</span> ps <span class=\"nu0\">0.5</span> lc <span class=\"st0\">\"black\"</span><br/><span class=\"kw1\">set</span> <a href=\"http://www.google.com/search?q=%22set+output%22+site%3Ahttp%3A%2F%2Fwww.gnuplot.info%2Fdocs%2F&amp;btnI=lucky\"><span class=\"kw2\">output</span></a><br/><span class=\"kw1\">unset</span> <span class=\"kw1\">print</span><br/>\u00a0</pre>"}, {"lang": "Go", "loc": 46, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"bytes\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"math/rand\"</span><br/>    <span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">const</span> <span class=\"sy1\">(</span><br/>    nPts <span class=\"sy2\">=</span> <span class=\"nu0\">100</span><br/>    rMin <span class=\"sy2\">=</span> <span class=\"nu0\">10</span><br/>    rMax <span class=\"sy2\">=</span> <span class=\"nu0\">15</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    rand<span class=\"sy3\">.</span>Seed<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Now<span class=\"sy1\">()</span><span class=\"sy3\">.</span>Unix<span class=\"sy1\">())</span><br/>    span <span class=\"sy2\">:=</span> rMax <span class=\"sy3\">+</span> <span class=\"nu0\">1</span> <span class=\"sy3\">+</span> rMax<br/>    rows <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([][]</span><span class=\"kw4\">byte</span><span class=\"sy1\">,</span> span<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> r <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> rows <span class=\"sy1\">{</span><br/>        rows<span class=\"sy1\">[</span>r<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> bytes<span class=\"sy3\">.</span>Repeat<span class=\"sy1\">([]</span><span class=\"kw4\">byte</span><span class=\"sy1\">{</span><span class=\"st0\">' '</span><span class=\"sy1\">},</span> span<span class=\"sy3\">*</span><span class=\"nu0\">2</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    u <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span> <span class=\"co1\">// count unique points</span><br/>    min2 <span class=\"sy2\">:=</span> rMin <span class=\"sy3\">*</span> rMin<br/>    max2 <span class=\"sy2\">:=</span> rMax <span class=\"sy3\">*</span> rMax<br/>    <span class=\"kw1\">for</span> n <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span> n &lt; nPts<span class=\"sy1\">;</span> <span class=\"sy1\">{</span><br/>        x <span class=\"sy2\">:=</span> rand<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span>span<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> rMax<br/>        y <span class=\"sy2\">:=</span> rand<span class=\"sy3\">.</span>Intn<span class=\"sy1\">(</span>span<span class=\"sy1\">)</span> <span class=\"sy3\">-</span> rMax<br/>        <span class=\"co1\">// x, y is the generated coordinate pair</span><br/>        rs <span class=\"sy2\">:=</span> x<span class=\"sy3\">*</span>x <span class=\"sy3\">+</span> y<span class=\"sy3\">*</span>y<br/>        <span class=\"kw1\">if</span> rs &lt; min2 <span class=\"sy3\">||</span> rs &gt; max2 <span class=\"sy1\">{</span><br/>            <span class=\"kw1\">continue</span><br/>        <span class=\"sy1\">}</span><br/>        n<span class=\"sy2\">++</span> <span class=\"co1\">// count pair as meeting condition</span><br/>        r <span class=\"sy2\">:=</span> y <span class=\"sy3\">+</span> rMax<br/>        c <span class=\"sy2\">:=</span> <span class=\"sy1\">(</span>x <span class=\"sy3\">+</span> rMax<span class=\"sy1\">)</span> <span class=\"sy3\">*</span> <span class=\"nu0\">2</span><br/>        <span class=\"kw1\">if</span> rows<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span>c<span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"st0\">' '</span> <span class=\"sy1\">{</span><br/>            rows<span class=\"sy1\">[</span>r<span class=\"sy1\">][</span>c<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> <span class=\"st0\">'*'</span><br/>            u<span class=\"sy2\">++</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> row <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> rows <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"kw4\">string</span><span class=\"sy1\">(</span>row<span class=\"sy1\">))</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>u<span class=\"sy1\">,</span> <span class=\"st0\">\"unique points\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 15, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List<br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Arrow<br/><span class=\"kw1\">import</span> Rosetta<span class=\"sy0\">.</span>Knuthshuffle<br/>\u00a0<br/>task <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">let</span> blanco <span class=\"sy0\">=</span> replicate <span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"sy0\">*</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"st0\">\"  \"</span><br/>      cs <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sequence\"><span class=\"kw3\">sequence</span></a> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,-</span><span class=\"nu0\">14</span><span class=\"sy0\">..</span><span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,-</span><span class=\"nu0\">14</span><span class=\"sy0\">..</span><span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">::</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>      constraint <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:uncurry\"><span class=\"kw3\">uncurry</span></a><span class=\"br0\">(</span><span class=\"sy0\">&amp;&amp;</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><span class=\"sy0\">*</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>&amp; <span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span> <span class=\"sy0\">&lt;=</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:sum\"><span class=\"kw3\">sum</span></a><span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <span class=\"br0\">(</span>join <span class=\"br0\">(</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">-- select and randomize all circle points</span><br/>  pts <span class=\"sy0\">&lt;-</span> knuthShuffle <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> constraint cs<br/><span class=\"co1\">-- 'paint' first 100 randomized circle points on canvas</span><br/>  <span class=\"kw1\">let</span> canvas <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:foldl\"><span class=\"kw3\">foldl</span></a> <span class=\"br0\">(</span>\\cs <span class=\"br0\">[</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> replaceAt <span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">+</span>y<span class=\"sy0\">+</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"st0\">\"/ \"</span> cs <span class=\"br0\">)</span> blanco <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:take\"><span class=\"kw3\">take</span></a> <span class=\"nu0\">100</span> pts<span class=\"br0\">)</span><br/><span class=\"co1\">-- show canvas      </span><br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a><span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concat\"><span class=\"kw3\">concat</span></a><span class=\"br0\">)</span><span class=\"sy0\">.</span> takeWhile<span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:not\"><span class=\"kw3\">not</span></a><span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:null\"><span class=\"kw3\">null</span></a><span class=\"br0\">)</span><span class=\"sy0\">.</span> unfoldr <span class=\"br0\">(</span>Just <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:splitAt\"><span class=\"kw3\">splitAt</span></a> <span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">$</span> canvas</pre>"}, {"lang": "Hy", "loc": 13, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>import<br/>  <span class=\"br0\">[</span>math <span class=\"br0\">[</span><span class=\"kw1\">sqrt</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">[</span><span class=\"kw1\">random</span> <span class=\"br0\">[</span>choice<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">[</span>matplotlib<span class=\"sy0\">.</span>pyplot <span class=\"sy0\">:</span><span class=\"me1\">as</span> plt<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>setv possible-points <span class=\"br0\">(</span>list-comp <span class=\"br0\">(</span><span class=\"sy0\">,</span> x y<span class=\"br0\">)</span><br/>  <span class=\"br0\">[</span>x <span class=\"br0\">(</span>range -<span class=\"nu0\">15</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span> y <span class=\"br0\">(</span>range -<span class=\"nu0\">15</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">(</span><span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span> <span class=\"br0\">(</span><span class=\"kw1\">sqrt</span> <span class=\"br0\">(</span>+ <span class=\"br0\">(</span>** x <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>** y <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>setv <span class=\"br0\">[</span>xs ys<span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">apply</span> zip <span class=\"br0\">(</span>list-comp <span class=\"br0\">(</span>choice possible-points<span class=\"br0\">)</span> <span class=\"br0\">[</span>_ <span class=\"br0\">(</span>range <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">; We can't use random.sample because that samples without replacement.</span><br/><span class=\"br0\">(</span>plt<span class=\"sy0\">.</span>plot xs ys <span class=\"st0\">\"bo\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>plt<span class=\"sy0\">.</span>show<span class=\"br0\">)</span></pre>"}, {"lang": "Icon and Unicon", "loc": 25, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">link</span> graphics<br/>\u00a0<br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span>A<span class=\"br0\">)</span>  <span class=\"co1\"># points, inside r, outside r in pixels - default to task values</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"sy1\">\\</span>A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> <span class=\"st0\">\"help\"</span> <span class=\"kw1\">then</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Usage: plot #points inside-radius outside-radius\"</span><span class=\"br0\">)</span><br/>points  <span class=\"sy1\">:=</span> <span class=\"sy1\">\\</span>A<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"nu0\">100</span><br/>outside <span class=\"sy1\">:=</span> <span class=\"sy1\">\\</span>A<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"nu0\">15</span><br/>inside  <span class=\"sy1\">:=</span> <span class=\"sy1\">\\</span>A<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">|</span> <span class=\"nu0\">10</span><br/><span class=\"kw1\">if</span> inside <span class=\"sy1\">&gt;</span> outside <span class=\"kw1\">then</span> inside <span class=\"sy1\">:=:</span> outside<br/>\u00a0<br/>wsize   <span class=\"sy1\">:=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"nu0\">2.2</span><span class=\"sy1\">*</span>outside<span class=\"br0\">)</span> <br/>wsize  <span class=\"sy1\">&lt;:=</span> <span class=\"nu0\">150</span><br/><span class=\"kw4\">center</span>  <span class=\"sy1\">:=</span> wsize<span class=\"sy1\">/</span><span class=\"nu0\">2</span><br/>\u00a0<br/>WOpen<span class=\"br0\">(</span><span class=\"st0\">\"size=\"</span><span class=\"sy1\">||</span>wsize<span class=\"sy1\">||</span><span class=\"st0\">\",\"</span><span class=\"sy1\">||</span>wsize<span class=\"sy1\">,</span><span class=\"st0\">\"bg=black\"</span><span class=\"sy1\">,</span><span class=\"st0\">\"fg=white\"</span><span class=\"br0\">)</span> <span class=\"sy1\">|</span> <span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"Unable to open window\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">until</span><span class=\"br0\">(</span>points <span class=\"sy1\">-:=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>   x <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">*</span>outside<span class=\"br0\">)</span><span class=\"sy1\">-</span>outside   <span class=\"co1\"># random x</span><br/>   y <span class=\"sy1\">:=</span> <span class=\"sy1\">?</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy1\">*</span>outside<span class=\"br0\">)</span><span class=\"sy1\">-</span>outside   <span class=\"co1\"># and y</span><br/>   <span class=\"kw1\">if</span> <span class=\"br0\">(</span>inside <span class=\"sy1\">&lt;=</span> <span class=\"kw4\">integer</span><span class=\"br0\">(</span><span class=\"kw4\">sqrt</span><span class=\"br0\">(</span>x<span class=\"sy1\">^</span><span class=\"nu0\">2</span><span class=\"sy1\">+</span>y<span class=\"sy1\">^</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"sy1\">&lt;=</span> outside <span class=\"kw1\">then</span> <br/>      <span class=\"kw5\">DrawPoint</span><span class=\"br0\">(</span>x <span class=\"sy1\">+</span> <span class=\"kw4\">center</span><span class=\"sy1\">,</span>y <span class=\"sy1\">+</span> <span class=\"kw4\">center</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span><br/>WDone<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "J", "loc": 1, "block": "<pre class=\"j highlighted_source\">gen=: <span class=\"sy0\">(</span>{~ <span class=\"nu0\">100</span>?#<span class=\"sy0\">)</span>bind<span class=\"sy0\">((</span>#~ <span class=\"nu0\">1</span>=<span class=\"nu0\">99</span> <span class=\"nu0\">225</span> I.+/\"<span class=\"nu0\">1</span>@:*:<span class=\"sy0\">)</span>,/,\"<span class=\"nu0\">0</span>/~i:<span class=\"nu0\">15</span><span class=\"sy0\">)</span></pre>"}, {"lang": "Java", "loc": 29, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.util.Random</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> FuzzyCircle <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">static</span> <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a> rnd <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Arandom+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Random</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span> field <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">31</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> field.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> field<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tfield<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">' '</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw4\">int</span> pointsInDisc <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span>pointsInDisc <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> rnd.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> rnd.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw4\">double</span> dist <span class=\"sy0\">=</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Amath+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Math</span></a>.<span class=\"me1\">hypot</span><span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>dist <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&amp;&amp;</span> dist <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span> <span class=\"sy0\">&amp;&amp;</span> field<span class=\"br0\">[</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"br0\">[</span>y <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\tfield<span class=\"br0\">[</span>x <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"br0\">[</span>y <span class=\"sy0\">+</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'X'</span><span class=\"sy0\">;</span><br/>\t\t\t\tpointsInDisc<span class=\"sy0\">++;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> row<span class=\"sy0\">:</span>field<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">char</span> space<span class=\"sy0\">:</span>row<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">print</span><span class=\"br0\">(</span>space<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 46, "block": "<pre class=\"javascript highlighted_source\"><span class=\"sy0\">&lt;</span>html<span class=\"sy0\">&gt;&lt;</span>head<span class=\"sy0\">&gt;&lt;</span>title<span class=\"sy0\">&gt;</span>Circle<span class=\"sy0\">&lt;/</span>title<span class=\"sy0\">&gt;&lt;/</span>head<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>body<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>canvas id<span class=\"sy0\">=</span><span class=\"st0\">\"cv\"</span> width<span class=\"sy0\">=</span><span class=\"st0\">\"320\"</span> height<span class=\"sy0\">=</span><span class=\"st0\">\"320\"</span><span class=\"sy0\">&gt;&lt;/</span>canvas<span class=\"sy0\">&gt;</span><br/><span class=\"sy0\">&lt;</span>script type<span class=\"sy0\">=</span><span class=\"st0\">\"application/javascript\"</span><span class=\"sy0\">&gt;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> cv <span class=\"sy0\">=</span> document.<span class=\"me1\">getElementById</span><span class=\"br0\">(</span><span class=\"st0\">'cv'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> ctx <span class=\"sy0\">=</span> cv.<span class=\"me1\">getContext</span><span class=\"br0\">(</span><span class=\"st0\">'2d'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> w <span class=\"sy0\">=</span> cv.<span class=\"me1\">width</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> h <span class=\"sy0\">=</span> cv.<span class=\"me1\">height</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">//draw circles</span><br/>ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">'rgba(0, 255, 200, .3)'</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">strokeStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">'rgba(0,0,0,.1)'</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">arc</span><span class=\"br0\">(</span>w<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> h<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">150</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <br/>ctx.<span class=\"me1\">arc</span><span class=\"br0\">(</span>w<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> h<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">PI</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"kw2\">false</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">closePath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">// draw grids</span><br/>ctx.<span class=\"me1\">beginPath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> w<span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tctx.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tctx.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tctx.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tctx.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>w<span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>ctx.<span class=\"me1\">closePath</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>ctx.<span class=\"me1\">stroke</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co1\">//draw points</span><br/>ctx.<span class=\"me1\">fillStyle</span> <span class=\"sy0\">=</span> <span class=\"st0\">'navy'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> pts <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>while <span class=\"br0\">(</span>pts <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> x <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">var</span> y <span class=\"sy0\">=</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">floor</span><span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">random</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">var</span> r <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x <span class=\"sy0\">+</span> y <span class=\"sy0\">*</span> y<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>r <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span> <span class=\"sy0\">||</span> r <span class=\"sy0\">&gt;</span> <span class=\"nu0\">225</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span><br/>\tx <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> w<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\ty <span class=\"sy0\">=</span> y <span class=\"sy0\">*</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+</span> h<span class=\"sy0\">/</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\tctx.<span class=\"me1\">fillRect</span><span class=\"br0\">(</span>x <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> y <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tpts<span class=\"sy0\">++;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"sy0\">&lt;/</span>script<span class=\"sy0\">&gt;&lt;/</span>body<span class=\"sy0\">&gt;&lt;/</span>html<span class=\"sy0\">&gt;</span></pre>"}, {"lang": "Julia", "loc": 19, "block": "<pre class=\"text highlighted_source\">function printcircle(lo::Integer, hi::Integer, ndots::Integer; pad::Integer = 2)<br/>    canvas = falses(2hi + 1, 2hi + 1)<br/>    i = 0<br/>    while i &lt; ndots<br/>        x, y = rand(-hi:hi, 2)<br/>        if lo ^ 2 - 1 &lt; x ^ 2 + y ^ 2 &lt; hi ^ 2 + 1<br/>            canvas[x + hi + 1, y + hi + 1] = true<br/>            i += 1<br/>        end<br/>    end<br/>    # print<br/>    for i in 1:(2hi + 1)<br/>        row = map(j -&gt; j\u00a0? \"\\u25cf \"\u00a0: \"  \", canvas[i,\u00a0:])<br/>        println(\" \" ^ pad, join(row))<br/>    end<br/>    return canvas<br/>end<br/>\u00a0<br/>printcircle(10, 15, 100)</pre>"}, {"lang": "Kotlin", "loc": 17, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> java.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> points <span class=\"sy0\">=</span> Array<span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> CharArray<span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"st0\">' '</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> count <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>count <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> x <span class=\"sy0\">=</span> r.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> - <span class=\"nu0\">15</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> y <span class=\"sy0\">=</span> r.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> - <span class=\"nu0\">15</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> h <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x + y <span class=\"sy0\">*</span> y<br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>h in <span class=\"nu0\">100</span>..<span class=\"nu0\">225</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            points<span class=\"br0\">[</span>x + <span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"br0\">[</span>y + <span class=\"nu0\">15</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'o'</span><br/>            count++<br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span>..<span class=\"nu0\">30</span><span class=\"br0\">)</span> println<span class=\"br0\">(</span>points<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">joinToString</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 30, "block": "<pre class=\"lb highlighted_source\"><span class=\"co1\">'   RC Constrained Random Points on a Circle</span><br/>\u00a0<br/><span class=\"kw1\">nomainwin</span><br/>\u00a0<br/><span class=\"kw3\">WindowWidth</span>  <span class=\"sy0\">=</span><span class=\"nu0\">400</span><br/><span class=\"kw3\">WindowHeight</span> <span class=\"sy0\">=</span><span class=\"nu0\">430</span><br/>\u00a0<br/><span class=\"kw1\">open</span> <span class=\"st0\">\"Constrained Random Points on a Circle\"</span> <span class=\"kw1\">for</span> graphics_nsb <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>w<br/>\u00a0<br/><span class=\"sy0\">#</span>w <span class=\"st0\">\"trapclose [quit]\"</span><br/><span class=\"sy0\">#</span>w <span class=\"st0\">\"down\u00a0; size 7\u00a0; color red\u00a0; fill black\"</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">1000</span><br/>  <span class=\"kw1\">do</span><br/>     x <span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">30</span> <span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span><br/>     y <span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">30</span> <span class=\"sy0\">*</span><span class=\"kw2\">rnd</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span><br/>  <span class=\"kw1\">loop</span> <span class=\"kw1\">until</span> IsInRange<span class=\"br0\">(</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>  <span class=\"sy0\">#</span>w <span class=\"st0\">\"set \"</span>; <span class=\"nu0\">200</span> <span class=\"sy0\">+</span><span class=\"nu0\">10</span> <span class=\"sy0\">*</span>x; <span class=\"st0\">\" \"</span>; <span class=\"nu0\">200</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span> <span class=\"sy0\">*</span>y<br/><span class=\"kw1\">next</span><br/>\u00a0<br/><span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"kw1\">function</span> IsInRange<span class=\"br0\">(</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span><br/>  z <span class=\"sy0\">=</span><span class=\"kw2\">sqr</span><span class=\"br0\">(</span> x<span class=\"sy0\">*</span>x <span class=\"sy0\">+</span>y<span class=\"sy0\">*</span>y<span class=\"br0\">)</span><br/>  <span class=\"kw1\">if</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&lt;=</span>z <span class=\"kw1\">and</span> z <span class=\"sy0\">&lt;=</span><span class=\"nu0\">15</span> <span class=\"kw1\">then</span> IsInRange <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">else</span> IsInRange <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"br0\">[</span>quit<span class=\"br0\">]</span><br/><span class=\"kw1\">close</span> <span class=\"sy0\">#</span>w<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Locomotive Basic", "loc": 9, "block": "<pre class=\"locobasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">MODE</span> <span class=\"nu0\">1</span>:<span class=\"kw1\">RANDOMIZE</span> <span class=\"kw1\">TIME</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">FOR</span> J=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">100</span><br/><span class=\"nu0\">30</span> X=<span class=\"kw2\">INT</span><span class=\"br0\">(</span><span class=\"kw2\">RND</span>*<span class=\"nu0\">30</span>-<span class=\"nu0\">15</span><span class=\"br0\">)</span><br/><span class=\"nu0\">40</span> Y=<span class=\"kw2\">INT</span><span class=\"br0\">(</span><span class=\"kw2\">RND</span>*<span class=\"nu0\">30</span>-<span class=\"nu0\">15</span><span class=\"br0\">)</span><br/><span class=\"nu0\">50</span> D=X*X+Y*Y<br/><span class=\"nu0\">60</span> <span class=\"kw1\">IF</span> D&lt;<span class=\"nu0\">100</span> <span class=\"kw1\">OR</span> D&gt;<span class=\"nu0\">225</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">GOTO</span> <span class=\"nu0\">40</span><br/><span class=\"nu0\">70</span> <span class=\"kw1\">PLOT</span> <span class=\"nu0\">320</span>+<span class=\"nu0\">10</span>*X,<span class=\"nu0\">200</span>+<span class=\"nu0\">10</span>*Y:<span class=\"kw1\">LOCATE</span> <span class=\"nu0\">1</span>,<span class=\"nu0\">1</span>:<span class=\"kw1\">PRINT</span> J<br/><span class=\"nu0\">80</span> <span class=\"kw1\">NEXT</span><br/><span class=\"nu0\">90</span> <span class=\"kw1\">CALL</span> &amp;BB06 <span class=\"co1\">' wait for key press</span></pre>"}, {"lang": "Maple", "loc": 12, "block": "<pre class=\"text highlighted_source\"> a\u00a0:= table():<br/> i\u00a0:= 1:<br/> while i &lt; 100 do<br/> ba\u00a0:= (rand(-15 .. 15))():<br/> bb\u00a0:= (rand(-15 .. 15))():<br/> b\u00a0:= evalf(sqrt(ba^2+bb^2)):<br/> if b &lt;= 15 and b &gt;= 10 <br/>  then a[i]\u00a0:= [ba, bb]: <br/>  i\u00a0:= i+1: <br/> end if:<br/> end do:<br/> plots:-pointplot(convert(a,list));</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 3, "block": "<pre class=\"text highlighted_source\">sample = Take[Cases[RandomInteger[{-15, 15}, {500, 2}], {x_, y_} /; 10 &lt;= Sqrt[x^2 + y^2] &lt;= 15], 100];<br/>\u00a0<br/>Show[{RegionPlot[10 &lt;= Sqrt[x^2 + y^2] &lt;= 15, {x, -16, 16}, {y, -16, 16}, Axes -&gt; True], ListPlot[sample]}]</pre>"}, {"lang": "MATLAB", "loc": 31, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> <span class=\"br0\">[</span>xCoordinates,yCoordinates<span class=\"br0\">]</span> = randomDisc<span class=\"br0\">(</span>numPoints<span class=\"br0\">)</span><br/>\u00a0<br/>    xCoordinates = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>    yCoordinates = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>\u00a0<br/>    <span class=\"co1\">%Helper function that samples a random integer from the uniform</span><br/>    <span class=\"co1\">%distribution between -15 and 15.</span><br/>    <span class=\"kw1\">function</span> nums = randInt<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>        nums = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/round.html\"><span class=\"kw2\">round</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">31</span>*<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/rand.html\"><span class=\"kw2\">rand</span></a><span class=\"br0\">(</span>n,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>-<span class=\"nu0\">15.5</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    n = numPoints;<br/>\u00a0<br/>    <span class=\"kw1\">while</span> n &gt; <span class=\"nu0\">0</span><br/>\u00a0<br/>        x = randInt<span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>        y = randInt<span class=\"br0\">(</span>n<span class=\"br0\">)</span>;<br/>\u00a0<br/>        norms = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sqrt.html\"><span class=\"kw2\">sqrt</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span>x.^<span class=\"nu0\">2</span><span class=\"br0\">)</span> + <span class=\"br0\">(</span>y.^<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>        inBounds = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/find.html\"><span class=\"kw2\">find</span></a><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">10</span> &lt;= norms<span class=\"br0\">)</span> &amp; <span class=\"br0\">(</span>norms &lt;= <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>        xCoordinates = <span class=\"br0\">[</span>xCoordinates; x<span class=\"br0\">(</span>inBounds<span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>        yCoordinates = <span class=\"br0\">[</span>yCoordinates; y<span class=\"br0\">(</span>inBounds<span class=\"br0\">)</span><span class=\"br0\">]</span>;<br/>\u00a0<br/>        n = numPoints - numel<span class=\"br0\">(</span>xCoordinates<span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    xCoordinates<span class=\"br0\">(</span>numPoints+<span class=\"nu0\">1</span>:<span class=\"kw1\">end</span><span class=\"br0\">)</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>    yCoordinates<span class=\"br0\">(</span>numPoints+<span class=\"nu0\">1</span>:<span class=\"kw1\">end</span><span class=\"br0\">)</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Maxima", "loc": 16, "block": "<pre class=\"text highlighted_source\">randomDisc(numPoints):= block([p: []],<br/>  local(goodp, random_int),<br/>  goodp(x, y):=block([r: sqrt(x^2+y^2)],<br/>    r&gt;=10 and r&lt;=15<br/>    ),<br/>  random_int():= block([m: 15], m - random(2*(m+1)-1)),<br/>  while length(p)&lt;numPoints do block (<br/>    [x: random_int(), y\u00a0: random_int()],<br/>    if goodp(x, y) then (<br/>      p: cons([x, y], p)<br/>      )<br/>    ),<br/>  p)$<br/>\u00a0<br/>p: randomDisc(100)$<br/>plot2d(['discrete, p], ['style, 'points]);</pre>"}, {"lang": "Nim", "loc": 26, "block": "<pre class=\"text highlighted_source\">import tables, math, strutils, complex, random<br/>\u00a0<br/>proc random[T](a: openarray[T]): T =<br/>  result = a[rand(low(a)..len(a))]<br/>\u00a0<br/>type Point = tuple[x, y: int]<br/>\u00a0<br/>var world = initCountTable[Point]()<br/>var possiblePoints = newSeq[Point]()<br/>\u00a0<br/>for x in -15..15:<br/>  for y in -15..15:<br/>    if abs((x.float, y.float)) in 10.0..15.0:<br/>      possiblePoints.add((x,y))<br/>\u00a0<br/>randomize()<br/>for i in 0..100: world.inc possiblePoints.random<br/>\u00a0<br/>for x in -15..15:<br/>  for y in -15..15:<br/>    let key = (x, y)<br/>    if key in world and world[key] &gt; 0:<br/>      stdout.write min(9, world[key])<br/>    else:<br/>      stdout.write ' '<br/>  echo \"\"</pre>"}, {"lang": "OCaml", "loc": 22, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> p x y <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> d <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsqrt\"><span class=\"kw3\">sqrt</span></a><span class=\"br0\">(</span>x <span class=\"sy0\">**</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">+.</span> y <span class=\"sy0\">**</span> <span class=\"nu0\">2.0</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <span class=\"nu0\">10.0</span> <span class=\"sy0\">&lt;=</span> d <span class=\"sy0\">&amp;&amp;</span> d <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15.0</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span>self_init<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> aux i acc <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">100</span> <span class=\"kw1\">then</span> acc <span class=\"kw1\">else</span><br/>      <span class=\"kw1\">let</span> x <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"nu0\">40.0</span><span class=\"br0\">)</span> <span class=\"sy0\">-.</span> <span class=\"nu0\">20.0</span><br/>      <span class=\"kw1\">and</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Random.html\"><span class=\"kw2\">Random</span></a><span class=\"sy0\">.</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALfloat\"><span class=\"kw3\">float</span></a> <span class=\"nu0\">40.0</span><span class=\"br0\">)</span> <span class=\"sy0\">-.</span> <span class=\"nu0\">20.0</span> <span class=\"kw1\">in</span><br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p x y<span class=\"br0\">)</span><br/>      <span class=\"kw1\">then</span> aux <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALsucc\"><span class=\"kw3\">succ</span></a> i<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x,y<span class=\"br0\">)</span><span class=\"sy0\">::</span>acc<span class=\"br0\">)</span><br/>      <span class=\"kw1\">else</span> aux i acc<br/>  <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> points <span class=\"sy0\">=</span> aux <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">let</span> g <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>init <span class=\"nu0\">40</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> _ <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/String.html\"><span class=\"kw2\">String</span></a><span class=\"sy0\">.</span>make <span class=\"nu0\">40</span> <span class=\"sy0\">'</span> <span class=\"sy0\">'</span><span class=\"br0\">)</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/List.html\"><span class=\"kw2\">List</span></a><span class=\"sy0\">.</span>iter <span class=\"br0\">(</span><span class=\"kw1\">fun</span> <span class=\"br0\">(</span>x,y<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    <span class=\"kw1\">let</span> x <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_float\"><span class=\"kw3\">int_of_float</span></a> x<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span><br/>    <span class=\"kw1\">and</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALint_of_float\"><span class=\"kw3\">int_of_float</span></a> y<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">20</span> <span class=\"kw1\">in</span><br/>    g<span class=\"sy0\">.</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">&lt;-</span> <span class=\"sy0\">'</span>o<span class=\"sy0\">'</span><br/>  <span class=\"br0\">)</span> points<span class=\"sy0\">;</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Array.html\"><span class=\"kw2\">Array</span></a><span class=\"sy0\">.</span>iter <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> g</pre>"}, {"lang": "PARI/GP", "loc": 24, "block": "<pre class=\"parigp highlighted_source\">crpc<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><br/>  my<span class=\"br0\">(</span>v<span class=\"sy0\">=</span><span class=\"kw1\">vector</span><span class=\"br0\">(</span><span class=\"nu1\">404</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>t<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>i<span class=\"sy0\">=</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>vx<span class=\"sy0\">=</span>vy<span class=\"sy0\">=</span><span class=\"kw1\">vector</span><span class=\"br0\">(</span><span class=\"nu1\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">14</span><span class=\"sy0\">,</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>y<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">14</span><span class=\"sy0\">,</span><br/>    t<span class=\"sy0\">=</span>x<span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"sy0\">+</span>y<span class=\"sy0\">^</span><span class=\"nu1\">2</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>t<span class=\"sy0\">&gt;</span><span class=\"nu1\">99</span><span class=\"sy0\">&amp;</span>t<span class=\"sy0\">&lt;</span><span class=\"nu1\">226</span><span class=\"sy0\">,</span><br/>      v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span>x<span class=\"sy0\">,-</span>y<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"sy0\">-</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>      v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"sy0\">-</span>x<span class=\"sy0\">,-</span>y<span class=\"br0\">]</span><br/>    <span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>x<span class=\"sy0\">=</span><span class=\"nu1\">10</span><span class=\"sy0\">,</span><span class=\"nu1\">15</span><span class=\"sy0\">,</span><br/>    v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span>x<span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"sy0\">-</span>x<span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span>x<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    v<span class=\"br0\">[</span>i<span class=\"sy0\">++</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu1\">0</span><span class=\"sy0\">,-</span>x<span class=\"br0\">]</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span>#vx<span class=\"sy0\">,</span><br/>    t<span class=\"sy0\">=</span>v<span class=\"br0\">[</span><span class=\"kw1\">random</span><span class=\"br0\">(</span>#v<span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    vx<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span>t<span class=\"br0\">[</span><span class=\"nu1\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    vy<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span>t<span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>  <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw1\">plothraw</span><span class=\"br0\">(</span>vx<span class=\"sy0\">,</span>vy<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 22, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">@points</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">@points</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">,</span> <a href=\"http://perldoc.perl.org/functions/int.html\"><span class=\"kw3\">int</span></a><span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/rand.html\"><span class=\"kw3\">rand</span></a><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$r2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"re0\">*$x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span><span class=\"re0\">*$y</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">next</span> <span class=\"kw1\">if</span> <span class=\"re0\">$r2</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span> <span class=\"sy0\">||</span> <span class=\"re0\">$r2</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">225</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@points</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"co4\">&lt;&lt; 'HEAD';<br/>%!PS-Adobe-3.0 EPSF-3.0<br/>%%BoundingBox 0 0 400 400<br/>200 200 translate 10 10 scale<br/>0 setlinewidth<br/>1 0 0 setrgbcolor<br/>0 0 10 0 360 arc stroke<br/>0 0 15 360 0 arcn stroke<br/>0 setgray<br/>/pt { .1 0 360 arc fill } def<br/>HEAD</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"@$_ pt<span class=\"es0\">\\n</span>\"</span> <span class=\"kw1\">for</span> <span class=\"re0\">@points</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"%%EOF\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 12, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">my</span> <span class=\"re0\">@range</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">15</span><span class=\"sy0\">..</span><span class=\"nu0\">16</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@points</span> <span class=\"sy0\">=</span> gather <span class=\"kw1\">for</span> <span class=\"re0\">@range</span> <span class=\"kw1\">X</span> <span class=\"re0\">@range</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    take <span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span><span class=\"re0\">$y</span><span class=\"br0\">]</span> <span class=\"kw1\">if</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&lt;=</span> <span class=\"kw3\">sqrt</span><span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">*</span><span class=\"re0\">$x</span><span class=\"sy0\">+</span><span class=\"re0\">$y</span><span class=\"sy0\">*</span><span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">@samples</span> <span class=\"sy0\">=</span> <span class=\"re0\">@points</span><span class=\"sy0\">.</span><span class=\"me1\">roll</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"co1\"># or .pick(100) to get distinct points</span><br/>\u00a0<br/><span class=\"co1\"># format and print</span><br/><span class=\"kw1\">my</span> <span class=\"re0\">%matrix</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">for</span> <span class=\"re0\">@range</span> <span class=\"kw1\">X</span> <span class=\"re0\">@range</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"re0\">%matrix</span><span class=\"br0\">{</span><span class=\"re0\">$y</span><span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$x</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"st_h\">' '</span> <span class=\"br0\">}</span><br/><span class=\"re0\">%matrix</span><span class=\"br0\">{</span><span class=\"re0\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'*'</span> <span class=\"kw1\">for</span> <span class=\"re0\">@samples</span><span class=\"sy0\">;</span><br/><span class=\"re0\">%matrix</span><span class=\"br0\">{</span><span class=\"re0\">$_</span><span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">@range</span><span class=\"br0\">}</span><span class=\"sy0\">.</span><span class=\"kw3\">join</span><span class=\"br0\">(</span><span class=\"st_h\">' '</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw3\">say</span> <span class=\"kw1\">for</span> <span class=\"re0\">@range</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 14, "block": "<pre class=\"text highlighted_source\">sequence screen = repeat(repeat(' ',31),31)<br/>integer x, y, count = 0<br/>atom r<br/>while 1 do<br/>    x = rand(31)<br/>    y = rand(31)<br/>    r = sqrt(power(x-16,2)+power(y-16,2))<br/>    if r&gt;=10 and r&lt;=15 then<br/>        screen[x][y] = 'x'<br/>        count += 1<br/>        if count&gt;=100 then exit end if<br/>    end if<br/>end while<br/>puts(1,join(screen,\"\\n\"))</pre>"}, {"lang": "PicoLisp", "loc": 13, "block": "<pre class=\"text highlighted_source\">(let Area (make (do 31 (link (need 31 \" \"))))<br/>   (use (X Y)<br/>      (do 100<br/>         (until<br/>            (&gt;=<br/>               15<br/>               (sqrt<br/>                  (+<br/>                     (* (setq X (rand -15 15)) X)<br/>                     (* (setq Y (rand -15 15)) Y) ) )<br/>               10 ) )<br/>         (set (nth Area (+ 16 X) (+ 16 Y)) \"#\") ) )<br/>   (mapc prinl Area) )</pre>"}, {"lang": "PL/I", "loc": 29, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>constrain: procedure options (main);<br/>   declare 1 point (100),<br/>            2 x fixed binary,<br/>            2 y fixed binary;<br/>   declare (i, j, a, b, c) fixed binary;<br/>\u00a0<br/>   j = 0;<br/>   do i = 1 to 100;<br/>      a = 30*random()-15; b = 30*random()-15;<br/>      c = sqrt(a**2 + b**2);<br/>      if abs(c) &gt;= 10 &amp; abs(c) &lt;= 15 then<br/>         do; j = j + 1; x(j) = a; y(j) = b; end;<br/>   end;<br/>\u00a0<br/>   /* PLOT */<br/>   declare table(-15:15, -15:15) character (1);<br/>   table = ' ';<br/>   do i = 1 to j;<br/>      table(x(i), y(i)) = '*';<br/>   end;<br/>   do i = -15 to 15;<br/>      put skip;<br/>      do j = -15 to 15;<br/>         put edit (table(i,j)) (a);<br/>      end;<br/>   end;<br/>end constrain;<br/>\u00a0</pre>"}, {"lang": "PowerShell", "loc": 18, "block": "<pre class=\"powershell highlighted_source\"><span class=\"re0\">$MinR2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">*</span> <span class=\"nu0\">10</span><br/><span class=\"re0\">$MaxR2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">15</span> <span class=\"sy0\">*</span> <span class=\"nu0\">15</span><br/>\u00a0<br/><span class=\"re0\">$Points</span> <span class=\"sy0\">=</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">While</span> <span class=\"br0\">(</span> <span class=\"re0\">$Points</span>.Count <span class=\"kw4\">-lt</span> <span class=\"nu0\">100</span> <span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>    <span class=\"re0\">$X</span> <span class=\"sy0\">=</span> Get<span class=\"sy0\">-</span>Random <span class=\"kw5\">-Minimum</span> <span class=\"sy0\">-</span><span class=\"nu0\">16</span> <span class=\"kw5\">-Maximum</span> <span class=\"nu0\">17</span><br/>    <span class=\"re0\">$Y</span> <span class=\"sy0\">=</span> Get<span class=\"sy0\">-</span>Random <span class=\"kw5\">-Minimum</span> <span class=\"sy0\">-</span><span class=\"nu0\">16</span> <span class=\"kw5\">-Maximum</span> <span class=\"nu0\">17</span><br/>    <span class=\"re0\">$R2</span> <span class=\"sy0\">=</span> <span class=\"re0\">$X</span> <span class=\"sy0\">*</span> <span class=\"re0\">$X</span> <span class=\"sy0\">+</span> <span class=\"re0\">$Y</span> <span class=\"sy0\">*</span> <span class=\"re0\">$Y</span><br/>\u00a0<br/>    <span class=\"kw3\">If</span> <span class=\"br0\">(</span> <span class=\"re0\">$R2</span> <span class=\"kw4\">-ge</span> <span class=\"re0\">$MinR2</span> <span class=\"kw4\">-and</span> <span class=\"re0\">$R2</span> <span class=\"kw4\">-le</span> <span class=\"re0\">$MaxR2</span> <span class=\"kw4\">-and</span> <span class=\"st0\">\"$X,$Y\"</span> <span class=\"sy0\">-</span>notin <span class=\"re0\">$Points</span>.Keys <span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>        <span class=\"re0\">$Points</span> <span class=\"sy0\">+=</span> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"st0\">\"$X,$Y\"</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">ForEach</span> <span class=\"br0\">(</span> <span class=\"re0\">$Y</span> <span class=\"kw3\">in</span> <span class=\"sy0\">-</span><span class=\"nu0\">16</span>..<span class=\"nu0\">16</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span> <span class=\"sy0\">-</span><span class=\"nu0\">16</span>..<span class=\"nu0\">16</span> <span class=\"sy0\">|</span> <span class=\"kw3\">ForEach</span> <span class=\"br0\">{</span> <span class=\"br0\">(</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"*\"</span> <span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"re3\">int</span><span class=\"br0\">]</span><span class=\"re0\">$Points</span><span class=\"br0\">[</span><span class=\"st0\">\"$_,$Y\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy0\">-</span>join <span class=\"st0\">''</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Prolog", "loc": 37, "block": "<pre class=\"prolog highlighted_source\"><span class=\"sy1\">:-</span> use_module<span class=\"br0\">(</span>library<span class=\"br0\">(</span>clpfd<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>circle <span class=\"sy1\">:-</span><br/>\t<a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">bagof</span></a><span class=\"br0\">(</span><span class=\"br0\">[</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">]</span><span class=\"sy4\">,</span> init<span class=\"br0\">(</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">)</span><span class=\"sy4\">,</span> BL<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tlength<span class=\"br0\">(</span>BL<span class=\"sy4\">,</span> N<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tlength<span class=\"br0\">(</span>L<span class=\"sy4\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tmaplist<span class=\"br0\">(</span>choose<span class=\"br0\">(</span>BL<span class=\"sy4\">,</span> N<span class=\"br0\">)</span><span class=\"sy4\">,</span> L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tdraw_circle<span class=\"br0\">(</span>L<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">% point selection</span><br/>choose<span class=\"br0\">(</span>BL<span class=\"sy4\">,</span> N<span class=\"sy4\">,</span> V<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tI <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> random<span class=\"br0\">(</span>N<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tnth0<span class=\"br0\">(</span>I<span class=\"sy4\">,</span> BL<span class=\"sy4\">,</span> V<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/><span class=\"co1\">% to find all couples of numbers verifying </span><br/><span class=\"co1\">% 100 &lt;= x^2 + y^2 &lt;= 225</span><br/>init<span class=\"br0\">(</span>X1<span class=\"sy4\">,</span> Y1<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tX in <span class=\"sy3\">-</span><span class=\"nu0\">15</span><span class=\"sy4\">..</span><span class=\"nu0\">15</span><span class=\"sy4\">,</span><br/>\tY in <span class=\"sy3\">-</span><span class=\"nu0\">15</span><span class=\"sy4\">..</span><span class=\"nu0\">15</span><span class=\"sy4\">,</span><br/>\tX<span class=\"sy3\">*</span>X <span class=\"sy3\">+</span> Y<span class=\"sy3\">*</span>Y #<span class=\"sy6\">&gt;=</span> <span class=\"nu0\">100</span><span class=\"sy4\">,</span><br/>\tX<span class=\"sy3\">*</span>X <span class=\"sy3\">+</span> Y<span class=\"sy3\">*</span>Y #<span class=\"sy6\">=&lt;</span> <span class=\"nu0\">225</span><span class=\"sy4\">,</span><br/>\tlabel<span class=\"br0\">(</span><span class=\"br0\">[</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tX1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">10</span> <span class=\"sy3\">*</span> X <span class=\"sy3\">+</span> <span class=\"nu0\">200</span><span class=\"sy4\">,</span><br/>\tY1 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"nu0\">10</span> <span class=\"sy3\">*</span> Y <span class=\"sy3\">+</span> <span class=\"nu0\">200</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0<br/>draw_circle<span class=\"br0\">(</span>L<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>\tnew<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> window<span class=\"br0\">(</span><span class=\"st_h\">'Circle'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> size<span class=\"sy4\">,</span>size<span class=\"br0\">(</span><span class=\"nu0\">400</span><span class=\"sy4\">,</span><span class=\"nu0\">400</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tforall<span class=\"br0\">(</span>member<span class=\"br0\">(</span><span class=\"br0\">[</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">]</span><span class=\"sy4\">,</span> L<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t       <span class=\"br0\">(</span>   new<span class=\"br0\">(</span>C<span class=\"sy4\">,</span> circle<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t   send<span class=\"br0\">(</span>C<span class=\"sy4\">,</span> fill_pattern<span class=\"sy4\">,</span> colour<span class=\"br0\">(</span><span class=\"sy5\">@</span>default<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t   send<span class=\"br0\">(</span>C<span class=\"sy4\">,</span> center<span class=\"br0\">(</span>point<span class=\"br0\">(</span>X<span class=\"sy4\">,</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\t\t   send<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> display<span class=\"sy4\">,</span> C<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>\tsend<span class=\"br0\">(</span>D<span class=\"sy4\">,</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">open</span></a><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 17, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw2\">CreateImage</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">31</span>,<span class=\"nu0\">31</span><span class=\"br0\">)</span><br/><span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span><span class=\"kw2\">ImageOutput</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">For</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">To</span> <span class=\"nu0\">100</span><br/>    <span class=\"kw1\">Repeat</span><br/>      x<span class=\"sy0\">=</span><span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><br/>      y<span class=\"sy0\">=</span><span class=\"kw2\">Random</span><span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span><br/>      R.f<span class=\"sy0\">=</span><span class=\"kw2\">Sqr</span><span class=\"br0\">(</span>x<span class=\"sy0\">*</span>x<span class=\"sy0\">+</span>y<span class=\"sy0\">*</span>y<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Until</span> <span class=\"nu0\">10</span><span class=\"sy0\">&lt;=</span>R <span class=\"kw1\">And</span> R<span class=\"sy0\">&lt;=</span><span class=\"nu0\">15</span><br/>    <span class=\"kw2\">Plot</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">15</span>,y<span class=\"sy0\">+</span><span class=\"nu0\">15</span>,#Red<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Next</span><br/><span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>Title$<span class=\"sy0\">=</span><span class=\"st0\">\"PureBasic Plot\"</span><br/>Flags<span class=\"sy0\">=</span>#PB_Window_SystemMenu<br/><span class=\"kw2\">OpenWindow</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,#PB_Ignore,#PB_Ignore,<span class=\"kw2\">ImageWidth</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw2\">ImageHeight</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>,Title$,Flags<span class=\"br0\">)</span><br/><span class=\"kw2\">ImageGadget</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"nu0\">0</span>,<span class=\"kw2\">ImageWidth</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw2\">ImageHeight</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>,<span class=\"kw2\">ImageID</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Repeat</span>: <span class=\"kw1\">Until</span> <span class=\"kw2\">WaitWindowEvent</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">=</span>#PB_Event_CloseWindow</pre>"}, {"lang": "Python", "loc": 44, "block": "<pre class=\"python highlighted_source\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">from</span> <span class=\"kw3\">collections</span> <span class=\"kw1\">import</span> defaultdict<br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">from</span> <span class=\"kw3\">random</span> <span class=\"kw1\">import</span> choice<br/><span class=\"sy0\">&gt;&gt;&gt;</span> world <span class=\"sy0\">=</span> defaultdict<span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">)</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> possiblepoints <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>-<span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>\t\t  <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>-<span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><br/>\t\t  <span class=\"kw1\">if</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&lt;=</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span>x+y*1j<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span><br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>: world<span class=\"br0\">[</span>choice<span class=\"br0\">(</span>possiblepoints<span class=\"br0\">)</span><span class=\"br0\">]</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>-<span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>:<br/>\t<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span><span class=\"kw2\">min</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> world<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> world<span class=\"br0\">[</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"kw1\">else</span> <span class=\"st0\">' '</span><br/>\t\t\t  <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>-<span class=\"nu0\">15</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>             <span class=\"nu0\">1</span>     <span class=\"nu0\">1</span>           <br/>          <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>                  <br/>      <span class=\"nu0\">11</span> <span class=\"nu0\">1</span>     <span class=\"nu0\">1</span>  <span class=\"nu0\">1</span>     <span class=\"nu0\">1</span>      <br/>     <span class=\"nu0\">111</span>  <span class=\"nu0\">1</span>     <span class=\"nu0\">1211</span>           <br/>      <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>    <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>    <span class=\"nu0\">11</span>       <br/>      <span class=\"nu0\">1</span>  <span class=\"nu0\">11</span>         <span class=\"nu0\">21</span>         <br/>     <span class=\"nu0\">1</span>   <span class=\"nu0\">1</span>            <span class=\"nu0\">11</span>  <span class=\"nu0\">1</span>    <br/>   <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span>                <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>     <br/>\u00a0<br/> <span class=\"nu0\">1</span>  <span class=\"nu0\">2</span>                          <br/>   <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>                      <span class=\"nu0\">1</span>  <br/>   <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>                         <br/>   <span class=\"nu0\">2</span>                      <span class=\"nu0\">11</span>   <br/>  <span class=\"nu0\">1</span>                         <span class=\"nu0\">1</span>  <br/>                         <span class=\"nu0\">1</span>     <br/>\u00a0<br/>\u00a0<br/>  <span class=\"nu0\">1</span>                          <span class=\"nu0\">1</span> <br/>                         <span class=\"nu0\">1</span>     <br/>                         <span class=\"nu0\">2</span>     <br/>                            <span class=\"nu0\">1</span>  <br/>     <span class=\"nu0\">1</span>                  <span class=\"nu0\">1</span> <span class=\"nu0\">1</span>    <br/>      <span class=\"nu0\">1</span>                <span class=\"nu0\">2</span>   <span class=\"nu0\">1</span>   <br/>   <span class=\"nu0\">1</span>   <span class=\"nu0\">3</span>            <span class=\"nu0\">11</span>  <span class=\"nu0\">2</span>      <br/>    <span class=\"nu0\">11</span>   <span class=\"nu0\">1</span>    <span class=\"nu0\">1</span>      <span class=\"nu0\">1</span>   <span class=\"nu0\">2</span>     <br/>            <span class=\"nu0\">1</span>   <span class=\"nu0\">1</span>    <span class=\"nu0\">2</span>         <br/>        <span class=\"nu0\">1</span>  <span class=\"nu0\">1</span>                   <br/>         <span class=\"nu0\">1</span>      <span class=\"nu0\">1</span>     <span class=\"nu0\">1</span>        <br/>          <span class=\"nu0\">2</span> <span class=\"nu0\">2</span>   <span class=\"nu0\">1</span>              <br/>               <span class=\"nu0\">1</span>               </pre>"}, {"lang": "R", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>RMin &lt;- 10<br/>RMax &lt;- 15<br/>NPts &lt;- 100<br/>\u00a0<br/># instead of a for loop, we generate what should be enough points<br/># also take care to have enough range to avoid rounding inaccuracies<br/>nBlock &lt;- NPts * ((RMax/RMin) ^ 2)<br/>nValid &lt;- 0<br/>while (nValid &lt; NPts) {<br/>\tX &lt;- round(runif(nBlock, -RMax - 1, RMax + 1))<br/>\tY &lt;- round(runif(nBlock, -RMax - 1, RMax + 1))<br/>\tR &lt;-  sqrt(X^2 + Y^2)<br/>\tValid &lt;- ( (R &gt;= RMin) &amp; (R &lt;= RMax) )<br/>\tnValid &lt;- sum(Valid)<br/>\tnBlock &lt;- 2 * nBlock<br/>}<br/>plot(X[Valid][1:NPts],Y[Valid][1:NPts], pch=19, cex=0.25, col=\"blue\", <br/>\txlab=\"x\",ylab=\"y\",main=\"Fuzzy circle\", xlim=c(-RMax,RMax), ylim=c(-RMax,RMax) )<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 11, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>\u00a0<br/>(require plot plot/utils)<br/>\u00a0<br/>(plot (points (for*/lists (result)<br/>                ([_ (in-naturals)]<br/>                 #:break (= 100 (length result))<br/>                 [xy (in-value (v- (vector (random 31) (random 31))<br/>                                   #(15 15)))]<br/>                 #:when (&lt;= 10 (vmag xy) 15))<br/>                xy)))</pre>"}, {"lang": "REXX", "loc": 26, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program  generates  100  random points  in an  annulus:   10  \u2264  \u221a(x\u00b2\u2264y\u00b2)  \u2264  15 */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> points low high <span class=\"sy0\">.</span>                      <span class=\"coMULTI\">/*obtain optional args from the C.L.   */</span><br/><span class=\"kw1\">if</span> points==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> points=<span class=\"nu0\">100</span><br/><span class=\"kw1\">if</span>    low==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span>  low=<span class=\"nu0\">10</span>;   low2= low<span class=\"sy0\">**</span><span class=\"nu0\">2</span>      <span class=\"coMULTI\">/*define a shortcut for squaring  LOW. */</span><br/><span class=\"kw1\">if</span>   high==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> high=<span class=\"nu0\">15</span>;  high2=high<span class=\"sy0\">**</span><span class=\"nu0\">2</span>      <span class=\"coMULTI\">/*   \"   \"    \"      \"     \"      HIGH.*/</span><br/>$=<br/>   <span class=\"kw1\">do</span> x=-high;        x2=x<span class=\"sy0\">*</span>x                     <span class=\"coMULTI\">/*generate all possible annulus points.*/</span><br/>   <span class=\"kw1\">if</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> x2<span class=\"sy0\">&gt;</span>high2  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span><br/>   <span class=\"kw1\">if</span> x<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> x2<span class=\"sy0\">&gt;</span>high2  <span class=\"kw3\">then</span> <span class=\"kw1\">leave</span><br/>         <span class=\"kw1\">do</span> y=-high;          s=x2+y<span class=\"sy0\">*</span>y<br/>         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>y<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> s<span class=\"sy0\">&gt;</span>high2<span class=\"br0\">)</span> <span class=\"sy0\">|</span> s<span class=\"sy0\">&lt;</span>low2  <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span><br/>         <span class=\"kw1\">if</span>  y<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"sy0\">&amp;</span> s<span class=\"sy0\">&gt;</span>high2            <span class=\"kw3\">then</span> <span class=\"kw1\">leave</span><br/>         $=$ x<span class=\"st0\">','</span>y                               <span class=\"coMULTI\">/*add a point\u2500set to the  $  list.     */</span><br/>         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*y*/</span><br/>   <span class=\"kw3\">end</span>         <span class=\"coMULTI\">/*x*/</span><br/>\u00a0<br/>plotChar=<span class=\"st0\">'\u0398'</span>;        minY=high2;       maxY=-minY;       ap=<span class=\"kw6\">words</span><span class=\"br0\">(</span>$<span class=\"br0\">)</span>;      @<span class=\"sy0\">.</span>=<br/>\u00a0<br/>   <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">for</span> points                            <span class=\"coMULTI\">/*define the  x,y points [character O].*/</span><br/>   <span class=\"kw1\">parse</span> <span class=\"kw2\">value</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span>$,<span class=\"kw6\">random</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,ap<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw2\">with</span> x <span class=\"st0\">','</span> y <span class=\"coMULTI\">/*pick a  random point  in the annulus.*/</span><br/>   @<span class=\"sy0\">.</span>y=<span class=\"kw6\">overlay</span><span class=\"br0\">(</span>plotChar, @<span class=\"sy0\">.</span>y, x+high+<span class=\"nu0\">1</span><span class=\"br0\">)</span>          <span class=\"coMULTI\">/*define:  the data point.             */</span><br/>   minY=<span class=\"kw6\">min</span><span class=\"br0\">(</span>minY,y<span class=\"br0\">)</span>;    maxY=<span class=\"kw6\">max</span><span class=\"br0\">(</span>maxY,y<span class=\"br0\">)</span>         <span class=\"coMULTI\">/*perform the plot point restricting.  */</span><br/>   <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span><br/>                                                 <span class=\"coMULTI\">/* [\u2193]  only show displayable section. */</span><br/> <span class=\"kw1\">do</span> y=minY  <span class=\"kw2\">to</span> maxY;  <span class=\"kw1\">say</span> @<span class=\"sy0\">.</span>y;  <span class=\"kw3\">end</span>              <span class=\"coMULTI\">/*display the annulus to the terminal. */</span><br/>                                                 <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 46, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>load \"guilib.ring\"<br/>\u00a0<br/>new qapp <br/>        {<br/>        win1 = new qwidget() {<br/>                   setwindowtitle(\"drawing using qpainter\")<br/>                   setgeometry(100,100,500,500)<br/>                   label1 = new qlabel(win1) {<br/>                            setgeometry(10,10,400,400)<br/>                            settext(\"\")<br/>                  }<br/>                  new qpushbutton(win1) {<br/>                      setgeometry(200,400,100,30)<br/>                      settext(\"draw\")<br/>                      setclickevent(\"draw()\")<br/>                  }<br/>                  show()<br/>         }<br/>         exec()<br/>         }<br/>\u00a0<br/>func draw<br/>        p1 = new qpicture()<br/>             color = new qcolor() {<br/>             setrgb(0,0,255,255)<br/>        }<br/>        pen = new qpen() {<br/>              setcolor(color)<br/>              setwidth(1)<br/>        }<br/>        new qpainter() {<br/>            begin(p1)<br/>            setpen(pen)<br/>\u00a0<br/>        for i = 1 to 1000<br/>            x = random(31)-16<br/>            y = random(31)-16<br/>            r = sqrt (pow(x,2) + pow(y,2))<br/>            if r &gt;= 10 if r &lt;= 15 drawpoint(x*2, y*2) ok ok<br/>        next<br/>\u00a0<br/>        endpaint()<br/>        }<br/>        label1 { setpicture(p1) show() }<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 21, "block": "<pre class=\"ruby highlighted_source\">points = <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">100</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"kw1\">do</span><br/>  <span class=\"co1\"># choose a random radius and angle</span><br/>  angle = <span class=\"kw3\">rand</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2.0</span> <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::PI<br/>  rad   = <span class=\"kw3\">rand</span> <span class=\"sy0\">*</span> <span class=\"nu0\">5.0</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10.0</span><br/>  <span class=\"co1\"># convert back from polar to cartesian coordinates</span><br/>  <span class=\"br0\">[</span>rad <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::cos<span class=\"br0\">(</span>angle<span class=\"br0\">)</span>, rad <span class=\"sy0\">*</span> <span class=\"kw4\">Math</span>::sin<span class=\"br0\">(</span>angle<span class=\"br0\">)</span><span class=\"br0\">]</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>:round<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span>..<span class=\"nu0\">15</span><span class=\"br0\">)</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>row<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">puts</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">15</span>..<span class=\"nu0\">15</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>col<span class=\"sy0\">|</span> points.<span class=\"kw1\">include</span>?<span class=\"br0\">(</span><span class=\"br0\">[</span>row, col<span class=\"br0\">]</span><span class=\"br0\">)</span>\u00a0? <span class=\"st0\">\"X\"</span>\u00a0: <span class=\"st0\">\" \"</span> <span class=\"br0\">}</span>.<span class=\"me1\">join</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw3\">load</span> <span class=\"st0\">'raster_graphics.rb'</span><br/>\u00a0<br/>pixmap = Pixmap.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">321</span>,<span class=\"nu0\">321</span><span class=\"br0\">)</span><br/>pixmap.<span class=\"me1\">draw_circle</span><span class=\"br0\">(</span>Pixel.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">160</span>,<span class=\"nu0\">160</span><span class=\"br0\">)</span>,<span class=\"nu0\">90</span>,<span class=\"re2\">RGBColour::BLACK</span><span class=\"br0\">)</span><br/>pixmap.<span class=\"me1\">draw_circle</span><span class=\"br0\">(</span>Pixel.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"nu0\">160</span>,<span class=\"nu0\">160</span><span class=\"br0\">)</span>,<span class=\"nu0\">160</span>,<span class=\"re2\">RGBColour::BLACK</span><span class=\"br0\">)</span><br/>points.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span><span class=\"br0\">(</span>x,y<span class=\"br0\">)</span><span class=\"sy0\">|</span> pixmap<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>x<span class=\"sy0\">+</span><span class=\"nu0\">16</span><span class=\"br0\">)</span>,<span class=\"nu0\">10</span><span class=\"sy0\">*</span><span class=\"br0\">(</span>y<span class=\"sy0\">+</span><span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">]</span> = <span class=\"re2\">RGBColour::BLACK</span><span class=\"br0\">}</span><br/>pngfile = <span class=\"kw2\">__FILE__</span><br/>pngfile<span class=\"br0\">[</span><span class=\"sy0\">/</span>\\.<span class=\"me1\">rb</span><span class=\"sy0\">/</span><span class=\"br0\">]</span> = <span class=\"st0\">\".png\"</span><br/>pixmap.<span class=\"me1\">save_as_png</span><span class=\"br0\">(</span>pngfile<span class=\"br0\">)</span></pre>"}, {"lang": "Run BASIC", "loc": 25, "block": "<pre class=\"text highlighted_source\">w = 320<br/>h = 320<br/>dim canvas(w,h)<br/>for pts = 1 to 1000<br/>  x = (rnd(1) * 31) - 15<br/>  y = (rnd(1) * 31) - 15<br/>  r = x * x + y * y<br/>  if (r &gt; 100) and (r &lt; 225) then<br/>    x = int(x * 10 + w/2)<br/>    y = int(y * 10 + h/2)<br/>    canvas(x,y) = 1<br/>  end if<br/>next pts    <br/>\u00a0<br/>' -----------------------------<br/>' display the graphic<br/>' -----------------------------<br/>graphic #g, w,h<br/>for x = 1 to w<br/>  for y = 1 to h<br/>     if canvas(x,y) = 1 then  #g \"color green\u00a0; set \"; x; \" \"; y else #g \"color blue\u00a0; set \"; x; \" \"; y<br/>  next y<br/>next x<br/>render #g <br/>#g \"flush\"</pre>"}, {"lang": "Rust", "loc": 73, "block": "<pre class=\"text highlighted_source\">#![feature(inclusive_range_syntax)]<br/>\u00a0<br/>extern crate rand;<br/>\u00a0<br/>use rand::Rng;<br/>\u00a0<br/>const POINTS_N: usize = 100;<br/>\u00a0<br/>fn generate_point&lt;R: Rng&gt;(rng: &amp;mut R) -&gt; (i32, i32) {<br/>    loop {<br/>        let x = rng.gen_range(-15, 16); // exclusive<br/>        let y = rng.gen_range(-15, 16);<br/>\u00a0<br/>        let r2 = x * x + y * y;<br/>        if r2 &gt;= 100 &amp;&amp; r2 &lt;= 225 {<br/>            return (x, y);<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>fn filtering_method&lt;R: Rng&gt;(rng: &amp;mut R) {<br/>    let mut rows = [[\" \"; 62]; 31];<br/>\u00a0<br/>    // Generate points<br/>    for _ in 0..POINTS_N {<br/>        let (x, y) = generate_point(rng);<br/>        rows[(y + 15) as usize][(x + 15) as usize * 2] = \"*\";<br/>    }<br/>\u00a0<br/>    // draw the points<br/>    for row in &amp;rows {<br/>        println!(\"{}\", row.concat());<br/>    }<br/>}<br/>\u00a0<br/>fn precalculating_method&lt;R: Rng&gt;(rng: &amp;mut R) {<br/>    // Generate all possible points<br/>    let mut possible_points = Vec::with_capacity(404);<br/>    for y in -15..=15 {<br/>        for x in -15..=15 {<br/>            let r2 = x * x + y * y;<br/>            if r2 &gt;= 100 &amp;&amp; r2 &lt;= 225 {<br/>                possible_points.push((x, y));<br/>            }<br/>        }<br/>    }<br/>\u00a0<br/>    // A truncated Fisher-Yates shuffle<br/>    let len = possible_points.len();<br/>    for i in (len - POINTS_N..len).rev() {<br/>        let j = rng.gen_range(0, i + 1);<br/>        possible_points.swap(i, j);<br/>    }<br/>\u00a0<br/>    // turn the selected points into \"pixels\"<br/>    let mut rows = [[\" \"; 62]; 31];<br/>    for &amp;(x, y) in &amp;possible_points[len - POINTS_N..] {<br/>        rows[(y + 15) as usize][(x + 15) as usize * 2] = \"*\";<br/>    }<br/>\u00a0<br/>    // draw the \"pixels\"<br/>    for row in &amp;rows {<br/>        println!(\"{}\", row.concat());<br/>    }<br/>}<br/>\u00a0<br/>fn main() {<br/>    let mut rng = rand::weak_rng();<br/>\u00a0<br/>    filtering_method(&amp;mut rng);<br/>\u00a0<br/>    precalculating_method(&amp;mut rng);<br/>}</pre>"}, {"lang": "Scala", "loc": 80, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"br0\">{</span> Color, geom,Graphics2D ,Rectangle<span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">math</span>.<span class=\"me1\">hypot</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"br0\">{</span>MainFrame,Panel,SimpleSwingApplication<span class=\"br0\">}</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">swing</span>.<span class=\"me1\">Swing</span>.<span class=\"me1\">pair2Dimension</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">util</span>.<span class=\"me1\">Random</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> CirculairConstrainedRandomPoints <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> SimpleSwingApplication <span class=\"br0\">{</span><br/>  <span class=\"co1\">//min/max of display-x resp. y</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dx0, dy0 <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dxm, dym <span class=\"sy0\">=</span> <span class=\"nu0\">430</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> prefSizeX, prefSizeY <span class=\"sy0\">=</span> <span class=\"nu0\">480</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> palet <span class=\"sy0\">=</span> Map<span class=\"br0\">(</span><span class=\"st0\">\"b\"</span> -<span class=\"sy0\">&gt;</span> Color.<span class=\"me1\">blue</span>, <span class=\"st0\">\"g\"</span> -<span class=\"sy0\">&gt;</span> Color.<span class=\"me1\">green</span>, <span class=\"st0\">\"r\"</span> -<span class=\"sy0\">&gt;</span> Color.<span class=\"me1\">red</span>, <span class=\"st0\">\"s\"</span> -<span class=\"sy0\">&gt;</span> Color.<span class=\"me1\">black</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cs <span class=\"sy0\">=</span> List<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">10</span>, <span class=\"st0\">\"b\"</span><span class=\"br0\">)</span>, <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">15</span>, <span class=\"st0\">\"g\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">//circle position and color</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xmax, ymax <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xmin, ymin <span class=\"sy0\">=</span> -xmax<br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Coord<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> Double, y<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> dx <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>dxm - dx0<span class=\"br0\">)</span> / <span class=\"nu0\">2</span> + x.<span class=\"me1\">toDouble</span> / xmax <span class=\"sy0\">*</span> <span class=\"br0\">(</span>dxm - dx0<span class=\"br0\">)</span> / <span class=\"nu0\">2</span><span class=\"br0\">)</span> + dx0<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> dy <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span>dym - dy0<span class=\"br0\">)</span> / <span class=\"nu0\">2</span> - y.<span class=\"me1\">toDouble</span> / ymax <span class=\"sy0\">*</span> <span class=\"br0\">(</span>dym - dy0<span class=\"br0\">)</span> / <span class=\"nu0\">2</span><span class=\"br0\">)</span> + dy0<span class=\"br0\">)</span>.<span class=\"me1\">toInt</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Coord <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> apply<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> Double, y<span class=\"sy0\">:</span> Double<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Coord<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">//points:</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> points <span class=\"sy0\">=</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Iterator<span class=\"br0\">[</span>Int<span class=\"br0\">]</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Random<span class=\"sy0\">;</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> next <span class=\"sy0\">=</span> r.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> - <span class=\"nu0\">15</span><span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> hasNext <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a> <span class=\"br0\">}</span>.<span class=\"me1\">toStream</span>.<br/>      <span class=\"me1\">zip</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Iterator<span class=\"br0\">[</span>Int<span class=\"br0\">]</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> r <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Random<span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> next <span class=\"sy0\">=</span> r.<span class=\"me1\">nextInt</span><span class=\"br0\">(</span><span class=\"nu0\">31</span><span class=\"br0\">)</span> - <span class=\"nu0\">15</span><span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> hasNext <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a> <span class=\"br0\">}</span>.<span class=\"me1\">toStream</span><span class=\"br0\">)</span>.<br/>      <span class=\"me1\">map</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">(</span>x, y, hypot<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span>.<span class=\"me1\">filter</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>x, y, r<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> r <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&amp;&amp;</span> r <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span> <span class=\"br0\">}</span>.<span class=\"me1\">take</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>.<span class=\"me1\">toSeq</span>.<br/>      <span class=\"me1\">map</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>x, y, r<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Rectangle<span class=\"br0\">(</span>Coord<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span>.<span class=\"me1\">dx</span> - <span class=\"nu0\">2</span>, Coord<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span>.<span class=\"me1\">dy</span> - <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">private</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> ui <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Panel <span class=\"br0\">{</span><br/>    background <span class=\"sy0\">=</span> Color.<span class=\"me1\">white</span><br/>    preferredSize <span class=\"sy0\">=</span> <span class=\"br0\">(</span>prefSizeX, prefSizeY<span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Circle<span class=\"br0\">(</span>center<span class=\"sy0\">:</span> Coord, r<span class=\"sy0\">:</span> Double, <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> color<span class=\"sy0\">:</span> Color<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dr <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Coord<span class=\"br0\">(</span>r, <span class=\"nu0\">0</span><span class=\"br0\">)</span>.<span class=\"me1\">dx</span> - pcentre.<span class=\"me1\">dx</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dx <span class=\"sy0\">=</span> center.<span class=\"me1\">dx</span> - dr / <span class=\"nu0\">2</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dy <span class=\"sy0\">=</span> center.<span class=\"me1\">dy</span> - dr / <span class=\"nu0\">2</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> Circle <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> apply<span class=\"br0\">(</span>x<span class=\"sy0\">:</span> Double, y<span class=\"sy0\">:</span> Double, r<span class=\"sy0\">:</span> Double, color<span class=\"sy0\">:</span> Color<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> Circle<span class=\"br0\">(</span>Coord<span class=\"br0\">(</span>x, y<span class=\"br0\">)</span>, r, color<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pcentre <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pxmax <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span>xmax, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pxmin <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span>xmin, <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pymax <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span><span class=\"nu0\">0</span>, ymax<span class=\"br0\">)</span><span class=\"sy0\">;</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> pymin <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span><span class=\"nu0\">0</span>, ymin<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">//axes:</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> a<span class=\"sy0\">_</span>path <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> geom.<span class=\"me1\">GeneralPath</span><br/>    a<span class=\"sy0\">_</span>path.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>pxmin.<span class=\"me1\">dx</span>, pxmin.<span class=\"me1\">dy</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> a<span class=\"sy0\">_</span>path.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>pxmax.<span class=\"me1\">dx</span>, pxmax.<span class=\"me1\">dy</span><span class=\"br0\">)</span> <span class=\"co1\">//x-axis</span><br/>    a<span class=\"sy0\">_</span>path.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>pymin.<span class=\"me1\">dx</span>, pymin.<span class=\"me1\">dy</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> a<span class=\"sy0\">_</span>path.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>pymax.<span class=\"me1\">dx</span>, pymax.<span class=\"me1\">dy</span><span class=\"br0\">)</span> <span class=\"co1\">//y-axis</span><br/>\u00a0<br/>    <span class=\"co1\">//labeling:</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> labels <span class=\"sy0\">=</span> List<span class=\"br0\">(</span>-<span class=\"nu0\">20</span>, -<span class=\"nu0\">15</span>, -<span class=\"nu0\">10</span>, -<span class=\"nu0\">5</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><br/>    labels.<span class=\"me1\">foreach</span> <span class=\"br0\">{</span> x <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span>x, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> a<span class=\"sy0\">_</span>path.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>p.<span class=\"me1\">dx</span>, p.<span class=\"me1\">dy</span> - <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> a<span class=\"sy0\">_</span>path.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>p.<span class=\"me1\">dx</span>, p.<span class=\"me1\">dy</span> + <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    labels.<span class=\"me1\">foreach</span> <span class=\"br0\">{</span> y <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span><span class=\"nu0\">0</span>, y<span class=\"br0\">)</span><span class=\"sy0\">;</span> a<span class=\"sy0\">_</span>path.<span class=\"me1\">moveTo</span><span class=\"br0\">(</span>p.<span class=\"me1\">dx</span> - <span class=\"nu0\">3</span>, p.<span class=\"me1\">dy</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> a<span class=\"sy0\">_</span>path.<span class=\"me1\">lineTo</span><span class=\"br0\">(</span>p.<span class=\"me1\">dx</span> + <span class=\"nu0\">3</span>, p.<span class=\"me1\">dy</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> xlabels <span class=\"sy0\">=</span> labels.<span class=\"me1\">map</span><span class=\"br0\">(</span>x <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span>x, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> Triple<span class=\"br0\">(</span>x.<span class=\"me1\">toString</span>, p.<span class=\"me1\">dx</span> - <span class=\"nu0\">3</span>, p.<span class=\"me1\">dy</span> + <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> ylabels <span class=\"sy0\">=</span> labels.<span class=\"me1\">map</span><span class=\"br0\">(</span>y <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> Coord<span class=\"br0\">(</span><span class=\"nu0\">0</span>, y<span class=\"br0\">)</span><span class=\"sy0\">;</span> Triple<span class=\"br0\">(</span>y.<span class=\"me1\">toString</span>, p.<span class=\"me1\">dx</span> - <span class=\"nu0\">20</span>, p.<span class=\"me1\">dy</span> + <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">//circles:</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> circles <span class=\"sy0\">=</span> cs.<span class=\"me1\">map</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>x, y, r, c<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Circle<span class=\"br0\">(</span>x, y, r, palet<span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> paintComponent<span class=\"br0\">(</span>g<span class=\"sy0\">:</span> Graphics2D<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">super</span></a>.<span class=\"me1\">paintComponent</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span><br/>      circles.<span class=\"me1\">foreach</span> <span class=\"br0\">{</span> c <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span> g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>c.<span class=\"me1\">color</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> g.<span class=\"me1\">drawOval</span><span class=\"br0\">(</span>c.<span class=\"me1\">dx</span>, c.<span class=\"me1\">dy</span>, c.<span class=\"me1\">dr</span>, c.<span class=\"me1\">dr</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>      g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>palet<span class=\"br0\">(</span><span class=\"st0\">\"r\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> points.<span class=\"me1\">foreach</span><span class=\"br0\">(</span>g.<span class=\"me1\">draw</span><span class=\"br0\">(</span><span class=\"sy0\">_</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      g.<span class=\"me1\">setColor</span><span class=\"br0\">(</span>palet<span class=\"br0\">(</span><span class=\"st0\">\"s\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> g.<span class=\"me1\">draw</span><span class=\"br0\">(</span>a<span class=\"sy0\">_</span>path<span class=\"br0\">)</span><br/>      xlabels.<span class=\"me1\">foreach</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>text, px, py<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span>text, px, py<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>      ylabels.<span class=\"me1\">foreach</span> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span>text, px, py<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> g.<span class=\"me1\">drawString</span><span class=\"br0\">(</span>text, px, py<span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span> <span class=\"co1\">// def ui</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> top <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> MainFrame <span class=\"br0\">{</span><br/>    title <span class=\"sy0\">=</span> <span class=\"st0\">\"Rosetta Code &gt;&gt;&gt; Task: Constrained random points on a circle | Language: Scala\"</span><br/>    contents <span class=\"sy0\">=</span> ui<br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Sidef", "loc": 23, "block": "<pre class=\"ruby highlighted_source\">var points = <span class=\"br0\">[</span><span class=\"br0\">]</span>;<br/><span class=\"kw1\">while</span> <span class=\"br0\">(</span>points.<span class=\"me1\">len</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    var <span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> = <span class=\"nu0\">2</span>.<span class=\"me1\">of</span><span class=\"br0\">{</span><span class=\"nu0\">31</span>.<span class=\"kw3\">rand</span>.<span class=\"me1\">int</span> <span class=\"sy0\">-</span> <span class=\"nu0\">15</span><span class=\"br0\">}</span>...;<br/>    var r2 = <span class=\"br0\">(</span>x<span class=\"sy0\">**</span><span class=\"nu0\">2</span> <span class=\"sy0\">+</span> y<span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>r2 <span class=\"sy0\">&gt;</span>= <span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>r2 <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">225</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        points.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"br0\">[</span>x, y<span class=\"br0\">]</span><span class=\"br0\">)</span>;<br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw3\">print</span> <span class=\"sy0\">&lt;&lt;</span><span class=\"st0\">'HEAD'</span>;<br/><span class=\"sy0\">%</span>!PS<span class=\"sy0\">-</span>Adobe<span class=\"sy0\">-</span><span class=\"nu0\">3.0</span> EPSF<span class=\"sy0\">-</span><span class=\"nu0\">3.0</span><br/><span class=\"sy0\">%%</span>BoundingBox <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">400</span> <span class=\"nu0\">400</span><br/><span class=\"nu0\">200</span> <span class=\"nu0\">200</span> translate <span class=\"nu0\">10</span> <span class=\"nu0\">10</span> scale<br/><span class=\"nu0\">0</span> setlinewidth<br/><span class=\"nu0\">1</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> setrgbcolor<br/><span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">10</span> <span class=\"nu0\">0</span> <span class=\"nu0\">360</span> arc stroke<br/><span class=\"nu0\">0</span> <span class=\"nu0\">0</span> <span class=\"nu0\">15</span> <span class=\"nu0\">360</span> <span class=\"nu0\">0</span> arcn stroke<br/><span class=\"nu0\">0</span> setgray<br/><span class=\"sy0\">/</span>pt <span class=\"br0\">{</span> .1 <span class=\"nu0\">0</span> <span class=\"nu0\">360</span> arc fill <span class=\"br0\">}</span> <span class=\"kw1\">def</span><br/>HEAD<br/>\u00a0<br/>points.<span class=\"me1\">each</span> <span class=\"br0\">{</span> <span class=\"sy0\">|</span>pt<span class=\"sy0\">|</span> say <span class=\"st0\">\"#{pt.join(' ')} pt\"</span> <span class=\"br0\">}</span>;<br/><span class=\"kw3\">print</span> <span class=\"st0\">'%%EOF'</span>;</pre>"}, {"lang": "SystemVerilog", "loc": 26, "block": "<pre class=\"systemverilog highlighted_source\"><span class=\"kw4\">program</span> main<span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw5\">bit</span> <span class=\"br0\">[</span><span class=\"nu0\">39</span><span class=\"sy0\">:</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> bitmap <span class=\"br0\">[</span><span class=\"nu0\">40</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">class</span> Point<span class=\"sy0\">;</span><br/>    <span class=\"kw3\">rand</span> <span class=\"kw5\">bit</span> <span class=\"kw5\">signed</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">:</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> x<span class=\"sy0\">;</span><br/>    <span class=\"kw3\">rand</span> <span class=\"kw5\">bit</span> <span class=\"kw5\">signed</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">:</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> y<span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw3\">constraint</span> on_circle_edge <span class=\"br0\">{</span><br/>      <span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span>x<span class=\"sy0\">*</span>x <span class=\"sy0\">+</span> y<span class=\"sy0\">*</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">(</span>x<span class=\"sy0\">*</span>x <span class=\"sy0\">+</span> y<span class=\"sy0\">*</span>y<span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"sy0\">*</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">function</span> <span class=\"kw5\">void</span> do_point<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw7\">randomize</span><span class=\"sy0\">;</span><br/>      bitmap<span class=\"br0\">[</span>x<span class=\"sy0\">+</span><span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"br0\">[</span>y<span class=\"sy0\">+</span><span class=\"nu0\">20</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">endfunction</span><br/>  <span class=\"kw4\">endclass</span><br/>\u00a0<br/>  <span class=\"kw4\">initial</span> <span class=\"kw4\">begin</span><br/>    Point p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span><span class=\"sy0\">;</span><br/>    <span class=\"kw3\">repeat</span> <span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> p.do_point<span class=\"sy0\">;</span><br/>    <span class=\"kw3\">foreach</span> <span class=\"br0\">(</span>bitmap<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">)</span> $display<span class=\"br0\">(</span> <span class=\"st0\">\"%b\"</span><span class=\"sy0\">,</span> bitmap<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <span class=\"kw4\">end</span><br/>\u00a0<br/><span class=\"kw4\">endprogram</span></pre>"}, {"lang": "Tcl", "loc": 34, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/><span class=\"co1\"># Generate random point at specified distance from the centre</span><br/><span class=\"kw1\">proc</span> getPoint <span class=\"br0\">{</span>range from to<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> r2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$range</span> / <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> f2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$from</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">set</span> t2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$to</span> <span class=\"sy0\">**</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">while</span> <span class=\"nu0\">1</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span><span class=\"re0\">$range</span> <span class=\"sy0\">*</span> rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>int<span class=\"br0\">(</span><span class=\"re0\">$range</span> <span class=\"sy0\">*</span> rand<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">set</span> d2 <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$x</span>-<span class=\"re0\">$r2</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span> + <span class=\"br0\">(</span><span class=\"re0\">$y</span>-<span class=\"re0\">$r2</span><span class=\"br0\">)</span><span class=\"sy0\">**</span><span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$d2</span> <span class=\"sy0\">&gt;</span>= <span class=\"re0\">$f2</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$d2</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$t2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$y</span> <span class=\"re0\">$x</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Make somewhere to store the counters</span><br/><span class=\"kw1\">set</span> ary <span class=\"br0\">[</span>lrepeat <span class=\"nu0\">31</span> <span class=\"br0\">[</span>lrepeat <span class=\"nu0\">31</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\"># Generate 100 random points</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">set</span> location <span class=\"br0\">[</span>getPoint <span class=\"nu0\">31</span> <span class=\"nu0\">10</span> <span class=\"nu0\">15</span><span class=\"br0\">]</span><br/>    <span class=\"co1\"># Increment the counter for the point</span><br/>    <span class=\"kw2\">lset</span> ary <span class=\"re0\">$location</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span> + <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$ary</span> <span class=\"re0\">$location</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Simple renderer</span><br/><span class=\"kw1\">foreach</span> line <span class=\"re0\">$ary</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> c <span class=\"re0\">$line</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$c</span> == <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"st0\">\" \"</span>\u00a0: <span class=\"re0\">$c</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">9</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"X\"</span>\u00a0: <span class=\"re0\">$c</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "XPL0", "loc": 13, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\codes;  \\intrinsic 'code' declarations<br/>int X, Y, C, R2;<br/>[SetVid($13);           \\set 320x200x8 graphics mode<br/>C:= 0;                  \\initialize point counter<br/>repeat  X:= Ran(31)-15; \\range -15..+15<br/>        Y:= Ran(31)-15;<br/>        R2:= X*X + Y*Y;<br/>        if R2&gt;=10*10 &amp; R2&lt;=15*15 then<br/>                [Point(X+160, Y+100, $F);  C:= C+1];<br/>until C &gt;= 100;<br/>C:= ChIn(1);            \\wait for keystroke<br/>SetVid(3);              \\restore normal text mode<br/>]</pre>"}, {"lang": "zkl", "loc": 10, "block": "<pre class=\"text highlighted_source\">xy:=(0).walker(*).tweak(fcn{  // generate infinite random pairs (lazy)<br/>   x:=(-15).random(16); y:=(-15).random(16); <br/>   if(not (100&lt;=(x*x + y*y)&lt;=225)) Void.Skip else T(x,y)<br/>});<br/>\u00a0<br/>const N=31;  // [-15..15] includes 0<br/>array:=(\" ,\"*N*N).split(\",\").copy();  // bunch of spaces (list)<br/>\u00a0<br/>xy.walk(100).apply2(fcn([(x,y)],array){array[x+15 + N*(y+15)]=\"*\"},array);<br/>foreach n in ([0..30]){ array[n*N,30].concat().println(); }</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 6, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> <span class=\"kw1\">FOR</span> i=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">1000</span><br/><span class=\"nu0\">20</span> <span class=\"kw1\">LET</span> x=<span class=\"kw3\">RND</span>*<span class=\"nu0\">31</span>-<span class=\"nu0\">16</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> y=<span class=\"kw3\">RND</span>*<span class=\"nu0\">31</span>-<span class=\"nu0\">16</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">LET</span> r=<span class=\"kw3\">SQR</span> <span class=\"br0\">(</span>x*x+y*y<span class=\"br0\">)</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">IF</span> <span class=\"br0\">(</span>r&gt;=<span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"kw4\">AND</span> <span class=\"br0\">(</span>r&lt;=<span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">PLOT</span> <span class=\"nu0\">127</span>+x*<span class=\"nu0\">2</span>,<span class=\"nu0\">88</span>+y*<span class=\"nu0\">2</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">NEXT</span> i</pre>"}]}