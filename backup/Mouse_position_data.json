{"task": "Mouse_position", "blocks": [{"lang": "ActionScript", "loc": 39, "block": "<pre class=\"actionscript3 highlighted_source\">\u00a0<br/><span class=\"kw4\">package</span>  <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">import</span> <span class=\"kw6\">flash.display</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=sprite%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:sprite.html\"><span class=\"kw5\">Sprite</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">import</span> <span class=\"kw6\">flash.events</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=event%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:event.html\"><span class=\"kw5\">Event</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">import</span> <span class=\"kw6\">flash.text</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=textfield%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textfield.html\"><span class=\"kw5\">TextField</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">import</span> <span class=\"kw6\">flash.text</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=textfieldautosize%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textfieldautosize.html\"><span class=\"kw5\">TextFieldAutoSize</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">import</span> <span class=\"kw6\">flash.text</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=textformat%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textformat.html\"><span class=\"kw5\">TextFormat</span></a><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> MousePosition <span class=\"kw1\">extends</span> <a href=\"http://www.google.com/search?q=sprite%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:sprite.html\"><span class=\"kw5\">Sprite</span></a> <span class=\"br0\">{</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw2\">var</span> _textField<span class=\"sy0\">:</span><a href=\"http://www.google.com/search?q=textfield%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textfield.html\"><span class=\"kw5\">TextField</span></a> = <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?q=textfield%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textfield.html\"><span class=\"kw5\">TextField</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">public</span> <span class=\"kw3\">function</span> MousePosition<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">if</span> <span class=\"br0\">(</span> <span class=\"kw7\">stage</span> <span class=\"br0\">)</span> <span class=\"kw7\">init</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">else</span> <span class=\"kw7\">addEventListener</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=event%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:event.html\"><span class=\"kw5\">Event</span></a><span class=\"sy0\">.</span><span class=\"kw8\">ADDED_TO_STAGE</span><span class=\"sy0\">,</span> <span class=\"kw7\">init</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw3\">function</span> <span class=\"kw7\">init</span><span class=\"br0\">(</span>e<span class=\"sy0\">:</span><a href=\"http://www.google.com/search?q=event%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:event.html\"><span class=\"kw5\">Event</span></a> = <span class=\"kw1\">null</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw1\">void</span> <span class=\"br0\">{</span><br/>            <span class=\"kw7\">removeEventListener</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=event%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:event.html\"><span class=\"kw5\">Event</span></a><span class=\"sy0\">.</span><span class=\"kw8\">ADDED_TO_STAGE</span><span class=\"sy0\">,</span> <span class=\"kw7\">init</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            _textField<span class=\"sy0\">.</span><span class=\"kw7\">autoSize</span> = <a href=\"http://www.google.com/search?q=textfieldautosize%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textfieldautosize.html\"><span class=\"kw5\">TextFieldAutoSize</span></a><span class=\"sy0\">.</span><span class=\"kw8\">RIGHT</span><span class=\"sy0\">;</span><br/>            _textField<span class=\"sy0\">.</span><span class=\"kw7\">x</span> = <span class=\"kw7\">stage</span><span class=\"sy0\">.</span><span class=\"kw7\">stageWidth</span> <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span><br/>            _textField<span class=\"sy0\">.</span><span class=\"kw7\">defaultTextFormat</span> = <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?q=textformat%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:textformat.html\"><span class=\"kw5\">TextFormat</span></a><span class=\"br0\">(</span><span class=\"kw1\">null</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            _textField<span class=\"sy0\">.</span><span class=\"kw7\">text</span> = <span class=\"st0\">\"Mouse position: X = 0, Y = 0\"</span><span class=\"sy0\">;</span><br/>            _textField<span class=\"sy0\">.</span><span class=\"kw7\">y</span> = <span class=\"kw7\">stage</span><span class=\"sy0\">.</span><span class=\"kw7\">stageHeight</span> <span class=\"sy0\">-</span> _textField<span class=\"sy0\">.</span><span class=\"kw7\">textHeight</span> <span class=\"sy0\">-</span> <span class=\"nu0\">14</span><span class=\"sy0\">;</span><br/>            <span class=\"kw7\">addChild</span><span class=\"br0\">(</span>_textField<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>            <span class=\"kw7\">addEventListener</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?q=event%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:event.html\"><span class=\"kw5\">Event</span></a><span class=\"sy0\">.</span><span class=\"kw8\">ENTER_FRAME</span><span class=\"sy0\">,</span> _onEnterFrame<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">private</span> <span class=\"kw3\">function</span> _onEnterFrame<span class=\"br0\">(</span>e<span class=\"sy0\">:</span><a href=\"http://www.google.com/search?q=event%20inurl:http://livedocs.adobe.com/flex/201/langref/%20inurl:event.html\"><span class=\"kw5\">Event</span></a><span class=\"br0\">)</span><span class=\"sy0\">:</span><span class=\"kw1\">void</span> <span class=\"br0\">{</span><br/>            _textField<span class=\"sy0\">.</span><span class=\"kw7\">text</span> = <span class=\"st0\">\"Mouse position: X = \"</span> <span class=\"sy0\">+</span> <span class=\"kw7\">stage</span><span class=\"sy0\">.</span><span class=\"kw7\">mouseX</span> <span class=\"sy0\">+</span> <span class=\"st0\">\", Y = \"</span> <span class=\"sy0\">+</span> <span class=\"kw7\">stage</span><span class=\"sy0\">.</span><span class=\"kw7\">mouseY</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Ada", "loc": 67, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> GLib;        <span class=\"kw3\">use</span> GLib;<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Button</span>;  <span class=\"kw3\">use</span> Gtk.<span class=\"me1\">Button</span>;<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Label</span>;   <span class=\"kw3\">use</span> Gtk.<span class=\"me1\">Label</span>;<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Window</span>;  <span class=\"kw3\">use</span> Gtk.<span class=\"me1\">Window</span>;<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Widget</span>;  <span class=\"kw3\">use</span> Gtk.<span class=\"me1\">Widget</span>;<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Table</span>;   <span class=\"kw3\">use</span> Gtk.<span class=\"me1\">Table</span>;<br/>\u00a0<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Handlers</span>;<br/><span class=\"kw3\">with</span> Gtk.<span class=\"me1\">Main</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Tell_Mouse <span class=\"kw1\">is</span><br/>   Window\u00a0: Gtk_Window;<br/>   Grid  \u00a0: Gtk_Table;<br/>   Button\u00a0: Gtk_Button;<br/>   Label \u00a0: Gtk_Label;<br/>\u00a0<br/>   <span class=\"kw3\">package</span> Handlers <span class=\"kw1\">is</span> <span class=\"kw3\">new</span> Gtk.<span class=\"me1\">Handlers</span>.<span class=\"me1\">Callback</span> <span class=\"br0\">(</span>Gtk_Widget_Record<span class=\"br0\">)</span>;<br/>   <span class=\"kw3\">package</span> Return_Handlers <span class=\"kw1\">is</span><br/>      <span class=\"kw3\">new</span> Gtk.<span class=\"me1\">Handlers</span>.<span class=\"me1\">Return_Callback</span> <span class=\"br0\">(</span>Gtk_Widget_Record, Boolean<span class=\"br0\">)</span>;<br/>\u00a0<br/>   <span class=\"kw3\">function</span> Delete_Event <span class=\"br0\">(</span>Widget\u00a0: <span class=\"kw3\">access</span> Gtk_Widget_Record'Class<span class=\"br0\">)</span><br/>      <span class=\"kw1\">return</span> Boolean <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      <span class=\"kw1\">return</span> False;<br/>   <span class=\"kw1\">end</span> Delete_Event;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> Destroy <span class=\"br0\">(</span>Widget\u00a0: <span class=\"kw3\">access</span> Gtk_Widget_Record'Class<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>   <span class=\"kw1\">begin</span><br/>      Gtk.<span class=\"me1\">Main</span>.<span class=\"me1\">Main_Quit</span>;<br/>   <span class=\"kw1\">end</span> Destroy;<br/>\u00a0<br/>   <span class=\"kw3\">procedure</span> Clicked <span class=\"br0\">(</span>Widget\u00a0: <span class=\"kw3\">access</span> Gtk_Widget_Record'Class<span class=\"br0\">)</span> <span class=\"kw1\">is</span><br/>      X, Y\u00a0: GInt;<br/>   <span class=\"kw1\">begin</span><br/>      Get_Pointer <span class=\"br0\">(</span>Window, X, Y<span class=\"br0\">)</span>;<br/>      Set_Text <span class=\"br0\">(</span>Label, <span class=\"st0\">\"At\"</span> &amp; GInt'Image <span class=\"br0\">(</span>X<span class=\"br0\">)</span> &amp; GInt'Image <span class=\"br0\">(</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   <span class=\"kw1\">end</span> Clicked;<br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>   Gtk.<span class=\"me1\">Main</span>.<span class=\"me1\">Init</span>;<br/>   Gtk.<span class=\"me1\">Window</span>.<span class=\"me1\">Gtk_New</span> <span class=\"br0\">(</span>Window<span class=\"br0\">)</span>;<br/>   Gtk_New <span class=\"br0\">(</span>Grid, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, False<span class=\"br0\">)</span>;<br/>   Add <span class=\"br0\">(</span>Window, Grid<span class=\"br0\">)</span>;<br/>   Gtk_New <span class=\"br0\">(</span>Label<span class=\"br0\">)</span>;<br/>   Attach <span class=\"br0\">(</span>Grid, Label, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span>;<br/>   Gtk_New <span class=\"br0\">(</span>Button, <span class=\"st0\">\"Click me\"</span><span class=\"br0\">)</span>;<br/>   Attach <span class=\"br0\">(</span>Grid, Button, <span class=\"nu0\">0</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span>;<br/>   Return_Handlers.<span class=\"me1\">Connect</span><br/>   <span class=\"br0\">(</span>  Window,<br/>      <span class=\"st0\">\"delete_event\"</span>,<br/>      Return_Handlers.<span class=\"me1\">To_Marshaller</span> <span class=\"br0\">(</span>Delete_Event'<span class=\"kw3\">Access</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">)</span>;<br/>   Handlers.<span class=\"me1\">Connect</span><br/>   <span class=\"br0\">(</span>  Window,<br/>      <span class=\"st0\">\"destroy\"</span>,<br/>      Handlers.<span class=\"me1\">To_Marshaller</span> <span class=\"br0\">(</span>Destroy'<span class=\"kw3\">Access</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">)</span>;<br/>   Handlers.<span class=\"me1\">Connect</span><br/>   <span class=\"br0\">(</span>  Button,<br/>      <span class=\"st0\">\"clicked\"</span>,<br/>      Handlers.<span class=\"me1\">To_Marshaller</span> <span class=\"br0\">(</span>Clicked'<span class=\"kw3\">Access</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">)</span>;<br/>   Show_All <span class=\"br0\">(</span>Grid<span class=\"br0\">)</span>;<br/>   Show <span class=\"br0\">(</span>Window<span class=\"br0\">)</span>;<br/>\u00a0<br/>   Gtk.<span class=\"me1\">Main</span>.<span class=\"me1\">Main</span>;<br/><span class=\"kw1\">end</span> Tell_Mouse;</pre>"}, {"lang": "AutoHotkey", "loc": 5, "block": "<pre class=\"autohotkey highlighted_source\">#i:: <span class=\"co1\">; (Optional) Assigns a hotkey to display window info, Windows+i</span><br/><a href=\"http://www.autohotkey.com/docs/commands/MouseGetPos.htm\"><span class=\"kw3\">MouseGetPos</span></a><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y <span class=\"co1\">; Gets x/y pos relative to active window</span><br/><a href=\"http://www.autohotkey.com/docs/commands/WinGetActiveTitle.htm\"><span class=\"kw3\">WinGetActiveTitle</span></a><span class=\"sy0\">,</span> WinTitle <span class=\"co1\">; Gets active window title</span><br/><a href=\"http://www.autohotkey.com/docs/commands/TrayTip.htm\"><span class=\"kw3\">Traytip</span></a><span class=\"sy0\">,</span> Mouse position<span class=\"sy0\">,</span> x: <span class=\"re0\">%x%</span>`<span class=\"re2\">ny: </span><span class=\"re0\">%y%</span>`<span class=\"re2\">rWindow: </span><span class=\"re0\">%WinTitle%</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span> <span class=\"co1\">; Displays the info as a Traytip for 4 seconds</span><br/><span class=\"kw1\">return</span></pre>"}, {"lang": "BBC BASIC", "loc": 2, "block": "<pre class=\"text highlighted_source\">      MOUSE xmouse%, ymouse%, buttons%<br/>      PRINT xmouse%, ymouse%</pre>"}, {"lang": "C", "loc": 37, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;X11/Xlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  Display <span class=\"sy0\">*</span>d<span class=\"sy0\">;</span><br/>  Window inwin<span class=\"sy0\">;</span>      <span class=\"coMULTI\">/* root window the pointer is in */</span><br/>  Window inchildwin<span class=\"sy0\">;</span> <span class=\"coMULTI\">/* child win the pointer is in */</span><br/>  <span class=\"kw4\">int</span> rootx<span class=\"sy0\">,</span> rooty<span class=\"sy0\">;</span> <span class=\"coMULTI\">/* relative to the \"root\" window; we are not interested in these,<br/>                       but we can't pass NULL */</span><br/>  <span class=\"kw4\">int</span> childx<span class=\"sy0\">,</span> childy<span class=\"sy0\">;</span>  <span class=\"coMULTI\">/* the values we are interested in */</span><br/>  Atom atom_type_prop<span class=\"sy0\">;</span> <span class=\"coMULTI\">/* not interested */</span><br/>  <span class=\"kw4\">int</span> actual_format<span class=\"sy0\">;</span>   <span class=\"coMULTI\">/* should be 32 after the call */</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">int</span> mask<span class=\"sy0\">;</span>   <span class=\"coMULTI\">/* status of the buttons */</span><br/>  <span class=\"kw4\">unsigned</span> <span class=\"kw4\">long</span> n_items<span class=\"sy0\">,</span> bytes_after_ret<span class=\"sy0\">;</span><br/>  Window <span class=\"sy0\">*</span>props<span class=\"sy0\">;</span> <span class=\"coMULTI\">/* since we are interested just in the first value, which is<br/>\t\t    a Window id */</span><br/>\u00a0<br/>  <span class=\"coMULTI\">/* default DISPLAY */</span><br/>  d <span class=\"sy0\">=</span> XOpenDisplay<span class=\"br0\">(</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span> <br/>\u00a0<br/>  <span class=\"coMULTI\">/* ask for active window (no error check); the client must be freedesktop<br/>     compliant */</span><br/>  <span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span>XGetWindowProperty<span class=\"br0\">(</span>d<span class=\"sy0\">,</span> DefaultRootWindow<span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t\t\t   XInternAtom<span class=\"br0\">(</span>d<span class=\"sy0\">,</span> <span class=\"st0\">\"_NET_ACTIVE_WINDOW\"</span><span class=\"sy0\">,</span> True<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> False<span class=\"sy0\">,</span> AnyPropertyType<span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"sy0\">&amp;</span>atom_type_prop<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>actual_format<span class=\"sy0\">,</span><br/>\t\t\t   <span class=\"sy0\">&amp;</span>n_items<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>bytes_after_ret<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw4\">unsigned</span> <span class=\"kw4\">char</span><span class=\"sy0\">**</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>props<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  XQueryPointer<span class=\"br0\">(</span>d<span class=\"sy0\">,</span> props<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>inwin<span class=\"sy0\">,</span>  <span class=\"sy0\">&amp;</span>inchildwin<span class=\"sy0\">,</span><br/>\t\t<span class=\"sy0\">&amp;</span>rootx<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>rooty<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>childx<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>childy<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>mask<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"relative to active window:\u00a0%d,%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> childx<span class=\"sy0\">,</span> childy<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  XFree<span class=\"br0\">(</span>props<span class=\"br0\">)</span><span class=\"sy0\">;</span>           <span class=\"coMULTI\">/* free mem */</span><br/>  <span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span>XCloseDisplay<span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* and close the display */</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "c_sharp", "loc": 13, "block": "<pre class=\"csharp highlighted_source\">\u00a0<br/><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.Windows.Forms</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">static</span> <span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/>    <span class=\"br0\">[</span>STAThread<span class=\"br0\">]</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Control<span class=\"sy0\">.</span><span class=\"me1\">MousePosition</span><span class=\"sy0\">.</span><span class=\"me1\">X</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Control<span class=\"sy0\">.</span><span class=\"me1\">MousePosition</span><span class=\"sy0\">.</span><span class=\"me1\">Y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 1, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">[</span>point <span class=\"br0\">(</span><span class=\"sy0\">..</span> java<span class=\"sy0\">.</span>awt<span class=\"sy0\">.</span>MouseInfo getPointerInfo getLocation<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"sy0\">.</span>getX point<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"sy0\">.</span>getY point<span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre>"}, {"lang": "Delphi", "loc": 5, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">procedure</span> TForm1<span class=\"sy1\">.</span><span class=\"me1\">FormMouseMove</span><span class=\"br0\">(</span>Sender<span class=\"sy1\">:</span> <span class=\"kw4\">TObject</span><span class=\"sy1\">;</span> Shift<span class=\"sy1\">:</span> TShiftState<span class=\"sy1\">;</span> X<span class=\"sy1\">,</span><br/>  Y<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>   lblMousePosition<span class=\"sy1\">.</span><span class=\"me1\">Caption</span> <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"br0\">(</span><span class=\"st0\">'X:'</span> <span class=\"sy3\">+</span> <span class=\"kw3\">IntToStr</span><span class=\"br0\">(</span>X<span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">', Y:'</span> <span class=\"sy3\">+</span> <span class=\"kw3\">IntToStr</span><span class=\"br0\">(</span>Y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span></pre>"}, {"lang": "EchoLisp", "loc": 9, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'plot<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>plot-x-minmax <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"co1\">; set logical dimensions of plotting area</span><br/><span class=\"br0\">(</span>plot-y-minmax <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>  \u2192 <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">\"x\"</span> <span class=\"nu0\">0</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"st0\">\"y\"</span> <span class=\"nu0\">0</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"co1\">;; press ESC to see the canvas</span><br/><span class=\"co1\">;; the mouse position is displayed as , for example,  [ x: 5.6 y\u00a0: 88.7]</span><br/><span class=\"co1\">;; 0 &lt;= x &lt;= 10, 0 &lt;= y &lt;= 100</span><br/>\u00a0</pre>"}, {"lang": "Elm", "loc": 7, "block": "<pre class=\"text highlighted_source\">import Graphics.Element exposing (Element, show)<br/>import Mouse<br/>\u00a0<br/>\u00a0<br/>main\u00a0: Signal Element<br/>main =<br/>  Signal.map show Mouse.position</pre>"}, {"lang": "Emacs Lisp", "loc": 3, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>mouse-pixel-position<span class=\"br0\">)</span><br/><span class=\"sy0\">=&gt;</span><br/><span class=\"br0\">(</span>FRAME <span class=\"sy0\">.</span> <span class=\"br0\">(</span>X <span class=\"sy0\">.</span> Y<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "ERRE", "loc": 81, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>!<br/>! MOUSE WITH 'MOUSE.LIB' LIBRARY<br/>!<br/>\u00a0<br/>PROGRAM MOUSE<br/>\u00a0<br/>!$KEY<br/>\u00a0<br/>!$INCLUDE=\"PC.LIB\"<br/>\u00a0<br/>!$INCLUDE=\"MOUSE.LIB\"<br/>\u00a0<br/>PROCEDURE GETMONITORTYPE(-&gt;MONITOR$)<br/>     \u00a0!$RCODE=\"DEF SEG=0\"<br/>      STATUS=PEEK($463)<br/>     \u00a0!$RCODE=\"DEF SEG\"<br/>      MONITOR$=\"\"<br/>      IF STATUS=$B4 THEN<br/>        \u00a0!$RCODE=\"STATUS=(INP(&amp;H3BA) AND &amp;H80)\"<br/>         FOR DELAYLOOP=1 TO 30000 DO<br/>            \u00a0!$RCODE=\"XX=((INP(&amp;H3BA) AND &amp;H80)&lt;&gt;STATUS)\"<br/>             IF XX THEN MONITOR$=\"HERC\" END IF<br/>         END FOR<br/>         IF MONITOR$=\"\" THEN MONITOR$=\"MONO\" END IF<br/>       ELSE<br/>          REGAX%=$1A00<br/>          EXECUTEASM($10)<br/>          IF (REGAX% AND $FF)=$1A THEN<br/>                MONITOR$=\"VGA\"<br/>             ELSE<br/>                REGAX%=$1200  REGBX%=$10<br/>                EXECUTEASM($10)<br/>                IF (REGBX% AND $FF)=$10 THEN<br/>                     MONITOR$=\"CGA\"<br/>                  ELSE<br/>                     MONITOR$=\"EGA\"<br/>                END IF<br/>          END IF<br/>      END IF<br/>END PROCEDURE<br/>\u00a0<br/>BEGIN<br/>    INITASM<br/>    GETMONITORTYPE(-&gt;MONITOR$)<br/>    COLOR(7,0)<br/>    CLS<br/>    LOCATE(1,50)  PRINT(\"MONITOR TYPE  \";MONITOR$)<br/>    MOUSE_RESETANDSTATUS(-&gt;STATUS,BUTTONS)<br/>    IF STATUS&lt;&gt;-1 THEN<br/>        BEEP<br/>        CLS<br/>        PRINT(\"MOUSE DRIVER NOT INSTALLED OR MOUSE NOT FOUND\")<br/>        REPEAT<br/>           GET(IN$)<br/>        UNTIL IN$&lt;&gt;\"\"<br/>     ELSE<br/>        MOUSE_SETEXTCURSOR<br/>        MOUSE_SETCURSORLIMITS(8,199,0,639)<br/>        MOUSE_SETSENSITIVITY(30,30,50)<br/>        MOUSE_SHOWCURSOR<br/>        REPEAT<br/>          OLDX=X  OLDY=Y<br/>          MOUSE_GETCURSORPOSITION(-&gt;X,Y,LEFT%,RIGHT%,BOTH%,MIDDLE%)<br/>          GET(IN$)<br/>          COLOR(15,0)<br/>          LOCATE(1,2)<br/>          PRINT(\"X =\";INT(X/8)+1;\"  Y =\";INT(Y/8)+1;\"  \";)<br/>          IF LEFT%   THEN LOCATE(1,37) COLOR(10,0)  PRINT(\"LEFT\";) END IF<br/>          IF RIGHT%  THEN LOCATE(1,37) COLOR(12,0)  PRINT(\"RIGHT\";) END IF<br/>          IF MIDDLE% THEN LOCATE(1,37) COLOR(14,0)  PRINT(\"MIDDLE\";) END IF<br/>          IF NOT RIGHT% AND NOT LEFT% AND NOT MIDDLE% THEN<br/>              LOCATE(1,37)  PRINT(\"       \";)<br/>          END IF<br/>          IF NOT (X=OLDX AND Y=OLDY) THEN MOUSE_SHOWCURSOR END IF<br/>        UNTIL IN$=CHR$(27)<br/>   END IF<br/>   MOUSE_HIDECURSOR<br/>   CLS<br/>END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 14, "block": "<pre class=\"text highlighted_source\">: replace-text ( button text -- )<br/>    [ drop children&gt;&gt; pop drop ] [ &gt;label add-gadget drop ] 2bi\u00a0;<br/>: present-locations ( loc1 loc2 -- string )<br/>    [ <br/>      first2 [ number&gt;string ] <a class=\"__cf_email__\" data-cfemail=\"5d3f341d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> \",\" glue <br/>    ] <a class=\"__cf_email__\" data-cfemail=\"40222900\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> \";\" glue\u00a0;<br/>: example ( -- ) \"click me\" <br/>[ <br/>  dup hand-rel\u00a0! location relative to the button<br/>  hand-loc get\u00a0! location relative to the window<br/>  present-locations replace-text<br/>] <br/>&lt;border-button&gt; gadget.\u00a0;<br/>\u00a0</pre>"}, {"lang": "F#", "loc": 22, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System.<span class=\"me1\">Windows</span>.<span class=\"me1\">Forms</span><br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Runtime</span>.<span class=\"me1\">InteropServices</span><br/>\u00a0<br/><span class=\"co2\">#nowarn \"9\"</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>Struct<span class=\"sy0\">;</span> StructLayout<span class=\"br0\">(</span>LayoutKind.<span class=\"me1\">Sequential</span><span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">type</span> POINT <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">new</span> <span class=\"br0\">(</span>x, y<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span> X <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span> Y <span class=\"sy0\">=</span> y <span class=\"br0\">}</span><br/>    <span class=\"kw1\">val</span> X\u00a0: <span class=\"kw4\">int</span><br/>    <span class=\"kw1\">val</span> Y\u00a0: <span class=\"kw4\">int</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>DllImport<span class=\"br0\">(</span><span class=\"st0\">\"user32.dll\"</span><span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">extern</span> <span class=\"kw4\">nativeint</span> GetForegroundWindow<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>DllImport<span class=\"br0\">(</span><span class=\"st0\">\"user32.dll\"</span>, CharSet<span class=\"sy0\">=</span>CharSet.<span class=\"me1\">Auto</span>, SetLastError<span class=\"sy0\">=</span><span class=\"kw1\">true</span>, ExactSpelling<span class=\"sy0\">=</span><span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">extern</span> <span class=\"kw4\">int</span> ScreenToClient<span class=\"br0\">(</span><span class=\"kw4\">nativeint</span> hWnd, POINT &amp;pt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> GetMousePosition<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> hwnd <span class=\"sy0\">=</span> GetForegroundWindow<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">let</span> pt <span class=\"sy0\">=</span> Cursor.<span class=\"me1\">Position</span><br/>    <span class=\"kw1\">let</span> <span class=\"kw1\">mutable</span> ptFs <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> POINT<span class=\"br0\">(</span>pt.<span class=\"me1\">X</span>, pt.<span class=\"me1\">Y</span><span class=\"br0\">)</span><br/>    ScreenToClient<span class=\"br0\">(</span>hwnd, &amp;ptFs<span class=\"br0\">)</span> <span class=\"sy0\">|&gt;</span> <span class=\"kw3\">ignore</span><br/>    ptFs<br/>\u00a0</pre>"}, {"lang": "Gambas", "loc": 6, "block": "<pre class=\"gambas highlighted_source\">\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">PUBLIC</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">SUB</span></a> Form1_MouseMove<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">PRINT</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=mouse+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">mouse</span></a>.<span class=\"me1\">X</span> <br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">PRINT</span></a> <a href=\"http://www.google.com/search?hl=en&amp;q=mouse+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">Mouse</span></a>.<span class=\"me1\">Y</span> <br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">END</span></a><br/>\u00a0</pre>"}, {"lang": "Groovy", "loc": 5, "block": "<pre class=\"groovy highlighted_source\"><span class=\"nu0\">1</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20upto\"><span class=\"kw8\">upto</span></a><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.google.de/search?as_q=Thread&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">Thread</span></a>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20def\"><span class=\"kw2\">def</span></a> p <span class=\"sy0\">=</span> java.<span class=\"me1\">awt</span>.<span class=\"me1\">MouseInfo</span>.<span class=\"me1\">pointerInfo</span>.<span class=\"me1\">location</span><br/>    <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"${it}: x=${<a class=\"__cf_email__\" data-cfemail=\"4838660830\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>} y=${<a class=\"__cf_email__\" data-cfemail=\"4838660831\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>}\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "HicEst", "loc": 7, "block": "<pre class=\"hicest highlighted_source\">   <span class=\"kw1\">WINDOW</span><span class=\"br0\">(</span>WINdowhandle<span class=\"sy1\">=</span>handle<span class=\"br0\">)</span><br/>   <span class=\"kw1\">AXIS</span><span class=\"br0\">(</span>WINdowhandle<span class=\"sy1\">=</span>handle<span class=\"sy1\">,</span> MouSeCall<span class=\"sy1\">=</span>Mouse_Callback<span class=\"sy1\">,</span> MouSeX<span class=\"sy1\">=</span>X<span class=\"sy1\">,</span> MouSeY<span class=\"sy1\">=</span>Y<span class=\"br0\">)</span> <br/> <span class=\"kw1\">END</span><br/>\u00a0<br/><span class=\"kw1\">SUBROUTINE</span> Mouse_Callback<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Messagebox<span class=\"sy1\">,</span> Name<span class=\"br0\">)</span> X<span class=\"sy1\">,</span> Y<br/> <span class=\"kw1\">END</span></pre>"}, {"lang": "Icon and Unicon", "loc": 7, "block": "<pre class=\"icon highlighted_source\"><span class=\"kw1\">until</span> <span class=\"sy1\">*</span><span class=\"kw5\">Pending</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy1\">&amp;</span> <span class=\"kw5\">Event</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"st0\">\"q\"</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span> <span class=\"co1\"># loop until there is something to do</span><br/>   px <span class=\"sy1\">:=</span> <span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span><span class=\"st0\">\"pointerx\"</span><span class=\"br0\">)</span><br/>   py <span class=\"sy1\">:=</span> <span class=\"kw5\">WAttrib</span><span class=\"br0\">(</span><span class=\"st0\">\"pointery\"</span><span class=\"br0\">)</span><br/>   <span class=\"co1\">#  do whatever is needed</span><br/>   WDelay<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>  <span class=\"co1\"># wait and share processor</span><br/>   <span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 1, "block": "<pre class=\"java5 highlighted_source\"><a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/Point.html\"><span class=\"kw6\">Point</span></a> mouseLocation = <a href=\"http://java.sun.com/j2se/1%2E5%2E0/docs/api/java/awt/MouseInfo.html\"><span class=\"kw6\">MouseInfo</span></a>.<span class=\"me1\">getPointerInfo</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">getLocation</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "JavaScript", "loc": 3, "block": "<pre class=\"javascript highlighted_source\">document.<span class=\"me1\">addEventListener</span><span class=\"br0\">(</span><span class=\"st0\">'mousemove'</span><span class=\"sy0\">,</span> <span class=\"kw1\">function</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> position <span class=\"sy0\">=</span> <span class=\"br0\">{</span> x<span class=\"sy0\">:</span> e.<span class=\"me1\">clientX</span><span class=\"sy0\">,</span> y<span class=\"sy0\">:</span> e.<span class=\"me1\">clientY</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Kotlin", "loc": 11, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">MouseInfo</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"br0\">(</span><span class=\"nu0\">1</span>..<span class=\"nu0\">5</span><span class=\"br0\">)</span>.<span class=\"me1\">forEach</span> <span class=\"br0\">{</span><br/>        Thread.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">1000</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> MouseInfo.<span class=\"me1\">getPointerInfo</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">location</span>  <span class=\"co1\">// gets screen coordinates</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"${it}: x = ${\"</span><span class=\"sy0\">%</span>-4d<span class=\"st0\">\".format(p.x)} y = ${\"</span><span class=\"sy0\">%</span>-4d<span class=\"st0\">\".format(p.y)}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 38, "block": "<pre class=\"lb highlighted_source\">    <span class=\"kw1\">nomainwin</span><br/>\u00a0<br/>    <span class=\"kw3\">UpperLeftX</span> <span class=\"sy0\">=</span> DisplayWidth<span class=\"sy0\">-</span><span class=\"kw3\">WindowWidth</span><br/>    <span class=\"kw3\">UpperLeftY</span> <span class=\"sy0\">=</span> DisplayHeight<span class=\"sy0\">-</span><span class=\"kw3\">WindowHeight</span><br/>\u00a0<br/>    <span class=\"kw1\">struct</span> point<span class=\"sy0\">,</span> x <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><span class=\"sy0\">,</span> y <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><br/>\u00a0<br/>    <span class=\"kw1\">stylebits</span> <span class=\"sy0\">#</span>main.st <span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>_WS_EX_STATICEDGE<span class=\"sy0\">,</span><span class=\"nu0\">0</span><br/>    <span class=\"kw1\">statictext</span> <span class=\"sy0\">#</span>main.st <span class=\"st0\">\"\"</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span><span class=\"nu0\">16</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">26</span><br/>\u00a0<br/>    <span class=\"kw1\">stylebits</span> <span class=\"sy0\">#</span>main <span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>_WS_EX_TOPMOST<span class=\"sy0\">,</span><span class=\"nu0\">0</span><br/>    <span class=\"kw1\">open</span> <span class=\"st0\">\"move your mouse\"</span> <span class=\"kw1\">for</span> window_nf <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>main<br/>\u00a0<br/>    <span class=\"sy0\">#</span>main <span class=\"st0\">\"trapclose [quit]\"</span><br/>    <span class=\"kw1\">timer</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>mm<span class=\"br0\">]</span><br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>mm<span class=\"br0\">]</span><br/>    <span class=\"kw1\">CallDll</span> <span class=\"sy0\">#</span>user32<span class=\"sy0\">,</span> <span class=\"st0\">\"GetForegroundWindow\"</span><span class=\"sy0\">,</span> WndHandle <span class=\"kw1\">as</span> <span class=\"kw1\">uLong</span><br/>    <span class=\"sy0\">#</span>main.st CursorPos$<span class=\"br0\">(</span>WndHandle<span class=\"br0\">)</span><br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>quit<span class=\"br0\">]</span><br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>main<br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">function</span> CursorPos$<span class=\"br0\">(</span>handle<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Calldll</span> <span class=\"sy0\">#</span>user32<span class=\"sy0\">,</span> <span class=\"st0\">\"GetCursorPos\"</span><span class=\"sy0\">,</span>_<br/>        point <span class=\"kw1\">as</span> <span class=\"kw1\">struct</span><span class=\"sy0\">,</span>_<br/>        result <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><br/>    <span class=\"kw1\">Calldll</span> <span class=\"sy0\">#</span>user32<span class=\"sy0\">,</span> <span class=\"st0\">\"ScreenToClient\"</span><span class=\"sy0\">,</span>_<br/>        handle <span class=\"kw1\">As</span> <span class=\"kw1\">Ulong</span><span class=\"sy0\">,</span>_<br/>        point <span class=\"kw1\">As</span> <span class=\"kw1\">struct</span><span class=\"sy0\">,</span>_<br/>        result <span class=\"kw1\">as</span> <span class=\"kw1\">long</span><br/>    x <span class=\"sy0\">=</span> point.x.<span class=\"kw1\">struct</span><br/>    y <span class=\"sy0\">=</span> point.y.<span class=\"kw1\">struct</span><br/>    CursorPos$<span class=\"sy0\">=</span>x; <span class=\"st0\">\",\"</span>;y<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span></pre>"}, {"lang": "Lingo", "loc": 2, "block": "<pre class=\"text highlighted_source\">put _mouse.mouseLoc<br/>-- point(310, 199)</pre>"}, {"lang": "Logo", "loc": 1, "block": "<pre class=\"text highlighted_source\">show mousepos  \u00a0; [-250 250]</pre>"}, {"lang": "Mathematica", "loc": 1, "block": "<pre class=\"text highlighted_source\">MousePosition[\"WindowAbsolute\"]</pre>"}, {"lang": "MAXScript", "loc": 22, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>try destroydialog mousePos catch ()<br/>\u00a0<br/>rollout mousePos \"Mouse position\" width:200<br/>(<br/>\tlabel mousePosText \"Current mouse position:\" pos:[0,0]<br/>\tlabel mousePosX \"\" pos:[130,0]<br/>\tlabel mousePosSep \"x\" pos:[143,0]<br/>\tlabel mousePosY \"\" pos:[160,0]<br/>\u00a0<br/>\ttimer updateTimer interval:50 active:true<br/>\u00a0<br/>\ton updateTimer tick do<br/>\t(<br/>\t\tmousePosX.text = (mouse.screenpos.x as integer) as string<br/>\t\tmousePosY.text = (mouse.screenpos.y as integer) as string<br/>\t)<br/>\u00a0<br/>)<br/>\u00a0<br/>createdialog mousepos <br/>\u00a0</pre>"}, {"lang": "MATLAB", "loc": 1, "block": "<pre class=\"matlab highlighted_source\"><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/get.html\"><span class=\"kw2\">get</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"co2\">'PointerLocation'</span><span class=\"br0\">)</span></pre>"}, {"lang": "OCaml", "loc": 24, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">open</span> Xlib<br/>\u00a0<br/><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">let</span> d <span class=\"sy0\">=</span> xOpenDisplay <span class=\"st0\">\"\"</span> <span class=\"kw1\">in</span><br/>\u00a0<br/>  <span class=\"co1\">(* ask for active window (no error check);<br/>     the client must be freedesktop compliant *)</span><br/>  <span class=\"kw1\">let</span> _, _, _, _, props <span class=\"sy0\">=</span><br/>    xGetWindowProperty_window d<br/>        <span class=\"br0\">(</span>xDefaultRootWindow d<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>xInternAtom d <span class=\"st0\">\"_NET_ACTIVE_WINDOW\"</span> <span class=\"kw1\">true</span><span class=\"br0\">)</span><br/>        <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"kw1\">false</span> AnyPropertyType<br/>  <span class=\"kw1\">in</span><br/>\u00a0<br/>  <span class=\"kw1\">let</span> _, _, _, child, _ <span class=\"sy0\">=</span> xQueryPointer d props <span class=\"kw1\">in</span><br/>  <span class=\"kw1\">begin</span> <span class=\"kw1\">match</span> child <span class=\"kw1\">with</span><br/>  <span class=\"sy0\">|</span> Some<span class=\"br0\">(</span>_, childx, childy<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Printf.html\"><span class=\"kw2\">Printf</span></a><span class=\"sy0\">.</span>printf <span class=\"st0\">\"relative to active window:\u00a0%d,%d\\n%!\"</span> childx childy<span class=\"sy0\">;</span><br/>  <span class=\"sy0\">|</span> None <span class=\"sy0\">-&gt;</span><br/>      <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> <span class=\"st0\">\"the pointer is not on the same screen as the specified window\"</span><br/>  <span class=\"kw1\">end</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  xCloseDisplay d<span class=\"sy0\">;</span><br/><span class=\"sy0\">;;</span></pre>"}, {"lang": "Octave", "loc": 1, "block": "<pre class=\"octave highlighted_source\"><span class=\"br0\">[</span>X<span class=\"sy5\">,</span> Y<span class=\"sy5\">,</span> BUTTONS<span class=\"br0\">]</span> <span class=\"sy3\">=</span> <a href=\"http://octave.sourceforge.net/octave/function/ginput.html\"><span class=\"kw6\">ginput</span></a><span class=\"br0\">(</span>N<span class=\"br0\">)</span><span class=\"sy5\">;</span></pre>"}, {"lang": "Oz", "loc": 21, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"br0\">[</span>QTk<span class=\"br0\">]</span> = <span class=\"br0\">{</span>Module<span class=\"sy0\">.</span>link <span class=\"br0\">[</span><span class=\"st0\">'x-oz://system/wp/QTk.ozf'</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>  WindowClosed = <span class=\"br0\">{</span>NewCell <span class=\"kw1\">false</span><span class=\"br0\">}</span><br/>  Label<br/>  Window = <span class=\"br0\">{</span>QTk<span class=\"sy0\">.</span>build<br/>\t    td<span class=\"br0\">(</span>action:<span class=\"kw1\">proc</span> <span class=\"br0\">{</span><span class=\"re1\">$</span><span class=\"br0\">}</span> WindowClosed <span class=\"sy0\">:=</span> <span class=\"kw1\">true</span> <span class=\"br0\">{</span>Window close<span class=\"br0\">}</span> <span class=\"kw1\">end</span><br/>\t       label<span class=\"br0\">(</span>text:<span class=\"st0\">\"\"</span> handle:Label<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Window show<span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"kw1\">for</span> while:<span class=\"br0\">{</span>Not <span class=\"sy0\">@</span>WindowClosed<span class=\"br0\">}</span> <span class=\"kw1\">do</span><br/>     TopmostWindow = <span class=\"br0\">{</span>List<span class=\"sy0\">.</span>last <span class=\"br0\">{</span>String<span class=\"sy0\">.</span>tokens <span class=\"br0\">{</span>Tk<span class=\"sy0\">.</span>return wm<span class=\"br0\">(</span>stackorder <span class=\"st0\">'.'</span><span class=\"br0\">)</span><span class=\"br0\">}</span> <span class=\"re3\">&amp; </span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>     Winfo = <span class=\"br0\">{</span>Record<span class=\"sy0\">.</span>mapInd winfo<span class=\"br0\">(</span>rootx:_ rooty:_ pointerx:_ pointery:_<span class=\"br0\">)</span><br/>\t      <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">$</span> I _<span class=\"br0\">}</span>  <br/>\t\t <span class=\"br0\">{</span>Tk<span class=\"sy0\">.</span>returnInt winfo<span class=\"br0\">(</span>I TopmostWindow<span class=\"br0\">)</span><span class=\"br0\">}</span>  <br/>\t      <span class=\"kw1\">end</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">in</span><br/>     <span class=\"br0\">{</span>Label set<span class=\"br0\">(</span>text:<span class=\"st0\">\"x: \"</span><span class=\"sy0\">#</span><span class=\"br0\">(</span>Winfo<span class=\"sy0\">.</span>pointerx <span class=\"sy0\">-</span> Winfo<span class=\"sy0\">.</span>rootx<span class=\"br0\">)</span><br/>\t\t<span class=\"sy0\">#</span><span class=\"st0\">\", y: \"</span><span class=\"sy0\">#</span><span class=\"br0\">(</span>Winfo<span class=\"sy0\">.</span>pointery <span class=\"sy0\">-</span> Winfo<span class=\"sy0\">.</span>rooty<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>     <span class=\"br0\">{</span>Delay 250<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span></pre>"}, {"lang": "Perl", "loc": 14, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> SDL<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> SDL<span class=\"sy0\">::</span><span class=\"me2\">Events</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> SDLx<span class=\"sy0\">::</span><span class=\"me2\">App</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$app</span> <span class=\"sy0\">=</span> SDLx<span class=\"sy0\">::</span><span class=\"me2\">App</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$app</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">add_event_handler</span><span class=\"br0\">(</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">my</span> <span class=\"re0\">$event</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span><span class=\"br0\">(</span> <span class=\"re0\">$event</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">type</span> <span class=\"sy0\">==</span> SDL_MOUSEMOTION <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://perldoc.perl.org/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span> <span class=\"st0\">\"x=%d y=%d<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$event</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">motion_x</span><span class=\"sy0\">,</span> <span class=\"re0\">$event</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">motion_y</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"re0\">$app</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">stop</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"re0\">$app</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">run</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "Perl 6", "loc": 5, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">use</span> java<span class=\"sy0\">::</span><span class=\"me2\">awt</span><span class=\"sy0\">::</span><span class=\"me2\">MouseInfo</span><span class=\"sy0\">:</span>from<span class=\"sy0\">&lt;</span>java<span class=\"sy0\">&gt;;</span><br/>\u00a0<br/><span class=\"kw1\">given</span> MouseInfo<span class=\"sy0\">.</span><span class=\"me1\">getPointerInfo</span><span class=\"sy0\">.</span><span class=\"me1\">getLocation</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">say</span> <span class=\"sy0\">.</span><span class=\"me1\">getX</span><span class=\"sy0\">,</span> <span class=\"st_h\">'x'</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"me1\">getY</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 66, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\Mouse_position.exw<br/>--<br/>include pGUI.e<br/>\u00a0<br/>Ihandle global_lbl, canvas_lbl, timer_lbl<br/>\u00a0<br/>function globalmotion_cb(integer x, integer y, atom /*pStatus*/)<br/>    IupSetStrAttribute(global_lbl,\"TITLE\",\"globalmotion_cb\u00a0%d,\u00a0%d\",{x,y})<br/>    return IUP_DEFAULT<br/>end function<br/>\u00a0<br/>function canvas_motion_cb(Ihandle /*canvas*/, integer x, integer y, atom pStatus)<br/>    IupSetStrAttribute(canvas_lbl,\"TITLE\",\"canvasmotion_cb\u00a0%d,\u00a0%d\",{x,y})<br/>    return IUP_DEFAULT;<br/>end function<br/>\u00a0<br/>function OnTimer(Ihandle /*ih*/)<br/>    integer {x,y} = IupGetIntInt(NULL,\"CURSORPOS\")<br/>    IupSetStrAttribute(timer_lbl,\"TITLE\",\"timer\u00a0%d,\u00a0%d\",{x,y})<br/>    return IUP_IGNORE<br/>end function<br/>\u00a0<br/>function esc_close(Ihandle /*ih*/, atom c)<br/>    return iff(c=K_ESC?IUP_CLOSE:IUP_CONTINUE)<br/>end function<br/>\u00a0<br/>procedure main()<br/>Ihandle separator1, separator2, <br/>        canvas, frame_1, frame_2, <br/>        dialog<br/>\u00a0<br/>    IupOpen()<br/>\u00a0<br/>    global_lbl = IupLabel(\"Move the mouse anywhere on the window\",\"EXPAND=HORIZONTAL\")<br/>    separator1 = IupLabel(NULL,\"SEPARATOR=HORIZONTAL\")<br/>    canvas_lbl = IupLabel(\"Move the mouse anywhere on the canvas\",\"EXPAND=HORIZONTAL\")<br/>    separator2 = IupLabel(NULL,\"SEPARATOR=HORIZONTAL\")<br/>    timer_lbl  = IupLabel(\"This one runs on a three second timer\",\"EXPAND=HORIZONTAL\")<br/>\u00a0<br/>    frame_1 = IupFrame(IupVbox({global_lbl,<br/>                                separator1,<br/>                                canvas_lbl,<br/>                                separator2,<br/>                                timer_lbl}),<br/>                      \"TITLE=IupLabel, SIZE=200x\")<br/>\u00a0<br/>    canvas = IupCanvas(\"MOTION_CB\", Icallback(\"canvas_motion_cb\"),<br/>                       \"EXPAND=HORIZONTAL, RASTERSIZE=200x200\")<br/>    frame_2 = IupFrame(canvas, \"TITLE=IupCanvas\")<br/>\u00a0<br/>    dialog = IupDialog(IupHbox({frame_1,frame_2}, \"MARGIN=5x5, GAP=5\"))<br/>    IupSetAttribute(dialog,\"TITLE\",\"Mouse motion\");<br/>    IupSetCallback(dialog, \"K_ANY\", Icallback(\"esc_close\"));<br/>\u00a0<br/>    IupSetGlobal(\"INPUTCALLBACKS\", \"Yes\");<br/>    IupSetGlobalFunction(\"GLOBALMOTION_CB\", Icallback(\"globalmotion_cb\"));<br/>\u00a0<br/>    Ihandle hTimer = IupTimer(Icallback(\"OnTimer\"), 3000)<br/>\u00a0<br/>    IupShow(dialog)<br/>\u00a0<br/>    IupMainLoop()<br/>    IupClose()<br/>end procedure<br/>main()</pre>"}, {"lang": "PicoLisp", "loc": 12, "block": "<pre class=\"text highlighted_source\">(de mousePosition ()<br/>   (prog2<br/>      (prin \"^[[?9h\")  # Mouse reporting on<br/>      (and<br/>         (= \"^[\" (key))<br/>         (key 200)<br/>         (key 200)<br/>         (key)<br/>         (cons<br/>            (- (char (key)) 32)<br/>            (- (char (key)) 32) ) )<br/>      (prin \"^[[?9l\") ) )  # Mouse reporting off</pre>"}, {"lang": "PureBasic", "loc": 2, "block": "<pre class=\"purebasic highlighted_source\">x <span class=\"sy0\">=</span> <span class=\"kw2\">WindowMouseX</span><span class=\"br0\">(</span>#MyWindow<span class=\"br0\">)</span><br/>y <span class=\"sy0\">=</span> <span class=\"kw2\">WindowMouseY</span><span class=\"br0\">(</span>#MyWindow<span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 21, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"kw1\">import</span> <span class=\"kw3\">Tkinter</span> <span class=\"kw1\">as</span> tk<br/>\u00a0<br/><span class=\"kw1\">def</span> showxy<span class=\"br0\">(</span>event<span class=\"br0\">)</span>:<br/>    xm<span class=\"sy0\">,</span> ym <span class=\"sy0\">=</span> event.<span class=\"me1\">x</span><span class=\"sy0\">,</span> event.<span class=\"me1\">y</span><br/>    str1 <span class=\"sy0\">=</span> <span class=\"st0\">\"mouse at x=%d  y=%d\"</span>\u00a0% <span class=\"br0\">(</span>xm<span class=\"sy0\">,</span> ym<span class=\"br0\">)</span><br/>    <span class=\"co1\"># show cordinates in title</span><br/>    root.<span class=\"me1\">title</span><span class=\"br0\">(</span>str1<span class=\"br0\">)</span><br/>    <span class=\"co1\"># switch color to red if mouse enters a set location range</span><br/>    x<span class=\"sy0\">,</span>y<span class=\"sy0\">,</span> delta <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><br/>    frame.<span class=\"me1\">config</span><span class=\"br0\">(</span>bg<span class=\"sy0\">=</span><span class=\"st0\">'red'</span><br/>                 <span class=\"kw1\">if</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span>xm - x<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> delta <span class=\"kw1\">and</span> <span class=\"kw2\">abs</span><span class=\"br0\">(</span>ym - y<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> delta<br/>                 <span class=\"kw1\">else</span> <span class=\"st0\">'yellow'</span><span class=\"br0\">)</span><br/>\u00a0<br/>root <span class=\"sy0\">=</span> tk.<span class=\"me1\">Tk</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>frame <span class=\"sy0\">=</span> tk.<span class=\"me1\">Frame</span><span class=\"br0\">(</span>root<span class=\"sy0\">,</span> bg<span class=\"sy0\">=</span> <span class=\"st0\">'yellow'</span><span class=\"sy0\">,</span> width<span class=\"sy0\">=</span><span class=\"nu0\">300</span><span class=\"sy0\">,</span> height<span class=\"sy0\">=</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><br/>frame.<span class=\"me1\">bind</span><span class=\"br0\">(</span><span class=\"st0\">\"&lt;Motion&gt;\"</span><span class=\"sy0\">,</span> showxy<span class=\"br0\">)</span><br/>frame.<span class=\"me1\">pack</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>root.<span class=\"me1\">mainloop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 5, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">awt</span>.<span class=\"me1\">MouseInfo</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> MousePosition <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> mouseLocation <span class=\"sy0\">=</span> MouseInfo.<span class=\"me1\">getPointerInfo</span>.<span class=\"me1\">getLocation</span><br/>  println <span class=\"br0\">(</span>mouseLocation<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Racket", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket/gui<br/>(define-values [point _] (get-current-mouse-state))<br/>(send point get-x)<br/>(send point get-y)<br/>\u00a0</pre>"}, {"lang": "Retro", "loc": 2, "block": "<pre class=\"text highlighted_source\">needs canvas'<br/>^canvas'mouse</pre>"}, {"lang": "Ring", "loc": 64, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Load \"guilib.ring\"<br/>\u00a0<br/>lPress = false<br/>nX = 0<br/>nY = 0<br/>\u00a0<br/>new qApp {<br/>\u00a0<br/>        win1 = new qWidget()<br/>        {<br/>\u00a0<br/>                setWindowTitle(\"Move this label!\")<br/>                setGeometry(100,100,400,400)<br/>                setstylesheet(\"background-color:white;\")<br/>\u00a0<br/>                Label1 = new qLabel(Win1){<br/>                        setGeometry(100,100,200,50)<br/>                        setText(\"Welcome\")<br/>                        setstylesheet(\"font-size: 30pt\")<br/>                        myfilter = new qallevents(label1)<br/>                        myfilter.setEnterevent(\"pEnter()\")<br/>                        myfilter.setLeaveevent(\"pLeave()\")<br/>                        myfilter.setMouseButtonPressEvent(\"pPress()\")<br/>                        myfilter.setMouseButtonReleaseEvent(\"pRelease()\")                                                               myfilter.setMouseMoveEvent(\"pMove()\")<br/>                        installeventfilter(myfilter)<br/>                }<br/>\u00a0<br/>                show()<br/>        }<br/>\u00a0<br/>        exec()<br/>}<br/>\u00a0<br/>Func pEnter<br/>        Label1.setStyleSheet(\"background-color: purple; color:white;font-size: 30pt;\")<br/>\u00a0<br/>Func pLeave<br/>        Label1.setStyleSheet(\"background-color: white; color:black;font-size: 30pt;\")<br/>\u00a0<br/>Func pPress<br/>        lPress = True<br/>        nX = myfilter.getglobalx()<br/>        ny = myfilter.getglobaly()<br/>\u00a0<br/>Func pRelease<br/>        lPress = False<br/>        pEnter()<br/>\u00a0<br/>Func pMove<br/>        nX2 = myfilter.getglobalx()<br/>        ny2 = myfilter.getglobaly()<br/>        ndiffx = nX2 - nX<br/>        ndiffy = nY2 - nY<br/>        if lPress<br/>                Label1 {<br/>                        move(x()+ndiffx,y()+ndiffy)<br/>                        setStyleSheet(\"background-color: Green;<br/>                                 color:white;font-size: 30pt;\")<br/>                        nX = nX2<br/>                        ny = nY2<br/>                }<br/>        ok<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 7, "block": "<pre class=\"ruby highlighted_source\">Shoes.<span class=\"me1\">app</span><span class=\"br0\">(</span><span class=\"re3\">:title</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Mouse Position\"</span>, <span class=\"re3\">:width</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">400</span>, <span class=\"re3\">:height</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">400</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span><br/>  <span class=\"re1\">@position</span> = para <span class=\"st0\">\"Position\u00a0:\u00a0?,\u00a0?\"</span>, <span class=\"re3\">:size</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">12</span>, <span class=\"re3\">:margin</span> <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">10</span><br/>\u00a0<br/>  motion <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>x, y<span class=\"sy0\">|</span><br/>    <span class=\"re1\">@position</span>.<span class=\"me1\">text</span> = <span class=\"st0\">\"Position\u00a0: #{x}, #{y}\"</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Rust", "loc": 37, "block": "<pre class=\"text highlighted_source\">// rustc 0.9 (7613b15 2014-01-08 18:04:43 -0800)<br/>\u00a0<br/>use std::libc::{BOOL, HANDLE, LONG};<br/>use std::ptr::mut_null;<br/>\u00a0<br/>type HWND = HANDLE;<br/>\u00a0<br/>#[deriving(Eq)]<br/>struct POINT {<br/>    x: LONG,<br/>    y: LONG<br/>}<br/>\u00a0<br/>#[link_name = \"user32\"]<br/>extern \"system\" {<br/>    fn GetCursorPos(lpPoint:&amp;mut POINT) -&gt; BOOL;<br/>    fn GetForegroundWindow() -&gt; HWND;<br/>    fn ScreenToClient(hWnd:HWND, lpPoint:&amp;mut POINT);<br/>}<br/>\u00a0<br/>fn main() {<br/>    let mut pt = POINT{x:0, y:0};<br/>    loop {<br/>        std::io::timer::sleep(100); // sleep duration in milliseconds<br/>\u00a0<br/>        let pt_prev = pt;<br/>        unsafe { GetCursorPos(&amp;mut pt) };<br/>        if pt\u00a0!= pt_prev {<br/>            let h = unsafe { GetForegroundWindow() };<br/>            if h == mut_null() { continue }<br/>\u00a0<br/>            let mut pt_client = pt;<br/>            unsafe { ScreenToClient(h, &amp;mut pt_client) };<br/>            println!(\"x: {}, y: {}\", pt_client.x, pt_client.y);<br/>        }<br/>    }<br/>}</pre>"}, {"lang": "Seed7", "loc": 2, "block": "<pre class=\"text highlighted_source\">xPos\u00a0:= pointerXPos(curr_win);<br/>yPos\u00a0:= pointerYPos(curr_win);</pre>"}, {"lang": "Smalltalk", "loc": 3, "block": "<pre class=\"smalltalk highlighted_source\">\u00a0<br/><span class=\"re0\">World</span> activeHand position. <span class=\"coMULTI\">\" (<a class=\"__cf_email__\" data-cfemail=\"8ab9b3becabcbeb3a4ba\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>)\"</span><br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 6, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tk <span class=\"nu0\">8.5</span><br/><span class=\"kw1\">set</span> curWindow <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"br0\">[</span>wm stackorder .<span class=\"br0\">]</span> end<span class=\"br0\">]</span><br/><span class=\"co1\"># Everything below will work with anything from Tk 8.0 onwards</span><br/><span class=\"kw1\">set</span> x <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>winfo pointerx .<span class=\"br0\">]</span> - <span class=\"br0\">[</span>winfo rootx <span class=\"re0\">$curWindow</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> y <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"br0\">[</span>winfo pointery .<span class=\"br0\">]</span> - <span class=\"br0\">[</span>winfo rooty <span class=\"re0\">$curWindow</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>tk_messageBox -message <span class=\"st0\">\"the mouse is at ($x,$y) in window $curWindow\"</span></pre>"}, {"lang": "Visual Basic", "loc": 5, "block": "<pre class=\"vb highlighted_source\"><span class=\"kw2\">Private</span> <span class=\"kw2\">Sub</span> Form_MouseMove(Button <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, Shift <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span>, X <span class=\"kw4\">As</span> <span class=\"kw1\">Single</span>, Y <span class=\"kw4\">As</span> <span class=\"kw1\">Single</span>)<br/>    <span class=\"co1\">'X and Y are in \"twips\" -- 15 twips per pixel<br/></span>    Me.<span class=\"kw4\">Print</span> <span class=\"st0\">\"X:\"</span> &amp; X<br/>    Me.<span class=\"kw4\">Print</span> <span class=\"st0\">\"Y:\"</span> &amp; Y<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span></pre>"}, {"lang": "XPL0", "loc": 6, "block": "<pre class=\"text highlighted_source\">include c:\\cxpl\\stdlib;<br/>if not OpenMouse then Text(0, \"A mouse is required\")<br/>else [ShowMouse(true);<br/>      IntOut(0, GetMousePosition(0));  ChOut(0, ^,);<br/>      IntOut(0, GetMousePosition(1));  CrLf(0);<br/>     ]</pre>"}]}