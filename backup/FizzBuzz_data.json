{"task": "FizzBuzz", "blocks": [{"lang": "360 Assembly", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>with: n<br/>\u00a0<br/>: num?  \\ n f --   ) <br/>\tif drop else . then\u00a0;<br/>\u00a0<br/>\\ is m mod n 0? leave the result twice on the stack<br/>: div? \\ m n -- f f<br/>\tmod 0 = dup\u00a0;<br/>\u00a0<br/>: fizz? \\ n -- n f<br/>\tdup 3 <br/>\tdiv? if \"Fizz\" .  then\u00a0;<br/>\u00a0<br/>: buzz? \\ n f -- n f<br/>\tover 5 <br/>\tdiv? if \"Buzz\" .  then or\u00a0;<br/>\u00a0<br/>\\ print a message as appropriate for the given number:<br/>: fizzbuzz  \\ n --<br/>\tfizz? buzz? num? <br/>\tspace\u00a0;<br/>\u00a0<br/>\\ iterate from 1 to 100:<br/>' fizzbuzz 1 100 loop <br/>cr bye<br/>\u00a0</pre>"}, {"lang": "6502 Assembly", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>with: n<br/>\u00a0<br/>: num?  \\ n f --   ) <br/>\tif drop else . then\u00a0;<br/>\u00a0<br/>\\ is m mod n 0? leave the result twice on the stack<br/>: div? \\ m n -- f f<br/>\tmod 0 = dup\u00a0;<br/>\u00a0<br/>: fizz? \\ n -- n f<br/>\tdup 3 <br/>\tdiv? if \"Fizz\" .  then\u00a0;<br/>\u00a0<br/>: buzz? \\ n f -- n f<br/>\tover 5 <br/>\tdiv? if \"Buzz\" .  then or\u00a0;<br/>\u00a0<br/>\\ print a message as appropriate for the given number:<br/>: fizzbuzz  \\ n --<br/>\tfizz? buzz? num? <br/>\tspace\u00a0;<br/>\u00a0<br/>\\ iterate from 1 to 100:<br/>' fizzbuzz 1 100 loop <br/>cr bye<br/>\u00a0</pre>"}, {"lang": "68000 Assembly", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>with: n<br/>\u00a0<br/>: num?  \\ n f --   ) <br/>\tif drop else . then\u00a0;<br/>\u00a0<br/>\\ is m mod n 0? leave the result twice on the stack<br/>: div? \\ m n -- f f<br/>\tmod 0 = dup\u00a0;<br/>\u00a0<br/>: fizz? \\ n -- n f<br/>\tdup 3 <br/>\tdiv? if \"Fizz\" .  then\u00a0;<br/>\u00a0<br/>: buzz? \\ n f -- n f<br/>\tover 5 <br/>\tdiv? if \"Buzz\" .  then or\u00a0;<br/>\u00a0<br/>\\ print a message as appropriate for the given number:<br/>: fizzbuzz  \\ n --<br/>\tfizz? buzz? num? <br/>\tspace\u00a0;<br/>\u00a0<br/>\\ iterate from 1 to 100:<br/>' fizzbuzz 1 100 loop <br/>cr bye<br/>\u00a0</pre>"}, {"lang": "8086 Assembly", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>with: n<br/>\u00a0<br/>: num?  \\ n f --   ) <br/>\tif drop else . then\u00a0;<br/>\u00a0<br/>\\ is m mod n 0? leave the result twice on the stack<br/>: div? \\ m n -- f f<br/>\tmod 0 = dup\u00a0;<br/>\u00a0<br/>: fizz? \\ n -- n f<br/>\tdup 3 <br/>\tdiv? if \"Fizz\" .  then\u00a0;<br/>\u00a0<br/>: buzz? \\ n f -- n f<br/>\tover 5 <br/>\tdiv? if \"Buzz\" .  then or\u00a0;<br/>\u00a0<br/>\\ print a message as appropriate for the given number:<br/>: fizzbuzz  \\ n --<br/>\tfizz? buzz? num? <br/>\tspace\u00a0;<br/>\u00a0<br/>\\ iterate from 1 to 100:<br/>' fizzbuzz 1 100 loop <br/>cr bye<br/>\u00a0</pre>"}, {"lang": "8th", "loc": 27, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>with: n<br/>\u00a0<br/>: num?  \\ n f --   ) <br/>\tif drop else . then\u00a0;<br/>\u00a0<br/>\\ is m mod n 0? leave the result twice on the stack<br/>: div? \\ m n -- f f<br/>\tmod 0 = dup\u00a0;<br/>\u00a0<br/>: fizz? \\ n -- n f<br/>\tdup 3 <br/>\tdiv? if \"Fizz\" .  then\u00a0;<br/>\u00a0<br/>: buzz? \\ n f -- n f<br/>\tover 5 <br/>\tdiv? if \"Buzz\" .  then or\u00a0;<br/>\u00a0<br/>\\ print a message as appropriate for the given number:<br/>: fizzbuzz  \\ n --<br/>\tfizz? buzz? num? <br/>\tspace\u00a0;<br/>\u00a0<br/>\\ iterate from 1 to 100:<br/>' fizzbuzz 1 100 loop <br/>cr bye<br/>\u00a0</pre>"}, {"lang": "ABAP", "loc": 13, "block": "<pre class=\"abap highlighted_source\"><a href=\"http://help.sap.com/abapdocu/en/ABAPDATA.htm\"><span class=\"kw2\">DATA</span></a><span class=\"sy0\">:</span> <span class=\"kw4\">tab</span> <span class=\"kw4\">TYPE</span> <span class=\"kw9\"><span class=\"kw4\">TABLE</span> OF</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw4\">tab</span> <span class=\"sy1\">=</span> <span class=\"kw4\">VALUE</span> #<span class=\"br0\">(</span><br/>  <span class=\"kw4\">FOR</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <a href=\"http://help.sap.com/abapdocu/en/ABAPWHILE.htm\"><span class=\"kw1\">WHILE</span></a> i <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">100</span> <span class=\"br0\">(</span><br/>    COND <span class=\"kw4\">string</span><span class=\"br0\">(</span> LET r3 <span class=\"sy1\">=</span> i <span class=\"kw4\">MOD</span> <span class=\"nu0\">3</span><br/>                     r5 <span class=\"sy1\">=</span> i <span class=\"kw4\">MOD</span> <span class=\"nu0\">5</span> <span class=\"kw4\">IN</span><br/>                 <a href=\"http://help.sap.com/abapdocu/en/ABAPWHEN.htm\"><span class=\"kw1\">WHEN</span></a> r3 <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw4\">AND</span> r5 <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw4\">THEN</span> |FIZZBUZZ|<br/>                 <a href=\"http://help.sap.com/abapdocu/en/ABAPWHEN.htm\"><span class=\"kw1\">WHEN</span></a> r3 <span class=\"sy1\">=</span> <span class=\"nu0\">0</span>            <span class=\"kw4\">THEN</span> |FIZZ|<br/>                 <a href=\"http://help.sap.com/abapdocu/en/ABAPWHEN.htm\"><span class=\"kw1\">WHEN</span></a> r5 <span class=\"sy1\">=</span> <span class=\"nu0\">0</span>            <span class=\"kw4\">THEN</span> |BUZZ|<br/>                 <a href=\"http://help.sap.com/abapdocu/en/ABAPELSE.htm\"><span class=\"kw1\">ELSE</span></a> i <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>cl_demo_output<span class=\"sy0\">=&gt;</span><a href=\"http://help.sap.com/abapdocu/en/ABAPWRITE.htm\"><span class=\"kw3\">write</span></a><span class=\"br0\">(</span> <span class=\"kw4\">tab</span> <span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>cl_demo_output<span class=\"sy0\">=&gt;</span><span class=\"me2\">display</span><span class=\"br0\">(</span> <span class=\"br0\">)</span><span class=\"sy0\">.</span></pre>"}, {"lang": "ACL2", "loc": 12, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> fizzbuzz-r <span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>declare <span class=\"br0\">(</span>xargs <span class=\"sy0\">:</span><span class=\"me1\">measure</span> <span class=\"br0\">(</span>nfix <span class=\"br0\">(</span>- <span class=\"nu0\">100</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span><span class=\"kw1\">prog2</span>$<br/>    <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>mod i <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>cw <span class=\"st0\">\"FizzBuzz~%\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>mod i <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>cw <span class=\"st0\">\"Buzz~%\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>mod i <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>cw <span class=\"st0\">\"Fizz~%\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>t <span class=\"br0\">(</span>cw <span class=\"st0\">\"~x0~%\"</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>zp <span class=\"br0\">(</span>- <span class=\"nu0\">100</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">nil</span><br/>        <span class=\"br0\">(</span>fizzbuzz-r <span class=\"br0\">(</span><span class=\"nu0\">1</span>+ i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> fizzbuzz <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>fizzbuzz-r <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "ActionScript", "loc": 10, "block": "<pre class=\"actionscript highlighted_source\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw2\">var</span> i:<span class=\"kw3\">int</span> = <span class=\"nu0\">1</span>; i <span class=\"sy0\">&lt;</span>= <span class=\"nu0\">100</span>; i++<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">trace</span><span class=\"br0\">(</span><span class=\"st0\">'FizzBuzz'</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">trace</span><span class=\"br0\">(</span><span class=\"st0\">'Buzz'</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">trace</span><span class=\"br0\">(</span><span class=\"st0\">'Fizz'</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">trace</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/><span class=\"br0\">}</span></pre>"}, {"lang": "Ada", "loc": 16, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> Fizzbuzz <span class=\"kw1\">is</span><br/><span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">for</span> I <span class=\"kw3\">in</span> <span class=\"nu0\">1</span>..<span class=\"nu0\">100</span> <span class=\"kw1\">loop</span><br/>      <span class=\"kw1\">if</span> I <span class=\"kw2\">mod</span> <span class=\"nu0\">15</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">elsif</span> I <span class=\"kw2\">mod</span> <span class=\"nu0\">5</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">elsif</span> I <span class=\"kw2\">mod</span> <span class=\"nu0\">3</span> = <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>         Put_Line<span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">else</span><br/>         Put_Line<span class=\"br0\">(</span>Integer'Image<span class=\"br0\">(</span>I<span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span>;<br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">loop</span>;<br/><span class=\"kw1\">end</span> Fizzbuzz;</pre>"}, {"lang": "ALGOL 68", "loc": 15, "block": "<pre class=\"algol68 highlighted_source\">main<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>  <span class=\"kw2\">FOR</span> i <span class=\"kw2\">TO</span> 100 <span class=\"kw2\">DO</span><br/>    <span class=\"kw22\">printf</span><span class=\"br0\">(</span><span class=\"br0\">(</span>$gl$<span class=\"sy1\">,</span><br/>      <span class=\"kw2\">IF</span> i <span class=\"sy1\">%*</span> 15 <span class=\"sy1\">=</span> 0 <span class=\"kw2\">THEN</span><br/>        <span class=\"st0\">\"FizzBuzz\"</span><br/>      <span class=\"kw2\">ELIF</span> i <span class=\"sy1\">%*</span> 3 <span class=\"sy1\">=</span> 0 <span class=\"kw2\">THEN</span><br/>        <span class=\"st0\">\"Fizz\"</span><br/>      <span class=\"kw2\">ELIF</span> i <span class=\"sy1\">%*</span> 5 <span class=\"sy1\">=</span> 0 <span class=\"kw2\">THEN</span><br/>        <span class=\"st0\">\"Buzz\"</span><br/>      <span class=\"kw2\">ELSE</span><br/>        i<br/>      <span class=\"kw2\">FI</span><br/>    <span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"kw2\">OD</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "ALGOL W", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>begin<br/>    i_w\u00a0:= 1;\u00a0% set integers to print in minimum space\u00a0%<br/>    for i\u00a0:= 1 until 100 do begin<br/>        if      i rem 15 = 0 then write( \"FizzBuzz\" )<br/>        else if i rem  5 = 0 then write( \"Buzz\" )<br/>        else if i rem  3 = 0 then write( \"Fizz\" )<br/>        else                      write( i )<br/>    end for_i<br/>end.</pre>"}, {"lang": "AntLang", "loc": 3, "block": "<pre class=\"text highlighted_source\">n:{1+ x}map range[100]<br/>s:{a:0eq x mod 3;b:0eq x mod 5;concat apply{1elem x}map{0elem x}hfilter seq[1- max[a;b];a;b]merge seq[str[x];\"Fizz\";\"Buzz\"]}map n<br/>echo map s</pre>"}, {"lang": "APEX", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>for(integer i=1; i &lt;= 100; i++){<br/>    String output = '';<br/>    if(math.mod(i, 3) == 0) output += 'Fizz';<br/>    if(math.mod(i, 5) == 0) output += 'Buzz';<br/>    if(output\u00a0!= ''){<br/>        System.debug(output);<br/>    } else {<br/>        System.debug(i);<br/>    }<br/>}<br/>\u00a0</pre>"}, {"lang": "APL", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u2395IO\u21900<br/>(L,'Fizz' 'Buzz' 'FizzBuzz')[\u00af1+(L\u00d7W=0)+W\u2190(100\u00d7~0=W)+W\u2190\u2283+/1 2\u00d70=3 5|\u2282L\u21901+\u2373100]<br/>\u00a0</pre>"}, {"lang": "AppleScript", "loc": 14, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw3\">property</span> outputText: <span class=\"st0\">\"\"</span><br/><span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> <span class=\"nu0\">100</span><br/>  <span class=\"kw3\">if</span> i <span class=\"kw2\">mod</span> <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>    <span class=\"kw3\">set</span> outputText <span class=\"kw3\">to</span> outputText <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw3\">if</span> i <span class=\"kw2\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>    <span class=\"kw3\">set</span> outputText <span class=\"kw3\">to</span> outputText <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"Fizz\"</span><br/>  <span class=\"kw3\">else</span> <span class=\"kw3\">if</span> i <span class=\"kw2\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>    <span class=\"kw3\">set</span> outputText <span class=\"kw3\">to</span> outputText <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"Buzz\"</span><br/>  <span class=\"kw3\">else</span><br/>    <span class=\"kw3\">set</span> outputText <span class=\"kw3\">to</span> outputText <span class=\"sy0\">&amp;</span> i<br/>  <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/>  <span class=\"kw3\">set</span> outputText <span class=\"kw3\">to</span> outputText <span class=\"sy0\">&amp;</span> linefeed<br/><span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>outputText</pre>"}, {"lang": "Applesoft BASIC", "loc": 15, "block": "<pre class=\"text highlighted_source\">fizzbuzz():<br/>  for x in [1..100]<br/>    if x%5==0 and x%3==0<br/>      return \"FizzBuzz\"<br/>    else<br/>      if x%3==0<br/>        return \"Fizz\"<br/>      else<br/>        if x%5==0<br/>          return \"Buzz\"<br/>        else<br/>           return x<br/>\u00a0<br/>main():<br/>  fizzbuzz() -&gt; io</pre>"}, {"lang": "Arbre", "loc": 15, "block": "<pre class=\"text highlighted_source\">fizzbuzz():<br/>  for x in [1..100]<br/>    if x%5==0 and x%3==0<br/>      return \"FizzBuzz\"<br/>    else<br/>      if x%3==0<br/>        return \"Fizz\"<br/>      else<br/>        if x%5==0<br/>          return \"Buzz\"<br/>        else<br/>           return x<br/>\u00a0<br/>main():<br/>  fizzbuzz() -&gt; io</pre>"}, {"lang": "Arc", "loc": 6, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>for n <span class=\"nu0\">1</span> <span class=\"nu0\">100</span><br/>  <span class=\"br0\">(</span>prn<span class=\"sy0\">:</span><span class=\"kw1\">if</span><br/>    <span class=\"br0\">(</span>multiple n <span class=\"nu0\">15</span><span class=\"br0\">)</span> 'FizzBuzz<br/>    <span class=\"br0\">(</span>multiple n <span class=\"nu0\">5</span><span class=\"br0\">)</span> 'Buzz<br/>    <span class=\"br0\">(</span>multiple n <span class=\"nu0\">3</span><span class=\"br0\">)</span> 'Fizz<br/>    n<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "ARM Assembly", "loc": 121, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/ * linux GAS */<br/>\u00a0<br/>.global _start<br/>\u00a0<br/>.data<br/>\u00a0<br/>Fizz: .ascii \"Fizz\\n\"<br/>Buzz: .ascii \"Buzz\\n\"<br/>FizzAndBuzz: .ascii \"FizzBuzz\\n\"<br/>\u00a0<br/>numstr_buffer: .skip 3<br/>newLine: .ascii \"\\n\"<br/>\u00a0<br/>.text<br/>\u00a0<br/>_start:<br/>\u00a0<br/>  bl FizzBuzz<br/>\u00a0<br/>  mov r7, #1<br/>  mov r0, #0<br/>  svc #0<br/>\u00a0<br/>FizzBuzz:<br/>\u00a0<br/>  push {lr}<br/>  mov r9, #100<br/>\u00a0<br/>  fizzbuzz_loop:<br/>\u00a0<br/>    mov r0, r9<br/>    mov r1, #15<br/>    bl divide<br/>    cmp r1, #0<br/>    ldreq r1, =FizzAndBuzz<br/>    moveq r2, #9<br/>    beq fizzbuzz_print<br/>\u00a0<br/>    mov r0, r9<br/>    mov r1, #3<br/>    bl divide<br/>    cmp r1, #0<br/>    ldreq r1, =Fizz<br/>    moveq r2, #5<br/>    beq fizzbuzz_print<br/>\u00a0<br/>    mov r0, r9<br/>    mov r1, #5<br/>    bl divide<br/>    cmp r1, #0<br/>    ldreq r1, =Buzz<br/>    moveq r2, #5<br/>    beq fizzbuzz_print<br/>\u00a0<br/>    mov r0, r9<br/>    bl make_num<br/>    mov r2, r1<br/>    mov r1, r0<br/>\u00a0<br/>    fizzbuzz_print:<br/>\u00a0<br/>      mov r0, #1<br/>      mov r7, #4<br/>      svc #0<br/>\u00a0<br/>      sub r9, #1<br/>      cmp r9, #0<br/>\u00a0<br/>    bgt fizzbuzz_loop<br/>\u00a0<br/>  pop {lr}<br/>  mov pc, lr<br/>\u00a0<br/>make_num:<br/>\u00a0<br/>  push {lr}<br/>  ldr r4, =numstr_buffer<br/>  mov r5, #4<br/>  mov r6, #1<br/>\u00a0<br/>  mov r1, #100<br/>  bl divide<br/>\u00a0<br/>  cmp r0, #0<br/>  subeq r5, #1<br/>  movne r6, #0<br/>\u00a0<br/>  add r0, #48<br/>  strb r0, [r4, #0]<br/>\u00a0<br/>  mov r0, r1<br/>  mov r1, #10<br/>  bl divide<br/>\u00a0<br/>  cmp r0, #0<br/>  movne r6, #0<br/>  cmp r6, #1<br/>  subeq r5, #1<br/>\u00a0<br/>  add r0, #48<br/>  strb r0, [r4, #1]<br/>\u00a0<br/>  add r1, #48<br/>  strb r1, [r4, #2]<br/>\u00a0<br/>  mov r2, #4<br/>  sub r0, r2, r5<br/>  add r0, r4, r0<br/>  mov r1, r5<br/>\u00a0<br/>  pop {lr}<br/>  mov pc, lr<br/>\u00a0<br/>divide:<br/>  udiv r2, r0, r1<br/>  mul r3, r1, r2<br/>  sub r1, r0, r3<br/>  mov r0, r2<br/>  mov pc, lr<br/>\u00a0</pre>"}, {"lang": "AsciiDots", "loc": 18, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>.-#1--\\<br/>      |<br/>      v---------------------------------\" \"_$-\\<br/>      |          /---#0----------\\            |<br/>      |  *-#1----~--$_\"buzz\"-----v            |<br/>      |  |       |               |            |<br/>      |  *-#5---[%]              |            |<br/>      |  |    /--/               |            |<br/>      |  |    |  /---#0------\\   |            |<br/>      |  *-#1-+--~--$_\"fizz\"-v   |            |<br/>      |  |    |  |           |   |            |<br/>      |  *-#3-+-[%]          |   |           [+]---\\<br/>      |  |    |  |           |   |   |        |    |<br/>      *--*----+--*---*-------+---+---~--$_#   *-#1-/<br/>      |       \\--/           \\--{+}--/        |<br/>      \\---------------------------------------/<br/>\u00a0</pre>"}, {"lang": "ATS", "loc": 18, "block": "<pre class=\"text highlighted_source\">#include \"share/atspre_staload.hats\"<br/>\u00a0<br/>implement main0() = loop(1, 100) where {<br/>  fun loop(from: int, to: int): void =<br/>    if from &gt; to then () else<br/>    let<br/>      val by3 = (from\u00a0% 3 = 0)<br/>      val by5 = (from\u00a0% 5 = 0)<br/>    in<br/>      case+ (by3, by5) of<br/>      | (true, true) =&gt; print_string(\"FizzBuzz\")<br/>      | (true, false) =&gt; print_string(\"Fizz\")<br/>      | (false, true) =&gt; print_string(\"Buzz\")<br/>      | (false, false) =&gt; print_int(from);<br/>      print_newline();<br/>      loop(from+1, to)<br/>    end<br/>}</pre>"}, {"lang": "AutoHotkey", "loc": 14, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Mod</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    output <span class=\"sy0\">.=</span> <span class=\"st0\">\"FizzBuzz`n\"</span><br/>  <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Mod</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    output <span class=\"sy0\">.=</span> <span class=\"st0\">\"Fizz`n\"</span><br/>  <span class=\"kw1\">Else</span> <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">Mod</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    output <span class=\"sy0\">.=</span> <span class=\"st0\">\"Buzz`n\"</span><br/>  <span class=\"kw1\">Else</span><br/>    output <span class=\"sy0\">.=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_Index\"><span class=\"kw2\">A_Index</span></a> <span class=\"st0\">\"`n\"</span><br/><span class=\"br0\">}</span><br/><a href=\"http://www.autohotkey.com/docs/commands/FileDelete.htm\"><span class=\"kw3\">FileDelete</span></a><span class=\"sy0\">,</span> output<span class=\"sy0\">.</span>txt<br/><a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,</span> <span class=\"re0\">%output%</span><span class=\"sy0\">,</span> output<span class=\"sy0\">.</span>txt<br/><a href=\"http://www.autohotkey.com/docs/commands/Run.htm\"><span class=\"kw3\">Run</span></a><span class=\"sy0\">,</span> cmd <span class=\"sy0\">/</span>k type output<span class=\"sy0\">.</span>txt</pre>"}, {"lang": "AutoIt", "loc": 11, "block": "<pre class=\"autoit highlighted_source\"><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">For</span></a> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">100</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">If</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/Mod.htm\"><span class=\"kw3\">Mod</span></a><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">ElseIf</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/Mod.htm\"><span class=\"kw3\">Mod</span></a><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">ElseIf</span></a> <a href=\"http://www.autoitscript.com/autoit3/docs/functions/Mod.htm\"><span class=\"kw3\">Mod</span></a><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Then</span></a><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Else</span></a><br/>\t\t<a href=\"http://www.autoitscript.com/autoit3/docs/functions/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$i</span><span class=\"br0\">)</span><br/>\t<a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">EndIf</span></a><br/><a href=\"http://www.autoitscript.com/autoit3/docs/keywords.htm\"><span class=\"kw1\">Next</span></a></pre>"}, {"lang": "AWK", "loc": 13, "block": "<pre class=\"text highlighted_source\">For(I,1,100)<br/>!If I^3??I^5<br/> Disp \"FIZZBUZZ\",i<br/>Else!If I^3<br/> Disp \"FIZZ\",i<br/>Else!If I^5<br/> Disp \"BUZZ\",i<br/>Else<br/> Disp I\u25b6Dec,i<br/>End<br/>.Pause to allow the user to actually read the output<br/>Pause 1000<br/>End</pre>"}, {"lang": "Axe", "loc": 13, "block": "<pre class=\"text highlighted_source\">For(I,1,100)<br/>!If I^3??I^5<br/> Disp \"FIZZBUZZ\",i<br/>Else!If I^3<br/> Disp \"FIZZ\",i<br/>Else!If I^5<br/> Disp \"BUZZ\",i<br/>Else<br/> Disp I\u25b6Dec,i<br/>End<br/>.Pause to allow the user to actually read the output<br/>Pause 1000<br/>End</pre>"}, {"lang": "Babel", "loc": 22, "block": "<pre class=\"text highlighted_source\">main: <br/>     { { iter 1 + dup<br/>\u00a0<br/>        15\u00a0%<br/>            { \"FizzBuzz\" &lt;&lt; <br/>                zap }<br/>            { dup<br/>            3\u00a0% <br/>                { \"Fizz\" &lt;&lt; <br/>                    zap }<br/>                { dup<br/>                5\u00a0% <br/>                    { \"Buzz\" &lt;&lt; <br/>                        zap}<br/>                    {\u00a0%d &lt;&lt; }<br/>                if }<br/>            if }<br/>        if<br/>\u00a0<br/>        \"\\n\" &lt;&lt; }<br/>\u00a0<br/>    100 times }</pre>"}, {"lang": "BaCon", "loc": 1, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>..<span class=\"nu0\">100</span><span class=\"br0\">}</span>; <span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> == <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st_h\">'FizzBuzz'</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> == <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st_h\">'Buzz'</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> == <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st_h\">'Fizz'</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"kw3\">echo</span> <span class=\"re1\">$n</span>; <span class=\"kw1\">done</span></pre>"}, {"lang": "bash", "loc": 1, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>..<span class=\"nu0\">100</span><span class=\"br0\">}</span>; <span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> == <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st_h\">'FizzBuzz'</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> == <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st_h\">'Buzz'</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"br0\">(</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> == <span class=\"nu0\">0</span> <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st_h\">'Fizz'</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"kw3\">echo</span> <span class=\"re1\">$n</span>; <span class=\"kw1\">done</span></pre>"}, {"lang": "BASIC", "loc": 25, "block": "<pre class=\"dos highlighted_source\"><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /L <span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,100<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">tester</span> <span class=\"sy0\">%%</span><span class=\"re3\">i</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">tester</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a test = <span class=\"sy0\">%</span><span class=\"re3\">1</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 15<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">test</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/neq.html\"><span class=\"kw2\">NEQ</span></a> 0 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">NotFizzBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> FizzBuzz<br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">NotFizzBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a test = <span class=\"sy0\">%</span><span class=\"re3\">1</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 5<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">test</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/neq.html\"><span class=\"kw2\">NEQ</span></a> 0 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">NotBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Buzz<br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">NotBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a test = <span class=\"sy0\">%</span><span class=\"re3\">1</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 3<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">test</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/neq.html\"><span class=\"kw2\">NEQ</span></a> 0 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">NotFizz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Fizz<br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">NotFizz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> <span class=\"sy0\">%</span><span class=\"re3\">1</span><br/>\u00a0</pre>"}, {"lang": "Batch File", "loc": 25, "block": "<pre class=\"dos highlighted_source\"><span class=\"sy0\">@</span><a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> off<br/><a href=\"http://www.ss64.com/nt/for.html\"><span class=\"kw1\">for</span></a> /L <span class=\"sy0\">%%</span><span class=\"re3\">i</span> <a href=\"http://www.ss64.com/nt/in.html\"><span class=\"kw1\">in</span></a> <span class=\"sy0\">(</span>1,1,100<span class=\"sy0\">)</span> <a href=\"http://www.ss64.com/nt/do.html\"><span class=\"kw1\">do</span></a> <a href=\"http://www.ss64.com/nt/call.html\"><span class=\"kw1\">call</span></a>\u00a0:<span class=\"re0\">tester</span> <span class=\"sy0\">%%</span><span class=\"re3\">i</span><br/><a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">tester</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a test = <span class=\"sy0\">%</span><span class=\"re3\">1</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 15<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">test</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/neq.html\"><span class=\"kw2\">NEQ</span></a> 0 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">NotFizzBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> FizzBuzz<br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">NotFizzBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a test = <span class=\"sy0\">%</span><span class=\"re3\">1</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 5<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">test</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/neq.html\"><span class=\"kw2\">NEQ</span></a> 0 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">NotBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Buzz<br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">NotBuzz</span><br/>  <a href=\"http://www.ss64.com/nt/set.html\"><span class=\"kw3\">set</span></a> /a test = <span class=\"sy0\">%</span><span class=\"re3\">1</span> <span class=\"sy0\">%</span><span class=\"sy0\">%</span> 3<br/>  <a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <span class=\"sy0\">%</span><span class=\"re3\">test</span><span class=\"sy0\">%</span> <a href=\"http://www.ss64.com/nt/neq.html\"><span class=\"kw2\">NEQ</span></a> 0 <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">NotFizz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> Fizz<br/>  <a href=\"http://www.ss64.com/nt/goto.html\"><span class=\"kw1\">goto</span></a>\u00a0:<span class=\"re0\">eof</span><br/>\u00a0<br/>:<span class=\"re0\">NotFizz</span><br/>  <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> <span class=\"sy0\">%</span><span class=\"re3\">1</span><br/>\u00a0</pre>"}, {"lang": "BBC BASIC", "loc": 9, "block": "<pre class=\"text highlighted_source\">for (i = 1; i &lt;= 100; i++) {<br/>\tw = 0<br/>\tif (i\u00a0% 3 == 0) { \"Fizz\"; w = 1; }<br/>\tif (i\u00a0% 5 == 0) { \"Buzz\"; w = 1; }<br/>\tif (w == 0) i<br/>\tif (w == 1) \"<br/>\"<br/>}<br/>quit</pre>"}, {"lang": "bc", "loc": 9, "block": "<pre class=\"text highlighted_source\">for (i = 1; i &lt;= 100; i++) {<br/>\tw = 0<br/>\tif (i\u00a0% 3 == 0) { \"Fizz\"; w = 1; }<br/>\tif (i\u00a0% 5 == 0) { \"Buzz\"; w = 1; }<br/>\tif (w == 0) i<br/>\tif (w == 1) \"<br/>\"<br/>}<br/>quit</pre>"}, {"lang": "beeswax", "loc": 4, "block": "<pre class=\"text highlighted_source\">               &gt;     q<br/>        &gt;@F5~%\"<a class=\"__cf_email__\" data-cfemail=\"0b6f4b4d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{  &gt;  @F     q<br/>_1&gt;F3~%'d`Fizz`@F5~%'d &gt;`Buzz`@FNp<br/> \u00a0;<a class=\"__cf_email__\" data-cfemail=\"5d3f111d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><a class=\"__cf_email__\" data-cfemail=\"7608580842085843084336\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>                P&lt;</pre>"}, {"lang": "Befunge", "loc": 13, "block": "<pre class=\"text highlighted_source\">for i = 0; i &lt;= 100; i++<br/>    out = \"\"<br/>    if i\u00a0% 3 == 0<br/>        out = \"Fizz\"<br/>    end<br/>    if i\u00a0% 5 == 0<br/>        out = out + \"Buzz\"<br/>    end<br/>    if out == \"\"<br/>        out = i<br/>    end<br/>    print(out)<br/>end</pre>"}, {"lang": "blz", "loc": 13, "block": "<pre class=\"text highlighted_source\">for i = 0; i &lt;= 100; i++<br/>    out = \"\"<br/>    if i\u00a0% 3 == 0<br/>        out = \"Fizz\"<br/>    end<br/>    if i\u00a0% 5 == 0<br/>        out = out + \"Buzz\"<br/>    end<br/>    if out == \"\"<br/>        out = i<br/>    end<br/>    print(out)<br/>end</pre>"}, {"lang": "Boo", "loc": 12, "block": "<pre class=\"boo highlighted_source\"><span class=\"kw7\">def</span> fizzbuzz<span class=\"br0\">(</span>size<span class=\"br0\">)</span>:<br/>    <span class=\"kw3\">for</span> i <span class=\"kw3\">in</span> <span class=\"kw11\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, size<span class=\"br0\">)</span>:<br/>        <span class=\"kw3\">if</span> i<span class=\"sy0\">%</span>15 == <span class=\"nu0\">0</span>:<br/>            <span class=\"kw9\">print</span> <span class=\"st0\">'FizzBuzz'</span><br/>        <span class=\"kw3\">elif</span> i<span class=\"sy0\">%</span>5 == <span class=\"nu0\">0</span>:<br/>            <span class=\"kw9\">print</span> <span class=\"st0\">'Buzz'</span><br/>        <span class=\"kw3\">elif</span> i<span class=\"sy0\">%</span>3 == <span class=\"nu0\">0</span>:<br/>            <span class=\"kw9\">print</span> <span class=\"st0\">'Fizz'</span><br/>        <span class=\"kw3\">else</span>:<br/>            <span class=\"kw9\">print</span> i<br/>\u00a0<br/>fizzbuzz<span class=\"br0\">(</span><span class=\"nu0\">101</span><span class=\"br0\">)</span></pre>"}, {"lang": "Bracmat", "loc": 1, "block": "<pre class=\"text highlighted_source\">0:?i&amp;whl'(1+!i:&lt;101:?i&amp;out$(mod$(!i.3):0&amp;(mod$(!i.5):0&amp;FizzBuzz|Fizz)|mod$(!i.5):0&amp;Buzz|!i))</pre>"}, {"lang": "Brainf***", "loc": 11, "block": "<pre class=\"text highlighted_source\">1.to 100 { n |<br/>  true? n\u00a0% 15 == 0<br/>    { p \"FizzBuzz\" }<br/>    { true? n\u00a0% 3 == 0<br/>      { p \"Fizz\" }<br/>      { true? n\u00a0% 5 == 0<br/>        { p \"Buzz\" }<br/>        { p n }<br/>      }<br/>    }<br/>  }</pre>"}, {"lang": "Brat", "loc": 11, "block": "<pre class=\"text highlighted_source\">1.to 100 { n |<br/>  true? n\u00a0% 15 == 0<br/>    { p \"FizzBuzz\" }<br/>    { true? n\u00a0% 3 == 0<br/>      { p \"Fizz\" }<br/>      { true? n\u00a0% 5 == 0<br/>        { p \"Buzz\" }<br/>        { p n }<br/>      }<br/>    }<br/>  }</pre>"}, {"lang": "C", "loc": 1, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span>console.<span class=\"me1\">log</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>i<span class=\"sy0\">%</span>3<span class=\"sy0\">?</span><span class=\"st0\">\"\"</span><span class=\"sy0\">:</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"br0\">(</span>i<span class=\"sy0\">%</span>5<span class=\"sy0\">?</span><span class=\"st0\">\"\"</span><span class=\"sy0\">:</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><span class=\"sy0\">||</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "C#", "loc": 33, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw4\">class</span> Program<br/><span class=\"br0\">{</span><br/><span class=\"kw1\">public</span> <span class=\"kw4\">void</span> FizzBuzzGo<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">{</span><br/>            Boolean Fizz <span class=\"sy0\">=</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>            Boolean Buzz <span class=\"sy0\">=</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> count <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> count <span class=\"sy0\">++</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">{</span><br/>                Fizz <span class=\"sy0\">=</span> count <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                Buzz <span class=\"sy0\">=</span> count <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Fizz <span class=\"sy0\">&amp;&amp;</span> Buzz<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz Buzz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    listBox1<span class=\"sy0\">.</span><span class=\"me1\">Items</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz Buzz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Fizz<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    listBox1<span class=\"sy0\">.</span><span class=\"me1\">Items</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Buzz<span class=\"br0\">)</span><br/>                <span class=\"br0\">{</span><br/>                    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    listBox1<span class=\"sy0\">.</span><span class=\"me1\">Items</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">else</span><br/>                <span class=\"br0\">{</span><br/>                    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    listBox1<span class=\"sy0\">.</span><span class=\"me1\">Items</span><span class=\"sy0\">.</span><span class=\"kw1\">Add</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 18, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw2\">using</span> <span class=\"kw2\">namespace</span> std<span class=\"sy4\">;</span><br/><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>       <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">;</span> i <span class=\"sy1\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy4\">;</span> i<span class=\"sy2\">++</span><span class=\"br0\">)</span> <br/>       <span class=\"br0\">{</span><br/>               <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy2\">%</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                       <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"FizzBuzz<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>               <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy2\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                       <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Fizz<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>               <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy2\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>                       <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"Buzz<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>               <span class=\"kw1\">else</span><br/>                       <span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> i <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>       <span class=\"br0\">}</span><br/>       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Casio BASIC", "loc": 18, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"co1\">(* FizzBuzz in CDuce *)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEformat\"><span class=\"kw4\">format</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> Latin1 <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"kw1\">else</span> string_of <span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> fizz <span class=\"br0\">(</span>n <span class=\"sy0\">:</span> Int, size <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> _ <span class=\"sy0\">=</span> <br/>    print <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEformat\"><span class=\"kw4\">format</span></a> <span class=\"br0\">(</span>n<span class=\"br0\">)</span> @ <span class=\"st0\">\"\\n\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">=</span> size<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">(* do nothing *)</span><br/>    <span class=\"kw1\">else</span><br/>        fizz<span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, size<span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> fizbuzz <span class=\"br0\">(</span>size <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> _ <span class=\"sy0\">=</span> fizz <span class=\"br0\">(</span><span class=\"nu0\">1</span>, size<span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span> fizbuzz<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;;</span></pre>"}, {"lang": "Cduce", "loc": 18, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"co1\">(* FizzBuzz in CDuce *)</span><br/>\u00a0<br/><span class=\"kw1\">let</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEformat\"><span class=\"kw4\">format</span></a> <span class=\"br0\">(</span>n <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> Latin1 <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"kw1\">else</span> string_of <span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> fizz <span class=\"br0\">(</span>n <span class=\"sy0\">:</span> Int, size <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> _ <span class=\"sy0\">=</span> <br/>    print <span class=\"br0\">(</span><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEformat\"><span class=\"kw4\">format</span></a> <span class=\"br0\">(</span>n<span class=\"br0\">)</span> @ <span class=\"st0\">\"\\n\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">=</span> size<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        n <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"co1\">(* do nothing *)</span><br/>    <span class=\"kw1\">else</span><br/>        fizz<span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>, size<span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> fizbuzz <span class=\"br0\">(</span>size <span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"sy0\">:</span> _ <span class=\"sy0\">=</span> fizz <span class=\"br0\">(</span><span class=\"nu0\">1</span>, size<span class=\"br0\">)</span><span class=\"sy0\">;;</span><br/>\u00a0<br/><span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span> fizbuzz<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;;</span></pre>"}, {"lang": "Ceylon", "loc": 1, "block": "<pre class=\"text highlighted_source\">shared void run() =&gt; {for (i in 1..100) {for (j-&gt;k in [3-&gt;\"Fizz\", 5-&gt;\"Buzz\"]) if (j.divides(i)) k}.reduce(plus) else i}.each(print);</pre>"}, {"lang": "Chapel", "loc": 13, "block": "<pre class=\"text highlighted_source\">proc fizzbuzz(n) {<br/>\tfor i in 1..n do<br/>\t\tif i\u00a0% 15 == 0 then<br/>\t\t\twriteln(\"FizzBuzz\");<br/>\t\telse if i\u00a0% 5 == 0 then<br/>\t\t\twriteln(\"Buzz\");<br/>\t\telse if i\u00a0% 3 == 0 then<br/>\t\t\twriteln(\"Fizz\");<br/>\t\telse<br/>\t\t\twriteln(i);<br/>}<br/>\u00a0<br/>fizzbuzz(100);</pre>"}, {"lang": "Chef", "loc": 8, "block": "<pre class=\"text highlighted_source\">main() {<br/>    for(i in range(1,100)) {<br/>        if(i\u00a0% 3 == 0 and i\u00a0% 5 == 0) println(\"fizzbuzz\");<br/>        else if(i\u00a0% 3 == 0) println(\"fizz\");<br/>        else if(i\u00a0% 5 == 0) println(\"buzz\");<br/>        else print(i);<br/>    }<br/>}</pre>"}, {"lang": "Clay", "loc": 8, "block": "<pre class=\"text highlighted_source\">main() {<br/>    for(i in range(1,100)) {<br/>        if(i\u00a0% 3 == 0 and i\u00a0% 5 == 0) println(\"fizzbuzz\");<br/>        else if(i\u00a0% 3 == 0) println(\"fizz\");<br/>        else if(i\u00a0% 5 == 0) println(\"buzz\");<br/>        else print(i);<br/>    }<br/>}</pre>"}, {"lang": "Clipper", "loc": 13, "block": "<pre class=\"text highlighted_source\">PROCEDURE Main()<br/>\u00a0<br/>   LOCAL n<br/>   LOCAL cFB <br/>\u00a0<br/>   FOR n\u00a0:= 1 TO 100<br/>      cFB\u00a0:= \"\"<br/>      AEval( { { 3, \"Fizz\" }, { 5, \"Buzz\" } }, {|x| cFB += iif( ( n\u00a0% x[ 1 ] ) == 0, x[ 2 ], \"\" ) } )<br/>     \u00a0?? iif( cFB == \"\", LTrim( Str( n ) ), cFB ) + iif( n == 100, \".\", \", \" )<br/>   NEXT<br/>\u00a0<br/>   RETURN<br/>\u00a0</pre>"}, {"lang": "CLIPS", "loc": 26, "block": "<pre class=\"text highlighted_source\">(deffacts count<br/>  (count-to 100)<br/>)<br/>\u00a0<br/>(defrule print-numbers<br/>  (count-to\u00a0?max)<br/>  =&gt;<br/>  (loop-for-count (?num\u00a0?max) do<br/>    (if<br/>      (= (mod\u00a0?num 3) 0)<br/>      then<br/>      (printout t \"Fizz\")<br/>    )<br/>    (if<br/>      (= (mod\u00a0?num 5) 0)<br/>      then<br/>      (printout t \"Buzz\")<br/>    )<br/>    (if<br/>      (and (&gt; (mod\u00a0?num 3) 0) (&gt; (mod\u00a0?num 5) 0))<br/>      then<br/>      (printout t\u00a0?num)<br/>    )<br/>    (priint depth, unsigned int i&gt; struct NUM_DIGITS_CORE\u00a0: NUM_DIGITS_COREntout t crlf)<br/>  )<br/>)</pre>"}, {"lang": "Clojure", "loc": 3, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">doseq</span> <span class=\"br0\">[</span>x <span class=\"br0\">(</span><span class=\"kw1\">range</span> <span class=\"nu0\">1</span> <span class=\"nu0\">101</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">(</span>println x <span class=\"br0\">(</span><span class=\"kw1\">str</span> <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"fizz\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">zero?</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"buzz\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "CMake", "loc": 13, "block": "<pre class=\"cmake highlighted_source\"><a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:foreach\"><span class=\"kw1\">foreach</span></a><span class=\"sy0\">(</span>i RANGE 1 100<span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:math\"><span class=\"kw1\">math</span></a><span class=\"sy0\">(</span>EXPR off3 <span class=\"st0\">\"<span class=\"es1\">${i}</span>\u00a0% 3\"</span><span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:math\"><span class=\"kw1\">math</span></a><span class=\"sy0\">(</span>EXPR off5 <span class=\"st0\">\"<span class=\"es1\">${i}</span>\u00a0% 5\"</span><span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:if\"><span class=\"kw1\">if</span></a><span class=\"sy0\">(</span><span class=\"kw3\">NOT</span> off3 <span class=\"kw3\">AND</span> <span class=\"kw3\">NOT</span> off5<span class=\"sy0\">)</span><br/>    <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:message\"><span class=\"kw1\">message</span></a><span class=\"sy0\">(</span>FizzBuzz<span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:elseif\"><span class=\"kw1\">elseif</span></a><span class=\"sy0\">(</span><span class=\"kw3\">NOT</span> off3<span class=\"sy0\">)</span><br/>    <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:message\"><span class=\"kw1\">message</span></a><span class=\"sy0\">(</span>Fizz<span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:elseif\"><span class=\"kw1\">elseif</span></a><span class=\"sy0\">(</span><span class=\"kw3\">NOT</span> off5<span class=\"sy0\">)</span><br/>    <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:message\"><span class=\"kw1\">message</span></a><span class=\"sy0\">(</span>Buzz<span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:else\"><span class=\"kw1\">else</span></a><span class=\"sy0\">()</span><br/>    <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:message\"><span class=\"kw1\">message</span></a><span class=\"sy0\">(</span><span class=\"re0\">${i}</span><span class=\"sy0\">)</span><br/>  <a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:endif\"><span class=\"kw1\">endif</span></a><span class=\"sy0\">()</span><br/><a href=\"http://www.cmake.org/cmake/help/cmake2.6docs.html#command:endforeach\"><span class=\"kw1\">endforeach</span></a><span class=\"sy0\">(</span>i<span class=\"sy0\">)</span></pre>"}, {"lang": "COBOL", "loc": 36, "block": "<pre class=\"cobol highlighted_source\">     <span class=\"sy0\"> * </span>FIZZBUZZ<span class=\"sy0\">.</span>COB<br/>     <span class=\"sy0\"> * </span>cobc -x -g FIZZBUZZ<span class=\"sy0\">.</span>COB<br/>      *<br/>       <span class=\"kw3\">IDENTIFICATION</span>        <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span>           fizzbuzz<span class=\"sy0\">.</span><br/>       <span class=\"kw3\">DATA</span>                  <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">WORKING-STORAGE</span>       <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> CNT      <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">03</span><span class=\"br0\">)</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">1</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> <span class=\"kw4\">REM</span>      <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">03</span><span class=\"br0\">)</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> QUOTIENT <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">03</span><span class=\"br0\">)</span> <span class=\"kw3\">VALUE</span> <span class=\"nu0\">0</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROCEDURE</span>             <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>      *<br/>       <span class=\"kw2\">PERFORM</span> <span class=\"kw2\">UNTIL</span> CNT &gt; <span class=\"nu0\">100</span><br/>         <span class=\"kw2\">DIVIDE</span> <span class=\"nu0\">15</span> <span class=\"kw2\">INTO</span> CNT <span class=\"kw2\">GIVING</span> QUOTIENT <span class=\"kw2\">REMAINDER</span> <span class=\"kw4\">REM</span><br/>         <span class=\"kw1\">IF</span> <span class=\"kw4\">REM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>           <span class=\"kw3\">THEN</span><br/>             <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"FizzBuzz \"</span> <span class=\"kw3\">WITH</span> <span class=\"kw3\">NO</span> <span class=\"kw3\">ADVANCING</span><br/>           <span class=\"kw3\">ELSE</span><br/>             <span class=\"kw2\">DIVIDE</span> <span class=\"nu0\">3</span> <span class=\"kw2\">INTO</span> CNT <span class=\"kw2\">GIVING</span> QUOTIENT <span class=\"kw2\">REMAINDER</span> <span class=\"kw4\">REM</span><br/>             <span class=\"kw1\">IF</span> <span class=\"kw4\">REM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>               <span class=\"kw3\">THEN</span><br/>                 <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Fizz \"</span> <span class=\"kw3\">WITH</span> <span class=\"kw3\">NO</span> <span class=\"kw3\">ADVANCING</span><br/>               <span class=\"kw3\">ELSE</span><br/>                 <span class=\"kw2\">DIVIDE</span> <span class=\"nu0\">5</span> <span class=\"kw2\">INTO</span> CNT <span class=\"kw2\">GIVING</span> QUOTIENT <span class=\"kw2\">REMAINDER</span> <span class=\"kw4\">REM</span><br/>                 <span class=\"kw1\">IF</span> <span class=\"kw4\">REM</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>                   <span class=\"kw3\">THEN</span><br/>                     <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Buzz \"</span> <span class=\"kw3\">WITH</span> <span class=\"kw3\">NO</span> <span class=\"kw3\">ADVANCING</span><br/>                   <span class=\"kw3\">ELSE</span><br/>                     <span class=\"kw2\">DISPLAY</span> CNT <span class=\"st0\">\" \"</span> <span class=\"kw3\">WITH</span> <span class=\"kw3\">NO</span> <span class=\"kw3\">ADVANCING</span><br/>                 END-<span class=\"kw1\">IF</span><br/>             END-<span class=\"kw1\">IF</span><br/>         END-<span class=\"kw1\">IF</span><br/>         <span class=\"kw2\">ADD</span> <span class=\"nu0\">1</span> <span class=\"kw2\">TO</span> CNT<br/>       END-<span class=\"kw2\">PERFORM</span><br/>       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"\"</span><br/>       <span class=\"kw3\">STOP</span> <span class=\"kw3\">RUN</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Coco", "loc": 6, "block": "<pre class=\"text highlighted_source\">for i from 1 to 100<br/>    console.log do<br/>       if      i\u00a0% 15 == 0 then 'FizzBuzz'<br/>       else if i\u00a0% 3 == 0 then 'Fizz'<br/>       else if i\u00a0% 5 == 0 then 'Buzz'<br/>       else i</pre>"}, {"lang": "CoffeeScript", "loc": 9, "block": "<pre class=\"coffeescript highlighted_source\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">100</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"kw2\">is</span> <span class=\"nu0\">0</span><br/>    console.<span class=\"me1\">log</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"kw2\">is</span> <span class=\"nu0\">0</span><br/>    console.<span class=\"me1\">log</span> <span class=\"st0\">\"Fizz\"</span><br/>  <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"kw2\">is</span> <span class=\"nu0\">0</span><br/>    console.<span class=\"me1\">log</span> <span class=\"st0\">\"Buzz\"</span><br/>  <span class=\"kw1\">else</span><br/>    console.<span class=\"me1\">log</span> i</pre>"}, {"lang": "ColdFusion", "loc": 7, "block": "<pre class=\"cfm highlighted_source\"><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfloop</span> <span class=\"kw6\">from</span><span class=\"sy0\">=</span><span class=\"st0\">\"1\"</span> <span class=\"kw6\">to</span><span class=\"sy0\">=</span><span class=\"st0\">\"100\"</span> <span class=\"kw6\">index</span><span class=\"sy0\">=</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">&gt;</span></span><br/>  <span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfif</span> i mod <span class=\"nu0\">15</span> <span class=\"kw7\">eq</span> <span class=\"nu0\">0</span><span class=\"sy0\">&gt;</span></span>FizzBuzz<br/>  <span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfelseif</span> i mod <span class=\"nu0\">5</span> <span class=\"kw7\">eq</span> <span class=\"nu0\">0</span><span class=\"sy0\">&gt;</span></span>Fizz<br/>  <span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfelseif</span> i mod <span class=\"nu0\">3</span> <span class=\"kw7\">eq</span> <span class=\"nu0\">0</span><span class=\"sy0\">&gt;</span></span>Buzz<br/>  <span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfelse</span><span class=\"sy0\">&gt;</span></span><span class=\"sc5\"><span class=\"sy0\">&lt;</span><span class=\"kw1\">Cfoutput</span><span class=\"sy0\">&gt;</span></span><span class=\"sc2\">#i#</span> <span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">Cfoutput</span><span class=\"sy0\">&gt;</span></span><br/>  <span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">Cfif</span><span class=\"sy0\">&gt;</span></span>      <br/><span class=\"sc5\"><span class=\"sy0\">&lt;/</span><span class=\"kw1\">Cfloop</span><span class=\"sy0\">&gt;</span></span></pre>"}, {"lang": "Comefrom0x10", "loc": 24, "block": "<pre class=\"text highlighted_source\">fizzbuzz<br/>  mod_three = 3<br/>  mod_five = 5<br/>  comefrom fizzbuzz<br/>  n<br/>  comefrom fizzbuzz if n is mod_three<br/>  comefrom fizzbuzz if n is mod_five<br/>  n = n + 1<br/>\u00a0<br/>  fizz<br/>    comefrom fizzbuzz if n is mod_three<br/>    'Fizz'...<br/>    mod_three = mod_three + 3<br/>    linebreak<br/>      # would like to write \"unless mod_three is mod_five\"<br/>      comefrom fizz if mod_three - mod_five - 3<br/>      ''<br/>\u00a0<br/>  buzz<br/>    comefrom fizzbuzz if n is mod_five<br/>    'Buzz'<br/>    mod_five = mod_five + 5<br/>\u00a0<br/>  comefrom fizzbuzz if n is 100</pre>"}, {"lang": "Common Lisp", "loc": 7, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> fizzbuzz <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for x from <span class=\"nu0\">1</span> to <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">zerop</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">zerop</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">zerop</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>                 <span class=\"br0\">(</span>t                  x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>terpri<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Crystal", "loc": 11, "block": "<pre class=\"ruby highlighted_source\"><span class=\"nu0\">1</span>.<span class=\"me1\">upto</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>v<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">p</span> fizz_buzz<span class=\"br0\">(</span>v<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> fizz_buzz<span class=\"br0\">(</span>value<span class=\"br0\">)</span><br/>  word = <span class=\"st0\">\"\"</span><br/>  word <span class=\"sy0\">+</span>= <span class=\"st0\">\"fizz\"</span> <span class=\"kw1\">if</span> value <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> == <span class=\"nu0\">0</span><br/>  word <span class=\"sy0\">+</span>= <span class=\"st0\">\"buzz\"</span> <span class=\"kw1\">if</span> value <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> == <span class=\"nu0\">0</span><br/>  word <span class=\"sy0\">+</span>= value.<span class=\"me1\">to_s</span> <span class=\"kw1\">if</span> word.<span class=\"me1\">empty</span>?<br/>  word<br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Cubescript", "loc": 15, "block": "<pre class=\"text highlighted_source\">alias fizzbuzz [<br/>\tloop i 100 [<br/>\t\tpush i (+ $i 1) [<br/>\t\t\tcond (! (mod $i 15)) [<br/>\t\t\t\techo FizzBuzz<br/>\t\t\t] (! (mod $i 3)) [<br/>\t\t\t\techo Fizz<br/>\t\t\t] (! (mod $i 5)) [<br/>\t\t\t\techo Buzz<br/>\t\t\t] [<br/>\t\t\t\techo $i<br/>\t\t\t]<br/>\t\t]<br/>\t]<br/>]</pre>"}, {"lang": "D", "loc": 53, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"me1\">conv</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"co2\">/// With if-else.</span><br/><span class=\"kw4\">void</span> fizzBuzz<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">uint</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">n</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"st0\">\"FizzBuzz\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"st0\">\"Fizz\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"st0\">\"Buzz\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">else</span><br/>            i.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co2\">/// With switch case.</span><br/><span class=\"kw4\">void</span> fizzBuzzSwitch<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">uint</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">n</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span><br/>                <span class=\"st0\">\"FizzBuzz\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">:</span><br/>                <span class=\"st0\">\"Fizz\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">:</span><br/>                <span class=\"st0\">\"Buzz\"</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw2\">default</span><span class=\"sy0\">:</span><br/>                i.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> fizzBuzzSwitch2<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">uint</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">immutable</span> i<span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"me1\">n</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span>.<span class=\"me1\">predSwitch</span><span class=\"br0\">(</span><br/>        <span class=\"nu0\">0</span><span class=\"sy0\">,</span>       <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">3</span><span class=\"sy0\">,</span>       <span class=\"st0\">\"Fizz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">5</span><span class=\"sy0\">,</span>       <span class=\"st0\">\"Buzz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">6</span><span class=\"sy0\">,</span>       <span class=\"st0\">\"Fizz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">9</span><span class=\"sy0\">,</span>       <span class=\"st0\">\"Fizz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">10</span><span class=\"sy0\">,</span>      <span class=\"st0\">\"Buzz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"nu0\">12</span><span class=\"sy0\">,</span>      <span class=\"st0\">\"Fizz\"</span><span class=\"sy0\">,</span><br/>        <span class=\"coMULTI\">/*else*/</span> i.<span class=\"me1\">text</span><span class=\"br0\">)</span>.<span class=\"me1\">writeln</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"nu0\">100</span>.<span class=\"me1\">fizzBuzz</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"sy0\">;</span><br/>    <span class=\"nu0\">100</span>.<span class=\"me1\">fizzBuzzSwitch</span><span class=\"sy0\">;</span><br/>    writeln<span class=\"sy0\">;</span><br/>    <span class=\"nu0\">100</span>.<span class=\"me1\">fizzBuzzSwitch2</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Dart", "loc": 12, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>main() {<br/>  for (int i = 1; i &lt;= 100; i++) {<br/>    List&lt;String&gt; out = [];<br/>    if (i\u00a0% 3 == 0)<br/>      out.add(\"Fizz\");<br/>    if (i\u00a0% 5 == 0)<br/>      out.add(\"Buzz\");<br/>    print(out.length &gt; 0\u00a0? out.join(\"\")\u00a0: i);<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "dc", "loc": 16, "block": "<pre class=\"text highlighted_source\">[[Fizz]P 1 sw]sF<br/>[[Buzz]P 1 sw]sB<br/>[li p sz]sN<br/>[[<br/>]P]sW<br/>[<br/> 0 sw         [w = 0]sz<br/> li 3\u00a0% 0 =F  [Fizz if 0 == i\u00a0% 3]sz<br/> li 5\u00a0% 0 =B  [Buzz if 0 == i\u00a0% 5]sz<br/> lw 0 =N      [print Number if 0 == w]sz<br/> lw 1 =W      [print neWline if 1 == w]sz<br/> li 1 + si    [i += 1]sz<br/> li 100\u00a0!&lt;L   [continue Loop if 100 &gt;= i]sz <br/>]sL<br/>1 si          [i = 1]sz<br/>0 0 =L        [enter Loop]sz</pre>"}, {"lang": "Delphi", "loc": 21, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> FizzBuzz<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span> SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  i<span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>  <span class=\"kw1\">begin</span><br/>    <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">15</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'FizzBuzz'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Fizz'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Buzz'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "DeviousYarn", "loc": 9, "block": "<pre class=\"text highlighted_source\">each { x range(1 100)<br/>   \u00a0?  { divisible(x 3)<br/>        p:'Fizz' }<br/>   \u00a0?  { divisible(x 5)<br/>        p:'Buzz' }<br/>    -? {\u00a0!:divisible(x 3)<br/>        p:x }<br/>    o<br/>}</pre>"}, {"lang": "DWScript", "loc": 11, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">var</span> i <span class=\"sy1\">:</span> <span class=\"kw4\">Integer</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span> <span class=\"kw1\">begin</span><br/>   <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">15</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      PrintLn<span class=\"br0\">(</span><span class=\"st0\">'FizzBuzz'</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      PrintLn<span class=\"br0\">(</span><span class=\"st0\">'Fizz'</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      PrintLn<span class=\"br0\">(</span><span class=\"st0\">'Buzz'</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">else</span> PrintLn<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span></pre>"}, {"lang": "D\u00e9j\u00e0 Vu", "loc": 10, "block": "<pre class=\"text highlighted_source\">for i range 1 100:<br/>\tif = 0\u00a0% i 15:<br/>\t\t\"FizzBuzz\"<br/>\telseif = 0\u00a0% i 3:<br/>\t\t\"Fizz\"<br/>\telseif = 0\u00a0% i 5:<br/>\t\t\"Buzz\"<br/>\telse:<br/>\t\ti<br/>\t!print</pre>"}, {"lang": "DUP", "loc": 2, "block": "<pre class=\"text highlighted_source\">[$$3/%$[]['F,'i,'z,'z,]?\\5/%$[]['B,'u,'z,'z,]?*[$.][]?10,]c:    {define function c: mod 3, mod 5 tests, print proper output}<br/>0[$100&lt;][1+c;!]#                                                {loop from 1 to 100}</pre>"}, {"lang": "E", "loc": 8, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> i <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"nu0\">1</span>..<span class=\"nu0\">100</span> <span class=\"br0\">{</span><br/>   <a href=\"http://wiki.erights.org/wiki/println\"><span class=\"kw7\">println</span></a><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/switch\"><span class=\"kw1\">switch</span></a> <span class=\"br0\">(</span><span class=\"br0\">[</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>     <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> <span class=\"br0\">[</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"st0\">\"FizzBuzz\"</span> <span class=\"br0\">}</span><br/>     <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> <span class=\"br0\">[</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> _  <span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Fizz\"</span> <span class=\"br0\">}</span><br/>     <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> <span class=\"br0\">[</span>_<span class=\"sy0\">,</span>   <span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">{</span> <span class=\"st0\">\"Buzz\"</span> <span class=\"br0\">}</span><br/>     <a href=\"http://wiki.erights.org/wiki/match\"><span class=\"kw5\">match</span></a> _          <span class=\"br0\">{</span> i <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><span class=\"br0\">)</span><br/> <span class=\"br0\">}</span></pre>"}, {"lang": "ECL", "loc": 17, "block": "<pre class=\"text highlighted_source\">DataRec\u00a0:= RECORD<br/>    STRING  s;<br/>END;<br/>\u00a0<br/>DataRec MakeDataRec(UNSIGNED c)\u00a0:= TRANSFORM<br/>    SELF.s\u00a0:= MAP<br/>        (<br/>            c\u00a0% 15 = 0  =&gt;  'FizzBuzz',<br/>            c\u00a0% 3 = 0   =&gt;  'Fizz',<br/>            c\u00a0% 5 = 0   =&gt;  'Buzz',<br/>            (STRING)c<br/>        );<br/>END;<br/>\u00a0<br/>d\u00a0:= DATASET(100,MakeDataRec(COUNTER));<br/>\u00a0<br/>OUTPUT(d);</pre>"}, {"lang": "Eero", "loc": 14, "block": "<pre class=\"objc highlighted_source\"><span class=\"co1\">#import &lt;Foundation/Foundation.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  autoreleasepool<br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> <span class=\"nu0\">1</span> .. <span class=\"nu0\">100</span><br/>      s <span class=\"sy0\">:=</span> <span class=\"st0\">''</span><br/>      <span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><br/>        s &lt;&lt; <span class=\"st0\">'Fizz'</span><br/>      <span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><br/>        s &lt;&lt; <span class=\"st0\">'Buzz'</span><br/>      Log<span class=\"br0\">(</span> <span class=\"st0\">'(%d)\u00a0%@'</span>, i, s <span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "Egel", "loc": 21, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>import \"prelude.eg\"<br/>import \"io.ego\"<br/>\u00a0<br/>using System<br/>using IO<br/>\u00a0<br/>def fizzbuzz =<br/>    [ 100 -&gt; print \"100\\n\"<br/>    | N -&gt; <br/>        if and ((N%3) == 0) ((N%5) == 0) then <br/>            let _ = print \"fizz buzz, \" in fizzbuzz (N+1)<br/>        else if (N%3) == 0 then<br/>            let _ = print \"fizz, \" in fizzbuzz (N+1)<br/>        else if (N%5) == 0 then<br/>            let _ = print \"buzz, \" in fizzbuzz (N+1)<br/>        else<br/>            let _ = print N \", \" in fizzbuzz (N+1) ]<br/>\u00a0<br/>def main = fizzbuzz 1<br/>\u00a0</pre>"}, {"lang": "Eiffel", "loc": 36, "block": "<pre class=\"eiffel highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span><br/>\tAPPLICATION<br/>\u00a0<br/><span class=\"kw2\">create</span><br/>\tmake<br/>\u00a0<br/><span class=\"kw1\">feature</span><br/>\u00a0<br/>\tmake<br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tfizzbuzz<br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/>\tfizzbuzz<br/>\t        <span class=\"co1\">--Numbers up to 100, prints \"Fizz\" instead of multiples of 3, and \"Buzz\" for multiples of 5.</span><br/>\t        <span class=\"co1\">--For multiples of both 3 and 5 prints \"FizzBuzz\".</span><br/>\t\t<span class=\"kw2\">do</span><br/>\t\t\tacross<br/>\t\t\t\t<span class=\"nu0\">1</span> <span class=\"sy0\">|</span>..<span class=\"sy0\">|</span> <span class=\"nu0\">100</span> <span class=\"kw2\">as</span> c<br/>\t\t\t<span class=\"kw2\">loop</span><br/>\t\t\t\t<span class=\"kw2\">if</span> c.<span class=\"me1\">item</span> \\\\ <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"FIZZBUZZ<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">elseif</span> c.<span class=\"me1\">item</span> \\\\ <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"FIZZ<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">elseif</span> c.<span class=\"me1\">item</span> \\\\ <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw2\">then</span><br/>\t\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span><span class=\"st0\">\"BUZZ<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">else</span><br/>\t\t\t\t\tio.<span class=\"me1\">put_string</span> <span class=\"br0\">(</span>c.<span class=\"me1\">item</span>.<span class=\"me1\">out</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">%N</span>\"</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"kw2\">end</span><br/>\t\t\t<span class=\"kw2\">end</span><br/>\t\t<span class=\"kw2\">end</span><br/>\u00a0<br/><span class=\"kw2\">end</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Ela", "loc": 8, "block": "<pre class=\"text highlighted_source\">open list<br/>\u00a0<br/>prt x | x\u00a0% 15 == 0 = \"FizzBuzz\"<br/>      | x\u00a0% 3 == 0  = \"Fizz\"<br/>      | x\u00a0% 5 == 0  = \"Buzz\"<br/>      | else        = x<br/>\u00a0<br/>[1..100] |&gt; map prt</pre>"}, {"lang": "Elixir", "loc": 8, "block": "<pre class=\"text highlighted_source\">Enum.each 1..100, fn x -&gt;<br/>  IO.puts(case { rem(x,3) == 0, rem(x,5) == 0 } do<br/>    { true, true }   -&gt; \"FizzBuzz\"<br/>    { true, false }  -&gt; \"Fizz\"<br/>    { false, true }  -&gt; \"Buzz\"<br/>    { false, false } -&gt; x<br/>  end)<br/>end</pre>"}, {"lang": "Elm", "loc": 15, "block": "<pre class=\"text highlighted_source\">import Graphics.Element exposing (show)<br/>import List exposing (map)<br/>\u00a0<br/>main =<br/>  map getWordForNum [1..100] |&gt; show<br/>\u00a0<br/>getWordForNum num =<br/>  if num\u00a0% 15 == 0 then<br/>    \"FizzBuzz\"<br/>  else if num\u00a0% 3 == 0 then<br/>    \"Fizz\"<br/>  else if num\u00a0% 5 == 0 then<br/>    \"Buzz\"<br/>  else<br/>    toString num</pre>"}, {"lang": "Emacs Lisp", "loc": 12, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> fizzbuzz <span class=\"br0\">(</span>n<span class=\"br0\">)</span> <br/>  <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <br/>\t  <span class=\"br0\">(</span><span class=\"kw1\">eq</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> n <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <br/>\t  <span class=\"br0\">(</span><span class=\"kw1\">eq</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> n <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span> <br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">eq</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> n <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>  <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span> <br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">eq</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> n <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>  <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span> <br/>\t<span class=\"br0\">(</span>t  n<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; loop &amp; print from 0 to 100</span><br/><span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>i <span class=\"nu0\">101</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>princ-<span class=\"kw1\">list</span> <span class=\"br0\">(</span>fizzbuzz i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Erlang", "loc": 7, "block": "<pre class=\"erlang highlighted_source\"><span class=\"re3\">fizzbuzz</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>    <span class=\"re5\">F</span> <span class=\"sy3\">=</span> <span class=\"kw1\">fun</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">N</span> <span class=\"kw2\">rem</span> <span class=\"nu0\">15</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy1\">;</span><br/>           <span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">N</span> <span class=\"kw2\">rem</span> <span class=\"nu0\">3</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span>  <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"Fizz\"</span><span class=\"sy1\">;</span><br/>           <span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"re5\">N</span> <span class=\"kw2\">rem</span> <span class=\"nu0\">5</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span>  <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"Buzz\"</span><span class=\"sy1\">;</span><br/>           <span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">end</span><span class=\"sy1\">,</span><br/>    <span class=\"br0\">[</span><span class=\"re5\">F</span><span class=\"br0\">(</span><span class=\"re5\">N</span><span class=\"br0\">)</span><span class=\"sy3\">++</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy3\">||</span> <span class=\"re5\">N</span> <span class=\"sy3\">&lt;-</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">seq</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">.</span></pre>"}, {"lang": "ERRE", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>PROGRAM FIZZ_BUZZ<br/>!<br/>! for rosettacode.org<br/>!<br/>BEGIN<br/> FOR A=1 TO 100 DO<br/>   IF A MOD 15=0 THEN<br/>      PRINT(\"FizzBuzz\")<br/>   ELSIF A MOD 3=0 THEN<br/>      PRINT(\"Fizz\")<br/>   ELSIF A MOD 5=0 THEN<br/>      PRINT(\"Buzz\")<br/>   ELSE<br/>      PRINT(A)<br/>   END IF<br/> END FOR<br/>END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 33, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">include</span> std<span class=\"sy1\">/</span>utils.e<br/>\u00a0<br/><span class=\"kw1\">function</span> fb<span class=\"br0\">(</span> <span class=\"kw2\">atom</span> n <span class=\"br0\">)</span><br/>\t<span class=\"kw2\">sequence</span> fb<br/>\t<span class=\"kw1\">if</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span> n<span class=\"sy2\">,</span> <span class=\"nu0\">15</span> <span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>\t\tfb <span class=\"sy1\">=</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>\t<span class=\"kw1\">elsif</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span> n<span class=\"sy2\">,</span> <span class=\"nu0\">5</span> <span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>\t\tfb <span class=\"sy1\">=</span> <span class=\"st0\">\"Fizz\"</span><br/>\t<span class=\"kw1\">elsif</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span> n<span class=\"sy2\">,</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>\t\tfb <span class=\"sy1\">=</span> <span class=\"st0\">\"Buzz\"</span><br/>\t<span class=\"kw1\">else</span><br/>\t\tfb <span class=\"sy1\">=</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span> <span class=\"st0\">\"%d\"</span><span class=\"sy2\">,</span> n <span class=\"br0\">)</span><br/>\t<span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\t<span class=\"kw1\">return</span> fb<br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">function</span> fb2<span class=\"br0\">(</span> <span class=\"kw2\">atom</span> n <span class=\"br0\">)</span><br/>\t<span class=\"kw1\">return</span> iif<span class=\"br0\">(</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span>n<span class=\"sy2\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy2\">,</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy2\">,</span> <br/>\t\tiif<span class=\"br0\">(</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span> n<span class=\"sy2\">,</span> <span class=\"nu0\">5</span> <span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Fizz\"</span><span class=\"sy2\">,</span> <br/>\t\tiif<span class=\"br0\">(</span> <span class=\"kw2\">remainder</span><span class=\"br0\">(</span> n<span class=\"sy2\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"sy2\">,</span> <span class=\"st0\">\"Buzz\"</span><span class=\"sy2\">,</span> <span class=\"kw2\">sprintf</span><span class=\"br0\">(</span> <span class=\"st0\">\"%d\"</span><span class=\"sy2\">,</span> n <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span> <br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">30</span> <span class=\"kw1\">do</span><br/>\t<span class=\"kw2\">printf</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"%s \"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span> fb<span class=\"br0\">(</span> i <span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/><span class=\"kw2\">puts</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">for</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">30</span> <span class=\"kw1\">do</span><br/>\t<span class=\"kw2\">printf</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"%s \"</span><span class=\"sy2\">,</span> <span class=\"br0\">{</span> fb2<span class=\"br0\">(</span> i <span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">for</span><br/>\u00a0<br/><span class=\"kw2\">puts</span><span class=\"br0\">(</span> <span class=\"nu0\">1</span><span class=\"sy2\">,</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 9, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">let</span> fizzbuzz n <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">match</span> n<span class=\"sy0\">%</span>3 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, n<span class=\"sy0\">%</span>5 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">with</span><br/>    | <span class=\"kw1\">true</span>, <span class=\"kw1\">false</span> <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"fizz\"</span><br/>    | <span class=\"kw1\">false</span>, <span class=\"kw1\">true</span> <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"buzz\"</span><br/>    | <span class=\"kw1\">true</span>, <span class=\"kw1\">true</span>  <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"fizzbuzz\"</span><br/>    | _ <span class=\"sy0\">-&gt;</span> <span class=\"kw4\">string</span> n<br/>\u00a0<br/><span class=\"kw1\">let</span> printFizzbuzz<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"nu0\">100</span><span class=\"br0\">]</span> <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">List</span></a>.<span class=\"me1\">iter</span> <span class=\"br0\">(</span>fizzbuzz <span class=\"sy0\">&gt;&gt;</span> printfn <span class=\"st0\">\"%s\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 7, "block": "<pre class=\"text highlighted_source\">USING: math kernel io math.functions math.parser math.ranges\u00a0;<br/>IN: fizzbuzz<br/>: fizz ( n -- str ) 3 divisor? \"Fizz\" \"\"\u00a0?\u00a0;<br/>: buzz ( n -- str ) 5 divisor? \"Buzz\" \"\"\u00a0?\u00a0;<br/>: fizzbuzz ( n -- str ) dup [ fizz ] [ buzz ] bi append [ number&gt;string ] [ nip ] if-empty\u00a0;<br/>: main ( -- ) 100 [1,b] [ fizzbuzz print ] each\u00a0;<br/>MAIN: main</pre>"}, {"lang": "Falcon", "loc": 8, "block": "<pre class=\"falcon highlighted_source\"><span class=\"kw1\">for</span> i <span class=\"kw3\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span><span class=\"nu0\">101</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">switch</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span><br/>    <span class=\"kw1\">case</span> <span class=\"nu0\">0</span>        <span class=\"sy0\">:</span> <span class=\"sy0\">&gt;</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span>     <span class=\"sy0\">:</span> <span class=\"sy0\">&gt;</span> <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">12</span> <span class=\"sy0\">:</span> <span class=\"sy0\">&gt;</span> <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"kw1\">default</span>       <span class=\"sy0\">:</span> <span class=\"sy0\">&gt;</span> i<br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "FALSE", "loc": 17, "block": "<pre class=\"text highlighted_source\">class FizzBuzz<br/>{<br/>  public static Void main ()<br/>  {<br/>    for (Int i:=1; i &lt;= 100; ++i)<br/>    {<br/>      if (i\u00a0% 15 == 0)<br/>        echo (\"FizzBuzz\")<br/>      else if (i\u00a0% 3 == 0)<br/>        echo (\"Fizz\")<br/>      else if (i\u00a0% 5 == 0) <br/>        echo (\"Buzz\") <br/>      else<br/>        echo (i)<br/>    }<br/>  }<br/>}</pre>"}, {"lang": "Fantom", "loc": 17, "block": "<pre class=\"text highlighted_source\">class FizzBuzz<br/>{<br/>  public static Void main ()<br/>  {<br/>    for (Int i:=1; i &lt;= 100; ++i)<br/>    {<br/>      if (i\u00a0% 15 == 0)<br/>        echo (\"FizzBuzz\")<br/>      else if (i\u00a0% 3 == 0)<br/>        echo (\"Fizz\")<br/>      else if (i\u00a0% 5 == 0) <br/>        echo (\"Buzz\") <br/>      else<br/>        echo (i)<br/>    }<br/>  }<br/>}</pre>"}, {"lang": "FBSL", "loc": 17, "block": "<pre class=\"qbasic highlighted_source\">#APPTYPE CONSOLE<br/>\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> numbers <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckstring.shtml\"><span class=\"kw3\">STRING</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> imod5 <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> imod3 <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckinteger.shtml\"><span class=\"kw3\">INTEGER</span></a><br/>\u00a0<br/><span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckdim.shtml\"><span class=\"kw3\">DIM</span></a> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">100</span><br/>    numbers <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>    imod3 <span class=\"sy0\">=</span> i <a href=\"http://www.qbasicnews.com/qboho/qckmod.shtml\"><span class=\"kw3\">MOD</span></a> <span class=\"nu0\">3</span><br/>    imod5 <span class=\"sy0\">=</span> i <a href=\"http://www.qbasicnews.com/qboho/qckmod.shtml\"><span class=\"kw3\">MOD</span></a> <span class=\"nu0\">5</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> imod3 <span class=\"kw1\">THEN</span> numbers <span class=\"sy0\">=</span> <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"kw1\">IF</span> <a href=\"http://www.qbasicnews.com/qboho/qcknot.shtml\"><span class=\"kw3\">NOT</span></a> imod5 <span class=\"kw1\">THEN</span> numbers <span class=\"sy0\">=</span> numbers &amp; <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"kw1\">IF</span> imod3 <a href=\"http://www.qbasicnews.com/qboho/qckand.shtml\"><span class=\"kw3\">AND</span></a> imod5 <span class=\"kw1\">THEN</span> numbers <span class=\"sy0\">=</span> i<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> numbers<span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span>;<br/><span class=\"kw1\">NEXT</span><br/>\u00a0<br/>PAUSE</pre>"}, {"lang": "FOCAL", "loc": 16, "block": "<pre class=\"text highlighted_source\">01.10 FOR I=1,100; DO 2.0<br/>01.20 QUIT<br/>\u00a0<br/>02.10 SET ZB=I/15 - FITR(I/15)<br/>02.20 IF (ZB) 2.4, 2.3, 2.4<br/>02.30 TYPE \"FizzBuzz\"\u00a0!<br/>02.35 RETURN<br/>02.40 SET Z=I/3 - FITR(I/3)<br/>02.50 IF (Z) 2.7, 2.6, 2.7<br/>02.60 TYPE \"Fizz\"\u00a0!<br/>02.65 RETURN<br/>02.70 SET B=I/5 - FITR(I/5)<br/>02.80 IF (B) 2.99, 2.9, 2.99<br/>02.90 TYPE \"Buzz\"\u00a0!<br/>02.95 RETURN<br/>02.99 TYPE\u00a0%3, I,\u00a0!</pre>"}, {"lang": "Forth", "loc": 11, "block": "<pre class=\"text highlighted_source\">: fizz ( n -- ) drop .\" Fizz\"\u00a0;<br/>: buzz ( n -- ) drop .\" Buzz\"\u00a0;<br/>: fb   ( n -- ) drop .\" FizzBuzz\"\u00a0;<br/>: vector create does&gt; ( n -- )<br/>  over 15 mod cells + @ execute\u00a0;<br/>vector .fizzbuzz<br/>  ' fb   , ' . ,    ' . ,<br/>  ' fizz , ' . ,    ' buzz ,<br/>  ' fizz , ' . ,    ' . ,<br/>  ' fizz , ' buzz , ' . ,<br/>  ' fizz , ' . ,    ' . ,</pre>"}, {"lang": "Fortran", "loc": 11, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw1\">program</span> fizzbuzz_if<br/>   <span class=\"kw3\">integer</span> <span class=\"sy0\">::</span> <span class=\"me2\">i</span><br/>\u00a0<br/>   <span class=\"kw1\">do</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">100</span><br/>      <span class=\"kw1\">if</span>     <span class=\"br0\">(</span><span class=\"kw4\">mod</span><span class=\"br0\">(</span>i,<span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span>; print <span class=\"sy0\">*</span>, <span class=\"st0\">'FizzBuzz'</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">mod</span><span class=\"br0\">(</span>i,<span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span>; print <span class=\"sy0\">*</span>, <span class=\"st0\">'Fizz'</span><br/>      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">mod</span><span class=\"br0\">(</span>i,<span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span>; print <span class=\"sy0\">*</span>, <span class=\"st0\">'Buzz'</span><br/>      <span class=\"kw1\">else</span>;                         print <span class=\"sy0\">*</span>, i<br/>      <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>   <span class=\"kw1\">end</span> <span class=\"kw1\">do</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">program</span> fizzbuzz_if</pre>"}, {"lang": "FreeBASIC", "loc": 7, "block": "<pre class=\"text highlighted_source\">gen n word = cycle (take (n - 1) (repeat \"\") ++ [word])<br/>pattern = zipWith (++) (gen 3 \"fizz\") (gen 5 \"buzz\")<br/>fizzbuzz = zipWith combine pattern [1..] where<br/>    combine word number = if null word<br/>                             then show number<br/>                             else word<br/>show $ take 100 fizzbuzz</pre>"}, {"lang": "Frege", "loc": 7, "block": "<pre class=\"text highlighted_source\">gen n word = cycle (take (n - 1) (repeat \"\") ++ [word])<br/>pattern = zipWith (++) (gen 3 \"fizz\") (gen 5 \"buzz\")<br/>fizzbuzz = zipWith combine pattern [1..] where<br/>    combine word number = if null word<br/>                             then show number<br/>                             else word<br/>show $ take 100 fizzbuzz</pre>"}, {"lang": "Frink", "loc": 20, "block": "<pre class=\"text highlighted_source\">for i = 1 to 100<br/>{<br/>   flag = false<br/>   if i mod 3 == 0<br/>   {<br/>      flag = true<br/>      print[\"Fizz\"]<br/>   }<br/>\u00a0<br/>   if i mod 5 == 0<br/>   {<br/>      flag = true<br/>      print[\"Buzz\"]<br/>   }<br/>\u00a0<br/>   if flag == false<br/>      print[i]<br/>\u00a0<br/>   println[]<br/>}</pre>"}, {"lang": "FutureBasic", "loc": 18, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>include \"ConsoleWindow\"<br/>\u00a0<br/>dim as short fizz, buzz, i<br/>dim as Str15 s<br/>\u00a0<br/>for i = 1 to 100<br/>  fizz = (i mod 3 )<br/>  buzz = (i mod 5 )<br/>   if (i)<br/>      if fizz + buzz == 0 then print i; \".\", \"FizzBuzz\"\u00a0: exit if<br/>      if fizz == 0 then print i; \".\", \"Fizz\"\u00a0: exit if<br/>      if buzz == 0 then print i; \".\", \"Buzz\"\u00a0: exit if<br/>     print i<br/>   end if<br/>next i<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Gambas", "loc": 13, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/short\"><span class=\"kw4\">Short</span></a><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sText <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> siCount <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">100</span><br/>  sText <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/mod\"><span class=\"kw5\">Mod</span></a> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> sText <span class=\"sy0\">=</span> <span class=\"st0\">\"Fizz\"</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/mod\"><span class=\"kw5\">Mod</span></a> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> sText <span class=\"sy0\">=</span> <span class=\"st0\">\"Buzz\"</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> siCount <a href=\"http://gambasdoc.org/help/lang/mod\"><span class=\"kw5\">Mod</span></a> <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> sText <span class=\"sy0\">=</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> sText <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> sText <a href=\"http://gambasdoc.org/help/lang/else\"><span class=\"kw1\">Else</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> siCount<br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "GAP", "loc": 14, "block": "<pre class=\"text highlighted_source\">FizzBuzz\u00a0:= function()<br/>\tlocal i;<br/>\tfor i in [1 .. 100] do<br/>\t\tif RemInt(i, 15) = 0 then<br/>\t\t\tPrint(\"FizzBuzz\\n\");<br/>\t\telif RemInt(i, 3) = 0 then<br/>\t\t\tPrint(\"Fizz\\n\");<br/>\t\telif RemInt(i, 5) = 0 then<br/>\t\t\tPrint(\"Buzz\\n\");<br/>\t\telse<br/>\t\t\tPrint(i, \"\\n\");<br/>\t\tfi;<br/>\tod;<br/>end;</pre>"}, {"lang": "Genyris", "loc": 23, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>@prefix u \"http://www.genyris.org/lang/utilities#\"<br/>\u00a0<br/>def fizzbuzz (n)<br/>    map-left ^((3 = 'fizz') (5 = 'buzz'))<br/>        lambda (d)<br/>            cond<br/>                (equal? 0 (% n d!left))<br/>                    d!right<br/>                else<br/>                    ''<br/>\u00a0<br/>\u00a0<br/>for n in (range 1 100)<br/>    define fb (''(.join (fizzbuzz n)))<br/>    u:format \"%a\\n\"<br/>        cond <br/>            (equal? fb '') <br/>                n<br/>            else<br/>                fb<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "GFA Basic", "loc": 15, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>' Fizz Buzz<br/>'<br/>FOR i%=1 TO 100<br/>  IF i% MOD 15=0<br/>    PRINT \"FizzBuzz\"<br/>  ELSE IF i% MOD 3=0<br/>    PRINT \"Fizz\"<br/>  ELSE IF i% MOD 5=0<br/>    PRINT \"Buzz\"<br/>  ELSE<br/>    PRINT i%<br/>  ENDIF<br/>NEXT i%<br/>\u00a0</pre>"}, {"lang": "Go", "loc": 18, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span> &lt;<span class=\"sy2\">=</span> <span class=\"nu0\">100</span><span class=\"sy1\">;</span> <span class=\"nu2\">i</span><span class=\"sy2\">++</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">switch</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu2\">i</span><span class=\"sy3\">%</span><span class=\"nu0\">15</span><span class=\"sy3\">==</span><span class=\"nu0\">0</span><span class=\"sy1\">:</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu2\">i</span><span class=\"sy3\">%</span><span class=\"nu0\">3</span><span class=\"sy3\">==</span><span class=\"nu0\">0</span><span class=\"sy1\">:</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">case</span> <span class=\"nu2\">i</span><span class=\"sy3\">%</span><span class=\"nu0\">5</span><span class=\"sy3\">==</span><span class=\"nu0\">0</span><span class=\"sy1\">:</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">default</span><span class=\"sy1\">:</span> <br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Golo", "loc": 17, "block": "<pre class=\"text highlighted_source\">module FizzBuzz<br/>\u00a0<br/>augment java.lang.Integer {<br/>\tfunction getFizzAndOrBuzz = |this| -&gt; match {<br/>\t\twhen this\u00a0% 15 == 0 then \"FizzBuzz\"<br/>\t\twhen this\u00a0% 3 == 0 then \"Fizz\"<br/>\t\twhen this\u00a0% 5 == 0 then \"Buzz\"<br/>\t\totherwise this<br/>\t}<br/>}<br/>\u00a0<br/>function main = |args| {<br/>  foreach i in [1..101] {<br/>\tprintln(i: getFizzAndOrBuzz())<br/>  }<br/>}<br/>\u00a0</pre>"}, {"lang": "Gosu", "loc": 21, "block": "<pre class=\"text highlighted_source\">for (i in 1..100) {<br/>\u00a0<br/>    if (i\u00a0% 3 == 0 &amp;&amp; i\u00a0% 5 == 0) {<br/>        print(\"FizzBuzz\")<br/>        continue<br/>    }<br/>\u00a0<br/>    if (i\u00a0% 3 == 0) {<br/>        print(\"Fizz\")<br/>        continue<br/>    }<br/>\u00a0<br/>    if (i\u00a0% 5 == 0) {<br/>        print(\"Buzz\")<br/>        continue<br/>    }<br/>\u00a0<br/>    // default<br/>    print(i)<br/>\u00a0<br/>}</pre>"}, {"lang": "Groovy", "loc": 1, "block": "<pre class=\"groovy highlighted_source\"><span class=\"nu0\">1</span>.<a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20upto\"><span class=\"kw8\">upto</span></a><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> i <span class=\"sy0\">-&gt;</span> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <span class=\"st0\">\"${i\u00a0% 3\u00a0? ''\u00a0: 'Fizz'}${i\u00a0% 5\u00a0? ''\u00a0: 'Buzz'}\"</span> <span class=\"sy0\">?</span>: i <span class=\"br0\">}</span></pre>"}, {"lang": "GW-BASIC", "loc": 11, "block": "<pre class=\"haskell highlighted_source\">fizzbuzz <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>fizzbuzz x<br/>  <span class=\"sy0\">|</span> f <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <span class=\"sy0\">|</span> f <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Fizz\"</span><br/>  <span class=\"sy0\">|</span> f <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Buzz\"</span><br/>  <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> x<br/>  <span class=\"kw1\">where</span><br/>    f <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">==</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:rem\"><span class=\"kw3\">rem</span></a> x<br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">.</span> fizzbuzz<span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">100</span><span class=\"br0\">]</span></pre>"}, {"lang": "Haskell", "loc": 11, "block": "<pre class=\"haskell highlighted_source\">fizzbuzz <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>fizzbuzz x<br/>  <span class=\"sy0\">|</span> f <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <span class=\"sy0\">|</span> f <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Fizz\"</span><br/>  <span class=\"sy0\">|</span> f <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Buzz\"</span><br/>  <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> x<br/>  <span class=\"kw1\">where</span><br/>    f <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">==</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:rem\"><span class=\"kw3\">rem</span></a> x<br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">.</span> fizzbuzz<span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">100</span><span class=\"br0\">]</span></pre>"}, {"lang": "HicEst", "loc": 11, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">DO</span> i <span class=\"sy1\">=</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">100</span><br/>  <span class=\"kw1\">IF</span><span class=\"br0\">(</span>     <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>i<span class=\"sy1\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>    <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <span class=\"kw1\">ELSEIF</span><span class=\"br0\">(</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>i<span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>    <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"st0\">\"Buzz\"</span><br/>  <span class=\"kw1\">ELSEIF</span><span class=\"br0\">(</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>i<span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy1\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>    <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"st0\">\"Fizz\"</span><br/>  <span class=\"kw1\">ELSE</span><br/>    <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span><span class=\"br0\">)</span> i<br/>  <span class=\"kw1\">ENDIF</span><br/><span class=\"kw1\">ENDDO</span></pre>"}, {"lang": "HolyC", "loc": 12, "block": "<pre class=\"text highlighted_source\">U8 i;<br/>for (i = 1; i &lt;= 100; i++) {<br/>  if (!(i\u00a0% 15))<br/>    Print(\"FizzBuzz\");<br/>  else if (!(i\u00a0% 3))<br/>    Print(\"Fizz\");<br/>  else if (!(i\u00a0% 5))<br/>    Print(\"Buzz\");<br/>  else<br/>    Print(\"%d\", i);<br/>  Print(\"\\n\");<br/>}</pre>"}, {"lang": "Hoon", "loc": 11, "block": "<pre class=\"text highlighted_source\">:- \u00a0%say<br/>|=  [^ ~ ~]<br/> \u00a0:- \u00a0%noun<br/> \u00a0%+  turn   (gulf [1 101])<br/>  |=  <a class=\"__cf_email__\" data-cfemail=\"42237f02\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>    =+  q=[=(0 (mod a 3)) =(0 (mod a 5))]<br/>   \u00a0?+  q  &lt;a&gt;<br/>      [&amp; &amp;]  \"FizzBuzz\"<br/>      [&amp; |]  \"Fizz\"<br/>      [| &amp;]  \"Buzz\"<br/>    ==</pre>"}, {"lang": "Huginn", "loc": 23, "block": "<pre class=\"text highlighted_source\">import Algorithms as algo;<br/>\u00a0<br/>main( argv_ ) {<br/>\tif ( size( argv_ ) &lt; 2 ) {<br/>\t\tthrow Exception( \"usage: fizzbuzz {NUM}\" );<br/>\t}<br/>\ttop = integer( argv_[1] );<br/>\tfor ( i\u00a0: algo.range( 1, top + 1 ) ) {<br/>\t\tby3 = ( i\u00a0% 3 ) == 0;<br/>\t\tby5 = ( i\u00a0% 5 ) == 0;<br/>\t\tif ( by3 ) {<br/>\t\t\tprint( \"fizz\" );<br/>\t\t}<br/>\t\tif ( by5 ) {<br/>\t\t\tprint( \"buzz\" );<br/>\t\t}<br/>\t\tif (\u00a0! ( by3 || by5 ) ) {<br/>\t\t\tprint( i );<br/>\t\t}<br/>\t\tprint( \"\\n\" );<br/>\t}<br/>\treturn ( 0 );<br/>}</pre>"}, {"lang": "Hy", "loc": 5, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>for <span class=\"br0\">[</span>i <span class=\"br0\">(</span>range <span class=\"nu0\">1</span> <span class=\"nu0\">101</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>  <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> i <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> i  <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"kw1\">not</span> <span class=\"br0\">(</span><span class=\"sy0\">%</span> i  <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">]</span><br/>  <span class=\"br0\">[</span>True           i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "i", "loc": 13, "block": "<pre class=\"text highlighted_source\">software {<br/>\tfor each 1 to 100\t\t<br/>\t\tif i\u00a0% 15 = 0<br/>\t\t\tprint(\"FizzBuzz\")<br/>\t\telse if i\u00a0% 3 = 0<br/>\t\t\tprint(\"Fizz\")<br/>\t\telse if i\u00a0% 5 = 0<br/>\t\t\tprint(\"Buzz\")<br/>\t\telse<br/>\t\t\tprint(i)<br/>\t\tend<br/>\tend<br/>}</pre>"}, {"lang": "Icon and Unicon", "loc": 12, "block": "<pre class=\"icon highlighted_source\"><span class=\"co1\"># straight-forward modulo tester</span><br/><span class=\"kw1\">procedure</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">every</span> i <span class=\"sy1\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> i <span class=\"sy1\">%</span> <span class=\"nu0\">15</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"sy1\">%</span> <span class=\"nu0\">5</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"sy1\">%</span> <span class=\"nu0\">3</span> <span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span><br/>            <span class=\"kw4\">write</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Idris", "loc": 9, "block": "<pre class=\"text highlighted_source\">partial<br/>fizzBuzz\u00a0: Nat -&gt; String<br/>fizzBuzz n = if (n `modNat` 15) == 0 then \"FizzBuzz\"<br/>             else if (n `modNat` 3) == 0 then \"Fizz\"<br/>             else if (n `modNat` 5)  == 0 then \"Buzz\"<br/>             else show n<br/>\u00a0<br/>main\u00a0: IO ()<br/>main = sequence_ $ map (putStrLn . fizzBuzz) [1..100]</pre>"}, {"lang": "Inform 6", "loc": 10, "block": "<pre class=\"text highlighted_source\">[ Main i;<br/>  for(i = 1: i &lt;= 100: i++)<br/>  {<br/>    if(i\u00a0% 3 == 0) print \"Fizz\";<br/>    if(i\u00a0% 5 == 0) print \"Buzz\";<br/>    if(i\u00a0% 3 ~= 0 &amp;&amp; i\u00a0% 5 ~= 0) print i;<br/>\u00a0<br/>    print \"^\";<br/>  }<br/>];</pre>"}, {"lang": "Inform 7", "loc": 14, "block": "<pre class=\"text highlighted_source\">Home is a room.<br/>\u00a0<br/>When play begins:<br/>\trepeat with N running from 1 to 100:<br/>\t\tlet printed be false;<br/>\t\tif the remainder after dividing N by 3 is 0:<br/>\t\t\tsay \"Fizz\";<br/>\t\t\tnow printed is true;<br/>\t\tif the remainder after dividing N by 5 is 0:<br/>\t\t\tsay \"Buzz\";<br/>\t\t\tnow printed is true;<br/>\t\tif printed is false, say N;<br/>\t\tsay \".\";<br/>\tend the story.</pre>"}, {"lang": "Io", "loc": 11, "block": "<pre class=\"io highlighted_source\"><span class=\"kw1\">for</span><span class=\"br0\">(</span>a,<span class=\"nu0\">1</span>,<span class=\"nu0\">100</span>,<br/>   <span class=\"kw1\">if</span><span class=\"br0\">(</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><span class=\"br0\">(</span><br/>      <span class=\"st0\">\"FizzBuzz\"</span> println<br/>   <span class=\"br0\">)</span> <span class=\"kw1\">elseif</span><span class=\"br0\">(</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><span class=\"br0\">(</span><br/>      <span class=\"st0\">\"Fizz\"</span> println<br/>   <span class=\"br0\">)</span> <span class=\"kw1\">elseif</span><span class=\"br0\">(</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><span class=\"br0\">(</span><br/>      <span class=\"st0\">\"Buzz\"</span> println<br/>   <span class=\"br0\">)</span> <span class=\"kw1\">else</span> <span class=\"br0\">(</span><br/>      a println<br/>   <span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "Ioke", "loc": 7, "block": "<pre class=\"text highlighted_source\">(1..100) each(x,<br/>  cond(<br/>    (x\u00a0% 15) zero?, \"FizzBuzz\" println,<br/>    (x\u00a0% 3) zero?, \"Fizz\" println,<br/>    (x\u00a0% 5) zero?, \"Buzz\" println<br/>  )<br/>)</pre>"}, {"lang": "Iptscrae", "loc": 10, "block": "<pre class=\"text highlighted_source\">; FizzBuzz in Iptscrae<br/>1 a =<br/>{<br/>   \"\" b =<br/>   { \"fizz\" b &amp;= } a 3\u00a0% 0 == IF<br/>   { \"buzz\" b &amp;= } a 5\u00a0% 0 == IF<br/>   { a ITOA LOGMSG } { b LOGMSG } b STRLEN 0 == IFELSE<br/>   a ++<br/>}<br/>{ a 100 &lt;= } WHILE</pre>"}, {"lang": "J", "loc": 4, "block": "<pre class=\"j highlighted_source\">\u00a0<br/>   classify =: +/@<span class=\"sy0\">(</span><span class=\"nu0\">1</span> <span class=\"nu0\">2</span> * <span class=\"nu0\">0</span> = <span class=\"nu0\">3</span> <span class=\"nu0\">5</span>&amp;|~<span class=\"sy0\">)</span><br/>   <span class=\"sy0\">(</span>\":@]`<span class=\"sy0\">(</span><span class=\"st_h\">'Fizz'</span>\"<span class=\"nu0\">_</span><span class=\"sy0\">)</span>`<span class=\"sy0\">(</span><span class=\"st_h\">'Buzz'</span>\"<span class=\"nu0\">_</span><span class=\"sy0\">)</span>`<span class=\"sy0\">(</span><span class=\"st_h\">'FizzBuzz'</span>\"<span class=\"nu0\">_</span><span class=\"sy0\">)</span> @. classify \"<span class=\"nu0\">0</span><span class=\"sy0\">)</span>  &gt;:i.<span class=\"nu0\">100</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 9, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> fizzBuzz <span class=\"sy0\">=</span> <span class=\"kw1\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> i<span class=\"sy0\">,</span> output<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">101</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    output <span class=\"sy0\">=</span> <span class=\"st0\">''</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> output <span class=\"sy0\">+=</span> <span class=\"st0\">'Fizz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> output <span class=\"sy0\">+=</span> <span class=\"st0\">'Buzz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    console.<span class=\"me1\">log</span><span class=\"br0\">(</span>output <span class=\"sy0\">||</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">//empty string is false, so we short-circuit</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "JavaScript", "loc": 9, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> fizzBuzz <span class=\"sy0\">=</span> <span class=\"kw1\">function</span> <span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <span class=\"kw1\">var</span> i<span class=\"sy0\">,</span> output<span class=\"sy0\">;</span><br/>  <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">101</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    output <span class=\"sy0\">=</span> <span class=\"st0\">''</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> output <span class=\"sy0\">+=</span> <span class=\"st0\">'Fizz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> output <span class=\"sy0\">+=</span> <span class=\"st0\">'Buzz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    console.<span class=\"me1\">log</span><span class=\"br0\">(</span>output <span class=\"sy0\">||</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"co1\">//empty string is false, so we short-circuit</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Joy", "loc": 2, "block": "<pre class=\"text highlighted_source\">DEFINE one == [[[dup 15 rem 0 =] \"FizzBuzz\"] [[dup 3 rem 0 =] \"Fizz\"] [[dup 5 rem 0 =] \"Buzz\"] [dup]] cond.<br/>1 [100 &lt;=] [dup one put succ] while.</pre>"}, {"lang": "jq", "loc": 6, "block": "<pre class=\"text highlighted_source\">range(1;101)<br/>  | if   .\u00a0% 15 == 0 then \"FizzBuzz\"<br/>    elif .\u00a0% 5  == 0 then \"Buzz\"<br/>    elif .\u00a0% 3  == 0 then \"Fizz\"<br/>    else .<br/>    end</pre>"}, {"lang": "Julia", "loc": 11, "block": "<pre class=\"text highlighted_source\">for i in 1:100<br/>    if i\u00a0% 15 == 0<br/>        println(\"FizzBuzz\")<br/>    elseif i\u00a0% 3 == 0<br/>        println(\"Fizz\")<br/>    elseif i\u00a0% 5 == 0<br/>        println(\"Buzz\")<br/>    else<br/>        println(i)<br/>    end<br/>end</pre>"}, {"lang": "K", "loc": 1, "block": "<pre class=\"text highlighted_source\">`0:\\:{:[0=#a:{,/$(:[0=x!3;\"Fizz\"];:[0=x!5;\"Buzz\"])}@x;$x;a]}'1_!101</pre>"}, {"lang": "Kamailio Script", "loc": 20, "block": "<pre class=\"text highlighted_source\"># FizzBuzz<br/>log_stderror=yes<br/>loadmodule \"pv\"<br/>loadmodule \"xlog\"<br/>\u00a0<br/>route {<br/>    $var(i) = 1;<br/>    while ($var(i) &lt;= 1000) {<br/>        if ($var(i) mod 15 == 0) {<br/>            xlog(\"FizzBuzz\\n\");<br/>        } else if ($var(i) mod 5 == 0) {<br/>            xlog(\"Buzz\\n\");<br/>        } else if ($var(i) mod 3 == 0) {<br/>            xlog(\"Fizz\\n\");<br/>        } else {<br/>            xlog(\"$var(i)\\n\");<br/>        }<br/>        $var(i) = $var(i) + 1;<br/>    }<br/>}</pre>"}, {"lang": "Kaya", "loc": 20, "block": "<pre class=\"text highlighted_source\">// fizzbuzz in Kaya<br/>program fizzbuzz;<br/>\u00a0<br/>Void fizzbuzz(Int size) {<br/>    for i in [1..size] {<br/>        if (i\u00a0% 15 == 0) {<br/>            putStrLn(\"FizzBuzz\");<br/>        } else if (i\u00a0% 5 == 0) {<br/>            putStrLn(\"Buzz\");<br/>        } else if (i\u00a0% 3 == 0) {<br/>            putStrLn(\"Fizz\");<br/>        } else {<br/>            putStrLn( string(i) );<br/>        }<br/>    }<br/>}<br/>\u00a0<br/>Void main() {<br/>    fizzbuzz(100);<br/>}</pre>"}, {"lang": "Klong", "loc": 3, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>{:[0=x!15;:FizzBuzz:|0=x!5;:Buzz:|0=x!3;:Fizz;x]}'1+!100<br/>\u00a0</pre>"}, {"lang": "Kotlin", "loc": 10, "block": "<pre class=\"scala highlighted_source\">fun fizzBuzz<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">1</span>..<span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        when <span class=\"br0\">{</span><br/>            i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> -<span class=\"sy0\">&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>            i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> -<span class=\"sy0\">&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>            i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> -<span class=\"sy0\">&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> -<span class=\"sy0\">&gt;</span> println<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "LabVIEW", "loc": 2, "block": "<pre class=\"text highlighted_source\">with i in generateSeries(1, 100)<br/>select ((#i\u00a0% 3 == 0\u00a0? 'Fizz' | '') + (#i\u00a0% 5 == 0\u00a0? 'Buzz' | '') || #i)</pre>"}, {"lang": "Lasso", "loc": 2, "block": "<pre class=\"text highlighted_source\">with i in generateSeries(1, 100)<br/>select ((#i\u00a0% 3 == 0\u00a0? 'Fizz' | '') + (#i\u00a0% 5 == 0\u00a0? 'Buzz' | '') || #i)</pre>"}, {"lang": "LaTeX", "loc": 22, "block": "<pre class=\"latex highlighted_source\"><span class=\"sy0\">\\</span><a href=\"http://www.golatex.de/wiki/index.php?title=%5Cdocumentclass\"><span class=\"kw1\">documentclass</span></a><span class=\"sy0\">{</span><span class=\"re9\">minimal<span class=\"sy0\">}</span><br/><span class=\"sy0\">\\</span><a href=\"http://www.golatex.de/wiki/index.php?title=%5Cusepackage\"><span class=\"kw1\">usepackage</span></a><span class=\"sy0\">{</span>ifthen<span class=\"sy0\">}</span><br/><span class=\"sy0\">\\</span><a href=\"http://www.golatex.de/wiki/index.php?title=%5Cusepackage\"><span class=\"kw1\">usepackage</span></a><span class=\"sy0\">{</span>intcalc<span class=\"sy0\">}</span><br/>\u00a0<br/><span class=\"re12\">\\newcounter</span><span class=\"sy0\">{</span>mycount<span class=\"sy0\">}</span><br/><span class=\"re12\">\\newboolean</span>{fizzOrBuzz</span><span class=\"sy0\">}</span><br/>\u00a0<br/><span class=\"sy0\">\\</span><a href=\"http://www.golatex.de/wiki/index.php?title=%5Cnewcommand\"><span class=\"kw1\">newcommand</span></a><span class=\"re12\">\\fizzBuzz</span><span class=\"sy0\">[</span><span class=\"re2\">1</span><span class=\"sy0\">]{</span><span class=\"co1\">%</span><br/><span class=\"re12\">\\setcounter</span><span class=\"sy0\">{</span><span class=\"re9\">mycount}{1}<span class=\"re12\">\\whiledo</span><span class=\"sy0\">{</span><span class=\"re12\">\\value</span><span class=\"sy0\">{</span>mycount<span class=\"sy0\">}</span>&lt;#1<span class=\"sy0\">}</span><br/>    <span class=\"sy0\">{</span><br/>\t<span class=\"re12\">\\setboolean</span><span class=\"sy0\">{</span>fizzOrBuzz<span class=\"sy0\">}{</span>false<span class=\"sy0\">}</span><br/>\t<span class=\"re12\">\\ifthenelse</span><span class=\"sy0\">{</span><span class=\"re12\">\\equal</span><span class=\"sy0\">{</span><span class=\"re12\">\\intcalcMod</span><span class=\"sy0\">{</span><span class=\"re12\">\\themycount</span><span class=\"sy0\">}{</span>3<span class=\"sy0\">}}{</span>0<span class=\"sy0\">}}{</span><span class=\"re12\">\\setboolean</span><span class=\"sy0\">{</span>fizzOrBuzz<span class=\"sy0\">}{</span>true<span class=\"sy0\">}</span>Fizz<span class=\"sy0\">}{}</span><br/>\t<span class=\"re12\">\\ifthenelse</span><span class=\"sy0\">{</span><span class=\"re12\">\\equal</span><span class=\"sy0\">{</span><span class=\"re12\">\\intcalcMod</span><span class=\"sy0\">{</span><span class=\"re12\">\\themycount</span><span class=\"sy0\">}{</span>5<span class=\"sy0\">}}{</span>0<span class=\"sy0\">}}{</span><span class=\"re12\">\\setboolean</span><span class=\"sy0\">{</span>fizzOrBuzz<span class=\"sy0\">}{</span>true<span class=\"sy0\">}</span>Buzz<span class=\"sy0\">}{}</span><br/>\t<span class=\"re12\">\\ifthenelse</span><span class=\"sy0\">{</span><span class=\"re12\">\\boolean</span><span class=\"sy0\">{</span>fizzOrBuzz<span class=\"sy0\">}}{}{</span><span class=\"re12\">\\themycount</span><span class=\"sy0\">}</span><br/>\t<span class=\"re12\">\\stepcounter</span><span class=\"sy0\">{</span>mycount<span class=\"sy0\">}</span><br/>\t<span class=\"sy0\">\\\\</span><br/>    <span class=\"sy0\">}</span><br/><span class=\"sy0\">}</span><br/>\u00a0<br/><span class=\"re8\">\\begin</span><span class=\"sy0\">{</span><span class=\"re7\">document</span><span class=\"sy0\">}</span><br/>    <span class=\"re12\">\\fizzBuzz</span><span class=\"sy0\">{</span>101<span class=\"sy0\">}</span><br/><span class=\"re8\">\\end</span><span class=\"sy0\">{</span><span class=\"re7\">document</span></span><span class=\"sy0\">}</span></pre>"}, {"lang": "Liberty BASIC", "loc": 16, "block": "<pre class=\"text highlighted_source\">repeat with i = 1 to 100<br/>    switch<br/>        case i mod 15 = 0<br/>            put \"FizzBuzz\" &amp; cr after fizzbuzz<br/>            break<br/>        case i mod 5 = 0<br/>            put \"Buzz\" &amp; cr after fizzbuzz<br/>            break<br/>        case i mod 3 = 0<br/>            put \"Fizz\" &amp; cr after fizzbuzz<br/>            break<br/>        default<br/>            put i &amp; cr after fizzbuzz<br/>    end switch <br/>end repeat<br/>put fizzbuzz</pre>"}, {"lang": "LiveCode", "loc": 16, "block": "<pre class=\"text highlighted_source\">repeat with i = 1 to 100<br/>    switch<br/>        case i mod 15 = 0<br/>            put \"FizzBuzz\" &amp; cr after fizzbuzz<br/>            break<br/>        case i mod 5 = 0<br/>            put \"Buzz\" &amp; cr after fizzbuzz<br/>            break<br/>        case i mod 3 = 0<br/>            put \"Fizz\" &amp; cr after fizzbuzz<br/>            break<br/>        default<br/>            put i &amp; cr after fizzbuzz<br/>    end switch <br/>end repeat<br/>put fizzbuzz</pre>"}, {"lang": "LiveScript", "loc": 1, "block": "<pre class=\"text highlighted_source\">[1 to 100] map -&gt; [k + \\zz for k, v of {Fi: 3, Bu: 5} | it\u00a0% v &lt; 1] * '' || it</pre>"}, {"lang": "Lobster", "loc": 6, "block": "<pre class=\"text highlighted_source\">include \"std.lobster\"<br/>\u00a0<br/>forbias(100, 1) i:<br/>    fb\u00a0:= (i\u00a0% 3 == 0 and \"fizz\" or \"\") +<br/>          (i\u00a0% 5 == 0 and \"buzz\" or \"\")<br/>    print fb.length and fb or \"\" + i</pre>"}, {"lang": "Logo", "loc": 8, "block": "<pre class=\"text highlighted_source\">to fizzbuzz\u00a0:n<br/>  output cond [ [[equal? 0 modulo\u00a0:n 15] \"FizzBuzz]<br/>                [[equal? 0 modulo\u00a0:n  5] \"Buzz]<br/>                [[equal? 0 modulo\u00a0:n  3] \"Fizz]<br/>                [else\u00a0:n] ]<br/>end<br/>\u00a0<br/>repeat 100 [print fizzbuzz #]</pre>"}, {"lang": "LOLCODE", "loc": 9, "block": "<pre class=\"text highlighted_source\">1* FIZZBUZZ en L.S.E. <br/>10 CHAINE FB<br/>20 FAIRE 45 POUR I_1 JUSQUA 100 <br/>30 FB_SI &amp;MOD(I,3)=0 ALORS SI &amp;MOD(I,5)=0 ALORS 'FIZZBUZZ' SINON 'FIZZ' SINON SI &amp;MOD(I,5)=0 ALORS 'BUZZ' SINON ''<br/>40 AFFICHER[U,/] SI FB='' ALORS I SINON FB<br/>45*FIN BOUCLE<br/>50 TERMINER<br/>100 PROCEDURE &amp;MOD(A,B) LOCAL A,B<br/>110 RESULTAT A-B*ENT(A/B)</pre>"}, {"lang": "LSE", "loc": 9, "block": "<pre class=\"text highlighted_source\">1* FIZZBUZZ en L.S.E. <br/>10 CHAINE FB<br/>20 FAIRE 45 POUR I_1 JUSQUA 100 <br/>30 FB_SI &amp;MOD(I,3)=0 ALORS SI &amp;MOD(I,5)=0 ALORS 'FIZZBUZZ' SINON 'FIZZ' SINON SI &amp;MOD(I,5)=0 ALORS 'BUZZ' SINON ''<br/>40 AFFICHER[U,/] SI FB='' ALORS I SINON FB<br/>45*FIN BOUCLE<br/>50 TERMINER<br/>100 PROCEDURE &amp;MOD(A,B) LOCAL A,B<br/>110 RESULTAT A-B*ENT(A/B)</pre>"}, {"lang": "Lua", "loc": 11, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>\t<span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>\t\t<span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">elseif</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>\t\t<span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">elseif</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>\t\t<span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>\t<span class=\"kw1\">else</span><br/>\t\t<span class=\"kw3\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>\t<span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Luck", "loc": 6, "block": "<pre class=\"text highlighted_source\">for i in range(1,101) do (<br/>   if i%15 == 0 then print(\"FizzBuzz\")<br/>   else if i%3 == 0 then print(\"Fizz\")<br/>   else if i%5 == 0 then print(\"Buzz\")<br/>   else print(i)<br/>)</pre>"}, {"lang": "M4", "loc": 10, "block": "<pre class=\"text highlighted_source\">define(`for',<br/>   `ifelse($#,0,``$0'',<br/>   `ifelse(eval($2&lt;=$3),1,<br/>   `pushdef(`$1',$2)$5`'popdef(`$1')$0(`$1',eval($2+$4),$3,$4,`$5')')')')<br/>\u00a0<br/>for(`x',1,100,1,<br/>   `ifelse(eval(x%15==0),1,FizzBuzz,<br/>   `ifelse(eval(x%3==0),1,Fizz,<br/>   `ifelse(eval(x%5==0),1,Buzz,x)')')<br/>')</pre>"}, {"lang": "M2000 Interpreter", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>\\\\ one line, hard to read<br/>For i=1 to 100 {  If i mod 3=0 Then {if i mod 2=0 Then {Print \"FizzBuzz\" } Else Print \"Fizz\"} Else {if i mod 2=0 Then Print \"Buzz\"}}<br/>\u00a0<br/>\\\\ Better code<br/>For i=1 to 100 {<br/>      Push if$(i mod 3=0-&gt;\"Fizz\",\"\")+if$(i mod 2=0-&gt;\"Buzz\",\"\")<br/>      If stackitem$()=\"\" then Drop\u00a0: Continue<br/>      Print Letter$<br/>}<br/>\u00a0<br/>\\\\ Far Better Code<br/>For i=1 to 100 {<br/>      Printme(if$(i mod 3=0-&gt;\"Fizz\",\"\")+if$(i mod 2=0-&gt;\"Buzz\",\"\"))      <br/>}<br/>Sub Printme(a$)<br/>      If a$&lt;&gt;\"\" Then Print a$<br/>End Sub<br/>\u00a0</pre>"}, {"lang": "make", "loc": 28, "block": "<pre class=\"make highlighted_source\">MOD3 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>MOD5 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>ALL <span class=\"sy0\">!=</span> jot <span class=\"nu0\">100</span><br/>\u00a0<br/>all<span class=\"sy0\">:</span> say<span class=\"sy0\">-</span><span class=\"nu0\">100</span><br/>\u00a0<br/><span class=\"sy0\">.</span>for NUMBER in <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">ALL</span><span class=\"br0\">)</span><br/>\u00a0<br/>MOD3 <span class=\"sy0\">!=</span> expr \\<span class=\"br0\">(</span> <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">MOD3</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> \\<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> true<br/>MOD5 <span class=\"sy0\">!=</span> expr \\<span class=\"br0\">(</span> <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">MOD5</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> \\<span class=\"br0\">)</span> <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> true<br/>\u00a0<br/><span class=\"sy0\">.</span> if <span class=\"st0\">\"$(NUMBER)\"</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><br/>PRED <span class=\"sy0\">!=</span> expr <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">NUMBER</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><br/>say<span class=\"sy0\">-$</span><span class=\"br0\">(</span><span class=\"re2\">NUMBER</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> say<span class=\"sy0\">-$</span><span class=\"br0\">(</span><span class=\"re2\">PRED</span><span class=\"br0\">)</span><br/><span class=\"sy0\">.</span> <span class=\"kw1\">else</span><br/>say<span class=\"sy0\">-$</span><span class=\"br0\">(</span><span class=\"re2\">NUMBER</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><br/><span class=\"sy0\">.</span> <span class=\"kw1\">endif</span><br/><span class=\"sy0\">.</span> if <span class=\"st0\">\"$(MOD3)$(MOD5)\"</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"00\"</span><br/>\t<span class=\"sy0\">@</span>echo FizzBuzz<br/><span class=\"sy0\">.</span> elif <span class=\"st0\">\"$(MOD3)\"</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"0\"</span><br/>\t<span class=\"sy0\">@</span>echo Fizz<br/><span class=\"sy0\">.</span> elif <span class=\"st0\">\"$(MOD5)\"</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"0\"</span><br/>\t<span class=\"sy0\">@</span>echo Buzz<br/><span class=\"sy0\">.</span> <span class=\"kw1\">else</span><br/>\t<span class=\"sy0\">@</span>echo <span class=\"sy0\">$</span><span class=\"br0\">(</span><span class=\"re2\">NUMBER</span><span class=\"br0\">)</span><br/><span class=\"sy0\">.</span> <span class=\"kw1\">endif</span><br/>\u00a0<br/><span class=\"sy0\">.</span>endfor</pre>"}, {"lang": "Maple", "loc": 1, "block": "<pre class=\"text highlighted_source\">seq(print(`if`(modp(n,3)=0,`if`(modp(n,15)=0,\"FizzBuzz\",\"Fizz\"),`if`(modp(n,5)=0,\"Buzz\",n))),n=1..100):</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 1, "block": "<pre class=\"text highlighted_source\">Do[Print[Which[Mod[i, 15] == 0, \"FizzBuzz\", Mod[i, 5] == 0, \"Buzz\", Mod[i, 3] == 0, \"Fizz\", True, i]], {i, 100}]</pre>"}, {"lang": "MATLAB", "loc": 14, "block": "<pre class=\"matlab highlighted_source\"><span class=\"kw1\">function</span> fizzBuzz<span class=\"br0\">(</span><span class=\"br0\">)</span> <br/>    <span class=\"kw1\">for</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/i.html\"><span class=\"kw2\"><span class=\"re0\">i</span></span></a> = <span class=\"br0\">(</span><span class=\"nu0\">1</span>:<span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">if</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/mod.html\"><span class=\"kw2\">mod</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/i.html\"><span class=\"kw2\"><span class=\"re0\">i</span></span></a>,<span class=\"nu0\">15</span><span class=\"br0\">)</span> == <span class=\"nu0\">0</span><br/>           <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'FizzBuzz '</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">elseif</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/mod.html\"><span class=\"kw2\">mod</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/i.html\"><span class=\"kw2\"><span class=\"re0\">i</span></span></a>,<span class=\"nu0\">3</span><span class=\"br0\">)</span> == <span class=\"nu0\">0</span><br/>           <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Fizz '</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">elseif</span> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/mod.html\"><span class=\"kw2\">mod</span></a><span class=\"br0\">(</span><a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/i.html\"><span class=\"kw2\"><span class=\"re0\">i</span></span></a>,<span class=\"nu0\">5</span><span class=\"br0\">)</span> == <span class=\"nu0\">0</span><br/>           <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'Buzz '</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span><br/>           <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'%i '</span>,<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/i.html\"><span class=\"kw2\"><span class=\"re0\">i</span></span></a><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>        <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fprintf.html\"><span class=\"kw2\">fprintf</span></a><span class=\"br0\">(</span><span class=\"co2\">'\\n'</span><span class=\"br0\">)</span>;    <br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Maxima", "loc": 5, "block": "<pre class=\"text highlighted_source\">for n thru 100 do<br/>   if mod(n, 15) = 0 then disp(\"FizzBuzz\")<br/>   elseif mod(n, 3) = 0 then disp(\"Fizz\")<br/>   elseif mod(n,5) = 0 then disp(\"Buzz\")<br/>   else disp(n);</pre>"}, {"lang": "MAXScript", "loc": 10, "block": "<pre class=\"text highlighted_source\">for i in 1 to 100 do<br/>(<br/>    case of<br/>    (<br/>        (mod i 15 == 0): (print \"FizzBuzz\")<br/>        (mod i 5 == 0):  (print \"Buzz\")<br/>        (mod i 3 == 0):  (print \"Fizz\")<br/>        default:         (print i)<br/>    )<br/>)</pre>"}, {"lang": "MEL", "loc": 11, "block": "<pre class=\"text highlighted_source\">for($i=1; $i&lt;=100; $i++)<br/>{    <br/>    if($i\u00a0% 15 == 0)<br/>        print \"FizzBuzz\\n\";<br/>    else if ($i\u00a0% 3 == 0)<br/>        print \"Fizz\\n\";<br/>    else if ($i\u00a0% 5 == 0) <br/>        print \"Buzz\\n\";<br/>    else<br/>        print ($i + \"\\n\");<br/>}</pre>"}, {"lang": "Mercury", "loc": 32, "block": "<pre class=\"text highlighted_source\">:- module fizzbuzz.<br/>\u00a0<br/>:- interface.<br/>\u00a0<br/>:- import_module io.<br/>\u00a0<br/>:- pred main(io::di, io::uo) is det.<br/>\u00a0<br/>:- implementation.<br/>\u00a0<br/>:- import_module int, string, bool.<br/>\u00a0<br/>:- func fizz(int) = bool.<br/>fizz(N) = ( if N mod 3 = 0 then yes else no ).<br/>\u00a0<br/>:- func buzz(int) = bool.<br/>buzz(N) = ( if N mod 5 = 0 then yes else no ).<br/>\u00a0<br/>%                N    3?    5?<br/>:- func fizzbuzz(int, bool, bool) = string.<br/>fizzbuzz(_, yes, yes) = \"FizzBuzz\".<br/>fizzbuzz(_, yes, no)  = \"Fizz\".<br/>fizzbuzz(_, no,  yes) = \"Buzz\".<br/>fizzbuzz(N, no,  no)  = from_int(N).<br/>\u00a0<br/>main(!IO)\u00a0:- main(1, 100,\u00a0!IO).<br/>\u00a0<br/>:- pred main(int::in, int::in, io::di, io::uo) is det.<br/>main(N, To,\u00a0!IO)\u00a0:-<br/>  io.write_string(fizzbuzz(N, fizz(N), buzz(N)),\u00a0!IO), io.nl(!IO),<br/>  ( N &lt; To -&gt; main(N + 1, To,\u00a0!IO)<br/> \u00a0;          \u00a0!:IO =\u00a0!.IO ).</pre>"}, {"lang": "Metafont", "loc": 7, "block": "<pre class=\"text highlighted_source\">for i\u00a0:= 1 upto 100:<br/>message if i mod 15 = 0: \"FizzBuzz\" &amp;<br/>elseif i mod 3 = 0: \"Fizz\" &amp;<br/>elseif i mod 5 = 0: \"Buzz\" &amp;<br/>else: decimal i &amp; fi \"\";<br/>endfor<br/>end</pre>"}, {"lang": "Microsoft Small Basic", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>For n = 1 To 100<br/>  op = \"\"<br/>  If Math.Remainder(n, 3) = 0 Then<br/>    op = \"Fizz\"<br/>  EndIf  <br/>  IF Math.Remainder(n, 5) = 0 Then<br/>    op = text.Append(op, \"Buzz\")<br/>  EndIf<br/>  If op = \"\" Then <br/>    TextWindow.WriteLine(n)<br/>  Else <br/>    TextWindow.WriteLine(op)<br/>  EndIf  <br/>EndFor<br/>\u00a0</pre>"}, {"lang": "MIPS Assembly", "loc": 76, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#################################<br/># Fizz Buzz                     #<br/># MIPS Assembly targetings MARS #<br/># By Keith Stellyes             #<br/># August 24, 2016               #<br/>#################################<br/>\u00a0<br/># $a0 left alone for printing<br/># $a1 stores our counter<br/># $a2 is 1 if not evenly divisible<br/>\u00a0<br/>.data<br/>\tfizz: .asciiz \"Fizz\\n\"<br/>\tbuzz: .asciiz \"Buzz\\n\"<br/>\tfizzbuzz: .asciiz \"FizzBuzz\\n\"<br/>\tnewline: .asciiz \"\\n\"<br/>\u00a0<br/>.text<br/>loop:<br/>\tbeq $a1,100,exit<br/>\tadd $a1,$a1,1<br/>\u00a0<br/>\t#test for counter mod 15 (\"FIZZBUZZ\")<br/>\tdiv $a2,$a1,15<br/>\tmfhi $a2<br/>\tbnez $a2,loop_not_fb #jump past the fizzbuzz print logic if NOT MOD 15<br/>\u00a0<br/>#### PRINT FIZZBUZZ: ####<br/>\tli $v0,4 #set syscall arg to PRINT_STRING<br/>\tla $a0,fizzbuzz #set the PRINT_STRING arg to fizzbuzz<br/>\tsyscall #call PRINT_STRING<br/>\tj loop #return to start<br/>#### END PRINT FIZZBUZZ ####<br/>\u00a0<br/>loop_not_fb:\t<br/>\tdiv $a2,$a1,3 #divide $a1 (our counter) by 3 and store remainder in HI<br/>\tmfhi $a2 #retrieve remainder (result of MOD)<br/>\tbnez $a2, loop_not_f #jump past the fizz print logic if NOT MOD 3<br/>\u00a0<br/>#### PRINT FIZZ ####<br/>\tli $v0,4 <br/>\tla $a0,fizz<br/>\tsyscall<br/>\tj loop<br/>#### END PRINT FIZZ ####<br/>\u00a0<br/>loop_not_f:<br/>\tdiv $a2,$a1,5<br/>\tmfhi $a2<br/>\tbnez $a2,loop_not_b<br/>\u00a0<br/>#### PRINT BUZZ ####<br/>\tli $v0,4 <br/>\tla $a0,buzz<br/>\tsyscall<br/>\tj loop<br/>#### END PRINT BUZZ ####<br/>\u00a0<br/>loop_not_b:<br/>\t#### PRINT THE INTEGER ####<br/>\tli $v0,1 #set syscall arg to PRINT_INTEGER<br/>\tmove $a0,$a1 #set PRINT_INTEGER arg to contents of $a1<br/>\tsyscall #call PRINT_INTEGER<br/>\u00a0<br/>\t### PRINT THE NEWLINE CHAR ###<br/>\tli $v0,4 #set syscall arg to PRINT_STRING<br/>\tla $a0,newline<br/>\tsyscall<br/>\u00a0<br/>\tj loop #return to beginning<br/>\u00a0<br/>exit:<br/>\tli $v0,10<br/>\tsyscall<br/>\u00a0</pre>"}, {"lang": "Mirah", "loc": 6, "block": "<pre class=\"text highlighted_source\">1.upto(100) do |n|<br/>    print \"Fizz\" if a = ((n\u00a0% 3) == 0)<br/>    print \"Buzz\" if b = ((n\u00a0% 5) == 0) <br/>    print n unless (a || b)<br/>    print \"\\n\"<br/>end</pre>"}, {"lang": "ML", "loc": 14, "block": "<pre class=\"text highlighted_source\">local<br/>  fun fbstr i =<br/>      case (i mod 3 = 0, i mod 5 = 0) of<br/>          (true , true ) =&gt; \"FizzBuzz\"<br/>        | (true , false) =&gt; \"Fizz\"<br/>        | (false, true ) =&gt; \"Buzz\"<br/>        | (false, false) =&gt; Int.toString i<br/>\u00a0<br/>  fun fizzbuzz' (n, j) =<br/>      if n = j then () else (print (fbstr j ^ \"\\n\"); fizzbuzz' (n, j+1))<br/>in<br/>  fun fizzbuzz n = fizzbuzz' (n, 1)<br/>  val _ = fizzbuzz 100<br/>end</pre>"}, {"lang": "MMIX", "loc": 63, "block": "<pre class=\"mmix highlighted_source\">t   <span class=\"kw2\">IS</span> <span class=\"nu3\">$255</span><br/>Ja  <span class=\"kw2\">IS</span> <span class=\"nu3\">$127</span><br/>\u00a0<br/>       <span class=\"kw2\">LOC</span> Data_Segment<br/>data   <span class=\"kw2\">GREG</span>   @<br/>\u00a0<br/>fizz   <span class=\"kw2\">IS</span> @<span class=\"sy0\">-</span>Data_Segment<br/>       <span class=\"kw2\">BYTE</span> <span class=\"st0\">\"Fizz\"</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\u00a0<br/>buzz   <span class=\"kw2\">IS</span> @<span class=\"sy0\">-</span>Data_Segment<br/>       <span class=\"kw2\">BYTE</span> <span class=\"st0\">\"Buzz\"</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\u00a0<br/>nl     <span class=\"kw2\">IS</span> @<span class=\"sy0\">-</span>Data_Segment<br/>       <span class=\"kw2\">BYTE</span> <span class=\"nu2\">#a</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\u00a0<br/>buffer <span class=\"kw2\">IS</span> @<span class=\"sy0\">-</span>Data_Segment<br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>       <span class=\"kw2\">LOC</span> <span class=\"nu2\">#1000</span><br/>       <span class=\"kw2\">GREG</span> @<br/><span class=\"co3\"><br/>% \"usual\" print integer subroutine</span><br/>printnum <span class=\"kw2\">LOC</span> @<br/>       <span class=\"kw1\">OR</span>   <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>       <span class=\"kw1\">SETL</span> <span class=\"nu3\">$2</span><span class=\"sy0\">,</span>buffer<span class=\"sy0\">+</span><span class=\"nu1\">64</span><br/>       <span class=\"kw1\">ADDU</span> <span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span>data<br/>       <span class=\"kw1\">XOR</span>  <span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$3</span><br/>       <span class=\"kw1\">STBU</span> <span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>loop   <span class=\"kw1\">DIV</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">10</span><br/>       <span class=\"kw1\">GET</span>  <span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"kw3\">rR</span><br/>       <span class=\"kw1\">ADDU</span> <span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"st0\">'0'</span><br/>       <span class=\"kw1\">STBU</span> <span class=\"nu3\">$3</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>       <span class=\"kw1\">SUBU</span> <span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>       <span class=\"kw1\">PBNZ</span> <span class=\"nu3\">$1</span><span class=\"sy0\">,</span>loop<br/>       <span class=\"kw1\">ADDU</span> t<span class=\"sy0\">,</span><span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>       <span class=\"kw1\">TRAP</span> <span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut<br/>       <span class=\"kw1\">GO</span>   Ja<span class=\"sy0\">,</span>Ja<span class=\"sy0\">,</span><span class=\"nu1\">0</span><br/>\u00a0<br/>Main   <span class=\"kw1\">SETL</span> <span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span>           <span class=\"co2\">% i = 1</span><br/>1H     <span class=\"kw1\">SETL</span> <span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">0</span>           <span class=\"co2\">% fizz not taken</span><br/>       <span class=\"kw1\">CMP</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">100</span>      <span class=\"co2\">% i &lt;= 100</span><br/>       <span class=\"kw1\">BP</span>   <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">4F</span>          <span class=\"co2\">% if no, go to end</span><br/>       <span class=\"kw1\">DIV</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">3</span><br/>       <span class=\"kw1\">GET</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"kw3\">rR</span>          <span class=\"co2\">% $1 = mod(i,3)</span><br/>       <span class=\"kw1\">CSZ</span>  <span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span>        <span class=\"co2\">% $2 = Fizz taken?</span><br/>       <span class=\"kw1\">BNZ</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">2F</span>          <span class=\"co2\">% $1\u00a0!= 0? yes, then skip</span><br/>       <span class=\"kw1\">ADDU</span> t<span class=\"sy0\">,</span>data<span class=\"sy0\">,</span>fizz<br/>       <span class=\"kw1\">TRAP</span> <span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut <span class=\"co2\">% print \"Fizz\"</span><br/>2H     <span class=\"kw1\">DIV</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">5</span><br/>       <span class=\"kw1\">GET</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"kw3\">rR</span>          <span class=\"co2\">% $1 = mod(i,5)</span><br/>       <span class=\"kw1\">BNZ</span>  <span class=\"nu3\">$1</span><span class=\"sy0\">,</span><span class=\"nu1\">3F</span>          <span class=\"co2\">% $1\u00a0!= 0? yes, then skip</span><br/>       <span class=\"kw1\">ADDU</span> t<span class=\"sy0\">,</span>data<span class=\"sy0\">,</span>buzz<br/>       <span class=\"kw1\">TRAP</span> <span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut <span class=\"co2\">% print \"Buzz\"</span><br/>       <span class=\"kw1\">JMP</span>  <span class=\"nu1\">5F</span>             <span class=\"co2\">% skip print i</span><br/>3H     <span class=\"kw1\">BP</span>   <span class=\"nu3\">$2</span><span class=\"sy0\">,</span><span class=\"nu1\">5F</span>          <span class=\"co2\">% skip if Fizz was taken</span><br/>       <span class=\"kw1\">GO</span>   Ja<span class=\"sy0\">,</span>printnum    <span class=\"co2\">% print i</span><br/>5H     <span class=\"kw1\">ADDU</span> t<span class=\"sy0\">,</span>data<span class=\"sy0\">,</span>nl<br/>       <span class=\"kw1\">TRAP</span> <span class=\"nu1\">0</span><span class=\"sy0\">,</span>Fputs<span class=\"sy0\">,</span>StdOut <span class=\"co2\">% print newline</span><br/>       <span class=\"kw1\">ADDU</span> <span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu3\">$0</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><br/>       <span class=\"kw1\">JMP</span>  <span class=\"nu1\">1B</span>             <span class=\"co2\">% repeat for next i</span><br/>4H     <span class=\"kw1\">XOR</span>  t<span class=\"sy0\">,</span>t<span class=\"sy0\">,</span>t<br/>       <span class=\"kw1\">TRAP</span> <span class=\"nu1\">0</span><span class=\"sy0\">,</span>Halt<span class=\"sy0\">,</span><span class=\"nu1\">0</span>       <span class=\"co2\">% exit(0)</span></pre>"}, {"lang": "Modula-2", "loc": 46, "block": "<pre class=\"modula2 highlighted_source\"><span class=\"kw1\">MODULE</span> Fizzbuzz;<br/><span class=\"kw1\">FROM</span> FormatString <span class=\"kw1\">IMPORT</span> FormatString;<br/><span class=\"kw1\">FROM</span> Terminal <span class=\"kw1\">IMPORT</span> WriteString<span class=\"sy0\">,</span>WriteLn<span class=\"sy0\">,</span>ReadChar;<br/>\u00a0<br/><span class=\"kw1\">TYPE</span> CB <span class=\"sy0\">=</span> <span class=\"kw1\">PROCEDURE</span><span class=\"br0\">(</span><span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Fizz<span class=\"br0\">(</span>n <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">IF</span> n <span class=\"kw1\">MOD</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        WriteString<span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span>;<br/>        Buzz<span class=\"br0\">(</span>n<span class=\"sy0\">,</span>Newline<span class=\"br0\">)</span><br/>    <span class=\"kw1\">ELSE</span><br/>        Buzz<span class=\"br0\">(</span>n<span class=\"sy0\">,</span>WriteInt<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span><br/><span class=\"kw1\">END</span> Fizz;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Buzz<span class=\"br0\">(</span>n <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>; f <span class=\"sy0\">:</span> CB<span class=\"br0\">)</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">IF</span> n <span class=\"kw1\">MOD</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>        WriteString<span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span>;<br/>        WriteLn<br/>    <span class=\"kw1\">ELSE</span><br/>        f<span class=\"br0\">(</span>n<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span><br/><span class=\"kw1\">END</span> Buzz;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> WriteInt<span class=\"br0\">(</span>n <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">VAR</span> buf <span class=\"sy0\">:</span> <span class=\"kw1\">ARRAY</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>..<span class=\"nu0\">9</span><span class=\"br0\">]</span> <span class=\"kw1\">OF</span> <span class=\"kw4\">CHAR</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    FormatString<span class=\"br0\">(</span><span class=\"st0\">\"%i<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> buf<span class=\"sy0\">,</span> n<span class=\"br0\">)</span>;<br/>    WriteString<span class=\"br0\">(</span>buf<span class=\"br0\">)</span><br/><span class=\"kw1\">END</span> WriteInt;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Newline<span class=\"br0\">(</span>n <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    WriteLn<br/><span class=\"kw1\">END</span> Newline;<br/>\u00a0<br/><span class=\"kw1\">VAR</span> i <span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">FOR</span> i<span class=\"sy0\">:=</span><span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">30</span> <span class=\"kw1\">DO</span><br/>        Fizz<span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span>;<br/>\u00a0<br/>    ReadChar<br/><span class=\"kw1\">END</span> Fizzbuzz.</pre>"}, {"lang": "Modula-3", "loc": 18, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> Fizzbuzz <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">IMPORT</span> IO;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>   <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">100</span> <span class=\"kw1\">DO</span> <br/>      <span class=\"kw1\">IF</span> i <span class=\"kw1\">MOD</span> <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <br/>         IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">ELSIF</span> i <span class=\"kw1\">MOD</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>         IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">ELSIF</span> i <span class=\"kw1\">MOD</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <br/>         IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">ELSE</span> <br/>         IO.<span class=\"me1\">PutInt</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>;<br/>         IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">END</span>;<br/>   <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> Fizzbuzz.</pre>"}, {"lang": "Monte", "loc": 14, "block": "<pre class=\"text highlighted_source\">def fizzBuzz(top):<br/>    var t\u00a0:= 1<br/>    while (t &lt; top):<br/>        if ((t\u00a0% 3 == 0) || (t\u00a0% 5 == 0)):<br/>            if (t\u00a0% 15 == 0):<br/>                traceln(`$t  FizzBuzz`)<br/>            else if (t\u00a0% 3 == 0):<br/>                traceln(`$t  Fizz`)<br/>            else:<br/>                traceln(`$t  Buzz`)<br/>        t += 1<br/>\u00a0<br/>fizzBuzz(100)<br/>\u00a0</pre>"}, {"lang": "MontiLang", "loc": 23, "block": "<pre class=\"text highlighted_source\">&amp;DEFINE LOOP 100&amp;<br/>1 VAR i .<br/>\u00a0<br/>FOR LOOP<br/>    || VAR ln .<br/>    i 5\u00a0% 0 == <br/>    IF\u00a0: .<br/>        ln |Buzz| + VAR ln .<br/>    ENDIF<br/>    i 3\u00a0% 0 ==<br/>    IF\u00a0: .<br/>        ln |Fizz| + VAR ln .<br/>    ENDIF<br/>    ln || ==<br/>    IF\u00a0: .<br/>        i PRINT .<br/>    ENDIF<br/>    ln ||\u00a0!=<br/>    IF\u00a0: .<br/>        ln PRINT .<br/>    ENDIF<br/>i 1 + VAR i .<br/>ENDFOR</pre>"}, {"lang": "MoonScript", "loc": 4, "block": "<pre class=\"text highlighted_source\">for i = 1,100<br/>    print ((a) -&gt; a == \"\" and i or a) table.concat {<br/>        i\u00a0% 3 == 0 and \"Fizz\" or \"\"<br/>        i\u00a0% 5 == 0 and \"Buzz\" or \"\"}</pre>"}, {"lang": "MUMPS", "loc": 5, "block": "<pre class=\"text highlighted_source\">FIZZBUZZ<br/> NEW I<br/> FOR I=1:1:100 WRITE\u00a0!,$SELECT(('(I#3)&amp;'(I#5)):\"FizzBuzz\",'(I#5):\"Buzz\",'(I#3):\"Fizz\",1:I)<br/> KILL I<br/> QUIT</pre>"}, {"lang": "Neko", "loc": 15, "block": "<pre class=\"text highlighted_source\">var i = 1<br/>\u00a0<br/>while(i &lt; 100) {<br/>\tif(i\u00a0% 15 == 0) {<br/>\t\t$print(\"FizzBuzz\\n\");<br/>\t} else if(i\u00a0% 3 == 0) {<br/>\t\t$print(\"Fizz\\n\");<br/>\t} else if(i\u00a0% 5 == 0) {<br/>\t\t$print(\"Buzz\\n\");<br/>\t} else {<br/>\t\t$print(i + \"\\n\");<br/>\t}<br/>\u00a0<br/>\ti ++= 1<br/>}</pre>"}, {"lang": "Nemerle", "loc": 19, "block": "<pre class=\"text highlighted_source\">using System;<br/>using System.Console;<br/>\u00a0<br/>module FizzBuzz<br/>{<br/>    FizzBuzz(x\u00a0: int)\u00a0: string<br/>    {<br/>        |x when x\u00a0% 15 == 0 =&gt; \"FizzBuzz\"<br/>        |x when x\u00a0%  5 == 0 =&gt; \"Buzz\"<br/>        |x when x\u00a0%  3 == 0 =&gt; \"Fizz\"<br/>        |_                  =&gt; $\"$x\"<br/>    }<br/>\u00a0<br/>    Main()\u00a0: void<br/>    {<br/>        foreach (i in [1 .. 100])<br/>            WriteLine($\"$(FizzBuzz(i))\")<br/>    }<br/>}</pre>"}, {"lang": "NetRexx", "loc": 8, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"kw1\">loop</span> j=<span class=\"nu0\">1</span> for <span class=\"nu0\">100</span><br/>  <span class=\"kw1\">select</span><br/>    <span class=\"kw3\">when</span> j<span class=\"sy0\">//</span><span class=\"nu0\">15</span>==<span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">'FizzBuzz'</span><br/>    <span class=\"kw3\">when</span> j<span class=\"sy0\">//</span><span class=\"nu0\">5</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">'Buzz'</span><br/>    <span class=\"kw3\">when</span> j<span class=\"sy0\">//</span><span class=\"nu0\">3</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">'Fizz'</span><br/>    <span class=\"kw3\">otherwise</span> <span class=\"kw1\">say</span> j.<span class=\"kw6\">right</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">end</span><br/><span class=\"kw3\">end</span></pre>"}, {"lang": "NewLISP", "loc": 7, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#dotimes\"><span class=\"kw1\">dotimes</span></a> <span class=\"br0\">(</span>i <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a><br/>   <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#cond\"><span class=\"kw1\">cond</span></a><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy1\">%</span> i <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy1\">%</span> i <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy1\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"sy1\">%</span> i <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"re5\">'t</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "NewtonScript", "loc": 12, "block": "<pre class=\"text highlighted_source\">for i\u00a0:= 1 to 100 do<br/>begin<br/>\tif i mod 15 = 0 then<br/>\t\tprint(\"FizzBuzz\")<br/>\telse if i mod 3 = 0 then<br/>\t\tprint(\"Fizz\")<br/>\telse if i mod 5 = 0 then<br/>\t\tprint(\"Buzz\")<br/>\telse<br/>\t\tprint(i);<br/>\tprint(\"\\n\")<br/>end</pre>"}, {"lang": "Nickle", "loc": 12, "block": "<pre class=\"text highlighted_source\">/* Fizzbuzz in nickle */<br/>\u00a0<br/>void function fizzbuzz(size) {<br/>    for (int i = 1; i &lt; size; i++) {<br/>        if (i\u00a0% 15 == 0) { printf(\"Fizzbuzz\\n\"); }<br/>        else if (i\u00a0% 5 == 0) { printf(\"Buzz\\n\"); }<br/>        else if (i\u00a0% 3 == 0) { printf(\"Fizz\\n\"); }<br/>        else { printf(\"%i\\n\", i); }<br/>    }<br/>}<br/>\u00a0<br/>fizzbuzz(1000);</pre>"}, {"lang": "Nim", "loc": 9, "block": "<pre class=\"text highlighted_source\">for i in 1..100:<br/>  if i mod 15 == 0:<br/>    echo(\"FizzBuzz\")<br/>  elif i mod 3 == 0:<br/>    echo(\"Fizz\")<br/>  elif i mod 5 == 0:<br/>    echo(\"Buzz\")<br/>  else:<br/>    echo(i)</pre>"}, {"lang": "Oberon-2", "loc": 23, "block": "<pre class=\"oberon2 highlighted_source\"><span class=\"kw1\">MODULE</span> FizzBuzz;<br/>\u00a0<br/>   <span class=\"kw1\">IMPORT</span> Out;<br/>\u00a0<br/>   <span class=\"kw1\">VAR</span> i<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>   <span class=\"kw1\">FOR</span> i <span class=\"sy0\">:=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">100</span> <span class=\"kw1\">DO</span> <br/>      <span class=\"kw1\">IF</span> i <span class=\"kw1\">MOD</span> <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <br/>         Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span>;<br/>         Out.<span class=\"me1\">Ln</span>;<br/>      <span class=\"kw1\">ELSIF</span> i <span class=\"kw1\">MOD</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span><br/>         Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span>;<br/>         Out.<span class=\"me1\">Ln</span>;<br/>      <span class=\"kw1\">ELSIF</span> i <span class=\"kw1\">MOD</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <br/>         Out.<span class=\"me1\">String</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span>;<br/>         Out.<span class=\"me1\">Ln</span>;<br/>      <span class=\"kw1\">ELSE</span> <br/>         Out.<span class=\"me1\">Int</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>;<br/>         Out.<span class=\"me1\">Ln</span>;<br/>      <span class=\"kw1\">END</span>;<br/>   <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> FizzBuzz.</pre>"}, {"lang": "Objeck", "loc": 20, "block": "<pre class=\"objeck highlighted_source\"><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> Fizz <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">for</span><span class=\"br0\">(</span>i <span class=\"sy0\">:=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"st0\">\"FizzBuzz\"</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"st0\">\"Fizz\"</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span>  <br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>          <span class=\"st0\">\"Buzz\"</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>          i<span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Objective-C", "loc": 16, "block": "<pre class=\"c highlighted_source\"><span class=\"co1\">// FizzBuzz in Objective-C</span><br/><span class=\"co2\">#import &lt;stdio.h&gt;</span><br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;=</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Fizz<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Buzz<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t\t    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%i<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "OCaml", "loc": 9, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"kw1\">let</span> fizzbuzz i <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">match</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span>, i <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"kw1\">with</span><br/>    <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>  <span class=\"sy0\">|</span> <span class=\"nu0\">0</span>, _ <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"Fizz\"</span><br/>  <span class=\"sy0\">|</span> _, <span class=\"nu0\">0</span> <span class=\"sy0\">-&gt;</span> <span class=\"st0\">\"Buzz\"</span><br/>  <span class=\"sy0\">|</span> _    <span class=\"sy0\">-&gt;</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALstring_of_int\"><span class=\"kw3\">string_of_int</span></a> i<br/>\u00a0<br/><span class=\"kw1\">let</span> _ <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALprint_endline\"><span class=\"kw3\">print_endline</span></a> <span class=\"br0\">(</span>fizzbuzz i<span class=\"br0\">)</span> <span class=\"kw1\">done</span></pre>"}, {"lang": "Octave", "loc": 11, "block": "<pre class=\"octave highlighted_source\"><span class=\"kw4\">for</span> <a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a> <span class=\"sy3\">=</span> <span class=\"nu0\">1</span><span class=\"sy4\">:</span><span class=\"nu0\">100</span><br/>  <span class=\"kw4\">if</span> <span class=\"br0\">(</span> <a href=\"http://octave.sourceforge.net/octave/function/mod.html\"><span class=\"kw5\">mod</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy5\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>    <a href=\"http://octave.sourceforge.net/octave/function/disp.html\"><span class=\"kw5\">disp</span></a><span class=\"br0\">(</span><span class=\"co4\">\"FizzBuzz\"</span><span class=\"br0\">)</span><span class=\"sy5\">;</span><br/>  <span class=\"kw4\">elseif</span> <span class=\"br0\">(</span> <a href=\"http://octave.sourceforge.net/octave/function/mod.html\"><span class=\"kw5\">mod</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy5\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>    <a href=\"http://octave.sourceforge.net/octave/function/disp.html\"><span class=\"kw5\">disp</span></a><span class=\"br0\">(</span><span class=\"co4\">\"Fizz\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw4\">elseif</span> <span class=\"br0\">(</span> <a href=\"http://octave.sourceforge.net/octave/function/mod.html\"><span class=\"kw5\">mod</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"sy5\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"br0\">)</span><br/>    <a href=\"http://octave.sourceforge.net/octave/function/disp.html\"><span class=\"kw5\">disp</span></a><span class=\"br0\">(</span><span class=\"co4\">\"Buzz\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw4\">else</span><br/>    <a href=\"http://octave.sourceforge.net/octave/function/disp.html\"><span class=\"kw5\">disp</span></a><span class=\"br0\">(</span><a href=\"http://octave.sourceforge.net/octave/function/i.html\"><span class=\"kw10\">i</span></a><span class=\"br0\">)</span><br/>  <span class=\"kw4\">endif</span><br/><span class=\"kw4\">endfor</span></pre>"}, {"lang": "Oforth", "loc": 8, "block": "<pre class=\"text highlighted_source\">: fizzbuzz<br/>| i |<br/>   100 loop: i [<br/>      null <br/>      i 3 mod ifZero: [ \"Fizz\" + ]<br/>      i 5 mod ifZero: [ \"Buzz\" + ]<br/>      dup ifNull: [ drop i ] . <br/>      ]\u00a0; </pre>"}, {"lang": "OOC", "loc": 24, "block": "<pre class=\"text highlighted_source\">fizz: func (n: Int) -&gt; Bool {<br/>  if(n\u00a0% 3 == 0) {<br/>    printf(\"Fizz\")<br/>    return true<br/>  }<br/>  return false<br/>}<br/>\u00a0<br/>buzz: func (n: Int) -&gt; Bool {<br/>  if(n\u00a0% 5 == 0) {<br/>    printf(\"Buzz\")<br/>    return true<br/>  }<br/>  return false<br/>}<br/>\u00a0<br/>main: func {<br/>  for(n in 1..100) {<br/>    fizz:= fizz(n)<br/>    buzz:= buzz(n)<br/>    fizz || buzz || printf(\"%d\", n)<br/>    println()<br/>  }<br/>}</pre>"}, {"lang": "Order", "loc": 19, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;order/interpreter.h&gt;</span><br/>\u00a0<br/><span class=\"co1\">// Get FB for one number</span><br/><span class=\"co2\">#define ORDER_PP_DEF_8fizzbuzz ORDER_PP_FN(            \\<br/>8fn(8N,                                                \\<br/>    8let((8F, 8fn(8N, 8G,                              \\<br/>                  8is_0(8remainder(8N, 8G)))),         \\<br/>         8cond((8ap(8F, 8N, 15), 8quote(fizzbuzz))     \\<br/>               (8ap(8F, 8N, 3), 8quote(fizz))          \\<br/>               (8ap(8F, 8N, 5), 8quote(buzz))          \\<br/>               (8else, 8N)))) )</span><br/>\u00a0<br/><span class=\"co1\">// Print E followed by a comma (composable, 8print is not a function)</span><br/><span class=\"co2\">#define ORDER_PP_DEF_8print_el ORDER_PP_FN( \\<br/>8fn(8E, 8print(8E 8comma)) )</span><br/>\u00a0<br/>ORDER_PP<span class=\"br0\">(</span>  <span class=\"co1\">// foreach instead of map, to print but return nothing</span><br/>  8seq_for_each<span class=\"br0\">(</span>8compose<span class=\"br0\">(</span>8print_el<span class=\"sy0\">,</span> 8fizzbuzz<span class=\"br0\">)</span><span class=\"sy0\">,</span> 8seq_iota<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "Oz", "loc": 12, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"kw1\">fun</span> <span class=\"br0\">{</span><span class=\"re1\">FizzBuzz</span> X<span class=\"br0\">}</span><br/>     <span class=\"kw1\">if</span>     X <span class=\"kw1\">mod</span> 15 <span class=\"sy0\">==</span> 0 <span class=\"kw1\">then</span> <span class=\"st0\">'FizzBuzz'</span><br/>     <span class=\"kw1\">elseif</span> X <span class=\"kw1\">mod</span>  3 <span class=\"sy0\">==</span> 0 <span class=\"kw1\">then</span> <span class=\"st0\">'Fizz'</span><br/>     <span class=\"kw1\">elseif</span> X <span class=\"kw1\">mod</span>  5 <span class=\"sy0\">==</span> 0 <span class=\"kw1\">then</span> <span class=\"st0\">'Buzz'</span><br/>     <span class=\"kw1\">else</span>                      X<br/>     <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"kw1\">for</span> I <span class=\"kw1\">in</span> 1<span class=\"sy0\">..</span>100 <span class=\"kw1\">do</span><br/>     <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>FizzBuzz I<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span></pre>"}, {"lang": "PARI/GP", "loc": 15, "block": "<pre class=\"parigp highlighted_source\"><span class=\"br0\">{</span><span class=\"kw1\">for</span><span class=\"br0\">(</span>n<span class=\"sy0\">=</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">100</span><span class=\"sy0\">,</span><br/>  <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw1\">if</span><span class=\"br0\">(</span>n<span class=\"sy0\">%</span><span class=\"nu2\">3</span><span class=\"sy0\">,</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>n<span class=\"sy0\">%</span><span class=\"nu2\">5</span><span class=\"sy0\">,</span><br/>      n<br/>    <span class=\"sy0\">,</span><br/>      <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"br0\">)</span><br/>  <span class=\"sy0\">,</span><br/>    <span class=\"kw1\">if</span><span class=\"br0\">(</span>n<span class=\"sy0\">%</span><span class=\"nu2\">5</span><span class=\"sy0\">,</span><br/>      <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"sy0\">,</span><br/>      <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"br0\">)</span><br/>  <span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">)</span><span class=\"br0\">}</span></pre>"}, {"lang": "Pascal", "loc": 14, "block": "<pre class=\"pascal highlighted_source\"><span class=\"kw1\">program</span> fizzbuzz<span class=\"br0\">(</span>output<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  i<span class=\"sy1\">:</span> <span class=\"kw4\">integer</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">to</span> <span class=\"nu0\">100</span> <span class=\"kw1\">do</span><br/>    <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">15</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">writeln</span><span class=\"br0\">(</span><span class=\"st0\">'FizzBuzz'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Fizz'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> i <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span> <span class=\"sy3\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">then</span><br/>      <span class=\"kw3\">writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Buzz'</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw3\">writeln</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "PDP-8 Assembly", "loc": 135, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/--------------------------------------------------------<br/>/THIS PROGRAM PRINTS THE INTEGERS FROM 1 TO 100 (INCL).<br/>/WITH THE FOLLOWING RESTRICTIONS:<br/>/  FOR MULTIPLES OF THREE, PRINT 'FIZZ'<br/>/  FOR MULTIPLES OF FIVE,  PRINT 'BUZZ'<br/>/  FOR MULTIPLES OF BOTH THREE AND FIVE, PRINT 'FIZZBUZZ'<br/>/--------------------------------------------------------<br/>\u00a0<br/>/--------------------------------------------------------<br/>/DEFINES<br/>/--------------------------------------------------------<br/>SWBA=7447               /EAE MODE A INSTRUCTION<br/>DVI=7407                /EAE DIVIDE INSTRUCTION<br/>AIX0=0010               /AUTO INDEX REGISTER 0<br/>CR=0215                 /CARRIAGE RETURN<br/>LF=0212                 /LINEFEED<br/>EOT=0000                /END OF TEXT NUL<br/>FIZMOD=0003             /CONSTANT DECIMAL 3 (FIZZ)<br/>BUZMOD=0005             /CONSTANT DECIMAL 5 (BUZZ)<br/>K10=0012                /CONSTANT DECIMAL 10<br/>\u00a0<br/>LAST=0144               /FIZZBUZZ THE NUMBERS 1..LAST<br/>                        /0144 OCTAL == 100 DECIMAL<br/>                        /CAN BE ANY FROM [0001...7777]<br/>\u00a0<br/>/--------------------------------------------------------<br/>/FIZZBUZZ START=0200<br/>/--------------------------------------------------------<br/>        *200            /START IN MEMORY AT 0200 OCTAL<br/>FZZBZZ, CLA             /CLEAR AC<br/>        TAD (-LAST-1    /LOAD CONSTANT -(LAST+1)<br/>        DCA CNTR        /SET UP MAIN COUNTER<br/>        TAD (-FIZMOD    /SET UP FIZZ COUNTER<br/>        DCA FIZCTR      /TO -3<br/>        TAD (-BUZMOD    /SET UP BUZZ COUNTER<br/>        DCA BUZCTR      /TO -5<br/>LOOP,   ISZ CNTR        /READY?<br/>        SKP             /NO: CONTINUE<br/>        JMP I [7600     /YES: RETURN TO OS/8, REPLACE BY<br/>                        /'HLT' IF NOT ON OS/8<br/>CHKFIZ, ISZ FIZCTR      /MULTIPLE OF 3?<br/>        JMP CHKBUZ      /NO: CONTINUE<br/>        TAD FIZSTR      /YES: LOAD ADDRESS OF 'FIZZ'<br/>        JMS STROUT      /PRINT IT TO TTY<br/>        TAD (-FIZMOD    /RELOAD THE<br/>        DCA FIZCTR      /MOD 3 COUNTER<br/>CHKBUZ, ISZ BUZCTR      /MULTIPLE OF 5?<br/>        JMP CHKNUM      /NO: CONTINUE<br/>        TAD BUZSTR      /YES: LOAD ADDRESS OF 'BUZZ'<br/>        JMS STROUT      /PRINT IT TO TTY<br/>        TAD (-BUZMOD    /RELOAD THE<br/>        DCA BUZCTR      /MOD 5 COUNTER<br/>        JMP NXTLIN      /PRINT NEWLINE AND CONTINUE<br/>CHKNUM, TAD FIZCTR      /CHECK WHETHER MOD 3 COUNTER<br/>        TAD (FIZMOD     /IS RELOADED<br/>        SNA             /DID WE JUST PRINT 'FIZZ'?<br/>        JMP NXTLIN      /YES: PRINT NEWLINE AND CONTINUE<br/>        CLA             /ZERO THE AC<br/>NUM,    TAD CNTR        /LOAD THE MAIN NUMBER COUNTER<br/>        TAD (LAST+1     /OFFSET IT TO A POSITIVE VALUE<br/>        JMS NUMOUT      /PRINT IT TO THE TTY<br/>NXTLIN, TAD LINSTR      /LOAD THE ADDRESS OF THE NEWLINE<br/>        JMS STROUT      /PRINT IT TO TTY<br/>        JMP LOOP        /CONTINUE WITH THE NEXT NUMBER<br/>CNTR,   0               /MAIN COUNTER<br/>FIZCTR, 0               /FIZZ COUNTER<br/>BUZCTR, 0               /BUZZ COUNTER<br/>\u00a0<br/>/--------------------------------------------------------<br/>/WRITE ASCII CHARACTER IN AC TO TTY<br/>/PRE\u00a0: AC=ASCII CHARACTER<br/>/POST: AC=0<br/>/--------------------------------------------------------<br/>CHROUT, .-.<br/>        TLS             /SEND CHARACTER TO TTY<br/>        TSF             /IS TTY READY FOR NEXT CHARACTER?<br/>        JMP .-1         /NO TRY AGAIN<br/>        CLA             /AC=0<br/>        JMP I CHROUT    /RETURN<br/>\u00a0<br/>/--------------------------------------------------------<br/>/WRITE NUL TERMINATED ASCII STRING TO TTY<br/>/PRE\u00a0: AC=ADDRESS OF STRING MINUS 1<br/>/POST: AC=0<br/>/--------------------------------------------------------<br/>STROUT, .-.<br/>        DCA AIX0        /STORE POINTER IN AUTO INDEX 0<br/>STRLOP, TAD I AIX0      /GET NEXT CHARACTER FROM STRING<br/>        SNA             /SKIP IF NOT EOT<br/>        JMP I STROUT    /RETURN<br/>        JMS CHROUT      /PRINT CHARACTER<br/>        JMP STRLOP      /GO GET NEXT CHARACTER<br/>\u00a0<br/>/--------------------------------------------------------<br/>/WRITE NUMBER IN AC TO TTY AS DECIMAL<br/>/PRE\u00a0: AC=UNSIGNED NUMBER BETWEEN 0000 AND 7777<br/>/POST: AC=0<br/>/--------------------------------------------------------<br/>NUMOUT, .-.<br/>        SWBA            /SET EAE IN MODE A<br/>        MQL             /MQ=NUM; AC=0<br/>        TAD BUFFER      /LOAD END OF BUFFER<br/>        DCA BUFPTR      /IN BUFPTR<br/>        SKP             /NUM IS ALREADY IN MQ<br/>NUMLOP, MQL             /MQ=NUM; AC=0<br/>        DVI             /MQ=NUM/10; AC=NUM-(NUM/10)*10<br/>        K10             /DECIMAL 10<br/>        TAD (\"0         /ADD ASCII ZERO<br/>        DCA I BUFPTR    /STORE CHAR BUFFER, BACK TO FRONT<br/>        CMA             /AC=-1<br/>        TAD BUFPTR      /DECREMENT<br/>        DCA BUFPTR      /BUFFER POINTER<br/>        MQA             /MQ -&gt; AC<br/>        SZA             /READY IF ZERO<br/>        JMP NUMLOP      /GET NEXT DIGIT<br/>        TAD BUFPTR      /LOAD START OF CONVERTED NUMBER<br/>        JMS STROUT      /SEND IT TO TTY<br/>        JMP I NUMOUT    /RETURN<br/>BUFFER, .+4             /ADDRESS OF BUFFER<br/>        *.+4            /RESERVE 4 LOCATIONS (MAX=4095)<br/>        EOT             /END OF BUFFER<br/>BUFPTR, 0               /POINTER IN BUFFER<br/>\u00a0<br/>/--------------------------------------------------------<br/>/STRINGS<br/>/--------------------------------------------------------<br/>FIZSTR, .               /FIZZ STRING<br/>        \"F; \"I; \"Z; \"Z; EOT<br/>BUZSTR, .               /BUZZ STRING<br/>        \"B; \"U; \"Z; \"Z; EOT<br/>LINSTR, .               /NEWLINE STIRNG<br/>        CR; LF; EOT<br/>        $<br/>\u00a0</pre>"}, {"lang": "Peloton", "loc": 9, "block": "<pre class=\"text highlighted_source\">&lt;# DEFINE USERDEFINEDROUTINE LITERAL&gt;__FizzBuzz|&lt;# SUPPRESSAUTOMATICWHITESPACE&gt;<br/>&lt;# TEST ISITMODULUSZERO PARAMETER LITERAL&gt;1|3&lt;/#&gt;<br/>&lt;# TEST ISITMODULUSZERO PARAMETER LITERAL&gt;1|5&lt;/#&gt;<br/>&lt;# ONLYFIRSTOFLASTTWO&gt;&lt;# SAY LITERAL&gt;Fizz&lt;/#&gt;&lt;/#&gt;<br/>&lt;# ONLYSECONDOFLASTTWO&gt;&lt;# SAY LITERAL&gt;Buzz&lt;/#&gt;&lt;/#&gt;<br/>&lt;# BOTH&gt;&lt;# SAY LITERAL&gt;FizzBuzz&lt;/#&gt;&lt;/#&gt;<br/>&lt;# NEITHER&gt;&lt;# SAY PARAMETER&gt;1&lt;/#&gt;&lt;/#&gt;<br/>&lt;/#&gt;&lt;/#&gt;<br/>&lt;# ITERATE FORITERATION LITERAL LITERAL&gt;100|&lt;# ACT USERDEFINEDROUTINE POSITION FORITERATION&gt;__FizzBuzz|...&lt;/#&gt; &lt;/#&gt;</pre>"}, {"lang": "Perl", "loc": 11, "block": "<pre class=\"perl highlighted_source\">\u00a0<br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> feature <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>say<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    say <span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>      <span class=\"sy0\">:</span> <span class=\"re0\">$i</span> <span class=\"sy0\">%</span>  <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"Fizz\"</span><br/>      <span class=\"sy0\">:</span> <span class=\"re0\">$i</span> <span class=\"sy0\">%</span>  <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"Buzz\"</span><br/>      <span class=\"sy0\">:</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 6, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw1\">for</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">100</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">when</span> <span class=\"re0\">$_</span> <span class=\"sy0\">%%</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">&amp;</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st_h\">'FizzBuzz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">when</span> <span class=\"re0\">$_</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">3</span>       <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st_h\">'Fizz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">when</span> <span class=\"re0\">$_</span> <span class=\"sy0\">%%</span> <span class=\"nu0\">5</span>       <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st_h\">'Buzz'</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">default</span>            <span class=\"br0\">{</span> <span class=\"sy0\">.</span><span class=\"kw3\">say</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 5, "block": "<pre class=\"text highlighted_source\">constant x = {\"%d\\n\",\"Fizz\\n\",\"Buzz\\n\",\"FizzBuzz\\n\"}<br/>for i=1 to 100 do<br/>    printf(1,x[1+(remainder(i,3)=0)+2*(remainder(i,5)=0)],i)<br/>end for<br/>\u00a0</pre>"}, {"lang": "PHL", "loc": 22, "block": "<pre class=\"text highlighted_source\">module fizzbuzz;<br/>\u00a0<br/>extern printf;<br/>\u00a0<br/>@Integer main [<br/>\tvar i = 1;<br/>\twhile (i &lt;= 100) {<br/>\t\tif (i\u00a0% 15 == 0)<br/>\t\t    printf(\"FizzBuzz\");<br/>\t\telse if (i\u00a0% 3 == 0)<br/>\t\t    printf(\"Fizz\");<br/>\t\telse if (i\u00a0% 5 == 0)<br/>\t\t    printf(\"Buzz\");<br/>\t\telse<br/>\t\t    printf(\"%d\", i);<br/>\u00a0<br/>\t\tprintf(\"\\n\");<br/>\t\ti = i::inc;<br/>\t}<br/>\u00a0<br/>\treturn 0;<br/>]</pre>"}, {"lang": "PHP", "loc": 13, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"FizzBuzz<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"Fizz<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"Buzz<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$i</span><span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 8, "block": "<pre class=\"text highlighted_source\">(for N 100<br/>   (prinl<br/>      (or (pack (at (0 . 3) \"Fizz\") (at (0 . 5) \"Buzz\")) N) ) )<br/>\u00a0<br/># Above, we simply count till 100 'prin'-ting number 'at' 3rd ('Fizz'), 5th ('Buzz') and 'pack'-ing 15th number ('FizzBuzz').<br/># Rest of the times 'N' is printed as it loops in 'for'.<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Pike", "loc": 13, "block": "<pre class=\"pike highlighted_source\">int main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>   <span class=\"kw1\">for</span><span class=\"br0\">(</span>int i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i &lt;<span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">if</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>         write<span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>         write<span class=\"br0\">(</span><span class=\"st0\">\"Fizz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>         write<span class=\"br0\">(</span><span class=\"st0\">\"Buzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>         write<span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PILOT", "loc": 23, "block": "<pre class=\"text highlighted_source\">C \u00a0:i = 0<br/>*loop<br/>C \u00a0:i = i + 1<br/>J ( i &gt; 100 )   \u00a0: *finished<br/>C \u00a0:modulo = i\u00a0% 15<br/>J ( modulo = 0 )\u00a0: *fizzbuzz<br/>C \u00a0:modulo = i\u00a0% 3<br/>J ( modulo = 0 )\u00a0: *fizz<br/>C \u00a0:modulo = i\u00a0% 5<br/>J ( modulo = 0 )\u00a0: *buzz<br/>T \u00a0:#i<br/>J \u00a0: *loop<br/>*fizzbuzz<br/>T \u00a0:FizzBuzz<br/>J \u00a0: *loop<br/>*fizz<br/>T \u00a0:Fizz<br/>J \u00a0: *loop<br/>*buzz<br/>T \u00a0:Buzz<br/>J \u00a0: *loop<br/>*finished<br/>END:</pre>"}, {"lang": "PIR", "loc": 34, "block": "<pre class=\"text highlighted_source\">.sub main\u00a0:main<br/>  .local int f<br/>  .local int mf<br/>  .local int skipnum<br/>  f = 1<br/>LOOP: <br/>  if f &gt; 100 goto DONE<br/>  skipnum = 0<br/>  mf = f\u00a0% 3<br/>  if mf == 0 goto FIZZ<br/>FIZZRET:<br/>  mf = f\u00a0% 5<br/>  if mf == 0 goto BUZZ<br/>BUZZRET:<br/>  if skipnum &gt; 0 goto SKIPNUM<br/>  print f<br/>SKIPNUM:<br/>  print \"\\n\"<br/>  inc f <br/>  goto LOOP<br/>  end<br/>FIZZ:<br/>  print \"Fizz\"<br/>  inc skipnum<br/>  goto FIZZRET<br/>  end<br/>BUZZ:<br/>  print \"Buzz\"<br/>  inc skipnum<br/>  goto BUZZRET<br/>  end<br/>DONE:<br/>  end<br/>.end</pre>"}, {"lang": "PL/I", "loc": 8, "block": "<pre class=\"text highlighted_source\">do i = 1 to 100;<br/>   select;<br/>      when (mod(i,15) = 0) put skip list ('FizzBuzz');<br/>      when (mod(i,3)  = 0) put skip list ('Fizz');<br/>      when (mod(i,5)  = 0) put skip list ('Buzz');<br/>      otherwise put skip list (i);<br/>   end;<br/>end;</pre>"}, {"lang": "PL/SQL", "loc": 15, "block": "<pre class=\"plsql highlighted_source\"><a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=BEGIN\"><span class=\"kw1\">BEGIN</span></a><br/>  <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=FOR\"><span class=\"kw1\">FOR</span></a> i <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=IN\"><span class=\"kw1\">IN</span></a> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"nu0\">100</span><br/>  <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=LOOP\"><span class=\"kw1\">LOOP</span></a><br/>    <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=CASE\"><span class=\"kw1\">CASE</span></a><br/>    <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=WHEN\"><span class=\"kw1\">WHEN</span></a> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=MOD\"><span class=\"kw2\">MOD</span></a><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=THEN\"><span class=\"kw1\">THEN</span></a><br/>      <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=DBMS_OUTPUT\"><span class=\"kw3\">DBMS_OUTPUT</span></a><span class=\"sy0\">.</span>put_line<span class=\"br0\">(</span><span class=\"st0\">'FizzBuzz'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=WHEN\"><span class=\"kw1\">WHEN</span></a> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=MOD\"><span class=\"kw2\">MOD</span></a><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=THEN\"><span class=\"kw1\">THEN</span></a><br/>      <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=DBMS_OUTPUT\"><span class=\"kw3\">DBMS_OUTPUT</span></a><span class=\"sy0\">.</span>put_line<span class=\"br0\">(</span><span class=\"st0\">'Buzz'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=WHEN\"><span class=\"kw1\">WHEN</span></a> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=MOD\"><span class=\"kw2\">MOD</span></a><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=THEN\"><span class=\"kw1\">THEN</span></a><br/>      <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=DBMS_OUTPUT\"><span class=\"kw3\">DBMS_OUTPUT</span></a><span class=\"sy0\">.</span>put_line<span class=\"br0\">(</span><span class=\"st0\">'Fizz'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=ELSE\"><span class=\"kw1\">ELSE</span></a><br/>      <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=DBMS_OUTPUT\"><span class=\"kw3\">DBMS_OUTPUT</span></a><span class=\"sy0\">.</span>put_line<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=END\"><span class=\"kw1\">END</span></a> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=CASE\"><span class=\"kw1\">CASE</span></a><span class=\"sy0\">;</span><br/>  <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=END\"><span class=\"kw1\">END</span></a> <a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=LOOP\"><span class=\"kw1\">LOOP</span></a><span class=\"sy0\">;</span><br/><a href=\"http://www.oracle.com/pls/db92/db92.drilldown?word=END\"><span class=\"kw1\">END</span></a><span class=\"sy0\">;</span></pre>"}, {"lang": "Pony", "loc": 18, "block": "<pre class=\"text highlighted_source\">use \"collections\"<br/>\u00a0<br/>actor Main<br/>  new create(env: Env) =&gt;<br/>    for i in Range[I32](1, 100) do<br/>      env.out.print(fizzbuzz(i))<br/>    end<br/>\u00a0<br/>  fun fizzbuzz(n: I32): String =&gt;<br/>    if (n\u00a0% 15) == 0 then<br/>      \"FizzBuzz\"<br/>    elseif (n\u00a0% 5) == 0 then<br/>      \"Buzz\"<br/>    elseif (n\u00a0% 3) == 0 then<br/>      \"Fizz\"<br/>    else<br/>      n.string()<br/>    end</pre>"}, {"lang": "Pop11", "loc": 13, "block": "<pre class=\"text highlighted_source\">lvars str;<br/>for i from 1 to 100 do<br/>  if i rem 15 = 0 then<br/>    'FizzBuzz' -&gt; str;<br/>  elseif i rem 3 = 0 then<br/>    'Fizz' -&gt; str;<br/>  elseif i rem 5 = 0 then<br/>    'Buzz' -&gt; str;<br/>  else<br/>    '' &gt;&lt; i -&gt; str;<br/>  endif;<br/>  printf(str, '%s\\n');<br/>endfor;</pre>"}, {"lang": "PostScript", "loc": 7, "block": "<pre class=\"text highlighted_source\">1 1 100 { <br/>\t/c false def<br/>\tdup 3 mod 0 eq { (Fizz) print /c true def } if<br/>\tdup 5 mod 0 eq { (Buzz) print /c true def } if<br/>    c {pop}{(   ) cvs print} ifelse<br/>    (\\n) print<br/>} for</pre>"}, {"lang": "Potion", "loc": 10, "block": "<pre class=\"lua highlighted_source\">\u00a0<br/><span class=\"nu0\">1</span> to <span class=\"nu0\">100</span> <span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">:</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><br/>    <span class=\"st0\">'FizzBuzz'</span><span class=\"sy0\">.</span><br/>  elsif <span class=\"br0\">(</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><br/>    <span class=\"st0\">'Fizz'</span><span class=\"sy0\">.</span><br/>  elsif <span class=\"br0\">(</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">:</span><br/>    <span class=\"st0\">'Buzz'</span><span class=\"sy0\">.</span><br/>  <span class=\"kw1\">else</span><span class=\"sy0\">:</span> a<span class=\"sy0\">.</span> <span class=\"kw3\">string</span> <span class=\"kw3\">print</span><br/>  <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"kw3\">print</span><span class=\"sy0\">.</span></pre>"}, {"lang": "PowerShell", "loc": 11, "block": "<pre class=\"powershell highlighted_source\"><span class=\"kw3\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>; <span class=\"re0\">$i</span> <span class=\"kw4\">-le</span> <span class=\"nu0\">100</span>; <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"br0\">}</span> <span class=\"kw3\">elseif</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"br0\">}</span> <span class=\"kw3\">elseif</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"kw4\">-eq</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"br0\">}</span> <span class=\"kw3\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$i</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Processing", "loc": 19, "block": "<pre class=\"text highlighted_source\">for (int i = 0; i &lt; width; i++) {<br/>  if (i\u00a0% 3 == 0 &amp;&amp; i\u00a0% 5 == 0) {<br/>    stroke(255, 255, 0);<br/>    println(\"FizzBuzz!\");<br/>  }<br/>  else if (i\u00a0% 5 == 0) {<br/>    stroke(0, 255, 0);<br/>    println(\"Buzz\");<br/>  }<br/>  else if (i\u00a0% 3 == 0) {<br/>    stroke(255, 0, 0);<br/>    println(\"Fizz\");<br/>  }<br/>  else {<br/>    stroke(0, 0, 255);<br/>    println(i);<br/>  } <br/>  line(i, 0, i, height);<br/>}</pre>"}, {"lang": "Prolog", "loc": 13, "block": "<pre class=\"prolog highlighted_source\">fizzbuzz <span class=\"sy1\">:-</span><br/>        foreach<span class=\"br0\">(</span>between<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span> <span class=\"nu0\">100</span><span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">,</span> print_item<span class=\"br0\">(</span>X<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>print_item<span class=\"br0\">(</span>X<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>        <span class=\"br0\">(</span>  <span class=\"nu0\">0</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">mod</span></a> <span class=\"nu0\">15</span><br/>        <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> print<span class=\"br0\">(</span><span class=\"st_h\">'FizzBuzz'</span><span class=\"br0\">)</span><br/>        <span class=\"sy4\">;</span>  <span class=\"nu0\">0</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">mod</span></a> <span class=\"nu0\">3</span><br/>        <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> print<span class=\"br0\">(</span><span class=\"st_h\">'Fizz'</span><span class=\"br0\">)</span><br/>        <span class=\"sy4\">;</span>  <span class=\"nu0\">0</span> <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">mod</span></a> <span class=\"nu0\">5</span><br/>        <span class=\"sy3\">-</span><span class=\"sy6\">&gt;</span> print<span class=\"br0\">(</span><span class=\"st_h\">'Buzz'</span><span class=\"br0\">)</span><br/>        <span class=\"sy4\">;</span>  print<span class=\"br0\">(</span>X<span class=\"br0\">)</span><br/>        <span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>        <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">nl</span></a><span class=\"sy4\">.</span></pre>"}, {"lang": "PureBasic", "loc": 22, "block": "<pre class=\"text highlighted_source\">is-positive = _ &gt; 0 # equivalent to lam(x): x &gt; 0 end<br/>\u00a0<br/>fun fizzbuzz(n\u00a0:: Number%(is-positive)) -&gt; String:<br/>  doc: ```For positive input which is multiples of three return 'Fizz', for the multiples of five return 'Buzz'. <br/>  For numbers which are multiples of both three and five return 'FizzBuzz'. Otherwise, return the number itself.```<br/>  ask:<br/>    | num-modulo(n, 15) == 0 then: \"FizzBuzz\"<br/>    | num-modulo(n, 3) == 0 then: \"Fizz\"<br/>    | num-modulo(n, 5) == 0 then: \"Buzz\"<br/>    | otherwise: num-to-string(n)<br/>  end<br/>where:<br/>  fizzbuzz(1) is \"1\"<br/>  fizzbuzz(101) is \"101\"<br/>  fizzbuzz(45) is \"FizzBuzz\"<br/>  fizzbuzz(33) is \"Fizz\"<br/>  fizzbuzz(25) is \"Buzz\"<br/>end<br/>\u00a0<br/>range(1, 101).map(fizzbuzz).each(print)<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Pyret", "loc": 22, "block": "<pre class=\"text highlighted_source\">is-positive = _ &gt; 0 # equivalent to lam(x): x &gt; 0 end<br/>\u00a0<br/>fun fizzbuzz(n\u00a0:: Number%(is-positive)) -&gt; String:<br/>  doc: ```For positive input which is multiples of three return 'Fizz', for the multiples of five return 'Buzz'. <br/>  For numbers which are multiples of both three and five return 'FizzBuzz'. Otherwise, return the number itself.```<br/>  ask:<br/>    | num-modulo(n, 15) == 0 then: \"FizzBuzz\"<br/>    | num-modulo(n, 3) == 0 then: \"Fizz\"<br/>    | num-modulo(n, 5) == 0 then: \"Buzz\"<br/>    | otherwise: num-to-string(n)<br/>  end<br/>where:<br/>  fizzbuzz(1) is \"1\"<br/>  fizzbuzz(101) is \"101\"<br/>  fizzbuzz(45) is \"FizzBuzz\"<br/>  fizzbuzz(33) is \"Fizz\"<br/>  fizzbuzz(25) is \"Buzz\"<br/>end<br/>\u00a0<br/>range(1, 101).map(fizzbuzz).each(print)<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Python", "loc": 9, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">xrange</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">101</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">if</span> i\u00a0% <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"kw1\">elif</span> i\u00a0% <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"kw1\">elif</span> i\u00a0% <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw1\">print</span> <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"kw1\">else</span>:<br/>        <span class=\"kw1\">print</span> i</pre>"}, {"lang": "Q", "loc": 2, "block": "<pre class=\"q highlighted_source\">\u00a0<br/><span class=\"br0\">{</span><span class=\"sy0\">$</span><span class=\"br0\">[</span><span class=\"nu0\">0</span>=x <span class=\"kw1\">mod</span> <span class=\"nu0\">15</span>;<span class=\"st0\">\"FizzBuzz\"</span>;<span class=\"nu0\">0</span>=x <span class=\"kw1\">mod</span> <span class=\"nu0\">5</span>;<span class=\"st0\">\"Buzz\"</span>;<span class=\"nu0\">0</span>=x <span class=\"kw1\">mod</span> <span class=\"nu0\">3</span>;<span class=\"st0\">\"Fizz\"</span>;<span class=\"kw1\">string</span> x<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">each</span> <span class=\"nu0\">1</span><span class=\"sy0\">+</span><span class=\"kw1\">til</span> <span class=\"nu0\">15</span></pre>"}, {"lang": "R", "loc": 5, "block": "<pre class=\"text highlighted_source\">xx &lt;- x &lt;- 1:100<br/>xx[x\u00a0%% 3 == 0] &lt;- \"Fizz\"<br/>xx[x\u00a0%% 5 == 0] &lt;- \"Buzz\"<br/>xx[x\u00a0%% 15 == 0] &lt;- \"FizzBuzz\"<br/>xx</pre>"}, {"lang": "Racket", "loc": 7, "block": "<pre class=\"text highlighted_source\">(for ([n (in-range 1 101)]) <br/>  (displayln <br/>   (match (gcd n 15) <br/>     [15 \"fizzbuzz\"] <br/>     [3 \"fizz\"] <br/>     [5 \"buzz\"] <br/>     [_ n])))</pre>"}, {"lang": "RapidQ", "loc": 4, "block": "<pre class=\"text highlighted_source\">FOR i=1 TO 100<br/>    t$ = IIF(i MOD 3 = 0, \"Fizz\", \"\") + IIF(i MOD 5 = 0, \"Buzz\", \"\")<br/>    PRINT IIF(LEN(t$), t$, i)<br/>NEXT i</pre>"}, {"lang": "Rascal", "loc": 8, "block": "<pre class=\"text highlighted_source\">import IO;<br/>\u00a0<br/>public void fizzbuzz() {<br/>   for(int n &lt;- [1 .. 100]){<br/>      fb = ((n\u00a0% 3 == 0)\u00a0? \"Fizz\"\u00a0: \"\") + ((n\u00a0% 5 == 0)\u00a0? \"Buzz\"\u00a0: \"\");<br/>      println((fb == \"\")\u00a0?\"&lt;n&gt;\"\u00a0: fb);<br/>   }<br/>}</pre>"}, {"lang": "Raven", "loc": 6, "block": "<pre class=\"text highlighted_source\">100 each 1 + as n<br/>  ''<br/>  n 3 mod 0 = if 'Fizz' cat<br/>  n 5 mod 0 = if 'Buzz' cat<br/>  dup empty if drop n<br/>  say</pre>"}, {"lang": "REALbasic", "loc": 13, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>let fizzbuzz i =&gt;<br/>  switch (i mod 3, i mod 5) {<br/>  | (0, 0) =&gt; \"FizzBuzz\"<br/>  | (0, _) =&gt; \"Fizz\"<br/>  | (_, 0) =&gt; \"Buzz\"<br/>  | _ =&gt; string_of_int i<br/>  };<br/>\u00a0<br/>for i in 1 to 100 {<br/>  print_endline (fizzbuzz i)<br/>};<br/>\u00a0</pre>"}, {"lang": "Reason", "loc": 13, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>let fizzbuzz i =&gt;<br/>  switch (i mod 3, i mod 5) {<br/>  | (0, 0) =&gt; \"FizzBuzz\"<br/>  | (0, _) =&gt; \"Fizz\"<br/>  | (_, 0) =&gt; \"Buzz\"<br/>  | _ =&gt; string_of_int i<br/>  };<br/>\u00a0<br/>for i in 1 to 100 {<br/>  print_endline (fizzbuzz i)<br/>};<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 18, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol [<br/>\tTitle: \"FizzBuzz\"<br/>\tURL: http://rosettacode.org/wiki/FizzBuzz<br/>]</span><br/>\u00a0<br/><span class=\"co1\">; Concatenative. Note use of 'case/all' construct to evaluate all</span><br/><span class=\"co1\">; conditions. I use 'copy' to allocate a new string each time through</span><br/><span class=\"co1\">; the loop -- otherwise 'x' would get very long...</span><br/>\u00a0<br/><span class=\"kw2\">repeat</span> i <span class=\"nu0\">100</span> <span class=\"br0\">[</span><br/>\tx: <span class=\"kw3\">copy</span> <span class=\"st0\">\"\"</span><br/>\tcase<span class=\"sy0\">/</span><span class=\"kw2\">all</span> <span class=\"br0\">[</span><br/>\t\t<span class=\"nu0\">0</span> = mod i <span class=\"nu0\">3</span> <span class=\"br0\">[</span><span class=\"kw3\">append</span> x <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">]</span><br/>\t\t<span class=\"nu0\">0</span> = mod i <span class=\"nu0\">5</span> <span class=\"br0\">[</span><span class=\"kw3\">append</span> x <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">]</span><br/>\t\t<span class=\"st0\">\"\"</span> = x      <span class=\"br0\">[</span>x: <span class=\"kw3\">mold</span> i<span class=\"br0\">]</span><br/>\t<span class=\"br0\">]</span><br/>\t<span class=\"kw3\">print</span> x<br/><span class=\"br0\">]</span></pre>"}, {"lang": "Retro", "loc": 8, "block": "<pre class=\"text highlighted_source\">: fizz?    ( s-f ) 3 mod 0 =\u00a0;<br/>: buzz?    ( s-f ) 5 mod 0 =\u00a0;<br/>: num?     ( s-f ) dup fizz? swap buzz? or 0 =\u00a0;<br/>:\u00a0?fizz    ( s-  ) fizz? [ \"Fizz\" puts ] ifTrue\u00a0;<br/>:\u00a0?buzz    ( s-  ) buzz? [ \"Buzz\" puts ] ifTrue\u00a0;<br/>:\u00a0?num     ( s-  ) num? &amp;putn &amp;drop if\u00a0;<br/>: fizzbuzz ( s-  ) dup\u00a0?fizz dup\u00a0?buzz dup\u00a0?num space\u00a0;<br/>: all      (  -  ) 100 [ 1+ fizzbuzz ] iter\u00a0;</pre>"}, {"lang": "REXX", "loc": 8, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program displays numbers  1 \u2500\u2500\u25ba 100  (some transformed) for the FizzBuzz problem.*/</span><br/>                                                 <span class=\"coMULTI\">/*\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557*/</span><br/>  <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span>  <span class=\"kw2\">to</span> <span class=\"nu0\">100</span>;      z=  j                     <span class=\"coMULTI\">/*\u2551                                   \u2551*/</span><br/>  <span class=\"kw1\">if</span> j<span class=\"sy0\">//</span><span class=\"nu0\">3</span>    ==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> z= <span class=\"st0\">'Fizz'</span>                 <span class=\"coMULTI\">/*\u2551  The divisors  (//)  of the  IFs  \u2551*/</span><br/>  <span class=\"kw1\">if</span> j<span class=\"sy0\">//</span><span class=\"nu0\">5</span>    ==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> z= <span class=\"st0\">'Buzz'</span>                 <span class=\"coMULTI\">/*\u2551  must be in ascending order.      \u2551*/</span><br/>  <span class=\"kw1\">if</span> j<span class=\"sy0\">//</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">*</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>==<span class=\"nu0\">0</span>  <span class=\"kw3\">then</span> z= <span class=\"st0\">'FizzBuzz'</span>             <span class=\"coMULTI\">/*\u2551                                   \u2551*/</span><br/>  <span class=\"kw1\">say</span> <span class=\"kw6\">right</span><span class=\"br0\">(</span>z, <span class=\"nu0\">8</span><span class=\"br0\">)</span>                                <span class=\"coMULTI\">/*\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d*/</span><br/>  <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                                    <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ring", "loc": 8, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>for n = 1 to 100<br/>    if n\u00a0% 15 = 0 see \"\" + n + \" = \" + \"FizzBuzz\"+ nl<br/>    but n\u00a0% 5 = 0 see \"\" + n + \" = \" + \"Buzz\" + nl<br/>    but n\u00a0% 3 = 0 see \"\" + n + \" = \" + \"Fizz\" + nl<br/>    else see \"\" + n + \" = \" + n + nl ok<br/>next<br/>\u00a0</pre>"}, {"lang": "Robotic", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>set \"local1\" to 1<br/>: \"loop\"<br/>wait for 10<br/>if \"('local1'\u00a0% 15)\" = 0 then \"fizzbuzz\"<br/>if \"('local1'\u00a0% 3)\" = 0 then \"fizz\"<br/>if \"('local1'\u00a0% 5)\" = 0 then \"buzz\"<br/>* \"&amp;local1&amp;\"<br/>: \"inc\"<br/>inc \"local1\" by 1<br/>if \"local1\" &lt;= 100 then \"loop\"<br/>goto \"done\"<br/>\u00a0<br/>: \"fizzbuzz\"<br/>* \"FizzBuzz\"<br/>goto \"inc\"<br/>\u00a0<br/>: \"fizz\"<br/>* \"Fizz\"<br/>goto \"inc\"<br/>\u00a0<br/>: \"buzz\"<br/>* \"Buzz\"<br/>goto \"inc\"<br/>\u00a0<br/>: \"done\"<br/>end<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 6, "block": "<pre class=\"ruby highlighted_source\"><span class=\"nu0\">1</span>.<span class=\"me1\">upto</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>n<span class=\"sy0\">|</span><br/>  <span class=\"kw3\">print</span> <span class=\"st0\">\"Fizz\"</span> <span class=\"kw1\">if</span> a = <span class=\"br0\">(</span>n <span class=\"sy0\">%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>.<span class=\"me1\">zero</span>?<br/>  <span class=\"kw3\">print</span> <span class=\"st0\">\"Buzz\"</span> <span class=\"kw1\">if</span> b = <span class=\"br0\">(</span>n <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span>.<span class=\"me1\">zero</span>?<br/>  <span class=\"kw3\">print</span> n <span class=\"kw1\">unless</span> <span class=\"br0\">(</span>a <span class=\"sy0\">||</span> b<span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span><br/><span class=\"kw1\">end</span></pre>"}, {"lang": "Ruby with RSpec", "loc": 42, "block": "<pre class=\"ruby highlighted_source\">\u00a0<br/><span class=\"kw3\">require</span> <span class=\"st0\">'fizzbuzz'</span><br/>\u00a0<br/>describe <span class=\"st0\">'FizzBuzz'</span> <span class=\"kw1\">do</span><br/>  context <span class=\"st0\">'knows that a number is divisible by'</span> <span class=\"kw1\">do</span><br/>    it <span class=\"st0\">'3'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>is_divisible_by_three?<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> be_true<br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'5'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>is_divisible_by_five?<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> be_true<br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'15'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>is_divisible_by_fifteen?<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> be_true<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  context <span class=\"st0\">'knows that a number is not divisible by'</span> <span class=\"kw1\">do</span><br/>    it <span class=\"st0\">'3'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>is_divisible_by_three?<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">not_to</span> be_true<br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'5'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>is_divisible_by_five?<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">not_to</span> be_true<br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'15'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>is_divisible_by_fifteen?<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">not_to</span> be_true<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>  context <span class=\"st0\">'while playing the game it returns'</span> <span class=\"kw1\">do</span><br/>    it <span class=\"st0\">'the number'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>fizzbuzz<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> eq <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'Fizz'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>fizzbuzz<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> eq <span class=\"st0\">'Fizz'</span><br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'Buzz'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>fizzbuzz<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> eq <span class=\"st0\">'Buzz'</span><br/>    <span class=\"kw1\">end</span><br/>    it <span class=\"st0\">'FizzBuzz'</span> <span class=\"kw1\">do</span><br/>      expect<span class=\"br0\">(</span>fizzbuzz<span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">to</span> eq <span class=\"st0\">'FizzBuzz'</span><br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Run BASIC", "loc": 10, "block": "<pre class=\"text highlighted_source\">use std::borrow::Cow; // Allows us to avoid unnecessary allocations<br/>fn main() {<br/>    (1..101).map(|n| match (n\u00a0% 3, n\u00a0% 5) {<br/>        (0, 0) =&gt; \"FizzBuzz\".into(),<br/>        (0, _) =&gt; \"Fizz\".into(),<br/>        (_, 0) =&gt; \"Buzz\".into(),<br/>        _ =&gt; Cow::from(n.to_string())<br/>    }).for_each(|n| println!(\"{}\", n));<br/>}<br/>\u00a0</pre>"}, {"lang": "Rust", "loc": 10, "block": "<pre class=\"text highlighted_source\">use std::borrow::Cow; // Allows us to avoid unnecessary allocations<br/>fn main() {<br/>    (1..101).map(|n| match (n\u00a0% 3, n\u00a0% 5) {<br/>        (0, 0) =&gt; \"FizzBuzz\".into(),<br/>        (0, _) =&gt; \"Fizz\".into(),<br/>        (_, 0) =&gt; \"Buzz\".into(),<br/>        _ =&gt; Cow::from(n.to_string())<br/>    }).for_each(|n| println!(\"{}\", n));<br/>}<br/>\u00a0</pre>"}, {"lang": "Salmon", "loc": 4, "block": "<pre class=\"text highlighted_source\">iterate (x; [1...100])<br/>  ((x\u00a0% 15 == 0)\u00a0? \"FizzBuzz\"\u00a0:<br/>   ((x\u00a0% 3 == 0)\u00a0? \"Fizz\"\u00a0:<br/>    ((x\u00a0% 5 == 0)\u00a0? \"Buzz\"\u00a0: x)))!;</pre>"}, {"lang": "SAS", "loc": 8, "block": "<pre class=\"sas highlighted_source\"><span class=\"kw6\">data</span> <span class=\"kw1\">_null_</span>;<br/>  <span class=\"kw5\">do</span> i=<span class=\"nu0\">1</span> to <span class=\"nu0\">100</span>;<br/>    <span class=\"kw5\">if</span> <span class=\"kw3\">mod</span><span class=\"br0\">(</span>i,<span class=\"nu0\">15</span><span class=\"br0\">)</span>=<span class=\"nu0\">0</span> <span class=\"kw5\">then</span> <span class=\"kw3\">put</span> <span class=\"st0\">\"FizzBuzz\"</span>;<br/>    <span class=\"kw5\">else</span> <span class=\"kw5\">if</span> <span class=\"kw3\">mod</span><span class=\"br0\">(</span>i,<span class=\"nu0\">5</span><span class=\"br0\">)</span>=<span class=\"nu0\">0</span> <span class=\"kw5\">then</span> <span class=\"kw3\">put</span> <span class=\"st0\">\"Buzz\"</span>;<br/>    <span class=\"kw5\">else</span> <span class=\"kw5\">if</span> <span class=\"kw3\">mod</span><span class=\"br0\">(</span>i,<span class=\"nu0\">3</span><span class=\"br0\">)</span>=<span class=\"nu0\">0</span> <span class=\"kw5\">then</span> <span class=\"kw3\">put</span> <span class=\"st0\">\"Fizz\"</span>;<br/>    <span class=\"kw5\">else</span> <span class=\"kw3\">put</span> i;<br/>  <span class=\"kw5\">end</span>;<br/><span class=\"kw6\">run</span>;</pre>"}, {"lang": "Sather", "loc": 14, "block": "<pre class=\"text highlighted_source\">class MAIN is<br/>  main is<br/>    loop i\u00a0::= 1.upto!(100);<br/>      s:STR\u00a0:= \"\";<br/>      if i\u00a0% 3 = 0 then s\u00a0:= \"Fizz\"; end;<br/>      if i\u00a0% 5 = 0 then s\u00a0:= s + \"Buzz\"; end;<br/>      if s.length &gt; 0 then<br/>        #OUT + s + \"\\n\";<br/>      else<br/>        #OUT + i + \"\\n\";<br/>      end;      <br/>    end;<br/>  end;<br/>end;</pre>"}, {"lang": "Scala", "loc": 10, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> FizzBuzz <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <span class=\"nu0\">1</span> to <span class=\"nu0\">100</span> foreach <span class=\"br0\">{</span> n <span class=\"sy0\">=&gt;</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">(</span>n <span class=\"sy0\">%</span> <span class=\"nu0\">3</span>, n <span class=\"sy0\">%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"sy0\">_</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Fizz\"</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span><span class=\"sy0\">_</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Buzz\"</span><br/>      <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span> n<br/>    <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 8, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"nu0\">1</span> <span class=\"br0\">(</span><span class=\"sy0\">+</span> i <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> i <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">display</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">modulo</span> i <span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">modulo</span> i <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">(</span><span class=\"kw1\">modulo</span> i <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">else</span>                i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">newline</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Sed", "loc": 40, "block": "<pre class=\"text highlighted_source\">#n<br/># doesn't work if there's no input<br/># initialize counters (0 = empty) and value<br/>s/.*/  0/<br/>: loop<br/># increment counters, set carry<br/>s/^\\(a*\\) \\(b*\\) \\([0-9][0-9]*\\)/\\1a \\2b \\<a class=\"__cf_email__\" data-cfemail=\"794a39\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/<br/># propagate carry<br/>: carry<br/>s/ @/ 1/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"94add4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/@0/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"112951\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/9/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"dbec9b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/8/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"7a4c3a\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/7/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"a491e4\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/6/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"1b2f5b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/5/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"d2e192\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/4/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"96a4d6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/3/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"facbba\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/2/<br/>s/<a class=\"__cf_email__\" data-cfemail=\"d4e494\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>/1/<br/>/@/b carry<br/># save state<br/>h<br/># handle factors<br/>s/aaa/Fizz/<br/>s/bbbbb/Buzz/<br/># strip value if any factor<br/>/z/s/[0-9]//g<br/># strip counters and spaces<br/>s/[ab ]//g<br/># output<br/>p<br/># restore state<br/>g<br/># roll over counters<br/>s/aaa//<br/>s/bbbbb//<br/># loop until value = 100<br/>/100/q<br/>b loop</pre>"}, {"lang": "Seed7", "loc": 18, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var integer: number is 0;<br/>  begin<br/>    for number range 1 to 100 do<br/>      if number rem 15 = 0 then<br/>        writeln(\"FizzBuzz\");<br/>      elsif number rem 5 = 0 then<br/>        writeln(\"Buzz\");<br/>      elsif number rem 3 = 0 then<br/>        writeln(\"Fizz\");<br/>      else<br/>        writeln(number);<br/>      end if;<br/>    end for;<br/>  end func;</pre>"}, {"lang": "SequenceL", "loc": 16, "block": "<pre class=\"text highlighted_source\">import &lt;Utilities/Conversion.sl&gt;;<br/>import &lt;Utilities/Sequence.sl&gt;;<br/>\u00a0<br/>main(args(2))\u00a0:= <br/>\tlet<br/>\t\tresult[i]\u00a0:= <br/>\t\t\t\t\"FizzBuzz\" when i mod 3 = 0 and i mod 5 = 0<br/>\t\t\telse<br/>\t\t\t\t\"Fizz\" when i mod 3 = 0<br/>\t\t\telse<br/>\t\t\t\t\"Buzz\" when i mod 5 = 0<br/>\t\t\telse<br/>\t\t\t\tintToString(i)<br/>\t\t\tforeach i within 1 ... 100;<br/>\tin<br/>\t\tdelimit(result, '\\n');</pre>"}, {"lang": "Shen", "loc": 14, "block": "<pre class=\"text highlighted_source\">(define fizzbuzz<br/>  101 -&gt; (nl)<br/>  N -&gt; (let divisible-by? (/. A B (integer? (/ A B)))<br/>         (cases (divisible-by? N 15) (do (output \"Fizzbuzz!~%\")<br/>                                         (fizzbuzz (+ N 1)))<br/>                (divisible-by? N 3) (do (output \"Fizz!~%\")<br/>                                        (fizzbuzz (+ N 1)))<br/>                (divisible-by? N 5) (do (output \"Buzz!~%\")<br/>                                        (fizzbuzz (+ N 1)))<br/>                true (do (output (str N)) <br/>                         (nl)<br/>                         (fizzbuzz (+ N 1))))))<br/>\u00a0<br/>(fizzbuzz 1)</pre>"}, {"lang": "Sidef", "loc": 9, "block": "<pre class=\"ruby highlighted_source\"><span class=\"br0\">{</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%%</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw3\">print</span> <span class=\"st0\">\"Fizz\"</span><br/>        i <span class=\"sy0\">%%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">print</span> <span class=\"st0\">\"Buzz\"</span><br/>        <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">elsif</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%%</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> say <span class=\"st0\">\"Buzz\"</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span>  <span class=\"br0\">{</span> say i <span class=\"br0\">}</span><br/><span class=\"br0\">}</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span></pre>"}, {"lang": "Simula", "loc": 15, "block": "<pre class=\"text highlighted_source\">begin<br/>    integer i;<br/>    for i\u00a0:= 1 step 1 until 100 do<br/>    begin<br/>        boolean fizzed;<br/>        fizzed\u00a0:= 0 = mod(i, 3);<br/>        if fizzed then<br/>            outtext(\"Fizz\");<br/>        if mod(i, 5) = 0 then<br/>            outtext(\"Buzz\")<br/>        else if not fizzed then<br/>            outint(i, 3);<br/>        outimage<br/>    end;<br/>end</pre>"}, {"lang": "SkookumScript", "loc": 10, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"nu0\">1</span>.<span class=\"me1\">to</span> <span class=\"nu0\">100</span><br/>  <span class=\"br0\">[</span><br/>  println<span class=\"br0\">(</span><br/>    <span class=\"kw1\">if</span> idx.<span class=\"me1\">mod</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">]</span><br/>      idx.<span class=\"me1\">mod</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"st0\">\"Fizz\"</span><span class=\"br0\">]</span><br/>      idx.<span class=\"me1\">mod</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"br0\">[</span><span class=\"st0\">\"Buzz\"</span><span class=\"br0\">]</span><br/>      <span class=\"kw1\">else</span> <span class=\"br0\">[</span>idx<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">]</span><br/>\u00a0</pre>"}, {"lang": "Slate", "loc": 6, "block": "<pre class=\"text highlighted_source\"><a class=\"__cf_email__\" data-cfemail=\"ec82ac\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>(Integer traits) fizzbuzz<br/>[<br/>  output\u00a0::= ((n \\\\ 3) isZero ifTrue: ['Fizz'] ifFalse: [''])\u00a0; ((n \\\\ 5) isZero ifTrue: ['Buzz'] ifFalse: ['']).<br/>  output isEmpty ifTrue: [n printString] ifFalse: [output]<br/>].<br/>1 to: 100 do: [|\u00a0:i | inform: i fizzbuzz]</pre>"}, {"lang": "Small", "loc": 9, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">Integer</span> extend <span class=\"br0\">[</span><br/>    <span class=\"re5\">fizzbuzz</span> <span class=\"br0\">[</span><br/>        |<span class=\"re3\"> fb </span>|<br/>        <span class=\"re6\">fb</span> <span class=\"sy0\">:=</span> <span class=\"st0\">'%&lt;Fizz|&gt;1%&lt;Buzz|&gt;2'</span>\u00a0% <span class=\"br0\">{</span><br/>            <span class=\"kw1\">self</span> \\\\ <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"re5\">0</span>.  <span class=\"kw1\">self</span> \\\\ <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"re5\">0</span> <span class=\"br0\">}</span>.<br/>        ^fb isEmpty ifTrue: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> <span class=\"br0\">]</span> ifFalse: <span class=\"br0\">[</span> <span class=\"re5\">fb</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/><span class=\"br0\">]</span><br/><span class=\"nu0\">1</span> to: <span class=\"re5\">100</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">i</span> | i fizzbuzz displayNl <span class=\"br0\">]</span></pre>"}, {"lang": "Smalltalk", "loc": 9, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">Integer</span> extend <span class=\"br0\">[</span><br/>    <span class=\"re5\">fizzbuzz</span> <span class=\"br0\">[</span><br/>        |<span class=\"re3\"> fb </span>|<br/>        <span class=\"re6\">fb</span> <span class=\"sy0\">:=</span> <span class=\"st0\">'%&lt;Fizz|&gt;1%&lt;Buzz|&gt;2'</span>\u00a0% <span class=\"br0\">{</span><br/>            <span class=\"kw1\">self</span> \\\\ <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"re5\">0</span>.  <span class=\"kw1\">self</span> \\\\ <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"re5\">0</span> <span class=\"br0\">}</span>.<br/>        ^fb isEmpty ifTrue: <span class=\"br0\">[</span> <span class=\"kw1\">self</span> <span class=\"br0\">]</span> ifFalse: <span class=\"br0\">[</span> <span class=\"re5\">fb</span> <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/><span class=\"br0\">]</span><br/><span class=\"nu0\">1</span> to: <span class=\"re5\">100</span> do: <span class=\"br0\">[</span>\u00a0:<span class=\"re5\">i</span> | i fizzbuzz displayNl <span class=\"br0\">]</span></pre>"}, {"lang": "SNOBOL4", "loc": 12, "block": "<pre class=\"text highlighted_source\">        I = 1<br/>LOOP    FIZZBUZZ = \"\"<br/>        EQ(REMDR(I, 3), 0)             \u00a0:F(TRY_5)<br/>        FIZZBUZZ = FIZZBUZZ \"FIZZ\"<br/>TRY_5   EQ(REMDR(I, 5), 0)             \u00a0:F(DO_NUM)<br/>        FIZZBUZZ = FIZZBUZZ \"BUZZ\"      <br/>DO_NUM  IDENT(FIZZBUZZ, \"\")            \u00a0:F(SHOW)<br/>        FIZZBUZZ = I<br/>SHOW    OUTPUT = FIZZBUZZ<br/>        I = I + 1<br/>        LE(I, 100)                     \u00a0:S(LOOP)<br/>END</pre>"}, {"lang": "SNUSP", "loc": 8, "block": "<pre class=\"sql highlighted_source\"><span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span><br/>    <span class=\"kw1\">WHEN</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>level<span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">'FizzBuzz'</span><br/>    <span class=\"kw1\">WHEN</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>level<span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">'Fizz'</span><br/>    <span class=\"kw1\">WHEN</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>level<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">'Buzz'</span><br/>    <span class=\"kw1\">ELSE</span> TO_CHAR<span class=\"br0\">(</span>level<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span> FizzBuzz<br/>    <span class=\"kw1\">FROM</span> dual<br/>    <span class=\"kw1\">CONNECT</span> <span class=\"kw1\">BY</span> LEVEL <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span>;</pre>"}, {"lang": "SQL", "loc": 8, "block": "<pre class=\"sql highlighted_source\"><span class=\"kw1\">SELECT</span> <span class=\"kw1\">CASE</span><br/>    <span class=\"kw1\">WHEN</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>level<span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">'FizzBuzz'</span><br/>    <span class=\"kw1\">WHEN</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>level<span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">'Fizz'</span><br/>    <span class=\"kw1\">WHEN</span> <span class=\"kw1\">MOD</span><span class=\"br0\">(</span>level<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"st0\">'Buzz'</span><br/>    <span class=\"kw1\">ELSE</span> TO_CHAR<span class=\"br0\">(</span>level<span class=\"br0\">)</span><br/>    <span class=\"kw1\">END</span> FizzBuzz<br/>    <span class=\"kw1\">FROM</span> dual<br/>    <span class=\"kw1\">CONNECT</span> <span class=\"kw1\">BY</span> LEVEL <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span>;</pre>"}, {"lang": "Squirrel", "loc": 14, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">function</span> Fizzbuzz<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>local i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> n<span class=\"sy0\">;</span> i <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            print <span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            print <span class=\"br0\">(</span><span class=\"st0\">\"Buzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>            print <span class=\"br0\">(</span><span class=\"st0\">\"Fizz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            print <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>Fizzbuzz<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Stata", "loc": 17, "block": "<pre class=\"text highlighted_source\">program define fizzbuzz<br/>\targs n<br/>\tforvalues i = 1/`n' {<br/>\t\tif mod(`i',15) == 0 {<br/>\t\t\tdisplay \"FizzBuzz\"<br/>\t\t}<br/>\t\telse if mod(`i',5) == 0 {<br/>\t\t\tdisplay \"Buzz\"<br/>\t\t}<br/>\t\telse if mod(`i',3) == 0 {<br/>\t\t\tdisplay \"Fizz\"<br/>\t\t}<br/>\t\telse {<br/>\t\t\tdisplay `i'<br/>\t\t}<br/>\t}<br/>end</pre>"}, {"lang": "Swift", "loc": 12, "block": "<pre class=\"text highlighted_source\">for i in 1...100 {<br/>    switch (i\u00a0% 3, i\u00a0% 5) {<br/>    case (0, 0):<br/>        print(\"FizzBuzz\")<br/>    case (0, _):<br/>        print(\"Fizz\")<br/>    case (_, 0):<br/>        print(\"Buzz\")<br/>    default:<br/>        print(i)<br/>    }<br/>}</pre>"}, {"lang": "Symsyn", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>| FizzBuzz<br/>\u00a0<br/> 1 I<br/> if I LE 100<br/>    mod I 3 X<br/>    mod I 5 Y<br/>    if X EQ 0<br/>       'FIZZ' $S<br/>       if Y EQ 0<br/>          + 'BUZZ' $S <br/>       endif<br/>    else<br/>       if Y EQ 0<br/>          'BUZZ' $S<br/>       else<br/>          ~ I $S<br/>       endif<br/>    endif<br/>    $S []<br/>    + I<br/>    goif<br/> endif<br/>\u00a0</pre>"}, {"lang": "Tcl", "loc": 9, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">proc</span> fizzbuzz <span class=\"br0\">{</span>n <span class=\"br0\">{</span>m1 <span class=\"nu0\">3</span><span class=\"br0\">}</span> <span class=\"br0\">{</span>m2 <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> i <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span>= <span class=\"re0\">$n</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">incr</span> i<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">set</span> ans <span class=\"st0\">\"\"</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"re0\">$m1</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">append</span> ans Fizz<span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"re0\">$m2</span> == <span class=\"nu0\">0</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw2\">append</span> ans Buzz<span class=\"br0\">}</span><br/>        <span class=\"kw2\">puts</span> <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span><span class=\"re0\">$ans</span> eq <span class=\"st0\">\"\"</span> <span class=\"sy0\">?</span> <span class=\"re0\">$i</span>\u00a0: <span class=\"re0\">$ans</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>fizzbuzz <span class=\"nu0\">100</span></pre>"}, {"lang": "TI-83 BASIC", "loc": 10, "block": "<pre class=\"text highlighted_source\">: FIZZBUZZ<br/>101 1 DO<br/>I 15 MOD 0 = IF<br/>PRINT \" FIZZBUZZ \"<br/>ELSE I 3 MOD 0 = IF<br/>PRINT \" FIZZ \"<br/>ELSE I 5 MOD 0 = IF<br/>PRINT \" BUZZ \"<br/>ELSE I . THEN THEN THEN<br/>CR LOOP\u00a0;</pre>"}, {"lang": "TI-83 Hex Assembly", "loc": 10, "block": "<pre class=\"text highlighted_source\">: FIZZBUZZ<br/>101 1 DO<br/>I 15 MOD 0 = IF<br/>PRINT \" FIZZBUZZ \"<br/>ELSE I 3 MOD 0 = IF<br/>PRINT \" FIZZ \"<br/>ELSE I 5 MOD 0 = IF<br/>PRINT \" BUZZ \"<br/>ELSE I . THEN THEN THEN<br/>CR LOOP\u00a0;</pre>"}, {"lang": "TransFORTH", "loc": 10, "block": "<pre class=\"text highlighted_source\">: FIZZBUZZ<br/>101 1 DO<br/>I 15 MOD 0 = IF<br/>PRINT \" FIZZBUZZ \"<br/>ELSE I 3 MOD 0 = IF<br/>PRINT \" FIZZ \"<br/>ELSE I 5 MOD 0 = IF<br/>PRINT \" BUZZ \"<br/>ELSE I . THEN THEN THEN<br/>CR LOOP\u00a0;</pre>"}, {"lang": "Turing", "loc": 13, "block": "<pre class=\"text highlighted_source\">setscreen(\"nocursor,noecho\")<br/>\u00a0<br/>for i\u00a0: 1 .. 100<br/>    if i mod 15 = 0 then<br/>        put \"Fizzbuzz\" ..<br/>    elsif i mod 5 = 0 then<br/>        put \"Buzz\" ..<br/>    elsif i mod 3 = 0 then<br/>        put \"Fizz\" ..<br/>    else<br/>        put i ..<br/>    end if<br/>end for</pre>"}, {"lang": "TUSCRIPT", "loc": 14, "block": "<pre class=\"text highlighted_source\">$$ MODE TUSCRIPT<br/>LOOP n=1,100<br/>mod=MOD (n,15)<br/>SELECT mod<br/>CASE 0<br/>PRINT n,\" FizzBuzz\"<br/>CASE 3,6,9,12<br/>PRINT n,\" Fizz\"<br/>CASE 5,10<br/>PRINT n,\" Buzz\"<br/>DEFAULT<br/>PRINT n<br/>ENDSELECT<br/>ENDLOOP</pre>"}, {"lang": "TXR", "loc": 1, "block": "<pre class=\"text highlighted_source\">$ txr -p \"(mapcar (op if @1 @1 @2) (repeat '(nil nil fizz nil buzz fizz nil nil fizz buzz nil fizz nil nil fizzbuzz)) (range 1 100))\"</pre>"}, {"lang": "UNIX Shell", "loc": 8, "block": "<pre class=\"bash highlighted_source\"><span class=\"re2\">i</span>=<span class=\"nu0\">1</span><br/><span class=\"kw1\">while</span> <span class=\"kw2\">expr</span> <span class=\"re1\">$i</span> <span class=\"st_h\">'&lt;='</span> <span class=\"nu0\">100</span> <span class=\"sy0\">&gt;/</span>dev<span class=\"sy0\">/</span>null; <span class=\"kw1\">do</span><br/>\t<span class=\"re2\">w</span>=<span class=\"kw2\">false</span><br/>\t<span class=\"kw2\">expr</span> <span class=\"re1\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> = <span class=\"nu0\">0</span> <span class=\"sy0\">&gt;/</span>dev<span class=\"sy0\">/</span>null <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">{</span> <span class=\"kw3\">printf</span> Fizz; <span class=\"re2\">w</span>=<span class=\"kw2\">true</span>; <span class=\"br0\">}</span><br/>\t<span class=\"kw2\">expr</span> <span class=\"re1\">$i</span> <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> = <span class=\"nu0\">0</span> <span class=\"sy0\">&gt;/</span>dev<span class=\"sy0\">/</span>null <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">{</span> <span class=\"kw3\">printf</span> Buzz; <span class=\"re2\">w</span>=<span class=\"kw2\">true</span>; <span class=\"br0\">}</span><br/>\t<span class=\"kw1\">if</span> <span class=\"re1\">$w</span>; <span class=\"kw1\">then</span> <span class=\"kw3\">echo</span>; <span class=\"kw1\">else</span> <span class=\"kw3\">echo</span> <span class=\"re1\">$i</span>; <span class=\"kw1\">fi</span><br/>\t<span class=\"re2\">i</span>=<span class=\"sy0\">`</span><span class=\"kw2\">expr</span> <span class=\"re1\">$i</span> + <span class=\"nu0\">1</span><span class=\"sy0\">`</span><br/><span class=\"kw1\">done</span></pre>"}, {"lang": "Ursa", "loc": 16, "block": "<pre class=\"text highlighted_source\">#<br/># fizzbuzz<br/>#<br/>decl int i<br/>for (set i 1) (&lt; i 101) (inc i)<br/>        if (= (mod i 3) 0)<br/>                out \"fizz\" console<br/>        end if<br/>        if (= (mod i 5) 0)<br/>                out \"buzz\" console<br/>        end if<br/>        if (not (or (= (mod i 3) 0) (= (mod i 5) 0)))<br/>                out i console<br/>        end if<br/>        out endl console<br/>end for</pre>"}, {"lang": "Ursala", "loc": 8, "block": "<pre class=\"text highlighted_source\">#import std<br/>#import nat<br/>\u00a0<br/>fizzbuzz = ^T(&amp;&amp;'Fizz'! not remainder\\3,&amp;&amp;'Buzz'! not remainder\\5)|| ~&amp;h+\u00a0%nP<br/>\u00a0<br/>#show+<br/>\u00a0<br/>main = fizzbuzz*t iota 101</pre>"}, {"lang": "V", "loc": 9, "block": "<pre class=\"text highlighted_source\">[fizzbuzz<br/>    1 [&gt;=] [<br/>     [[15\u00a0% zero?] ['fizzbuzz' puts]<br/>      [5\u00a0% zero?]  ['buzz' puts]<br/>      [3\u00a0% zero?]  ['fizz' puts]<br/>      [true] [dup puts]<br/>    ] when succ<br/>  ] while].<br/> |100 fizzbuzz</pre>"}, {"lang": "Vala", "loc": 10, "block": "<pre class=\"vala highlighted_source\"><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> stdout.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Fizz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> stdout.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Buzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> stdout.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"FizzBuzz<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> stdout.<span class=\"me1\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es0\">\\n</span>\"</span>, i<span class=\"br0\">)</span><span class=\"sy0\">;</span>    <br/>\u00a0<br/>    <span class=\"br0\">}</span><br/><span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "VAX Assembly", "loc": 43, "block": "<pre class=\"text highlighted_source\">                           00000008  0000     1 len\t=8<br/>                           00000008  0000     2 msg:\t.blkb\tlen\t\t\t;output buffer<br/>                           0000000C  0008     3 desc:\t.blkl\t1\t\t\t;descriptor lenght field<br/>                           00000000' 000C     4 \t.address msg\t\t\t;pointer to buffer<br/>                           00000012  0010     5 outlen:\t.blkw\t1<br/>         4C 55 21 0000001A'010E0000' 0012     6 ctr:\t.ascid\t\"!UL\"<br/>                                     001D     7 <br/>                               0000  001D     8 .entry\tstart,0<br/>                            52   7C  001F     9 \tclrq\tr2\t\t\t;r2+r3 64bit<br/>                            52   D6  0021    10 \tincl\tr2\t\t\t;start index 1<br/>                                     0023    11 loop:<br/>                         E2 AF   B4  0023    12 \tclrw\tdesc\t\t\t;assume not fizz and or buzz<br/>                    55   D7 AF   9E  0026    13 \tmovab\tmsg, r5\t\t\t;pointer to message buffer<br/>             54   50   52   03   7B  002A    14 \tediv\t#3,r2,r0,r4\t\t;divr.rl,divd.rq,quo.wl,rem.wl<br/>                            54   D5  002F    15 \ttstl\tr4\t\t\t;remainder<br/>                            0B   12  0031    16 \tbneq\tnot_fizz\t\t;not equal zero<br/>                                     0033    17 <br/>              85   7A7A6966 8F   D0  0033    18 \tmovl\t#^a\"fizz\", (r5)+\t;add to message<br/>                    CA AF   04   A0  003A    19 \taddw2\t#4, desc\t\t;and update length<br/>                                     003E    20 not_fizz:<br/>             54   50   52   05   7B  003E    21 \tediv\t#5,r2,r0,r4<br/>                            54   D5  0043    22 \ttstl\tr4<br/>                            0B   12  0045    23 \tbneq\tnot_buzz<br/>                                     0047    24 <br/>              85   7A7A7562 8F   D0  0047    25 \tmovl\t#^a\"buzz\", (r5)+<br/>                    B6 AF   04   A0  004E    26 \taddw2\t#4, desc<br/>                                     0052    27 not_buzz:<br/>                         B3 AF   B5  0052    28 \ttstw\tdesc\t\t\t;fizz and or buzz?<br/>                            1B   12  0055    29 \tbneq\tshow_buffer\t\t;neq - yes<br/>                                     0057    30 <br/>                    AD AF   08   B0  0057    31 \tmovw\t#len, desc\t\t;fao length limit<br/>                                     005B    32 \t$fao_s -\t\t\t;eql -no<br/>                                     005B    33 \t\t ctrstr = ctr, -\t;show number<br/>                                     005B    34 \t\t outlen = outlen, -<br/>                                     005B    35 \t\t outbuf = desc, -<br/>                                     005B    36 \t\t p1     = r2<br/>                 96 AF   A0 AF   B0  006D    37 \tmovw\toutlen, desc\t\t;characters filled by fao<br/>                                     0072    38 show_buffer:<br/>                         93 AF   7F  0072    39 \tpushaq\tdesc<br/>              00000000'GF   01   FB  0075    40 \tcalls\t#1, g^lib$put_output<br/>           9F 52   00000064 8F   F3  007C    41 \tAOBLEQ\t#100,r2,loop\t\t;limit.rl, index.ml<br/>                                 04  0084    42 \tret<br/>                                     0085    43 .end\tstart</pre>"}, {"lang": "VBA", "loc": 18, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> FizzBuzz()<br/><span class=\"kw4\">Dim</span> Tb(1 <span class=\"kw3\">To</span> 100) <span class=\"kw4\">As</span> <span class=\"kw1\">Variant</span><br/><span class=\"kw4\">Dim</span> i <span class=\"kw4\">As</span> <span class=\"kw1\">Integer</span><br/>    <span class=\"kw3\">For</span> i = 1 <span class=\"kw3\">To</span> 100<br/>        Tb(i) = i<br/>        <span class=\"kw3\">If</span> i <span class=\"kw4\">Mod</span> 15 = 0 <span class=\"kw3\">Then</span><br/>            Tb(i) = <span class=\"st0\">\"FizzBuzz\"</span><br/>        <span class=\"kw3\">ElseIf</span> i <span class=\"kw4\">Mod</span> 3 = 0 <span class=\"kw3\">Then</span><br/>            Tb(i) = <span class=\"st0\">\"Fizz\"</span><br/>        <span class=\"kw3\">ElseIf</span> i <span class=\"kw4\">Mod</span> 5 = 0 <span class=\"kw3\">Then</span><br/>            Tb(i) = <span class=\"st0\">\"Buzz\"</span><br/>        <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/>    <span class=\"kw3\">Next</span><br/>    Debug.<span class=\"kw4\">Print</span> Join(Tb, vbCrLf)<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span></pre>"}, {"lang": "VBScript", "loc": 11, "block": "<pre class=\"text highlighted_source\">For i = 1 To 100<br/>\tIf i Mod 15 = 0 Then<br/>\t\tWScript.Echo \"FizzBuzz\"<br/>\tElseIf i Mod 5 = 0 Then<br/>\t\tWScript.Echo \"Buzz\"<br/>\tElseIf i Mod 3 = 0 Then<br/>\t\tWScript.Echo \"Fizz\"<br/>\tElse<br/>\t\tWScript.Echo i<br/>\tEnd If<br/>Next</pre>"}, {"lang": "Verbexx", "loc": 11, "block": "<pre class=\"text highlighted_source\">@LOOP init:{@VAR t3 t5; @VAR i = 1} while:(i &lt;= 100) next:{i++}<br/>{<br/>  t3 = (i\u00a0% 3 == 0); <br/>  t5 = (i\u00a0% 5 == 0);<br/>\u00a0<br/>  @SAY ( @CASE when:(t3 &amp;&amp; t5) { 'FizzBuzz }<br/>               when: t3        { 'Fizz     }<br/>               when: t5        { 'Buzz     }<br/>               else:           { i         }           <br/>       );<br/>};</pre>"}, {"lang": "Vim Script", "loc": 11, "block": "<pre class=\"vim highlighted_source\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw3\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">100</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">15</span> == <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"FizzBuzz\"</span><br/>    <span class=\"kw1\">elseif</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">5</span> == <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"Buzz\"</span><br/>    <span class=\"kw1\">elseif</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">3</span> == <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">echo</span> <span class=\"st0\">\"Fizz\"</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">echo</span> i<br/>    <span class=\"kw1\">endif</span><br/><span class=\"kw1\">endfor</span></pre>"}, {"lang": "Visual Basic .NET", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>implement main<br/>   open core, console<br/>\u00a0<br/>class predicates<br/>   fizzbuzz\u00a0: (integer) -&gt; string procedure (i).<br/>\u00a0<br/>clauses<br/>    fizzbuzz(X) = S\u00a0:- X mod 15 = 0, S = \"FizzBuzz\",\u00a0!.<br/>    fizzbuzz(X) = S\u00a0:- X mod 5 = 0, S = \"Buzz\",\u00a0!.<br/>    fizzbuzz(X) = S\u00a0:- X mod 3 = 0, S = \"Fizz\",\u00a0!.<br/>    fizzbuzz(X) = S\u00a0:- S = toString(X).<br/>\u00a0<br/>    run()\u00a0:-<br/>        foreach X = std::fromTo(1,100) do<br/>            write(fizzbuzz(X)), write(\"\\n\")<br/>        end foreach,<br/>        succeed.<br/>\u00a0<br/>end implement main<br/>\u00a0<br/>goal<br/>    console::runUtf8(main::run).<br/>\u00a0</pre>"}, {"lang": "Visual Prolog", "loc": 24, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>implement main<br/>   open core, console<br/>\u00a0<br/>class predicates<br/>   fizzbuzz\u00a0: (integer) -&gt; string procedure (i).<br/>\u00a0<br/>clauses<br/>    fizzbuzz(X) = S\u00a0:- X mod 15 = 0, S = \"FizzBuzz\",\u00a0!.<br/>    fizzbuzz(X) = S\u00a0:- X mod 5 = 0, S = \"Buzz\",\u00a0!.<br/>    fizzbuzz(X) = S\u00a0:- X mod 3 = 0, S = \"Fizz\",\u00a0!.<br/>    fizzbuzz(X) = S\u00a0:- S = toString(X).<br/>\u00a0<br/>    run()\u00a0:-<br/>        foreach X = std::fromTo(1,100) do<br/>            write(fizzbuzz(X)), write(\"\\n\")<br/>        end foreach,<br/>        succeed.<br/>\u00a0<br/>end implement main<br/>\u00a0<br/>goal<br/>    console::runUtf8(main::run).<br/>\u00a0</pre>"}, {"lang": "Wart", "loc": 9, "block": "<pre class=\"text highlighted_source\">for i 1 (i &lt;= 100) ++i<br/>  prn (if (divides i 15)<br/>            \"FizzBuzz\"<br/>          (divides i 3)<br/>            \"Fizz\"<br/>          (divides i 5)<br/>            \"Buzz\"<br/>         \u00a0:else<br/>            i)</pre>"}, {"lang": "WDTE", "loc": 13, "block": "<pre class=\"text highlighted_source\">let io =&gt; import 'io';<br/>let s =&gt; import 'stream';<br/>\u00a0<br/>let multiple of n =&gt; == (% n of) 0;<br/>\u00a0<br/>let fizzbuzz n =&gt; switch n {<br/>\tmultiple (* 3 5) =&gt; 'FizzBuzz';<br/>\tmultiple 3 =&gt; 'Fizz';<br/>\tmultiple 5 =&gt; 'Buzz';<br/>\tdefault =&gt; n;<br/>} -- io.writeln io.stdout;<br/>\u00a0<br/>s.range 1 101 -&gt; s.map fizzbuzz -&gt; s.drain;</pre>"}, {"lang": "Whitespace", "loc": 1, "block": "<pre class=\"text highlighted_source\">@each &amp;x!console.log x\u00a0!*&amp;x?{%%x 15 \"FizzBuzz\"\u00a0%%x 5 \"Buzz\"\u00a0%%x 3 \"Fizz\" x} @to 100</pre>"}, {"lang": "Wortel", "loc": 1, "block": "<pre class=\"text highlighted_source\">@each &amp;x!console.log x\u00a0!*&amp;x?{%%x 15 \"FizzBuzz\"\u00a0%%x 5 \"Buzz\"\u00a0%%x 3 \"Fizz\" x} @to 100</pre>"}, {"lang": " X86 Assembly", "loc": 106, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>; x86_64 linux nasm<br/>\u00a0<br/>section .bss<br/>number resb 4<br/>\u00a0<br/>section .data<br/>fizz: db \"Fizz\"<br/>buzz: db \"Buzz\"<br/>newLine: db 10<br/>\u00a0<br/>section .text<br/>global _start<br/>\u00a0<br/>_start:<br/>\u00a0<br/>  mov rax, 1     \u00a0; initialize counter<br/>\u00a0<br/>  loop:<br/>    push rax<br/>    call fizzBuzz<br/>    pop rax<br/>    inc rax<br/>    cmp rax, 100<br/>    jle loop<br/>\u00a0<br/>  mov rax, 60<br/>  mov rdi, 0<br/>  syscall<br/>\u00a0<br/>fizzBuzz:<br/>  mov r10, rax<br/>  mov r15, 0      \u00a0; boolean fizz or buzz<br/>  checkFizz:<br/>    xor rdx, rdx  \u00a0; clear rdx for division<br/>    mov rbx, 3<br/>    div rbx<br/>    cmp rdx, 0    \u00a0; modulo result here<br/>    jne checkBuzz<br/>    mov r15, 1<br/>    mov rsi, fizz<br/>    mov rdx, 4<br/>    mov rax, 1<br/>    mov rdi, 1<br/>    syscall<br/>  checkBuzz:<br/>    mov rax, r10<br/>    xor rdx, rdx<br/>    mov rbx, 5<br/>    div rbx<br/>    cmp rdx, 0<br/>    jne finishLine<br/>    mov r15, 1<br/>    mov rsi, buzz<br/>    mov rdx, 4<br/>    mov rax, 1<br/>    mov rdi, 1<br/>    syscall<br/>  finishLine:     \u00a0; print number if no fizz or buzz<br/>    cmp r15, 1<br/>    je nextLine<br/>    mov rax, r10<br/>    call printNum<br/>    ret<br/>    nextLine:<br/>      mov rsi, newLine<br/>      mov rdx, 1<br/>      mov rax, 1<br/>      mov rdi, 1<br/>      syscall<br/>      ret<br/>\u00a0<br/>printNum:         \u00a0; write proper digits into number buffer<br/>  cmp rax, 100<br/>  jl lessThanHundred<br/>  mov byte [number], 49<br/>  mov byte [number + 1], 48<br/>  mov byte [number + 2], 48<br/>  mov rdx, 3<br/>  jmp print<br/>\u00a0<br/>  lessThanHundred:\u00a0; get digits to write through division <br/>    xor rdx, rdx<br/>    mov rbx, 10<br/>    div rbx<br/>    add rdx, 48<br/>    cmp rax, 0<br/>    je lessThanTen<br/>    add rax, 48<br/>    mov byte [number], al<br/>    mov byte [number + 1], dl<br/>    mov rdx, 2<br/>    jmp print<br/>\u00a0<br/>  lessThanTen:<br/>    mov byte [number], dl<br/>    mov rdx, 1<br/>  print:<br/>    mov byte [number + rdx], 10  \u00a0; add newline<br/>    inc rdx<br/>    mov rax, 1<br/>    mov rdi, 1<br/>    mov rsi, number<br/>    syscall<br/>  ret<br/>\u00a0</pre>"}, {"lang": "XLISP", "loc": 13, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> fizzbuzz <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">defun</span> fizzb <span class=\"br0\">(</span>x y<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>display <span class=\"br0\">(</span><span class=\"kw1\">cond</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"st0\">\"FizzBuzz\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"st0\">\"Fizz\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>mod x <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"st0\">\"Buzz\"</span><span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>t x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>newline<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> x y<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>fizzb <span class=\"br0\">(</span>+ x <span class=\"nu0\">1</span><span class=\"br0\">)</span> y<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>fizzb <span class=\"nu0\">1</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>fizzbuzz<span class=\"br0\">)</span></pre>"}, {"lang": "XMIDAS", "loc": 15, "block": "<pre class=\"text highlighted_source\">startmacro<br/>  loop 100 count<br/>    calc/quiet three ^count 3 modulo<br/>    calc/quiet five ^count 5 modulo<br/>    if ^three eq 0 and ^five eq 0<br/>      say \"fizzbuzz\"<br/>    elseif ^three eq 0<br/>      say \"fizz\"<br/>    elseif ^five eq 0<br/>      say \"buzz\"<br/>    else<br/>      say ^count<br/>    endif<br/>  endloop<br/>endmacro</pre>"}, {"lang": "XPath 2.0", "loc": 2, "block": "<pre class=\"text highlighted_source\">for $n in 1 to 100 return  <br/>  concat('fizz'[not($n mod 3)], 'buzz'[not($n mod 5)], $n[$n mod 15 = (1,2,4,7,8,11,13,14)])</pre>"}, {"lang": "XPL0", "loc": 9, "block": "<pre class=\"text highlighted_source\">code CrLf=9, IntOut=11, Text=12;<br/>int     N;<br/>[for N:= 1 to 100 do<br/>       [if rem(N/3)=0 then Text(0,\"Fizz\");<br/>        if rem(N/5)=0 then Text(0,\"Buzz\")<br/>        else if rem(N/3)#0 then IntOut(0,N);<br/>        CrLf(0);<br/>       ];<br/>]</pre>"}, {"lang": "XSLT", "loc": 53, "block": "<pre class=\"xml highlighted_source\"><span class=\"sc3\"><span class=\"re1\">&lt;?xml</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"utf-8\"</span> <span class=\"re2\">?&gt;</span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;xsl:stylesheet</span> <span class=\"re0\">xmlns:xsl</span>=<span class=\"st0\">\"http://www.w3.org/1999/XSL/Transform\"</span> <span class=\"re0\">version</span>=<span class=\"st0\">\"1.0\"</span><span class=\"re2\">&gt;</span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:output</span> <span class=\"re0\">method</span>=<span class=\"st0\">\"text\"</span> <span class=\"re0\">encoding</span>=<span class=\"st0\">\"utf-8\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Outputs a line for a single FizzBuzz iteration. --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"fizzbuzz-single\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"n\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- $s will be \"\", \"Fizz\", \"Buzz\", or \"FizzBuzz\". --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:variable</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"s\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$n mod 3 = 0\"</span><span class=\"re2\">&gt;</span></span>Fizz<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$n mod 5 = 0\"</span><span class=\"re2\">&gt;</span></span>Buzz<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:variable<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Output $s. If $s is blank, also output $n. --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$s\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$s = ''\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$n\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- End line. --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:value-of</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"'&amp;#10;'\"</span><span class=\"re2\">/&gt;</span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Calls fizzbuzz-single over each value in a range. --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"fizzbuzz-range\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc-1\">&lt;!-- Default parameters: From 1 through 100 --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"startAt\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"1\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"endAt\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$startAt + 99\"</span><span class=\"re2\">/&gt;</span></span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Simulate a loop with tail recursion. --&gt;</span><br/>\u00a0<br/>\t\t<span class=\"sc-1\">&lt;!-- Loop condition --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:if</span> <span class=\"re0\">test</span>=<span class=\"st0\">\"$startAt &amp;lt;= $endAt\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t<span class=\"sc-1\">&lt;!-- Loop body --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"fizzbuzz-single\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"n\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$startAt\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t\t\t<span class=\"sc-1\">&lt;!-- Increment counter, repeat --&gt;</span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"fizzbuzz-range\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"startAt\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$startAt + 1\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:with-param</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"endAt\"</span> <span class=\"re0\">select</span>=<span class=\"st0\">\"$endAt\"</span><span class=\"re2\">/&gt;</span></span><br/>\t\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:call-template<span class=\"re2\">&gt;</span></span></span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:if<span class=\"re2\">&gt;</span></span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/>\u00a0<br/>\t<span class=\"sc-1\">&lt;!-- Main procedure --&gt;</span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:template</span> <span class=\"re0\">match</span>=<span class=\"st0\">\"/\"</span><span class=\"re2\">&gt;</span></span><br/>\t\t<span class=\"sc-1\">&lt;!-- Default parameters are used --&gt;</span><br/>\t\t<span class=\"sc3\"><span class=\"re1\">&lt;xsl:call-template</span> <span class=\"re0\">name</span>=<span class=\"st0\">\"fizzbuzz-range\"</span><span class=\"re2\">/&gt;</span></span><br/>\t<span class=\"sc3\"><span class=\"re1\">&lt;/xsl:template<span class=\"re2\">&gt;</span></span></span><br/><span class=\"sc3\"><span class=\"re1\">&lt;/xsl:stylesheet<span class=\"re2\">&gt;</span></span></span></pre>"}, {"lang": "Yorick", "loc": 9, "block": "<pre class=\"text highlighted_source\">for(i = 1; i &lt;= 100; i++) {<br/>    if(i\u00a0% 3 == 0)<br/>        write, format=\"%s\", \"Fizz\";<br/>    if(i\u00a0% 5 == 0)<br/>        write, format=\"%s\", \"Buzz\";<br/>    if(i\u00a0% 3 &amp;&amp; i\u00a0% 5)<br/>        write, format=\"%d\", i;<br/>    write, \"\";<br/>}</pre>"}, {"lang": "Z80 Assembly", "loc": 6, "block": "<pre class=\"text highlighted_source\">foreach n in ([1..100]) {<br/>   if(n\u00a0% 3 == 0) print(\"Fizz\");<br/>   if(not (n%5)) \"Buzz\".print();<br/>   if(n%3 and n%5) print(n);<br/>   println();<br/>}</pre>"}, {"lang": "zkl", "loc": 6, "block": "<pre class=\"text highlighted_source\">foreach n in ([1..100]) {<br/>   if(n\u00a0% 3 == 0) print(\"Fizz\");<br/>   if(not (n%5)) \"Buzz\".print();<br/>   if(n%3 and n%5) print(n);<br/>   println();<br/>}</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 8, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"nu0\">10</span> DEF FN m<span class=\"br0\">(</span>a,b<span class=\"br0\">)</span>=a-<span class=\"kw3\">INT</span> <span class=\"br0\">(</span>a/b<span class=\"br0\">)</span>*b<br/><span class=\"nu0\">20</span> <span class=\"kw1\">FOR</span> a=<span class=\"nu0\">1</span> <span class=\"kw1\">TO</span> <span class=\"nu0\">100</span><br/><span class=\"nu0\">30</span> <span class=\"kw1\">LET</span> o$=<span class=\"st0\">\"\"</span><br/><span class=\"nu0\">40</span> <span class=\"kw1\">IF</span> FN m<span class=\"br0\">(</span>a,<span class=\"nu0\">3</span><span class=\"br0\">)</span>=<span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> o$=<span class=\"st0\">\"Fizz\"</span><br/><span class=\"nu0\">50</span> <span class=\"kw1\">IF</span> FN m<span class=\"br0\">(</span>a,<span class=\"nu0\">5</span><span class=\"br0\">)</span>=<span class=\"nu0\">0</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> o$=o$+<span class=\"st0\">\"Buzz\"</span><br/><span class=\"nu0\">60</span> <span class=\"kw1\">IF</span> o$=<span class=\"st0\">\"\"</span> <span class=\"kw1\">THEN</span> <span class=\"kw1\">LET</span> o$=<span class=\"kw3\">STR</span>$ a<br/><span class=\"nu0\">70</span> <span class=\"kw1\">PRINT</span> o$<br/><span class=\"nu0\">80</span> <span class=\"kw1\">NEXT</span> a</pre>"}]}