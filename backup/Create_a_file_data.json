{"task": "Create_a_file", "blocks": [{"lang": "4DOS Batch", "loc": 5, "block": "<pre class=\"text highlighted_source\">echos &gt; output.txt<br/>mkdir docs<br/>\u00a0<br/>echos &gt; \\output.txt<br/>mkdir \\docs</pre>"}, {"lang": "Ada", "loc": 17, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Streams</span>.<span class=\"me1\">Stream_IO</span>, Ada.<span class=\"me1\">Directories</span>;<br/><span class=\"kw3\">use</span>  Ada.<span class=\"me1\">Streams</span>.<span class=\"me1\">Stream_IO</span>, Ada.<span class=\"me1\">Directories</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> File_Creation <span class=\"kw1\">is</span><br/>\u00a0<br/>   File_Handle\u00a0: File_Type;<br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>\u00a0<br/>   Create <span class=\"br0\">(</span>File_Handle, Out_File, <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>;<br/>   Close <span class=\"br0\">(</span>File_Handle<span class=\"br0\">)</span>;<br/>   Create_Directory<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>;<br/>   Create <span class=\"br0\">(</span>File_Handle, Out_File, <span class=\"st0\">\"/output.txt\"</span><span class=\"br0\">)</span>;<br/>   Close <span class=\"br0\">(</span>File_Handle<span class=\"br0\">)</span>;<br/>   Create_Directory<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"kw1\">end</span> File_Creation;</pre>"}, {"lang": "Aikido", "loc": 11, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>var sout = openout (\"output.txt\") // in current dir<br/>sout.close()<br/>\u00a0<br/>var sout1 = openout (\"/output.txt\")   // in root dir<br/>sout1.close()<br/>\u00a0<br/>mkdir (\"docs\")<br/>mkdir (\"/docs\")<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Aime", "loc": 37, "block": "<pre class=\"text highlighted_source\"># Make a directory using the -mkdir- program<br/>void<br/>mkdir(text p)<br/>{<br/>    sshell ss;<br/>\u00a0<br/>    b_cast(ss_path(ss), \"mkdir\");<br/>\u00a0<br/>    l_append(ss_argv(ss), \"mkdir\");<br/>    l_append(ss_argv(ss), p);<br/>\u00a0<br/>    ss_link(ss);<br/>}<br/>\u00a0<br/>void<br/>create_file(text p)<br/>{<br/>    file f;<br/>\u00a0<br/>    f_open(f, p, OPEN_CREATE | OPEN_TRUNCATE | OPEN_WRITEONLY, 00644);<br/>}<br/>\u00a0<br/>void<br/>create_pair(text prefix)<br/>{<br/>    create_file(cat(prefix, \"output.txt\"));<br/>    mkdir(cat(prefix, \"docs\"));<br/>}<br/>\u00a0<br/>integer<br/>main(void)<br/>{<br/>    create_pair(\"\");<br/>    create_pair(\"/\");<br/>\u00a0<br/>    return 0;<br/>}</pre>"}, {"lang": "ALGOL 68", "loc": 38, "block": "<pre class=\"algol68 highlighted_source\">main<span class=\"sy1\">:</span><span class=\"br0\">(</span><br/>\u00a0<br/>  <span class=\"kw3\">INT</span> <span class=\"kw27\">errno</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw4\">PROC</span> touch <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">STRING</span> file name<span class=\"br0\">)</span><span class=\"kw3\">INT</span><span class=\"sy1\">:</span><br/>  <span class=\"kw2\">BEGIN</span><br/>    <span class=\"kw6\">FILE</span> actual file<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span> <span class=\"kw27\">errno</span> <span class=\"sy1\">:=</span> <span class=\"kw22\">open</span><span class=\"br0\">(</span>actual file<span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw21\">stand out channel</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">IF</span> <span class=\"kw27\">errno</span> <span class=\"kw15\">NE</span> 0 <span class=\"kw2\">THEN</span> <span class=\"kw2\">GO TO</span> stop touch <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>    <span class=\"kw22\">close</span><span class=\"br0\">(</span>actual file<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># detach the book and keep it #</span><br/>    <span class=\"kw27\">errno</span><br/>  <span class=\"kw2\">EXIT</span><br/>  stop touch<span class=\"sy1\">:</span><br/>      <span class=\"kw27\">errno</span><br/>  <span class=\"kw2\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw27\">errno</span> <span class=\"sy1\">:=</span> touch<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"kw27\">errno</span> <span class=\"sy1\">:=</span> touch<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"coMULTI\"># ALGOL 68 has no concept of directories,<br/>    however a file can have multiple pages,<br/>    the pages are identified by page number only #</span><br/>\u00a0<br/>  <span class=\"kw4\">PROC</span> mkpage <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">STRING</span> file name<span class=\"sy1\">,</span> <span class=\"kw3\">INT</span> page x<span class=\"br0\">)</span><span class=\"kw3\">INT</span><span class=\"sy1\">:</span><br/>  <span class=\"kw2\">BEGIN</span><br/>    <span class=\"kw6\">FILE</span> actual file<span class=\"sy1\">;</span><br/>    <span class=\"kw3\">INT</span> <span class=\"kw27\">errno</span> <span class=\"sy1\">:=</span> <span class=\"kw22\">open</span><span class=\"br0\">(</span>actual file<span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw21\">stand out channel</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>    <span class=\"kw2\">IF</span> <span class=\"kw27\">errno</span> <span class=\"kw15\">NE</span> 0 <span class=\"kw2\">THEN</span> <span class=\"kw2\">GO TO</span> stop mkpage <span class=\"kw2\">FI</span><span class=\"sy1\">;</span><br/>    set<span class=\"br0\">(</span>actual file<span class=\"sy1\">,</span>page x<span class=\"sy1\">,</span>1<span class=\"sy1\">,</span>1<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># skip to page x, line 1, character 1 #</span><br/>    <span class=\"kw22\">close</span><span class=\"br0\">(</span>actual file<span class=\"br0\">)</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># detach the new page and keep it #</span><br/>    <span class=\"kw27\">errno</span><br/>  <span class=\"kw2\">EXIT</span><br/>  stop mkpage<span class=\"sy1\">:</span><br/>      <span class=\"kw27\">errno</span><br/>  <span class=\"kw2\">END</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw27\">errno</span> <span class=\"sy1\">:=</span> mkpage<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"sy1\">,</span>2<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"br0\">)</span></pre>"}, {"lang": "APL", "loc": 4, "block": "<pre class=\"text highlighted_source\">      'output.txt' \u2395ncreate \u00af1+\u230a/0,\u2395nnums<br/>      '\\output.txt' \u2395ncreate \u00af1+\u230a/0,\u2395nnums<br/>      \u2395mkdir 'Docs'<br/>      \u2395mkdir '\\Docs'</pre>"}, {"lang": "AppleScript", "loc": 1, "block": "<pre class=\"applescript highlighted_source\"><span class=\"kw1\">close</span> <span class=\"br0\">(</span><span class=\"kw1\">open</span> for access <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "AutoHotkey", "loc": 4, "block": "<pre class=\"autohotkey highlighted_source\"><a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,,</span>output<span class=\"sy0\">.</span>txt<br/><a href=\"http://www.autohotkey.com/docs/commands/FileCreateDir.htm\"><span class=\"kw3\">FileCreateDir</span></a><span class=\"sy0\">,</span> docs<br/><a href=\"http://www.autohotkey.com/docs/commands/FileAppend.htm\"><span class=\"kw3\">FileAppend</span></a><span class=\"sy0\">,,</span>c:\\output<span class=\"sy0\">.</span>txt<br/><a href=\"http://www.autohotkey.com/docs/commands/FileCreateDir.htm\"><span class=\"kw3\">FileCreateDir</span></a><span class=\"sy0\">,</span> c:\\docs</pre>"}, {"lang": "AWK", "loc": 8, "block": "<pre class=\"awk highlighted_source\"><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\"</span> <span class=\"sy2\">&gt;</span> <span class=\"st0\">\"output.txt\"</span><br/>  <span class=\"kw5\">close</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw5\">printf</span> <span class=\"st0\">\"\"</span> <span class=\"sy2\">&gt;</span> <span class=\"st0\">\"/output.txt\"</span><br/>  <span class=\"kw5\">close</span><span class=\"br0\">(</span><span class=\"st0\">\"/output.txt\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw5\">system</span><span class=\"br0\">(</span><span class=\"st0\">\"mkdir docs\"</span><span class=\"br0\">)</span><br/>  <span class=\"kw5\">system</span><span class=\"br0\">(</span><span class=\"st0\">\"mkdir /docs\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Axe", "loc": 1, "block": "<pre class=\"text highlighted_source\">GetCalc(\"appvOUTPUT\",0)</pre>"}, {"lang": "BASIC", "loc": 4, "block": "<pre class=\"qbasic highlighted_source\"><a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> <span class=\"st0\">\"output.txt\"</span> <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckoutput.shtml\"><span class=\"kw3\">OUTPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <span class=\"nu0\">1</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a><br/><a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> <span class=\"st0\">\"\\output.txt\"</span> <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckoutput.shtml\"><span class=\"kw3\">OUTPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <span class=\"nu0\">1</span><br/><a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a></pre>"}, {"lang": "Batch File", "loc": 2, "block": "<pre class=\"dos highlighted_source\"><a href=\"http://www.ss64.com/nt/copy.html\"><span class=\"kw3\">copy</span></a> <a href=\"http://www.ss64.com/nt/nul.html\"><span class=\"kw4\">nul</span></a> output.txt<br/><a href=\"http://www.ss64.com/nt/copy.html\"><span class=\"kw3\">copy</span></a> <a href=\"http://www.ss64.com/nt/nul.html\"><span class=\"kw4\">nul</span></a> \\output.txt</pre>"}, {"lang": "BBC BASIC", "loc": 4, "block": "<pre class=\"text highlighted_source\">      CLOSE #OPENOUT(\"output.txt\")<br/>      CLOSE #OPENOUT(\"\\output.txt\")<br/>      *MKDIR docs<br/>      *MKDIR \\docs</pre>"}, {"lang": "Bracmat", "loc": 1, "block": "<pre class=\"text highlighted_source\">put$(,\"output.txt\",NEW)</pre>"}, {"lang": "C", "loc": 8, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  FILE <span class=\"sy0\">*</span>fh <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html\"><span class=\"kw3\">fopen</span></a><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>  <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>fh<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "ChucK", "loc": 4, "block": "<pre class=\"c highlighted_source\">\u00a0<br/>FileIO text<span class=\"sy0\">;</span><br/>text.<span class=\"me1\">open</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"sy0\">,</span> FileIO.<span class=\"me1\">WRITE</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0</pre>"}, {"lang": "C++", "loc": 14, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include &lt;fstream&gt;</span><br/><span class=\"co2\">#include &lt;direct.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\tstd<span class=\"sy4\">::</span><span class=\"me2\">fstream</span> f<span class=\"br0\">(</span> <span class=\"st0\">\"output.txt\"</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ios</span><span class=\"sy4\">::</span><span class=\"me2\">out</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tf.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tf.<span class=\"me1\">open</span><span class=\"br0\">(</span> <span class=\"st0\">\"/output.txt\"</span>, std<span class=\"sy4\">::</span><span class=\"me2\">ios</span><span class=\"sy4\">::</span><span class=\"me2\">out</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\tf.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t_mkdir<span class=\"br0\">(</span> <span class=\"st0\">\"docs\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\t_mkdir<span class=\"br0\">(</span> <span class=\"st0\">\"/docs\"</span> <span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 12, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">using</span> <span class=\"co3\">System.IO</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">class</span> Program <span class=\"br0\">{</span><br/>    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        File<span class=\"sy0\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        File<span class=\"sy0\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st_h\">@\"\\output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>        Directory<span class=\"sy0\">.</span><span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        Directory<span class=\"sy0\">.</span><span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st_h\">@\"\\docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Clojure", "loc": 5, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>import '<span class=\"br0\">(</span>java<span class=\"sy0\">.</span>io File<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">.</span>createNewFile <span class=\"br0\">(</span>new File <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">.</span>mkdir <span class=\"br0\">(</span>new File <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">.</span>createNewFile <span class=\"br0\">(</span>File<span class=\"sy0\">.</span> <span class=\"br0\">(</span>str <span class=\"br0\">(</span>File/separator<span class=\"br0\">)</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">.</span>mkdir <span class=\"br0\">(</span>File<span class=\"sy0\">.</span> <span class=\"br0\">(</span>str <span class=\"br0\">(</span>File/separator<span class=\"br0\">)</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "COBOL", "loc": 41, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> create-a-<span class=\"kw3\">file</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> skip                 <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span> <span class=\"kw3\">value</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> file-name<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"/output.txt\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> dir-name<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"/docs\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> file-handle          <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       files-<span class=\"kw1\">main</span><span class=\"sy0\">.</span><br/>\u00a0<br/>      *&gt; create <span class=\"kw3\">in</span> current working directory<br/>       <span class=\"kw2\">perform</span> create-file-and-dir<br/>\u00a0<br/>      *&gt; create <span class=\"kw3\">in</span> root <span class=\"kw3\">of</span> <span class=\"kw3\">file</span> system<span class=\"sy0\">,</span> will fail without privilege<br/>       <span class=\"kw2\">move</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> skip<br/>       <span class=\"kw2\">perform</span> create-file-and-dir<br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>\u00a0<br/>       create-file-and-dir<span class=\"sy0\">.</span><br/>      *&gt; create <span class=\"kw3\">file</span> <span class=\"kw3\">in</span> current working dir<span class=\"sy0\">,</span> <span class=\"kw3\">for</span> read/<span class=\"kw3\">write</span><br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"CBL_CREATE_FILE\"</span> <span class=\"kw3\">using</span> file-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"nu0\">3</span> <span class=\"nu0\">0</span> <span class=\"nu0\">0</span> file-handle<br/>       <span class=\"kw1\">if</span> return-<span class=\"kw1\">code</span> <span class=\"kw3\">not</span> <span class=\"kw3\">equal</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"error: CBL_CREATE_FILE \"</span> file-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"st0\">\": \"</span><br/>                   file-handle <span class=\"st0\">\", \"</span> return-<span class=\"kw1\">code</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>\u00a0<br/>      *&gt; create dir below current working dir<span class=\"sy0\">,</span> owner/<span class=\"kw3\">group</span> read/<span class=\"kw3\">write</span><br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"CBL_CREATE_DIR\"</span> <span class=\"kw3\">using</span> dir-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span><br/>       <span class=\"kw1\">if</span> return-<span class=\"kw1\">code</span> <span class=\"kw3\">not</span> <span class=\"kw3\">equal</span> <span class=\"nu0\">0</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"error: CBL_CREATE_DIR \"</span> dir-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"st0\">\": \"</span><br/>                   return-<span class=\"kw1\">code</span> <span class=\"kw3\">upon</span> syserr<br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> create-a-<span class=\"kw3\">file</span><span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 2, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>stream <span class=\"br0\">(</span>open <span class=\"st0\">\"output.txt\"</span> <span class=\"sy0\">:</span><span class=\"me1\">direction</span> <span class=\"sy0\">:</span><span class=\"me1\">output</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>close stream<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Component Pascal", "loc": 20, "block": "<pre class=\"oberon2 highlighted_source\">\u00a0<br/><span class=\"kw1\">MODULE</span> CreateFile;<br/><span class=\"kw1\">IMPORT</span> Files<span class=\"sy0\">,</span> StdLog;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> Do<span class=\"sy0\">*</span>;<br/><span class=\"kw1\">VAR</span><br/>\tf<span class=\"sy0\">:</span> Files.<span class=\"me1\">File</span>;<br/>\tres<span class=\"sy0\">:</span> <span class=\"kw4\">INTEGER</span>;<br/><span class=\"kw1\">BEGIN</span><br/>\tf <span class=\"sy0\">:=</span> Files.<span class=\"me1\">dir</span>.<span class=\"me1\">New</span><span class=\"br0\">(</span>Files.<span class=\"me1\">dir</span>.<span class=\"me1\">This</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>Files.<span class=\"me1\">dontAsk</span><span class=\"br0\">)</span>;<br/>\tf.<span class=\"me1\">Register</span><span class=\"br0\">(</span><span class=\"st0\">\"output\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"txt\"</span><span class=\"sy0\">,</span><span class=\"kw2\">TRUE</span><span class=\"sy0\">,</span>res<span class=\"br0\">)</span>;<br/>\tf.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>\tf <span class=\"sy0\">:=</span> Files.<span class=\"me1\">dir</span>.<span class=\"me1\">New</span><span class=\"br0\">(</span>Files.<span class=\"me1\">dir</span>.<span class=\"me1\">This</span><span class=\"br0\">(</span><span class=\"st0\">\"C:<span class=\"es0\">\\A</span>EAT<span class=\"es0\">\\d</span>ocs\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>Files.<span class=\"me1\">dontAsk</span><span class=\"br0\">)</span>;<br/>\tf.<span class=\"me1\">Register</span><span class=\"br0\">(</span><span class=\"st0\">\"output\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"txt\"</span><span class=\"sy0\">,</span><span class=\"kw2\">TRUE</span><span class=\"sy0\">,</span>res<span class=\"br0\">)</span>;<br/>\tf.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw1\">END</span> Do;<br/>\u00a0<br/><span class=\"kw1\">END</span> CreateFile.<br/>\u00a0</pre>"}, {"lang": "D", "loc": 46, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">module</span> fileio <span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span> <span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">path</span> <span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">file</span> <span class=\"sy0\">;</span><br/><span class=\"kw2\">import</span> std.<span class=\"me1\">stream</span> <span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> genName<span class=\"br0\">(</span><span class=\"kw4\">string</span> name<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw4\">string</span> cwd  <span class=\"sy0\">=</span> curdir <span class=\"sy0\">~</span> sep <span class=\"sy0\">;</span> <span class=\"co1\">// on current directory</span><br/>  <span class=\"kw4\">string</span> root <span class=\"sy0\">=</span> sep <span class=\"sy0\">;</span>          <span class=\"co1\">// on root </span><br/>  name <span class=\"sy0\">=</span> std.<span class=\"me1\">path</span>.<span class=\"me1\">getBaseName</span><span class=\"br0\">(</span>name<span class=\"br0\">)</span> <span class=\"sy0\">;</span>  <br/>  <span class=\"kw1\">return</span> <span class=\"br0\">[</span>cwd <span class=\"sy0\">~</span> name<span class=\"sy0\">,</span> root <span class=\"sy0\">~</span> name<span class=\"br0\">]</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> Remove<span class=\"br0\">(</span><span class=\"kw4\">string</span> target<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"kw1\">if</span><span class=\"br0\">(</span>exists<span class=\"br0\">(</span>target<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>isfile<span class=\"br0\">(</span>target<span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>      std.<span class=\"me1\">file</span>.<span class=\"me1\">remove</span><span class=\"br0\">(</span>target<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span><br/>      std.<span class=\"me1\">file</span>.<span class=\"me1\">rmdir</span><span class=\"br0\">(</span>target<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> testCreate<span class=\"br0\">(</span><span class=\"kw4\">string</span> filename<span class=\"sy0\">,</span> <span class=\"kw4\">string</span> dirname<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  <span class=\"co1\">// files:</span><br/>  <span class=\"kw1\">foreach</span><span class=\"br0\">(</span>fn <span class=\"sy0\">;</span> genName<span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">try</span><span class=\"br0\">{</span><br/>      writefln<span class=\"br0\">(</span><span class=\"st0\">\"file to be created\u00a0:\u00a0%s\"</span><span class=\"sy0\">,</span> fn<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>      std.<span class=\"me1\">file</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>fn<span class=\"sy0\">,</span> <span class=\"kw2\">cast</span><span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"kw2\">null</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span> <br/>      writefln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span>success by std.file.write\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span> Remove<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>      <span class=\"br0\">(</span><span class=\"kw2\">new</span> std.<span class=\"me1\">stream</span>.<span class=\"me1\">File</span><span class=\"br0\">(</span>fn<span class=\"sy0\">,</span> FileMode.<span class=\"me1\">OutNew</span><span class=\"br0\">)</span><span class=\"br0\">)</span>.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span> <br/>      writefln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span>success by std.stream\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span> Remove<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw2\">catch</span><span class=\"br0\">(</span><span class=\"kw3\">Exception</span> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      writefln<span class=\"br0\">(</span>e.<span class=\"me1\">msg</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"co1\">// dirs:</span><br/>  <span class=\"kw1\">foreach</span><span class=\"br0\">(</span>dn <span class=\"sy0\">;</span> genName<span class=\"br0\">(</span>dirname<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw2\">try</span><span class=\"br0\">{</span><br/>      writefln<span class=\"br0\">(</span><span class=\"st0\">\"dir to be created\u00a0:\u00a0%s\"</span><span class=\"sy0\">,</span> dn<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>      std.<span class=\"me1\">file</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span>dn<span class=\"br0\">)</span> <span class=\"sy0\">;</span> <br/>      writefln<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\t</span>success by std.file.mkdir\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span> Remove<span class=\"br0\">(</span>dn<span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"kw2\">catch</span><span class=\"br0\">(</span><span class=\"kw3\">Exception</span> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>      writefln<span class=\"br0\">(</span>e.<span class=\"me1\">msg</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>  writefln<span class=\"br0\">(</span><span class=\"st0\">\"== test: File &amp; Dir Creation ==\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>  testCreate<span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Delphi", "loc": 104, "block": "<pre class=\"delphi highlighted_source\">\u00a0<br/><span class=\"kw1\">program</span> createFile<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  Classes<span class=\"sy1\">,</span><br/>  SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">const</span><br/>  filename <span class=\"sy3\">=</span> <span class=\"st0\">'output.txt'</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span><br/>  cwdPath<span class=\"sy1\">,</span><br/>  fsPath<span class=\"sy1\">:</span> <span class=\"kw4\">string</span><span class=\"sy1\">;</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">// Create empty file in current working directory</span><br/><span class=\"kw1\">function</span> CreateEmptyFile1<span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  f<span class=\"sy1\">:</span> <span class=\"kw4\">textfile</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">// Make path to the file to be created</span><br/>  cwdPath <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">ExtractFilePath</span><span class=\"br0\">(</span><span class=\"kw3\">ParamStr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'1_'</span><span class=\"sy3\">+</span>filename<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Create file</span><br/>  <span class=\"kw3\">AssignFile</span><span class=\"br0\">(</span>f<span class=\"sy1\">,</span>cwdPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"co2\">{$I-}</span><br/>  <span class=\"kw3\">Rewrite</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"co2\">{$I+}</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> IOResult <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">CloseFile</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co1\">// Create empty file in filesystem root</span><br/><span class=\"kw1\">function</span> CreateEmptyFile2<span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  f<span class=\"sy1\">:</span> <span class=\"kw4\">textfile</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">// Make path to the file to be created</span><br/>  fsPath <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">ExtractFileDrive</span><span class=\"br0\">(</span><span class=\"kw3\">ParamStr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'\\'</span> <span class=\"sy3\">+</span> <span class=\"st0\">'2_'</span><span class=\"sy3\">+</span>filename<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Create file</span><br/>  <span class=\"kw3\">AssignFile</span><span class=\"br0\">(</span>f<span class=\"sy1\">,</span>fsPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"co2\">{$I-}</span><br/>  <span class=\"kw3\">Rewrite</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  <span class=\"co2\">{$I+}</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> IOResult <span class=\"sy3\">=</span> <span class=\"nu0\">0</span><span class=\"sy1\">;</span><br/>  <span class=\"kw3\">CloseFile</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> CreateEmptyFile3<span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  fs<span class=\"sy1\">:</span> TFileStream<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">// Make path to the file to be created</span><br/>  cwdPath <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">ExtractFilePath</span><span class=\"br0\">(</span><span class=\"kw3\">ParamStr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'3_'</span><span class=\"sy3\">+</span>filename<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Create file</span><br/>  fs <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TFileStream<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span>cwdPath<span class=\"sy1\">,</span>fmCreate<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  fs<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">FileExists</span><span class=\"br0\">(</span>cwdPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">function</span> CreateEmptyFile4<span class=\"sy1\">:</span> <span class=\"kw4\">Boolean</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">var</span><br/>  fs<span class=\"sy1\">:</span> TFileStream<span class=\"sy1\">;</span><br/><span class=\"kw1\">begin</span><br/>  <span class=\"co1\">// Make path to the file to be created</span><br/>  fsPath <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">ExtractFileDrive</span><span class=\"br0\">(</span><span class=\"kw3\">ParamStr</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">'\\'</span> <span class=\"sy3\">+</span> <span class=\"st0\">'4_'</span><span class=\"sy3\">+</span>filename<span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Create file</span><br/>  fs <span class=\"sy1\">:</span><span class=\"sy3\">=</span> TFileStream<span class=\"sy1\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span>fsPath<span class=\"sy1\">,</span>fmCreate<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>  fs<span class=\"sy1\">.</span><span class=\"me1\">Free</span><span class=\"sy1\">;</span><br/>  Result <span class=\"sy1\">:</span><span class=\"sy3\">=</span> <span class=\"kw3\">FileExists</span><span class=\"br0\">(</span>fsPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">if</span> CreateEmptyFile1 <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File created at '</span><span class=\"sy3\">+</span>cwdPath<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Error creating file at '</span><span class=\"sy3\">+</span>cwdPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> CreateEmptyFile2 <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File created at '</span><span class=\"sy3\">+</span>fsPath<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Error creating file at '</span><span class=\"sy3\">+</span>fsPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> CreateEmptyFile3 <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File created at '</span><span class=\"sy3\">+</span>cwdPath<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Error creating file at '</span><span class=\"sy3\">+</span>cwdPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> CreateEmptyFile4 <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File created at '</span><span class=\"sy3\">+</span>fsPath<span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Error creating file at '</span><span class=\"sy3\">+</span>fsPath<span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"co1\">// Keep console window open</span><br/>  Readln<span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "DCL", "loc": 4, "block": "<pre class=\"dcl highlighted_source\"><span class=\"kw1\">open</span>/<span class=\"kw1\">write</span> output_file output.txt<br/><span class=\"kw1\">open</span>/<span class=\"kw1\">write</span> output_file <span class=\"br0\">[</span>000000<span class=\"br0\">]</span>output.txt<br/><span class=\"kw1\">create</span>/<span class=\"kw1\">directory</span> <span class=\"br0\">[</span>.docs<span class=\"br0\">]</span><br/><span class=\"kw1\">create</span>/<span class=\"kw1\">directory</span> <span class=\"br0\">[</span>000000.docs<span class=\"br0\">]</span></pre>"}, {"lang": "E", "loc": 4, "block": "<pre class=\"e highlighted_source\"><span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:</span>output.<span class=\"me1\">txt</span><span class=\"sy0\">&gt;</span>.<span class=\"me1\">setBytes</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:</span>docs<span class=\"sy0\">&gt;</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/null\"><span class=\"kw6\">null</span></a><span class=\"br0\">)</span><br/><span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:///</span>output.<span class=\"me1\">txt</span><span class=\"sy0\">&gt;</span>.<span class=\"me1\">setBytes</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:///</span>docs<span class=\"sy0\">&gt;</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><a href=\"http://wiki.erights.org/wiki/null\"><span class=\"kw6\">null</span></a><span class=\"br0\">)</span></pre>"}, {"lang": "EchoLisp", "loc": 17, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"co1\">;; The file system is the browser local storage</span><br/><span class=\"co1\">;; It is divided into named stores (directories)</span><br/><span class=\"co1\">;; \"user\" is the default (home) store</span><br/>\u00a0<br/><span class=\"co1\">; before\u00a0: list of stores</span><br/><span class=\"br0\">(</span>local-stores<span class=\"br0\">)</span> \u2192 <span class=\"br0\">(</span><span class=\"st0\">\"system\"</span> <span class=\"st0\">\"user\"</span> <span class=\"st0\">\"words\"</span> <span class=\"st0\">\"reader\"</span> <span class=\"st0\">\"info\"</span> <span class=\"st0\">\"root\"</span><span class=\"br0\">)</span> <br/>\u00a0<br/><span class=\"br0\">(</span>local-put-<span class=\"kw1\">value</span> <span class=\"st0\">\"output.txt\"</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> \u2192 <span class=\"st0\">\"output.txt\"</span> <span class=\"co1\">; into \"user\"</span><br/><span class=\"br0\">(</span>local-make-store <span class=\"st0\">\"user/docs\"</span><span class=\"br0\">)</span> \u2192 <span class=\"st0\">\"user/docs\"</span><br/><span class=\"br0\">(</span>local-put-<span class=\"kw1\">value</span> <span class=\"st0\">\"output.txt\"</span> <span class=\"st0\">\"\"</span> <span class=\"st0\">\"root\"</span><span class=\"br0\">)</span> \u2192 <span class=\"st0\">\"output.txt\"</span> <span class=\"co1\">; into \"root\"</span><br/><span class=\"br0\">(</span>local-make-store 'root/docs<span class=\"br0\">)</span> \u2192 <span class=\"st0\">\"root/docs\"</span><br/>\u00a0<br/><span class=\"co1\">; after\u00a0: list of stores</span><br/><span class=\"br0\">(</span>local-stores 'root<span class=\"br0\">)</span> \u2192 <span class=\"br0\">(</span><span class=\"st0\">\"root\"</span> <span class=\"st0\">\"root/docs\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>local-stores 'user<span class=\"br0\">)</span> \u2192 <span class=\"br0\">(</span><span class=\"st0\">\"user\"</span> <span class=\"st0\">\"user/docs\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Elena", "loc": 12, "block": "<pre class=\"text highlighted_source\">import system'io.<br/>\u00a0<br/>program =<br/>[ <br/>    File new:\"output.txt\"; textwriter; close.<br/>\u00a0<br/>    File new:\"\\output.txt\"; textwriter; close.        <br/>\u00a0<br/>    Directory new:\"docs\"; create.<br/>\u00a0<br/>    Directory new:\"\\docs\"; create.<br/>].</pre>"}, {"lang": "Elixir", "loc": 5, "block": "<pre class=\"text highlighted_source\">File.open(\"output.txt\", [:write])<br/>File.open(\"/output.txt\", [:write])<br/>\u00a0<br/>File.mkdir!(\"docs\")<br/>File.mkdir!(\"/docs\")</pre>"}, {"lang": "Emacs Lisp", "loc": 4, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>shell-command <span class=\"st0\">\"touch output.txt &amp; mkdir docs\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>cd <span class=\"st0\">\"~/\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>shell-command <span class=\"st0\">\"touch output.txt &amp; mkdir docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Erlang", "loc": 10, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">module</span><span class=\"br0\">(</span>new_file<span class=\"br0\">)</span><span class=\"sy1\">.</span><br/><span class=\"sy3\">-</span><span class=\"re2\">export</span><span class=\"br0\">(</span><span class=\"br0\">[</span>main<span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"me1\">ok</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">write_file</span><span class=\"br0\">(</span> <span class=\"st0\">\"output.txt\"</span><span class=\"sy1\">,</span> <span class=\"sy2\">&lt;&lt;&gt;&gt;</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\tok <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">make_dir</span><span class=\"br0\">(</span> <span class=\"st0\">\"docs\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\tok <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">write_file</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/filename.html\"><span class=\"kw5\">filename</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"st0\">\"/\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"sy2\">&lt;&lt;&gt;&gt;</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\tok <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">make_dir</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/filename.html\"><span class=\"kw5\">filename</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"st0\">\"/\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "ERRE", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>PROGRAM FILE_TEST<br/>\u00a0<br/>!$INCLUDE=\"PC.LIB\"<br/>\u00a0<br/>BEGIN<br/>\u00a0<br/>    OPEN(\"O\",#1,\"output.txt\")<br/>    CLOSE(1)<br/>\u00a0<br/>    OS_MKDIR(\"C:\\RC\")  \u00a0! with the appropriate access rights .......<br/>    OPEN(\"O\",#1,\"C:\\RC\\output.txt\")<br/>    CLOSE(1)<br/>\u00a0<br/>END PROGRAM<br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 11, "block": "<pre class=\"text highlighted_source\">integer fn<br/>\u00a0<br/>-- In the current working directory<br/>system(\"mkdir docs\",2)<br/>fn = open(\"output.txt\",\"w\")<br/>close(fn)<br/>\u00a0<br/>-- In the filesystem root<br/>system(\"mkdir \\\\docs\",2)<br/>fn = open(\"\\\\output.txt\",\"w\")<br/>close(fn)</pre>"}, {"lang": "F#", "loc": 10, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System.<span class=\"me1\">IO</span><br/>\u00a0<br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPoint<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main argv <span class=\"sy0\">=</span><br/>    <span class=\"kw1\">let</span> fileName <span class=\"sy0\">=</span> <span class=\"st0\">\"output.txt\"</span><br/>    <span class=\"kw1\">let</span> dirName <span class=\"sy0\">=</span> <span class=\"st0\">\"docs\"</span><br/>    <span class=\"kw1\">for</span> path <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"st0\">\".\"</span><span class=\"sy0\">;</span> <span class=\"st0\">\"/\"</span><span class=\"br0\">]</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw3\">ignore</span> <span class=\"br0\">(</span>File.<span class=\"me1\">Create</span><span class=\"br0\">(</span>Path.<span class=\"me1\">Combine</span><span class=\"br0\">(</span>path, fileName<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw3\">ignore</span> <span class=\"br0\">(</span>Directory.<span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span>Path.<span class=\"me1\">Combine</span><span class=\"br0\">(</span>path, dirName<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span></pre>"}, {"lang": "Factor", "loc": 4, "block": "<pre class=\"text highlighted_source\">USE: io.directories<br/>\u00a0<br/>\"output.txt\" \"/output.txt\" [ touch-file ] <a class=\"__cf_email__\" data-cfemail=\"c9aba089\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><br/>\"docs\" \"/docs\" [ make-directory ] <a class=\"__cf_email__\" data-cfemail=\"fa9893ba\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a></pre>"}, {"lang": "Fancy", "loc": 8, "block": "<pre class=\"text highlighted_source\">[\"/\", \"./\"] each: |dir| {<br/>  # create '/docs', then './docs'<br/>  Directory create: (dir ++ \"docs\")<br/>  # create files /output.txt, then ./output.txt<br/>  File open: (dir ++ \"output.txt\") modes: ['write] with: |f| {<br/>    f writeln: \"hello, world!\"<br/>  }  <br/>}</pre>"}, {"lang": "Forth", "loc": 2, "block": "<pre class=\"text highlighted_source\"> s\" output.txt\" w/o create-file throw ( fileid) drop<br/>s\" /output.txt\" w/o create-file throw ( fileid) drop</pre>"}, {"lang": "Fortran", "loc": 14, "block": "<pre class=\"fortran highlighted_source\">\u00a0<br/><span class=\"kw1\">PROGRAM</span> CREATION<br/>OPEN <span class=\"br0\">(</span><span class=\"kw1\">UNIT</span><span class=\"sy0\">=</span><span class=\"nu0\">5</span>, <span class=\"kw1\">FILE</span><span class=\"sy0\">=</span><span class=\"st0\">\"output.txt\"</span>, <span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"NEW\"</span><span class=\"br0\">)</span>   <span class=\"co1\">! Current directory</span><br/><span class=\"co1\">CLOSE (UNIT=5)</span><br/>OPEN <span class=\"br0\">(</span><span class=\"kw1\">UNIT</span><span class=\"sy0\">=</span><span class=\"nu0\">5</span>, <span class=\"kw1\">FILE</span><span class=\"sy0\">=</span><span class=\"st0\">\"/output.txt\"</span>, <span class=\"kw1\">STATUS</span><span class=\"sy0\">=</span><span class=\"st0\">\"NEW\"</span><span class=\"br0\">)</span>  <span class=\"co1\">! Root directory</span><br/><span class=\"co1\">CLOSE (UNIT=5)</span><br/>\u00a0<br/><span class=\"co1\">!Directories (Use System from GNU Fortran Compiler)</span><br/><span class=\"co1\">! -- Added by Anant Dixit, November 2014</span><br/><span class=\"co1\">call system(\"mkdir docs/\")</span><br/><span class=\"co1\">call system(\"mkdir ~/docs/\")</span><br/>\u00a0<br/><span class=\"kw1\">END</span> <span class=\"kw1\">PROGRAM</span><br/>\u00a0</pre>"}, {"lang": "FreeBASIC", "loc": 15, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co1\">' create empty file and sub-directory in current directory</span><br/><span class=\"kw1\">Open</span> <span class=\"st0\">\"output.txt\"</span> <span class=\"kw1\">For</span> <span class=\"kw1\">Output</span> <span class=\"kw1\">As</span> <span class=\"co2\">#1</span><br/><span class=\"kw1\">Close</span> <span class=\"co2\">#1</span><br/><span class=\"kw1\">MkDir</span> <span class=\"st0\">\"docs\"</span><br/>\u00a0<br/><span class=\"co1\">' create empty file and sub-directory in root directory c:\\</span><br/><span class=\"co1\">' creating file in root requires administrative privileges in Windows 10</span><br/><span class=\"kw1\">Open</span> <span class=\"st0\">\"c:<span class=\"es0\">\\o</span>utput.txt\"</span> <span class=\"kw1\">For</span> <span class=\"kw1\">Output</span> <span class=\"kw1\">As</span> <span class=\"co2\">#1</span><br/><span class=\"kw1\">Close</span> <span class=\"co2\">#1</span><br/><span class=\"kw1\">MkDir</span> <span class=\"st0\">\"c:<span class=\"es0\">\\d</span>ocs\"</span><br/>\u00a0<br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "friendly interactive shell", "loc": 2, "block": "<pre class=\"text highlighted_source\">touch {/,}output.txt    # create both /output.txt and output.txt<br/>mkdir {/,}docs          # create both /docs and docs</pre>"}, {"lang": "FunL", "loc": 6, "block": "<pre class=\"text highlighted_source\">import io.File<br/>\u00a0<br/>File( 'output.txt' ).createNewFile()<br/>File( File.separator + 'output.txt' ).createNewFile()<br/>File( 'docs' ).mkdir()<br/>File( File.separator + 'docs' ).mkdir()</pre>"}, {"lang": "Gambas", "loc": 12, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> byCount <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/byte\"><span class=\"kw4\">Byte</span></a><br/><a href=\"http://gambasdoc.org/help/lang/dim\"><span class=\"kw1\">Dim</span></a> sToSave <a href=\"http://gambasdoc.org/help/lang/as\"><span class=\"kw1\">As</span></a> <a href=\"http://gambasdoc.org/help/lang/type/string\"><span class=\"kw4\">String</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/for\"><span class=\"kw1\">For</span></a> byCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <a href=\"http://gambasdoc.org/help/lang/to\"><span class=\"kw1\">To</span></a> <span class=\"nu0\">50</span><br/>  sToSave <span class=\"sy0\">&amp;=</span> <a href=\"http://gambasdoc.org/help/lang/format\"><span class=\"kw2\">Format</span></a><span class=\"br0\">(</span><a href=\"http://gambasdoc.org/help/lang/str\"><span class=\"kw2\">Str</span></a><span class=\"br0\">(</span>byCount<span class=\"br0\">)</span>, <span class=\"st0\">\"00\"</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\" - Charlie was here!\"</span> <span class=\"sy0\">&amp;</span> gb.<span class=\"me1\">NewLine</span><br/><a href=\"http://gambasdoc.org/help/lang/next\"><span class=\"kw1\">Next</span></a><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/type/file\"><span class=\"kw4\">File</span></a>.<span class=\"me1\">Save</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">Home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"TestFile\"</span>, sToSave<span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <a href=\"http://gambasdoc.org/help/lang/type/file\"><span class=\"kw4\">File</span></a>.<span class=\"me1\">Load</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">Home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"TestFile\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "Go", "loc": 32, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> createFile<span class=\"sy1\">(</span>fn <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    f<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Create<span class=\"sy1\">(</span>fn<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"file\"</span><span class=\"sy1\">,</span> fn<span class=\"sy1\">,</span> <span class=\"st0\">\"created!\"</span><span class=\"sy1\">)</span><br/>    f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> createDir<span class=\"sy1\">(</span>dn <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Mkdir<span class=\"sy1\">(</span>dn<span class=\"sy1\">,</span> <span class=\"nu0\">0666</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"directory\"</span><span class=\"sy1\">,</span> dn<span class=\"sy1\">,</span> <span class=\"st0\">\"created!\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    createFile<span class=\"sy1\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"sy1\">)</span><br/>    createFile<span class=\"sy1\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"sy1\">)</span><br/>    createDir<span class=\"sy1\">(</span><span class=\"st0\">\"docs\"</span><span class=\"sy1\">)</span><br/>    createDir<span class=\"sy1\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 4, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 9, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Directory<br/>\u00a0<br/>createFile name <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:writeFile\"><span class=\"kw3\">writeFile</span></a> name <span class=\"st0\">\"\"</span><br/>\u00a0<br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  createFile <span class=\"st0\">\"output.txt\"</span><br/>  createDirectory <span class=\"st0\">\"docs\"</span><br/>  createFile <span class=\"st0\">\"/output.txt\"</span><br/>  createDirectory <span class=\"st0\">\"/docs\"</span></pre>"}, {"lang": "HicEst", "loc": 5, "block": "<pre class=\"hicest highlighted_source\"><span class=\"kw1\">SYSTEM</span><span class=\"br0\">(</span>DIR<span class=\"sy1\">=</span><span class=\"st0\">\"\\docs\"</span><span class=\"br0\">)</span>              <span class=\"co1\">! create argument if not existent, make it current</span><br/><span class=\"kw1\">OPEN</span><span class=\"br0\">(</span>FILE<span class=\"sy1\">=</span><span class=\"st0\">\"output.txt\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"NEW\"</span><span class=\"br0\">)</span>   <span class=\"co1\">! in current directory</span><br/>\u00a0<br/><span class=\"kw1\">SYSTEM</span><span class=\"br0\">(</span>DIR<span class=\"sy1\">=</span><span class=\"st0\">\"C:\\docs\"</span><span class=\"br0\">)</span>            <span class=\"co1\">! create C:\\docs if not existent, make it current</span><br/><span class=\"kw1\">OPEN</span><span class=\"br0\">(</span>FILE<span class=\"sy1\">=</span><span class=\"st0\">\"output.txt\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"NEW\"</span><span class=\"br0\">)</span>   <span class=\"co1\">! in C:\\docs </span></pre>"}, {"lang": "i", "loc": 6, "block": "<pre class=\"text highlighted_source\">software {<br/>\tcreate(\"output.txt\")<br/>\tcreate(\"docs/\")<br/>\tcreate(\"/output.txt\")<br/>\tcreate(\"/docs/\")<br/>}</pre>"}, {"lang": "Icon and Unicon", "loc": 4, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">every</span> dir <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"st0\">\"./\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"/\"</span><span class=\"br0\">]</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>   <span class=\"kw4\">close</span><span class=\"br0\">(</span><span class=\"kw4\">open</span><span class=\"br0\">(</span>f <span class=\"sy0\">:=</span> dir <span class=\"sy0\">||</span> <span class=\"st0\">\"input.txt\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>  <span class=\"sy0\">|</span><span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"failure for open \"</span><span class=\"sy0\">,</span>f<span class=\"br0\">)</span><br/>   <span class=\"kw4\">mkdir</span><span class=\"br0\">(</span>f <span class=\"sy0\">:=</span> dir <span class=\"sy0\">||</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>                 <span class=\"sy0\">|</span><span class=\"kw4\">stop</span><span class=\"br0\">(</span><span class=\"st0\">\"failure for mkdir \"</span><span class=\"sy0\">,</span>f<span class=\"br0\">)</span><br/>   <span class=\"br0\">}</span></pre>"}, {"lang": "J", "loc": 2, "block": "<pre class=\"j highlighted_source\"><span class=\"st_h\">''</span> <span class=\"nu0\">1</span>!:<span class=\"nu0\">2</span> &lt;<span class=\"st_h\">'/output.txt'</span>   <span class=\"co1\">NB. write an empty file</span><br/>   <span class=\"nu0\">1</span>!:<span class=\"nu0\">5</span> &lt;<span class=\"st_h\">'/docs'</span>         <span class=\"co1\">NB. create a directory</span></pre>"}, {"lang": "Java", "loc": 13, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> CreateFileTest <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">try</span> <span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">err</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>e.<span class=\"me1\">getMessage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JCL", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>// EXEC PGM=IEFBR14                                                  <br/>//* CREATE EMPTY FILE NAMED \"OUTPUT.TXT\" (file names upper case only)<br/>//ANYNAME DD UNIT=SYSDA,SPACE=(0,0),DSN=OUTPUT.TXT,DISP=(,CATLG)     <br/>//* CREATE DIRECTORY (PARTITIONED DATA SET) NAMED \"DOCS\"             <br/>//ANYNAME DD UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=DOCS,DISP=(,CATLG)     <br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 12, "block": "<pre class=\"text highlighted_source\"># many I/O functions have UNIX names<br/>\u00a0<br/>touch(\"output.txt\")<br/>mkdir(\"docs\")<br/>\u00a0<br/># probably don't have permission<br/>try<br/>    touch(\"/output.txt\")<br/>    mkdir(\"/docs\")<br/>catch e<br/>    warn(e)<br/>end</pre>"}, {"lang": "K", "loc": 4, "block": "<pre class=\"text highlighted_source\">   \"output.txt\" 1: \"\"<br/>   \"/output.txt\" 1: \"\"<br/>   \\ mkdir docs<br/>   \\ mkdir /docs</pre>"}, {"lang": "Kotlin", "loc": 24, "block": "<pre class=\"scala highlighted_source\"><span class=\"coMULTI\">/* testing on Windows 10 which needs administrative privileges<br/>   to create files in the root */</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> filePaths <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span>, <span class=\"st0\">\"c:<span class=\"es1\">\\\\</span>output.txt\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dirPaths  <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span>, <span class=\"st0\">\"c:<span class=\"es1\">\\\\</span>docs\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> f<span class=\"sy0\">:</span> File<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>path in filePaths<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>path<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>f.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"$path successfully created\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"$path already exists\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>path in dirPaths<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>path<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>f.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"$path successfully created\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a><br/>            println<span class=\"br0\">(</span><span class=\"st0\">\"$path already exists\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "LabVIEW", "loc": 17, "block": "<pre class=\"text highlighted_source\">// create file<br/>local(f) = file<br/>handle =&gt; { #f-&gt;close }<br/>#f-&gt;openWriteOnly('output.txt')<br/>\u00a0<br/>// make directory, just like a file<br/>local(d = dir('docs'))<br/>#d-&gt;create<br/>\u00a0<br/>// create file in root file system (requires permissions at user OS level)<br/>local(f) = file<br/>handle =&gt; { #f-&gt;close }<br/>#f-&gt;openWriteOnly('//output.txt')<br/>\u00a0<br/>// create directory in root file system (requires permissions at user OS level)<br/>local(d = dir('//docs'))<br/>#d-&gt;create</pre>"}, {"lang": "Lasso", "loc": 17, "block": "<pre class=\"text highlighted_source\">// create file<br/>local(f) = file<br/>handle =&gt; { #f-&gt;close }<br/>#f-&gt;openWriteOnly('output.txt')<br/>\u00a0<br/>// make directory, just like a file<br/>local(d = dir('docs'))<br/>#d-&gt;create<br/>\u00a0<br/>// create file in root file system (requires permissions at user OS level)<br/>local(f) = file<br/>handle =&gt; { #f-&gt;close }<br/>#f-&gt;openWriteOnly('//output.txt')<br/>\u00a0<br/>// create directory in root file system (requires permissions at user OS level)<br/>local(d = dir('//docs'))<br/>#d-&gt;create</pre>"}, {"lang": "Lingo", "loc": 3, "block": "<pre class=\"text highlighted_source\">-- note: fileIO xtra is shipped with Director, i.e. an \"internal\"<br/>fp = xtra(\"fileIO\").new()<br/>fp.createFile(\"output.txt\")</pre>"}, {"lang": "Liberty BASIC", "loc": 14, "block": "<pre class=\"lb highlighted_source\">\u00a0<br/><span class=\"kw1\">nomainwin</span><br/>\u00a0<br/><span class=\"kw1\">open</span> <span class=\"st0\">\"output.txt\"</span> <span class=\"kw1\">for</span> <span class=\"kw1\">output</span> <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>f<br/><span class=\"kw1\">close</span> <span class=\"sy0\">#</span>f<br/>\u00a0<br/>result <span class=\"sy0\">=</span> <span class=\"kw2\">mkdir</span><span class=\"br0\">(</span> <span class=\"st0\">\"F:\\RC\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">if</span> result <span class=\"sy0\">&lt;&gt;</span><span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">notice</span> <span class=\"st0\">\"Directory not created!\"</span><span class=\"sy0\">:</span> <span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">open</span> <span class=\"st0\">\"F:\\RC\\output.txt\"</span> <span class=\"kw1\">for</span> <span class=\"kw1\">output</span> <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>f<br/><span class=\"kw1\">close</span> <span class=\"sy0\">#</span>f<br/>\u00a0<br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Little", "loc": 30, "block": "<pre class=\"c highlighted_source\"><span class=\"kw4\">void</span> create_file<span class=\"br0\">(</span>string path<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    FILE f<span class=\"sy0\">;</span><br/>    unless <span class=\"br0\">(</span>exists<span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        unless <span class=\"br0\">(</span>f <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html\"><span class=\"kw3\">fopen</span></a><span class=\"br0\">(</span>path<span class=\"sy0\">,</span> <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            die<span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"file ${path} created\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html\"><span class=\"kw3\">fclose</span></a><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"File ${path} already exists\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> create_dir<span class=\"br0\">(</span>string path<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    unless <span class=\"br0\">(</span>exists<span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        unless<span class=\"br0\">(</span>mkdir<span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"co1\">//mkdir returns 0 on success, -1 on error</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"directory ${path} created\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span> <span class=\"st0\">\"Error: directory ${path} not created\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   <br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"directory ${path} already exists\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>create_file<span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>create_file<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>create_dir<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>create_dir<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "LFE", "loc": 6, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">file</span> write_file '<span class=\"st0\">\"output.txt\"</span> '<span class=\"st0\">\"Some data\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">file</span> make_dir '<span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">file</span> write_file '<span class=\"st0\">\"/output.txt\"</span> '<span class=\"st0\">\"Some data\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">file</span> make_dir '<span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Lua", "loc": 2, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw3\">io.open</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>close<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"kw3\">io.open</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\\\</span>output.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span><span class=\"sy0\">:</span>close<span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 21, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module MakeDirAndFile {<br/>      Def WorkingDir$, RootDir$<br/>      If Drive$(Dir$)=\"Drive Fixed\" Then WorkingDir$=Dir$<br/>      If Drive$(\"C:\\\")=\"Drive Fixed\" Then RootDir$=\"C:\\\"<br/>\u00a0<br/>      if WorkingDir$&lt;&gt;\"\" Then task(WorkingDir$)<br/>      If RootDir$&lt;&gt;\"\" then task(RootDir$)<br/>      Dir User ' return to user directory<br/>\u00a0<br/>      Sub task(WorkingDir$)<br/>            Dir WorkingDir$<br/>            If Not Exist.Dir(\"docs\") then SubDir \"docs\"\u00a0: Dir WorkingDir$<br/>            If Exist.Dir(\"docs\") Then Print str$(File.Stamp(\"docs\"), \"YYYY|MM|DD|hh:nn:ss\")<br/>            Open \"output.txt\" For Output as #F<br/>            Close #f<br/>            If Exist(\"output.txt\") Then Print str$(File.Stamp(\"output.txt\"), \"YYYY|MM|DD|hh:nn:ss\")<br/>      End Sub<br/>}<br/>MakeDirAndFile<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>FileTools:-Text:-WriteFile(\"output.txt\", \"\");  # make empty file in current dir<br/>FileTools:-MakeDirectory(\"docs\");               # make empty dir in current dir<br/>FileTools:-Text:-WriteFile(\"/output.txt\", \"\"); # make empty file in root dir<br/>FileTools:-MakeDirectory(\"/docs\");              # make empty dir in root dir<br/>\u00a0</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/><a class=\"__cf_email__\" data-cfemail=\"4f1c2a3b0b263d2a2c3b203d360f01203b2a2d2020240b263d2a2c3b203d36\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[];<br/>t = OpenWrite[\"output.txt\"]<br/>Close[t]<br/>s = OpenWrite[<a class=\"__cf_email__\" data-cfemail=\"2f69465d5c5b6f6946434a614e424a7c5f43465b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[$InstallationDirectory] &lt;&gt; \"\\\\output.txt\"]<br/>Close[s]<br/>\u00a0<br/>(*In root directory*)<br/>CreateDirectory[\"\\\\docs\"]<br/>(*In current operating directory*)<br/>CreateDirectory[Directory[]&lt;&gt;\"\\\\docs\"]<br/>(*\"left&lt;&gt;right\" is shorthand for \"StringJoin[left,right]\"*)<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "MATLAB / Octave", "loc": 4, "block": "<pre class=\"matlab highlighted_source\">\tfid = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fopen.html\"><span class=\"kw2\">fopen</span></a><span class=\"br0\">(</span><span class=\"co2\">'output.txt'</span>,<span class=\"co2\">'w'</span><span class=\"br0\">)</span>; <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fclose.html\"><span class=\"kw2\">fclose</span></a><span class=\"br0\">(</span>fid<span class=\"br0\">)</span>;<br/>\tfid = <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fopen.html\"><span class=\"kw2\">fopen</span></a><span class=\"br0\">(</span><span class=\"co2\">'/output.txt'</span>,<span class=\"co2\">'w'</span><span class=\"br0\">)</span>; <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/fclose.html\"><span class=\"kw2\">fclose</span></a><span class=\"br0\">(</span>fid<span class=\"br0\">)</span>;<br/>\t<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/mkdir.html\"><span class=\"kw2\">mkdir</span></a><span class=\"br0\">(</span><span class=\"co2\">'docs'</span><span class=\"br0\">)</span>;<br/>\t<a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/mkdir.html\"><span class=\"kw2\">mkdir</span></a><span class=\"br0\">(</span><span class=\"co2\">'/docs'</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Maxima", "loc": 9, "block": "<pre class=\"text highlighted_source\">f: openw(\"/output.txt\");<br/>close(f);<br/>\u00a0<br/>f: openw(\"output.txt\");<br/>close(f);<br/>\u00a0<br/>/* Maxima has no function to create directories, but one can use the underlying Lisp system */<br/>\u00a0<br/>:lisp (mapcar #'ensure-directories-exist '(\"docs/\" \"/docs/\"))</pre>"}, {"lang": "MAXScript", "loc": 8, "block": "<pre class=\"text highlighted_source\">-- Here<br/>f = createFile \"output.txt\"<br/>close f<br/>makeDir (sysInfo.currentDir + \"\\docs\")<br/>-- System root<br/>f = createFile \"\\output.txt\"<br/>close f<br/>makeDir (\"c:\\docs\")</pre>"}, {"lang": "Mercury", "loc": 46, "block": "<pre class=\"text highlighted_source\">:- module create_file.<br/>:- interface.<br/>\u00a0<br/>:- import_module io.<br/>:- pred main(io::di, io::uo) is det.<br/>\u00a0<br/>:- implementation.<br/>\u00a0<br/>:- import_module dir.<br/>\u00a0<br/>main(!IO)\u00a0:-<br/>    create_file(\"output.txt\",\u00a0!IO),<br/>    create_file(\"/output.txt\",\u00a0!IO),<br/>    create_dir(\"docs\",\u00a0!IO),<br/>    create_dir(\"/docs\",\u00a0!IO).<br/>\u00a0<br/>:- pred create_file(string::in, io::di, io::uo) is det.<br/>\u00a0<br/>create_file(FileName,\u00a0!IO)\u00a0:-<br/>    io.open_output(FileName, Result,\u00a0!IO),<br/>    (<br/>        Result = ok(File),<br/>        io.close_output(File,\u00a0!IO)<br/>   \u00a0;<br/>        Result = error(Error),<br/>        print_io_error(Error,\u00a0!IO)<br/>    ).<br/>\u00a0<br/>:- pred create_dir(string::in, io::di, io::uo) is det.<br/>\u00a0<br/>create_dir(DirName,\u00a0!IO)\u00a0:-<br/>    dir.make_single_directory(DirName, Result,\u00a0!IO),<br/>    (<br/>        Result = ok<br/>   \u00a0;<br/>        Result = error(Error),<br/>        print_io_error(Error,\u00a0!IO)<br/>    ).<br/>\u00a0<br/>:- pred print_io_error(io.error::in, io::di, io::uo) is det.<br/>\u00a0<br/>print_io_error(Error,\u00a0!IO)\u00a0:-<br/>   io.stderr_stream(Stderr,\u00a0!IO),<br/>   io.write_string(Stderr, io.error_message(Error),\u00a0!IO),<br/>   io.nl(Stderr,\u00a0!IO),<br/>   io.set_exit_status(1,\u00a0!IO).</pre>"}, {"lang": "Mirah", "loc": 6, "block": "<pre class=\"text highlighted_source\">import java.io.File<br/>\u00a0<br/>File.new('output.txt').createNewFile()<br/>File.new('docs').mkdir()<br/>File.new(\"docs#{File.separator}output.txt\").createNewFile()<br/>\u00a0</pre>"}, {"lang": "Modula-3", "loc": 18, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> FileCreation <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">IMPORT</span> FS<span class=\"sy0\">,</span> File<span class=\"sy0\">,</span> OSError<span class=\"sy0\">,</span> IO<span class=\"sy0\">,</span> Stdio;<br/>\u00a0<br/><span class=\"kw1\">VAR</span> file<span class=\"sy0\">:</span> File.<span class=\"me1\">T</span>;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  <span class=\"kw1\">TRY</span><br/>    file <span class=\"sy0\">:=</span> FS.<span class=\"me1\">OpenFile</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>;<br/>    file.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>    FS.<span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>;<br/>    file <span class=\"sy0\">:=</span> FS.<span class=\"me1\">OpenFile</span><span class=\"br0\">(</span><span class=\"st0\">\"/output.txt\"</span><span class=\"br0\">)</span>;<br/>    file.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span>;<br/>    FS.<span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">EXCEPT</span><br/>  | OSError.<span class=\"me1\">E</span> <span class=\"sy0\">=</span>&gt; IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span><span class=\"st0\">\"Error creating file or directory.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">,</span> Stdio.<span class=\"me1\">stderr</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">END</span>;<br/><span class=\"kw1\">END</span> FileCreation.</pre>"}, {"lang": "Nemerle", "loc": 23, "block": "<pre class=\"text highlighted_source\">using System;<br/>using System.IO;<br/>\u00a0<br/>module CreateFile<br/>{<br/>    Main()\u00a0: void<br/>    {<br/>        unless (File.Exists(\"output.txt\")) File.Create(\"output.txt\");         // here<br/>        // returns a FileStream object which we're ignoring<br/>        try {<br/>            unless (File.Exists(@\"\\output.txt\")) File.Create(@\"\\output.txt\"); // root<br/>        }<br/>        catch {<br/>            |e is UnauthorizedAccessException =&gt; Console.WriteLine(<br/>            \"Cannot create file in root directory without Administrator priveleges.\")<br/>        }<br/>\u00a0<br/>        unless (Directory.Exists(\"docs\")) Directory.CreateDirectory(\"docs\");<br/>        // returns a DirectoryInfo object which we're ignoring<br/>        unless (Directory.Exists(@\"\\docs\")) Directory.CreateDirectory(@\"\\docs\");<br/>        // no Exception for directory creation<br/>    }<br/>}</pre>"}, {"lang": "NetRexx", "loc": 26, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols nobinary<br/>\u00a0<br/>fName = <span class=\"st0\">''</span>; fName<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> = <span class=\"nu0\">2</span>; fName<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"st0\">'.'</span> <span class=\"sy0\">||</span> File.<span class=\"me0\">separator</span> <span class=\"sy0\">||</span> <span class=\"st0\">'output.txt'</span>; fName<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> = File.<span class=\"me0\">separator</span> <span class=\"sy0\">||</span> <span class=\"st0\">'output.txt'</span><br/>dName = <span class=\"st0\">''</span>; dName<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> = <span class=\"nu0\">2</span>; dName<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> = <span class=\"st0\">'.'</span> <span class=\"sy0\">||</span> File.<span class=\"me0\">separator</span> <span class=\"sy0\">||</span> <span class=\"st0\">'docs'</span>;       dName<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> = File.<span class=\"me0\">separator</span> <span class=\"sy0\">||</span> <span class=\"st0\">'docs'</span><br/>\u00a0<br/><span class=\"kw1\">do</span><br/>  <span class=\"kw1\">loop</span> i_ = <span class=\"nu0\">1</span> to fName<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">say</span> fName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span><br/>    fc = File<span class=\"br0\">(</span>fName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me0\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> fc <span class=\"kw3\">then</span>  <span class=\"kw1\">say</span> <span class=\"st0\">'File'</span> fName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span> <span class=\"st0\">'created successfully.'</span><br/>    <span class=\"kw3\">else</span>        <span class=\"kw1\">say</span> <span class=\"st0\">'File'</span> fName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span> <span class=\"st0\">'aleady exists.'</span><br/>    <span class=\"kw3\">end</span> i_<br/>\u00a0<br/>  <span class=\"kw1\">loop</span> i_ = <span class=\"nu0\">1</span> to dName<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">say</span> dName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span><br/>    dc = File<span class=\"br0\">(</span>dName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span><span class=\"br0\">)</span>.<span class=\"me0\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> dc <span class=\"kw3\">then</span>  <span class=\"kw1\">say</span> <span class=\"st0\">'Directory'</span> dName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span> <span class=\"st0\">'created successfully.'</span><br/>    <span class=\"kw3\">else</span>        <span class=\"kw1\">say</span> <span class=\"st0\">'Directory'</span> dName<span class=\"br0\">[</span>i_<span class=\"br0\">]</span> <span class=\"st0\">'aleady exists.'</span><br/>    <span class=\"kw3\">end</span> i_<br/><span class=\"kw3\">catch</span> iox = IOException<br/>  iox.<span class=\"me0\">printStackTrace</span><br/><span class=\"kw3\">end</span><br/>\u00a0<br/><span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "Nim", "loc": 7, "block": "<pre class=\"text highlighted_source\">import os<br/>\u00a0<br/>open(\"output.txt\", fmWrite).close()<br/>createDir(\"docs\")<br/>\u00a0<br/>open(DirSep &amp; \"output.txt\", fmWrite).close()<br/>createDir(DirSep &amp; \"docs\")</pre>"}, {"lang": "Objective-C", "loc": 7, "block": "<pre class=\"objc highlighted_source\"><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSFileManager_Class/\"><span class=\"kw5\">NSFileManager</span></a> <span class=\"sy0\">*</span>fm <span class=\"sy0\">=</span> <span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSFileManager_Class/\"><span class=\"kw5\">NSFileManager</span></a> defaultManager<span class=\"br0\">]</span>;<br/>\u00a0<br/><span class=\"br0\">[</span>fm createFileAtPath<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"output.txt\"</span> contents<span class=\"sy0\">:</span><span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSData_Class/\"><span class=\"kw5\">NSData</span></a> data<span class=\"br0\">]</span> attributes<span class=\"sy0\">:</span><span class=\"kw2\">nil</span><span class=\"br0\">]</span>;<br/><span class=\"co2\">// Pre-OS X 10.5</span><br/><span class=\"br0\">[</span>fm createDirectoryAtPath<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"docs\"</span> attributes<span class=\"sy0\">:</span><span class=\"kw2\">nil</span><span class=\"br0\">]</span>;<br/><span class=\"co2\">// OS X 10.5+</span><br/><span class=\"br0\">[</span>fm createDirectoryAtPath<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"docs\"</span> withIntermediateDirectories<span class=\"sy0\">:</span><span class=\"kw2\">NO</span> attributes<span class=\"sy0\">:</span><span class=\"kw2\">nil</span> error<span class=\"sy0\">:</span><span class=\"kw2\">NULL</span><span class=\"br0\">]</span>;</pre>"}, {"lang": "Objeck", "loc": 18, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">use</span> IO<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> FileExample <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      file <span class=\"sy0\">:=</span> FileWriter<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      file<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      file <span class=\"sy0\">:=</span> FileWriter<span class=\"sy0\">-&gt;</span><span class=\"me1\">New</span><span class=\"br0\">(</span><span class=\"st0\">\"/output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      file<span class=\"sy0\">-&gt;</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>      Directory<span class=\"sy0\">-&gt;</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Directory<span class=\"sy0\">-&gt;</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 6, "block": "<pre class=\"ocaml highlighted_source\"><span class=\"sy0\">#</span> <span class=\"kw1\">let</span> oc <span class=\"sy0\">=</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALopen_out\"><span class=\"kw3\">open_out</span></a> <span class=\"st0\">\"output.txt\"</span> <span class=\"kw1\">in</span><br/>  <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#VALclose_out\"><span class=\"kw3\">close_out</span></a> oc<span class=\"sy0\">;;</span><br/><span class=\"sy0\">-</span> <span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEunit\"><span class=\"kw4\">unit</span></a> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"sy0\">#</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Unix.html\"><span class=\"kw2\">Unix</span></a><span class=\"sy0\">.</span>mkdir <span class=\"st0\">\"docs\"</span> 0o750 <span class=\"sy0\">;;</span> <span class=\"co1\">(* rights 0o750 for rwxr-x--- *)</span><br/><span class=\"sy0\">-</span> <span class=\"sy0\">:</span> <a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Pervasives.html#TYPEunit\"><span class=\"kw4\">unit</span></a> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Oz", "loc": 6, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">for</span> Dir <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"st0\">\"/\"</span> <span class=\"st0\">\"./\"</span><span class=\"br0\">]</span> <span class=\"kw1\">do</span><br/>   File = <span class=\"br0\">{</span>New Open<span class=\"sy0\">.</span>file init<span class=\"br0\">(</span>name:Dir<span class=\"sy0\">#</span><span class=\"st0\">\"output.txt\"</span> flags:<span class=\"br0\">[</span>create<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/><span class=\"kw1\">in</span><br/>   <span class=\"br0\">{</span>File close<span class=\"br0\">}</span><br/>   <span class=\"br0\">{</span>OS<span class=\"sy0\">.</span>mkDir Dir<span class=\"sy0\">#</span><span class=\"st0\">\"docs\"</span> <span class=\"br0\">[</span><span class=\"st0\">'S_IRUSR'</span> <span class=\"st0\">'S_IWUSR'</span> <span class=\"st0\">'S_IXUSR'</span> <span class=\"st0\">'S_IXGRP'</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <br/><span class=\"kw1\">end</span></pre>"}, {"lang": "PARI/GP", "loc": 2, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">write1</span><span class=\"br0\">(</span><span class=\"st0\">\"0.txt\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">write1</span><span class=\"br0\">(</span><span class=\"st0\">\"/0.txt\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 19, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>program in out;<br/>\u00a0<br/>var<br/>\u00a0<br/>   f\u00a0: textfile;<br/>\u00a0<br/>begin<br/>\u00a0<br/>   assignFile(f,'/output.txt');<br/>   rewrite(f);<br/>   close(f);<br/>   makedir('/docs');<br/>   assignFile(f,'/docs/output.txt');<br/>   rewrite(f);<br/>   close(f);<br/>\u00a0<br/>end;<br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 9, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> File<span class=\"sy0\">::</span><span class=\"me2\">Spec</span><span class=\"sy0\">::</span><span class=\"me2\">Functions</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>catfile rootdir<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">{</span> <span class=\"co1\"># here</span><br/>    <a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a> <span class=\"kw1\">my</span> <span class=\"re0\">$fh</span><span class=\"sy0\">,</span> <span class=\"st_h\">'&gt;'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'output.txt'</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/mkdir.html\"><span class=\"kw3\">mkdir</span></a> <span class=\"st_h\">'docs'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">{</span> <span class=\"co1\"># root dir</span><br/>    <a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a> <span class=\"kw1\">my</span> <span class=\"re0\">$fh</span><span class=\"sy0\">,</span> <span class=\"st_h\">'&gt;'</span><span class=\"sy0\">,</span> catfile rootdir<span class=\"sy0\">,</span> <span class=\"st_h\">'output.txt'</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/mkdir.html\"><span class=\"kw3\">mkdir</span></a> catfile rootdir<span class=\"sy0\">,</span> <span class=\"st_h\">'docs'</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 6, "block": "<pre class=\"perl6 highlighted_source\">\u00a0<br/><span class=\"kw1\">for</span> <span class=\"st_h\">'.'</span><span class=\"sy0\">,</span> <span class=\"st_h\">''</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$prefix</span> <span class=\"br0\">{</span><br/>    mkdir <span class=\"st0\">\"$prefix/docs\"</span><span class=\"sy0\">;</span><br/>    open <span class=\"st0\">\"$prefix/output.txt\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span>w<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Phix", "loc": 15, "block": "<pre class=\"text highlighted_source\">integer fn<br/>\u00a0<br/>-- In the current working directory<br/>system(\"mkdir docs\",2)<br/>fn = open(\"output.txt\",\"w\")<br/>close(fn)<br/>\u00a0<br/>-- In the filesystem root<br/>system(\"mkdir \\\\docs\",2)<br/>fn = open(\"\\\\output.txt\",\"w\")<br/>if fn=-1 then<br/>    puts(1,\"unable to create \\\\output.txt\\n\")<br/>else<br/>    close(fn)<br/>end if</pre>"}, {"lang": "PHP", "loc": 6, "block": "<pre class=\"php highlighted_source\"><span class=\"kw2\">&lt;?php</span><br/><a href=\"http://www.php.net/touch\"><span class=\"kw3\">touch</span></a><span class=\"br0\">(</span><span class=\"st_h\">'output.txt'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/mkdir\"><span class=\"kw3\">mkdir</span></a><span class=\"br0\">(</span><span class=\"st_h\">'docs'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/touch\"><span class=\"kw3\">touch</span></a><span class=\"br0\">(</span><span class=\"st_h\">'/output.txt'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><a href=\"http://www.php.net/mkdir\"><span class=\"kw3\">mkdir</span></a><span class=\"br0\">(</span><span class=\"st_h\">'/docs'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"sy1\">?&gt;</span></pre>"}, {"lang": "PicoLisp", "loc": 4, "block": "<pre class=\"text highlighted_source\">(out \"output.txt\")                     # Empty output<br/>(call 'mkdir \"docs\")                   # Call external<br/>(out \"/output.txt\")                     <br/>(call 'mkdir \"/docs\")</pre>"}, {"lang": "Pike", "loc": 6, "block": "<pre class=\"pike highlighted_source\"><span class=\"kw1\">import</span> Stdio<span class=\"sy0\">;</span><br/>\u00a0<br/>int main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>   write_file<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span>,<span class=\"st0\">\"\"</span>,0100<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   write_file<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span>,<span class=\"st0\">\"\"</span>,0100<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PL/I", "loc": 4, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>open file (output) title ('/OUTPUT.TXT,type(text),recsize(100)' );<br/>close file (output);<br/>\u00a0</pre>"}, {"lang": "PowerShell", "loc": 4, "block": "<pre class=\"powershell highlighted_source\"><span class=\"kw1\">New-Item</span> output.txt <span class=\"kw5\">-ItemType</span> File<br/><span class=\"kw1\">New-Item</span> \\output.txt <span class=\"kw5\">-ItemType</span> File<br/><span class=\"kw1\">New-Item</span> docs <span class=\"kw5\">-ItemType</span> Directory<br/><span class=\"kw1\">New-Item</span> \\docs <span class=\"kw5\">-ItemType</span> Directory</pre>"}, {"lang": "ProDOS", "loc": 3, "block": "<pre class=\"text highlighted_source\">makedirectory docs<br/>changedirectory docs<br/>makenewfile output.txt</pre>"}, {"lang": "PureBasic", "loc": 4, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw2\">CreateFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>:<span class=\"kw2\">CloseFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw2\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">CreateFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>,<span class=\"st0\">\"/output.txt\"</span><span class=\"br0\">)</span>:<span class=\"kw2\">CloseFile</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/><span class=\"kw2\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Python", "loc": 4, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">os</span><br/><span class=\"kw1\">for</span> directory <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"st0\">'/'</span><span class=\"sy0\">,</span> <span class=\"st0\">'./'</span><span class=\"br0\">]</span>:<br/>  <span class=\"kw2\">open</span><span class=\"br0\">(</span>directory + <span class=\"st0\">'output.txt'</span><span class=\"sy0\">,</span> <span class=\"st0\">'w'</span><span class=\"br0\">)</span>.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\"># create /output.txt, then ./output.txt</span><br/>  <span class=\"kw3\">os</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span>directory + <span class=\"st0\">'docs'</span><span class=\"br0\">)</span>                 <span class=\"co1\"># create directory /docs, then ./docs</span></pre>"}, {"lang": "R", "loc": 10, "block": "<pre class=\"text highlighted_source\">f &lt;- file(\"output.txt\", \"w\")<br/>close(f)<br/>\u00a0<br/># it may fails and the exact syntax to achieve the root<br/># changes according to the operating system<br/>f &lt;- file(\"/output.txt\", \"w\")<br/>close(f)<br/>\u00a0<br/>success &lt;- dir.create(\"docs\")<br/>success &lt;- dir.create(\"/docs\")</pre>"}, {"lang": "Racket", "loc": 6, "block": "<pre class=\"text highlighted_source\">#lang racket<br/>\u00a0<br/>(display-to-file \"\" \"output.txt\")<br/>(make-directory \"docs\")<br/>(display-to-file \"\" \"/output.txt\")<br/>(make-directory \"/docs\")</pre>"}, {"lang": "Raven", "loc": 5, "block": "<pre class=\"text highlighted_source\">\"\" as str<br/>str 'output.txt'  write<br/>str '/output.txt' write<br/>'docs'  mkdir<br/>'/docs' mkdir</pre>"}, {"lang": "REBOL", "loc": 10, "block": "<pre class=\"rebol highlighted_source\"><span class=\"co1\">; Creating in current directory:</span><br/>\u00a0<br/><span class=\"kw3\">write</span> <span class=\"sy0\">%</span>output.txt <span class=\"st0\">\"\"</span><br/><span class=\"kw3\">make-dir</span> <span class=\"sy0\">%</span>docs<span class=\"sy0\">/</span><br/>\u00a0<br/><span class=\"co1\">; Creating in root directory:</span><br/>\u00a0<br/><span class=\"kw3\">write</span> <span class=\"sy0\">%/</span>output.txt <span class=\"st0\">\"\"</span><br/><span class=\"kw3\">make-dir</span> <span class=\"sy0\">%/</span>docs<span class=\"sy0\">/</span><br/>\u00a0</pre>"}, {"lang": "Retro", "loc": 3, "block": "<pre class=\"text highlighted_source\">with files'<br/>\"output.txt\"\u00a0:w open close drop<br/>\"/output.txt\"\u00a0:w open close drop</pre>"}, {"lang": "REXX", "loc": 7, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX pgm creates a new empty file and directory; in curr dir and root.*/</span><br/>       <span class=\"kw1\">do</span> <span class=\"nu0\">2</span>                            <span class=\"coMULTI\">/*perform three statements twice.*/</span><br/>       <span class=\"st0\">'COPY NUL output.txt'</span>           <span class=\"coMULTI\">/*copy a \"null\" (empty) file.    */</span><br/>       <span class=\"st0\">'MKDIR DOCS'</span>                    <span class=\"coMULTI\">/*make a directory (aka: folder).*/</span><br/>       <span class=\"st0\">'CD \\'</span>                          <span class=\"coMULTI\">/*change currect dir to the root.*/</span><br/>       <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*2*/</span>                     <span class=\"coMULTI\">/*now, go and perform them again.*/</span><br/>                                       <span class=\"coMULTI\">/*stick a fork in it, we're done.*/</span></pre>"}, {"lang": "Ring", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>system(\"mkdir C:\\Ring\\docs\")<br/>fopen(\"C:\\Ring\\docs\\output.txt\", \"w+\")<br/>system(\"mkdir docs\")<br/>fopen(\"output.txt\", \"w+\")<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 4, "block": "<pre class=\"ruby highlighted_source\"><span class=\"br0\">[</span><span class=\"st0\">'/'</span>, <span class=\"st0\">'./'</span><span class=\"br0\">]</span>.<span class=\"me1\">each</span><span class=\"br0\">{</span><span class=\"sy0\">|</span>dir<span class=\"sy0\">|</span><br/>  <span class=\"kw4\">Dir</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span>dir <span class=\"sy0\">+</span> <span class=\"st0\">'docs'</span><span class=\"br0\">)</span>      <span class=\"co1\"># create '/docs', then './docs'</span><br/>  <span class=\"kw4\">File</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>dir <span class=\"sy0\">+</span> <span class=\"st0\">'output.txt'</span>, <span class=\"st0\">'w'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>  <span class=\"co1\"># create empty file /output.txt, then ./output.txt</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Run BASIC", "loc": 8, "block": "<pre class=\"text highlighted_source\">open \"output.txt\" for output as #f<br/>close #f<br/>\u00a0<br/>dirOk = mkdir( \"f:\\doc\")<br/>if not(dirOk) then print \"Directory not created!\": end<br/>\u00a0<br/>open \"f:\\doc\\output.txt\" for output as #f<br/>close #f</pre>"}, {"lang": "Rust", "loc": 26, "block": "<pre class=\"text highlighted_source\">use std::io::{self, Write};<br/>use std::fs::{DirBuilder, File};<br/>use std::path::Path;<br/>use std::{process,fmt};<br/>\u00a0<br/>const FILE_NAME: &amp;'static str = \"output.txt\";<br/>const DIR_NAME\u00a0: &amp;'static str = \"docs\";<br/>\u00a0<br/>fn main() {<br/>    create(\".\").and(create(\"/\"))<br/>               .unwrap_or_else(|e| error_handler(e,1));<br/>}<br/>\u00a0<br/>\u00a0<br/>fn create&lt;P&gt;(root: P) -&gt; io::Result&lt;File&gt;<br/>    where P: AsRef&lt;Path&gt;<br/>{<br/>    let f_path = root.as_ref().join(FILE_NAME);<br/>    let d_path = root.as_ref().join(DIR_NAME);<br/>    DirBuilder::new().create(d_path).and(File::create(f_path))<br/>}<br/>\u00a0<br/>fn error_handler&lt;E: fmt::Display&gt;(error: E, code: i32) -&gt;\u00a0! {<br/>    let _ = writeln!(&amp;mut io::stderr(), \"Error: {}\", error);<br/>    process::exit(code)<br/>}</pre>"}, {"lang": "Scala", "loc": 12, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> CreateFile <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> File<span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> e<span class=\"sy0\">:</span> Exception <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span>s<span class=\"st0\">\"Exception caught: $e with creating output.txt\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> File<span class=\"br0\">(</span>s<span class=\"st0\">\"${File.separator}output.txt\"</span><span class=\"br0\">)</span>.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> e<span class=\"sy0\">:</span> Exception <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span>s<span class=\"st0\">\"Exception caught: $e with creating ${File.separator}output.txt\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> File<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> e<span class=\"sy0\">:</span> Exception <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span>s<span class=\"st0\">\"Exception caught: $e with creating directory docs\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> File<span class=\"br0\">(</span>s<span class=\"st0\">\"${File.separator}docs\"</span><span class=\"br0\">)</span>.<span class=\"me1\">mkdir</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">{</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> e<span class=\"sy0\">:</span> Exception <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span>s<span class=\"st0\">\"Exception caught: $e with creating directory ${File.separator}docs\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 2, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">open-output-file</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">open-output-file</span> <span class=\"st0\">\"/output.txt\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 14, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>  include \"osfiles.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  local<br/>    var file: aFile is STD_NULL;<br/>  begin<br/>    aFile\u00a0:= open(\"output.txt\", \"w\");<br/>    close(aFile);<br/>    mkdir(\"docs\");<br/>    aFile\u00a0:= open(\"/output.txt\", \"w\");<br/>    close(aFile);<br/>    mkdir(\"/docs\");<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 7, "block": "<pre class=\"ruby highlighted_source\"><span class=\"co1\"># Here</span><br/><span class=\"sy0\">%</span>f<span class=\"st0\">'output.txt'</span> <span class=\"sy0\">-&gt;</span> create;<br/><span class=\"sy0\">%</span>d<span class=\"st0\">'docs'</span>       <span class=\"sy0\">-&gt;</span> create;<br/>\u00a0<br/><span class=\"co1\"># Root dir</span><br/><span class=\"kw4\">Dir</span>.<span class=\"me1\">root</span> <span class=\"sy0\">+</span> <span class=\"sy0\">%</span>f<span class=\"st0\">'output.txt'</span> <span class=\"sy0\">-&gt;</span> create;<br/><span class=\"kw4\">Dir</span>.<span class=\"me1\">root</span> <span class=\"sy0\">+</span> <span class=\"sy0\">%</span>d<span class=\"st0\">'docs'</span>       <span class=\"sy0\">-&gt;</span> create;</pre>"}, {"lang": "Slate", "loc": 2, "block": "<pre class=\"text highlighted_source\">(File newNamed: 'output.txt') touch.<br/>(Directory current / 'output.txt') touch.</pre>"}, {"lang": "Smalltalk", "loc": 1, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"br0\">(</span><span class=\"re0\">FileDirectory</span> on: <span class=\"st0\">'c:\\'</span><span class=\"br0\">)</span> newFileNamed: <span class=\"st0\">'output.txt'</span>; createDirectory: <span class=\"st0\">'docs'</span>.</pre>"}, {"lang": "SNOBOL4", "loc": 8, "block": "<pre class=\"text highlighted_source\">        output(.file,1,'output.txt');  endfile(1) \u00a0;* Macro Spitbol<br/>*       output(.file,1,,'output.txt'); endfile(1) \u00a0;* CSnobol<br/>        host(1,'mkdir docs')<br/>\u00a0<br/>        output(.file,1,'/output.txt');  endfile(1)\u00a0;* Macro Spitbol<br/>*       output(.file,1,,'/output.txt'); endfile(1)\u00a0;* CSnobol<br/>        host(1,'mkdir /docs')<br/>end</pre>"}, {"lang": "SQLite", "loc": 10, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>/*<br/>*Use '/' for *nix. Use whatever your root directory is on Windows. <br/>*Must be run as admin.<br/>*/<br/>.shell mkdir \"docs\";<br/>.shell mkdir \"/docs\";<br/>.output output.txt<br/>.output /output.txt<br/>\u00a0</pre>"}, {"lang": "SQL PL", "loc": 26, "block": "<pre class=\"sql highlighted_source\">\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  <span class=\"kw1\">DECLARE</span> UTL_FILE_HANDLER UTL_FILE<span class=\"sy0\">.</span>FILE_TYPE;<br/>  <span class=\"kw1\">DECLARE</span> DIR_ALIAS_CURRENT <span class=\"kw1\">VARCHAR</span><span class=\"br0\">(</span><span class=\"nu0\">128</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">DECLARE</span> DIR_ALIAS_ROOT <span class=\"kw1\">VARCHAR</span><span class=\"br0\">(</span><span class=\"nu0\">128</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">DECLARE</span> DIRECTORY <span class=\"kw1\">VARCHAR</span><span class=\"br0\">(</span><span class=\"nu0\">1024</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">DECLARE</span> FILENAME <span class=\"kw1\">VARCHAR</span><span class=\"br0\">(</span><span class=\"nu0\">255</span><span class=\"br0\">)</span>;<br/>\u00a0<br/>  <span class=\"kw1\">SET</span> DIR_ALIAS_CURRENT <span class=\"sy0\">=</span> <span class=\"st0\">'outputFileCurrent'</span>;<br/>  <span class=\"kw1\">SET</span> DIRECTORY <span class=\"sy0\">=</span> <span class=\"st0\">'/home/db2inst1/doc'</span>;<br/>  <span class=\"kw1\">SET</span> FILENAME <span class=\"sy0\">=</span> <span class=\"st0\">'output.txt'</span>;<br/>\u00a0<br/>  <span class=\"kw1\">CALL</span> UTL_DIR<span class=\"sy0\">.</span>CREATE_OR_REPLACE_DIRECTORY<span class=\"br0\">(</span>DIR_ALIAS_CURRENT<span class=\"sy0\">,</span> DIRECTORY<span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">SET</span> UTL_FILE_HANDLER <span class=\"sy0\">=</span> UTL_FILE<span class=\"sy0\">.</span>FOPEN<span class=\"br0\">(</span>DIR_ALIAS_CURRENT<span class=\"sy0\">,</span> FILENAME<span class=\"sy0\">,</span> <span class=\"st0\">'a'</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">CALL</span> UTL_FILE<span class=\"sy0\">.</span>FFLUSH<span class=\"br0\">(</span>UTL_FILE_HANDLER<span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">CALL</span> UTL_FILE<span class=\"sy0\">.</span>FCLOSE<span class=\"br0\">(</span>UTL_FILE_HANDLER<span class=\"br0\">)</span>;<br/>\u00a0<br/>  <span class=\"kw1\">SET</span> DIR_ALIAS_ROOT <span class=\"sy0\">=</span> <span class=\"st0\">'outputFileRoot'</span>;<br/>  <span class=\"kw1\">SET</span> DIRECTORY <span class=\"sy0\">=</span> <span class=\"st0\">'/doc'</span>;<br/>\u00a0<br/>  <span class=\"kw1\">CALL</span> UTL_DIR<span class=\"sy0\">.</span>CREATE_OR_REPLACE_DIRECTORY<span class=\"br0\">(</span>DIR_ALIAS_ROOT<span class=\"sy0\">,</span> DIRECTORY<span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">SET</span> UTL_FILE_HANDLER <span class=\"sy0\">=</span> UTL_FILE<span class=\"sy0\">.</span>FOPEN<span class=\"br0\">(</span>DIR_ALIAS_ROOT<span class=\"sy0\">,</span> FILENAME<span class=\"sy0\">,</span> <span class=\"st0\">'a'</span><span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">CALL</span> UTL_FILE<span class=\"sy0\">.</span>FFLUSH<span class=\"br0\">(</span>UTL_FILE_HANDLER<span class=\"br0\">)</span>;<br/>  <span class=\"kw1\">CALL</span> UTL_FILE<span class=\"sy0\">.</span>FCLOSE<span class=\"br0\">(</span>UTL_FILE_HANDLER<span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> @<br/>\u00a0</pre>"}, {"lang": "Standard ML", "loc": 5, "block": "<pre class=\"text highlighted_source\">let val out = TextIO.openOut \"output.txt\" in<br/>  TextIO.closeOut out<br/>end;<br/>\u00a0<br/>OS.FileSys.mkDir \"docs\";</pre>"}, {"lang": "Stata", "loc": 7, "block": "<pre class=\"text highlighted_source\">file open f using output.txt, write replace<br/>file close f<br/>mkdir docs<br/>\u00a0<br/>file open f using \\output.txt, write replace<br/>file close f<br/>mkdir \\docs</pre>"}, {"lang": "Tcl", "loc": 5, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">close</span> <span class=\"br0\">[</span><span class=\"kw2\">open</span> output.txt w<span class=\"br0\">]</span> <br/><span class=\"kw2\">close</span> <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"br0\">[</span><span class=\"kw2\">file</span> nativename /output.txt<span class=\"br0\">]</span> w<span class=\"br0\">]</span> <br/>\u00a0<br/><span class=\"kw2\">file</span> mkdir docs<br/><span class=\"kw2\">file</span> mkdir <span class=\"br0\">[</span><span class=\"kw2\">file</span> nativename /docs<span class=\"br0\">]</span></pre>"}, {"lang": "Toka", "loc": 7, "block": "<pre class=\"text highlighted_source\">needs shell<br/>\" output.txt\" \"W\" file.open file.close<br/>\" /output.txt\" \"W\" file.open file.close<br/>\u00a0<br/>( Create the directories with permissions set to 777)<br/>\" docs\" &amp;777 mkdir<br/>\" /docs\" &amp;777 mkdir</pre>"}, {"lang": "TUSCRIPT", "loc": 7, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>- create file<br/>ERROR/STOP CREATE (\"output.txt\",FDF-o,-std-)<br/>- create directory<br/>ERROR/STOP CREATE (\"docs\",project,-std-)<br/>\u00a0</pre>"}, {"lang": "Ursa", "loc": 8, "block": "<pre class=\"text highlighted_source\">decl file f<br/>f.create \"output.txt\"<br/>f.createdir \"docs\"<br/>\u00a0<br/># in the root directory<br/>f.create \"/output.txt\"<br/>f.createdir \"/docs\"<br/>\u00a0</pre>"}, {"lang": "VBScript", "loc": 11, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw4\">Set</span> objFSO = <span class=\"kw2\">CreateObject</span>(<span class=\"st0\">\"Scripting.FileSystemObject\"</span>)<br/>\u00a0<br/><span class=\"co1\">'current directory<br/></span>objFSO.CreateFolder(<span class=\"st0\">\".\\docs\"</span>)<br/>objFSO.CreateTextFile(<span class=\"st0\">\".\\docs\\output.txt\"</span>)<br/>\u00a0<br/><span class=\"co1\">'root directory<br/></span>objFSO.CreateFolder(<span class=\"st0\">\"\\docs\"</span>)<br/>objFSO.CreateTextFile(<span class=\"st0\">\"\\docs\\output.txt\"</span>)<br/>\u00a0</pre>"}, {"lang": "Vedit macro language", "loc": 7, "block": "<pre class=\"vedit highlighted_source\"><span class=\"co1\">// In current directory</span><br/>File_Open<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span> Ins_Char<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span> Del_Char<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> Buf_Close<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>File_Mkdir<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">// In the root directory</span><br/>File_Open<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span> Ins_Char<span class=\"br0\">(</span><span class=\"st0\">' '</span><span class=\"br0\">)</span> Del_Char<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> Buf_Close<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>File_Mkdir<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Visual Basic .NET", "loc": 11, "block": "<pre class=\"vbnet highlighted_source\"> <span class=\"co1\">'Current Directory</span><br/>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>IO<span class=\"sy0\">.</span><span class=\"me1\">File</span><span class=\"sy0\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=CLOSE+site:msdn.microsoft.com\"><span class=\"kw7\">Close</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/> <span class=\"co1\">'Root</span><br/>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span><span class=\"st0\">\"\\docs\"</span><span class=\"br0\">)</span><br/>IO<span class=\"sy0\">.</span><span class=\"me1\">File</span><span class=\"sy0\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">\"\\output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=CLOSE+site:msdn.microsoft.com\"><span class=\"kw7\">Close</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/> <span class=\"co1\">'Root, platform independent</span><br/>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">CreateDirectory</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Path</span><span class=\"sy0\">.</span><span class=\"me1\">DirectorySeparatorChar</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>IO<span class=\"sy0\">.</span><span class=\"me1\">File</span><span class=\"sy0\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Path</span><span class=\"sy0\">.</span><span class=\"me1\">DirectorySeparatorChar</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><a href=\"http://www.google.com/search?q=CLOSE+site:msdn.microsoft.com\"><span class=\"kw7\">Close</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "UNIX Shell", "loc": 3, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw2\">touch</span> output.txt <span class=\"sy0\">/</span>output.txt   <span class=\"co0\"># create both output.txt and /output.txt</span><br/><span class=\"kw2\">mkdir</span> <span class=\"sy0\">/</span>docs<br/><span class=\"kw2\">mkdir</span> docs    <span class=\"co0\"># create both /docs and docs</span></pre>"}, {"lang": "X86 Assembly", "loc": 56, "block": "<pre class=\"asm highlighted_source\">\u00a0<br/><span class=\"co1\">; syscall numbers for readability.\u00a0:]</span><br/>\u00a0<br/><span class=\"kw5\">%define</span> sys_mkdir <span class=\"nu0\">39</span><br/><span class=\"kw5\">%define</span> sys_creat <span class=\"nu0\">8</span><br/>\u00a0<br/><span class=\"kw5\">section</span> <span class=\"kw5\">.data</span><br/>\tfName       <span class=\"kw5\">db</span> <span class=\"st0\">'doc/output.txt'</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>\trfName      <span class=\"kw5\">db</span> <span class=\"st0\">'/output.txt'</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>\tdName       <span class=\"kw5\">db</span> <span class=\"st0\">'doc'</span><span class=\"sy1\">,</span><span class=\"nu0\">0</span><br/>\u00a0<br/>\terr_msg     <span class=\"kw5\">db</span> <span class=\"st0\">\"Something went wrong!\u00a0:[\"</span><span class=\"sy1\">,</span><span class=\"nu0\">0xa</span><br/>\terr_len     <span class=\"kw5\">equ</span> <span class=\"sy2\">$</span><span class=\"sy1\">-</span>err_msg<br/>\u00a0<br/><span class=\"kw5\">section</span> <span class=\"kw5\">.text</span><br/><span class=\"kw5\">global</span> _start<br/>\u00a0<br/>_start<span class=\"sy1\">:</span><br/>\u00a0<br/><span class=\"kw1\">nop</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> dName              <span class=\"co1\">; Directory name</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> sys_mkdir          <span class=\"co1\">; Specify sys_mkdir call</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> <span class=\"nu0\">0750o</span>              <span class=\"co1\">; permission (rwxr-x---)</span><br/>\t<span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span>                    <span class=\"co1\">; Make kernel call</span><br/>\u00a0<br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> fName              <span class=\"co1\">; File name</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> sys_creat          <span class=\"co1\">; Specify sys_creat call</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> <span class=\"nu0\">0640o</span>              <span class=\"co1\">; permission (rw-r-----)</span><br/>\t<span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span>                    <span class=\"co1\">; Make kernel call</span><br/>\t<span class=\"kw1\">test</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"kw4\">eax</span>               <span class=\"co1\">; eax AND eax</span><br/>\t<span class=\"kw1\">js</span> _ragequit                <span class=\"co1\">; If EAX is less than zero</span><br/>                                    <span class=\"co1\">; THEN Display Message Error</span><br/>\u00a0<br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> rfName             <span class=\"co1\">; File name Root</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> sys_creat          <span class=\"co1\">; Specify sys_creat call</span><br/>\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> <span class=\"nu0\">0777o</span>              <span class=\"co1\">; permission (rwxrwxrwx)</span><br/>\t<span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span>                    <span class=\"co1\">; Make kernel call</span><br/>\t<span class=\"kw1\">cmp</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><br/>\t<span class=\"kw1\">jle</span> _exit                   <span class=\"co1\">; IF EAX is less or equal than zero</span><br/>                                    <span class=\"co1\">; THEN jump to EXIT</span><br/>                                    <span class=\"co1\">; ELSE Display Message Error</span><br/>\u00a0<br/>\t_ragequit<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">mov</span> <span class=\"kw4\">edx</span><span class=\"sy1\">,</span> err_len        <span class=\"co1\">; Pass offset of the message error</span><br/>\t\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ecx</span><span class=\"sy1\">,</span> err_msg        <span class=\"co1\">; Pass the length of the message error</span><br/>\t\t<span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span>              <span class=\"co1\">; Specify sys_write call</span><br/>\t\t<span class=\"kw1\">mov</span> <span class=\"kw4\">ebx</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span>              <span class=\"co1\">; Specify File Descriptor 2: Error Output</span><br/>\t\t<span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span>                <span class=\"co1\">; Make kernel call</span><br/>\u00a0<br/>\t_exit<span class=\"sy1\">:</span><br/>\t\t<span class=\"kw1\">push</span> <span class=\"nu0\">0x1</span><br/>\t\t<span class=\"kw1\">mov</span> <span class=\"kw4\">eax</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span>              <span class=\"co1\">; Code for Exit Syscall</span><br/>\t\t<span class=\"kw1\">push</span> <span class=\"kw4\">eax</span><br/>\t\t<span class=\"kw1\">int</span> <span class=\"nu0\">0x80</span>                <span class=\"co1\">; Make kernel call</span><br/>\t\t<span class=\"kw1\">ret</span><br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 19, "block": "<pre class=\"text highlighted_source\">$ ls -l docs<br/>ls: cannot access docs: No such file or directory<br/>$ zkl<br/>zkl: fcn createOutputTxt(dir){ dir=dir+\"/docs\"; File.mkdir(dir); File(dir+\"/output.txt\",\"w\") }<br/>Void<br/>zkl: createOutputTxt(\".\")<br/>File(./docs/output.txt)                                                      <br/>zkl: createOutputTxt(\"/\")<br/>Stack trace for VM#1 ():<br/>   <a class=\"__cf_email__\" data-cfemail=\"256648410b4657404451406a5051555051715d5165484e414c57\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> addr:16  args(1) reg(0) <br/>   <a class=\"__cf_email__\" data-cfemail=\"c281afa6ec9d9da1adacb1b6b0b7a1b6adb082a1b0a7a3b6a78db7b6b2b7b696bab6\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a> addr:9  args(0) reg(0) R<br/>   startup.__constructor addr:2271  args(0) reg(1) ER<br/>   startup.__constructor addr:2207  args(0) reg(22) <br/>Exception thrown: IOError(File.mkdir(//docs): Permission denied)<br/>zkl: ^D<br/>$ ls -l docs<br/>total 0<br/>-rw-r--r-- 1 craigd craigd 0 Oct 27 22:08 output.txt<br/>\u00a0</pre>"}, {"lang": "ZX Spectrum Basic", "loc": 1, "block": "<pre class=\"zxbasic highlighted_source\"><span class=\"kw1\">SAVE</span> <span class=\"st0\">\"OUTPUT\"</span> <span class=\"kw3\">CODE</span> <span class=\"nu0\">16384</span>,<span class=\"nu0\">0</span></pre>"}]}