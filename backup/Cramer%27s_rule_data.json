{"task": "Cramer%27s_rule", "blocks": [{"lang": "ALGOL 68", "loc": 48, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># returns the solution of a.x = b via Cramer's rule                    #</span><br/><span class=\"coMULTI\">#         this is for REAL arrays, could define additional operators   #</span><br/><span class=\"coMULTI\">#         for INT, COMPL, etc.                                         #</span><br/><span class=\"kw4\">PRIO</span> CRAMER <span class=\"sy1\">=</span> 1<span class=\"sy1\">;</span><br/><span class=\"kw4\">OP</span>   CRAMER <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"sy1\">,</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> a<span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> b <span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span><span class=\"sy1\">:</span><br/>     <span class=\"kw2\">IF</span> 1 <span class=\"kw8\">UPB</span> a <span class=\"sy1\">/=</span> 2 <span class=\"kw8\">UPB</span> a<br/>     <span class=\"kw16\">OR</span> 1 <span class=\"kw8\">LWB</span> a <span class=\"sy1\">/=</span> 2 <span class=\"kw8\">LWB</span> a<br/>     <span class=\"kw16\">OR</span> 1 <span class=\"kw8\">UPB</span> a <span class=\"sy1\">/=</span>   <span class=\"kw8\">UPB</span> b<br/>     <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># the array sizes and bounds do not match                       #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Invaid parameters to CRAMER\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        stop<br/>     <span class=\"kw2\">ELIF</span> <span class=\"kw3\">REAL</span> deta <span class=\"sy1\">=</span> DET a<span class=\"sy1\">;</span><br/>          det a <span class=\"sy1\">=</span> 0<br/>     <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># a is singular                                                 #</span><br/>        <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"Singular matrix for CRAMER\"</span><span class=\"sy1\">,</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        stop<br/>     <span class=\"kw2\">ELSE</span><br/>        <span class=\"coMULTI\"># the arrays have matching bounds                               #</span><br/>        <span class=\"br0\">[</span> <span class=\"kw8\">LWB</span> b <span class=\"sy1\">:</span> <span class=\"kw8\">UPB</span> b <span class=\"br0\">]</span><span class=\"kw3\">REAL</span> result<span class=\"sy1\">;</span><br/>        <span class=\"kw2\">FOR</span> col <span class=\"kw2\">FROM</span> <span class=\"kw8\">LWB</span> b <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> b <span class=\"kw2\">DO</span><br/>            <span class=\"coMULTI\"># form a matrix from a with the col'th column replaced by b #</span><br/>            <span class=\"br0\">[</span> 1 <span class=\"kw8\">LWB</span> a <span class=\"sy1\">:</span> 1 <span class=\"kw8\">UPB</span> a<span class=\"sy1\">,</span> 2 <span class=\"kw8\">LWB</span> a <span class=\"sy1\">:</span> 2 <span class=\"kw8\">UPB</span> a <span class=\"br0\">]</span><span class=\"kw3\">REAL</span> m <span class=\"sy1\">:=</span> a<span class=\"sy1\">;</span><br/>            m<span class=\"br0\">[</span> <span class=\"sy1\">:</span> <span class=\"sy1\">,</span> col <span class=\"br0\">]</span> <span class=\"sy1\">:=</span> b<span class=\"br0\">[</span> <span class=\"sy1\">:</span> <span class=\"kw7\">AT</span> 1 <span class=\"br0\">]</span><span class=\"sy1\">;</span><br/>            <span class=\"coMULTI\"># col'th result elemet as per Cramer's rule                 #</span><br/>            result<span class=\"br0\">[</span> col <span class=\"br0\">]</span> <span class=\"sy1\">:=</span> DET m <span class=\"sy1\">/</span> det a<br/>        <span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/>        result<br/>     <span class=\"kw2\">FI</span><span class=\"sy1\">;</span> <span class=\"coMULTI\"># CRAMER #</span><br/>\u00a0<br/><span class=\"coMULTI\"># test CRAMER using the matrix and column vector specified in the task  #</span><br/><span class=\"br0\">[</span><span class=\"sy1\">,</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span> a <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"br0\">(</span>  2<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>1<span class=\"sy1\">,</span>  5<span class=\"sy1\">,</span>  1 <span class=\"br0\">)</span><br/>            <span class=\"sy1\">,</span> <span class=\"br0\">(</span>  3<span class=\"sy1\">,</span>  2<span class=\"sy1\">,</span>  2<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>6 <span class=\"br0\">)</span><br/>            <span class=\"sy1\">,</span> <span class=\"br0\">(</span>  1<span class=\"sy1\">,</span>  3<span class=\"sy1\">,</span>  3<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>1 <span class=\"br0\">)</span><br/>            <span class=\"sy1\">,</span> <span class=\"br0\">(</span>  5<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>2<span class=\"sy1\">,</span> <span class=\"sy1\">-</span>3<span class=\"sy1\">,</span>  3 <span class=\"br0\">)</span><br/>            <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span>  b <span class=\"sy1\">=</span> <span class=\"br0\">(</span>  <span class=\"sy1\">-</span>3<br/>            <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>32<br/>            <span class=\"sy1\">,</span> <span class=\"sy1\">-</span>47<br/>            <span class=\"sy1\">,</span>  49<br/>            <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"kw3\">REAL</span>  solution <span class=\"sy1\">=</span> a CRAMER b<span class=\"sy1\">;</span><br/><span class=\"kw2\">FOR</span> c <span class=\"kw2\">FROM</span> <span class=\"kw8\">LWB</span> solution <span class=\"kw2\">TO</span> <span class=\"kw8\">UPB</span> solution <span class=\"kw2\">DO</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">,</span> <span class=\"kw22\">fixed</span><span class=\"br0\">(</span> solution<span class=\"br0\">[</span> c <span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"sy1\">-</span>8<span class=\"sy1\">,</span> 4 <span class=\"br0\">)</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/><span class=\"kw2\">OD</span><span class=\"sy1\">;</span><br/><span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"kw22\">newline</span> <span class=\"br0\">)</span> <span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "C", "loc": 112, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;math.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">typedef</span> <span class=\"kw4\">struct</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">int</span> n<span class=\"sy0\">;</span><br/>    <span class=\"kw4\">double</span> <span class=\"sy0\">**</span>elems<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> SquareMatrix<span class=\"sy0\">;</span><br/>\u00a0<br/>SquareMatrix init_square_matrix<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> elems<span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">[</span>n<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    SquareMatrix A <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        .<span class=\"me1\">n</span> <span class=\"sy0\">=</span> n<span class=\"sy0\">,</span><br/>        .<span class=\"me1\">elems</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>n <span class=\"sy0\">*</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>n <span class=\"sy0\">*</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>            A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> elems<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> A<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>SquareMatrix copy_square_matrix<span class=\"br0\">(</span>SquareMatrix src<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    SquareMatrix dest<span class=\"sy0\">;</span><br/>    dest.<span class=\"me1\">n</span> <span class=\"sy0\">=</span> src.<span class=\"me1\">n</span><span class=\"sy0\">;</span><br/>    dest.<span class=\"me1\">elems</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>dest.<span class=\"me1\">n</span> <span class=\"sy0\">*</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> dest.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        dest.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html\"><span class=\"kw3\">malloc</span></a><span class=\"br0\">(</span>dest.<span class=\"me1\">n</span> <span class=\"sy0\">*</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">double</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> dest.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><br/>            dest.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> src.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> dest<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> det<span class=\"br0\">(</span>SquareMatrix A<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">double</span> det <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">int</span> i_max <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i_max<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                i_max <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>i_max <span class=\"sy0\">!=</span> j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>k<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">double</span> tmp <span class=\"sy0\">=</span> A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i_max<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i_max<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">=</span> A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>                A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span>     <span class=\"sy0\">=</span> tmp<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>\u00a0<br/>            det <span class=\"sy0\">*=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span><a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/abs.html\"><span class=\"kw3\">abs</span></a><span class=\"br0\">(</span>A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu19\">1e-12</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"Singular matrix!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span> NAN<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw4\">double</span> mult <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">/</span> A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> k <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>k<span class=\"br0\">)</span><br/>                A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">+=</span> mult <span class=\"sy0\">*</span> A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>        det <span class=\"sy0\">*=</span> A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> det<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> deinit_square_matrix<span class=\"br0\">(</span>SquareMatrix A<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> A.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>A.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/free.html\"><span class=\"kw3\">free</span></a><span class=\"br0\">(</span>A.<span class=\"me1\">elems</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">double</span> cramer_solve<span class=\"br0\">(</span>SquareMatrix A<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> det_A<span class=\"sy0\">,</span> <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>b<span class=\"sy0\">,</span> <span class=\"kw4\">int</span> var<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    SquareMatrix tmp <span class=\"sy0\">=</span> copy_square_matrix<span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> tmp.<span class=\"me1\">n</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>        tmp.<span class=\"me1\">elems</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>var<span class=\"br0\">]</span> <span class=\"sy0\">=</span> b<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">double</span> det_tmp <span class=\"sy0\">=</span> det<span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    deinit_square_matrix<span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> det_tmp <span class=\"sy0\">/</span> det_A<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> argc<span class=\"sy0\">,</span> <span class=\"kw4\">char</span> <span class=\"sy0\">**</span>argv<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/><span class=\"co2\">#define N 4</span><br/>    <span class=\"kw4\">double</span> elems<span class=\"br0\">[</span>N<span class=\"br0\">]</span><span class=\"br0\">[</span>N<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>        <span class=\"br0\">{</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">{</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>        <span class=\"br0\">{</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    SquareMatrix A <span class=\"sy0\">=</span> init_square_matrix<span class=\"br0\">(</span>N<span class=\"sy0\">,</span> elems<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    SquareMatrix tmp <span class=\"sy0\">=</span> copy_square_matrix<span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw4\">int</span> det_A <span class=\"sy0\">=</span> det<span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    deinit_square_matrix<span class=\"br0\">(</span>tmp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">double</span> b<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> N<span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span><br/>        <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"%7.3lf<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> cramer_solve<span class=\"br0\">(</span>A<span class=\"sy0\">,</span> det_A<span class=\"sy0\">,</span> b<span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    deinit_square_matrix<span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> EXIT_SUCCESS<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 41, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">defun</span> minor <span class=\"br0\">(</span>m col<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop with dim <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>- <span class=\"br0\">(</span>array-dimension m <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        with result <span class=\"sy0\">=</span> <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> dim dim<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        for i from <span class=\"nu0\">1</span> to dim<br/>        for r <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>- i<span class=\"br0\">)</span><br/>        <span class=\"kw1\">do</span> <span class=\"br0\">(</span>loop with c <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>                 for j to dim<br/>                 <span class=\"kw1\">when</span> <span class=\"br0\">(</span>/<span class=\"sy0\">=</span> j col<span class=\"br0\">)</span><br/>                   <span class=\"kw1\">do</span> <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> result r c<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> m i j<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                      <span class=\"br0\">(</span>incf c<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        finally <span class=\"br0\">(</span><span class=\"kw1\">return</span> result<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> det <span class=\"br0\">(</span>m<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>assert <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>array-rank m<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>assert <span class=\"br0\">(</span><span class=\"sy0\">=</span> <span class=\"br0\">(</span>array-dimension m <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>array-dimension m <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>dim <span class=\"br0\">(</span>array-dimension m <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> dim <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">aref</span> m <span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>loop for col below dim<br/>              for sign <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> then <span class=\"br0\">(</span>- sign<span class=\"br0\">)</span><br/>              sum <span class=\"br0\">(</span>* sign <span class=\"br0\">(</span><span class=\"kw1\">aref</span> m <span class=\"nu0\">0</span> col<span class=\"br0\">)</span> <span class=\"br0\">(</span>det <span class=\"br0\">(</span>minor m col<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> replace-column <span class=\"br0\">(</span>m col values<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span>* <span class=\"br0\">(</span><span class=\"br0\">(</span>dim <span class=\"br0\">(</span>array-dimension m <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>         <span class=\"br0\">(</span>result <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> <span class=\"br0\">(</span><span class=\"kw1\">list</span> dim dim<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>r dim result<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>c dim<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> result r c<span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">=</span> c col<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> values r<span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> m r c<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> solve <span class=\"br0\">(</span>m v<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop with dim <span class=\"sy0\">=</span> <span class=\"br0\">(</span>array-dimension m <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>        with det <span class=\"sy0\">=</span> <span class=\"br0\">(</span>det m<span class=\"br0\">)</span><br/>        for col below dim<br/>        collect <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>det <span class=\"br0\">(</span>replace-column m col v<span class=\"br0\">)</span><span class=\"br0\">)</span> det<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>solve #2A<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">2</span> -<span class=\"nu0\">1</span>  <span class=\"nu0\">5</span>  <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"nu0\">3</span>  <span class=\"nu0\">2</span>  <span class=\"nu0\">2</span> -<span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"nu0\">1</span>  <span class=\"nu0\">3</span>  <span class=\"nu0\">3</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>           <span class=\"br0\">(</span><span class=\"nu0\">5</span> -<span class=\"nu0\">2</span> -<span class=\"nu0\">3</span>  <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>       #<span class=\"br0\">(</span>-<span class=\"nu0\">3</span> -<span class=\"nu0\">32</span> -<span class=\"nu0\">47</span> <span class=\"nu0\">49</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "EchoLisp", "loc": 18, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"br0\">(</span>lib 'matrix<span class=\"br0\">)</span><br/><span class=\"br0\">(</span>string<span class=\"sy0\">-</span>delimiter <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>cramer A B <span class=\"br0\">(</span>X<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"co1\">;; --&gt; vector X</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">define</span> \u2206 <span class=\"br0\">(</span>determinant A<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>for<span class=\"sy0\">/</span><span class=\"kw1\">vector</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>i <span class=\"br0\">(</span>matrix<span class=\"sy0\">-</span>col<span class=\"sy0\">-</span>num A<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>\t\t<span class=\"br0\">(</span><span class=\"kw1\">set!</span> X <span class=\"br0\">(</span>matrix<span class=\"sy0\">-</span>set<span class=\"sy0\">-</span>col<span class=\"sy0\">!</span> <span class=\"br0\">(</span>array<span class=\"sy0\">-</span>copy A<span class=\"br0\">)</span> i B<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">(</span><span class=\"sy0\">//</span> <span class=\"br0\">(</span>determinant X<span class=\"br0\">)</span> \u2206<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>task<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">define</span> A <span class=\"br0\">(</span>list<span class=\"sy0\">-&gt;</span>array <br/>  \t'<span class=\"br0\">(</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"nu0\">5</span> <span class=\"nu0\">1</span> <span class=\"nu0\">3</span> <span class=\"nu0\">2</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span> <span class=\"nu0\">1</span> <span class=\"nu0\">3</span> <span class=\"nu0\">3</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"nu0\">5</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"nu0\">4</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"kw1\">define</span> B #<span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span> <span class=\"sy0\">-</span><span class=\"nu0\">32</span> <span class=\"sy0\">-</span><span class=\"nu0\">47</span> <span class=\"nu0\">49</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>writeln <span class=\"st0\">\"Solving A * X = B\"</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>array<span class=\"sy0\">-</span>print A<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>writeln <span class=\"st0\">\"B = \"</span> B<span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span>writeln <span class=\"st0\">\"X = \"</span> <span class=\"br0\">(</span>cramer A B<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Fortran", "loc": 4, "block": "<pre class=\"fortran highlighted_source\">      <span class=\"kw3\">DATA</span> A<span class=\"sy0\">/</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">5</span>,  <span class=\"nu0\">1</span><br/>     <span class=\"nu0\">1</span>       <span class=\"nu0\">3</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">6</span><br/>     <span class=\"nu0\">2</span>       <span class=\"nu0\">1</span>,  <span class=\"nu0\">3</span>,  <span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>     <span class=\"nu0\">3</span>       <span class=\"nu0\">5</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>,  <span class=\"nu0\">3</span><span class=\"sy0\">/</span></pre>"}, {"lang": "Go", "loc": 29, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>\u00a0<br/>    <span class=\"st0\">\"gonum.org/v1/gonum/mat\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw1\">var</span> m <span class=\"sy2\">=</span> mat<span class=\"sy3\">.</span>NewDense<span class=\"sy1\">(</span><span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"nu0\">4</span><span class=\"sy1\">,</span> <span class=\"sy1\">[]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><br/>    <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"nu0\">1</span><span class=\"sy1\">,</span><br/>    <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">6</span><span class=\"sy1\">,</span><br/>    <span class=\"nu0\">1</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">,</span><br/>    <span class=\"nu0\">5</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"nu0\">3</span><span class=\"sy1\">,</span><br/><span class=\"sy1\">})</span><br/>\u00a0<br/><span class=\"kw1\">var</span> v <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">float64</span><span class=\"sy1\">{</span><span class=\"sy3\">-</span><span class=\"nu0\">3</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">32</span><span class=\"sy1\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">47</span><span class=\"sy1\">,</span> <span class=\"nu0\">49</span><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    x <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>v<span class=\"sy1\">))</span><br/>    b <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">([]</span><span class=\"kw4\">float64</span><span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>v<span class=\"sy1\">))</span><br/>    d <span class=\"sy2\">:=</span> mat<span class=\"sy3\">.</span>Det<span class=\"sy1\">(</span>m<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> c <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> v <span class=\"sy1\">{</span><br/>        mat<span class=\"sy3\">.</span>Col<span class=\"sy1\">(</span>b<span class=\"sy1\">,</span> c<span class=\"sy1\">,</span> m<span class=\"sy1\">)</span><br/>        m<span class=\"sy3\">.</span>SetCol<span class=\"sy1\">(</span>c<span class=\"sy1\">,</span> v<span class=\"sy1\">)</span><br/>        x<span class=\"sy1\">[</span>c<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> mat<span class=\"sy3\">.</span>Det<span class=\"sy1\">(</span>m<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> d<br/>        m<span class=\"sy3\">.</span>SetCol<span class=\"sy1\">(</span>c<span class=\"sy1\">,</span> b<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>x<span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 17, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>Matrix<br/>\u00a0<br/>solveCramer <span class=\"sy0\">::</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a> a<span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Fractional\"><span class=\"kw4\">Fractional</span></a> a<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> Matrix a <span class=\"sy0\">-&gt;</span> Matrix a <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Maybe\"><span class=\"kw4\">Maybe</span></a> <span class=\"br0\">[</span>a<span class=\"br0\">]</span><br/>solveCramer a y<br/>  <span class=\"sy0\">|</span> da <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">=</span> Nothing<br/>  <span class=\"sy0\">|</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:otherwise\"><span class=\"kw3\">otherwise</span></a> <span class=\"sy0\">=</span> Just <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <span class=\"br0\">(</span>\\i <span class=\"sy0\">-&gt;</span> d i <span class=\"sy0\">/</span> da<span class=\"br0\">)</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">..</span>n<span class=\"br0\">]</span><br/>  <span class=\"kw1\">where</span> da <span class=\"sy0\">=</span> detLU a<br/>        d i <span class=\"sy0\">=</span> detLU <span class=\"sy0\">$</span> submatrix <span class=\"nu0\">1</span> n <span class=\"nu0\">1</span> n <span class=\"sy0\">$</span> switchCols i <span class=\"br0\">(</span>n<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> ay<br/>        ay <span class=\"sy0\">=</span> a <span class=\"sy0\">&lt;|&gt;</span> y<br/>        n <span class=\"sy0\">=</span> ncols a<br/>\u00a0<br/>task <span class=\"sy0\">=</span> solveCramer a y<br/>  <span class=\"kw1\">where</span> a <span class=\"sy0\">=</span> fromLists <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>                      <span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><br/>                      <span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>                      <span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,-</span><span class=\"nu0\">2</span><span class=\"sy0\">,-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>        y <span class=\"sy0\">=</span> fromLists <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">32</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">47</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">49</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 5, "block": "<pre class=\"j highlighted_source\">cramer=:<span class=\"nu0\">4</span>\u00a0:<span class=\"nu0\">0</span><br/>  A=. <span class=\"kw2\">x</span> [ b=. <span class=\"kw2\">y</span><br/>  det=. -/ .*<br/>  A\u00a0%~&amp;det <span class=\"sy0\">(</span>i.#A<span class=\"sy0\">)</span> b\"<span class=\"nu0\">_</span>`[`]}&amp;.|:\"<span class=\"nu0\">0</span> <span class=\"nu0\">2</span> A<br/><span class=\"sy0\">)</span></pre>"}, {"lang": "JavaScript", "loc": 93, "block": "<pre class=\"javascript highlighted_source\">\u00a0<br/><span class=\"kw1\">var</span> matrix <span class=\"sy0\">=</span> <span class=\"br0\">[</span><br/>\t<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"br0\">]</span><br/><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">var</span> freeTerms <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">var</span> result <span class=\"sy0\">=</span> cramersRule<span class=\"br0\">(</span>matrix<span class=\"sy0\">,</span>freeTerms<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>console.<span class=\"me1\">log</span><span class=\"br0\">(</span>result<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"coMULTI\">/**<br/> * Compute Cramer's Rule<br/> * @param  {array} matrix    x,y,z, etc. terms<br/> * @param  {array} freeTerms<br/> * @return {array}           solution for x,y,z, etc.<br/> */</span><br/><span class=\"kw1\">function</span> cramersRule<span class=\"br0\">(</span>matrix<span class=\"sy0\">,</span>freeTerms<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> det <span class=\"sy0\">=</span> detr<span class=\"br0\">(</span>matrix<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t\treturnArray <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>\t\ti<span class=\"sy0\">,</span><br/>\t\ttmpMatrix<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> matrix<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">var</span> tmpMatrix <span class=\"sy0\">=</span> insertInTerms<span class=\"br0\">(</span>matrix<span class=\"sy0\">,</span> freeTerms<span class=\"sy0\">,</span>i<span class=\"br0\">)</span><br/>\t\treturnArray.<span class=\"me1\">push</span><span class=\"br0\">(</span>detr<span class=\"br0\">(</span>tmpMatrix<span class=\"br0\">)</span><span class=\"sy0\">/</span>det<span class=\"br0\">)</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> returnArray<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/**<br/> * Inserts single dimensional array into<br/> * @param  {array} matrix multidimensional array to have ins inserted into<br/> * @param  {array} ins single dimensional array to be inserted vertically into matrix<br/> * @param  {array} at  zero based offset for ins to be inserted into matrix<br/> * @return {array}     New multidimensional array with ins replacing the at column in matrix<br/> */</span><br/><span class=\"kw1\">function</span> insertInTerms<span class=\"br0\">(</span>matrix<span class=\"sy0\">,</span> ins<span class=\"sy0\">,</span> at<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> tmpMatrix <span class=\"sy0\">=</span> clone<span class=\"br0\">(</span>matrix<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t\ti<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> matrix.<span class=\"me1\">length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\ttmpMatrix<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>at<span class=\"br0\">]</span> <span class=\"sy0\">=</span> ins<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> tmpMatrix<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/><span class=\"coMULTI\">/**<br/> * Compute the determinate of a matrix.  No protection, assumes square matrix<br/> * function borrowed, and adapted from MIT Licensed numericjs library (www.numericjs.com)<br/> * @param  {array} m Input Matrix (multidimensional array)<br/> * @return {number}   result rounded to 2 decimal<br/> */</span><br/><span class=\"kw1\">function</span> detr<span class=\"br0\">(</span>m<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">var</span> ret <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>\t\tk<span class=\"sy0\">,</span><br/>\t\tA<span class=\"sy0\">=</span>clone<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>\t\tn<span class=\"sy0\">=</span>m<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">length</span><span class=\"sy0\">,</span><br/>\t\talpha<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"kw1\">var</span> j <span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tk<span class=\"sy0\">=</span>j<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>n<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"kw4\">Math</span>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>A<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">abs</span><span class=\"br0\">(</span>A<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> k <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>k <span class=\"sy0\">!==</span> j<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t    temp <span class=\"sy0\">=</span> A<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">;</span> A<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">=</span> A<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span> A<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> temp<span class=\"sy0\">;</span><br/>\t\t    ret <span class=\"sy0\">*=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t\tAj <span class=\"sy0\">=</span> A<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i<span class=\"sy0\">=</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>i<span class=\"sy0\">&lt;</span>n<span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tAi <span class=\"sy0\">=</span> A<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            alpha <span class=\"sy0\">=</span> Ai<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">/</span>Aj<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span><span class=\"br0\">(</span>k<span class=\"sy0\">=</span>j<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>k<span class=\"sy0\">&lt;</span>n<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>k<span class=\"sy0\">+=</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                k1 <span class=\"sy0\">=</span> k<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>                Ai<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> Aj<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">*</span>alpha<span class=\"sy0\">;</span><br/>                Ai<span class=\"br0\">[</span>k1<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> Aj<span class=\"br0\">[</span>k1<span class=\"br0\">]</span><span class=\"sy0\">*</span>alpha<span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"kw1\">if</span><span class=\"br0\">(</span>k<span class=\"sy0\">!==</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> Ai<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">-=</span> Aj<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">*</span>alpha<span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">if</span><span class=\"br0\">(</span>Aj<span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">===</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>        ret <span class=\"sy0\">*=</span> Aj<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>\t    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"kw4\">Math</span>.<span class=\"me1\">round</span><span class=\"br0\">(</span>ret<span class=\"sy0\">*</span>A<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">100</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/**<br/> * Clone two dimensional Array using ECMAScript 5 map function and EcmaScript 3 slice<br/> * @param  {array} m Input matrix (multidimensional array) to clone<br/> * @return {array}   New matrix copy<br/> */</span><br/><span class=\"kw1\">function</span> clone<span class=\"br0\">(</span>m<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> m.<span class=\"me1\">map</span><span class=\"br0\">(</span><span class=\"kw1\">function</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">{</span><span class=\"kw1\">return</span> a.<span class=\"me1\">slice</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 12, "block": "<pre class=\"text highlighted_source\">function cramersolve(A::Matrix, b::Vector)<br/>    return collect(begin B = copy(A); B[:, i] = b; det(B) end for i in eachindex(b)) ./ det(A)<br/>end<br/>\u00a0<br/>A = [2 -1  5  1<br/>     3  2  2 -6<br/>     1  3  3 -1<br/>     5 -2 -3  3]<br/>\u00a0<br/>b = [-3, -32, -47, 49]<br/>\u00a0<br/>@show cramersolve(A, b)</pre>"}, {"lang": "Kotlin", "loc": 69, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.3</span><br/>\u00a0<br/>typealias Vector <span class=\"sy0\">=</span> DoubleArray<br/>typealias Matrix <span class=\"sy0\">=</span> Array<span class=\"sy0\">&lt;</span>Vector<span class=\"sy0\">&gt;</span><br/>\u00a0<br/>fun johnsonTrotter<span class=\"br0\">(</span>n<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span><span class=\"sy0\">:</span> Pair<span class=\"sy0\">&lt;</span>List<span class=\"sy0\">&lt;</span>IntArray<span class=\"sy0\">&gt;</span>, List<span class=\"sy0\">&lt;</span>Int<span class=\"sy0\">&gt;&gt;</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> p <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> it <span class=\"br0\">}</span>  <span class=\"co1\">// permutation</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> q <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> it <span class=\"br0\">}</span>  <span class=\"co1\">// inverse permutation</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d <span class=\"sy0\">=</span> IntArray<span class=\"br0\">(</span>n<span class=\"br0\">)</span> <span class=\"br0\">{</span> -<span class=\"nu0\">1</span> <span class=\"br0\">}</span>  <span class=\"co1\">// direction = 1 or -1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sign <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> perms <span class=\"sy0\">=</span> mutableListOf<span class=\"sy0\">&lt;</span>IntArray<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> signs <span class=\"sy0\">=</span> mutableListOf<span class=\"sy0\">&lt;</span>Int<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    fun permute<span class=\"br0\">(</span>k<span class=\"sy0\">:</span> Int<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>k <span class=\"sy0\">&gt;=</span> n<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            perms.<span class=\"me1\">add</span><span class=\"br0\">(</span>p.<span class=\"me1\">copyOf</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            signs.<span class=\"me1\">add</span><span class=\"br0\">(</span>sign<span class=\"br0\">)</span><br/>            sign <span class=\"sy0\">*=</span> -<span class=\"nu0\">1</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>        <span class=\"br0\">}</span><br/>        permute<span class=\"br0\">(</span>k + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until k<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> z <span class=\"sy0\">=</span> p<span class=\"br0\">[</span>q<span class=\"br0\">[</span>k<span class=\"br0\">]</span> + d<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>            p<span class=\"br0\">[</span>q<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> z<br/>            p<span class=\"br0\">[</span>q<span class=\"br0\">[</span>k<span class=\"br0\">]</span> + d<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> k<br/>            q<span class=\"br0\">[</span>z<span class=\"br0\">]</span> <span class=\"sy0\">=</span> q<span class=\"br0\">[</span>k<span class=\"br0\">]</span><br/>            q<span class=\"br0\">[</span>k<span class=\"br0\">]</span> +<span class=\"sy0\">=</span> d<span class=\"br0\">[</span>k<span class=\"br0\">]</span><br/>            permute<span class=\"br0\">(</span>k + <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>        d<span class=\"br0\">[</span>k<span class=\"br0\">]</span> <span class=\"sy0\">*=</span> -<span class=\"nu0\">1</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    permute<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> perms to signs<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun determinant<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> Matrix<span class=\"br0\">)</span><span class=\"sy0\">:</span> Double <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>sigmas, signs<span class=\"br0\">)</span> <span class=\"sy0\">=</span> johnsonTrotter<span class=\"br0\">(</span>m.<span class=\"me1\">size</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> sum <span class=\"sy0\">=</span> <span class=\"nu0\">0.0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>i, sigma<span class=\"br0\">)</span> in sigmas.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> prod <span class=\"sy0\">=</span> <span class=\"nu0\">1.0</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span><span class=\"br0\">(</span>j, s<span class=\"br0\">)</span> in sigma.<span class=\"me1\">withIndex</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> prod <span class=\"sy0\">*=</span> m<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>s<span class=\"br0\">]</span><br/>        sum +<span class=\"sy0\">=</span> signs<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> prod<br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> sum<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun cramer<span class=\"br0\">(</span>m<span class=\"sy0\">:</span> Matrix, d<span class=\"sy0\">:</span> Vector<span class=\"br0\">)</span><span class=\"sy0\">:</span> Vector <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> divisor <span class=\"sy0\">=</span> determinant<span class=\"br0\">(</span>m<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> numerators <span class=\"sy0\">=</span> Array<span class=\"br0\">(</span>m.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> Matrix<span class=\"br0\">(</span>m.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> m<span class=\"br0\">[</span>it<span class=\"br0\">]</span>.<span class=\"me1\">copyOf</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> v <span class=\"sy0\">=</span> Vector<span class=\"br0\">(</span>m.<span class=\"me1\">size</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until m.<span class=\"me1\">size</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>j in <span class=\"nu0\">0</span> until m.<span class=\"me1\">size</span><span class=\"br0\">)</span> numerators<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> d<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>i in <span class=\"nu0\">0</span> until m.<span class=\"me1\">size</span><span class=\"br0\">)</span> v<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> determinant<span class=\"br0\">(</span>numerators<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span> / divisor<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> v<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> m <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">2.0</span>, -<span class=\"nu0\">1.0</span>,  <span class=\"nu0\">5.0</span>,  <span class=\"nu0\">1.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">3.0</span>,  <span class=\"nu0\">2.0</span>,  <span class=\"nu0\">2.0</span>, -<span class=\"nu0\">6.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">1.0</span>,  <span class=\"nu0\">3.0</span>,  <span class=\"nu0\">3.0</span>, -<span class=\"nu0\">1.0</span><span class=\"br0\">)</span>,<br/>        doubleArrayOf<span class=\"br0\">(</span><span class=\"nu0\">5.0</span>, -<span class=\"nu0\">2.0</span>, -<span class=\"nu0\">3.0</span>,  <span class=\"nu0\">3.0</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d <span class=\"sy0\">=</span> doubleArrayOf<span class=\"br0\">(</span>-<span class=\"nu0\">3.0</span>, -<span class=\"nu0\">32.0</span>, -<span class=\"nu0\">47.0</span>, <span class=\"nu0\">49.0</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> <span class=\"br0\">(</span>w, x, y, z<span class=\"br0\">)</span> <span class=\"sy0\">=</span> cramer<span class=\"br0\">(</span>m, d<span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"w = $w, x = $x, y = $y, z = $z\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Lua", "loc": 42, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">local</span> matrix <span class=\"sy0\">=</span> <span class=\"kw3\">require</span> <span class=\"st0\">\"matrix\"</span> <span class=\"co1\">-- https://github.com/davidm/lua-matrix</span><br/>\u00a0<br/><span class=\"kw1\">local</span> <span class=\"kw1\">function</span> cramer<span class=\"br0\">(</span>mat<span class=\"sy0\">,</span> vec<span class=\"br0\">)</span><br/>  <span class=\"co1\">-- Check if matrix is quadratic</span><br/>  <span class=\"kw3\">assert</span><span class=\"br0\">(</span><span class=\"sy0\">#</span>mat <span class=\"sy0\">==</span> <span class=\"sy0\">#</span>mat<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Matrix is not square!\"</span><span class=\"br0\">)</span><br/>  <span class=\"co1\">-- Check if vector has the same size of the matrix</span><br/>  <span class=\"kw3\">assert</span><span class=\"br0\">(</span><span class=\"sy0\">#</span>mat <span class=\"sy0\">==</span> <span class=\"sy0\">#</span>vec<span class=\"sy0\">,</span> <span class=\"st0\">\"Vector has not the same size of the matrix!\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">local</span> size <span class=\"sy0\">=</span> <span class=\"sy0\">#</span>mat<br/>  <span class=\"kw1\">local</span> main_det <span class=\"sy0\">=</span> matrix<span class=\"sy0\">.</span>det<span class=\"br0\">(</span>mat<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">local</span> aux_mats <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">local</span> dets <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">local</span> result <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> size <span class=\"kw1\">do</span><br/>    <span class=\"co1\">-- Construct the auxiliary matrixes</span><br/>    aux_mats<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> matrix<span class=\"sy0\">.</span>copy<span class=\"br0\">(</span>mat<span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> size <span class=\"kw1\">do</span><br/>      aux_mats<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> vec<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>    <span class=\"co1\">-- Calculate the auxiliary determinants</span><br/>    dets<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> matrix<span class=\"sy0\">.</span>det<span class=\"br0\">(</span>aux_mats<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">-- Calculate results</span><br/>    result<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> dets<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">/</span>main_det<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span> result<br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">-----------------------------------------------</span><br/>\u00a0<br/><span class=\"kw1\">local</span> A <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">{</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>           <span class=\"br0\">{</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>           <span class=\"br0\">{</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>           <span class=\"br0\">{</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/><span class=\"kw1\">local</span> b <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">local</span> result <span class=\"sy0\">=</span> cramer<span class=\"br0\">(</span>A<span class=\"sy0\">,</span> b<span class=\"br0\">)</span><br/><span class=\"kw3\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Result: \"</span> <span class=\"sy0\">..</span> <span class=\"kw3\">table.concat</span><span class=\"br0\">(</span>result<span class=\"sy0\">,</span> <span class=\"st0\">\", \"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 5, "block": "<pre class=\"text highlighted_source\">A\u00a0:= Matrix([[2,-1,5,1],[3,2,2,-6],[1,3,3,-1],[5,-2,-3,3]]):<br/>w\u00a0:= LinearAlgebra:-Determinant(Matrix([[-3,-1,5,1],[-32,2,2,-6],[-47,3,3,-1],[49,-2,-3,3]]))/ LinearAlgebra:-Determinant(A);<br/>x\u00a0:= LinearAlgebra:-Determinant(Matrix([[2,-3,5,1],[3,-32,2,-6],[1,-47,3,-1],[5,49,-3,3]]))/LinearAlgebra:-Determinant(A);<br/>y\u00a0:= LinearAlgebra:-Determinant(Matrix([[2,-1,-3,1],[3,2,-32,-6],[1,3,-47,-1],[5,-2,49,3]]))/LinearAlgebra:-Determinant(A); <br/>z\u00a0:= LinearAlgebra:-Determinant(Matrix([[2,-1,5,-3],[3,2,2,-32],[1,3,3,-47],[5,-2,-3,49]]))/LinearAlgebra:-Determinant(A);</pre>"}, {"lang": "Mathematica", "loc": 9, "block": "<pre class=\"text highlighted_source\">crule[m_, b_]\u00a0:= Module[{d = Det[m], a},<br/>  Table[a = m; a[[All, k]] = b; Det[a]/d, {k, Length[m]}]]<br/>\u00a0<br/>crule[{<br/>  {2, -1, 5, 1},<br/>  {3, 2, 2, -6},<br/>  {1, 3, 3, -1},<br/>  {5, -2, -3, 3}<br/> } , {-3, -32, -47, 49}]</pre>"}, {"lang": "PARI/GP", "loc": 6, "block": "<pre class=\"parigp highlighted_source\">\u00a0<br/>M <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu1\">2</span><span class=\"sy0\">,-</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">5</span><span class=\"sy0\">,</span><span class=\"nu1\">1</span><span class=\"sy0\">;</span><span class=\"nu1\">3</span><span class=\"sy0\">,</span><span class=\"nu1\">2</span><span class=\"sy0\">,</span><span class=\"nu1\">2</span><span class=\"sy0\">,-</span><span class=\"nu1\">6</span><span class=\"sy0\">;</span><span class=\"nu1\">1</span><span class=\"sy0\">,</span><span class=\"nu1\">3</span><span class=\"sy0\">,</span><span class=\"nu1\">3</span><span class=\"sy0\">,-</span><span class=\"nu1\">1</span><span class=\"sy0\">;</span><span class=\"nu1\">5</span><span class=\"sy0\">,-</span><span class=\"nu1\">2</span><span class=\"sy0\">,-</span><span class=\"nu1\">3</span><span class=\"sy0\">,</span><span class=\"nu1\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>V <span class=\"sy0\">=</span> <span class=\"kw1\">Col</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu1\">3</span><span class=\"sy0\">,-</span><span class=\"nu1\">32</span><span class=\"sy0\">,-</span><span class=\"nu1\">47</span><span class=\"sy0\">,</span><span class=\"nu1\">49</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">matadjoint</span><span class=\"br0\">(</span>M<span class=\"br0\">)</span> <span class=\"sy0\">*</span> V <span class=\"sy0\">/</span> <span class=\"kw1\">matdet</span><span class=\"br0\">(</span>M<span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Perl", "loc": 30, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> Math<span class=\"sy0\">::</span><span class=\"me2\">Matrix</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> cramers_rule <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$A</span><span class=\"sy0\">,</span> <span class=\"re0\">$terms</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@solutions</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$det</span> <span class=\"sy0\">=</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">determinant</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$i</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span><span class=\"re0\">$A</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$Ai</span> <span class=\"sy0\">=</span> <span class=\"re0\">$A</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">clone</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"kw1\">my</span> <span class=\"re0\">$j</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">..</span> <span class=\"co5\">$#</span><span class=\"br0\">{</span><span class=\"re0\">$terms</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">$Ai</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$terms</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"re0\">@solutions</span><span class=\"sy0\">,</span> <span class=\"re0\">$Ai</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">determinant</span> <span class=\"sy0\">/</span> <span class=\"re0\">$det</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">@solutions</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$matrix</span> <span class=\"sy0\">=</span> Math<span class=\"sy0\">::</span><span class=\"me2\">Matrix</span><span class=\"sy0\">-&gt;</span><span class=\"kw2\">new</span><span class=\"br0\">(</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$free_terms</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$z</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> cramers_rule<span class=\"br0\">(</span><span class=\"re0\">$matrix</span><span class=\"sy0\">,</span> <span class=\"re0\">$free_terms</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"w = $w<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"x = $x<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"y = $y<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"st0\">\"z = $z<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 44, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> det<span class=\"br0\">(</span><span class=\"re0\">@matrix</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@a</span> <span class=\"sy0\">=</span> <span class=\"re0\">@matrix</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$sign</span> <span class=\"sy0\">=</span> <span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$pivot</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">@a</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$k</span> <span class=\"br0\">{</span><br/>      <span class=\"kw1\">my</span> <span class=\"re0\">@r</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$k</span><span class=\"sy0\">+</span><span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">@a</span><span class=\"sy0\">.</span><span class=\"kw3\">end</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">my</span> <span class=\"re0\">$previous</span><span class=\"sy0\">-</span>pivot <span class=\"sy0\">=</span> <span class=\"re0\">$pivot</span><span class=\"sy0\">;</span><br/>      <span class=\"kw1\">if</span> <span class=\"nu0\">0</span> <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"re0\">$pivot</span> <span class=\"sy0\">=</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"br0\">(</span><span class=\"kw1\">my</span> <span class=\"re0\">$s</span> <span class=\"sy0\">=</span> <span class=\"re0\">@r</span><span class=\"sy0\">.</span><span class=\"kw3\">first</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$_</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"sy0\">//</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">(</span><span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$s</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$s</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">$pivot</span> <span class=\"sy0\">=</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"re0\">$sign</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"re0\">$sign</span><span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>      <span class=\"kw1\">for</span> <span class=\"re0\">@r</span> <span class=\"kw1\">X</span> <span class=\"re0\">@r</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">,</span> <span class=\"re0\">$j</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span> <span class=\"sy0\">*=</span> <span class=\"re0\">$pivot</span><span class=\"br0\">)</span> <span class=\"sy0\">-=</span> <span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"sy0\">*</span><span class=\"re0\">@a</span><span class=\"br0\">[</span><span class=\"re0\">$k</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">/=</span> <span class=\"re0\">$previous</span><span class=\"sy0\">-</span>pivot<span class=\"sy0\">;</span><br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"re0\">$sign</span> <span class=\"sy0\">*</span> <span class=\"re0\">$pivot</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> cramers_rule<span class=\"br0\">(</span><span class=\"re0\">@A</span><span class=\"sy0\">,</span> <span class=\"re0\">@terms</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    gather <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">@A</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$i</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">my</span> <span class=\"re0\">@Ai</span> <span class=\"sy0\">=</span> <span class=\"re0\">@A</span><span class=\"sy0\">.</span><span class=\"kw3\">map</span><span class=\"sy0\">:</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"sy0\">|</span><span class=\"re0\">$_</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"sy0\">^</span><span class=\"re0\">@terms</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$j</span> <span class=\"br0\">{</span><br/>            <span class=\"re0\">@Ai</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"re0\">$i</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">@terms</span><span class=\"br0\">[</span><span class=\"re0\">$j</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        take det<span class=\"br0\">(</span><span class=\"re0\">@Ai</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span>\u00a0\u00bb<span class=\"sy0\">/</span>\u00bb det<span class=\"br0\">(</span><span class=\"re0\">@A</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@matrix</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">5</span><span class=\"sy0\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span>  <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>  <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">@free_terms</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">32</span><span class=\"sy0\">,</span> <span class=\"sy0\">-</span><span class=\"nu0\">47</span><span class=\"sy0\">,</span> <span class=\"nu0\">49</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$w</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$z</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"sy0\">|</span>cramers_rule<span class=\"br0\">(</span><span class=\"re0\">@matrix</span><span class=\"sy0\">,</span> <span class=\"re0\">@free_terms</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw3\">say</span> <span class=\"st0\">\"w = $w\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"x = $x\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"y = $y\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"st0\">\"z = $z\"</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Phix", "loc": 53, "block": "<pre class=\"text highlighted_source\">constant inf = 1e300*1e300,<br/>         nan = -(inf/inf)<br/>\u00a0<br/>function det(sequence a)<br/>atom res = 1<br/>\u00a0<br/>    for j=1 to length(a) do<br/>        integer i_max = j<br/>        for i=j+1 to length(a) do<br/>            if a[i][j] &gt; a[i_max][j] then<br/>                i_max = i<br/>            end if<br/>        end for<br/>        if i_max\u00a0!= j then<br/>            {a[i_max],a[j]} = {a[j],a[i_max]}<br/>            res *= -1<br/>        end if<br/>\u00a0<br/>        if abs(a[j][j]) &lt; 1e-12 then<br/>            puts(1,\"Singular matrix!\")<br/>            return nan<br/>        end if<br/>\u00a0<br/>        for i=j+1 to length(a) do<br/>            atom mult = -a[i][j] / a[j][j]<br/>            for k=1 to length(a) do<br/>                a[i][k] += mult * a[j][k]<br/>            end for<br/>        end for<br/>    end for<br/>\u00a0<br/>    for i=1 to length(a) do<br/>        res *= a[i][i]<br/>    end for<br/>    return res<br/>end function<br/>\u00a0<br/>function cramer_solve(sequence a, atom det_a, sequence b, integer var)<br/>    for i=1 to length(a) do<br/>      a[i][var] = b[i]<br/>    end for<br/>    return det(a)/det_a<br/>end function<br/>\u00a0<br/>sequence a = {{2,-1, 5, 1},<br/>              {3, 2, 2,-6},<br/>              {1, 3, 3,-1},<br/>              {5,-2,-3, 3}},<br/>         b = {-3,-32,-47,49}<br/>integer det_a = det(a)<br/>for i=1 to length(a) do<br/>    printf(1, \"%7.3f\\n\", cramer_solve(a, det_a, b, i))<br/>end for</pre>"}, {"lang": "Prolog", "loc": 64, "block": "<pre class=\"prolog highlighted_source\">removeElement<span class=\"br0\">(</span><span class=\"br0\">[</span>_<span class=\"sy5\">|</span>Tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> Tail<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>removeElement<span class=\"br0\">(</span><span class=\"br0\">[</span>Head<span class=\"sy5\">|</span>Tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> <span class=\"br0\">[</span>Head<span class=\"sy5\">|</span>X<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    J_2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> J <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>    removeElement<span class=\"br0\">(</span>Tail<span class=\"sy4\">,</span> J_2<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>removeColumn<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> _<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>removeColumn<span class=\"br0\">(</span><span class=\"br0\">[</span>Matrix_head<span class=\"sy5\">|</span>Matrix_tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> <span class=\"br0\">[</span>X<span class=\"sy5\">|</span>Y<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    removeElement<span class=\"br0\">(</span>Matrix_head<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    removeColumn<span class=\"br0\">(</span>Matrix_tail<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>removeRow<span class=\"br0\">(</span><span class=\"br0\">[</span>_<span class=\"sy5\">|</span>Matrix_tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> Matrix_tail<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>removeRow<span class=\"br0\">(</span><span class=\"br0\">[</span>Matrix_head<span class=\"sy5\">|</span>Matrix_tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> I<span class=\"sy4\">,</span> <span class=\"br0\">[</span>Matrix_head<span class=\"sy5\">|</span>X<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    I_2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> I <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>    removeRow<span class=\"br0\">(</span>Matrix_tail<span class=\"sy4\">,</span> I_2<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>cofactor<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> I<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> X<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    removeRow<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> I<span class=\"sy4\">,</span> Matrix_2<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    removeColumn<span class=\"br0\">(</span>Matrix_2<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> Matrix_3<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    det<span class=\"br0\">(</span>Matrix_3<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> <span class=\"br0\">(</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy3\">**</span> <span class=\"br0\">(</span>I <span class=\"sy3\">+</span> J<span class=\"br0\">)</span> <span class=\"sy3\">*</span> Y<span class=\"sy4\">.</span><br/>\u00a0<br/>det_summand<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> _<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>det_summand<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> X<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    B <span class=\"sy6\">=</span> <span class=\"br0\">[</span>B_head<span class=\"sy5\">|</span>B_tail<span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>    cofactor<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> Z<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    J_2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> J <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>    det_summand<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> J_2<span class=\"sy4\">,</span> B_tail<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    X <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> B_head <span class=\"sy3\">*</span> Z <span class=\"sy3\">+</span> Y<span class=\"sy4\">.</span><br/>\u00a0<br/>det<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">[</span>X<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>det<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> X<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    Matrix <span class=\"sy6\">=</span> <span class=\"br0\">[</span>Matrix_head<span class=\"sy5\">|</span>_<span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>    det_summand<span class=\"br0\">(</span>Matrix<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> Matrix_head<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>replaceElement<span class=\"br0\">(</span><span class=\"br0\">[</span>_<span class=\"sy5\">|</span>Tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> New<span class=\"sy4\">,</span> <span class=\"br0\">[</span>New<span class=\"sy5\">|</span>Tail<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>replaceElement<span class=\"br0\">(</span><span class=\"br0\">[</span>Head<span class=\"sy5\">|</span>Tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> New<span class=\"sy4\">,</span> <span class=\"br0\">[</span>Head<span class=\"sy5\">|</span>Y<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    J_2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> J <span class=\"sy3\">-</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>    replaceElement<span class=\"br0\">(</span>Tail<span class=\"sy4\">,</span> J_2<span class=\"sy4\">,</span> New<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>replaceColumn<span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy4\">,</span> _<span class=\"sy4\">,</span> _<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>replaceColumn<span class=\"br0\">(</span><span class=\"br0\">[</span>Matrix_head<span class=\"sy5\">|</span>Matrix_tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> <span class=\"br0\">[</span>Column_head<span class=\"sy5\">|</span>Column_tail<span class=\"br0\">]</span><span class=\"sy4\">,</span> <span class=\"br0\">[</span>X<span class=\"sy5\">|</span>Y<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    replaceElement<span class=\"br0\">(</span>Matrix_head<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> Column_head<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    replaceColumn<span class=\"br0\">(</span>Matrix_tail<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> Column_tail<span class=\"sy4\">,</span> Y<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>cramerElements<span class=\"br0\">(</span>_<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> L<span class=\"sy4\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span> length<span class=\"br0\">(</span>B<span class=\"sy4\">,</span> L<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>cramerElements<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> <span class=\"br0\">[</span>X_J<span class=\"sy5\">|</span>Others<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    replaceColumn<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> J<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> A_J<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    det<span class=\"br0\">(</span>A_J<span class=\"sy4\">,</span> Det_A_J<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    det<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> Det_A<span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>    X_J <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> Det_A_J <span class=\"sy3\">/</span> Det_A<span class=\"sy4\">,</span><br/>    J_2 <a href=\"http://pauillac.inria.fr/~deransar/prolog/bips.html\"><span class=\"kw1\">is</span></a> J <span class=\"sy3\">+</span> <span class=\"nu0\">1</span><span class=\"sy4\">,</span><br/>    cramerElements<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> J_2<span class=\"sy4\">,</span> Others<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>cramer<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> X<span class=\"br0\">)</span> <span class=\"sy1\">:-</span> cramerElements<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> <span class=\"nu0\">0</span><span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>results<span class=\"br0\">(</span>X<span class=\"br0\">)</span> <span class=\"sy1\">:-</span><br/>    A <span class=\"sy6\">=</span> <span class=\"br0\">[</span><br/>            <span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span>  <span class=\"nu0\">5</span><span class=\"sy4\">,</span>  <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>            <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy4\">,</span>  <span class=\"nu0\">2</span><span class=\"sy4\">,</span>  <span class=\"nu0\">2</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>            <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy4\">,</span>  <span class=\"nu0\">3</span><span class=\"sy4\">,</span>  <span class=\"nu0\">3</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>            <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">2</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">3</span><span class=\"sy4\">,</span>  <span class=\"nu0\">3</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>    B <span class=\"sy6\">=</span> <span class=\"br0\">[</span><span class=\"sy3\">-</span><span class=\"nu0\">3</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">32</span><span class=\"sy4\">,</span> <span class=\"sy3\">-</span><span class=\"nu0\">47</span><span class=\"sy4\">,</span> <span class=\"nu0\">49</span><span class=\"br0\">]</span><span class=\"sy4\">,</span><br/>    cramer<span class=\"br0\">(</span>A<span class=\"sy4\">,</span> B<span class=\"sy4\">,</span> X<span class=\"br0\">)</span><span class=\"sy4\">.</span></pre>"}, {"lang": "Python", "loc": 17, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"co1\"># a simple implementation using numpy</span><br/><span class=\"kw1\">from</span> numpy <span class=\"kw1\">import</span> linalg<br/>\u00a0<br/>A<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>-<span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>-<span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span>-<span class=\"nu0\">2</span><span class=\"sy0\">,</span>-<span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>B<span class=\"sy0\">=</span><span class=\"br0\">[</span>-<span class=\"nu0\">3</span><span class=\"sy0\">,</span>-<span class=\"nu0\">32</span><span class=\"sy0\">,</span>-<span class=\"nu0\">47</span><span class=\"sy0\">,</span><span class=\"nu0\">49</span><span class=\"br0\">]</span><br/>C<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>-<span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>-<span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span>-<span class=\"nu0\">2</span><span class=\"sy0\">,</span>-<span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>X<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><br/><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>B<span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>B<span class=\"br0\">)</span><span class=\"br0\">)</span>:<br/>        C<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">=</span>B<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>        <span class=\"kw1\">if</span> i<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>:<br/>            C<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>A<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    X.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"kw2\">round</span><span class=\"br0\">(</span>linalg.<span class=\"me1\">det</span><span class=\"br0\">(</span>C<span class=\"br0\">)</span>/linalg.<span class=\"me1\">det</span><span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'w=%s'</span>%X<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">'x=%s'</span>%X<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">'y=%s'</span>%X<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">'z=%s'</span>%X<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 14, "block": "<pre class=\"text highlighted_source\">#lang typed/racket<br/>(require math/matrix)<br/>\u00a0<br/>(define A (matrix [[2 -1  5  1]<br/>                   [3  2  2 -6]<br/>                   [1  3  3 -1]<br/>                   [5 -2 -3  3]]))<br/>\u00a0<br/>(define B (col-matrix [ -3<br/>                       -32<br/>                       -47<br/>                        49]))<br/>\u00a0<br/>(matrix-&gt;vector (matrix-solve A B))</pre>"}, {"lang": "REXX", "loc": 138, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* Use Cramer's rule to compute solutions of given linear equations  */</span><br/><span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"nu0\">20</span><br/>names=<span class=\"st0\">'w x y z'</span><br/>M=<span class=\"st0\">'  2  -1   5   1'</span>,<br/>  <span class=\"st0\">'  3   2   2  -6'</span>,<br/>  <span class=\"st0\">'  1   3   3  -1'</span>,<br/>  <span class=\"st0\">'  5  -2  -3   3'</span><br/>v=<span class=\"st0\">' -3'</span>,<br/>  <span class=\"st0\">'-32'</span>,<br/>  <span class=\"st0\">'-47'</span>,<br/>  <span class=\"st0\">' 49'</span><br/><span class=\"kw1\">Call</span> mk_mat<span class=\"br0\">(</span>m<span class=\"br0\">)</span>                      <span class=\"coMULTI\">/* M -&gt; a.i.j                    */</span><br/><span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim                       <span class=\"coMULTI\">/* Show the input                */</span><br/>  ol=<span class=\"st0\">''</span><br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    ol=ol <span class=\"kw6\">format</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j,<span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>  ol=ol <span class=\"kw6\">format</span><span class=\"br0\">(</span><span class=\"kw6\">word</span><span class=\"br0\">(</span>v,j<span class=\"br0\">)</span>,<span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Say</span> ol<br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Say</span> <span class=\"kw6\">copies</span><span class=\"br0\">(</span><span class=\"st0\">'-'</span>,<span class=\"nu0\">35</span><span class=\"br0\">)</span><br/>\u00a0<br/>d=det<span class=\"br0\">(</span>m<span class=\"br0\">)</span>                            <span class=\"coMULTI\">/* denominator determinant       */</span><br/>\u00a0<br/><span class=\"kw1\">Do</span> k=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim                       <span class=\"coMULTI\">/* construct nominator matrix    */</span><br/>  <span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>      <span class=\"kw1\">If</span> i=k <span class=\"kw3\">Then</span><br/>        b<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>v,j<span class=\"br0\">)</span><br/>      <span class=\"kw3\">Else</span><br/>        b<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j=a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j<br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">Call</span> show_b<br/>  d<span class=\"sy0\">.</span>k=det<span class=\"br0\">(</span>mk_str<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>                 <span class=\"coMULTI\">/* numerator determinant         */</span><br/>  <span class=\"kw1\">Say</span> <span class=\"kw6\">word</span><span class=\"br0\">(</span>names,k<span class=\"br0\">)</span> <span class=\"st0\">'='</span> d<span class=\"sy0\">.</span>k<span class=\"sy0\">/</span>d       <span class=\"coMULTI\">/* compute value of variable k   */</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>mk_mat: <span class=\"kw1\">Procedure</span> <span class=\"kw1\">Expose</span> a<span class=\"sy0\">.</span> dim     <span class=\"coMULTI\">/* Turn list into matrix a.i.j */</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> list<br/>  dim=sqrt<span class=\"br0\">(</span><span class=\"kw6\">words</span><span class=\"br0\">(</span>list<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  k=<span class=\"nu0\">0</span><br/>  <span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>      k=k+<span class=\"nu0\">1</span><br/>      a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>list,k<span class=\"br0\">)</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">Return</span><br/>\u00a0<br/>mk_str: <span class=\"kw1\">Procedure</span> <span class=\"kw1\">Expose</span> b<span class=\"sy0\">.</span> dim     <span class=\"coMULTI\">/* Turn matrix b.i.j into list   */</span><br/>  str=<span class=\"st0\">''</span><br/><span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    str=str b<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j<br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Return</span> str<br/>\u00a0<br/>show_b: <span class=\"kw1\">Procedure</span> <span class=\"kw1\">Expose</span> b<span class=\"sy0\">.</span> dim     <span class=\"coMULTI\">/* show numerator matrix         */</span><br/>  <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    ol=<span class=\"st0\">''</span><br/>    <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>      ol=ol <span class=\"kw6\">format</span><span class=\"br0\">(</span>b<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j,<span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>      <span class=\"kw3\">end</span><br/>    <span class=\"kw1\">Call</span> dbg ol<br/>    <span class=\"kw3\">end</span><br/>  <span class=\"kw1\">Return</span><br/>\u00a0<br/>det: <span class=\"kw1\">Procedure</span>                      <span class=\"coMULTI\">/* compute determinant           */</span><br/><span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> list<br/>n=<span class=\"kw6\">words</span><span class=\"br0\">(</span>list<span class=\"br0\">)</span><br/><span class=\"kw1\">call</span> dbg <span class=\"st0\">'det:'</span> list<br/><span class=\"kw1\">do</span> dim=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> <span class=\"nu0\">10</span><br/>  <span class=\"kw1\">If</span> dim<span class=\"sy0\">**</span><span class=\"nu0\">2</span>=n <span class=\"kw3\">Then</span> <span class=\"kw1\">Leave</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">call</span> dbg <span class=\"st0\">'dim='</span>dim<br/><span class=\"kw1\">If</span> dim=<span class=\"nu0\">2</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>  det=<span class=\"kw6\">word</span><span class=\"br0\">(</span>list,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw6\">word</span><span class=\"br0\">(</span>list,<span class=\"nu0\">4</span><span class=\"br0\">)</span>-<span class=\"kw6\">word</span><span class=\"br0\">(</span>list,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"kw6\">word</span><span class=\"br0\">(</span>list,<span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">call</span> dbg <span class=\"st0\">'det=&gt;'</span>det<br/>  <span class=\"kw1\">Return</span> det<br/>  <span class=\"kw3\">End</span><br/>k=<span class=\"nu0\">0</span><br/><span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    k=k+<span class=\"nu0\">1</span><br/>    a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j=<span class=\"kw6\">word</span><span class=\"br0\">(</span>list,k<span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>  ol=j<br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>    ol=ol <span class=\"kw6\">format</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>j,<span class=\"nu0\">6</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">call</span> dbg ol<br/>  <span class=\"kw3\">End</span><br/>det=<span class=\"nu0\">0</span><br/><span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>  ol=<span class=\"st0\">''</span><br/>  <span class=\"kw1\">Do</span> j=<span class=\"nu0\">2</span> <span class=\"kw2\">To</span> dim<br/>    <span class=\"kw1\">Do</span> ii=<span class=\"nu0\">1</span> <span class=\"kw2\">To</span> dim<br/>      <span class=\"kw1\">If</span> ii<span class=\"sy0\">&lt;&gt;</span>i <span class=\"kw3\">Then</span><br/>        ol=ol a<span class=\"sy0\">.</span>ii<span class=\"sy0\">.</span>j<br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">call</span> dbg <span class=\"st0\">'i='</span>i <span class=\"st0\">'ol='</span>ol<br/>  <span class=\"kw1\">If</span> i<span class=\"sy0\">//</span><span class=\"nu0\">2</span> <span class=\"kw3\">Then</span><br/>    det=det+a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>1<span class=\"sy0\">*</span>det<span class=\"br0\">(</span>ol<span class=\"br0\">)</span><br/>  <span class=\"kw3\">Else</span><br/>    det=det-a<span class=\"sy0\">.</span>i<span class=\"sy0\">.</span>1<span class=\"sy0\">*</span>det<span class=\"br0\">(</span>ol<span class=\"br0\">)</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Call</span> dbg <span class=\"st0\">'det=&gt;&gt;&gt;'</span>det<br/><span class=\"kw1\">Return</span> det<br/>sqrt: <span class=\"kw1\">Procedure</span><br/><span class=\"coMULTI\">/* REXX ***************************************************************<br/>* EXEC to calculate the square root of a = 2 with high precision<br/>**********************************************************************/</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Arg</span> x,prec<br/>  <span class=\"kw1\">If</span> prec<span class=\"sy0\">&lt;</span><span class=\"nu0\">9</span> <span class=\"kw3\">Then</span> prec=<span class=\"nu0\">9</span><br/>  prec1=<span class=\"nu0\">2</span><span class=\"sy0\">*</span>prec<br/>  eps=<span class=\"nu0\">10</span><span class=\"sy0\">**</span><span class=\"br0\">(</span>-prec1<span class=\"br0\">)</span><br/>  k = <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"nu0\">3</span><br/>  r0= x<br/>  r = <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">Do</span> i=<span class=\"nu0\">1</span> <span class=\"kw2\">By</span> <span class=\"nu0\">1</span> <span class=\"kw2\">Until</span> r=r0 <span class=\"sy0\">|</span> <span class=\"br0\">(</span><span class=\"kw6\">abs</span><span class=\"br0\">(</span>r<span class=\"sy0\">*</span>r-x<span class=\"br0\">)</span><span class=\"sy0\">&lt;</span>eps<span class=\"br0\">)</span><br/>    r0 = r<br/>    r  = <span class=\"br0\">(</span>r + x<span class=\"sy0\">/</span>r<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>    k  = <span class=\"kw6\">min</span><span class=\"br0\">(</span>prec1,<span class=\"nu0\">2</span><span class=\"sy0\">*</span>k<span class=\"br0\">)</span><br/>    <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> <span class=\"br0\">(</span>k + <span class=\"nu0\">5</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">Numeric</span> <span class=\"kw2\">Digits</span> prec<br/>  r=r+<span class=\"nu0\">0</span><br/>  <span class=\"kw1\">Return</span> r<br/>\u00a0<br/>\u00a0<br/>dbg: <span class=\"kw1\">Return</span></pre>"}, {"lang": "Ruby", "loc": 21, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'matrix'</span><br/>\u00a0<br/><span class=\"kw1\">def</span> cramers_rule<span class=\"br0\">(</span>a, terms<span class=\"br0\">)</span><br/>  <span class=\"kw3\">raise</span> <span class=\"kw4\">ArgumentError</span>, <span class=\"st0\">\" Matrix not square\"</span>  <span class=\"kw1\">unless</span> a.<span class=\"me1\">square</span>?<br/>  cols = a.<span class=\"me1\">to_a</span>.<span class=\"me1\">transpose</span><br/>  cols.<span class=\"me1\">each_index</span>.<span class=\"me1\">map</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>i<span class=\"sy0\">|</span><br/>    c = cols.<span class=\"me1\">dup</span><br/>    c<span class=\"br0\">[</span>i<span class=\"br0\">]</span> = terms<br/>    <span class=\"kw4\">Matrix</span>.<span class=\"me1\">columns</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span>.<span class=\"me1\">det</span> <span class=\"sy0\">/</span> a.<span class=\"me1\">det</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>matrix = <span class=\"kw4\">Matrix</span><span class=\"br0\">[</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">5</span>,  <span class=\"nu0\">1</span><span class=\"br0\">]</span>,<br/>    <span class=\"br0\">[</span><span class=\"nu0\">3</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span>,<br/>    <span class=\"br0\">[</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">3</span>,  <span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>,<br/>    <span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>,  <span class=\"nu0\">3</span><span class=\"br0\">]</span>,<br/><span class=\"br0\">]</span><br/>\u00a0<br/>vector = <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">32</span>, <span class=\"sy0\">-</span><span class=\"nu0\">47</span>, <span class=\"nu0\">49</span><span class=\"br0\">]</span><br/><span class=\"kw3\">puts</span> cramers_rule<span class=\"br0\">(</span>matrix, vector<span class=\"br0\">)</span></pre>"}, {"lang": "Sidef", "loc": 50, "block": "<pre class=\"ruby highlighted_source\">func det<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    a = a.<span class=\"me1\">map</span><span class=\"br0\">{</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span>_<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>    var sign = <span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>    var pivot = <span class=\"nu0\">1</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> k <span class=\"kw1\">in</span> ^a <span class=\"br0\">{</span><br/>      var r = <span class=\"br0\">(</span>k<span class=\"sy0\">+</span><span class=\"nu0\">1</span> .. <span class=\"me1\">a</span>.<span class=\"kw1\">end</span><span class=\"br0\">)</span><br/>      var previous_pivot = pivot<br/>\u00a0<br/>      <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>pivot = a<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">)</span> == <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        a.<span class=\"me1\">swap</span><span class=\"br0\">(</span>r.<span class=\"me1\">first_by</span> <span class=\"br0\">{</span> a<span class=\"br0\">[</span>_<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span>\u00a0!= <span class=\"nu0\">0</span> <span class=\"br0\">}</span> \\\\ <span class=\"kw2\">return</span> <span class=\"nu0\">0</span>, k<span class=\"br0\">)</span><br/>        pivot = a<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><br/>        sign.<span class=\"me1\">neg</span>!<br/>      <span class=\"br0\">}</span><br/>\u00a0<br/>      <span class=\"kw1\">for</span> i,j <span class=\"kw1\">in</span> <span class=\"br0\">(</span>r ~X r<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">*</span>= pivot           <span class=\"sy0\">-&gt;</span><br/>                <span class=\"sy0\">-</span>= a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"sy0\">*</span>a<span class=\"br0\">[</span>k<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span><br/>                <span class=\"sy0\">/</span>= previous_pivot<br/>      <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    sign <span class=\"sy0\">*</span> pivot<br/><span class=\"br0\">}</span><br/>\u00a0<br/>func cramers_rule<span class=\"br0\">(</span>A, terms<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    gather <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> ^A <span class=\"br0\">{</span><br/>            var Ai = A.<span class=\"me1\">map</span><span class=\"br0\">{</span>.<span class=\"me1\">map</span><span class=\"br0\">{</span>_<span class=\"br0\">}</span><span class=\"br0\">}</span><br/>            <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> ^terms <span class=\"br0\">{</span><br/>                Ai<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> = terms<span class=\"br0\">[</span>j<span class=\"br0\">]</span><br/>            <span class=\"br0\">}</span><br/>            take<span class=\"br0\">(</span>det<span class=\"br0\">(</span>Ai<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span>\u00a0\u00bb<span class=\"sy0\">/</span>\u00bb det<span class=\"br0\">(</span>A<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>var matrix = <span class=\"br0\">[</span><br/>    <span class=\"br0\">[</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">5</span>,  <span class=\"nu0\">1</span><span class=\"br0\">]</span>,<br/>    <span class=\"br0\">[</span><span class=\"nu0\">3</span>,  <span class=\"nu0\">2</span>,  <span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">6</span><span class=\"br0\">]</span>,<br/>    <span class=\"br0\">[</span><span class=\"nu0\">1</span>,  <span class=\"nu0\">3</span>,  <span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>,<br/>    <span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>,  <span class=\"nu0\">3</span><span class=\"br0\">]</span>,<br/><span class=\"br0\">]</span><br/>\u00a0<br/>var free_terms = <span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">3</span>, <span class=\"sy0\">-</span><span class=\"nu0\">32</span>, <span class=\"sy0\">-</span><span class=\"nu0\">47</span>, <span class=\"nu0\">49</span><span class=\"br0\">]</span><br/>var <span class=\"br0\">(</span>w, x, y, z<span class=\"br0\">)</span> = cramers_rule<span class=\"br0\">(</span>matrix, free_terms<span class=\"br0\">)</span>...<br/>\u00a0<br/><span class=\"me1\">say</span> <span class=\"st0\">\"w = #{w}\"</span><br/>say <span class=\"st0\">\"x = #{x}\"</span><br/>say <span class=\"st0\">\"y = #{y}\"</span><br/>say <span class=\"st0\">\"z = #{z}\"</span></pre>"}, {"lang": "zkl", "loc": 6, "block": "<pre class=\"text highlighted_source\">var [const] GSL=Import(\"zklGSL\");\t// libGSL (GNU Scientific Library)<br/>A:=GSL.Matrix(4,4).set(2,-1, 5, 1,<br/>\t\t       3, 2, 2,-6,<br/>\t\t       1, 3, 3,-1,<br/>\t\t       5,-2,-3, 3);<br/>b:=GSL.Vector(4).set(-3,-32,-47,49);</pre>"}]}