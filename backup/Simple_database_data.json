{"task": "Simple_database", "blocks": [{"lang": "Bracmat", "loc": 80, "block": "<pre class=\"text highlighted_source\">  whl<br/>' ( arg$:?command<br/>  &amp; ( get'db<br/>    | (db=1)&amp;lst$(db,db,NEW)<br/>    )<br/>  &amp;  \u00a0!command<br/>   \u00a0: (   add<br/>        &amp;\u00a0:?name:?tag:?date<br/>        &amp;   whl<br/>          ' ( arg$:?argmnt<br/>            &amp; arg$:?value<br/>            &amp;   (!argmnt.!value)<br/>             \u00a0: ( (title|name.?name)<br/>                | (category|tag.?tag)<br/>                | (date.?date)<br/>                )<br/>            )<br/>        &amp; (  \u00a0!name:~<br/>            &amp;\u00a0!tag:~<br/>            &amp;\u00a0!date:~<br/>            &amp; (  \u00a0!db:?*!tag^(?+(!date.!name)+?)*?<br/>                &amp; out$\"This record already exists\"<br/>              |  \u00a0!tag^(!date.!name)*!db:?db<br/>                &amp; lst$(db,db,NEW)<br/>              )<br/>          | out$\"invalid data\"<br/>          )<br/>      |   latest<br/>        &amp;\u00a0:?date<br/>        &amp; nothing found:?latest<br/>        &amp; (  \u00a0!db<br/>           \u00a0:  \u00a0?<br/>              *  \u00a0?tag<br/>                ^ (\u00a0?<br/>                  + ( (&gt;!date:?date.?name)<br/>                    &amp; (!name,!tag,!date):?latest<br/>                    &amp; ~<br/>                    )<br/>                  +\u00a0?<br/>                  )<br/>              *\u00a0?<br/>          | out$!latest<br/>          )<br/>      |   latest/category<br/>        &amp;\u00a0:?date:?latests:?latest<br/>        &amp; (  \u00a0!db<br/>           \u00a0:  \u00a0?<br/>              *   (\u00a0?tag<br/>                  &amp;\u00a0!latests\u00a0!latest:?latests<br/>                  &amp;\u00a0:?latest:?date<br/>                  )<br/>                ^ (\u00a0?<br/>                  + ( (&gt;!date:?date.?name)<br/>                    &amp; (!name,!tag,!date):?latest<br/>                    &amp; ~<br/>                    )<br/>                  +\u00a0?<br/>                  )<br/>              *\u00a0?<br/>          |\u00a0!latests\u00a0!latest:?latests&amp;out$!latests<br/>          )<br/>      |   sorted<br/>        &amp; 0:?sorted<br/>        &amp; (  \u00a0!db<br/>           \u00a0:  \u00a0?<br/>              *  \u00a0?tag<br/>                ^ (\u00a0?<br/>                  + ( (?date.?name)<br/>                    &amp; (!date.!name,!tag,!date)+!sorted:?sorted<br/>                    &amp; ~<br/>                    )<br/>                  +\u00a0?<br/>                  )<br/>              *\u00a0?<br/>          |   whl<br/>            ' (!sorted:(?.?row)+?sorted&amp;out$!row)<br/>          )<br/>      )<br/>  );<br/>\u00a0</pre>"}, {"lang": "C", "loc": 1, "block": "<pre>\"Soon Rising\",\"Dee\",\"Lesace\",\"10-12-2000\",\"New Hat Press\" \n\"Brave Chicken\",\"Tang\",\"Owe\",\"04-01-2008\",\"Nowhere Press\" \n\"Aardvark Point\",\"Dee\",\"Lesace\",\"5-24-2001\",\"New Hat Press\" \n\"Bat Whisperer, The\",\"Tang\",\"Owe\",\"01-03-2004\",\"Nowhere Press\" \n\"Treasure Beach\",\"Argus\",\"Jemky\",\"09-22-1999\",\"Lancast\" \n</pre>"}, {"lang": "C#", "loc": 325, "block": "<pre class=\"c highlighted_source\">\u00a0<br/>using System<span class=\"sy0\">;</span><br/>using System.<span class=\"me1\">IO</span><span class=\"sy0\">;</span><br/>\u00a0<br/>namespace Simple_database<br/><span class=\"br0\">{</span><br/>\tclass Program<br/>\t<span class=\"br0\">{</span><br/>\t\tpublic <span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// For appropriate use of this program</span><br/>\t\t\t<span class=\"co1\">// use standard Windows Command Processor or cmd.exe</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Create cmd.bat file at the same folder with executive version</span><br/>\t\t\t<span class=\"co1\">// of program Simple_database.exe, so when started, the correct</span><br/>\t\t\t<span class=\"co1\">// file path will be automatically set to cmd console.</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Start notepad, write only cmd.exe and save file as cmd.bat</span><br/>\t\t\t<span class=\"co1\">// </span><br/>\t\t\t<span class=\"co1\">// To start cmd just double click at cmd.bat file.</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Console application command line start command</span><br/>\t\t\t<span class=\"co1\">// </span><br/>\t\t\t<span class=\"co1\">// application name.exe [argument] [argument parameters]</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Command line argument followed by parameters</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// [a] - Add new entry</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// [\"data1\"][\"data2\"][\"data3\"]...[\"data n\"]</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// [\"data1\"] - Data category\u00a0!</span><br/>\t\t\t<span class=\"co1\">// [\"data2\"] - Data</span><br/>\t\t\t<span class=\"co1\">// [\"data3\"] - Data</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// NOTICE\u00a0!</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// First parameter is taken for data category.</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Command line argument with no parameters</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// [p1] - Print the latest entry</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// [p2] - Print the latest entry for each category</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// [p3] - Print all entries sorted by a date</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\u00a0<br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Command line example</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Small_database.exe [a] [\"home\"] [\"+398125465458\"] [\"My tel number\"]</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Small_database.exe [a] [\"office\"] [\"+398222789000\"] [\"Boss\"]</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Small_database.exe [a] [cd] [\"Action movie\"] [\"Movie title\"]</span><br/>\t\t\t<span class=\"co1\">// Small_database.exe [a] [cd] [\"SF movie\"] [\"Movie title\"]</span><br/>\t\t\t<span class=\"co1\">// Small_database.exe [a] [dvd] [\"Action movie\"] [\"Movie title\"]</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// NOTICE\u00a0!</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Brackets and space between arguments and parameters are necessary.</span><br/>\t\t\t<span class=\"co1\">// Quotes must be used when parameters have more than one word.</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// If not used as shown in examples, program will show error message.</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\u00a0<br/>\u00a0<br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Check command line for arguments</span><br/>\t\t\t<span class=\"co1\">// </span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>args.<span class=\"me1\">Length</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Missing Argument Error. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t<span class=\"kw1\">switch</span> <span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"[a]\"</span> <span class=\"sy0\">:</span> Add_New_Entry<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"[p1]\"</span><span class=\"sy0\">:</span> Print_Document<span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"[p2]\"</span><span class=\"sy0\">:</span> Print_Document<span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\t\t<span class=\"kw1\">case</span> <span class=\"st0\">\"[p3]\"</span><span class=\"sy0\">:</span> Print_Document<span class=\"br0\">(</span><span class=\"st0\">\"Print all entries sorted by a date.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\t\t<span class=\"kw1\">default</span> <span class=\"sy0\">:</span><br/>\t\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Incorrect Argument Error. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Add_New_Entry<span class=\"br0\">(</span>string <span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\u00a0<br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Check parameters</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Minimum one parameter, category</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>args.<span class=\"me1\">Length</span><span class=\"sy0\">==</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Missing Parameters Error..... \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tbool parameters_ok <span class=\"sy0\">=</span> <span class=\"kw2\">true</span><span class=\"sy0\">;</span><br/>\t\t\t\tforeach <span class=\"br0\">(</span>string a in args<span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>a.<span class=\"me1\">StartsWith</span><span class=\"br0\">(</span><span class=\"st0\">\"[\"</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"sy0\">!</span>a.<span class=\"me1\">EndsWith</span><span class=\"br0\">(</span><span class=\"st0\">\"]\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tparameters_ok <span class=\"sy0\">=</span> <span class=\"sy0\">!</span>parameters_ok<span class=\"sy0\">;</span><br/>\t\t\t\t\t\t<span class=\"kw2\">break</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t<span class=\"co1\">// Add new entry to Data base document</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>parameters_ok<span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Parameters are ok..... \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Writing new entry to database..... \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">// Create new Data base entry</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\targs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> string.<span class=\"me1\">Empty</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tstring line <span class=\"sy0\">=</span> string.<span class=\"me1\">Empty</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tforeach <span class=\"br0\">(</span>string a in args<span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tline<span class=\"sy0\">+=</span>a<span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\tline<span class=\"sy0\">+=</span><span class=\"st0\">\"[\"</span> <span class=\"sy0\">+</span> DateTime.<span class=\"me1\">Now</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"]\"</span><span class=\"sy0\">;</span><br/>\t\t\t\t\targs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"[\"</span> <span class=\"sy0\">+</span> DateTime.<span class=\"me1\">Now</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"]\"</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">// Write entry to Data base</span><br/>\t\t\t\t\t<span class=\"co1\">// </span><br/>\t\t\t\t\tStreamWriter w <span class=\"sy0\">=</span> new StreamWriter<span class=\"br0\">(</span><span class=\"st0\">\"Data base.txt\"</span><span class=\"sy0\">,</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tw.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">// Close and dispose stream writer</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\tw.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tw.<span class=\"me1\">Dispose</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" New entry is written to database. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\tCreate_Print_Documents<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Add new entry command executed. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"\u00a0! Parameters are not ok\u00a0! \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Add new entry command is not executed. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Create_Print_Documents<span class=\"br0\">(</span>string <span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Creating new print documents. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Create \"Print all entries sorted by a date.txt\"</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tFile.<span class=\"me1\">Copy</span><span class=\"br0\">(</span><span class=\"st0\">\"Data base.txt\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Print all entries sorted by a date.txt\"</span><span class=\"sy0\">,</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Print all entries sorted by a date.txt created. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Create \"Print the latest entry.txt\"</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Create new entry</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tstring line <span class=\"sy0\">=</span> string.<span class=\"me1\">Empty</span><span class=\"sy0\">;</span><br/>\t\t\tforeach <span class=\"br0\">(</span>string a in args<span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tline<span class=\"sy0\">+=</span>a<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tStreamWriter w <span class=\"sy0\">=</span> new StreamWriter<span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tw.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tw.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tw.<span class=\"me1\">Dispose</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Print the latest entry.txt created. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Create \"Print the latest entry for each category.txt\"</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tstring latest_entry <span class=\"sy0\">=</span> string.<span class=\"me1\">Empty</span><span class=\"sy0\">;</span><br/>\t\t\tforeach <span class=\"br0\">(</span>string a in args<span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tlatest_entry<span class=\"sy0\">+=</span>a<span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>File.<span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tFile.<span class=\"me1\">WriteAllText</span><span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category.txt\"</span><span class=\"sy0\">,</span>latest_entry<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\tStreamReader r <span class=\"sy0\">=</span> new StreamReader<span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tw <span class=\"sy0\">=</span> new StreamWriter<span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category 1.txt\"</span><span class=\"sy0\">,</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tline <span class=\"sy0\">=</span> string.<span class=\"me1\">Empty</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"sy0\">!</span>r.<span class=\"me1\">EndOfStream</span><span class=\"br0\">)</span><br/>\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\tline <span class=\"sy0\">=</span> r.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>line.<span class=\"me1\">Contains</span><span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tw.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>latest_entry<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t\tlatest_entry <span class=\"sy0\">=</span> <span class=\"st0\">\"ok\"</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t\t<span class=\"kw1\">else</span><br/>\t\t\t\t\t<span class=\"br0\">{</span><br/>\t\t\t\t\t\tw.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"br0\">}</span><br/>\t\t\t\t<span class=\"co1\">// add new category</span><br/>\t\t\t\t<span class=\"kw1\">if</span><span class=\"br0\">(</span>latest_entry <span class=\"sy0\">!=</span> <span class=\"st0\">\"ok\"</span><span class=\"br0\">)</span><br/>\t\t\t\t\tw.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>latest_entry<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tw.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tw.<span class=\"me1\">Dispose</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tr.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tr.<span class=\"me1\">Dispose</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tFile.<span class=\"me1\">Copy</span><span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category 1.txt\"</span><span class=\"sy0\">,</span><br/>\t\t\t\t          <span class=\"st0\">\"Print the latest entry for each category.txt\"</span><span class=\"sy0\">,</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tFile.<span class=\"me1\">Delete</span><span class=\"br0\">(</span><span class=\"st0\">\"Print the latest entry for each category 1.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\t<span class=\"co1\">//</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" Print the latest entry for each category.txt created. \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\u00a0<br/>\t\t<span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Print_Document<span class=\"br0\">(</span>string file_name<span class=\"br0\">)</span><br/>\t\t<span class=\"br0\">{</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">// Print document</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>file_name.<span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">\".txt\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">+</span> <span class=\"st0\">\"\u00a0: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tStreamReader r <span class=\"sy0\">=</span> new StreamReader<span class=\"br0\">(</span>file_name<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tstring line <span class=\"sy0\">=</span> string.<span class=\"me1\">Empty</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tline <span class=\"sy0\">=</span> r.<span class=\"me1\">ReadToEnd</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tConsole.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\tr.<span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tr.<span class=\"me1\">Dispose</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t\t<span class=\"co1\">//</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "COBOL", "loc": 262, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">IDENTIFICATION</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROGRAM-ID</span><span class=\"sy0\">.</span> simple-database<span class=\"sy0\">.</span><br/>\u00a0<br/>       ENVIRONMENT <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">INPUT-OUTPUT</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">FILE-CONTROL</span><span class=\"sy0\">.</span><br/>           <span class=\"kw3\">SELECT</span> <span class=\"kw3\">OPTIONAL</span> database-<span class=\"kw3\">file</span> <span class=\"kw3\">ASSIGN</span> Database-Path<br/>               <span class=\"kw3\">ORGANIZATION</span> <span class=\"kw3\">INDEXED</span><br/>               <span class=\"kw3\">ACCESS</span> <span class=\"kw3\">SEQUENTIAL</span><br/>               <span class=\"kw3\">RECORD</span> <span class=\"kw3\">KEY</span> data-title<br/>               <span class=\"kw3\">ALTERNATE</span> <span class=\"kw3\">RECORD</span> <span class=\"kw3\">KEY</span> data-tag<br/>                   <span class=\"kw3\">WITH</span> <span class=\"kw3\">DUPLICATES</span><br/>               <span class=\"kw3\">ALTERNATE</span> <span class=\"kw3\">RECORD</span> <span class=\"kw3\">KEY</span> date-added<br/>                   <span class=\"kw3\">WITH</span> <span class=\"kw3\">DUPLICATES</span><br/>               <span class=\"kw3\">FILE</span> <span class=\"kw3\">STATUS</span> file-<span class=\"kw3\">status</span><br/>               <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">DATA</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">FILE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">FD</span>  database-<span class=\"kw3\">file</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span>  database-<span class=\"kw3\">record</span><span class=\"sy0\">.</span><br/>           *&gt; <span class=\"kw3\">Date</span> <span class=\"kw3\">is</span> <span class=\"kw3\">in</span> YYYYMMDD format<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  date-added          <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  data-tag            <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  data-title          <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  data-contents       <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>           *&gt; Adding extra <span class=\"kw3\">space</span> <span class=\"kw3\">is</span> considered good style so the <span class=\"kw3\">record</span><br/>           *&gt; can be expanded <span class=\"kw3\">in</span> the future<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">03</span>  <span class=\"kw3\">FILLER</span>              <span class=\"kw3\">PIC</span> X<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">WORKING-STORAGE</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">78</span>  Database-Path           <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"database.dat\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  file-<span class=\"kw3\">status</span>             <span class=\"kw3\">PIC</span> XX<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  file-ok             <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"00\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  duplicate-<span class=\"kw3\">key</span>       <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"22\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  key-not-found       <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"23\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  num-args                <span class=\"kw3\">PIC</span> <span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  action                  <span class=\"kw3\">PIC</span> XX<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  create-entry        <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-c\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  remove-entry        <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-r\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  find-entry          <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-f\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  print-latest        <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-l\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  print-database      <span class=\"kw3\">VALUES</span> <span class=\"st0\">\"-a\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-d\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"-t\"</span><span class=\"sy0\">.</span><br/>           *&gt; Printed <span class=\"kw3\">by</span> title<span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  print-by-title      <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-a\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  print-by-<span class=\"kw3\">date</span>       <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-d\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  print-by-tag        <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"-t\"</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  print-help          <span class=\"kw3\">VALUES</span> <span class=\"st0\">\"-h\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">SPACES</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  read-direction-flag     <span class=\"kw3\">PIC</span> X <span class=\"kw3\">VALUE</span> <span class=\"kw3\">SPACE</span><span class=\"sy0\">.</span><br/>           <span class=\"nu0\">88</span>  read-backwards      <span class=\"kw3\">VALUE</span> <span class=\"st0\">\"B\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span>  edited-<span class=\"kw3\">date</span>             <span class=\"kw3\">PIC</span> <span class=\"nu0\">9</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>/<span class=\"nu0\">99</span>/<span class=\"nu0\">99</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">PROCEDURE</span> <span class=\"kw3\">DIVISION</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">DECLARATIVES</span><span class=\"sy0\">.</span><br/>       database-file-<span class=\"kw3\">error</span> <span class=\"kw1\">SECTION</span><span class=\"sy0\">.</span><br/>           <span class=\"kw3\">USE</span> <span class=\"kw3\">AFTER</span> <span class=\"kw3\">ERROR</span> <span class=\"kw3\">ON</span> database-<span class=\"kw3\">file</span><br/>\u00a0<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"An error has occurred while using \"</span> Database-Path<br/>               <span class=\"st0\">\". Error no. \"</span> file-<span class=\"kw3\">status</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"The program will terminate.\"</span><br/>\u00a0<br/>           <span class=\"kw2\">CLOSE</span> database-<span class=\"kw3\">file</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span><br/>       <span class=\"kw3\">END</span> <span class=\"kw3\">DECLARATIVES</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       main-<span class=\"kw3\">line</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"nu0\">1</span> <span class=\"kw3\">UPON</span> ARGUMENT-<span class=\"kw3\">NUMBER</span><br/>           <span class=\"kw2\">ACCEPT</span> action <span class=\"kw3\">FROM</span> ARGUMENT-<span class=\"kw3\">VALUE</span><br/>\u00a0<br/>           <span class=\"kw2\">ACCEPT</span> num-args <span class=\"kw3\">FROM</span> ARGUMENT-<span class=\"kw3\">NUMBER</span><br/>\u00a0<br/>           <span class=\"kw2\">EVALUATE</span> <span class=\"kw3\">TRUE</span><br/>               <span class=\"kw3\">WHEN</span> create-entry<br/>                   <span class=\"kw1\">IF</span> num-args &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">4</span><br/>                       <span class=\"kw2\">PERFORM</span> write-entry<br/>                   <span class=\"kw3\">ELSE</span><br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"-a requires arguments to enter in the \"</span><br/>                           <span class=\"st0\">\"database. See help (-h) for details.\"</span><br/>                   END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> remove-entry<br/>                   <span class=\"kw1\">IF</span> num-args &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>                       <span class=\"kw2\">PERFORM</span> delete-entry<br/>                   <span class=\"kw3\">ELSE</span><br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"-r requires the title of the entry to \"</span><br/>                           <span class=\"st0\">\"delete.\"</span><br/>                   END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> find-entry<br/>                   <span class=\"kw1\">IF</span> num-args &gt;<span class=\"sy0\">=</span> <span class=\"nu0\">2</span><br/>                       <span class=\"kw2\">PERFORM</span> display-specified-entry<br/>                   <span class=\"kw3\">ELSE</span><br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"-f requires the title of the entry to \"</span><br/>                           <span class=\"st0\">\"find.\"</span><br/>                   END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> print-latest<br/>                   <span class=\"kw2\">PERFORM</span> show-latest<br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> print-database<br/>                   <span class=\"kw2\">PERFORM</span> show-database<br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> print-help<br/>                   <span class=\"kw2\">PERFORM</span> show-general-help<br/>\u00a0<br/>               <span class=\"kw3\">WHEN</span> <span class=\"kw3\">OTHER</span><br/>                   <span class=\"kw2\">DISPLAY</span> action <span class=\"st0\">\" is not a valid option.\"</span><br/>           END-<span class=\"kw2\">EVALUATE</span><br/>\u00a0<br/>           GOBACK<br/>           <span class=\"sy0\">.</span><br/>       write-entry<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">OPEN</span> <span class=\"kw3\">EXTEND</span> database-<span class=\"kw3\">file</span><br/>\u00a0<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"nu0\">2</span> <span class=\"kw3\">UPON</span> ARGUMENT-<span class=\"kw3\">NUMBER</span><br/>           <span class=\"kw2\">ACCEPT</span> data-tag <span class=\"kw3\">FROM</span> ARGUMENT-<span class=\"kw3\">VALUE</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"nu0\">3</span> <span class=\"kw3\">UPON</span> ARGUMENT-<span class=\"kw3\">NUMBER</span><br/>           <span class=\"kw2\">ACCEPT</span> data-title <span class=\"kw3\">FROM</span> ARGUMENT-<span class=\"kw3\">VALUE</span><br/>           <span class=\"kw1\">IF</span> data-title <span class=\"sy0\">=</span> <span class=\"kw3\">SPACES</span><br/>               <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"The title cannot be blank.\"</span><br/>               <span class=\"kw2\">PERFORM</span> close-and-<span class=\"kw3\">terminate</span><br/>           END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"nu0\">4</span> <span class=\"kw3\">UPON</span> ARGUMENT-<span class=\"kw3\">NUMBER</span><br/>           <span class=\"kw2\">ACCEPT</span> data-contents <span class=\"kw3\">FROM</span> ARGUMENT-<span class=\"kw3\">VALUE</span><br/>\u00a0<br/>           <span class=\"kw2\">ACCEPT</span> date-added <span class=\"kw3\">FROM</span> <span class=\"kw3\">DATE</span> YYYYMMDD<br/>\u00a0<br/>           <span class=\"kw3\">WRITE</span> database-<span class=\"kw3\">record</span><br/>               <span class=\"kw3\">INVALID</span> <span class=\"kw3\">KEY</span><br/>                   <span class=\"kw1\">IF</span> duplicate-<span class=\"kw3\">key</span><br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"An entry in the database already has \"</span><br/>                           <span class=\"st0\">\"that title. Please choose a different \"</span><br/>                           <span class=\"st0\">\"title or remove the entry.\"</span><br/>                   <span class=\"kw3\">ELSE</span><br/>                       <span class=\"kw2\">PERFORM</span> database-file-<span class=\"kw3\">error</span><br/>                   END-<span class=\"kw1\">IF</span><br/>           <span class=\"kw3\">END-WRITE</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> close-database<br/>           <span class=\"sy0\">.</span><br/>       delete-entry<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> get-title-arg<br/>           <span class=\"kw2\">OPEN</span> <span class=\"kw3\">I-O</span> database-<span class=\"kw3\">file</span><br/>           <span class=\"kw2\">PERFORM</span> read-title<br/>\u00a0<br/>           <span class=\"kw2\">DELETE</span> database-<span class=\"kw3\">file</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> close-database<br/>           <span class=\"sy0\">.</span><br/>       display-specified-entry<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">PERFORM</span> get-title-arg<br/>           <span class=\"kw2\">OPEN</span> <span class=\"kw3\">INPUT</span> database-<span class=\"kw3\">file</span><br/>           <span class=\"kw2\">PERFORM</span> read-title<br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> show-<span class=\"kw3\">record</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> close-database<br/>           <span class=\"sy0\">.</span><br/>       get-title-arg<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"nu0\">2</span> <span class=\"kw3\">UPON</span> ARGUMENT-<span class=\"kw3\">NUMBER</span><br/>           <span class=\"kw2\">ACCEPT</span> data-title <span class=\"kw3\">FROM</span> ARGUMENT-<span class=\"kw3\">VALUE</span><br/>           <span class=\"sy0\">.</span><br/>       read-title<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">START</span> database-<span class=\"kw3\">file</span> <span class=\"kw3\">KEY</span> <span class=\"kw3\">IS</span> <span class=\"sy0\">=</span> data-title<br/>               <span class=\"kw3\">INVALID</span> <span class=\"kw3\">KEY</span><br/>                   <span class=\"kw1\">IF</span> key-not-found<br/>                       <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"An entry with that title was not found.\"</span><br/>                       <span class=\"kw2\">PERFORM</span> close-and-<span class=\"kw3\">terminate</span><br/>                   <span class=\"kw3\">ELSE</span><br/>                       <span class=\"kw2\">PERFORM</span> database-file-<span class=\"kw3\">error</span><br/>                   END-<span class=\"kw1\">IF</span><br/>           <span class=\"kw3\">END-START</span><br/>\u00a0<br/>           READ database-<span class=\"kw3\">file</span><br/>           <span class=\"sy0\">.</span><br/>       close-and-<span class=\"kw3\">terminate</span><span class=\"sy0\">.</span><br/>            <span class=\"kw2\">PERFORM</span> close-database<br/>            GOBACK<br/>            <span class=\"sy0\">.</span><br/>       show-latest<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">OPEN</span> <span class=\"kw3\">INPUT</span> database-<span class=\"kw3\">file</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> start-at-last-<span class=\"kw3\">date</span><br/>           READ database-<span class=\"kw3\">file</span><br/>           <span class=\"kw2\">PERFORM</span> show-<span class=\"kw3\">record</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> close-database<br/>           <span class=\"sy0\">.</span><br/>       show-database<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">OPEN</span> <span class=\"kw3\">INPUT</span> database-<span class=\"kw3\">file</span><br/>\u00a0<br/>           <span class=\"kw2\">EVALUATE</span> <span class=\"kw3\">TRUE</span><br/>               <span class=\"kw3\">WHEN</span> print-by-title<br/>                   *&gt; Primary <span class=\"kw3\">key</span> <span class=\"kw3\">is</span> the title<span class=\"sy0\">.</span><br/>                   <span class=\"kw2\">CONTINUE</span><br/>               <span class=\"kw3\">WHEN</span> print-by-tag<br/>                   <span class=\"kw2\">MOVE</span> <span class=\"kw3\">LOW-VALUES</span> <span class=\"kw2\">TO</span> data-tag<br/>                   <span class=\"kw3\">START</span> database-<span class=\"kw3\">file</span> <span class=\"kw3\">KEY</span> <span class=\"kw3\">IS</span> &gt; data-tag<br/>               <span class=\"kw3\">WHEN</span> print-by-<span class=\"kw3\">date</span><br/>                   <span class=\"kw2\">PERFORM</span> start-at-last-<span class=\"kw3\">date</span><br/>                   <span class=\"kw3\">SET</span> read-backwards <span class=\"kw2\">TO</span> <span class=\"kw3\">TRUE</span><br/>           END-<span class=\"kw2\">EVALUATE</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> FOREVER<br/>               *&gt; The problem <span class=\"kw3\">with</span> statements instead <span class=\"kw3\">of</span> functions<span class=\"sy0\">...</span><br/>               <span class=\"kw1\">IF</span> <span class=\"kw3\">NOT</span> read-backwards<br/>                   READ database-<span class=\"kw3\">file</span> <span class=\"kw3\">NEXT</span><br/>                       <span class=\"kw3\">AT</span> <span class=\"kw3\">END</span><br/>                           <span class=\"kw2\">EXIT</span> <span class=\"kw2\">PERFORM</span><br/>                   <span class=\"kw3\">END-READ</span><br/>               <span class=\"kw3\">ELSE</span><br/>                   READ database-<span class=\"kw3\">file</span> PREVIOUS<br/>                       <span class=\"kw3\">AT</span> <span class=\"kw3\">END</span><br/>                           <span class=\"kw2\">EXIT</span> <span class=\"kw2\">PERFORM</span><br/>                   <span class=\"kw3\">END-READ</span><br/>               END-<span class=\"kw1\">IF</span><br/>\u00a0<br/>               <span class=\"kw2\">PERFORM</span> show-<span class=\"kw3\">record</span><br/>               <span class=\"kw2\">DISPLAY</span> <span class=\"kw3\">SPACE</span><br/>           END-<span class=\"kw2\">PERFORM</span><br/>\u00a0<br/>           <span class=\"kw2\">PERFORM</span> close-database<br/>           <span class=\"sy0\">.</span><br/>       start-at-last-<span class=\"kw3\">date</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> <span class=\"kw3\">HIGH-VALUES</span> <span class=\"kw2\">TO</span> date-added<br/>           <span class=\"kw3\">START</span> database-<span class=\"kw3\">file</span> <span class=\"kw3\">KEY</span> <span class=\"kw3\">IS</span> &lt; date-added<br/>           <span class=\"sy0\">.</span><br/>       close-database<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">CLOSE</span> database-<span class=\"kw3\">file</span><br/>           <span class=\"sy0\">.</span><br/>       show-<span class=\"kw3\">record</span><span class=\"sy0\">.</span><br/>           <span class=\"kw2\">MOVE</span> date-added <span class=\"kw2\">TO</span> edited-<span class=\"kw3\">date</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Date added: \"</span> edited-<span class=\"kw3\">date</span> <span class=\"st0\">\" Tag: \"</span> data-tag<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Title: \"</span> data-title<br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Contents:\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  \"</span> <span class=\"kw3\">FUNCTION</span> TRIM<span class=\"br0\">(</span>data-contents<span class=\"br0\">)</span><br/>           <span class=\"sy0\">.</span><br/>       show-general-help<span class=\"sy0\">.</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"Help: Possible options are:\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -a - Show all the entries (sorted by title).\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -c - Create a new entry in the database. -c needs\"</span><br/>               <span class=\"st0\">\" further arguments in this format:\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">'    \"tag\" \"title\" \"content\"'</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"    Max argument sizes (in characters): tag - 20, \"</span><br/>               <span class=\"st0\">\"title - 50, content - 200\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"    The title must be unique and not be blank.\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -d - Show all the entries sorted by date added.\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -f - Finds and displays entry with the title \"</span><br/>               <span class=\"st0\">\"provided. The title should be specified as shown for \"</span><br/>               <span class=\"st0\">\"-c.\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -h - Show this help menu.\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -l - Show the latest entry.\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -r - Remove the entry with the title provided. \"</span><br/>               <span class=\"st0\">\"The title should be specified as shown for -c.\"</span><br/>           <span class=\"kw2\">DISPLAY</span> <span class=\"st0\">\"  -t - Show all the entries sorted by tag.\"</span><br/>           <span class=\"sy0\">.</span></pre>"}, {"lang": "Common Lisp", "loc": 118, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>defvar *db* <span class=\"kw1\">nil</span><span class=\"br0\">)</span>        <br/>\u00a0<br/><span class=\"br0\">(</span>defvar *db-cat* <span class=\"br0\">(</span>make-hash-table <span class=\"sy0\">:</span><span class=\"me1\">test</span> '<span class=\"kw1\">equal</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defvar *db-file* <span class=\"st0\">\"db.txt\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defstruct item<br/>  <span class=\"st0\">\"this is the unit of data stored/displayed in *db*\"</span><br/>  <span class=\"br0\">(</span>title <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>category <span class=\"st0\">\"default\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>date <span class=\"br0\">(</span><span class=\"kw1\">progn</span> <span class=\"br0\">(</span>get-universal-time<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> set-category<span class=\"br0\">(</span>new-item<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span>gethash <span class=\"br0\">(</span>item-category new-item<span class=\"br0\">)</span> *db-cat*<span class=\"br0\">)</span> 't<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> find-item-in-db <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional category<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">null</span> category<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">car</span> *db*<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>find category *db* <span class=\"sy0\">:</span><span class=\"me1\">key</span> #'item-category <span class=\"sy0\">:</span><span class=\"me1\">test</span> #'string<span class=\"sy0\">=</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> scan-category <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"scan categories from an existing database -- after reading it from disk\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">dolist</span> <span class=\"br0\">(</span>itm *db*<span class=\"br0\">)</span> <span class=\"br0\">(</span>set-category itm<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> pr-univ-time <span class=\"br0\">(</span>utime<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>multiple-value-bind<br/>   <span class=\"br0\">(</span>second minute hour date month year day-of-week dst-p tz<span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>decode-universal-time utime<span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>declare <span class=\"br0\">(</span>ignore day-of-week dst-p tz<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   <span class=\"br0\">(</span>format <span class=\"kw1\">nil</span> <span class=\"st0\">\"~4,'0d-~2,'0d-~2,'0d ~2,'0d:~2,'0d:~2,'0d\"</span> year month date hour minute second<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> pr <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>item <span class=\"br0\">(</span>find-item-in-db<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>stream t<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"print an item\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">when</span> item<br/>    <span class=\"br0\">(</span>format stream <span class=\"st0\">\"~a: (~a) (~a)~%\"</span><br/>\t    <span class=\"br0\">(</span>item-title item<span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span>item-category item<span class=\"br0\">)</span><br/>\t    <span class=\"br0\">(</span>pr-univ-time <span class=\"br0\">(</span>item-date item<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> pr-per-category <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"print the latest item from each category\"</span><br/>  <span class=\"br0\">(</span>loop for k being the hash-keys in *db-cat*<br/>\t<span class=\"kw1\">do</span> <span class=\"br0\">(</span>pr <span class=\"br0\">(</span>find-item-in-db k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> pr-all <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"print all the items, *db* is sorted by time.\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">dolist</span> <span class=\"br0\">(</span>itm *db*<span class=\"br0\">)</span>  <span class=\"br0\">(</span>pr itm<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> pr-all-categories <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>stream t<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>loop for k being the hash-keys in *db-cat*<br/>       <span class=\"kw1\">do</span> <span class=\"br0\">(</span>format stream <span class=\"st0\">\"(~a) \"</span> k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> insert-item <span class=\"br0\">(</span>item<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"insert item into database in a time sorted list. okay for a small list, as per spec.\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>first-item <span class=\"br0\">(</span><span class=\"kw1\">car</span> *db*<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>new-itm item<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>set-category new-itm<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>push new-itm *db*<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">when</span> <span class=\"br0\">(</span><span class=\"kw1\">and</span> first-item <span class=\"br0\">(</span><span class=\"sy0\">&gt;=</span> <span class=\"br0\">(</span>item-date new-itm<span class=\"br0\">)</span> <span class=\"br0\">(</span>item-date first-item<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> *db* <span class=\"br0\">(</span>sort *db* #'<span class=\"sy0\">&gt;</span> <span class=\"sy0\">:</span><span class=\"me1\">key</span> #'item-date<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    *db*<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> read-db-from-file <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>file *db-file*<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-open-file <span class=\"br0\">(</span>in file <span class=\"sy0\">:</span><span class=\"me1\">if-does-not-exist</span> <span class=\"kw1\">nil</span><span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span><span class=\"kw1\">when</span> in<br/>\t\t    <span class=\"br0\">(</span>with-standard-io-syntax <span class=\"br0\">(</span><span class=\"kw1\">setf</span> *db* <span class=\"br0\">(</span>read in<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t\t    <span class=\"br0\">(</span>scan-category<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> save-db-to-file <span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>file *db-file*<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>with-open-file <span class=\"br0\">(</span>out file <span class=\"sy0\">:</span><span class=\"me1\">direction</span> <span class=\"sy0\">:</span><span class=\"me1\">output</span> <span class=\"sy0\">:</span><span class=\"me1\">if-exists</span> <span class=\"sy0\">:</span><span class=\"me1\">supersede</span><span class=\"br0\">)</span><br/>\t\t  <span class=\"br0\">(</span>with-standard-io-syntax<br/>\t\t   <span class=\"br0\">(</span><span class=\"kw1\">print</span> *db* out<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> del-db <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">setf</span> *db* <span class=\"kw1\">nil</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>save-db-to-file<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> del-item <span class=\"br0\">(</span>itm<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>read-db-from-file<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">setf</span> *db* <span class=\"br0\">(</span><span class=\"kw1\">remove</span> itm *db* <span class=\"sy0\">:</span><span class=\"me1\">key</span> #'item-title <span class=\"sy0\">:</span><span class=\"me1\">test</span> #'string<span class=\"sy0\">=</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>save-db-to-file<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> add-item-to-db <span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>read-db-from-file<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>insert-item <span class=\"br0\">(</span>make-item <span class=\"sy0\">:</span><span class=\"me1\">title</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"me1\">category</span> <span class=\"br0\">(</span>second args<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>save-db-to-file<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> help-menu <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span>format t <span class=\"st0\">\"clisp db.lisp ~{~15T~a~^~% ~}\"</span><br/>\t  '<span class=\"br0\">(</span><span class=\"st0\">\"delete &lt;item-name&gt; -------------------  delete an item\"</span><br/>\t    <span class=\"st0\">\"delete-all ---------------------------  delete the database\"</span><br/>            <span class=\"st0\">\"insert &lt;item-name&gt; &lt;item-category&gt; ---  insert an item with its category\"</span><br/>\t    <span class=\"st0\">\"show ---------------------------------  shows the latest inserted item\"</span><br/>\t    <span class=\"st0\">\"show-categories ----------------------  show all categories\"</span>\t    <br/>\t    <span class=\"st0\">\"show-all -----------------------------  show all items\"</span><br/>\t    <span class=\"st0\">\"show-per-category --------------------  show the latest item per category\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> db-cmd-run <span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">cond</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> args<span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"delete\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span>del-item <span class=\"br0\">(</span>second args<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"delete-all\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>del-db<span class=\"br0\">)</span><span class=\"br0\">)</span>\t<br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> args<span class=\"br0\">)</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"insert\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t <span class=\"br0\">(</span>add-item-to-db <span class=\"br0\">(</span>rest args<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"show\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>read-db-from-file<span class=\"br0\">)</span> <span class=\"br0\">(</span>pr<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\t<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"show-categories\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>read-db-from-file<span class=\"br0\">)</span> <span class=\"br0\">(</span>pr-all-categories<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"show-all\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>read-db-from-file<span class=\"br0\">)</span> <span class=\"br0\">(</span>pr-all<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">equal</span> <span class=\"br0\">(</span>first args<span class=\"br0\">)</span> <span class=\"st0\">\"show-per-category\"</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>read-db-from-file<span class=\"br0\">)</span> <span class=\"br0\">(</span>pr-per-category<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>t <span class=\"br0\">(</span>help-menu<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">;; modified https://rosettacode.org/wiki/Command-line_arguments#Common_Lisp</span><br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> db-argv <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">or</span><br/>   #+clisp ext<span class=\"sy0\">:</span>*args*<br/>   #+sbcl <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> sb-ext<span class=\"sy0\">:</span>*posix-argv*<span class=\"br0\">)</span><br/>   #+allegro <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> <span class=\"br0\">(</span>sys<span class=\"sy0\">:</span><span class=\"me1\">command-line-arguments</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>   #+lispworks <span class=\"br0\">(</span><span class=\"kw1\">cdr</span> sys<span class=\"sy0\">:</span>*line-arguments-<span class=\"kw1\">list</span>*<span class=\"br0\">)</span><br/>   <span class=\"kw1\">nil</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>db-cmd-run  <span class=\"br0\">(</span>db-argv<span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 87, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">algorithm</span><span class=\"sy0\">,</span> std.<span class=\"kw4\">string</span><span class=\"sy0\">,</span> std.<span class=\"me1\">conv</span><span class=\"sy0\">,</span> std.<span class=\"me1\">array</span><span class=\"sy0\">,</span><br/>       std.<span class=\"me1\">file</span><span class=\"sy0\">,</span> std.<span class=\"me1\">csv</span><span class=\"sy0\">,</span> std.<span class=\"me1\">datetime</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">private</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">immutable</span> filename <span class=\"sy0\">=</span> <span class=\"st0\">\"simdb.csv\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw4\">struct</span> Item <span class=\"br0\">{</span><br/>        <span class=\"kw4\">string</span> name<span class=\"sy0\">,</span> date<span class=\"sy0\">,</span> category<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> addItem<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> item<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>item.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">auto</span> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">const</span> date <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw2\">cast</span><span class=\"br0\">(</span>DateTime<span class=\"br0\">)</span>Clock.<span class=\"me1\">currTime</span><span class=\"br0\">)</span>.<span class=\"me1\">toISOExtString</span><span class=\"sy0\">;</span><br/>        <span class=\"kw4\">const</span> cat <span class=\"sy0\">=</span> <span class=\"br0\">(</span>item.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> item<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"none\"</span><span class=\"sy0\">;</span><br/>        db <span class=\"sy0\">~=</span> Item<span class=\"br0\">(</span>item<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> date<span class=\"sy0\">,</span> cat<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        store<span class=\"br0\">(</span>db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> printLatest<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       <span class=\"kw4\">auto</span> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>db.<span class=\"me1\">empty</span><span class=\"br0\">)</span><br/>           <span class=\"kw1\">return</span> writeln<span class=\"br0\">(</span><span class=\"st0\">\"No entries in database.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       db.<span class=\"me1\">sort</span><span class=\"sy0\">!</span>q<span class=\"br0\">{</span> a.<span class=\"me1\">date</span> <span class=\"sy0\">&gt;</span> b.<span class=\"me1\">date</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>           <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>item<span class=\"sy0\">;</span> db<span class=\"br0\">)</span><br/>               <span class=\"kw1\">if</span> <span class=\"br0\">(</span>item.<span class=\"me1\">category</span> <span class=\"sy0\">==</span> a<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>                   writefln<span class=\"br0\">(</span><span class=\"st0\">\"%s,\u00a0%s,\u00a0%s\"</span><span class=\"sy0\">,</span> item.<span class=\"me1\">tupleof</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>           writefln<span class=\"br0\">(</span><span class=\"st0\">\"%s,\u00a0%s,\u00a0%s\"</span><span class=\"sy0\">,</span> db<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">tupleof</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> printAll<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">auto</span> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>db.<span class=\"me1\">empty</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">return</span> writeln<span class=\"br0\">(</span><span class=\"st0\">\"No entries in database.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        db.<span class=\"me1\">sort</span><span class=\"sy0\">!</span>q<span class=\"br0\">{</span> a.<span class=\"me1\">date</span> <span class=\"sy0\">&lt;</span> b.<span class=\"me1\">date</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>item<span class=\"sy0\">;</span> db<span class=\"br0\">)</span><br/>            writefln<span class=\"br0\">(</span><span class=\"st0\">\"%s,\u00a0%s,\u00a0%s\"</span><span class=\"sy0\">,</span> item.<span class=\"me1\">tupleof</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    Item<span class=\"br0\">[</span><span class=\"br0\">]</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        Item<span class=\"br0\">[</span><span class=\"br0\">]</span> db<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>filename.<span class=\"me1\">exists</span> <span class=\"sy0\">&amp;&amp;</span> filename.<span class=\"me1\">isFile</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw2\">try</span> <span class=\"br0\">{</span><br/>                <span class=\"kw4\">const</span> text <span class=\"sy0\">=</span> filename.<span class=\"me1\">readText</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>text.<span class=\"me1\">empty</span><span class=\"br0\">)</span><br/>                    db <span class=\"sy0\">=</span> csvReader<span class=\"sy0\">!</span>Item<span class=\"br0\">(</span>text<span class=\"br0\">)</span>.<span class=\"me1\">array</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span> <span class=\"kw2\">catch</span> <span class=\"br0\">(</span>CSVException e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                writeln<span class=\"br0\">(</span>e.<span class=\"me1\">msg</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> db<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> store<span class=\"br0\">(</span><span class=\"kw2\">in</span> Item<span class=\"br0\">[</span><span class=\"br0\">]</span> db<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw4\">auto</span> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>filename<span class=\"sy0\">,</span> <span class=\"st0\">\"w+\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span>item<span class=\"sy0\">;</span> db<span class=\"br0\">)</span><br/>            f.<span class=\"me1\">writefln</span><span class=\"br0\">(</span><span class=\"st0\">\"%s,%s,%s\"</span><span class=\"sy0\">,</span> item.<span class=\"me1\">tupleof</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw4\">void</span> printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        writeln<span class=\"br0\">(</span><br/><span class=\"st_h\">`Usage:<br/>  simdb cmd [categoryName]<br/>\u00a0<br/>  add     add item, followed by optional category<br/>  latest  print last added item(s), followed by optional category<br/>  all     print all<br/>\u00a0<br/>  For instance: add \"some item name\" \"some category name\"`</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>args.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span> args.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">toLower</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">case</span> <span class=\"st0\">\"add\"</span><span class=\"sy0\">:</span>    addItem<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span>     <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"st0\">\"latest\"</span><span class=\"sy0\">:</span> printLatest<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">case</span> <span class=\"st0\">\"all\"</span><span class=\"sy0\">:</span>    printAll<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"kw2\">default</span><span class=\"sy0\">:</span>       printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>      <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Erlang", "loc": 56, "block": "<pre class=\"erlang highlighted_source\">\u00a0<br/>#<span class=\"sy3\">!</span> <span class=\"sy3\">/</span>usr<span class=\"sy3\">/</span>bin<span class=\"sy3\">/</span>env escript<br/>\u00a0<br/><span class=\"sy3\">-</span><span class=\"re2\">compile</span><span class=\"br0\">(</span><span class=\"br0\">{</span>no_auto_import<span class=\"sy1\">,</span><span class=\"br0\">[</span><span class=\"kw3\">date</span><span class=\"sy3\">/</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"st0\">\"add\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span> | <span class=\"re5\">Descriptions</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">add</span><span class=\"br0\">(</span> <span class=\"kw3\">date</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">main</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"st0\">\"add_date\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span> | <span class=\"re5\">Descriptions</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">add</span><span class=\"br0\">(</span> <span class=\"kw3\">date</span>_<span class=\"re3\">internal</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span><span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">main</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"st0\">\"print_latest\"</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">print_latest</span><span class=\"br0\">(</span> <span class=\"re3\">contents</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">main</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"st0\">\"print_latest_for_each\"</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">print_latest_for_each</span><span class=\"br0\">(</span> <span class=\"re3\">contents</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">main</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"st0\">\"print_all_date\"</span><span class=\"sy1\">,</span> <span class=\"re5\">Date</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">print_all_date</span><span class=\"br0\">(</span> <span class=\"kw3\">date</span>_<span class=\"re3\">internal</span><span class=\"br0\">(</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">tokens</span><span class=\"br0\">(</span><span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"st0\">\"-\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re3\">contents</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"re3\">main</span><span class=\"br0\">(</span> <span class=\"re5\">_Error</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">usage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">add</span><span class=\"br0\">(</span> <span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Contents</span> <span class=\"sy3\">=</span> <span class=\"re3\">contents</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">write_file</span><span class=\"br0\">(</span> <span class=\"re3\">file</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/io_lib.html\"><span class=\"kw5\">io_lib</span></a>:<span class=\"re3\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"simple_database_v1.~n~p.~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span><span class=\"br0\">}</span> | <span class=\"re5\">Contents</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"kw3\">date</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">_Time</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/calendar.html\"><span class=\"kw5\">calendar</span></a>:<span class=\"re3\">local_time</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"re5\">Date</span><span class=\"sy1\">.</span>\t<br/>\u00a0<br/><span class=\"kw3\">date</span>_<span class=\"re3\">external</span><span class=\"br0\">(</span> <span class=\"br0\">{</span><span class=\"re5\">Year</span><span class=\"sy1\">,</span> <span class=\"re5\">Month</span><span class=\"sy1\">,</span> <span class=\"re5\">Day</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Year</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Month</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">integer_to_list</span><span class=\"br0\">(</span><span class=\"re5\">Day</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"st0\">\"-\"</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw3\">date</span>_<span class=\"re3\">external</span><span class=\"br0\">(</span> <span class=\"re5\">_Error</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">usage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"kw3\">date</span>_<span class=\"re3\">internal</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re5\">Year</span><span class=\"sy1\">,</span> <span class=\"re5\">Month</span><span class=\"sy1\">,</span> <span class=\"re5\">Day</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">{</span><a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span><span class=\"re5\">Year</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span><span class=\"re5\">Month</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/erlang.html\"><span class=\"kw5\">erlang</span></a>:<span class=\"kw3\">list_to_integer</span><span class=\"br0\">(</span><span class=\"re5\">Day</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"sy1\">;</span> <br/><span class=\"kw3\">date</span>_<span class=\"re3\">internal</span><span class=\"br0\">(</span> <span class=\"re5\">_Error</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">usage</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">file</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"st0\">\"simple_database_contents\"</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">contents</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re3\">contents</span><span class=\"br0\">(</span> <a href=\"http://erlang.org/doc/man/file.html\"><span class=\"kw5\">file</span></a>:<span class=\"re3\">consult</span><span class=\"br0\">(</span><span class=\"re3\">file</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">contents</span><span class=\"br0\">(</span> <span class=\"br0\">{</span>ok<span class=\"sy1\">,</span> <span class=\"br0\">[</span>simple_database_v1<span class=\"sy1\">,</span> <span class=\"re5\">Contents</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"re5\">Contents</span><span class=\"sy1\">;</span><br/><span class=\"re3\">contents</span><span class=\"br0\">(</span> <span class=\"br0\">{</span>error<span class=\"sy1\">,</span> <span class=\"re5\">Error</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"kw1\">when</span> <span class=\"kw4\">is_atom</span><span class=\"br0\">(</span><span class=\"re5\">Error</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">;</span><br/><span class=\"re3\">contents</span><span class=\"br0\">(</span> <span class=\"br0\">{</span>error<span class=\"sy1\">,</span> <span class=\"re5\">_Error</span><span class=\"br0\">}</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Error: ~p corrupt. Starting from scratch~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re3\">file</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">print_all_date</span><span class=\"br0\">(</span> <span class=\"re5\">_Date</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">ok</span><span class=\"sy1\">;</span><br/><span class=\"re3\">print_all_date</span><span class=\"br0\">(</span> <span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Contents</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"br0\">[</span><span class=\"re3\">print_latest</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"re5\">D</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span> <span class=\"br0\">{</span><span class=\"re5\">D</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span><span class=\"br0\">}</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Contents</span><span class=\"sy1\">,</span> <span class=\"re5\">D</span> <span class=\"sy3\">=:=</span> <span class=\"re5\">Date</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">print_latest</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">ok</span><span class=\"sy1\">;</span><br/><span class=\"re3\">print_latest</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"br0\">{</span><span class=\"re5\">Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">Descriptions</span><span class=\"br0\">}</span> | <span class=\"re5\">_T</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~s~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/string.html\"><span class=\"kw5\">string</span></a>:<span class=\"re3\">join</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"kw3\">date</span>_<span class=\"re3\">external</span><span class=\"br0\">(</span><span class=\"re5\">Date</span><span class=\"br0\">)</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span> | <span class=\"re5\">Descriptions</span><span class=\"br0\">]</span><span class=\"sy1\">,</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">print_latest_for_each</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <span class=\"me1\">ok</span><span class=\"sy1\">;</span><br/><span class=\"re3\">print_latest_for_each</span><span class=\"br0\">(</span> <span class=\"re5\">Contents</span> <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<span class=\"re5\">Tags</span> <span class=\"sy3\">=</span> <a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">usort</span><span class=\"br0\">(</span> <span class=\"br0\">[</span><span class=\"re5\">Tag</span> <span class=\"sy3\">||</span> <span class=\"br0\">{</span><span class=\"re5\">_Date</span><span class=\"sy1\">,</span> <span class=\"re5\">Tag</span><span class=\"sy1\">,</span> <span class=\"re5\">_Descriptions</span><span class=\"br0\">}</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Contents</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<span class=\"br0\">[</span><span class=\"re3\">print_latest</span><span class=\"br0\">(</span><span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/lists.html\"><span class=\"kw5\">lists</span></a>:<span class=\"re3\">keyfind</span><span class=\"br0\">(</span><span class=\"re5\">X</span><span class=\"sy1\">,</span> <span class=\"nu0\">2</span><span class=\"sy1\">,</span> <span class=\"re5\">Contents</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy3\">||</span>  <span class=\"re5\">X</span> <span class=\"sy3\">&lt;-</span> <span class=\"re5\">Tags</span><span class=\"br0\">]</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">usage</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Usage: ~p [add | add_date &lt;date&gt;]  tag description ...~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/escript.html\"><span class=\"kw5\">escript</span></a>:<span class=\"re3\">script_name</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Or: ~p [print_latest | print_latest_for_each | print_all_date &lt;date&gt;]~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><a href=\"http://erlang.org/doc/man/escript.html\"><span class=\"kw5\">escript</span></a>:<span class=\"re3\">script_name</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Date format is YYYY-MM-DD~n\"</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"Data stored in ~p~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re3\">file</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>\t<a href=\"http://erlang.org/doc/man/init.html\"><span class=\"kw5\">init</span></a>:<span class=\"re3\">stop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Forth", "loc": 1, "block": "<pre>+: betty 1974.03.03;coworker;reading;\n\n+: geea 1980.01.01;friend;sketch writer;\n\n+: tom 1991.03.07;family member;reading;\n\n+: alice 1987.09.01;coworker;classical music;\n\n+: gammaQ3.14 3045.09.09;friend;watch movies, star walking; \n</pre>"}, {"lang": "Go", "loc": 340, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"encoding/json\"</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"io\"</span><br/>    <span class=\"st0\">\"os\"</span><br/>    <span class=\"st0\">\"sort\"</span><br/>    <span class=\"st0\">\"strings\"</span><br/>    <span class=\"st0\">\"time\"</span><br/>    <span class=\"st0\">\"unicode\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"co1\">// Database record format.  Time stamp and name are required.</span><br/><span class=\"co1\">// Tags and notes are optional.</span><br/><span class=\"kw1\">type</span> Item <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>    Stamp <a href=\"http://golang.org/search?q=time.Time\"><span class=\"kw5\">time.<span class=\"me1\">Time</span></span></a><br/>    Name  <span class=\"kw4\">string</span><br/>    Tags  <span class=\"sy1\">[]</span><span class=\"kw4\">string</span> <span class=\"co2\">`json:\",omitempty\"`</span><br/>    Notes <span class=\"kw4\">string</span>   <span class=\"co2\">`json:\",omitempty\"`</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// Item implements stringer interface</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span><span class=\"nu2\">i</span> <span class=\"sy3\">*</span>Item<span class=\"sy1\">)</span> String<span class=\"sy1\">()</span> <span class=\"kw4\">string</span> <span class=\"sy1\">{</span><br/>    s <span class=\"sy2\">:=</span> <span class=\"nu2\">i</span><span class=\"sy3\">.</span>Stamp<span class=\"sy3\">.</span>Format<span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>ANSIC<span class=\"sy1\">)</span> <span class=\"sy3\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>  Name:  \"</span> <span class=\"sy3\">+</span> <span class=\"nu2\">i</span><span class=\"sy3\">.</span>Name<br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy3\">.</span>Tags<span class=\"sy1\">)</span> &gt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        s <span class=\"sy2\">=</span> fmt<span class=\"sy3\">.</span>Sprintf<span class=\"sy1\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>  Tags: \u00a0%v\"</span><span class=\"sy1\">,</span> s<span class=\"sy1\">,</span> <span class=\"nu2\">i</span><span class=\"sy3\">.</span>Tags<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"nu2\">i</span><span class=\"sy3\">.</span>Notes &gt; <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>        s <span class=\"sy2\">+=</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>  Notes: \"</span> <span class=\"sy3\">+</span> <span class=\"nu2\">i</span><span class=\"sy3\">.</span>Notes<br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> s<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// collection of Items</span><br/><span class=\"kw1\">type</span> db <span class=\"sy1\">[]</span><span class=\"sy3\">*</span>Item<br/>\u00a0<br/><span class=\"co1\">// db implements sort.Interface</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>d db<span class=\"sy1\">)</span> Len<span class=\"sy1\">()</span> <span class=\"kw4\">int</span>           <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>d<span class=\"sy1\">)</span> <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>d db<span class=\"sy1\">)</span> Swap<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> j <span class=\"kw4\">int</span><span class=\"sy1\">)</span>      <span class=\"sy1\">{</span> d<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">],</span> d<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> d<span class=\"sy1\">[</span>j<span class=\"sy1\">],</span> d<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy1\">}</span><br/><span class=\"kw4\">func</span> <span class=\"sy1\">(</span>d db<span class=\"sy1\">)</span> Less<span class=\"sy1\">(</span><span class=\"nu2\">i</span><span class=\"sy1\">,</span> j <span class=\"kw4\">int</span><span class=\"sy1\">)</span> <span class=\"kw4\">bool</span> <span class=\"sy1\">{</span> <span class=\"kw1\">return</span> d<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span><span class=\"sy3\">.</span>Stamp<span class=\"sy3\">.</span>Before<span class=\"sy1\">(</span>d<span class=\"sy1\">[</span>j<span class=\"sy1\">]</span><span class=\"sy3\">.</span>Stamp<span class=\"sy1\">)</span> <span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// hard coded database file name</span><br/><span class=\"kw1\">const</span> fn <span class=\"sy2\">=</span> <span class=\"st0\">\"sdb.json\"</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">1</span> <span class=\"sy1\">{</span><br/>        latest<span class=\"sy1\">()</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">switch</span> os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">case</span> <span class=\"st0\">\"add\"</span><span class=\"sy1\">:</span><br/>        add<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">case</span> <span class=\"st0\">\"latest\"</span><span class=\"sy1\">:</span><br/>        latest<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">case</span> <span class=\"st0\">\"tags\"</span><span class=\"sy1\">:</span><br/>        tags<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">case</span> <span class=\"st0\">\"all\"</span><span class=\"sy1\">:</span><br/>        all<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">case</span> <span class=\"st0\">\"help\"</span><span class=\"sy1\">:</span><br/>        help<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>        usage<span class=\"sy1\">(</span><span class=\"st0\">\"unrecognized command\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> usage<span class=\"sy1\">(</span>err <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">if</span> err &gt; <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"co2\">`usage:  sdb [command] [data]<br/>    where command is one of add, latest, tags, all, or help.`</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> help<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    usage<span class=\"sy1\">(</span><span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"co2\">`<br/>Commands must be in lower case.<br/>If no command is specified, the default command is latest.<br/>\u00a0<br/>Latest prints the latest item.<br/>All prints all items in chronological order.<br/>Tags prints the lastest item for each tag.<br/>Help prints this message.<br/>\u00a0<br/>Add adds data as a new record.  The format is,<br/>\u00a0<br/>  name [tags] [notes]<br/>\u00a0<br/>Name is the name of the item and is required for the add command.<br/>\u00a0<br/>Tags are optional.  A tag is a single word.<br/>A single tag can be specified without enclosing brackets.<br/>Multiple tags can be specified by enclosing them in square brackets.<br/>\u00a0<br/>Text remaining after tags is taken as notes.  Notes do not have to be<br/>enclosed in quotes or brackets.  The brackets above are only showing<br/>that notes are optional.<br/>\u00a0<br/>Quotes may be useful however--as recognized by your operating system shell<br/>or command line--to allow entry of arbitrary text.  In particular, quotes<br/>or escape characters may be needed to prevent the shell from trying to<br/>interpret brackets or other special characters.<br/>\u00a0<br/>Examples:<br/>sdb add Bookends                        // no tags, no notes<br/>sdb add Bookends rock my favorite       // tag: rock, notes: my favorite<br/>sdb add Bookends [rock folk]            // two tags<br/>sdb add Bookends [] \"Simon &amp; Garfunkel\" // notes, no tags<br/>sdb add \"Simon&amp;Garfunkel [artist]\"      // name: Simon&amp;Garfunkel, tag: artist<br/>\u00a0<br/>As shown in the last example, if you use features of your shell to pass<br/>all data as a single string, the item name and tags will still be identified<br/>by separating whitespace.<br/>\u00a0<br/>The database is stored in JSON format in the file \"sdb.json\"<br/>`</span><span class=\"sy1\">)</span>  <br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// load data for read only purposes.</span><br/><span class=\"kw4\">func</span> load<span class=\"sy1\">()</span> <span class=\"sy1\">(</span>db<span class=\"sy1\">,</span> <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    d<span class=\"sy1\">,</span> f<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> open<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">if</span> ok <span class=\"sy1\">{</span><br/>        f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>d<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"no items\"</span><span class=\"sy1\">)</span><br/>            ok <span class=\"sy2\">=</span> <span class=\"kw2\">false</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">return</span> d<span class=\"sy1\">,</span> ok<br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// open database, leave open</span><br/><span class=\"kw4\">func</span> open<span class=\"sy1\">()</span> <span class=\"sy1\">(</span>d db<span class=\"sy1\">,</span> f <span class=\"sy3\">*</span><a href=\"http://golang.org/search?q=os.File\"><span class=\"kw5\">os.<span class=\"me1\">File</span></span></a><span class=\"sy1\">,</span> ok <span class=\"kw4\">bool</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">var</span> err error<br/>    f<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> os<span class=\"sy3\">.</span>OpenFile<span class=\"sy1\">(</span>fn<span class=\"sy1\">,</span> os<span class=\"sy3\">.</span>O_RDWR<span class=\"sy3\">|</span>os<span class=\"sy3\">.</span>O_CREATE<span class=\"sy1\">,</span> <span class=\"nu0\">0666</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"cant open??\"</span><span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    jd <span class=\"sy2\">:=</span> json<span class=\"sy3\">.</span>NewDecoder<span class=\"sy1\">(</span>f<span class=\"sy1\">)</span><br/>    err <span class=\"sy2\">=</span> jd<span class=\"sy3\">.</span>Decode<span class=\"sy1\">(</span>&amp;d<span class=\"sy1\">)</span><br/>    <span class=\"co1\">// EOF just means file was empty.  That's okay with us.</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> &amp;&amp; err <span class=\"sy2\">!=</span> io<span class=\"sy3\">.</span>EOF <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    ok <span class=\"sy2\">=</span> <span class=\"kw2\">true</span><br/>    <span class=\"kw1\">return</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// handle latest command</span><br/><span class=\"kw4\">func</span> latest<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    d<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> load<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    sort<span class=\"sy3\">.</span>Sort<span class=\"sy1\">(</span>d<span class=\"sy1\">)</span><br/>    fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>d<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>d<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// handle all command</span><br/><span class=\"kw4\">func</span> all<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    d<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> load<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    sort<span class=\"sy3\">.</span>Sort<span class=\"sy1\">(</span>d<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> d <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"-----------------------------------\"</span><span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span>i<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"-----------------------------------\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// handle tags command</span><br/><span class=\"kw4\">func</span> tags<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    d<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> load<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// we have to traverse the entire list to collect tags so there</span><br/>    <span class=\"co1\">// is no point in sorting at this point.</span><br/>    <span class=\"co1\">// collect set of unique tags associated with latest item for each</span><br/>    latest <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"kw4\">string</span><span class=\"sy1\">]</span><span class=\"sy3\">*</span>Item<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> item <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> d <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> tag <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> item<span class=\"sy3\">.</span>Tags <span class=\"sy1\">{</span><br/>            li<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> latest<span class=\"sy1\">[</span>tag<span class=\"sy1\">]</span><br/>            <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy3\">||</span> item<span class=\"sy3\">.</span>Stamp<span class=\"sy3\">.</span>After<span class=\"sy1\">(</span>li<span class=\"sy3\">.</span>Stamp<span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>                latest<span class=\"sy1\">[</span>tag<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> item<br/>            <span class=\"sy1\">}</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// invert to set of unique items, associated with subset of tags</span><br/>    <span class=\"co1\">// for which the item is the latest.</span><br/>    <span class=\"kw1\">type</span> itemTags <span class=\"kw4\">struct</span> <span class=\"sy1\">{</span><br/>        item <span class=\"sy3\">*</span>Item<br/>        tags <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><br/>    <span class=\"sy1\">}</span><br/>    inv <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span><span class=\"kw4\">map</span><span class=\"sy1\">[</span><span class=\"sy3\">*</span>Item<span class=\"sy1\">][]</span><span class=\"kw4\">string</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">for</span> tag<span class=\"sy1\">,</span> item <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> latest <span class=\"sy1\">{</span><br/>        inv<span class=\"sy1\">[</span>item<span class=\"sy1\">]</span> <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>inv<span class=\"sy1\">[</span>item<span class=\"sy1\">],</span> tag<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// now we sort just the items we will output</span><br/>    li <span class=\"sy2\">:=</span> <span class=\"kw3\">make</span><span class=\"sy1\">(</span>db<span class=\"sy1\">,</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>inv<span class=\"sy1\">))</span><br/>    <span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">for</span> item <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> inv <span class=\"sy1\">{</span><br/>        li<span class=\"sy1\">[</span><span class=\"nu2\">i</span><span class=\"sy1\">]</span> <span class=\"sy2\">=</span> item<br/>        <span class=\"nu2\">i</span><span class=\"sy2\">++</span><br/>    <span class=\"sy1\">}</span><br/>    sort<span class=\"sy3\">.</span>Sort<span class=\"sy1\">(</span>li<span class=\"sy1\">)</span><br/>    <span class=\"co1\">// finally ready to print</span><br/>    <span class=\"kw1\">for</span> _<span class=\"sy1\">,</span> item <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> li <span class=\"sy1\">{</span><br/>        tags <span class=\"sy2\">:=</span> inv<span class=\"sy1\">[</span>item<span class=\"sy1\">]</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"-----------------------------------\"</span><span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"Latest item with tags\"</span><span class=\"sy1\">,</span> tags<span class=\"sy1\">)</span><br/>        fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span>item<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/>    fmt<span class=\"sy3\">.</span><span class=\"me1\">Println</span><span class=\"sy1\">(</span><span class=\"st0\">\"-----------------------------------\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// handle add command</span><br/><span class=\"kw4\">func</span> add<span class=\"sy1\">()</span> <span class=\"sy1\">{</span> <br/>    <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">)</span> &lt; <span class=\"nu0\">3</span> <span class=\"sy1\">{</span><br/>        usage<span class=\"sy1\">(</span><span class=\"st0\">\"add command requires data\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"kw3\">len</span><span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">)</span> <span class=\"sy3\">==</span> <span class=\"nu0\">3</span> <span class=\"sy1\">{</span><br/>        add1<span class=\"sy1\">()</span><br/>    <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>        add4<span class=\"sy1\">()</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span>   <br/>\u00a0<br/><span class=\"co1\">// add command with one data string.  look for ws as separators.</span><br/><span class=\"kw4\">func</span> add1<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    data <span class=\"sy2\">:=</span> strings<span class=\"sy3\">.</span>TrimLeftFunc<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">],</span> unicode<span class=\"sy3\">.</span>IsSpace<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> data <span class=\"sy3\">==</span> <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// data must have at least some non-whitespace</span><br/>        usage<span class=\"sy1\">(</span><span class=\"st0\">\"invalid name\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span> <br/>    <span class=\"sy1\">}</span><br/>    sep <span class=\"sy2\">:=</span> strings<span class=\"sy3\">.</span>IndexFunc<span class=\"sy1\">(</span>data<span class=\"sy1\">,</span> unicode<span class=\"sy3\">.</span>IsSpace<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> sep &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// data consists only of a name</span><br/>        addItem<span class=\"sy1\">(</span>data<span class=\"sy1\">,</span> <span class=\"kw2\">nil</span><span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    name <span class=\"sy2\">:=</span> data<span class=\"sy1\">[:</span>sep<span class=\"sy1\">]</span><br/>    data <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>TrimLeftFunc<span class=\"sy1\">(</span>data<span class=\"sy1\">[</span>sep<span class=\"sy1\">:],</span> unicode<span class=\"sy3\">.</span>IsSpace<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> data <span class=\"sy3\">==</span> <span class=\"st0\">\"\"</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// nevermind trailing ws, it's still only a name</span><br/>        addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> <span class=\"kw2\">nil</span><span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> data<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"st0\">'['</span> <span class=\"sy1\">{</span><br/>        sep <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span><span class=\"me1\">Index</span><span class=\"sy1\">(</span>data<span class=\"sy1\">,</span> <span class=\"st0\">\"]\"</span><span class=\"sy1\">)</span><br/>        <span class=\"kw1\">if</span> sep &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>            <span class=\"co1\">// close bracketed list for the user.  no notes.</span><br/>            addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> strings<span class=\"sy3\">.</span>Fields<span class=\"sy1\">(</span>data<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">:]),</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            <span class=\"co1\">// brackets make things easy</span><br/>            addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> strings<span class=\"sy3\">.</span>Fields<span class=\"sy1\">(</span>data<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">:</span>sep<span class=\"sy1\">]),</span><br/>                strings<span class=\"sy3\">.</span>TrimLeftFunc<span class=\"sy1\">(</span>data<span class=\"sy1\">[</span>sep<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">:],</span> unicode<span class=\"sy3\">.</span>IsSpace<span class=\"sy1\">))</span><br/>        <span class=\"sy1\">}</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    sep <span class=\"sy2\">=</span> strings<span class=\"sy3\">.</span>IndexFunc<span class=\"sy1\">(</span>data<span class=\"sy1\">,</span> unicode<span class=\"sy3\">.</span>IsSpace<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> sep &lt; <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// remaining word is a tag</span><br/>        addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span>data<span class=\"sy1\">},</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// there's a tag and some data</span><br/>        addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span>data<span class=\"sy1\">[:</span>sep<span class=\"sy1\">]},</span><br/>            strings<span class=\"sy3\">.</span>TrimLeftFunc<span class=\"sy1\">(</span>data<span class=\"sy1\">[</span>sep<span class=\"sy3\">+</span><span class=\"nu0\">1</span><span class=\"sy1\">:],</span> unicode<span class=\"sy3\">.</span>IsSpace<span class=\"sy1\">))</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// add command with multiple strings remaining on command line</span><br/><span class=\"kw4\">func</span> add4<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    name <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">2</span><span class=\"sy1\">]</span><br/>    tag1 <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">3</span><span class=\"sy1\">]</span><br/>    <span class=\"kw1\">if</span> tag1<span class=\"sy1\">[</span><span class=\"nu0\">0</span><span class=\"sy1\">]</span> <span class=\"sy2\">!=</span> <span class=\"st0\">'['</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// no brackets makes things easy</span><br/>        addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span>tag1<span class=\"sy1\">},</span> strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">4</span><span class=\"sy1\">:],</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">))</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">if</span> tag1<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>tag1<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy3\">==</span> <span class=\"st0\">']'</span> <span class=\"sy1\">{</span><br/>        <span class=\"co1\">// tags all in one os.Arg is easy too</span><br/>        addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> strings<span class=\"sy3\">.</span>Fields<span class=\"sy1\">(</span>tag1<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">:</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>tag1<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]),</span><br/>            strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">4</span><span class=\"sy1\">:],</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">))</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// start a list for tags</span><br/>    <span class=\"kw1\">var</span> tags <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><br/>    <span class=\"kw1\">if</span> tag1 &gt; <span class=\"st0\">\"[\"</span> <span class=\"sy1\">{</span><br/>        tags <span class=\"sy2\">=</span> <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">{</span>tag1<span class=\"sy1\">[</span><span class=\"nu0\">1</span><span class=\"sy1\">:]}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">for</span> x<span class=\"sy1\">,</span> tag <span class=\"sy2\">:=</span> <span class=\"kw1\">range</span> os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">4</span><span class=\"sy1\">:]</span> <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">if</span> tag<span class=\"sy1\">[</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>tag<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">]</span> <span class=\"sy2\">!=</span> <span class=\"st0\">']'</span> <span class=\"sy1\">{</span><br/>            tags <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>tags<span class=\"sy1\">,</span> tag<span class=\"sy1\">)</span><br/>        <span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>            <span class=\"co1\">// found end of tag list</span><br/>            <span class=\"kw1\">if</span> tag &gt; <span class=\"st0\">\"]\"</span> <span class=\"sy1\">{</span><br/>                tags <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>tags<span class=\"sy1\">,</span> tag<span class=\"sy1\">[:</span><span class=\"kw3\">len</span><span class=\"sy1\">(</span>tag<span class=\"sy1\">)</span><span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"sy1\">])</span><br/>            <span class=\"sy1\">}</span><br/>            addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> tags<span class=\"sy1\">,</span> strings<span class=\"sy3\">.</span>Join<span class=\"sy1\">(</span>os<span class=\"sy3\">.</span>Args<span class=\"sy1\">[</span><span class=\"nu0\">5</span><span class=\"sy3\">+</span>x<span class=\"sy1\">:],</span> <span class=\"st0\">\" \"</span><span class=\"sy1\">))</span><br/>            <span class=\"kw1\">return</span><br/>        <span class=\"sy1\">}</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// close bracketed list for the user.  no notes.</span><br/>    addItem<span class=\"sy1\">(</span>name<span class=\"sy1\">,</span> tags<span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"co1\">// complete the add command</span><br/><span class=\"kw4\">func</span> addItem<span class=\"sy1\">(</span>name <span class=\"kw4\">string</span><span class=\"sy1\">,</span> tags <span class=\"sy1\">[]</span><span class=\"kw4\">string</span><span class=\"sy1\">,</span> notes <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    db<span class=\"sy1\">,</span> f<span class=\"sy1\">,</span> ok <span class=\"sy2\">:=</span> open<span class=\"sy1\">()</span><br/>    <span class=\"kw1\">if</span> <span class=\"sy3\">!</span>ok <span class=\"sy1\">{</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"kw1\">defer</span> f<span class=\"sy3\">.</span>Close<span class=\"sy1\">()</span><br/>    <span class=\"co1\">// add the item and format JSON</span><br/>    db <span class=\"sy2\">=</span> append<span class=\"sy1\">(</span>db<span class=\"sy1\">,</span> <span class=\"sy3\">&amp;</span>Item<span class=\"sy1\">{</span>time<span class=\"sy3\">.</span><span class=\"me1\">Now</span><span class=\"sy1\">(),</span> name<span class=\"sy1\">,</span> tags<span class=\"sy1\">,</span> notes<span class=\"sy1\">})</span><br/>    sort<span class=\"sy3\">.</span><span class=\"me1\">Sort</span><span class=\"sy1\">(</span>db<span class=\"sy1\">)</span><br/>    js<span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> json<span class=\"sy3\">.</span><span class=\"me1\">MarshalIndent</span><span class=\"sy1\">(</span>db<span class=\"sy1\">,</span> <span class=\"st0\">\"\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"  \"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    <span class=\"co1\">// time to overwrite the file</span><br/>    <span class=\"kw1\">if</span> _<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> f<span class=\"sy3\">.</span>Seek<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">,</span> <span class=\"nu0\">0</span><span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>        <span class=\"kw1\">return</span><br/>    <span class=\"sy1\">}</span><br/>    f<span class=\"sy3\">.</span>Truncate<span class=\"sy1\">(</span><span class=\"nu0\">0</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">if</span> _<span class=\"sy1\">,</span> err <span class=\"sy2\">=</span> f<span class=\"sy3\">.</span>Write<span class=\"sy1\">(</span>js<span class=\"sy1\">);</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span> <span class=\"sy1\">{</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 129, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Monad\"><span class=\"kw4\">Monad</span></a><span class=\"sy0\">.</span>State<br/><span class=\"kw1\">import</span> Data<span class=\"sy0\">.</span>List <span class=\"br0\">(</span>sortBy<span class=\"sy0\">,</span> nub<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Environment <span class=\"br0\">(</span>getArgs<span class=\"sy0\">,</span> getProgName<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Directory <span class=\"br0\">(</span>doesFileExist<span class=\"br0\">)</span><br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span>openFile<span class=\"sy0\">,</span> hGetContents<span class=\"sy0\">,</span> hClose<span class=\"sy0\">,</span> IOMode<span class=\"br0\">(</span><span class=\"sy0\">..</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>    Handle<span class=\"sy0\">,</span> hPutStrLn<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- for storing dates</span><br/><span class=\"kw1\">data</span> Date <span class=\"sy0\">=</span> Date <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Integer\"><span class=\"kw4\">Integer</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a> <span class=\"kw1\">deriving</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Show\"><span class=\"kw4\">Show</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Read\"><span class=\"kw4\">Read</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Eq\"><span class=\"kw4\">Eq</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ord\"><span class=\"kw4\">Ord</span></a><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- for storing database items</span><br/><span class=\"kw1\">data</span> Item <span class=\"sy0\">=</span> Item    <span class=\"br0\">{</span>description <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><br/>                    <span class=\"sy0\">,</span>category    <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><br/>                    <span class=\"sy0\">,</span>date        <span class=\"sy0\">::</span> Date<br/>                    <span class=\"sy0\">,</span>optional    <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>                    <span class=\"kw1\">deriving</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Show\"><span class=\"kw4\">Show</span></a><span class=\"sy0\">,</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Read\"><span class=\"kw4\">Read</span></a><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- a state monad transformer which wraps IO actions.</span><br/><span class=\"co1\">-- the database (state) is passed implicitly between functions.</span><br/><span class=\"kw1\">type</span> ItemList a <span class=\"sy0\">=</span> StateT <span class=\"br0\">[</span>Item<span class=\"br0\">]</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> a<br/>\u00a0<br/><span class=\"co1\">-- add an item to the database</span><br/>addItem <span class=\"sy0\">::</span> Item <span class=\"sy0\">-&gt;</span> ItemList <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>addItem i <span class=\"sy0\">=</span> modify <span class=\"br0\">(</span><span class=\"sy0\">++</span> <span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- get the newest of a list of items</span><br/>latest <span class=\"sy0\">::</span> <span class=\"br0\">[</span>Item<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <span class=\"br0\">[</span>Item<span class=\"br0\">]</span><br/>latest <span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>latest <span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"sy0\">=</span> <span class=\"br0\">[</span>x<span class=\"br0\">]</span><br/>latest xs <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:take\"><span class=\"kw3\">take</span></a> <span class=\"nu0\">1</span> <span class=\"sy0\">$</span> sortBy newer xs<br/>\u00a0<br/><span class=\"co1\">-- compare two items to see which one is newer</span><br/>newer <span class=\"sy0\">::</span> Item <span class=\"sy0\">-&gt;</span> Item <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Ordering\"><span class=\"kw4\">Ordering</span></a><br/>newer a b <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:compare\"><span class=\"kw3\">compare</span></a> <span class=\"br0\">(</span>date b<span class=\"br0\">)</span> <span class=\"br0\">(</span>date a<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- list all different categories (no duplicates)</span><br/>categories <span class=\"sy0\">::</span> ItemList <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span><br/>categories <span class=\"sy0\">=</span> liftM <span class=\"br0\">(</span>nub <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concatMap\"><span class=\"kw3\">concatMap</span></a> category<span class=\"br0\">)</span> get<br/>\u00a0<br/><span class=\"co1\">-- list only the items with the given category tag</span><br/>filterByCategory <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a> <span class=\"sy0\">-&gt;</span> ItemList <span class=\"br0\">[</span>Item<span class=\"br0\">]</span><br/>filterByCategory c <span class=\"sy0\">=</span> liftM <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:filter\"><span class=\"kw3\">filter</span></a> <span class=\"br0\">(</span>\\i <span class=\"sy0\">-&gt;</span> c `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:elem\"><span class=\"kw3\">elem</span></a>` category i<span class=\"br0\">)</span><span class=\"br0\">)</span> get<br/>\u00a0<br/><span class=\"co1\">-- get the newest of all items</span><br/>lastOfAll <span class=\"sy0\">::</span> ItemList <span class=\"br0\">[</span>Item<span class=\"br0\">]</span><br/>lastOfAll <span class=\"sy0\">=</span> liftM latest get<br/>\u00a0<br/><span class=\"co1\">-- get the newest item in each category</span><br/>latestByCategory <span class=\"sy0\">::</span> ItemList <span class=\"br0\">[</span>Item<span class=\"br0\">]</span><br/>latestByCategory <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    cats <span class=\"sy0\">&lt;-</span> categories<br/>    filt <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM\"><span class=\"kw3\">mapM</span></a> filterByCategory cats<br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:concatMap\"><span class=\"kw3\">concatMap</span></a> latest filt<br/>\u00a0<br/><span class=\"co1\">-- sort all items chronologically, newest first</span><br/>sortByDate <span class=\"sy0\">::</span> ItemList <span class=\"br0\">[</span>Item<span class=\"br0\">]</span><br/>sortByDate <span class=\"sy0\">=</span> liftM <span class=\"br0\">(</span>sortBy newer<span class=\"br0\">)</span> get<br/>\u00a0<br/>toScreen <span class=\"sy0\">::</span> Item <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>toScreen <span class=\"br0\">(</span>Item desc cats <span class=\"br0\">(</span>Date y m d<span class=\"br0\">)</span> opt<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span><br/>    <span class=\"st0\">\"Description:<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">++</span> desc <span class=\"sy0\">++</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>Categories:<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> cats <span class=\"sy0\">++</span><br/>    <span class=\"st0\">\"<span class=\"es0\">\\n</span>Date:<span class=\"es0\">\\t</span><span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> y <span class=\"sy0\">++</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> m <span class=\"sy0\">++</span> <span class=\"st0\">\"-\"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> d <span class=\"sy0\">++</span><br/>    <span class=\"st0\">\"<span class=\"es0\">\\n</span>Other info:<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">++</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a> opt<br/>\u00a0<br/><span class=\"co1\">-- command line argument handling</span><br/><span class=\"co1\">-- if the user called the program with the option \"add\", the</span><br/><span class=\"co1\">-- new item is returned to main so that it can be saved to disk.</span><br/><span class=\"co1\">-- the argument \"opt\" is a list.</span><br/>arguments <span class=\"sy0\">::</span> ItemList <span class=\"br0\">[</span>Item<span class=\"br0\">]</span><br/>arguments <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    args <span class=\"sy0\">&lt;-</span> liftIO getArgs<br/>    <span class=\"kw1\">case</span> args <span class=\"kw1\">of</span><br/>        <span class=\"br0\">(</span><span class=\"st0\">\"add\"</span>:desc:cat:year:month:day:opt<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">do</span><br/>            <span class=\"kw1\">let</span> newItem <span class=\"sy0\">=</span> parseItem args<br/>            addItem newItem<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">[</span>newItem<span class=\"br0\">]</span><br/>        <span class=\"br0\">(</span><span class=\"st0\">\"latest\"</span>:<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">do</span><br/>            item <span class=\"sy0\">&lt;-</span> lastOfAll<br/>            lift <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> toScreen item<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">(</span><span class=\"st0\">\"category\"</span>:<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">do</span><br/>            items <span class=\"sy0\">&lt;-</span> latestByCategory<br/>            lift <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> toScreen items<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">(</span><span class=\"st0\">\"all\"</span>:<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">do</span><br/>            sorted <span class=\"sy0\">&lt;-</span> sortByDate<br/>            lift <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> toScreen sorted<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>        <span class=\"sy0\">_</span> <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">do</span><br/>            lift usage<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>\u00a0<br/>parseItem <span class=\"sy0\">::</span> <span class=\"br0\">[</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:String\"><span class=\"kw4\">String</span></a><span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> Item<br/>parseItem <span class=\"br0\">(</span><span class=\"sy0\">_</span>:desc:cat:year:month:day:opt<span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    Item <span class=\"br0\">{</span>description <span class=\"sy0\">=</span> desc<span class=\"sy0\">,</span> category <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:words\"><span class=\"kw3\">words</span></a> cat<span class=\"sy0\">,</span><br/>        date <span class=\"sy0\">=</span> Date <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> year<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> month<span class=\"br0\">)</span> <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> day<span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>        optional <span class=\"sy0\">=</span> opt<span class=\"br0\">}</span><br/>\u00a0<br/>usage <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>usage <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    progName <span class=\"sy0\">&lt;-</span> getProgName<br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span> <span class=\"st0\">\"Usage: \"</span> <span class=\"sy0\">++</span> progName <span class=\"sy0\">++</span> <span class=\"st0\">\" add|all|category|latest <span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\O</span>PTIONS<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>add <span class=\"es0\">\\\"</span>description<span class=\"es0\">\\\"</span> <span class=\"es0\">\\\"</span>category1 category2<span class=\"es0\">\\\"</span>... <span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\y</span>ear month day [<span class=\"es0\">\\\"</span>note1<span class=\"es0\">\\\"</span> <span class=\"es0\">\\\"</span>note2<span class=\"es0\">\\\"</span>...]<span class=\"es0\">\\n</span><span class=\"es0\">\\t</span>Adds a new record <span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\t</span>o the database.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>all<span class=\"es0\">\\n</span><span class=\"es0\">\\t</span>Prints all items in chronological <span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\o</span>rder.<span class=\"es0\">\\n</span><span class=\"es0\">\\n</span>category<span class=\"es0\">\\n</span><span class=\"es0\">\\t</span>Prints the latest item for each category.<span class=\"es0\">\\</span><br/>        <span class=\"es0\">\\\\</span>n<span class=\"es0\">\\n</span>latest<span class=\"es0\">\\n</span><span class=\"es0\">\\t</span>Prints the latest item.\"</span><br/>\u00a0<br/><span class=\"co1\">-- the program creates, reads and writes to a file in the current directory</span><br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    progName <span class=\"sy0\">&lt;-</span> getProgName<br/>    <span class=\"kw1\">let</span> fileName <span class=\"sy0\">=</span> progName <span class=\"sy0\">++</span> <span class=\"st0\">\".db\"</span><br/>    e <span class=\"sy0\">&lt;-</span> doesFileExist fileName<br/>    <span class=\"kw1\">if</span> e<br/>        <span class=\"kw1\">then</span> <span class=\"kw1\">do</span><br/>            hr <span class=\"sy0\">&lt;-</span> openFile fileName ReadMode<br/>            f <span class=\"sy0\">&lt;-</span> hGetContents hr<br/>            v <span class=\"sy0\">&lt;-</span> evalStateT arguments <span class=\"br0\">(</span><a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:map\"><span class=\"kw3\">map</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:read\"><span class=\"kw3\">read</span></a> <span class=\"sy0\">$</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:lines\"><span class=\"kw3\">lines</span></a> f<span class=\"br0\">)</span><br/>            hClose hr <span class=\"co1\">-- must be called after working with contents!</span><br/>            hw <span class=\"sy0\">&lt;-</span> openFile fileName AppendMode<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span>hPutStrLn hw <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a><span class=\"br0\">)</span> v<br/>            hClose hw<br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">do</span><br/>            v <span class=\"sy0\">&lt;-</span> evalStateT arguments <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>            hw <span class=\"sy0\">&lt;-</span> openFile fileName WriteMode<br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span>hPutStrLn hw <span class=\"sy0\">.</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:show\"><span class=\"kw3\">show</span></a><span class=\"br0\">)</span> v<br/>            hClose hw<br/>\u00a0</pre>"}, {"lang": "J", "loc": 109, "block": "<pre class=\"j highlighted_source\">HELP=: <span class=\"nu0\">0</span>\u00a0:<span class=\"nu0\">0</span><br/>Commands:<br/>\u00a0<br/>DBNAME add DATA<br/>DBNAME display the latest entry<br/>DBNAME display the latest entry where CATEGORY contains WORD<br/>DBNAME display all entries<br/>DBNAME display all entries order by CATEGORY<br/>\u00a0<br/><span class=\"nu0\">1</span><span class=\"sy0\">)</span> The first add with new DBNAME assign category names.<br/><span class=\"nu0\">2</span><span class=\"sy0\">)</span> lower case arguments verbatim.<br/><span class=\"nu0\">3</span><span class=\"sy0\">)</span> UPPER CASE: substitute your values.<br/>\u00a0<br/>Examples, having saved this program as a file named s\u00a0:<br/>$ jconsole s simple.db display all entries<br/>$ jconsole s simple.db add \"first field\" \"2nd field\"<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>Q=: <span class=\"st_h\">''</span><span class=\"st_h\">''</span>                                <span class=\"co1\">NB. quote character</span><br/>time=: <span class=\"nu0\">6</span>!:<span class=\"nu0\">0</span>@:<span class=\"sy0\">(</span><span class=\"st_h\">'YYYY-MM-DD:hh:mm:ss.sss'</span>\"<span class=\"nu0\">_</span><span class=\"sy0\">)</span><br/>\u00a0<br/>embed=: &gt;@:{<a class=\"__cf_email__\" data-cfemail=\"436d03\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:[ , ] , &gt;@:{:@:[<br/>assert <span class=\"st_h\">'(x+y)'</span> -: <span class=\"st_h\">'()'</span> embed <span class=\"st_h\">'x+y'</span><br/>\u00a0<br/>Duplicate=: <span class=\"nu0\">1</span>\u00a0:<span class=\"st_h\">'#~ m&amp;= + 1 #~ #'</span><br/>assert <span class=\"nu0\">0</span> <span class=\"nu0\">1</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> -: <span class=\"nu0\">3</span> Duplicate i.<span class=\"nu0\">5</span><br/>\u00a0<br/>prepare=: LF ,~ [: }:@:; <span class=\"sy0\">(</span>Q;Q,<span class=\"st_h\">';'</span><span class=\"sy0\">)</span>&amp;<a class=\"__cf_email__\" data-cfemail=\"20454d42454460\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:<span class=\"sy0\">(</span>Q Duplicate<span class=\"sy0\">)</span>&amp;.&gt;@:<span class=\"sy0\">(</span>;~ time<span class=\"sy0\">)</span><br/>assert <span class=\"sy0\">(</span>-: }<a class=\"__cf_email__\" data-cfemail=\"8ea0ce\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:\"<a class=\"__cf_email__\" data-cfemail=\"cfe18f\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:}:@:prepare<span class=\"sy0\">)</span> <span class=\"st_h\">'boxed'</span>;<span class=\"st_h\">''</span>;<span class=\"st_h\">'li'</span><span class=\"st_h\">'st'</span>;<span class=\"st_h\">'of'</span>;<span class=\"st_h\">''</span><span class=\"st_h\">'strings'</span><span class=\"st_h\">''</span><br/>\u00a0<br/>categorize=: dyad define<br/>i=. <span class=\"kw2\">x</span> i. <span class=\"kw2\">y</span><br/><span class=\"kw1\">if.</span> <span class=\"sy0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">(</span>~: #<span class=\"sy0\">)</span> i<span class=\"sy0\">)</span> +. i <span class=\"sy0\">(</span>= #<span class=\"sy0\">)</span> <span class=\"kw2\">x</span> <span class=\"kw1\">do.</span><br/> smoutput <span class=\"st_h\">'choose 1 of'</span><br/> smoutput <span class=\"kw2\">x</span><br/> exit <span class=\"nu0\">1</span><br/><span class=\"kw1\">end.</span><br/>{. i                                  <span class=\"co1\">NB. \"index of\" frame has rank 1.</span><br/><span class=\"sy0\">)</span><br/>assert <span class=\"nu0\">0</span> -: <span class=\"st_h\">'abc'</span> categorize <span class=\"st_h\">'a'</span><br/>\u00a0<br/>loadsdb=: <span class=\"sy0\">(</span>&lt;<span class=\"st_h\">'time'</span><span class=\"sy0\">)</span> <span class=\"sy0\">(</span>&lt;<span class=\"nu0\">0</span> <span class=\"nu0\">0</span><span class=\"sy0\">)</span>} \".;.<span class=\"nu0\">_2</span>@:<span class=\"sy0\">(</span><span class=\"nu0\">1</span>!:<span class=\"nu0\">1</span><span class=\"sy0\">)</span><br/>\u00a0<br/>Dispatch=: conjunction define<br/>help<br/>:<br/>commands=. <span class=\"kw2\">y</span><br/>command=. {. commands<br/><span class=\"kw2\">x</span> <span class=\"sy0\">(</span><span class=\"kw2\">u</span>`<a class=\"__cf_email__\" data-cfemail=\"7018151c00305e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">(</span>command<span class=\"sy0\">(</span>i.~\u00a0;:<span class=\"sy0\">)</span><span class=\"kw2\">n</span><span class=\"sy0\">))</span> }.commands<br/><span class=\"sy0\">)</span><br/>\u00a0<br/><span class=\"co1\">NB. the long fork in show groups (\": #~ (1 1 embed (1j1 }:@:# (1 #~ #))))</span><br/>show=: <a class=\"__cf_email__\" data-cfemail=\"087b65677d7c787d7c48\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:<span class=\"sy0\">(</span>\": #~ <span class=\"nu0\">1</span> <span class=\"nu0\">1</span> embed <span class=\"nu0\">1j1</span> }:@:# <span class=\"nu0\">1</span> #~ #<span class=\"sy0\">)</span><br/>\u00a0<br/>in=: +./@:E.<br/>assert <span class=\"st_h\">'the'</span>    in<span class=\"st_h\">'quick brown fox jumps over the lazy dog'</span><br/>assert <span class=\"st_h\">'the'</span><a class=\"__cf_email__\" data-cfemail=\"d5f8fb95\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:in<span class=\"st_h\">'QUICK BROWN FOX JUMPS OVER THE LAZY DOG'</span><br/>\u00a0<br/>where=: dyad define<br/><span class=\"st_h\">'category contains word'</span>=. <span class=\"nu0\">3</span> {. <span class=\"kw2\">y</span><br/><span class=\"kw1\">if.</span> <span class=\"st_h\">'contains'</span> <a class=\"__cf_email__\" data-cfemail=\"173a3957\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:-: contains <span class=\"kw1\">do.</span><br/> help<span class=\"st_h\">''</span><br/> exit <span class=\"nu0\">1</span><br/><span class=\"kw1\">end.</span><br/>i=. <span class=\"kw2\">x</span> <span class=\"sy0\">(</span>{<a class=\"__cf_email__\" data-cfemail=\"87a9c7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:[ categorize &lt;@:]<span class=\"sy0\">)</span> category<br/>j=. {: I.\u00a0; word&amp;in&amp;.&gt; i {\"<span class=\"nu0\">1</span> <span class=\"kw2\">x</span><br/><span class=\"kw1\">if.</span> <span class=\"nu0\">0</span> <span class=\"sy0\">(</span>= #<span class=\"sy0\">)</span> j <span class=\"kw1\">do.</span><br/> smoutput <span class=\"st_h\">'no matches'</span><br/><span class=\"kw1\">else.</span><br/> <span class=\"kw2\">x</span> <span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"2053484f5760\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:{~ <span class=\"nu0\">0</span>&amp;,<span class=\"sy0\">)</span> j<br/><span class=\"kw1\">end.</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>entry=: <span class=\"nu0\">4</span>\u00a0: <span class=\"nu0\">0</span><br/><span class=\"kw1\">if.</span> a: = <span class=\"kw2\">y</span> <span class=\"kw1\">do.</span><br/> <a class=\"__cf_email__\" data-cfemail=\"fa8992958dba\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:<span class=\"sy0\">(</span>{. ,: {:<span class=\"sy0\">)</span> <span class=\"kw2\">x</span><br/><span class=\"kw1\">else.</span><br/> <span class=\"kw2\">x</span> <span class=\"st_h\">''</span>`where Dispatch<span class=\"st_h\">'where'</span> <span class=\"kw2\">y</span><br/><span class=\"kw1\">end.</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>latest=: <span class=\"st_h\">''</span>`entry Dispatch<span class=\"st_h\">'entry'</span><br/>the=: <span class=\"st_h\">''</span>`latest Dispatch<span class=\"st_h\">'latest'</span><br/>\u00a0<br/>by=: <span class=\"nu0\">4</span>\u00a0: <span class=\"nu0\">0</span><br/>i=. <span class=\"kw2\">x</span> <span class=\"sy0\">(</span>categorize~ {.<span class=\"sy0\">)</span>~ <span class=\"kw2\">y</span><br/>show <span class=\"sy0\">(</span>{. , <span class=\"sy0\">(</span>/: i&amp;{\"<span class=\"nu0\">1</span><span class=\"sy0\">)</span>@:}.<span class=\"sy0\">)</span> <span class=\"kw2\">x</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>order=: <span class=\"st_h\">''</span>`by Dispatch<span class=\"st_h\">'by'</span><br/>\u00a0<br/>entries=: <span class=\"nu0\">4</span>\u00a0: <span class=\"nu0\">0</span><br/><span class=\"kw1\">if.</span> a: = <span class=\"kw2\">y</span> <span class=\"kw1\">do.</span><br/> show <span class=\"kw2\">x</span><br/><span class=\"kw1\">else.</span><br/> <span class=\"kw2\">x</span> <span class=\"st_h\">''</span>`order Dispatch<span class=\"st_h\">'order'</span> <span class=\"kw2\">y</span><br/><span class=\"kw1\">end.</span><br/><span class=\"sy0\">)</span><br/>\u00a0<br/>all=: <span class=\"st_h\">''</span>`entries Dispatch<span class=\"st_h\">'entries'</span><br/>\u00a0<br/>help=: <a class=\"__cf_email__\" data-cfemail=\"46352b29333236333206\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>:<span class=\"sy0\">(</span>HELP\"<span class=\"nu0\">_</span><span class=\"sy0\">)</span><br/>add=: <span class=\"nu0\">1</span>!:<span class=\"nu0\">3</span>~ prepare                     <span class=\"co1\">NB. minimal---no error tests</span><br/>display=: <span class=\"sy0\">(</span>the`all Dispatch<span class=\"st_h\">'the all'</span>~ loadsdb<span class=\"sy0\">)</span>~  <span class=\"co1\">NB. load the simple db for some sort of display</span><br/>\u00a0<br/><span class=\"sy0\">(</span>{. add`display Dispatch<span class=\"st_h\">'add display'</span> }.<span class=\"sy0\">)</span>@:<span class=\"sy0\">(</span><span class=\"nu0\">2</span>&amp;}.<span class=\"sy0\">)</span>ARGV<br/>\u00a0<br/>exit <span class=\"nu0\">0</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 125, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.text.*</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">import</span> <span class=\"co2\">java.util.*</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> SimpleDatabase <span class=\"br0\">{</span><br/>\u00a0<br/>    <span class=\"kw1\">final</span> <span class=\"kw1\">static</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> filename <span class=\"sy0\">=</span> <span class=\"st0\">\"simdb.csv\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>args.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span> <span class=\"sy0\">||</span> args.<span class=\"me1\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">toLowerCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">\"add\"</span><span class=\"sy0\">:</span><br/>                addItem<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">\"latest\"</span><span class=\"sy0\">:</span><br/>                printLatest<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">case</span> <span class=\"st0\">\"all\"</span><span class=\"sy0\">:</span><br/>                printAll<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">default</span><span class=\"sy0\">:</span><br/>                printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"kw1\">break</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw1\">class</span> Item <span class=\"kw1\">implements</span> Comparable<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> name<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> date<span class=\"sy0\">;</span><br/>        <span class=\"kw1\">final</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> category<span class=\"sy0\">;</span><br/>\u00a0<br/>        Item<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> n, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> d, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> c<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            name <span class=\"sy0\">=</span> n<span class=\"sy0\">;</span><br/>            date <span class=\"sy0\">=</span> d<span class=\"sy0\">;</span><br/>            category <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        @Override<br/>        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> compareTo<span class=\"br0\">(</span>Item item<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> date.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>item.<span class=\"me1\">date</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>\u00a0<br/>        @Override<br/>        <span class=\"kw1\">public</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">return</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">\"%s,%s,%s%n\"</span>, name, date, category<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> addItem<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> input<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>input.<span class=\"me1\">length</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        List<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asimpledateformat+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SimpleDateFormat</span></a> sdf <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asimpledateformat+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">SimpleDateFormat</span></a><span class=\"br0\">(</span><span class=\"st0\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> date <span class=\"sy0\">=</span> sdf.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Adate+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Date</span></a><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> cat <span class=\"sy0\">=</span> <span class=\"br0\">(</span>input.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> input<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"none\"</span><span class=\"sy0\">;</span><br/>        db.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> Item<span class=\"br0\">(</span>input<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, date, cat<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        store<span class=\"br0\">(</span>db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> printLatest<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        List<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>db.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"No entries in database.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acollections+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Collections</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a.<span class=\"me1\">length</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span>Item item <span class=\"sy0\">:</span> db<span class=\"br0\">)</span><br/>                <span class=\"kw1\">if</span> <span class=\"br0\">(</span>item.<span class=\"me1\">category</span>.<span class=\"me1\">equals</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>item<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>db.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> printAll<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        List<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>db.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"No entries in database.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"kw1\">return</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Acollections+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Collections</span></a>.<span class=\"me1\">sort</span><span class=\"br0\">(</span>db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>Item item <span class=\"sy0\">:</span> db<span class=\"br0\">)</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>item<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> List<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        List<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> db <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ArrayList<span class=\"sy0\">&lt;&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">try</span> <span class=\"br0\">(</span>Scanner sc <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Scanner<span class=\"br0\">(</span><span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">while</span> <span class=\"br0\">(</span>sc.<span class=\"me1\">hasNext</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> item <span class=\"sy0\">=</span> sc.<span class=\"me1\">nextLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\",\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                db.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"kw1\">new</span> Item<span class=\"br0\">(</span>item<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, item<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, item<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">return</span> db<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> store<span class=\"br0\">(</span>List<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> db<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">try</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afilewriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileWriter</span></a> fw <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afilewriter+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">FileWriter</span></a><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">for</span> <span class=\"br0\">(</span>Item item <span class=\"sy0\">:</span> db<span class=\"br0\">)</span><br/>                fw.<span class=\"me1\">write</span><span class=\"br0\">(</span>item.<span class=\"me1\">toString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span> <span class=\"kw1\">catch</span> <span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Aioexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">IOException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span>e<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">private</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>         <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"Usage:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>         <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"  simdb cmd [categoryName]\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>         <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"  add     add item, followed by optional category\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>         <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"  latest  print last added item(s), followed by \"</span><br/>                 <span class=\"sy0\">+</span> <span class=\"st0\">\"optional category\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>         <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"  all     print all\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>         <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"  For instance: add <span class=\"es0\">\\\"</span>some item name<span class=\"es0\">\\\"</span> \"</span><br/>                 <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\\"</span>some category name<span class=\"es0\">\\\"</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Kotlin", "loc": 110, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.2.31</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">SimpleDateFormat</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Date</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">IOException</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> file <span class=\"sy0\">=</span> File<span class=\"br0\">(</span><span class=\"st0\">\"simdb.csv\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">class</span></a> Item<span class=\"br0\">(</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> name<span class=\"sy0\">:</span> String, <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> date<span class=\"sy0\">:</span> String,<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> category<span class=\"sy0\">:</span> String<br/><span class=\"br0\">)</span> <span class=\"sy0\">:</span> Comparable<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun compareTo<span class=\"br0\">(</span>other<span class=\"sy0\">:</span> Item<span class=\"br0\">)</span> <span class=\"sy0\">=</span> date.<span class=\"me1\">compareTo</span><span class=\"br0\">(</span>other.<span class=\"me1\">date</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">override</span></a> fun toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"$name, $date, $category\"</span> <br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun addItem<span class=\"br0\">(</span>input<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>input.<span class=\"me1\">size</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> sdf <span class=\"sy0\">=</span> SimpleDateFormat<span class=\"br0\">(</span><span class=\"st0\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> date <span class=\"sy0\">=</span> sdf.<span class=\"me1\">format</span><span class=\"br0\">(</span>Date<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> cat <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>input.<span class=\"me1\">size</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span> input<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"st0\">\"none\"</span><br/>    store<span class=\"br0\">(</span>Item<span class=\"br0\">(</span>input<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, date, cat<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun printLatest<span class=\"br0\">(</span>a<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>db.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"No entries in database.\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\">// no need to sort db as items are added chronologically</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>a.<span class=\"me1\">size</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> found <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">false</span></a><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>item in db.<span class=\"me1\">reversed</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>item.<span class=\"me1\">category</span> <span class=\"sy0\">==</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>                println<span class=\"br0\">(</span>item<span class=\"br0\">)</span><br/>                found <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">true</span></a><br/>                break<br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><span class=\"sy0\">!</span>found<span class=\"br0\">)</span> println<span class=\"br0\">(</span><span class=\"st0\">\"There are no items for category '${a[1]}'\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> println<span class=\"br0\">(</span>db<span class=\"br0\">[</span>db.<span class=\"me1\">lastIndex</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun printAll<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> db <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>db.<span class=\"me1\">isEmpty</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"No entries in database.\"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    <span class=\"co1\">// no need to sort db as items are added chronologically</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>item in db<span class=\"br0\">)</span> println<span class=\"br0\">(</span>item<span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> MutableList<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> db <span class=\"sy0\">=</span> mutableListOf<span class=\"sy0\">&lt;</span>Item<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span>    <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span><br/>        file.<span class=\"me1\">forEachLine</span> <span class=\"br0\">{</span> line -<span class=\"sy0\">&gt;</span><br/>            <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> item <span class=\"sy0\">=</span> line.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span><br/>            db.<span class=\"me1\">add</span><span class=\"br0\">(</span>Item<span class=\"br0\">(</span>item<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, item<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, item<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">(</span>e<span class=\"sy0\">:</span> IOException<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span>e<span class=\"br0\">)</span><br/>        System.<span class=\"me1\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a> db<br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun store<span class=\"br0\">(</span>item<span class=\"sy0\">:</span> Item<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span><br/>        file.<span class=\"me1\">appendText</span><span class=\"br0\">(</span><span class=\"st0\">\"$item<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">(</span>e<span class=\"sy0\">:</span> IOException<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        println<span class=\"br0\">(</span>e<span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    println<span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"st0\">\"<br/>        |Usage:<br/>        |  simdb cmd [categoryName]<br/>        |  add     add item, followed by optional category<br/>        |  latest  print last added item(s), followed by optional category<br/>        |  all     print all<br/>        |  For instance: add \"</span>some item name<span class=\"st0\">\" \"</span>some category name<span class=\"st0\">\"<br/>    \"</span><span class=\"st0\">\"\"</span>.<span class=\"me1\">trimMargin</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>args.<span class=\"me1\">size</span> <span class=\"sy0\">!</span>in <span class=\"nu0\">1</span>..<span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">return</span></a><br/>    <span class=\"br0\">}</span><br/>    file.<span class=\"me1\">createNewFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span>  <span class=\"co1\">// create file if it doesn't already exist</span><br/>    when <span class=\"br0\">(</span>args<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>.<span class=\"me1\">toLowerCase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"add\"</span>    -<span class=\"sy0\">&gt;</span> addItem<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>        <span class=\"st0\">\"latest\"</span> -<span class=\"sy0\">&gt;</span> printLatest<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>        <span class=\"st0\">\"all\"</span>    -<span class=\"sy0\">&gt;</span> printAll<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a>     -<span class=\"sy0\">&gt;</span> printUsage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl", "loc": 118, "block": "<pre class=\"perl highlighted_source\"><span class=\"co1\">#!/usr/bin/perl</span><br/><span class=\"kw2\">use</span> warnings<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> strict<span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> feature <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">{</span> say <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">use</span> JSON<span class=\"sy0\">::</span><span class=\"me2\">PP</span><span class=\"sy0\">;</span><br/><span class=\"kw2\">use</span> Time<span class=\"sy0\">::</span><span class=\"me2\">Piece</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">use</span> constant <span class=\"br0\">{</span><br/>    NAME     <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>    CATEGORY <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><br/>    DATE     <span class=\"sy0\">=&gt;</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span><br/>    DB       <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">'simple-db'</span><span class=\"sy0\">,</span><br/><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$operation</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a> <span class=\"sy0\">//</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">%dispatch</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><br/>    n <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;add_new</span><span class=\"sy0\">,</span><br/>    l <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;print_latest</span><span class=\"sy0\">,</span><br/>    L <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;print_latest_for_categories</span><span class=\"sy0\">,</span><br/>    a <span class=\"sy0\">=&gt;</span> <span class=\"re0\">\\&amp;print_all</span><span class=\"sy0\">,</span><br/><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$dispatch</span><span class=\"br0\">{</span><span class=\"re0\">$operation</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"re0\">$dispatch</span><span class=\"br0\">{</span><span class=\"re0\">$operation</span><span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"kw2\">ARGV</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Invalid option. Use one of n, l, L, a.<span class=\"es0\">\\n</span>\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> add_new <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$name</span><span class=\"sy0\">,</span> <span class=\"re0\">$category</span><span class=\"sy0\">,</span> <span class=\"re0\">$date</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$db</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"br0\">{</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"sy0\">||</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a> <span class=\"re0\">$date</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/eval.html\"><span class=\"kw3\">eval</span></a> <span class=\"br0\">{</span> <span class=\"st_h\">'Time::Piece'</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">strptime</span><span class=\"br0\">(</span><span class=\"re0\">$date</span><span class=\"sy0\">,</span> <span class=\"st_h\">'%Y-%m-%d'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><br/>            <span class=\"kw1\">or</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Invalid date format: YYYY-MM-DD.<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>        <span class=\"re0\">$date</span> <span class=\"sy0\">//=</span> localtime<span class=\"sy0\">-&gt;</span><span class=\"me1\">ymd</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@ids</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"sy0\">%</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$max_id</span> <span class=\"sy0\">=</span> max<span class=\"br0\">(</span>num <span class=\"sy0\">=&gt;</span> <span class=\"re0\">@ids</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"sy0\">++</span><span class=\"re0\">$max_id</span> <span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span> <span class=\"re0\">$name</span><span class=\"sy0\">,</span> <span class=\"re0\">$category</span><span class=\"sy0\">,</span> <span class=\"re0\">$date</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    save<span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> print_latest <span class=\"br0\">{</span><br/>    build_indexes<span class=\"br0\">(</span> <span class=\"kw1\">my</span> <span class=\"re0\">$db</span> <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    _print_latest<span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> _print_latest <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"sy0\">,</span> <span class=\"re0\">$category</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">@dates</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"sy0\">%</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_date<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"re0\">@dates</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"br0\">}</span><span class=\"br0\">[</span>CATEGORY<span class=\"br0\">]</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$category</span><span class=\"sy0\">,</span><br/>            <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_date<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span> <span class=\"re0\">@dates</span> <span class=\"kw1\">if</span> <a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a> <span class=\"re0\">$category</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$last_date</span> <span class=\"sy0\">=</span> max<span class=\"br0\">(</span>str <span class=\"sy0\">=&gt;</span> <span class=\"re0\">@dates</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    say <span class=\"kw1\">for</span> <a href=\"http://perldoc.perl.org/functions/map.html\"><span class=\"kw3\">map</span></a> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"br0\">}</span><span class=\"br0\">[</span>NAME<span class=\"br0\">]</span><span class=\"sy0\">,</span><br/>            <a href=\"http://perldoc.perl.org/functions/grep.html\"><span class=\"kw3\">grep</span></a> <span class=\"sy0\">!</span> <a href=\"http://perldoc.perl.org/functions/defined.html\"><span class=\"kw3\">defined</span></a> <span class=\"re0\">$category</span><br/>                 <span class=\"sy0\">||</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"co5\">$_</span><span class=\"br0\">}</span><span class=\"br0\">[</span>CATEGORY<span class=\"br0\">]</span> <span class=\"kw1\">eq</span> <span class=\"re0\">$category</span><span class=\"sy0\">,</span><br/>            <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_date<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$last_date</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> max <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$type</span> <span class=\"sy0\">=</span> <a href=\"http://perldoc.perl.org/functions/shift.html\"><span class=\"kw3\">shift</span></a><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"co5\">$_</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">{</span> num <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"sy0\">&gt;</span>  <span class=\"re0\">$max</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>      str <span class=\"sy0\">=&gt;</span> <span class=\"kw2\">sub</span> <span class=\"br0\">{</span> <span class=\"co5\">$_</span> <span class=\"kw1\">gt</span> <span class=\"re0\">$max</span><span class=\"br0\">}</span><span class=\"sy0\">,</span><br/>    <span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span><span class=\"re0\">$type</span><span class=\"br0\">}</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"re0\">$max</span> <span class=\"sy0\">=</span> <span class=\"co5\">$_</span><br/>        <span class=\"kw1\">for</span> <span class=\"co5\">@_</span><span class=\"br0\">[</span> <span class=\"nu0\">1</span> <span class=\"sy0\">..</span> <span class=\"re0\">$#_</span> <span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"re0\">$max</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> print_latest_for_categories <span class=\"br0\">{</span><br/>    build_indexes<span class=\"br0\">(</span> <span class=\"kw1\">my</span> <span class=\"re0\">$db</span> <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$category</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a> <a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"sy0\">%</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_category<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>        say <span class=\"st0\">\"* $category\"</span><span class=\"sy0\">;</span><br/>        _print_latest<span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"sy0\">,</span> <span class=\"re0\">$category</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> print_all <span class=\"br0\">{</span><br/>    build_indexes<span class=\"br0\">(</span> <span class=\"kw1\">my</span> <span class=\"re0\">$db</span> <span class=\"sy0\">=</span> load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$date</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/sort.html\"><span class=\"kw3\">sort</span></a> <a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"sy0\">%</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_date<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$id</span> <span class=\"br0\">(</span><span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_date<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$date</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>            say <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$id</span><span class=\"br0\">}</span><span class=\"br0\">[</span>NAME<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> load <span class=\"br0\">{</span><br/>    <a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a> <span class=\"kw1\">my</span> <span class=\"re0\">$in</span><span class=\"sy0\">,</span> <span class=\"st_h\">'&lt;'</span><span class=\"sy0\">,</span> DB <span class=\"kw1\">or</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Can't open database: $!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/local.html\"><span class=\"kw3\">local</span></a> <span class=\"co5\">$/</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/return.html\"><span class=\"kw3\">return</span></a> <span class=\"br0\">{</span> by_id <span class=\"sy0\">=&gt;</span> decode_json<span class=\"br0\">(</span><span class=\"sy0\">&lt;</span><span class=\"re0\">$in</span><span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> save <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/open.html\"><span class=\"kw3\">open</span></a> <span class=\"kw1\">my</span> <span class=\"re0\">$out</span><span class=\"sy0\">,</span> <span class=\"st_h\">'&gt;'</span><span class=\"sy0\">,</span> DB <span class=\"kw1\">or</span> <a href=\"http://perldoc.perl.org/functions/die.html\"><span class=\"kw3\">die</span></a> <span class=\"st0\">\"Can't save database: $!<span class=\"es0\">\\n</span>\"</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"br0\">{</span><span class=\"re0\">$out</span><span class=\"br0\">}</span> encode_json<span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <a href=\"http://perldoc.perl.org/functions/close.html\"><span class=\"kw3\">close</span></a> <span class=\"re0\">$out</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">sub</span> build_indexes <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"br0\">(</span><span class=\"re0\">$db</span><span class=\"sy0\">,</span> <span class=\"re0\">$by_category</span><span class=\"sy0\">,</span> <span class=\"re0\">$by_date</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"co5\">@_</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">for</span> <span class=\"kw1\">my</span> <span class=\"re0\">$id</span> <span class=\"br0\">(</span><a href=\"http://perldoc.perl.org/functions/keys.html\"><span class=\"kw3\">keys</span></a> <span class=\"sy0\">%</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_category<span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$id</span><span class=\"br0\">}</span><span class=\"br0\">[</span>CATEGORY<span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$id</span><br/>            <span class=\"kw1\">if</span> <span class=\"re0\">$by_category</span><span class=\"sy0\">;</span><br/>        <a href=\"http://perldoc.perl.org/functions/push.html\"><span class=\"kw3\">push</span></a> <span class=\"sy0\">@</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_date<span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$db</span><span class=\"sy0\">-&gt;</span><span class=\"br0\">{</span>by_id<span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$id</span><span class=\"br0\">}</span><span class=\"br0\">[</span>DATE<span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"sy0\">,</span> <span class=\"re0\">$id</span><br/>            <span class=\"kw1\">if</span> <span class=\"re0\">$by_date</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Perl 6", "loc": 104, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"co1\">#!/usr/bin/env perl6</span><br/><span class=\"kw2\">use</span> JSON<span class=\"sy0\">::</span><span class=\"me2\">Fast</span> <span class=\"sy0\">;</span><br/><span class=\"kw2\">sub</span> MAIN<span class=\"br0\">(</span> <span class=\"sy0\">:</span><span class=\"re0\">$server</span><span class=\"sy0\">=</span><span class=\"st_h\">'0.0.0.0'</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$port</span><span class=\"sy0\">=</span><span class=\"nu0\">3333</span><span class=\"sy0\">,</span> <span class=\"sy0\">:</span><span class=\"re0\">$dbfile</span><span class=\"sy0\">=</span><span class=\"st_h\">'db'</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">%db</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"sy0\">%</span><span class=\"kw3\">index</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$dbdata</span> <span class=\"sy0\">=</span> slurp <span class=\"st0\">\"$dbfile.json\"</span> <span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$indexdata</span> <span class=\"sy0\">=</span> slurp <span class=\"st0\">\"{$dbfile}_index.json\"</span> <span class=\"sy0\">;</span><br/>    <span class=\"re0\">%db</span> <span class=\"sy0\">=</span> from<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"re0\">$dbdata</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$dbdata</span> <span class=\"sy0\">;</span><br/>    <span class=\"sy0\">%</span><span class=\"kw3\">index</span> <span class=\"sy0\">=</span> from<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"re0\">$indexdata</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re0\">$indexdata</span> <span class=\"sy0\">;</span><br/>  react <span class=\"br0\">{</span><br/>    whenever IO<span class=\"sy0\">::</span><span class=\"me2\">Socket</span><span class=\"sy0\">::</span><span class=\"me2\">Async</span><span class=\"sy0\">.</span><span class=\"me1\">listen</span><span class=\"br0\">(</span> <span class=\"re0\">$server</span> <span class=\"sy0\">,</span> <span class=\"re0\">$port</span> <span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$conn</span> <span class=\"br0\">{</span><br/>        whenever <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"me1\">Supply</span><span class=\"sy0\">.</span><span class=\"me1\">lines</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$line</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">%response</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'status'</span> <span class=\"sy0\">=&gt;</span> <span class=\"st_h\">''</span> <span class=\"sy0\">;</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$msg</span> <span class=\"sy0\">=</span> from<span class=\"sy0\">-</span>json <span class=\"re0\">$line</span> <span class=\"sy0\">;</span><br/>            <span class=\"kw3\">say</span> <span class=\"re0\">$msg</span><span class=\"sy0\">.</span><span class=\"me1\">perl</span> <span class=\"sy0\">;</span><br/>            <span class=\"kw1\">given</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>function<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span> <br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'set'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%db</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>message<span class=\"sy0\">&gt;</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>last_<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">for</span> <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>keys_<span class=\"sy0\">&gt;.</span><span class=\"kw3\">keys</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$key</span> <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">if</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>message<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>                            <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>lastkey_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span> <span class=\"re0\">$key</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>message<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span> <span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"sy0\">;</span>    <br/>                            <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>idx_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span> <span class=\"re0\">$key</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>message<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">;</span><br/>                        <span class=\"br0\">}</span><br/>                    <span class=\"br0\">}</span><br/>                    spurt <span class=\"st0\">\"$dbfile.json\"</span><span class=\"sy0\">,</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"re0\">%db</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    spurt <span class=\"st0\">\"{$dbfile}_index.json\"</span><span class=\"sy0\">,</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"sy0\">%</span><span class=\"kw3\">index</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'get'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>message<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"re0\">%db</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'dump'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"br0\">{</span><span class=\"st_h\">'data'</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">%db</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'dumpindex'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"br0\">{</span><span class=\"st_h\">'data'</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"sy0\">%</span><span class=\"kw3\">index</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'delete'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%db</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>topic<span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span><span class=\"sy0\">:</span><span class=\"kw3\">delete</span><span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                    spurt <span class=\"st0\">\"$dbfile.json\"</span><span class=\"sy0\">,</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"re0\">%db</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    reindex<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'addindex'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>keys_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span><br/>                    reindex<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'reportlast'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"br0\">{</span><span class=\"st_h\">'data'</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">%db</span><span class=\"br0\">{</span><span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>last_<span class=\"sy0\">&gt;</span><span class=\"br0\">}</span> <span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'reportlastindex'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span> <span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">for</span> <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>lastkey_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span><span class=\"br0\">}</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$value</span> <span class=\"br0\">{</span><br/>                        <span class=\"co1\">#%response{'data'}.push:\u00a0%db{\u00a0%index&lt;lastkey_&gt;{ $msg&lt;key&gt;  }{ $value } }\u00a0;</span><br/>                        <span class=\"re0\">%response</span><span class=\"br0\">{</span><span class=\"st_h\">'data'</span><span class=\"br0\">}</span><span class=\"br0\">{</span><span class=\"re0\">$value</span><span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"re0\">%db</span><span class=\"br0\">{</span> <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>lastkey_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span>  <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$value</span> <span class=\"br0\">}</span> <span class=\"br0\">}</span> <span class=\"sy0\">;</span><br/>                    <span class=\"br0\">}</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'reportindex'</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                    <span class=\"kw1\">for</span> <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>idx_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span><span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span><span class=\"br0\">}</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$value</span>  <span class=\"br0\">{</span><br/>                        <span class=\"kw1\">for</span> <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>idx_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"sy0\">&lt;</span>key<span class=\"sy0\">&gt;</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$value</span> <span class=\"br0\">}</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span><span class=\"sy0\">.</span><span class=\"kw3\">sort</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$topic</span> <span class=\"br0\">{</span><br/>                            <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>data<span class=\"sy0\">&gt;.</span><span class=\"kw3\">push</span><span class=\"sy0\">:</span>  <span class=\"re0\">%db</span><span class=\"br0\">{</span> <span class=\"re0\">$topic</span> <span class=\"br0\">}</span>  <span class=\"sy0\">;</span><br/>                            <span class=\"co1\">#%response&lt;data&gt;{$value} =\u00a0%db{ $topic } \u00a0;</span><br/>                        <span class=\"br0\">}</span><br/>                    <span class=\"br0\">}</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">when</span> <span class=\"st_h\">'commit'</span> <span class=\"br0\">{</span><br/>                    spurt <span class=\"st0\">\"$dbfile.json\"</span><span class=\"sy0\">,</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"re0\">%db</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    spurt <span class=\"st0\">\"{$dbfile}_index.json\"</span><span class=\"sy0\">,</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"sy0\">%</span><span class=\"kw3\">index</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'ok'</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>                <span class=\"kw1\">default</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>status<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'error'</span><span class=\"sy0\">;</span><br/>                    <span class=\"re0\">%response</span><span class=\"sy0\">&lt;</span>error<span class=\"sy0\">&gt;</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'no function or not supported'</span><span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>            <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"kw3\">print</span><span class=\"br0\">(</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"re0\">%response</span><span class=\"sy0\">,</span> <span class=\"sy0\">:!</span>pretty<span class=\"br0\">)</span> <span class=\"sy0\">~</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>            <span class=\"kw2\">LAST</span> <span class=\"br0\">{</span> <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"me1\">close</span> <span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>            QUIT <span class=\"br0\">{</span> <span class=\"kw1\">default</span> <span class=\"br0\">{</span> <span class=\"re0\">$conn</span><span class=\"sy0\">.</span><span class=\"me1\">close</span> <span class=\"sy0\">;</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"oh no, $_\"</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>            <span class=\"kw2\">CATCH</span> <span class=\"br0\">{</span> <span class=\"kw1\">default</span> <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"sy0\">.^</span>name<span class=\"sy0\">,</span> <span class=\"st_h\">': '</span><span class=\"sy0\">,</span> <span class=\"sy0\">.</span><span class=\"me1\">Str</span> <span class=\"sy0\">,</span>  <span class=\"st0\">\" handled in $?LINE\"</span><span class=\"sy0\">;</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/>  <span class=\"br0\">}</span><br/>    <span class=\"kw2\">sub</span> reindex <span class=\"br0\">{</span><br/>        <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>idx_<span class=\"sy0\">&gt;:</span><span class=\"kw3\">delete</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">for</span> <span class=\"re0\">%db</span><span class=\"sy0\">.</span><span class=\"kw3\">keys</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$topic</span> <span class=\"br0\">{</span><br/>            <span class=\"kw1\">my</span> <span class=\"re0\">$msg</span> <span class=\"sy0\">=</span> <span class=\"re0\">%db</span><span class=\"br0\">{</span><span class=\"re0\">$topic</span><span class=\"br0\">}</span> <span class=\"sy0\">;</span><br/>            <span class=\"kw1\">for</span> <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>keys_<span class=\"sy0\">&gt;.</span><span class=\"kw3\">keys</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$key</span> <span class=\"br0\">{</span><br/>                <span class=\"kw1\">if</span> <span class=\"re0\">$msg</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>                    <span class=\"re0\">%index</span><span class=\"sy0\">&lt;</span>idx_<span class=\"sy0\">&gt;</span><span class=\"br0\">{</span> <span class=\"re0\">$key</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$msg</span><span class=\"br0\">{</span><span class=\"re0\">$key</span><span class=\"br0\">}</span> <span class=\"br0\">}</span><span class=\"br0\">{</span> <span class=\"re0\">$topic</span> <span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">;</span><br/>                <span class=\"br0\">}</span><br/>            <span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        spurt <span class=\"st0\">\"{$dbfile}_index.json\"</span><span class=\"sy0\">,</span> to<span class=\"sy0\">-</span>json<span class=\"br0\">(</span><span class=\"sy0\">%</span><span class=\"kw3\">index</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 99, "block": "<pre class=\"text highlighted_source\">--<br/>-- demo\\rosetta\\Simple_db.exw<br/>-- ==========================<br/>--<br/>include timedate.e<br/>\u00a0<br/>constant filename = getenv(iff(platform()=WINDOWS?\"APPDATA\":\"HOME\"))&amp;\"/simple_db.csv\"<br/>\u00a0<br/>procedure add(sequence cmd)<br/>    if length(cmd)=0 <br/>    or length(cmd)&gt;2 then<br/>        printf(1,\"usage: add name [cat]\\n\")<br/>    else<br/>        string name = cmd[1]<br/>        string cat = iff(length(cmd)=2?cmd[2]:\"none\")<br/>        string datestr = format_timedate(date(),\"YYYY/MM/DD h:mmpm\")<br/>        integer fn = open(filename,\"a\")<br/>        printf(fn,\"%s,%s,%s\\n\",{name,cat,datestr})<br/>        close(fn)<br/>    end if<br/>end procedure<br/>\u00a0<br/>procedure last(sequence cmd)<br/>    integer fn = open(filename,\"r\")<br/>    if fn=-1 then<br/>        puts(1,\"file not found\\n\")<br/>        return<br/>    end if<br/>    integer lc = length(cmd)<br/>    string last = iff(lc?\"&lt;no entries for that category&gt;\\n\":\"&lt;empty&gt;\\n\")<br/>    while 1 do<br/>        object line = gets(fn)<br/>        if atom(line) then exit end if<br/>        if lc=0 or split(line,',')[2]=cmd[1] then<br/>            last = line<br/>        end if<br/>    end while<br/>    puts(1,last)<br/>    close(fn)<br/>end procedure<br/>\u00a0<br/>sequence dates<br/>\u00a0<br/>function by_date(integer d1, integer d2)<br/>    return compare(dates[d1],dates[d2])<br/>end function<br/>constant r_by_date = routine_id(\"by_date\")<br/>\u00a0<br/>procedure sort_by_date()<br/>-- (simple_db.csv should be edited manually to prove the date sort works)<br/>    integer fn = open(filename,\"r\")<br/>    if fn=-1 then<br/>        puts(1,\"file not found\\n\")<br/>        return<br/>    end if<br/>    sequence lines = {}<br/>    dates = {}<br/>    while 1 do<br/>        object line = gets(fn)<br/>        if atom(line) then exit end if<br/>        lines = append(lines,line)<br/>        dates = append(dates,split(line,',')[3])<br/>    end while<br/>    close(fn)<br/>    sequence tags = custom_sort(r_by_date,tagset(length(lines)))<br/>    for i=1 to length(tags) do<br/>        puts(1,lines[tags[i]])<br/>    end for<br/>end procedure<br/>\u00a0<br/>procedure process(sequence cmd)<br/>    switch cmd[1] do<br/>        case \"add\": add(cmd[2..$])<br/>        case \"last\": last(cmd[2..$])<br/>        case \"sort\": sort_by_date()<br/>        default: printf(1,\"unknown command:\u00a0%s\\n\",{cmd[1]})<br/>    end switch<br/>end procedure<br/>\u00a0<br/>constant helptext = \"\"\"<br/>p demo\\rosetta\\Simple_db                    -- interactive mode, commands as below<br/>p demo\\rosetta\\Simple_db add name [cat]     -- add entry<br/>p demo\\rosetta\\Simple_db last [cat]         -- show last entry [in specified category]<br/>p demo\\rosetta\\Simple_db sort               -- show full list sorted by date<br/>\"\"\"<br/>sequence cl = command_line()<br/>    if length(cl)&lt;3 then<br/>        -- interactive mode<br/>        puts(1,helptext)<br/>        while 1 do<br/>            puts(1,\"&gt;\")<br/>            object line = trim(gets(0))<br/>            if atom(line) or length(line)=0 then exit end if<br/>            puts(1,\"\\n\")<br/>            process(split(line))<br/>        end while<br/>    else<br/>        process(cl[3..$])<br/>    end if</pre>"}, {"lang": "PicoLisp", "loc": 36, "block": "<pre class=\"text highlighted_source\">#!/usr/bin/pil<br/>\u00a0<br/>(de usage ()<br/>   (prinl<br/>      \"Usage:^J\\<br/>      sdb &lt;file&gt; add &lt;title&gt; &lt;cat&gt; &lt;date&gt; ...  Add a new entry^J\\<br/>      sdb &lt;file&gt; get &lt;title&gt;                   Retrieve an entry^J\\<br/>      sdb &lt;file&gt; latest                        Print the latest entry^J\\<br/>      sdb &lt;file&gt; categories                    Print the latest for each cat^J\\<br/>      sdb &lt;file&gt;                               Print all, sorted by date\" ) )<br/>\u00a0<br/>(de printEntry (E)<br/>   (apply println (cdddr E) (car E) (cadr E) (datStr (caddr E))) )<br/>\u00a0<br/>(ifn (setq *File (opt))<br/>   (usage)<br/>   (case (opt)<br/>      (add<br/>         (let (Ttl (opt)  Cat (opt))<br/>            (if (strDat (opt))<br/>               (rc *File Ttl (cons Cat @ (argv)))<br/>               (prinl \"Bad date\") ) ) )<br/>      (get<br/>         (let Ttl (opt)<br/>            (when (rc *File Ttl)<br/>               (printEntry (cons Ttl @)) ) ) )<br/>      (latest<br/>         (printEntry (maxi caddr (in *File (read)))) )<br/>      (categories<br/>         (for Cat (by cadr group (in *File (read)))<br/>            (printEntry (maxi caddr Cat)) ) )<br/>      (NIL<br/>         (mapc printEntry (by caddr sort (in *File (read)))) )<br/>      (T (usage)) ) )<br/>\u00a0<br/>(bye)</pre>"}, {"lang": "Pike", "loc": 154, "block": "<pre class=\"pike highlighted_source\">mapping db <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>mapping make_episode<span class=\"br0\">(</span>string series, string title, string episode, array date<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"br0\">[</span> <span class=\"st0\">\"series\"</span>:series, <span class=\"st0\">\"episode\"</span>:episode, <span class=\"st0\">\"title\"</span>:title, <span class=\"st0\">\"date\"</span>:date <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void print_episode<span class=\"br0\">(</span>mapping episode<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    write<span class=\"br0\">(</span><span class=\"st0\">\" \u00a0%-30s\u00a0%10s\u00a0%-30s (%{%d.%})<span class=\"es0\">\\n</span>\"</span>, <br/>          episode<span class=\"sy0\">-</span>&gt;series, episode<span class=\"sy0\">-</span>&gt;episode, episode<span class=\"sy0\">-</span>&gt;title, episode<span class=\"sy0\">-</span>&gt;date<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void print_series<span class=\"br0\">(</span>mapping series<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    write<span class=\"br0\">(</span><span class=\"st0\">\"%-30s\u00a0%-10s<span class=\"es0\">\\n</span>\"</span>, series<span class=\"sy0\">-</span>&gt;series, series<span class=\"sy0\">-</span>&gt;status<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    map<span class=\"br0\">(</span>series<span class=\"sy0\">-</span>&gt;episodes, print_episode<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void dump_db<span class=\"br0\">(</span>mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">foreach</span><span class=\"br0\">(</span>database<span class=\"sy0\">;</span> string name<span class=\"sy0\">;</span> mapping series<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        print_series<span class=\"br0\">(</span>series<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>array get_latest<span class=\"br0\">(</span>mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    array latest <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span><span class=\"br0\">(</span>database<span class=\"sy0\">;</span> string name<span class=\"sy0\">;</span> mapping series<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>       latest <span class=\"sy0\">+=</span> <span class=\"br0\">(</span><span class=\"br0\">{</span> series<span class=\"sy0\">-</span>&gt;episodes<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> latest<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>int<span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"nu0\">1</span><span class=\"br0\">)</span> compare_date<span class=\"br0\">(</span>array a, array b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>arrayp<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">!</span>arrayp<span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> false<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>arrayp<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"sy0\">!</span>sizeof<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> arrayp<span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> sizeof<span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>arrayp<span class=\"br0\">(</span>b<span class=\"br0\">)</span> <span class=\"sy0\">||</span> <span class=\"sy0\">!</span>sizeof<span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> arrayp<span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> sizeof<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> b<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">return</span> compare_date<span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"br0\">]</span>, b<span class=\"br0\">[</span><span class=\"nu0\">1</span>..<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> &lt; b<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>int<span class=\"br0\">(</span><span class=\"nu0\">0</span>..<span class=\"nu0\">1</span><span class=\"br0\">)</span> compare_by_date<span class=\"br0\">(</span>mapping a, mapping b<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> compare_date<span class=\"br0\">(</span>reverse<span class=\"br0\">(</span>a<span class=\"sy0\">-</span>&gt;date<span class=\"br0\">)</span>, reverse<span class=\"br0\">(</span>b<span class=\"sy0\">-</span>&gt;date<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void watch_list<span class=\"br0\">(</span>mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    map<span class=\"br0\">(</span>Array.<span class=\"me1\">sort_array</span><span class=\"br0\">(</span>get_latest<span class=\"br0\">(</span>database<span class=\"br0\">)</span>, compare_by_date<span class=\"br0\">)</span>, <br/>        print_episode<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>string prompt_read<span class=\"br0\">(</span>string prompt<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    write<span class=\"br0\">(</span><span class=\"st0\">\"%s: \"</span>, prompt<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">return</span> Stdio.<span class=\"me1\">stdin</span>.<span class=\"me1\">gets</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>array parse_date<span class=\"br0\">(</span>string date<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> <span class=\"br0\">(</span>array<span class=\"br0\">(</span>int<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">(</span>date<span class=\"sy0\">/</span><span class=\"st0\">\".\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>mapping prompt_for_episode<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> make_episode<span class=\"br0\">(</span>prompt_read<span class=\"br0\">(</span><span class=\"st0\">\"Series\"</span><span class=\"br0\">)</span>, <br/>                        prompt_read<span class=\"br0\">(</span><span class=\"st0\">\"Title\"</span><span class=\"br0\">)</span>, <br/>                        prompt_read<span class=\"br0\">(</span><span class=\"st0\">\"Episode\"</span><span class=\"br0\">)</span>, <br/>                        parse_date<span class=\"br0\">(</span>prompt_read<span class=\"br0\">(</span><span class=\"st0\">\"Date watched\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// pike offers encode_value() and decode_value() as standard ways </span><br/><span class=\"co1\">// to save and read data, but that is not a human readable format.</span><br/><span class=\"co1\">// therefore we are instead printing the structure as debug-output </span><br/><span class=\"co1\">// which is a readable form as long as it only contains integers, </span><br/><span class=\"co1\">// strings, mappings, arrays and multisets this format can be read by pike.</span><br/><span class=\"co1\">// to read it we are creating a class that contains the data as a value, </span><br/><span class=\"co1\">// which is then compiled and instantiated to allow us to pull the data out.</span><br/>void save_db<span class=\"br0\">(</span>string filename, mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    Stdio.<span class=\"me1\">write_file</span><span class=\"br0\">(</span>filename, sprintf<span class=\"br0\">(</span><span class=\"st0\">\"%O\"</span>, database<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void watch_save<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    save_db<span class=\"br0\">(</span><span class=\"st0\">\"pwatch\"</span>, db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>mapping load_db<span class=\"br0\">(</span>string filename<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>file_stat<span class=\"br0\">(</span>filename<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">return</span> compile_string<span class=\"br0\">(</span><span class=\"st0\">\"mixed data = \"</span> <span class=\"sy0\">+</span> <br/>                              Stdio.<span class=\"me1\">read_file</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\";\"</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">-</span>&gt;data<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>mapping get_series<span class=\"br0\">(</span>string name, mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> database<span class=\"br0\">[</span>name<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>array get_episode_list<span class=\"br0\">(</span>string series, mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">return</span> database<span class=\"br0\">[</span>series<span class=\"br0\">]</span><span class=\"sy0\">-</span>&gt;episodes<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void watch_new_series<span class=\"br0\">(</span>string name, string status, mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    database<span class=\"br0\">[</span>name<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"st0\">\"series\"</span>:name, <span class=\"st0\">\"status\"</span>:status, <span class=\"st0\">\"episodes\"</span>:<span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"br0\">}</span><span class=\"br0\">)</span> <span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>mapping get_or_add_series<span class=\"br0\">(</span>string name, mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>database<span class=\"br0\">[</span>name<span class=\"br0\">]</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        string answer <span class=\"sy0\">=</span> prompt_read<span class=\"br0\">(</span><span class=\"st0\">\"Add new series? [y/n]: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>answer <span class=\"sy0\">==</span> <span class=\"st0\">\"y\"</span><span class=\"br0\">)</span><br/>            watch_new_series<span class=\"br0\">(</span>name, <span class=\"st0\">\"active\"</span>, database<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> database<span class=\"br0\">[</span>name<span class=\"br0\">]</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void watch_add<span class=\"br0\">(</span>mapping database<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    mapping episode <span class=\"sy0\">=</span> prompt_for_episode<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    string series_name <span class=\"sy0\">=</span> episode<span class=\"sy0\">-</span>&gt;series<span class=\"sy0\">;</span><br/>    mapping series <span class=\"sy0\">=</span> get_or_add_series<span class=\"br0\">(</span>series_name, database<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span>series<span class=\"br0\">)</span><br/>        watch_add<span class=\"br0\">(</span>database<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span><br/>        series<span class=\"sy0\">-</span>&gt;episodes <span class=\"sy0\">=</span> Array.<span class=\"me1\">unshift</span><span class=\"br0\">(</span>series<span class=\"sy0\">-</span>&gt;episodes, episode<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>void watch_load<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    db <span class=\"sy0\">=</span> load_db<span class=\"br0\">(</span><span class=\"st0\">\"pwatch\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>int main<span class=\"br0\">(</span>int argc, array argv<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>    watch_load<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>argc&gt;<span class=\"nu0\">1</span> <span class=\"sy0\">&amp;&amp;</span> argv<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"add\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        watch_add<span class=\"br0\">(</span>db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        watch_save<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><br/>        watch_list<span class=\"br0\">(</span>db<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PowerShell", "loc": 83, "block": "<pre class=\"powershell highlighted_source\">\u00a0<br/><span class=\"kw3\">function</span> db<br/><span class=\"br0\">{</span><br/>    <span class=\"br0\">[</span>CmdletBinding<span class=\"br0\">(</span>DefaultParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"None\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">[</span>OutputType<span class=\"br0\">(</span><span class=\"br0\">[</span>PSCustomObject<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    <span class=\"kw3\">Param</span><br/>    <span class=\"br0\">(</span><br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$false</span><span class=\"sy0\">,</span><br/>                   Position<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><br/>                   ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Add a new entry\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$Path</span> <span class=\"sy0\">=</span> <span class=\"st0\">\".\\SimpleDatabase.csv\"</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$true</span><span class=\"sy0\">,</span><br/>                   ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Add a new entry\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$Name</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$true</span><span class=\"sy0\">,</span><br/>                   ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Add a new entry\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"re3\">string</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$Category</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>Mandatory<span class=\"sy0\">=</span><span class=\"re0\">$true</span><span class=\"sy0\">,</span><br/>                   ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Add a new entry\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span>datetime<span class=\"br0\">]</span><br/>        <span class=\"re0\">$Birthday</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Print the latest entry\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"kw3\">switch</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$Latest</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Print the latest entry for each category\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"kw3\">switch</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$LatestByCategory</span><span class=\"sy0\">,</span><br/>\u00a0<br/>        <span class=\"br0\">[</span>Parameter<span class=\"br0\">(</span>ParameterSetName<span class=\"sy0\">=</span><span class=\"st0\">\"Print all entries sorted by a date\"</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">[</span><span class=\"kw3\">switch</span><span class=\"br0\">]</span><br/>        <span class=\"re0\">$SortedByDate</span><br/>    <span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">-not</span> <span class=\"br0\">(</span><span class=\"kw1\">Test-Path</span> <span class=\"kw5\">-Path</span> <span class=\"re0\">$Path</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"st0\">'\"Name\",\"Category\",\"Birthday\"'</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Out<span class=\"kw4\">-File</span></span> <span class=\"kw5\">-FilePath</span> <span class=\"re0\">$Path</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"re0\">$db</span> <span class=\"sy0\">=</span> <span class=\"kw1\">Import-Csv</span> <span class=\"kw5\">-Path</span> <span class=\"re0\">$Path</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Foreach-Object</span> <span class=\"br0\">{</span><br/>        <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Birthday <span class=\"sy0\">=</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a>.Birthday <span class=\"kw4\">-as</span> <span class=\"br0\">[</span>datetime<span class=\"br0\">]</span><br/>        <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw3\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$PSCmdlet</span>.ParameterSetName<span class=\"br0\">)</span><br/>    <span class=\"br0\">{</span><br/>        <span class=\"st0\">\"Add a new entry\"</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"br0\">[</span>PSCustomObject<span class=\"br0\">]</span><span class=\"sy0\">@</span><span class=\"br0\">{</span>Name<span class=\"sy0\">=</span><span class=\"re0\">$Name</span>; Category<span class=\"sy0\">=</span><span class=\"re0\">$Category</span>; Birthday<span class=\"sy0\">=</span><span class=\"re0\">$Birthday</span><span class=\"br0\">}</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Export-Csv</span> <span class=\"kw5\">-Path</span> <span class=\"re0\">$Path</span> <span class=\"kw5\">-Append</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"st0\">\"Print the latest entry\"</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"re0\">$db</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"st0\">\"Print the latest entry for each category\"</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"br0\">(</span><span class=\"re0\">$db</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Group-Object</span> <span class=\"kw5\">-Property</span> Category<span class=\"br0\">)</span>.Name <span class=\"sy0\">|</span> <span class=\"kw1\">ForEach-Object</span> <span class=\"br0\">{</span><span class=\"br0\">(</span><span class=\"re0\">$db</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Where-Object</span> <span class=\"kw5\">-Property</span> Category <span class=\"kw4\">-Contains</span> <a href=\"about:blank\"><span class=\"kw6\">$_</span></a><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"st0\">\"Print all entries sorted by a date\"</span><br/>        <span class=\"br0\">{</span><br/>            <span class=\"re0\">$db</span> <span class=\"sy0\">|</span> <span class=\"kw1\">Sort-Object</span> <span class=\"kw5\">-Property</span> Birthday<br/>        <span class=\"br0\">}</span><br/>        Default<br/>        <span class=\"br0\">{</span><br/>            <span class=\"re0\">$db</span><br/>        <span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>db <span class=\"kw5\">-Name</span> Bev   <span class=\"kw5\">-Category</span> friend   <span class=\"sy0\">-</span>Birthday <span class=\"nu0\">3</span><span class=\"sy0\">/</span><span class=\"nu0\">3</span><span class=\"sy0\">/</span><span class=\"nu0\">1983</span><br/>db <span class=\"kw5\">-Name</span> Bob   <span class=\"kw5\">-Category</span> family   <span class=\"sy0\">-</span>Birthday <span class=\"nu0\">7</span><span class=\"sy0\">/</span><span class=\"nu0\">19</span><span class=\"sy0\">/</span><span class=\"nu0\">1987</span><br/>db <span class=\"kw5\">-Name</span> Gill  <span class=\"kw5\">-Category</span> friend   <span class=\"sy0\">-</span>Birthday <span class=\"nu0\">12</span><span class=\"sy0\">/</span><span class=\"nu0\">9</span><span class=\"sy0\">/</span><span class=\"nu0\">1986</span><br/>db <span class=\"kw5\">-Name</span> Gail  <span class=\"kw5\">-Category</span> family   <span class=\"sy0\">-</span>Birthday <span class=\"nu0\">2</span><span class=\"sy0\">/</span><span class=\"nu0\">11</span><span class=\"sy0\">/</span><span class=\"nu0\">1986</span><br/>db <span class=\"kw5\">-Name</span> Vince <span class=\"kw5\">-Category</span> family   <span class=\"sy0\">-</span>Birthday <span class=\"nu0\">3</span><span class=\"sy0\">/</span><span class=\"nu0\">10</span><span class=\"sy0\">/</span><span class=\"nu0\">1960</span><br/>db <span class=\"kw5\">-Name</span> Wayne <span class=\"kw5\">-Category</span> coworker <span class=\"sy0\">-</span>Birthday <span class=\"nu0\">5</span><span class=\"sy0\">/</span><span class=\"nu0\">29</span><span class=\"sy0\">/</span><span class=\"nu0\">1962</span><br/>\u00a0</pre>"}, {"lang": "Python", "loc": 108, "block": "<pre class=\"python highlighted_source\"><span class=\"co1\">#!/usr/bin/python3</span><br/>\u00a0<br/><span class=\"st0\">'''<span class=\"es0\">\\</span><br/>Simple database for: http://rosettacode.org/wiki/Simple_database<br/>\u00a0<br/>'''</span><br/>\u00a0<br/><span class=\"kw1\">import</span> argparse<br/><span class=\"kw1\">from</span> argparse <span class=\"kw1\">import</span> Namespace<br/><span class=\"kw1\">import</span> <span class=\"kw3\">datetime</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">shlex</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">def</span> parse_args<span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Set up, parse, and return arguments'</span><br/>\u00a0<br/>    <span class=\"kw3\">parser</span> <span class=\"sy0\">=</span> argparse.<span class=\"me1\">ArgumentParser</span><span class=\"br0\">(</span>epilog<span class=\"sy0\">=</span><span class=\"kw2\">globals</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"st0\">'__doc__'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw3\">parser</span>.<span class=\"me1\">add_argument</span><span class=\"br0\">(</span><span class=\"st0\">'command'</span><span class=\"sy0\">,</span> choices<span class=\"sy0\">=</span><span class=\"st0\">'add pl plc pa'</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><br/>                        <span class=\"kw2\">help</span><span class=\"sy0\">=</span><span class=\"st0\">'''<span class=\"es0\">\\</span><br/>add: Add a new entry<br/>pl:  Print the latest entry<br/>plc: Print the latest entry for each category/tag<br/>pa:  Print all entries sorted by a date'''</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">parser</span>.<span class=\"me1\">add_argument</span><span class=\"br0\">(</span><span class=\"st0\">'-d'</span><span class=\"sy0\">,</span> <span class=\"st0\">'--description'</span><span class=\"sy0\">,</span><br/>                        <span class=\"kw2\">help</span><span class=\"sy0\">=</span><span class=\"st0\">'A description of the item. (e.g., title, name)'</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">parser</span>.<span class=\"me1\">add_argument</span><span class=\"br0\">(</span><span class=\"st0\">'-t'</span><span class=\"sy0\">,</span> <span class=\"st0\">'--tag'</span><span class=\"sy0\">,</span><br/>                        <span class=\"kw2\">help</span><span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"st0\">'''A category or tag (genre, topic, relationship '''</span><br/>                              <span class=\"st0\">'''such as \u201cfriend\u201d or \u201cfamily\u201d)'''</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">parser</span>.<span class=\"me1\">add_argument</span><span class=\"br0\">(</span><span class=\"st0\">'-f'</span><span class=\"sy0\">,</span> <span class=\"st0\">'--field'</span><span class=\"sy0\">,</span> nargs<span class=\"sy0\">=</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> action<span class=\"sy0\">=</span><span class=\"st0\">'append'</span><span class=\"sy0\">,</span> <br/>                        <span class=\"kw2\">help</span><span class=\"sy0\">=</span><span class=\"st0\">'Other optional fields with value (can be repeated)'</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">return</span> <span class=\"kw3\">parser</span><br/>\u00a0<br/><span class=\"kw1\">def</span> do_add<span class=\"br0\">(</span>args<span class=\"sy0\">,</span> dbname<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Add a new entry'</span><br/>    <span class=\"kw1\">if</span> args.<span class=\"me1\">description</span> <span class=\"kw1\">is</span> <span class=\"kw2\">None</span>:<br/>        args.<span class=\"me1\">description</span> <span class=\"sy0\">=</span> <span class=\"st0\">''</span><br/>    <span class=\"kw1\">if</span> args.<span class=\"me1\">tag</span> <span class=\"kw1\">is</span> <span class=\"kw2\">None</span>:<br/>        args.<span class=\"me1\">tag</span> <span class=\"sy0\">=</span> <span class=\"st0\">''</span><br/>    <span class=\"kw1\">del</span> args.<span class=\"me1\">command</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Writing record to\u00a0%s'</span>\u00a0% dbname<span class=\"br0\">)</span><br/>    <span class=\"kw1\">with</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span>dbname<span class=\"sy0\">,</span> <span class=\"st0\">'a'</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> db:<br/>        db.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">'%r<span class=\"es0\">\\n</span>'</span>\u00a0% args<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> do_pl<span class=\"br0\">(</span>args<span class=\"sy0\">,</span> dbname<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Print the latest entry'</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Getting last record from\u00a0%s'</span>\u00a0% dbname<span class=\"br0\">)</span><br/>    <span class=\"kw1\">with</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span>dbname<span class=\"sy0\">,</span> <span class=\"st0\">'r'</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> db:<br/>        <span class=\"kw1\">for</span> line <span class=\"kw1\">in</span> db: <span class=\"kw1\">pass</span><br/>    record <span class=\"sy0\">=</span> <span class=\"kw2\">eval</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span><br/>    <span class=\"kw1\">del</span> record._date<br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>record<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> do_plc<span class=\"br0\">(</span>args<span class=\"sy0\">,</span> dbname<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Print the latest entry for each category/tag'</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Getting latest record for each tag from\u00a0%s'</span>\u00a0% dbname<span class=\"br0\">)</span><br/>    <span class=\"kw1\">with</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span>dbname<span class=\"sy0\">,</span> <span class=\"st0\">'r'</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> db:<br/>        records <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">eval</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span> <span class=\"kw1\">for</span> line <span class=\"kw1\">in</span> db<span class=\"br0\">]</span><br/>    tags <span class=\"sy0\">=</span> <span class=\"kw2\">set</span><span class=\"br0\">(</span>record.<span class=\"me1\">tag</span> <span class=\"kw1\">for</span> record <span class=\"kw1\">in</span> records<span class=\"br0\">)</span><br/>    records.<span class=\"me1\">reverse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> record <span class=\"kw1\">in</span> records:<br/>        <span class=\"kw1\">if</span> record.<span class=\"me1\">tag</span> <span class=\"kw1\">in</span> tags:<br/>            <span class=\"kw1\">del</span> record._date<br/>            <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>record<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            tags.<span class=\"me1\">discard</span><span class=\"br0\">(</span>record.<span class=\"me1\">tag</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> tags: <span class=\"kw1\">break</span><br/>\u00a0<br/><span class=\"kw1\">def</span> do_pa<span class=\"br0\">(</span>args<span class=\"sy0\">,</span> dbname<span class=\"br0\">)</span>:<br/>    <span class=\"st0\">'Print all entries sorted by a date'</span><br/>    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Getting all records by date from\u00a0%s'</span>\u00a0% dbname<span class=\"br0\">)</span><br/>    <span class=\"kw1\">with</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span>dbname<span class=\"sy0\">,</span> <span class=\"st0\">'r'</span><span class=\"br0\">)</span> <span class=\"kw1\">as</span> db:<br/>        records <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw2\">eval</span><span class=\"br0\">(</span>line<span class=\"br0\">)</span> <span class=\"kw1\">for</span> line <span class=\"kw1\">in</span> db<span class=\"br0\">]</span><br/>    <span class=\"kw1\">for</span> record <span class=\"kw1\">in</span> records:<br/>        <span class=\"kw1\">del</span> record._date<br/>        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>record<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"kw1\">def</span> <span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:<br/>    <span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/>    <span class=\"kw3\">parser</span> <span class=\"sy0\">=</span> parse_args<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">for</span> cmdline <span class=\"kw1\">in</span> <span class=\"br0\">[</span><br/>                    <span class=\"st0\">\"\"\"-d Book -f title 'Windy places' -f type hardback --tag DISCOUNT add\"\"\"</span><span class=\"sy0\">,</span><br/>                    <span class=\"st0\">\"\"\"-d Book -f title 'RC spammers'  -f type paperback -t   DISCOUNT add\"\"\"</span><span class=\"sy0\">,</span><br/>                    <span class=\"st0\">\"\"\"-d Book -f title 'Splat it' -f type hardback -f special 'first edition' -t PREMIUM add\"\"\"</span><span class=\"sy0\">,</span><br/>                    <span class=\"st0\">\"\"\"pl\"\"\"</span><span class=\"sy0\">,</span><br/>                    <span class=\"st0\">\"\"\"plc\"\"\"</span><span class=\"sy0\">,</span><br/>                    <span class=\"br0\">]</span>:<br/>        args <span class=\"sy0\">=</span> <span class=\"kw3\">parser</span>.<span class=\"me1\">parse_args</span><span class=\"br0\">(</span><span class=\"kw3\">shlex</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span>cmdline<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        now <span class=\"sy0\">=</span> <span class=\"kw3\">datetime</span>.<span class=\"kw3\">datetime</span>.<span class=\"me1\">utcnow</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        args._date <span class=\"sy0\">=</span> now.<span class=\"me1\">isoformat</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        do_command<span class=\"br0\">[</span>args.<span class=\"me1\">command</span><span class=\"br0\">]</span><span class=\"br0\">(</span>args<span class=\"sy0\">,</span> dbname<span class=\"br0\">)</span><br/>        <span class=\"kw3\">time</span>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>do_command <span class=\"sy0\">=</span> <span class=\"kw2\">dict</span><span class=\"br0\">(</span>add<span class=\"sy0\">=</span>do_add<span class=\"sy0\">,</span> pl<span class=\"sy0\">=</span>do_pl<span class=\"sy0\">,</span> plc<span class=\"sy0\">=</span>do_plc<span class=\"sy0\">,</span> pa<span class=\"sy0\">=</span>do_pa<span class=\"br0\">)</span><br/>dbname <span class=\"sy0\">=</span> <span class=\"st0\">'_simple_db_db.py'</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:<br/>    <span class=\"kw1\">if</span> <span class=\"nu0\">0</span>:<br/>        <span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span>:<br/>        <span class=\"kw3\">parser</span> <span class=\"sy0\">=</span> parse_args<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        args <span class=\"sy0\">=</span> <span class=\"kw3\">parser</span>.<span class=\"me1\">parse_args</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        now <span class=\"sy0\">=</span> <span class=\"kw3\">datetime</span>.<span class=\"kw3\">datetime</span>.<span class=\"me1\">utcnow</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        args._date <span class=\"sy0\">=</span> now.<span class=\"me1\">isoformat</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        do_command<span class=\"br0\">[</span>args.<span class=\"me1\">command</span><span class=\"br0\">]</span><span class=\"br0\">(</span>args<span class=\"sy0\">,</span> dbname<span class=\"br0\">)</span></pre>"}, {"lang": "Racket", "loc": 28, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#!/usr/bin/env racket<br/>#lang racket<br/>\u00a0<br/>(define (*write file data)\u00a0; write data in human readable format (sexpr/line)<br/>  (with-output-to-file file #:exists 'replace<br/>    (lambda () (for ([x data]) (printf \"~s\\n\" x)))))<br/>(define *read file-&gt;list)\u00a0; read our \"human readable format\"<br/>\u00a0<br/>(command-line<br/> #:once-any<br/> [(\"-a\") file title category date \"Add an entry\"<br/>  (*write file `(,@(*read file) (,title ,category ,date)))]<br/> [(\"-d\") file title \"Delete an entry (all matching)\"<br/>  (*write file (filter-not (lambda (x) (equal? (car x) title)) (*read file)))]<br/> [(\"-p\") file mode \"Print entries, mode = latest, latest/cat, all, by-date\"<br/>  (define data (*read file))<br/>  (define (show item)<br/>    (match item [(list title cat date) (printf \"[~a] ~a; ~a\\n\" cat title date)]))<br/>  (case (string-&gt;symbol mode)<br/>    [(all) (for-each show data)]<br/>    [(by-date) (for-each show (sort data string&lt;? #:key cadr))]<br/>    [(latest) (show (last data))]<br/>    [(latest/cat)<br/>     (define (last/cat c) (for/last ([x data] #:when (equal? c (cadr x))) x))<br/>     (for-each (compose1 show last/cat) (remove-duplicates (map cadr data)))]<br/>    [else (error 'sdb \"bad printout mode\")])])<br/>\u00a0</pre>"}, {"lang": "REBOL", "loc": 15, "block": "<pre class=\"rebol highlighted_source\"><span class=\"coMULTI\">rebol [author: \"Nick Antonaccio\"]</span><br/><span class=\"kw3\">write</span><span class=\"sy0\">/</span><span class=\"kw3\">append</span> <span class=\"sy0\">%</span>rdb <span class=\"st0\">\"\"</span>  db: <span class=\"kw3\">load</span> <span class=\"sy0\">%</span>rdb<br/><span class=\"kw2\">switch</span> system<span class=\"sy0\">/</span>options<span class=\"sy0\">/</span>args<span class=\"sy0\">/</span><span class=\"nu0\">1</span> <span class=\"br0\">[</span><br/>    <span class=\"st0\">\"new\"</span> <span class=\"br0\">[</span><span class=\"kw3\">write</span><span class=\"sy0\">/</span><span class=\"kw3\">append</span> <span class=\"sy0\">%</span>rdb <span class=\"kw3\">rejoin</span> <span class=\"br0\">[</span><span class=\"kw3\">now</span> <span class=\"st0\">\" \"</span> <span class=\"kw3\">mold</span><span class=\"sy0\">/</span>only <span class=\"kw2\">next</span> system<span class=\"sy0\">/</span>options<span class=\"sy0\">/</span>args newline<span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"st0\">\"latest\"</span> <span class=\"br0\">[</span><span class=\"kw3\">print</span> <span class=\"kw3\">copy</span><span class=\"sy0\">/</span>part <span class=\"kw3\">tail</span> <span class=\"kw3\">sort</span><span class=\"sy0\">/</span><span class=\"kw3\">skip</span> db <span class=\"nu0\">4</span> -<span class=\"nu0\">4</span><span class=\"br0\">]</span><br/>    <span class=\"st0\">\"latestcat\"</span> <span class=\"br0\">[</span><br/>        <span class=\"kw2\">foreach</span> cat <span class=\"kw3\">unique</span> <span class=\"kw3\">extract</span> <span class=\"kw3\">at</span> db <span class=\"nu0\">3</span> <span class=\"nu0\">4</span> <span class=\"br0\">[</span><br/>            t: <span class=\"kw3\">copy</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>            <span class=\"kw2\">foreach</span> <span class=\"br0\">[</span>a b c d<span class=\"br0\">]</span> db <span class=\"br0\">[</span><span class=\"kw2\">if</span> c = cat <span class=\"br0\">[</span><span class=\"kw3\">append</span> t <span class=\"kw2\">reduce</span> <span class=\"br0\">[</span>a b c d<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>            <span class=\"kw3\">print</span> <span class=\"kw3\">copy</span><span class=\"sy0\">/</span>part <span class=\"kw3\">tail</span> <span class=\"kw3\">sort</span><span class=\"sy0\">/</span><span class=\"kw3\">skip</span> t <span class=\"nu0\">4</span> -<span class=\"nu0\">4</span><br/>        <span class=\"br0\">]</span><br/>    <span class=\"br0\">]</span><br/>    <span class=\"st0\">\"sort\"</span> <span class=\"br0\">[</span><span class=\"kw3\">probe</span> <span class=\"kw3\">sort</span><span class=\"sy0\">/</span><span class=\"kw3\">skip</span> db <span class=\"nu0\">4</span><span class=\"br0\">]</span><br/><span class=\"br0\">]</span><br/><span class=\"kw2\">halt</span></pre>"}, {"lang": "REXX", "loc": 77, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/* REXX ---------------------------------------------------------------<br/>* 05.10.2014<br/>*--------------------------------------------------------------------*/</span><br/>x05=<span class=\"st0\">'05'</span>x<br/>mydb=<span class=\"st0\">'sidb.txt'</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'Enter your commands,\u00a0?, or end'</span><br/><span class=\"kw1\">Do</span> <span class=\"kw2\">Forever</span><br/>  <span class=\"kw1\">Parse</span> <span class=\"kw1\">Pull</span> l<br/>  <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> l command text<br/>  <span class=\"kw1\">Select</span><br/>    <span class=\"kw3\">When</span> command=<span class=\"st0\">'?'</span> <span class=\"kw3\">Then</span><br/>      <span class=\"kw1\">Call</span> help<br/>    <span class=\"kw3\">When</span> command=<span class=\"st0\">'add'</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>      <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> text item <span class=\"st0\">','</span> category <span class=\"st0\">','</span> <span class=\"kw6\">date</span><br/>      <span class=\"kw1\">If</span> <span class=\"kw6\">date</span>=<span class=\"st0\">''</span> <span class=\"kw3\">Then</span><br/>        <span class=\"kw6\">date</span>=<span class=\"kw6\">date</span><span class=\"br0\">(</span><span class=\"st0\">'S'</span><span class=\"br0\">)</span> <span class=\"coMULTI\">/*yyyymmdd*/</span><br/>      <span class=\"kw1\">Say</span> <span class=\"st0\">'adding item'</span> item<span class=\"st0\">'/'</span>category <span class=\"st0\">'dated'</span> <span class=\"kw6\">date</span><br/>      <span class=\"kw1\">Call</span> <span class=\"kw6\">lineout</span> mydb,<span class=\"kw6\">date</span> item x05 category<br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">When</span> command=<span class=\"st0\">'latest'</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>      <span class=\"kw1\">Call</span> <span class=\"kw6\">lineout</span> mydb<br/>      <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> text category<br/>      hidt=<span class=\"st0\">'00000000'</span><br/>      ol=<span class=\"st0\">''</span><br/>      <span class=\"kw1\">Do</span> <span class=\"kw2\">While</span> <span class=\"kw6\">lines</span><span class=\"br0\">(</span>mydb<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><br/>        l=<span class=\"kw2\">linein</span><span class=\"br0\">(</span>mydb<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> l dt a <span class=\"br0\">(</span>x05<span class=\"br0\">)</span> b<br/>        <span class=\"kw1\">If</span> category=<span class=\"st0\">''</span><span class=\"sy0\">|</span>,<br/>           category=<span class=\"st0\">'-'</span> <span class=\"sy0\">&amp;</span> b=<span class=\"st0\">''</span> <span class=\"sy0\">|</span>,<br/>           b=category <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>          <span class=\"kw1\">If</span> dt<span class=\"sy0\">&gt;&gt;</span>hidt <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>            ol=l<br/>            hidt=dt<br/>            <span class=\"kw3\">End</span><br/>          <span class=\"kw3\">End</span><br/>        <span class=\"kw3\">End</span><br/>        <span class=\"kw1\">If</span> ol<span class=\"sy0\">&gt;</span><span class=\"st0\">''</span> <span class=\"kw3\">Then</span><br/>          <span class=\"kw1\">Call</span> o ol<br/>        <span class=\"kw3\">Else</span><br/>          <span class=\"kw1\">Say</span> <span class=\"st0\">'no matching item found'</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">When</span> command=<span class=\"st0\">'all'</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>      <span class=\"kw1\">Call</span> <span class=\"kw6\">lineout</span> mydb<br/>      <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> text category<br/>      <span class=\"kw1\">Do</span> <span class=\"kw2\">While</span> <span class=\"kw6\">lines</span><span class=\"br0\">(</span>mydb<span class=\"br0\">)</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span><br/>        l=<span class=\"kw2\">linein</span><span class=\"br0\">(</span>mydb<span class=\"br0\">)</span><br/>        <span class=\"kw1\">Parse</span> <span class=\"kw2\">Var</span> l a <span class=\"br0\">(</span>x05<span class=\"br0\">)</span> b<br/>        <span class=\"kw1\">If</span> category=<span class=\"st0\">''</span><span class=\"sy0\">|</span>,<br/>           category=<span class=\"st0\">'-'</span> <span class=\"sy0\">&amp;</span> b=<span class=\"st0\">''</span><span class=\"sy0\">|</span>,<br/>           b=category <span class=\"kw3\">Then</span><br/>          <span class=\"kw1\">Call</span> o l<br/>        <span class=\"kw3\">End</span><br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">When</span> command=<span class=\"st0\">'end'</span> <span class=\"kw3\">Then</span><br/>      <span class=\"kw1\">Leave</span><br/>    <span class=\"kw3\">Otherwise</span> <span class=\"kw1\">Do</span><br/>      <span class=\"kw1\">Say</span> <span class=\"st0\">'invalid command ('</span>command<span class=\"st0\">')'</span><br/>      <span class=\"kw1\">Call</span> help<br/>      <span class=\"kw3\">End</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw3\">End</span><br/><span class=\"kw1\">Say</span> <span class=\"st0\">'Bye'</span><br/><span class=\"kw1\">Exit</span><br/>\u00a0<br/>o: <span class=\"kw1\">Parse</span> <span class=\"kw2\">Value</span> <span class=\"kw1\">arg</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw2\">With</span> dt text<br/>   <span class=\"kw1\">Say</span> <span class=\"kw6\">left</span><span class=\"br0\">(</span>dt,<span class=\"nu0\">8</span><span class=\"br0\">)</span> text<br/>   <span class=\"kw1\">Return</span><br/>\u00a0<br/>help:<br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'add item[,[category][,date]] to add an item'</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'latest category to list the latest item of a category'</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'latest to list the latest item'</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'all category to list all items of a category'</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'all to list all items'</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'end to end this program'</span><br/>  <span class=\"kw1\">Say</span> <span class=\"st0\">'Use category - to list items without category'</span><br/>  <span class=\"kw1\">Return</span></pre>"}, {"lang": "Ruby", "loc": 187, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw3\">require</span> <span class=\"st0\">'date'</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'json'</span><br/><span class=\"kw3\">require</span> <span class=\"st0\">'securerandom'</span><br/>\u00a0<br/><span class=\"kw1\">class</span> SimpleDatabase<br/>  <span class=\"kw1\">def</span> initialize<span class=\"br0\">(</span>dbname, <span class=\"sy0\">*</span>fields<span class=\"br0\">)</span><br/>    <span class=\"re1\">@dbname</span> = dbname<br/>    <span class=\"re1\">@filename</span> = <span class=\"re1\">@dbname</span> <span class=\"sy0\">+</span> <span class=\"st0\">\".dat\"</span><br/>    <span class=\"re1\">@fields</span> = fields<br/>    <span class=\"re1\">@maxl</span> = <span class=\"re1\">@fields</span>.<span class=\"me1\">collect</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>f<span class=\"sy0\">|</span> f.<span class=\"me1\">length</span><span class=\"br0\">}</span>.<span class=\"me1\">max</span><br/>    <span class=\"re1\">@data</span> = <span class=\"br0\">{</span><br/>      <span class=\"st0\">'fields'</span> <span class=\"sy0\">=&gt;</span> fields,<br/>      <span class=\"st0\">'items'</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>,<br/>      <span class=\"st0\">'history'</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>,<br/>      <span class=\"st0\">'tags'</span> <span class=\"sy0\">=&gt;</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>,<br/>    <span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>  attr_reader <span class=\"re3\">:dbname</span>, <span class=\"re3\">:fields</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> <span class=\"kw2\">self</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>dbname<span class=\"br0\">)</span><br/>    db = new<span class=\"br0\">(</span>dbname<span class=\"br0\">)</span><br/>    db.<span class=\"me1\">read</span><br/>    db<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> read<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw1\">not</span> <span class=\"kw4\">File</span>.<span class=\"me1\">exists</span>?<span class=\"br0\">(</span>@filename<span class=\"br0\">)</span><br/>      <span class=\"kw3\">raise</span> <span class=\"kw4\">ArgumentError</span>, <span class=\"st0\">\"Database #@dbname has not been created\"</span><br/>    <span class=\"kw1\">end</span><br/>    <span class=\"re1\">@data</span> = JSON.<span class=\"me1\">parse</span><span class=\"br0\">(</span><span class=\"kw4\">File</span>.<span class=\"me1\">read</span><span class=\"br0\">(</span>@filename<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"re1\">@fields</span> = <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'fields'</span><span class=\"br0\">]</span><br/>    <span class=\"re1\">@maxl</span> = <span class=\"re1\">@fields</span>.<span class=\"me1\">collect</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>f<span class=\"sy0\">|</span> f.<span class=\"me1\">length</span><span class=\"br0\">}</span>.<span class=\"me1\">max</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> write<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw4\">File</span>.<span class=\"kw3\">open</span><span class=\"br0\">(</span>@filename, <span class=\"st0\">'w'</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>f<span class=\"sy0\">|</span> f.<span class=\"me1\">write</span><span class=\"br0\">(</span>JSON.<span class=\"me1\">generate</span><span class=\"br0\">(</span>@data<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> add<span class=\"br0\">(</span><span class=\"sy0\">*</span>values<span class=\"br0\">)</span><br/>    id = SecureRandom.<span class=\"me1\">uuid</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'items'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>id<span class=\"br0\">]</span> = <span class=\"kw4\">Hash</span><span class=\"br0\">[</span> <span class=\"re1\">@fields</span>.<span class=\"me1\">zip</span><span class=\"br0\">(</span>values<span class=\"br0\">)</span> <span class=\"br0\">]</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'history'</span><span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> <span class=\"br0\">[</span><span class=\"kw4\">Time</span>.<span class=\"me1\">now</span>.<span class=\"me1\">to_f</span>, id<span class=\"br0\">]</span><br/>    id<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> tag<span class=\"br0\">(</span>id, <span class=\"sy0\">*</span>tags<span class=\"br0\">)</span><br/>    tags.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>tag<span class=\"sy0\">|</span><br/>      <span class=\"kw1\">if</span> <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>tag<span class=\"br0\">]</span>.<span class=\"kw2\">nil</span>?<br/>        <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>tag<span class=\"br0\">]</span> = <span class=\"br0\">[</span>id<span class=\"br0\">]</span><br/>      <span class=\"kw1\">else</span><br/>        <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>tag<span class=\"br0\">]</span> <span class=\"sy0\">&lt;&lt;</span> id<br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>    id<br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> latest<br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'history'</span><span class=\"br0\">]</span>.<span class=\"me1\">sort_by</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>val<span class=\"sy0\">|</span> val<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">}</span>.<span class=\"me1\">last</span>.<span class=\"me1\">last</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> get_item<span class=\"br0\">(</span>id<span class=\"br0\">)</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'items'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>id<span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> tags<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span>.<span class=\"me1\">keys</span>.<span class=\"me1\">sort</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> ids_for_tag<span class=\"br0\">(</span>tag<span class=\"br0\">)</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>tag<span class=\"br0\">]</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> tags_for_id<span class=\"br0\">(</span>id<span class=\"br0\">)</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span>.<span class=\"me1\">keys</span>.<span class=\"me1\">inject</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>tags, tag<span class=\"sy0\">|</span> <br/>      tags <span class=\"sy0\">&lt;&lt;</span> tag <span class=\"kw1\">if</span> <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>tag<span class=\"br0\">]</span>.<span class=\"kw1\">include</span>?<span class=\"br0\">(</span>id<span class=\"br0\">)</span><br/>      tags<br/>    <span class=\"kw1\">end</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> display<span class=\"br0\">(</span>id<span class=\"br0\">)</span><br/>    item = get_item<span class=\"br0\">(</span>id<span class=\"br0\">)</span><br/>    fmt = <span class=\"st0\">\"%#{@maxl}s -\u00a0%s<span class=\"es0\">\\n</span>\"</span><br/>    <span class=\"kw3\">puts</span> fmt <span class=\"sy0\">%</span> <span class=\"br0\">[</span><span class=\"st0\">'id'</span>, id<span class=\"br0\">]</span><br/>    <span class=\"re1\">@fields</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>f<span class=\"sy0\">|</span> <span class=\"kw3\">print</span> fmt <span class=\"sy0\">%</span> <span class=\"br0\">[</span>f, item<span class=\"br0\">[</span>f<span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">puts</span> fmt <span class=\"sy0\">%</span> <span class=\"br0\">[</span><span class=\"st0\">'tags'</span>, tags_for_id<span class=\"br0\">(</span>id<span class=\"br0\">)</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br/>    added = <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'history'</span><span class=\"br0\">]</span>.<span class=\"me1\">find</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>x<span class=\"sy0\">|</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> == id<span class=\"br0\">}</span>.<span class=\"me1\">first</span><br/>    <span class=\"kw3\">puts</span> fmt <span class=\"sy0\">%</span> <span class=\"br0\">[</span><span class=\"st0\">'date added'</span>, <span class=\"kw4\">Time</span>.<span class=\"me1\">at</span><span class=\"br0\">(</span>added<span class=\"br0\">)</span>.<span class=\"me1\">ctime</span><span class=\"br0\">]</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"\"</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> each<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'history'</span><span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>time, id<span class=\"sy0\">|</span> <span class=\"kw1\">yield</span> id<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">def</span> each_item_with_tag<span class=\"br0\">(</span>tag<span class=\"br0\">)</span><br/>    <span class=\"re1\">@data</span><span class=\"br0\">[</span><span class=\"st0\">'tags'</span><span class=\"br0\">]</span><span class=\"br0\">[</span>tag<span class=\"br0\">]</span>.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>id<span class=\"sy0\">|</span> <span class=\"kw1\">yield</span> id<span class=\"br0\">}</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/><span class=\"kw1\">def</span> usage<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw3\">puts</span> <span class=\"co4\">&lt;&lt;END<br/>usage: #{$0} command args ...<br/>\u00a0<br/>commands:<br/>  help <br/>  create dbname field ...<br/>  fields dbname<br/>  add dbname value ...<br/>  tag dbname id tag ...<br/>  tags dbname<br/>  list dbname [tag ...]<br/>  latest dbname<br/>  latest_by_tag dbname<br/>END</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>  dbname = args.<span class=\"me1\">shift</span><br/>  <span class=\"kw1\">begin</span><br/>    SimpleDatabase.<span class=\"kw3\">open</span><span class=\"br0\">(</span>dbname<span class=\"br0\">)</span><br/>  <span class=\"kw1\">rescue</span> <span class=\"kw4\">ArgumentError</span> <span class=\"sy0\">=&gt;</span> e<br/>    STDERR.<span class=\"kw3\">puts</span> e.<span class=\"me1\">message</span><br/>    <span class=\"kw3\">exit</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"kw1\">def</span> process_command_line<span class=\"br0\">(</span>command, <span class=\"sy0\">*</span>args<span class=\"br0\">)</span><br/>  <span class=\"kw1\">case</span> command<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'help'</span><br/>    usage<br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'create'</span><br/>    db = SimpleDatabase.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>args<span class=\"br0\">)</span><br/>    db.<span class=\"me1\">write</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Database #{args[0]} created\"</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'fields'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Database #{db.dbname} fields:\"</span><br/>    <span class=\"kw3\">puts</span> db.<span class=\"me1\">fields</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'add'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    id = db.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>args<span class=\"br0\">)</span><br/>    db.<span class=\"me1\">write</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Database #{db.dbname} added id #{id}\"</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'tag'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    id = args.<span class=\"me1\">shift</span><br/>    db.<span class=\"me1\">tag</span><span class=\"br0\">(</span>id, <span class=\"sy0\">*</span>args<span class=\"br0\">)</span><br/>    db.<span class=\"me1\">write</span><br/>    db.<span class=\"me1\">display</span><span class=\"br0\">(</span>id<span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'tags'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Database #{db.dbname} tags:\"</span><br/>    <span class=\"kw3\">puts</span> db.<span class=\"me1\">tags</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'list'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> args.<span class=\"me1\">empty</span>?<br/>      db.<span class=\"me1\">each</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>id<span class=\"sy0\">|</span> db.<span class=\"me1\">display</span><span class=\"br0\">(</span>id<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>    <span class=\"kw1\">else</span><br/>      args.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>tag<span class=\"sy0\">|</span> <br/>        <span class=\"kw3\">puts</span> <span class=\"st0\">\"Items tagged #{tag}\"</span><br/>        db.<span class=\"me1\">each_item_with_tag</span><span class=\"br0\">(</span>tag<span class=\"br0\">)</span> <span class=\"br0\">{</span><span class=\"sy0\">|</span>id<span class=\"sy0\">|</span> db.<span class=\"me1\">display</span><span class=\"br0\">(</span>id<span class=\"br0\">)</span><span class=\"br0\">}</span><br/>      <span class=\"kw1\">end</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'latest'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    db.<span class=\"me1\">display</span><span class=\"br0\">(</span>db.<span class=\"me1\">latest</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">when</span> <span class=\"st0\">'latest_by_tag'</span><br/>    db = open_database<span class=\"br0\">(</span>args<span class=\"br0\">)</span><br/>    db.<span class=\"me1\">tags</span>.<span class=\"me1\">each</span> <span class=\"kw1\">do</span> <span class=\"sy0\">|</span>tag<span class=\"sy0\">|</span><br/>      <span class=\"kw3\">puts</span> tag<br/>      db.<span class=\"me1\">display</span><span class=\"br0\">(</span>db.<span class=\"me1\">ids_for_tag</span><span class=\"br0\">(</span>tag<span class=\"br0\">)</span>.<span class=\"me1\">last</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"Error: unknown command '#{command}'\"</span><br/>    usage<br/>  <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/>process_command_line <span class=\"sy0\">*</span>ARGV</pre>"}, {"lang": "Run BASIC", "loc": 100, "block": "<pre class=\"text highlighted_source\">sqliteconnect    #sql,  \"f:\\client.db\"  ' Connect to the DB<br/>\u00a0<br/>' -------------------------------<br/>' show user options<br/>' -------------------------------<br/>[sho]<br/>cls ' clear screen<br/>button #acd, \"Add a new entry\",                          [add]<br/>button #acd, \"Print the latest entry\", \t\t\t [last]<br/>button #acd, \"Print the latest entry for each category\", [lastCat]<br/>button #acd, \"Print all entries sorted by a date\",       [date]<br/>button #ex, \"Exit\",                                      [exit]<br/>wait<br/>\u00a0<br/>' ------------------------------------<br/>' add a new entry (user input screen)<br/>' ------------------------------------<br/>[add]<br/>cls ' clear the screen<br/>html \"&lt;TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0 bgcolor=wheat&gt;\"<br/>html \"&lt;TR align=center BGCOLOR=tan&gt;&lt;TD colspan=2&gt;Client Maintenance&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;\"<br/>html \"&lt;TD bgcolor=tan align=right&gt;Client Num&lt;/TD&gt;&lt;TD&gt;\"<br/>       textbox #clientNum,clientNum$,5<br/>\u00a0<br/>html \"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD bgcolor=tan align=right&gt;Name&lt;/TD&gt;&lt;TD&gt;\"<br/>     textbox #name,name$,30<br/>\u00a0<br/>html \"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD bgcolor=tan align=right&gt;Client Date&lt;/TD&gt;&lt;TD&gt;\"<br/>     textbox #clientDate,clientDate$,19<br/>\u00a0<br/>html \"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD bgcolor=tan align=right&gt;Category&lt;/TD&gt;&lt;TD&gt;\"<br/>     textbox #category,category$,10<br/>\u00a0<br/>html \"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TR bgcolor=tan&gt;&lt;TD colspan=2 ALIGN=CENTER&gt;\"<br/>     button #acd, \"Add\", [addIt]<br/>     button #ex, \"Exit\", [sho]<br/>html \"&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt;\"<br/>wait<br/>\u00a0<br/>' ---------------------------------------------<br/>' Get data from the screen<br/>' ---------------------------------------------<br/>[addIt]<br/>clientNum    =       #clientNum contents$()<br/>name$        = trim$(#name contents$())<br/>clientDate$  = trim$(#clientDate contents$())<br/>category$    = trim$(#category contents$())<br/>dbVals$      = clientNum;\",'\";name$;\"','\";clientDate$;\"','\";category$;\"'\"<br/>sql$         = \"INSERT into client VALUES (\"; dbVals$\u00a0; \")\"<br/>#sql execute(sql$)<br/>goto [sho]<br/>\u00a0<br/>' ------------------------------------<br/>' Select last entry<br/>' ------------------------------------<br/>[last]<br/>sql$ = \"SELECT *,client.rowid as rowid FROM client ORDER BY rowid desc LIMIT 1\"<br/>what$ = \"---- Last Entry ----\"<br/>goto [shoQuery]<br/>\u00a0<br/>' ------------------------------------<br/>' Select by category (Last date only)<br/>' ------------------------------------<br/>[lastCat]<br/>sql$ = \"SELECT * FROM client <br/>WHERE client.clientDate = (SELECT max(c.clientDate) <br/>FROM client as c WHERE c.category = client.category)<br/>ORDER BY category\"<br/>what$ = \"---- Last Category Sequence ----\"<br/>goto [shoQuery]<br/>\u00a0<br/>' ------------------------------------<br/>' Select by date<br/>' ------------------------------------<br/>[date]<br/>sql$ = \"SELECT * FROM client ORDER BY clientDate\"<br/>what$ = \"---- By Date ----\"<br/>\u00a0<br/>[shoQuery]<br/>cls<br/>print what$<br/>html \"&lt;TABLE BORDER=1 CELLPADDING=0 CELLSPACING=0&gt;\"<br/>html \"&lt;TR align=center bgcolor=wheat&gt;&lt;TD&gt;Client&lt;br&gt;Num&lt;/TD&gt;&lt;TD&gt;Name&lt;/TD&gt;&lt;TD&gt;Client&lt;br&gt;Date&lt;/TD&gt;&lt;TD&gt;Category&lt;/TD&gt;&lt;/TR&gt;\" ' heading<br/>#sql\texecute(sql$)<br/>WHILE  #sql hasanswer()<br/>  #row = #sql #nextrow()<br/>  clientNum\t= #row clientNum()<br/>  name$\t\t= #row name$()<br/>  clientDate$\t= #row clientDate$()<br/>  category$\t= #row category$()<br/>\u00a0<br/>  html \"&lt;TR&gt;&lt;TD align=right&gt;\";clientNum;\"&lt;/TD&gt;&lt;TD&gt;\";name$;\"&lt;/TD&gt;&lt;TD&gt;\";clientDate$;\"&lt;/TD&gt;&lt;TD&gt;\";category$;\"&lt;/TD&gt;&lt;/TR&gt;\"<br/>WEND<br/>html \"&lt;/TABLE&gt;\"<br/>button #c, \"Continue\", [sho]<br/>wait<br/>\u00a0<br/>' ------ the end -------<br/>[exit]<br/>end</pre>"}, {"lang": "Scala", "loc": 38, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> SimpleDatabase <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">type</span></a> Entry <span class=\"sy0\">=</span> Array<span class=\"br0\">[</span>String<span class=\"br0\">]</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> asTSV<span class=\"br0\">(</span>e<span class=\"sy0\">:</span> Entry<span class=\"br0\">)</span> <span class=\"sy0\">=</span> e mkString <span class=\"st0\">\"<span class=\"es1\">\\t</span>\"</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> fromTSV<span class=\"br0\">(</span>s<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">=</span> s split <span class=\"st0\">\"<span class=\"es1\">\\t</span>\"</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> header <span class=\"sy0\">=</span> asTSV<span class=\"br0\">(</span>Array<span class=\"br0\">(</span><span class=\"st0\">\"TIMESTAMP\"</span>, <span class=\"st0\">\"DESCRIPTION\"</span>, <span class=\"st0\">\"CATEGORY\"</span>, <span class=\"st0\">\"OTHER\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> read<span class=\"br0\">(</span>filename<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">try</span></a> <span class=\"br0\">{</span><br/>    scala.<span class=\"me1\">io</span>.<span class=\"me1\">Source</span>.<span class=\"me1\">fromFile</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span>.<span class=\"me1\">getLines</span>.<span class=\"me1\">drop</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">map</span><span class=\"br0\">(</span>fromTSV<span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">catch</span></a> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> e<span class=\"sy0\">:</span> java.<span class=\"me1\">io</span>.<span class=\"me1\">FileNotFoundException</span> <span class=\"sy0\">=&gt;</span> Nil<br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> write<span class=\"br0\">(</span>filename<span class=\"sy0\">:</span> String, all<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>Entry<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">nio</span>.<span class=\"me1\">file</span>.<span class=\"br0\">{</span>Files,Paths<span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> scala.<span class=\"me1\">collection</span>.<span class=\"me1\">JavaConversions</span>.<span class=\"me1\">asJavaIterable</span><br/>    Files.<span class=\"me1\">write</span><span class=\"br0\">(</span>Paths.<span class=\"me1\">get</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span>, asJavaIterable<span class=\"br0\">(</span>header +<span class=\"sy0\">:</span> all.<span class=\"me1\">map</span><span class=\"br0\">(</span>asTSV<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    all.<span class=\"me1\">size</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> add<span class=\"br0\">(</span>filename<span class=\"sy0\">:</span> String, description<span class=\"sy0\">:</span> String, category<span class=\"sy0\">:</span> String <span class=\"sy0\">=</span> <span class=\"st0\">\"none\"</span>, optional<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>String<span class=\"br0\">]</span> <span class=\"sy0\">=</span> Nil<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> format <span class=\"sy0\">=</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> java.<span class=\"me1\">text</span>.<span class=\"me1\">SimpleDateFormat</span><span class=\"br0\">(</span><span class=\"st0\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> e <span class=\"sy0\">=</span> Array<span class=\"br0\">(</span>format.<span class=\"me1\">format</span><span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">new</span></a> java.<span class=\"me1\">util</span>.<span class=\"me1\">Date</span><span class=\"br0\">)</span>, description, category<span class=\"br0\">)</span> ++ optional<br/>    println<span class=\"br0\">(</span>write<span class=\"br0\">(</span>filename, read<span class=\"br0\">(</span>filename<span class=\"br0\">)</span>.<span class=\"me1\">toBuffer</span> <span class=\"sy0\">:</span>+ e<span class=\"br0\">)</span> + <span class=\"st0\">\" entries\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> print<span class=\"br0\">(</span>filename<span class=\"sy0\">:</span> String, filter<span class=\"sy0\">:</span> Seq<span class=\"br0\">[</span>Entry<span class=\"br0\">]</span> <span class=\"sy0\">=&gt;</span> TraversableOnce<span class=\"br0\">[</span>Entry<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><br/>    filter<span class=\"br0\">(</span>read<span class=\"br0\">(</span>filename<span class=\"br0\">)</span>.<span class=\"me1\">toList</span>.<span class=\"me1\">sortBy</span><span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">headOption</span><span class=\"br0\">)</span><span class=\"br0\">)</span> map<span class=\"br0\">(</span><span class=\"sy0\">_</span> mkString <span class=\"st0\">\",\"</span><span class=\"br0\">)</span> foreach println<br/>\u00a0<br/>  args <a href=\"http://scala-lang.org\"><span class=\"kw1\">match</span></a> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>f, <span class=\"st0\">\"latest\"</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> print<span class=\"br0\">(</span>f, <span class=\"sy0\">_</span> takeRight <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>f, <span class=\"st0\">\"latest\"</span>, cat<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> print<span class=\"br0\">(</span>f, <span class=\"sy0\">_</span> filter<span class=\"br0\">(</span><span class=\"sy0\">_</span>.<span class=\"me1\">lift</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> Some<span class=\"br0\">(</span>cat<span class=\"br0\">)</span><span class=\"br0\">)</span> takeRight <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>f, <span class=\"st0\">\"all\"</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> print<span class=\"br0\">(</span>f, <span class=\"sy0\">_</span>.<span class=\"me1\">toSeq</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>f, <span class=\"st0\">\"all\"</span>, <span class=\"st0\">\"latest\"</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> print<span class=\"br0\">(</span>f, <span class=\"sy0\">_</span> groupBy <span class=\"br0\">(</span><span class=\"sy0\">_</span> lift <span class=\"nu0\">2</span> getOrElse <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> map<span class=\"br0\">{</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"br0\">(</span><span class=\"sy0\">_</span>, cat<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> cat.<span class=\"me1\">last</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>f, <span class=\"st0\">\"add\"</span>, desc<span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> add<span class=\"br0\">(</span>f, desc, category <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> Array<span class=\"br0\">(</span>f, <span class=\"st0\">\"add\"</span>, desc, cat, opt <span class=\"sy0\">@</span> <span class=\"sy0\">_*</span><span class=\"br0\">)</span> <span class=\"sy0\">=&gt;</span> add<span class=\"br0\">(</span>f, desc, cat, opt<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">case</span></a> <span class=\"sy0\">_</span> <span class=\"sy0\">=&gt;</span> println<span class=\"br0\">(</span><span class=\"st0\">\"Usage: SimpleDatabase filename.tsv [all [latest]| latest [CATEGORY] | add [DESCRIPTION [CATEGORY [OPTIONAL]...]]]\"</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Tcl", "loc": 101, "block": "<pre class=\"tcl highlighted_source\"><span class=\"co1\">#!/usr/bin/env tclsh8.6</span><br/><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.6</span><br/><span class=\"kw1\">namespace</span> <span class=\"kw1\">eval</span> udb <span class=\"br0\">{</span><br/>    <span class=\"kw1\">variable</span> db <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">proc</span> Load <span class=\"br0\">{</span><span class=\"kw3\">filename</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">variable</span> db<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">catch</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$filename</span><span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> db <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\t    <span class=\"kw1\">return</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">set</span> db <span class=\"br0\">[</span><span class=\"kw2\">read</span> <span class=\"re0\">$f</span><span class=\"br0\">]</span><br/>\t<span class=\"kw2\">close</span> <span class=\"re0\">$f</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">proc</span> Store <span class=\"br0\">{</span><span class=\"kw3\">filename</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">variable</span> db<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">catch</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> f <span class=\"br0\">[</span><span class=\"kw2\">open</span> <span class=\"re0\">$filename</span> w<span class=\"br0\">]</span><span class=\"br0\">}</span><span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"kw1\">return</span><br/>\tdict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>nm inf<span class=\"br0\">}</span> <span class=\"re0\">$db</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"re0\">$f</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$nm</span> <span class=\"re0\">$inf</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw2\">close</span> <span class=\"re0\">$f</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">proc</span> add <span class=\"br0\">{</span>title category <span class=\"br0\">{</span>date <span class=\"st0\">\"now\"</span><span class=\"br0\">}</span> args<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">variable</span> db<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$date</span> eq <span class=\"st0\">\"now\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> date <span class=\"br0\">[</span><span class=\"kw2\">clock</span> seconds<span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> date <span class=\"br0\">[</span><span class=\"kw2\">clock</span> <span class=\"kw2\">scan</span> <span class=\"re0\">$date</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\tdict <span class=\"kw1\">set</span> db <span class=\"re0\">$title</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$category</span> <span class=\"re0\">$date</span> <span class=\"re0\">$args</span><span class=\"br0\">]</span><br/>\t<span class=\"kw1\">return</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">proc</span> Rec <span class=\"br0\">{</span>nm cat date xtra<span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\tdict create description <span class=\"re0\">$nm</span> category <span class=\"re0\">$cat</span> date <span class=\"br0\">[</span><span class=\"kw2\">clock</span> <span class=\"kw2\">format</span> <span class=\"re0\">$date</span><span class=\"br0\">]</span> \\<br/>\t    <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$xtra</span> _names <span class=\"br0\">[</span>dict keys <span class=\"re0\">$xtra</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">proc</span> latest <span class=\"br0\">{</span><span class=\"br0\">{</span>category <span class=\"st0\">\"\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">variable</span> db<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$category</span> eq <span class=\"st0\">\"\"</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw1\">set</span> d <span class=\"br0\">[</span><span class=\"kw2\">lsort</span> -stride <span class=\"nu0\">2</span> -index <span class=\"br0\">{</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> -integer -decreasing <span class=\"re0\">$db</span><span class=\"br0\">]</span><br/>\t    dict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>nm inf<span class=\"br0\">}</span> <span class=\"re0\">$d</span> <span class=\"kw1\">break</span><br/>\t    <span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"br0\">[</span>Rec <span class=\"re0\">$nm</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$inf</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">set</span> latestbycat <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\tdict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>nm inf<span class=\"br0\">}</span> <span class=\"br0\">[</span><span class=\"kw2\">lsort</span> -stride <span class=\"nu0\">2</span> -index <span class=\"br0\">{</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> -integer <span class=\"re0\">$db</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    dict <span class=\"kw1\">set</span> latestbycat <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$inf</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$nm</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$inf</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"br0\">[</span>Rec <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"br0\">[</span>dict get <span class=\"re0\">$latestbycat</span> <span class=\"re0\">$category</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">proc</span> latestpercategory <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">variable</span> db<br/>\t<span class=\"kw1\">set</span> latestbycat <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\tdict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>nm inf<span class=\"br0\">}</span> <span class=\"br0\">[</span><span class=\"kw2\">lsort</span> -stride <span class=\"nu0\">2</span> -index <span class=\"br0\">{</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> -integer <span class=\"re0\">$db</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    dict <span class=\"kw1\">set</span> latestbycat <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"re0\">$inf</span> <span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"br0\">[</span><span class=\"kw2\">list</span> <span class=\"re0\">$nm</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$inf</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">set</span> result <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\tdict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>- inf<span class=\"br0\">}</span> <span class=\"re0\">$latestbycat</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> result <span class=\"br0\">[</span>Rec <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$inf</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"re0\">$result</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">proc</span> bydate <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">variable</span> db<br/>\t<span class=\"kw1\">set</span> result <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\tdict <span class=\"kw1\">for</span> <span class=\"br0\">{</span>nm inf<span class=\"br0\">}</span> <span class=\"br0\">[</span><span class=\"kw2\">lsort</span> -stride <span class=\"nu0\">2</span> -index <span class=\"br0\">{</span><span class=\"nu0\">1</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> -integer <span class=\"re0\">$db</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">lappend</span> result <span class=\"br0\">[</span>Rec <span class=\"re0\">$nm</span> <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"re0\">$inf</span><span class=\"br0\">]</span><br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">return</span> <span class=\"re0\">$result</span><br/>    <span class=\"br0\">}</span><br/>\u00a0<br/>    <span class=\"kw1\">namespace</span> export add latest latestpercategory bydate<br/>    <span class=\"kw1\">namespace</span> ensemble create <br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"kw2\"><span class=\"re0\">$argc</span></span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> stderr <span class=\"st0\">\"wrong # args: should be <span class=\"es0\">\\\"</span>$argv0 dbfile subcommand\u00a0?args...?<span class=\"es0\">\\\"</span>\"</span><br/>    <span class=\"kw1\">exit</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/>udb::<span class=\"me1\">Load</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"kw2\"><span class=\"re0\">$argv</span></span> <span class=\"nu0\">0</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> separator <span class=\"st0\">\"\"</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw1\">catch</span> <span class=\"br0\">{</span>udb <span class=\"br0\">{</span><span class=\"sy0\">*</span><span class=\"br0\">}</span><span class=\"br0\">[</span><span class=\"kw2\">lrange</span> <span class=\"kw2\"><span class=\"re0\">$argv</span></span> <span class=\"nu0\">1</span> end<span class=\"br0\">]</span><span class=\"br0\">}</span> msg<span class=\"br0\">]</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> stderr <span class=\"br0\">[</span><span class=\"kw2\">regsub</span> <span class=\"st0\">\"<span class=\"es0\">\\\"</span>udb \"</span> <span class=\"re0\">$msg</span> <span class=\"st0\">\"<span class=\"es0\">\\\"</span>$argv0 dbfile \"</span><span class=\"br0\">]</span><br/>    <span class=\"kw1\">exit</span> <span class=\"nu0\">1</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">foreach</span> row <span class=\"re0\">$msg</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> -nonewline <span class=\"re0\">$separator</span><br/>    apply <span class=\"br0\">{</span>row <span class=\"br0\">{</span><br/>\tdict with row <span class=\"br0\">{</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"Title: $description\"</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"Category: $category\"</span><br/>\t    <span class=\"kw2\">puts</span> <span class=\"st0\">\"Date: $date\"</span><br/>\t    <span class=\"kw1\">foreach</span> v <span class=\"re0\">$_names</span> <span class=\"br0\">{</span><br/>\t\t<span class=\"kw2\">puts</span> <span class=\"st0\">\"${v}: [dict get $row $v]\"</span><br/>\t    <span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/>    <span class=\"br0\">}</span><span class=\"br0\">}</span> <span class=\"re0\">$row</span><br/>    <span class=\"kw1\">set</span> separator <span class=\"br0\">[</span><span class=\"kw2\">string</span> repeat - <span class=\"nu0\">70</span><span class=\"br0\">]</span>\\n<br/><span class=\"br0\">}</span><br/>\u00a0<br/>udb::<span class=\"me1\">Store</span> <span class=\"br0\">[</span><span class=\"kw2\">lindex</span> <span class=\"kw2\"><span class=\"re0\">$argv</span></span> <span class=\"nu0\">0</span><span class=\"br0\">]</span></pre>"}, {"lang": "ToffeeScript", "loc": 85, "block": "<pre class=\"coffeescript highlighted_source\"><span class=\"co1\">#!/usr/local/bin/toffee</span><br/>\u00a0<br/>prog = require <span class=\"st0\">'commander'</span><br/>fs = require <span class=\"st0\">'fs-extra'</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"kw2\">not</span> fs.<span class=\"me1\">exists</span><span class=\"sy0\">!</span> <span class=\"st0\">'data.json'</span><br/>  fs.<span class=\"me1\">outputJson</span><span class=\"sy0\">!</span> <span class=\"st0\">'data.json'</span><span class=\"sy0\">,</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>\u00a0<br/>prog<br/>  .<span class=\"me1\">command</span><span class=\"br0\">(</span><span class=\"st0\">'add &lt;name&gt; &lt;category&gt; [date]'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">description</span><span class=\"br0\">(</span><span class=\"st0\">'Add a new entry'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">option</span><span class=\"br0\">(</span><span class=\"st0\">'-n &lt;text&gt;'</span><span class=\"sy0\">,</span> <span class=\"st0\">'notes'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">option</span><span class=\"br0\">(</span><span class=\"st0\">'-t &lt;tags&gt;'</span><span class=\"sy0\">,</span> <span class=\"st0\">'tags'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">action</span> addentry<br/>\u00a0<br/>prog<br/>  .<span class=\"me1\">command</span><span class=\"br0\">(</span><span class=\"st0\">'latest'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">description</span><span class=\"br0\">(</span><span class=\"st0\">'Print the latest entry'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">action</span> latest<br/>\u00a0<br/>prog<br/>  .<span class=\"me1\">command</span><span class=\"br0\">(</span><span class=\"st0\">'catlatest'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">description</span><span class=\"br0\">(</span><span class=\"st0\">'Print the latest entry for each category'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">action</span> catlatestout<br/>\u00a0<br/>prog<br/>  .<span class=\"me1\">command</span><span class=\"br0\">(</span><span class=\"st0\">'list'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">description</span><span class=\"br0\">(</span><span class=\"st0\">'Print all entries sorted by date'</span><span class=\"br0\">)</span><br/>  .<span class=\"me1\">action</span> bydate<br/>\u00a0<br/>\u00a0<br/>addentry = <span class=\"br0\">(</span>name<span class=\"sy0\">,</span> category<span class=\"sy0\">,</span> dt<span class=\"sy0\">,</span> options<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"kw1\">if</span> dt<span class=\"sy0\">?</span> <span class=\"kw1\">then</span> dat = <span class=\"kw3\">new</span> Date<span class=\"br0\">(</span>dt<span class=\"br0\">)</span> <span class=\"kw1\">else</span> dat = <span class=\"kw3\">new</span> Date<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  update =<br/>    name<span class=\"sy0\">:</span> name<br/>    category<span class=\"sy0\">:</span> category<br/>    tags<span class=\"sy0\">:</span> options<span class=\"sy0\">?</span>.<span class=\"me1\">T</span><br/>    notes<span class=\"sy0\">:</span> options<span class=\"sy0\">?</span>.<span class=\"me1\">N</span><br/>    date<span class=\"sy0\">:</span> dat.<span class=\"me1\">getTime</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  e<span class=\"sy0\">,</span> data = fs.<span class=\"me1\">readJson</span><span class=\"sy0\">!</span> <span class=\"st0\">'data.json'</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw2\">not</span> data<span class=\"br0\">[</span>category<span class=\"br0\">]</span><span class=\"sy0\">?</span><br/>    data<span class=\"br0\">[</span>category<span class=\"br0\">]</span> = <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  data<span class=\"br0\">[</span>category<span class=\"br0\">]</span>.<span class=\"me1\">push</span> update<br/>  fs.<span class=\"me1\">outputJson</span> <span class=\"st0\">'data.json'</span><span class=\"sy0\">,</span> data<br/>\u00a0<br/>byDateNew = <span class=\"br0\">(</span>a<span class=\"sy0\">,</span> b<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  <span class=\"kw1\">if</span> a.<span class=\"me1\">date</span><span class=\"sy0\">&lt;</span>b.<span class=\"me1\">date</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">if</span> b.<span class=\"me1\">date</span><span class=\"sy0\">&gt;</span>a.<span class=\"me1\">date</span> <span class=\"kw1\">then</span> <span class=\"kw1\">return</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><br/>\u00a0<br/>catlatest = <span class=\"br0\">(</span>cb<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  e<span class=\"sy0\">,</span> data = fs.<span class=\"me1\">readJson</span><span class=\"sy0\">!</span> <span class=\"st0\">'data.json'</span><br/>  ret = <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">for</span> cat<span class=\"sy0\">,</span> list <span class=\"kw1\">of</span> data<br/>    list.<span class=\"me1\">sort</span> byDateNew<br/>    ret.<span class=\"me1\">push</span> list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>  cb ret<br/>\u00a0<br/>printFormatted = <span class=\"br0\">(</span>entry<span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>  tmp = entry.<span class=\"me1\">date</span><br/>  entry.<span class=\"me1\">date</span> = <span class=\"kw3\">new</span> Date<span class=\"br0\">(</span>entry.<span class=\"me1\">date</span><span class=\"br0\">)</span>.<span class=\"me1\">toDateString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  console.<span class=\"me1\">log</span> entry<br/>  entry.<span class=\"me1\">date</span> = tmp<br/>\u00a0<br/>latest = <span class=\"sy0\">-&gt;</span><br/>  newpercat = catlatest<span class=\"sy0\">!</span><br/>  newpercat.<span class=\"me1\">sort</span> byDateNew<br/>  printFormatted newpercat<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><br/>\u00a0<br/>catlatestout = <span class=\"sy0\">-&gt;</span><br/>  items = catlatest<span class=\"sy0\">!</span><br/>  <span class=\"kw1\">for</span> item <span class=\"kw1\">in</span> items<br/>    printFormatted item<br/>\u00a0<br/>bydate = <span class=\"sy0\">-&gt;</span><br/>  e<span class=\"sy0\">,</span> data = fs.<span class=\"me1\">readJson</span><span class=\"sy0\">!</span> <span class=\"st0\">'data.json'</span><br/>  entries = <span class=\"br0\">[</span><span class=\"br0\">]</span><br/>  <span class=\"kw1\">for</span> cat<span class=\"sy0\">,</span> list <span class=\"kw1\">of</span> data<br/>    <span class=\"kw1\">for</span> item <span class=\"kw1\">in</span> list<br/>      entries.<span class=\"me1\">push</span> item<br/>  entries.<span class=\"me1\">sort</span> byDateNew<br/>  <span class=\"kw1\">for</span> entry <span class=\"kw1\">in</span> entries<br/>    printFormatted entry<br/>\u00a0<br/>prog.<span class=\"me1\">parse</span> process.<span class=\"me1\">argv</span></pre>"}, {"lang": "UNIX Shell", "loc": 96, "block": "<pre class=\"bash highlighted_source\"><span class=\"co0\">#!/bin/sh</span><br/>\u00a0<br/>db_create<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">mkdir</span> .<span class=\"sy0\">/</span><span class=\"st0\">\"$1\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw2\">mkdir</span> <span class=\"st0\">\"./$1/.tag\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">echo</span> <span class=\"st0\">\"Create DB \\<span class=\"es5\">`$1'\"<br/>}<br/>\u00a0<br/>db_delete() {<br/>\trm -r ./\"$1\" &amp;&amp; echo \"Delete DB \\`</span>$1'\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>db_show<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"re5\">-z</span> <span class=\"st0\">\"$2\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span> show_help; <span class=\"kw1\">fi</span><br/>\t<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"st0\">\"./$1/$2/\"</span><span class=\"sy0\">*</span>; <span class=\"kw1\">do</span><br/>\t\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"<span class=\"es2\">$x</span>:\"</span> <span class=\"sy0\">|</span> <span class=\"kw2\">sed</span> <span class=\"st0\">\"s/.*\\///\"</span><br/>\t\t<span class=\"kw2\">cat</span> <span class=\"st0\">\"<span class=\"es2\">$x</span>\"</span> <span class=\"sy0\">|</span> <span class=\"kw2\">sed</span> <span class=\"st0\">\"s/^/    /\"</span><br/>\t\t<span class=\"kw3\">echo</span><br/>\t<span class=\"kw1\">done</span><br/>\u00a0<br/>\t<span class=\"kw3\">printf</span> <span class=\"st0\">\"Tags: \"</span><br/>\t<span class=\"kw2\">ls</span> <span class=\"st0\">\"./$1/$2/.tag\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>db_tag<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">local</span> <span class=\"re2\">db</span>=<span class=\"st0\">\"$1\"</span> <span class=\"re2\">item</span>=<span class=\"st0\">\"$2\"</span><br/>\t<span class=\"kw3\">shift</span><br/>\t<span class=\"kw3\">shift</span><br/>\t<span class=\"kw1\">for</span> tag <span class=\"kw1\">in</span> $<span class=\"sy0\">@</span>; <span class=\"kw1\">do</span><br/>\t\t<span class=\"kw2\">mkdir</span> <span class=\"st0\">\"./<span class=\"es2\">$db</span>/.tag/<span class=\"es2\">$tag</span>\"</span><br/>\t\t<span class=\"kw2\">ln</span> <span class=\"re5\">-s</span> <span class=\"st0\">\"<span class=\"es2\">$PWD</span>/<span class=\"es2\">$db</span>/<span class=\"es2\">$item</span>\"</span> <span class=\"st0\">\"./<span class=\"es2\">$db</span>/.tag/<span class=\"es2\">$tag</span>/\"</span><br/>\t\t<span class=\"kw2\">touch</span> <span class=\"st0\">\"./<span class=\"es2\">$db</span>/<span class=\"es2\">$item</span>/.tag/<span class=\"es2\">$tag</span>\"</span><br/>\t<span class=\"kw1\">done</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>show_help<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"Usage: $0 command [args]\"</span><br/>\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"Commands:\"</span><br/>\t<span class=\"kw2\">cat</span> <span class=\"re4\">$0</span> <span class=\"sy0\">|</span> <span class=\"kw2\">grep</span> <span class=\"st0\">\") ##\"</span> <span class=\"sy0\">|</span> <span class=\"kw2\">grep</span> <span class=\"re5\">-v</span> <span class=\"kw2\">grep</span> <span class=\"sy0\">|</span> <span class=\"kw2\">sed</span> <span class=\"st_h\">'s/) ## /:\\t/'</span><br/>\t<span class=\"kw3\">exit</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"re5\">-z</span> <span class=\"st0\">\"$1\"</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span> show_help; <span class=\"kw1\">fi</span><br/>\u00a0<br/><span class=\"re2\">action</span>=<span class=\"re4\">$1</span> <span class=\"re2\">it</span>=database<br/><span class=\"kw3\">shift</span><br/><span class=\"kw1\">case</span> <span class=\"re1\">$action</span> <span class=\"kw1\">in</span><br/>\tcreate<span class=\"br0\">)</span> <span class=\"co0\">## db -- create $it</span><br/>\t\tdb_create <span class=\"st0\">\"<a class=\"__cf_email__\" data-cfemail=\"90b4d0\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\tdrop<span class=\"br0\">)</span> <span class=\"co0\">## db -- delete $it</span><br/>\t\tdb_delete <span class=\"st0\">\"<a class=\"__cf_email__\" data-cfemail=\"5e7a1e\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\tadd<span class=\"br0\">)</span> <span class=\"co0\">## db item -- add new item to $it</span><br/>\t\t<span class=\"kw2\">mkdir</span> <span class=\"re5\">-p</span> <span class=\"st0\">\"./$1/$2/.tag\"</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw2\">touch</span> <span class=\"st0\">\"./$1/$2/Description\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\trem<span class=\"br0\">)</span> <span class=\"co0\">## db item -- delete item from $it</span><br/>\t\t<span class=\"kw2\">rm</span> <span class=\"re5\">-r</span> <span class=\"st0\">\"./$1/$2\"</span><br/>\t\t<span class=\"kw2\">rm</span> <span class=\"st0\">\"./$1/.tag/\"</span><span class=\"sy0\">*</span><span class=\"st0\">\"/$2\"</span><br/>\t\t<span class=\"sy0\">;;</span><br/>\u00a0<br/>\tshow<span class=\"br0\">)</span> <span class=\"co0\">## db item -- show item</span><br/>\t\tdb_show <span class=\"st0\">\"<a class=\"__cf_email__\" data-cfemail=\"3d197d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\tnewtag<span class=\"br0\">)</span> <span class=\"co0\">## db new-tag-name -- create new tag name</span><br/>\t\t<span class=\"kw2\">mkdir</span> <span class=\"st0\">\"./$1/.tag/$2\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\tprop<span class=\"br0\">)</span> <span class=\"co0\">## db item property-name property-content -- add property to item</span><br/>\t\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"$4\"</span> <span class=\"sy0\">&gt;</span> <span class=\"st0\">\"./$1/$2/$3\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\ttag<span class=\"br0\">)</span> <span class=\"co0\">## db item tag [more-tags...] -- mark item with tags</span><br/>\t\tdb_tag <span class=\"st0\">\"<a class=\"__cf_email__\" data-cfemail=\"725632\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>\"</span> <span class=\"sy0\">;;</span><br/>\u00a0<br/>\t<span class=\"kw2\">last</span><span class=\"br0\">)</span> <span class=\"co0\">## db -- show latest item</span><br/>\t\t<span class=\"kw2\">ls</span> <span class=\"st0\">\"$1\"</span> <span class=\"re5\">--sort</span>=<span class=\"kw1\">time</span> <span class=\"sy0\">|</span> <span class=\"kw2\">tail</span> <span class=\"re5\">-n</span> <span class=\"nu0\">1</span><br/>\t\t<span class=\"sy0\">;;</span><br/>\u00a0<br/>\tlist<span class=\"br0\">)</span> <span class=\"co0\">## db -- list all items</span><br/>\t\t<span class=\"kw2\">ls</span> <span class=\"st0\">\"$1\"</span> <span class=\"re5\">-1</span> <span class=\"re5\">--sort</span>=<span class=\"kw1\">time</span><br/>\t\t<span class=\"sy0\">;;</span><br/>\u00a0<br/>\tlast-all<span class=\"br0\">)</span> <span class=\"co0\">## db -- list items in each category</span><br/>\t\t<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"st0\">\"$1/.tag/\"</span><span class=\"sy0\">*</span>; <span class=\"kw1\">do</span><br/>\t\t\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"<span class=\"es2\">$x</span>\"</span> <span class=\"sy0\">|</span> <span class=\"kw2\">sed</span> <span class=\"st_h\">'s/.*\\//Tag: /'</span><br/>\t\t\t<span class=\"kw3\">printf</span> <span class=\"st0\">\"    \"</span><br/>\t\t\t<span class=\"kw2\">ls</span> <span class=\"st0\">\"<span class=\"es2\">$x</span>\"</span> <span class=\"re5\">--sort</span>=<span class=\"kw1\">time</span> <span class=\"sy0\">|</span> <span class=\"kw2\">tail</span> <span class=\"re5\">-n</span> <span class=\"nu0\">1</span><br/>\t\t\t<span class=\"kw3\">echo</span><br/>\t\t<span class=\"kw1\">done</span><br/>\t\t<span class=\"sy0\">;;</span><br/>\u00a0<br/>\t<span class=\"kw3\">help</span><span class=\"br0\">)</span> <span class=\"co0\">## this message</span><br/>\t\tshow_help<br/>\t\t<span class=\"sy0\">;;</span><br/>\u00a0<br/>\t<span class=\"sy0\">*</span><span class=\"br0\">)</span>\t<span class=\"kw3\">echo</span> Bad DB command: <span class=\"re4\">$1</span><br/>\t\tshow_help<br/>\t\t<span class=\"sy0\">;;</span><br/><span class=\"kw1\">esac</span></pre>"}]}