{"task": "Check_that_file_exists", "blocks": [{"lang": "Ada", "loc": 17, "block": "<pre class=\"ada highlighted_source\"><span class=\"kw3\">with</span> Ada.<span class=\"me1\">Text_IO</span>; <span class=\"kw3\">use</span> Ada.<span class=\"me1\">Text_IO</span>;<br/>\u00a0<br/><span class=\"kw3\">procedure</span> File_Exists <span class=\"kw1\">is</span><br/>   <span class=\"kw3\">function</span> Does_File_Exist <span class=\"br0\">(</span>Name\u00a0: String<span class=\"br0\">)</span> <span class=\"kw1\">return</span> Boolean <span class=\"kw1\">is</span><br/>      The_File\u00a0: Ada.<span class=\"me1\">Text_IO</span>.<span class=\"me1\">File_Type</span>;<br/>   <span class=\"kw1\">begin</span><br/>      Open <span class=\"br0\">(</span>The_File, In_File, Name<span class=\"br0\">)</span>;<br/>      Close <span class=\"br0\">(</span>The_File<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">return</span> True;<br/>   <span class=\"kw1\">exception</span><br/>      <span class=\"kw3\">when</span> Name_Error =&gt;<br/>         <span class=\"kw1\">return</span> False;<br/>   <span class=\"kw1\">end</span> Does_File_Exist;<br/><span class=\"kw1\">begin</span><br/>   Put_Line <span class=\"br0\">(</span>Boolean'Image <span class=\"br0\">(</span>Does_File_Exist <span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span> <span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/>   Put_Line <span class=\"br0\">(</span>Boolean'Image <span class=\"br0\">(</span>Does_File_Exist <span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\i</span>nput.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">end</span> File_Exists;</pre>"}, {"lang": "Aikido", "loc": 11, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>function exists (filename) {<br/>    return stat (filename)\u00a0!= null<br/>}<br/>\u00a0<br/>exists (\"input.txt\")<br/>exists (\"/input.txt\")<br/>exists (\"docs\")<br/>exists (\"/docs\")<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "ALGOL 68", "loc": 40, "block": "<pre class=\"algol68 highlighted_source\"><span class=\"coMULTI\"># Check files and directories exist                               #</span><br/>\u00a0<br/><span class=\"coMULTI\"># check a file exists by attempting to open it for input          #</span><br/><span class=\"coMULTI\"># returns TRUE if the file exists, FALSE otherwise                #</span><br/><span class=\"kw4\">PROC</span> file exists <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> file name <span class=\"br0\">)</span><span class=\"kw3\">BOOL</span><span class=\"sy1\">:</span><br/>    <span class=\"kw2\">IF</span>  <span class=\"kw6\">FILE</span> f<span class=\"sy1\">;</span><br/>        <span class=\"kw22\">open</span><span class=\"br0\">(</span> f<span class=\"sy1\">,</span> file name<span class=\"sy1\">,</span> <span class=\"kw21\">stand in channel</span> <span class=\"br0\">)</span> <span class=\"sy1\">=</span> 0<br/>    <span class=\"kw2\">THEN</span><br/>        <span class=\"coMULTI\"># file opened OK so must exist                            #</span><br/>        <span class=\"kw22\">close</span><span class=\"br0\">(</span> f <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>        <span class=\"kw7\">TRUE</span><br/>    <span class=\"kw2\">ELSE</span><br/>        <span class=\"coMULTI\"># file cannot be opened - assume it does not exist        #</span><br/>        <span class=\"kw7\">FALSE</span><br/>    <span class=\"kw2\">FI</span> <span class=\"coMULTI\"># file exists #</span> <span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># print a suitable messages if the specified file exists          #</span><br/><span class=\"kw4\">PROC</span> test file exists <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> name <span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"file: \"</span><br/>           <span class=\"sy1\">,</span> name<br/>           <span class=\"sy1\">,</span> <span class=\"kw2\">IF</span> file exists<span class=\"br0\">(</span> name <span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"st0\">\" does\"</span> <span class=\"kw2\">ELSE</span> <span class=\"st0\">\" does not\"</span> <span class=\"kw2\">FI</span><br/>           <span class=\"sy1\">,</span> <span class=\"st0\">\" exist\"</span><br/>           <span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><br/>           <span class=\"br0\">)</span><br/>         <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"coMULTI\"># print a suitable messages if the specified directory exists     #</span><br/><span class=\"kw4\">PROC</span> test directory exists <span class=\"sy1\">=</span> <span class=\"br0\">(</span> <span class=\"kw3\">STRING</span> name <span class=\"br0\">)</span><span class=\"kw3\">VOID</span><span class=\"sy1\">:</span><br/>    <span class=\"kw22\">print</span><span class=\"br0\">(</span> <span class=\"br0\">(</span> <span class=\"st0\">\"dir:  \"</span><br/>           <span class=\"sy1\">,</span> name<br/>           <span class=\"sy1\">,</span> <span class=\"kw2\">IF</span> file is directory<span class=\"br0\">(</span> name <span class=\"br0\">)</span> <span class=\"kw2\">THEN</span> <span class=\"st0\">\" does\"</span> <span class=\"kw2\">ELSE</span> <span class=\"st0\">\" does not\"</span> <span class=\"kw2\">FI</span><br/>           <span class=\"sy1\">,</span> <span class=\"st0\">\" exist\"</span><br/>           <span class=\"sy1\">,</span> <span class=\"kw22\">newline</span><br/>           <span class=\"br0\">)</span><br/>         <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"coMULTI\"># test the flies and directories mentioned in the task exist or not #</span><br/>test file exists<span class=\"br0\">(</span> <span class=\"st0\">\"input.txt\"</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>test file exists<span class=\"br0\">(</span> <span class=\"st0\">\"\\input.txt\"</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>test directory exists<span class=\"br0\">(</span> <span class=\"st0\">\"docs\"</span> <span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>test directory exists<span class=\"br0\">(</span> <span class=\"st0\">\"\\docs\"</span> <span class=\"br0\">)</span></pre>"}, {"lang": "AppleScript", "loc": 93, "block": "<pre class=\"applescript highlighted_source\">use framework <span class=\"st0\">\"Foundation\"</span> <span class=\"co1\">-- YOSEMITE OS X onwards</span><br/>use scripting additions<br/>\u00a0<br/><span class=\"kw3\">on</span> <span class=\"kw1\">run</span><br/>    setCurrentDirectory<span class=\"br0\">(</span><span class=\"st0\">\"~/Desktop\"</span><span class=\"br0\">)</span><br/>\u00a0<br/>    ap<span class=\"br0\">(</span><span class=\"br0\">{</span>doesFileExist, doesDirectoryExist<span class=\"br0\">}</span>, \u00ac<br/>        <span class=\"br0\">{</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"st0\">\"/input.txt\"</span>, <span class=\"st0\">\"docs\"</span>, <span class=\"st0\">\"/docs\"</span><span class=\"br0\">}</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"co1\">--&gt; {true, true, true, true, false, false, true, true}</span><br/>\u00a0<br/>    <span class=\"co1\">-- The first four booleans are returned by `doesFileExist`.</span><br/>\u00a0<br/>    <span class=\"co1\">-- The last four are returned by `doesDirectoryExist`,</span><br/>    <span class=\"co1\">-- which yields false for simple files, and true for directories.</span><br/><span class=\"kw3\">end</span> <span class=\"kw1\">run</span><br/>\u00a0<br/><span class=\"co1\">-- GENERIC SYSTEM DIRECTORY FUNCTIONS -----------------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- doesDirectoryExist\u00a0:: String -&gt; Bool</span><br/><span class=\"kw3\">on</span> doesDirectoryExist<span class=\"br0\">(</span>strPath<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> ca <span class=\"kw3\">to</span> current <span class=\"kw1\">application</span><br/>    <span class=\"kw3\">set</span> oPath <span class=\"kw3\">to</span> <span class=\"br0\">(</span>ca<span class=\"co2\">'</span>s NSString<span class=\"co2\">'</span>s stringWithString:strPath<span class=\"br0\">)</span>'s \u00ac<br/>        stringByStandardizingPath<br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>bln, int<span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">(</span>ca<span class=\"co2\">'</span>s NSFileManager<span class=\"co2\">'</span>s defaultManager<span class=\"br0\">(</span><span class=\"br0\">)</span>'s \u00ac<br/>        fileExistsAtPath:oPath isDirectory:<span class=\"br0\">(</span>reference<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    bln <span class=\"kw2\">and</span> <span class=\"br0\">(</span>int <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> doesDirectoryExist<br/>\u00a0<br/><span class=\"co1\">-- doesFileExist\u00a0:: String -&gt; Bool</span><br/><span class=\"kw3\">on</span> doesFileExist<span class=\"br0\">(</span>strPath<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> ca <span class=\"kw3\">to</span> current <span class=\"kw1\">application</span><br/>    <span class=\"kw3\">set</span> oPath <span class=\"kw3\">to</span> <span class=\"br0\">(</span>ca<span class=\"co2\">'</span>s NSString<span class=\"co2\">'</span>s stringWithString:strPath<span class=\"br0\">)</span>'s \u00ac<br/>        stringByStandardizingPath<br/>    ca<span class=\"co2\">'</span>s NSFileManager<span class=\"co2\">'</span>s defaultManager<span class=\"br0\">(</span><span class=\"br0\">)</span>'s fileExistsAtPath:oPath<br/><span class=\"kw3\">end</span> doesFileExist<br/>\u00a0<br/><span class=\"co1\">-- getCurrentDirectory\u00a0:: String</span><br/><span class=\"kw3\">on</span> getCurrentDirectory<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> ca <span class=\"kw3\">to</span> current <span class=\"kw1\">application</span><br/>    ca<span class=\"co2\">'</span>s NSFileManager<span class=\"co2\">'</span>s defaultManager<span class=\"br0\">(</span><span class=\"br0\">)</span>'s currentDirectoryPath <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><br/><span class=\"kw3\">end</span> getCurrentDirectory<br/>\u00a0<br/><span class=\"co1\">-- getFinderDirectory\u00a0:: String</span><br/><span class=\"kw3\">on</span> getFinderDirectory<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"kw3\">tell</span> <span class=\"kw1\">application</span> <span class=\"st0\">\"Finder\"</span> <span class=\"kw3\">to</span> <span class=\"kw1\">POSIX path</span> <span class=\"kw3\">of</span> <span class=\"br0\">(</span>insertion location <span class=\"kw2\">as</span> <span class=\"kw1\">alias</span><span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> getFinderDirectory<br/>\u00a0<br/><span class=\"co1\">-- getHomeDirectory\u00a0:: String</span><br/><span class=\"kw3\">on</span> getHomeDirectory<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>current <span class=\"kw1\">application</span><span class=\"co2\">'</span>s NSHomeDirectory<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw2\">as</span> <span class=\"kw1\">string</span><span class=\"br0\">)</span><br/><span class=\"kw3\">end</span> getHomeDirectory<br/>\u00a0<br/><span class=\"co1\">-- setCurrentDirectory\u00a0:: String -&gt; IO ()</span><br/><span class=\"kw3\">on</span> setCurrentDirectory<span class=\"br0\">(</span>strPath<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> doesDirectoryExist<span class=\"br0\">(</span>strPath<span class=\"br0\">)</span> <span class=\"kw3\">then</span><br/>        <span class=\"kw3\">set</span> ca <span class=\"kw3\">to</span> current <span class=\"kw1\">application</span><br/>        <span class=\"kw3\">set</span> oPath <span class=\"kw3\">to</span> <span class=\"br0\">(</span>ca<span class=\"co2\">'</span>s NSString<span class=\"co2\">'</span>s stringWithString:strPath<span class=\"br0\">)</span>'s \u00ac<br/>            stringByStandardizingPath<br/>        ca<span class=\"co2\">'</span>s NSFileManager<span class=\"co2\">'</span>s defaultManager<span class=\"br0\">(</span><span class=\"br0\">)</span>'s \u00ac<br/>            changeCurrentDirectoryPath:oPath<br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> setCurrentDirectory<br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">-- GENERIC HIGHER ORDER FUNCTIONS FOR THE TEST --------------------------------</span><br/>\u00a0<br/><span class=\"co1\">-- A list of functions applied to a list of arguments</span><br/><span class=\"co1\">-- (&lt;*&gt; | ap)\u00a0:: [(a -&gt; b)] -&gt; [a] -&gt; [b]</span><br/><span class=\"kw3\">on</span> ap<span class=\"br0\">(</span>fs, xs<span class=\"br0\">)</span><br/>    <span class=\"kw3\">set</span> <span class=\"br0\">{</span>intFs, intXs<span class=\"br0\">}</span> <span class=\"kw3\">to</span> <span class=\"br0\">{</span>length <span class=\"kw3\">of</span> fs, length <span class=\"kw3\">of</span> xs<span class=\"br0\">}</span><br/>    <span class=\"kw3\">set</span> lst <span class=\"kw3\">to</span> <span class=\"br0\">{</span><span class=\"br0\">}</span><br/>    <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> i <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> intFs<br/>        <span class=\"kw3\">tell</span> mReturn<span class=\"br0\">(</span><span class=\"kw1\">item</span> i <span class=\"kw3\">of</span> fs<span class=\"br0\">)</span><br/>            <span class=\"kw3\">repeat</span> <span class=\"kw3\">with</span> j <span class=\"kw3\">from</span> <span class=\"nu0\">1</span> <span class=\"kw3\">to</span> intXs<br/>                <span class=\"kw3\">set</span> <span class=\"kw3\">end</span> <span class=\"kw3\">of</span> lst <span class=\"kw3\">to</span> |\u03bb|<span class=\"br0\">(</span><span class=\"kw1\">contents</span> <span class=\"kw3\">of</span> <span class=\"br0\">(</span><span class=\"kw1\">item</span> j <span class=\"kw3\">of</span> xs<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">tell</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">repeat</span><br/>    <span class=\"kw3\">return</span> lst<br/><span class=\"kw3\">end</span> ap<br/>\u00a0<br/><span class=\"co1\">-- Lift 2nd class handler function into 1st class script wrapper </span><br/><span class=\"co1\">-- mReturn\u00a0:: Handler -&gt; Script</span><br/><span class=\"kw3\">on</span> mReturn<span class=\"br0\">(</span>f<span class=\"br0\">)</span><br/>    <span class=\"kw3\">if</span> class <span class=\"kw3\">of</span> f <span class=\"kw3\">is</span> <span class=\"kw3\">script</span> <span class=\"kw3\">then</span><br/>        f<br/>    <span class=\"kw3\">else</span><br/>        <span class=\"kw3\">script</span><br/>            <span class=\"kw3\">property</span> |\u03bb|\u00a0: f<br/>        <span class=\"kw3\">end</span> <span class=\"kw3\">script</span><br/>    <span class=\"kw3\">end</span> <span class=\"kw3\">if</span><br/><span class=\"kw3\">end</span> mReturn</pre>"}, {"lang": "Applesoft BASIC", "loc": 22, "block": "<pre class=\"text highlighted_source\">100 F$ = \"THAT FILE\"<br/>110 T$(0) = \"DOES NOT EXIST.\"<br/>120 T$(1) = \"EXISTS.\"<br/>130 GOSUB 200\"FILE EXISTS?<br/>140 PRINT F$; \" \"; T$(E)<br/>150 END<br/>\u00a0<br/>200 REM FILE EXISTS?<br/>210 REM TRY<br/>220    ON ERR GOTO 300\"CATCH<br/>230    PRINT CHR$(4); \"VERIFY \"; F$<br/>240    POKE 216, 0\u00a0: REM ONERR OFF<br/>250    E = 1<br/>260    GOTO 350\"END TRY<br/>300 REM CATCH<br/>310    E = PEEK(222) &lt;&gt; 6<br/>320    POKE 216, 0\u00a0: REM ONERR OFF<br/>330    IF E THEN RESUME\u00a0: REM THROW<br/>340    CALL  - 3288\u00a0: REM RECOVER<br/>350 REM END TRY<br/>360 RETURN<br/>\u00a0</pre>"}, {"lang": "AutoHotkey", "loc": 33, "block": "<pre class=\"autohotkey highlighted_source\"><span class=\"co1\">; FileExist() function examples</span><br/>ShowFileExist<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/>ShowFileExist<span class=\"br0\">(</span><span class=\"st0\">\"\\input.txt\"</span><span class=\"br0\">)</span><br/>ShowFolderExist<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>ShowFolderExist<span class=\"br0\">(</span><span class=\"st0\">\"\\docs\"</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">; IfExist/IfNotExist command examples (from documentation)</span><br/><a href=\"http://www.autohotkey.com/docs/commands/IfExist.htm\"><span class=\"kw3\">IfExist</span></a><span class=\"sy0\">,</span> D:\\<br/>  <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> The <a href=\"http://www.autohotkey.com/docs/commands/Drive.htm\"><span class=\"kw3\">drive</span></a> exists<span class=\"sy0\">.</span><br/><a href=\"http://www.autohotkey.com/docs/commands/IfExist.htm\"><span class=\"kw3\">IfExist</span></a><span class=\"sy0\">,</span> D:\\Docs\\<span class=\"sy0\">*.</span>txt<br/>  <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> At least one <span class=\"sy0\">.</span>txt file exists<span class=\"sy0\">.</span><br/><a href=\"http://www.autohotkey.com/docs/commands/IfNotExist.htm\"><span class=\"kw3\">IfNotExist</span></a><span class=\"sy0\">,</span> C:\\Temp\\FlagFile<span class=\"sy0\">.</span>txt<br/>  <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> The target file does not exist<span class=\"sy0\">.</span><br/>\u00a0<br/><span class=\"kw1\">Return</span><br/>\u00a0<br/>ShowFileExist<span class=\"br0\">(</span>file<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">If</span> <span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">FileExist</span></a><span class=\"br0\">(</span>file<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span>\u00a0!<a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">FileExist</span></a><span class=\"br0\">(</span>file<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"D\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"re2\">file: </span><span class=\"re0\">%file%</span> exists<span class=\"sy0\">.</span><br/>  <span class=\"kw1\">Else</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"re2\">file: </span><span class=\"re0\">%file%</span> does NOT exist<span class=\"sy0\">.</span><br/>  <span class=\"kw1\">Return</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>ShowFolderExist<span class=\"br0\">(</span>folder<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  <span class=\"kw1\">If</span> <a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">InStr</span></a><span class=\"br0\">(</span><a href=\"http://www.autohotkey.com/docs/Functions.htm#BuiltIn\"><span class=\"kw4\">FileExist</span></a><span class=\"br0\">(</span>folder<span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">\"D\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"re2\">folder: </span><span class=\"re0\">%folder%</span> exists<span class=\"sy0\">.</span><br/>  <span class=\"kw1\">Else</span><br/>    <a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a><span class=\"sy0\">,</span> <span class=\"re2\">folder: </span><span class=\"re0\">%folder%</span> does NOT exist<span class=\"sy0\">.</span><br/>  <span class=\"kw1\">Return</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "AWK", "loc": 14, "block": "<pre class=\"awk highlighted_source\">@load <span class=\"st0\">\"filefuncs\"</span><br/><span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span><br/>    exists<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/>    exists<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/>    exists<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>    exists<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">function</span> exists<span class=\"br0\">(</span>name    ,fd<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span> stat<span class=\"br0\">(</span>name, fd<span class=\"br0\">)</span> <span class=\"sy2\">==</span> <span class=\"sy3\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      <span class=\"kw5\">print</span> name <span class=\"st0\">\" doesn't exist\"</span><br/>    <span class=\"kw1\">else</span><br/>      <span class=\"kw5\">print</span> name <span class=\"st0\">\" exists\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Axe", "loc": 5, "block": "<pre class=\"text highlighted_source\">If GetCalc(\"appvINPUT\")<br/> Disp \"EXISTS\",i<br/>Else<br/> Disp \"DOES NOT EXIST\",i<br/>End</pre>"}, {"lang": "BASIC", "loc": 30, "block": "<pre class=\"qbasic highlighted_source\">\u00a0<br/><a href=\"http://www.qbasicnews.com/qboho/qckon.shtml\"><span class=\"kw3\">ON</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckerror.shtml\"><span class=\"kw3\">ERROR</span></a> <span class=\"kw1\">GOTO</span> ohNo<br/>f$ <span class=\"sy0\">=</span> <span class=\"st0\">\"input.txt\"</span><br/><span class=\"kw1\">GOSUB</span> opener<br/>f$ <span class=\"sy0\">=</span> <span class=\"st0\">\"\\input.txt\"</span><br/><span class=\"kw1\">GOSUB</span> opener<br/>\u00a0<br/><span class=\"co1\">'can't directly check for directories,</span><br/><span class=\"co1\">'but can check for the NUL device in the desired dir</span><br/>f$ <span class=\"sy0\">=</span> <span class=\"st0\">\"docs\\nul\"</span><br/><span class=\"kw1\">GOSUB</span> opener<br/>f$ <span class=\"sy0\">=</span> <span class=\"st0\">\"\\docs\\nul\"</span><br/><span class=\"kw1\">GOSUB</span> opener<br/><a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a><br/>\u00a0<br/>opener:<br/>    e$ <span class=\"sy0\">=</span> <span class=\"st0\">\" found\"</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckopen.shtml\"><span class=\"kw3\">OPEN</span></a> f$ <span class=\"kw1\">FOR</span> <a href=\"http://www.qbasicnews.com/qboho/qckinput.shtml\"><span class=\"kw3\">INPUT</span></a> <a href=\"http://www.qbasicnews.com/qboho/qckas.shtml\"><span class=\"kw3\">AS</span></a> <span class=\"nu0\">1</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckprint.shtml\"><span class=\"kw3\">PRINT</span></a> f$; e$<br/>    <a href=\"http://www.qbasicnews.com/qboho/qckclose.shtml\"><span class=\"kw3\">CLOSE</span></a><br/>    <span class=\"kw1\">RETURN</span><br/>\u00a0<br/>ohNo:<br/>    <span class=\"kw1\">IF</span> <span class=\"br0\">(</span><span class=\"nu0\">53</span> <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckerr.shtml\"><span class=\"kw3\">ERR</span></a><span class=\"br0\">)</span> <a href=\"http://www.qbasicnews.com/qboho/qckor.shtml\"><span class=\"kw3\">OR</span></a> <span class=\"br0\">(</span><span class=\"nu0\">76</span> <span class=\"sy0\">=</span> <a href=\"http://www.qbasicnews.com/qboho/qckerr.shtml\"><span class=\"kw3\">ERR</span></a><span class=\"br0\">)</span> <span class=\"kw1\">THEN</span><br/>        e$ <span class=\"sy0\">=</span> <span class=\"st0\">\" not\"</span> <span class=\"sy0\">+</span> e$<br/>    <span class=\"kw1\">ELSE</span><br/>        e$ <span class=\"sy0\">=</span> <span class=\"st0\">\"Unknown error\"</span><br/>    <a href=\"http://www.qbasicnews.com/qboho/qckend.shtml\"><span class=\"kw3\">END</span></a> <span class=\"kw1\">IF</span><br/>    <span class=\"kw1\">RESUME</span> <span class=\"kw1\">NEXT</span><br/>\u00a0</pre>"}, {"lang": "Batch File", "loc": 4, "block": "<pre class=\"dos highlighted_source\"><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <a href=\"http://www.ss64.com/nt/exist.html\"><span class=\"kw2\">exist</span></a> input.txt <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> The following file called input.txt exists.<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <a href=\"http://www.ss64.com/nt/exist.html\"><span class=\"kw2\">exist</span></a> \\input.txt <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> The following file called \\input.txt exists.<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <a href=\"http://www.ss64.com/nt/exist.html\"><span class=\"kw2\">exist</span></a> docs <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> The following directory called docs exists.<br/><a href=\"http://www.ss64.com/nt/if.html\"><span class=\"kw1\">if</span></a> <a href=\"http://www.ss64.com/nt/exist.html\"><span class=\"kw2\">exist</span></a> \\docs\\ <a href=\"http://www.ss64.com/nt/echo.html\"><span class=\"kw3\">echo</span></a> The following directory called \\docs\\ exists.</pre>"}, {"lang": "BBC BASIC", "loc": 23, "block": "<pre class=\"text highlighted_source\">      test% = OPENIN(\"input.txt\")<br/>      IF test% THEN<br/>        CLOSE #test%<br/>        PRINT \"File input.txt exists\"<br/>      ENDIF<br/>\u00a0<br/>      test% = OPENIN(\"\\input.txt\")<br/>      IF test% THEN<br/>        CLOSE #test%<br/>        PRINT \"File \\input.txt exists\"<br/>      ENDIF<br/>\u00a0<br/>      test% = OPENIN(\"docs\\NUL\")<br/>      IF test% THEN<br/>        CLOSE #test%<br/>        PRINT \"Directory docs exists\"<br/>      ENDIF<br/>\u00a0<br/>      test% = OPENIN(\"\\docs\\NUL\")<br/>      IF test% THEN<br/>        CLOSE #test%<br/>        PRINT \"Directory \\docs exists\"<br/>      ENDIF</pre>"}, {"lang": "C", "loc": 28, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;sys/types.h&gt; </span><br/><span class=\"co2\">#include &lt;sys/stat.h&gt;</span><br/><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;unistd.h&gt;</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Check for regular file. */</span><br/><span class=\"kw4\">int</span> check_reg<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>path<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">struct</span> stat sb<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> stat<span class=\"br0\">(</span>path<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>sb<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> S_ISREG<span class=\"br0\">(</span>sb.<span class=\"me1\">st_mode</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"coMULTI\">/* Check for directory. */</span><br/><span class=\"kw4\">int</span> check_dir<span class=\"br0\">(</span><span class=\"kw4\">const</span> <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>path<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw4\">struct</span> stat sb<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> stat<span class=\"br0\">(</span>path<span class=\"sy0\">,</span> <span class=\"sy0\">&amp;</span>sb<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> S_ISDIR<span class=\"br0\">(</span>sb.<span class=\"me1\">st_mode</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"input.txt is a regular file?\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t    check_reg<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"yes\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"no\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"docs is a directory?\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t    check_dir<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"yes\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"no\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt is a regular file?\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t    check_reg<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"yes\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"no\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"/docs is a directory?\u00a0%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><br/>\t    check_dir<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\"yes\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\"no\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C++", "loc": 25, "block": "<pre class=\"cpp highlighted_source\"><span class=\"co2\">#include \"boost/filesystem.hpp\"</span><br/><span class=\"co2\">#include &lt;string&gt;</span><br/><span class=\"co2\">#include &lt;iostream&gt;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> testfile<span class=\"br0\">(</span>std<span class=\"sy4\">::</span><span class=\"me2\">string</span> name<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  boost<span class=\"sy4\">::</span><span class=\"me2\">filesystem</span><span class=\"sy4\">::</span><span class=\"me2\">path</span> file<span class=\"br0\">(</span>name<span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  <span class=\"kw1\">if</span> <span class=\"br0\">(</span>exists<span class=\"br0\">(</span>file<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>is_directory<span class=\"br0\">(</span>file<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> name <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" is a directory.<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>    <span class=\"kw1\">else</span><br/>      std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> name <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" is a non-directory file.<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/>  <span class=\"br0\">}</span><br/>  <span class=\"kw1\">else</span><br/>    std<span class=\"sy4\">::</span><span class=\"kw3\">cout</span> <span class=\"sy1\">&lt;&lt;</span> name <span class=\"sy1\">&lt;&lt;</span> <span class=\"st0\">\" does not exist.<span class=\"es1\">\\n</span>\"</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>  testfile<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  testfile<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  testfile<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/>  testfile<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"sy4\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "C#", "loc": 6, "block": "<pre class=\"csharp highlighted_source\"><span class=\"kw1\">using</span> <span class=\"co3\">System.IO</span><span class=\"sy0\">;</span><br/>\u00a0<br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>File<span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>File<span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Directory<span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Directory<span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "COBOL", "loc": 71, "block": "<pre class=\"cobol highlighted_source\">       <span class=\"kw3\">identification</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">program-id</span><span class=\"sy0\">.</span> check-file-exist<span class=\"sy0\">.</span><br/>\u00a0<br/>       environment <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">configuration</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       repository<span class=\"sy0\">.</span><br/>           <span class=\"kw3\">function</span> <span class=\"kw3\">all</span> intrinsic<span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">data</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       <span class=\"kw3\">working-storage</span> <span class=\"kw1\">section</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> skip                 <span class=\"kw3\">pic</span> <span class=\"nu0\">9</span> <span class=\"kw3\">value</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> file-name<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"/output.txt\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> dir-name<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"/docs/\"</span><span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> unusual-name<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> <span class=\"kw3\">value</span> <span class=\"st0\">\"Abdu'l-Bah\u00e1.txt\"</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> test-name            <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"nu0\">01</span> file-handle          <span class=\"kw3\">usage</span> binary-long<span class=\"sy0\">.</span><br/>       <span class=\"nu0\">01</span> file-info<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> file-<span class=\"kw3\">size</span>         <span class=\"kw3\">pic</span> x<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> comp-x<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> file-<span class=\"kw3\">date</span><span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-<span class=\"kw3\">day</span>       <span class=\"kw3\">pic</span> x comp-x<span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-month     <span class=\"kw3\">pic</span> x comp-x<span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-year      <span class=\"kw3\">pic</span> xx comp-x<span class=\"sy0\">.</span><br/>          <span class=\"nu0\">05</span> file-<span class=\"kw3\">time</span><span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-hours     <span class=\"kw3\">pic</span> x comp-x<span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-minutes   <span class=\"kw3\">pic</span> x comp-x<span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-seconds   <span class=\"kw3\">pic</span> x comp-x<span class=\"sy0\">.</span><br/>             <span class=\"nu0\">10</span> file-hundredths  <span class=\"kw3\">pic</span> x comp-x<span class=\"sy0\">.</span> <br/>\u00a0<br/>       <span class=\"kw3\">procedure</span> <span class=\"kw3\">division</span><span class=\"sy0\">.</span><br/>       files-<span class=\"kw1\">main</span><span class=\"sy0\">.</span><br/>\u00a0<br/>      *&gt; <span class=\"kw1\">check</span> <span class=\"kw3\">in</span> current working dir<br/>       <span class=\"kw2\">move</span> file-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"kw2\">to</span> test-name<br/>       <span class=\"kw2\">perform</span> check-<span class=\"kw3\">file</span><br/>\u00a0<br/>       <span class=\"kw2\">move</span> dir-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"kw2\">to</span> test-name<br/>       <span class=\"kw2\">perform</span> check-<span class=\"kw3\">file</span><br/>\u00a0<br/>       <span class=\"kw2\">move</span> unusual-name <span class=\"kw2\">to</span> test-name<br/>       <span class=\"kw2\">perform</span> check-<span class=\"kw3\">file</span><br/>\u00a0<br/>      *&gt; <span class=\"kw1\">check</span> <span class=\"kw3\">in</span> root dir<br/>       <span class=\"kw2\">move</span> <span class=\"nu0\">1</span> <span class=\"kw2\">to</span> skip<br/>       <span class=\"kw2\">move</span> file-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"kw2\">to</span> test-name<br/>       <span class=\"kw2\">perform</span> check-<span class=\"kw3\">file</span><br/>\u00a0<br/>       <span class=\"kw2\">move</span> dir-name<span class=\"br0\">(</span>skip:<span class=\"br0\">)</span> <span class=\"kw2\">to</span> test-name<br/>       <span class=\"kw2\">perform</span> check-<span class=\"kw3\">file</span><br/>\u00a0<br/>       goback<span class=\"sy0\">.</span><br/>\u00a0<br/>       check-<span class=\"kw3\">file</span><span class=\"sy0\">.</span><br/>       <span class=\"kw2\">call</span> <span class=\"st0\">\"CBL_CHECK_FILE_EXIST\"</span> <span class=\"kw3\">using</span> test-name file-info<br/>       <span class=\"kw1\">if</span> return-<span class=\"kw1\">code</span> <span class=\"kw3\">equal</span> <span class=\"kw3\">zero</span> <span class=\"kw3\">then</span><br/>           <span class=\"kw2\">display</span> test-name<span class=\"br0\">(</span><span class=\"nu0\">1</span>:<span class=\"nu0\">32</span><span class=\"br0\">)</span> <span class=\"st0\">\": size \"</span> file-<span class=\"kw3\">size</span> <span class=\"st0\">\", \"</span><br/>                   file-year <span class=\"st0\">\"-\"</span> file-month <span class=\"st0\">\"-\"</span> file-<span class=\"kw3\">day</span> <span class=\"kw3\">space</span><br/>                   file-hours <span class=\"st0\">\":\"</span> file-minutes <span class=\"st0\">\":\"</span> file-seconds <span class=\"st0\">\".\"</span><br/>                   file-hundredths<br/>       <span class=\"kw3\">else</span><br/>           <span class=\"kw2\">display</span> <span class=\"st0\">\"error: CBL_CHECK_FILE_EXIST \"</span> return-<span class=\"kw1\">code</span> <span class=\"kw3\">space</span><br/>                   trim<span class=\"br0\">(</span>test-name<span class=\"br0\">)</span><br/>       end-<span class=\"kw1\">if</span><br/>       <span class=\"sy0\">.</span><br/>\u00a0<br/>       <span class=\"kw3\">end</span> <span class=\"kw3\">program</span> check-file-exist<span class=\"sy0\">.</span><br/>\u00a0</pre>"}, {"lang": "CoffeeScript", "loc": 24, "block": "<pre class=\"coffeescript highlighted_source\">\u00a0<br/>fs = require <span class=\"st0\">'fs'</span><br/>path = require <span class=\"st0\">'path'</span><br/>\u00a0<br/>root = path.<span class=\"me1\">resolve</span> <span class=\"st0\">'/'</span><br/>current_dir = __dirname<br/>filename = <span class=\"st0\">'input.txt'</span><br/>dirname = <span class=\"st0\">'docs'</span><br/>\u00a0<br/>local_file = path.<span class=\"me1\">join</span> current_dir<span class=\"sy0\">,</span> filename<br/>local_dir = path.<span class=\"me1\">join</span> current_dir<span class=\"sy0\">,</span> dirname<br/>\u00a0<br/>root_file = path.<span class=\"me1\">join</span> root<span class=\"sy0\">,</span> filename<br/>root_dir = path.<span class=\"me1\">join</span> root<span class=\"sy0\">,</span> dirname<br/>\u00a0<br/><span class=\"kw1\">for</span> p <span class=\"kw1\">in</span> <span class=\"br0\">[</span> local_file<span class=\"sy0\">,</span> local_dir<span class=\"sy0\">,</span> root_file<span class=\"sy0\">,</span> root_dir <span class=\"br0\">]</span> <span class=\"kw1\">then</span> do <span class=\"br0\">(</span> p <span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>    fs.<span class=\"me1\">exists</span> p<span class=\"sy0\">,</span> <span class=\"br0\">(</span> p_exists <span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>        <span class=\"kw1\">unless</span> p_exists<br/>            console.<span class=\"me1\">log</span> <span class=\"st0\">\"#{ p } does not exist.\"</span><br/>        <span class=\"kw1\">else</span> <span class=\"kw1\">then</span> fs.<span class=\"me1\">stat</span> p<span class=\"sy0\">,</span> <span class=\"br0\">(</span> error<span class=\"sy0\">,</span> stat <span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span><br/>            console.<span class=\"me1\">log</span> <span class=\"st0\">\"#{ p } exists and is a #{ if stat.isFile() then 'file' else then 'directory' }.\"</span><br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Clojure", "loc": 5, "block": "<pre class=\"clojure highlighted_source\">\u00a0<br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">map</span> #<span class=\"br0\">(</span><span class=\"sy0\">.</span>exists <span class=\"br0\">(</span>clojure<span class=\"sy0\">.</span>java<span class=\"sy0\">.</span>io<span class=\"sy0\">/</span>as<span class=\"sy0\">-</span>file <span class=\"sy0\">%</span><span class=\"br0\">)</span><span class=\"br0\">)</span> '<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span> <span class=\"st0\">\"/docs\"</span> <span class=\"st0\">\"./input.txt\"</span> <span class=\"st0\">\"./docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Common Lisp", "loc": 11, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>probe-file <span class=\"br0\">(</span>make-pathname <span class=\"sy0\">:</span><span class=\"kw1\">name</span> <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"rel file exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>probe-file <span class=\"br0\">(</span>make-pathname <span class=\"sy0\">:</span><span class=\"me1\">directory</span> '<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">absolute</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"kw1\">name</span> <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"abs file exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>directory <span class=\"br0\">(</span>make-pathname <span class=\"sy0\">:</span><span class=\"me1\">directory</span> '<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">relative</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"rel directory exists\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"rel directory is not known to exist\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span><span class=\"kw1\">if</span> <span class=\"br0\">(</span>directory <span class=\"br0\">(</span>make-pathname <span class=\"sy0\">:</span><span class=\"me1\">directory</span> '<span class=\"br0\">(</span><span class=\"sy0\">:</span><span class=\"me1\">absolute</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"abs directory exists\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"abs directory is not known to exist\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "D", "loc": 18, "block": "<pre class=\"d highlighted_source\"><span class=\"kw2\">import</span> std.<span class=\"me1\">stdio</span><span class=\"sy0\">,</span> std.<span class=\"me1\">file</span><span class=\"sy0\">,</span> std.<span class=\"me1\">path</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw4\">void</span> verify<span class=\"br0\">(</span><span class=\"kw2\">in</span> <span class=\"kw4\">string</span> name<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>name.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        writeln<span class=\"br0\">(</span><span class=\"st0\">\"'\"</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> <span class=\"st0\">\"' exists\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">else</span><br/>        writeln<span class=\"br0\">(</span><span class=\"st0\">\"'\"</span><span class=\"sy0\">,</span> name<span class=\"sy0\">,</span> <span class=\"st0\">\"' doesn't exist\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"co1\">// check in current working dir</span><br/>    verify<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    verify<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"co1\">// check in root</span><br/>    verify<span class=\"br0\">(</span>dirSeparator <span class=\"sy0\">~</span> <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    verify<span class=\"br0\">(</span>dirSeparator <span class=\"sy0\">~</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "DCL", "loc": 24, "block": "<pre class=\"dcl highlighted_source\">$ <span class=\"kw1\">if</span> <span class=\"kw2\">f$search</span><span class=\"br0\">(</span> <span class=\"st0\">\"input.txt\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">.eqs.</span> <span class=\"st0\">\"\"</span><br/>$ <span class=\"kw1\">then</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"input.txt not found\"</span><br/>$ <span class=\"kw1\">else</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"input.txt found\"</span><br/>$ <span class=\"kw1\">endif</span><br/>$ <span class=\"kw1\">if</span> <span class=\"kw2\">f$search</span><span class=\"br0\">(</span> <span class=\"st0\">\"docs.dir\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">.eqs.</span> <span class=\"st0\">\"\"</span><br/>$ <span class=\"kw1\">then</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"directory docs not found\"</span><br/>$ <span class=\"kw1\">else</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"directory docs found\"</span><br/>$ <span class=\"kw1\">endif</span><br/>$ <span class=\"kw1\">if</span> <span class=\"kw2\">f$search</span><span class=\"br0\">(</span> <span class=\"st0\">\"[000000]input.txt\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">.eqs.</span> <span class=\"st0\">\"\"</span><br/>$ <span class=\"kw1\">then</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"[000000]input.txt not found\"</span><br/>$ <span class=\"kw1\">else</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"[000000]input.txt found\"</span><br/>$ <span class=\"kw1\">endif</span><br/>$ <span class=\"kw1\">if</span> <span class=\"kw2\">f$search</span><span class=\"br0\">(</span> <span class=\"st0\">\"[000000]docs.dir\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">.eqs.</span> <span class=\"st0\">\"\"</span><br/>$ <span class=\"kw1\">then</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"directory [000000]docs not found\"</span><br/>$ <span class=\"kw1\">else</span><br/>$  <span class=\"kw1\">write</span> <span class=\"kw3\">sys$output</span> <span class=\"st0\">\"directory [000000]docs found\"</span><br/>$ <span class=\"kw1\">endif</span></pre>"}, {"lang": "Delphi", "loc": 28, "block": "<pre class=\"delphi highlighted_source\"><span class=\"kw1\">program</span> EnsureFileExists<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"co2\">{$APPTYPE CONSOLE}</span><br/>\u00a0<br/><span class=\"kw1\">uses</span><br/>  SysUtils<span class=\"sy1\">;</span><br/>\u00a0<br/><span class=\"kw1\">begin</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw3\">FileExists</span><span class=\"br0\">(</span><span class=\"st0\">'input.txt'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File \"input.txt\" exists.'</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File \"input.txt\" does not exist.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"kw3\">FileExists</span><span class=\"br0\">(</span><span class=\"st0\">'\\input.txt'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File \"\\input.txt\" exists.'</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'File \"\\input.txt\" does not exist.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"kw3\">DirectoryExists</span><span class=\"br0\">(</span><span class=\"st0\">'docs'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Directory \"docs\" exists.'</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Directory \"docs\" does not exists.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/>\u00a0<br/>  <span class=\"kw1\">if</span> <span class=\"kw3\">DirectoryExists</span><span class=\"br0\">(</span><span class=\"st0\">'\\docs'</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Directory \"\\docs\" exists.'</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">else</span><br/>    <span class=\"kw3\">Writeln</span><span class=\"br0\">(</span><span class=\"st0\">'Directory \"\\docs\" does not exists.'</span><span class=\"br0\">)</span><span class=\"sy1\">;</span><br/><span class=\"kw1\">end</span><span class=\"sy1\">.</span></pre>"}, {"lang": "E", "loc": 11, "block": "<pre class=\"e highlighted_source\"><a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> file <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:</span>input.<span class=\"me1\">txt</span><span class=\"sy0\">&gt;,</span><br/>             <span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:///</span>input.<span class=\"me1\">txt</span><span class=\"sy0\">&gt;</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>  <a href=\"http://wiki.erights.org/wiki/require\"><span class=\"kw6\">require</span></a><span class=\"br0\">(</span>file.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>       <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> <span class=\"br0\">{</span> <span class=\"st0\">`$file is missing!`</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  <a href=\"http://wiki.erights.org/wiki/require\"><span class=\"kw6\">require</span></a><span class=\"br0\">(</span><span class=\"sy0\">!</span>file.<span class=\"me1\">isDirectory</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> <span class=\"br0\">{</span> <span class=\"st0\">`$file is a directory!`</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://wiki.erights.org/wiki/for\"><span class=\"kw1\">for</span></a> file <a href=\"http://wiki.erights.org/wiki/in\"><span class=\"kw2\">in</span></a> <span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:</span>docs<span class=\"sy0\">&gt;,</span><br/>             <span class=\"sy0\">&lt;</span>file<span class=\"sy0\">:///</span>docs<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><br/>  <a href=\"http://wiki.erights.org/wiki/require\"><span class=\"kw6\">require</span></a><span class=\"br0\">(</span>file.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>      <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> <span class=\"br0\">{</span> <span class=\"st0\">`$file is missing!`</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/>  <a href=\"http://wiki.erights.org/wiki/require\"><span class=\"kw6\">require</span></a><span class=\"br0\">(</span>file.<span class=\"me1\">isDirectory</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <a href=\"http://wiki.erights.org/wiki/fn\"><span class=\"kw3\">fn</span></a> <span class=\"br0\">{</span> <span class=\"st0\">`$file is not a directory!`</span> <span class=\"br0\">}</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Elena", "loc": 19, "block": "<pre class=\"text highlighted_source\">import system'io.<br/>import extensions.<br/>\u00a0<br/>extension op<br/>{<br/>    validatePath<br/>        = self  isAvailable; iif(\"exists\",\"not found\").<br/>} <br/>\u00a0<br/>public program =<br/>[<br/>    console printLine(\"input.txt file \",File new(\"input.txt\"); validatePath).<br/>\u00a0<br/>    console printLine(\"\\input.txt file \",File new(\"\\input.txt\"); validatePath).        <br/>\u00a0<br/>    console printLine(\"docs directory \",Directory new(\"docs\"); validatePath).<br/>\u00a0<br/>    console printLine(\"\\docs directory \",Directory new(\"\\docs\"); validatePath).<br/>].</pre>"}, {"lang": "Elixir", "loc": 4, "block": "<pre class=\"text highlighted_source\">File.regular?(\"input.txt\")<br/>File.dir?(\"docs\")<br/>File.regular?(\"/input.txt\")<br/>File.dir?(\"/docs\")</pre>"}, {"lang": "Emacs Lisp", "loc": 4, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>file-exists-p <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>file-directory-p <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>file-exists-p <span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>file-directory-p <span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Erlang", "loc": 13, "block": "<pre class=\"erlang highlighted_source\">#<span class=\"sy3\">!/</span>usr<span class=\"sy3\">/</span>bin<span class=\"sy3\">/</span>escript<br/><span class=\"re3\">existence</span><span class=\"br0\">(</span> true <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><span class=\"st0\">\"exists\"</span><span class=\"sy1\">;</span><br/><span class=\"re3\">existence</span><span class=\"br0\">(</span> false <span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><span class=\"st0\">\"does not exist\"</span><span class=\"sy1\">.</span><br/>\u00a0<br/><span class=\"re3\">print_result</span><span class=\"br0\">(</span><span class=\"re5\">Type</span><span class=\"sy1\">,</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"re5\">Flag</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span> <a href=\"http://erlang.org/doc/man/io.html\"><span class=\"kw5\">io</span></a>:<span class=\"re3\">fwrite</span><span class=\"br0\">(</span> <span class=\"st0\">\"~s ~s ~s~n\"</span><span class=\"sy1\">,</span> <span class=\"br0\">[</span><span class=\"re5\">Type</span><span class=\"sy1\">,</span> <span class=\"re5\">Name</span><span class=\"sy1\">,</span> <span class=\"re3\">existence</span><span class=\"br0\">(</span><span class=\"re5\">Flag</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0<br/>\u00a0<br/><span class=\"re3\">main</span><span class=\"br0\">(</span><span class=\"re5\">_</span><span class=\"br0\">)</span> <span class=\"sy1\">-&gt;</span><br/>        <span class=\"re3\">print_result</span><span class=\"br0\">(</span> <span class=\"st0\">\"File\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"input.txt\"</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/filelib.html\"><span class=\"kw5\">filelib</span></a>:<span class=\"re3\">is_regular</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <span class=\"re3\">print_result</span><span class=\"br0\">(</span> <span class=\"st0\">\"Directory\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"docs\"</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/filelib.html\"><span class=\"kw5\">filelib</span></a>:<span class=\"re3\">is_dir</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <span class=\"re3\">print_result</span><span class=\"br0\">(</span> <span class=\"st0\">\"File\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"/input.txt\"</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/filelib.html\"><span class=\"kw5\">filelib</span></a>:<span class=\"re3\">is_regular</span><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">,</span><br/>        <span class=\"re3\">print_result</span><span class=\"br0\">(</span> <span class=\"st0\">\"Directory\"</span><span class=\"sy1\">,</span> <span class=\"st0\">\"/docs\"</span><span class=\"sy1\">,</span> <a href=\"http://erlang.org/doc/man/filelib.html\"><span class=\"kw5\">filelib</span></a>:<span class=\"re3\">is_dir</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy1\">.</span><br/>\u00a0</pre>"}, {"lang": "Euphoria", "loc": 22, "block": "<pre class=\"euphoria highlighted_source\"><span class=\"kw1\">include</span> file.e<br/>\u00a0<br/><span class=\"kw1\">procedure</span> ensure_exists<span class=\"br0\">(</span><span class=\"kw2\">sequence</span> name<span class=\"br0\">)</span><br/>    <span class=\"kw2\">object</span> x<br/>    <span class=\"kw2\">sequence</span> s<br/>    x <span class=\"sy1\">=</span> dir<span class=\"br0\">(</span>name<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">sequence</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">if</span> <span class=\"kw2\">find</span><span class=\"br0\">(</span><span class=\"st0\">'d'</span><span class=\"sy2\">,</span>x<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span>D_ATTRIBUTES<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>            s <span class=\"sy1\">=</span> <span class=\"st0\">\"directory\"</span><br/>        <span class=\"kw1\">else</span><br/>            s <span class=\"sy1\">=</span> <span class=\"st0\">\"file\"</span><br/>        <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>        <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%s\u00a0%s exists.<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span><span class=\"br0\">{</span>name<span class=\"sy2\">,</span>s<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw2\">printf</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy2\">,</span><span class=\"st0\">\"%s does not exist.<span class=\"es0\">\\n</span>\"</span><span class=\"sy2\">,</span><span class=\"br0\">{</span>name<span class=\"br0\">}</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">procedure</span><br/>\u00a0<br/>ensure_exists<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/>ensure_exists<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>ensure_exists<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/>ensure_exists<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "F#", "loc": 5, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System.<span class=\"me1\">IO</span><br/>File.<span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/>Directory.<span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>File.<span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/>Directory.<span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st_h\">@\"\\docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Factor", "loc": 4, "block": "<pre class=\"text highlighted_source\">: print-exists? ( path -- )<br/>    [ write \": \" write ] [ exists? \"exists.\" \"doesn't exist.\"\u00a0? print ] bi\u00a0;<br/>\u00a0<br/>{ \"input.txt\" \"/input.txt\" \"docs\" \"/docs\" } [ print-exists? ] each</pre>"}, {"lang": "Forth", "loc": 5, "block": "<pre class=\"text highlighted_source\">: .exists ( str len -- ) 2dup file-status nip 0= if type .\"  exists\" else type .\"  does not exist\" then\u00a0;<br/> s\" input.txt\" .exists<br/>s\" /input.txt\" .exists<br/> s\" docs\" .exists<br/>s\" /docs\" .exists</pre>"}, {"lang": "Fortran", "loc": 4, "block": "<pre class=\"fortran highlighted_source\"><span class=\"kw3\">LOGICAL</span> <span class=\"sy0\">::</span> <span class=\"me2\">file_exists</span><br/>INQUIRE<span class=\"br0\">(</span><span class=\"kw1\">FILE</span><span class=\"sy0\">=</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"kw1\">EXIST</span><span class=\"sy0\">=</span>file_exists<span class=\"br0\">)</span>   <span class=\"co1\">! file_exists will be TRUE if the file</span><br/>                                               <span class=\"co1\">! exists and FALSE otherwise</span><br/>INQUIRE<span class=\"br0\">(</span><span class=\"kw1\">FILE</span><span class=\"sy0\">=</span><span class=\"st0\">\"/input.txt\"</span>, <span class=\"kw1\">EXIST</span><span class=\"sy0\">=</span>file_exists<span class=\"br0\">)</span></pre>"}, {"lang": "FreeBASIC", "loc": 38, "block": "<pre class=\"freebasic highlighted_source\"><span class=\"co1\">' FB 1.05.0 Win64</span><br/>\u00a0<br/><span class=\"co1\">' Enable FileExists() function to be used</span><br/><span class=\"co2\">#include \"file.bi\"</span><br/>\u00a0<br/><span class=\"co1\">' Use Win32 function to check if directory exists on Windows 10</span><br/><span class=\"kw1\">Declare</span> <span class=\"kw1\">Function</span> GetFileAttributes <span class=\"kw1\">Lib</span> <span class=\"st0\">\"kernel32.dll\"</span> Alias <span class=\"st0\">\"GetFileAttributesA\"</span> _<br/><span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> lpFileName <span class=\"kw1\">As</span> <span class=\"kw1\">ZString</span> <span class=\"kw1\">Ptr</span><span class=\"br0\">)</span> <span class=\"kw1\">As</span> ULong<br/>\u00a0<br/><span class=\"kw1\">Const</span> InvalidFileAttributes <span class=\"kw1\">As</span> ULong = -1UL<br/><span class=\"kw1\">Const</span> FileAttributeDirectory <span class=\"kw1\">As</span> ULong = &amp;H10UL<br/>\u00a0<br/><span class=\"kw1\">Sub</span> CheckFileExists<span class=\"br0\">(</span><span class=\"kw1\">ByRef</span> filePath <span class=\"kw1\">As</span> <span class=\"kw1\">String</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> FileExists<span class=\"br0\">(</span>filePath<span class=\"br0\">)</span> <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"'\"</span>; filePath; <span class=\"st0\">\"' exists\"</span><br/>  <span class=\"kw1\">Else</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"'\"</span>; filePath; <span class=\"st0\">\"' does not exist\"</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span><br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/><span class=\"kw1\">Sub</span> CheckDirectoryExists<span class=\"br0\">(</span><span class=\"kw1\">ByVal</span> dirPath <span class=\"kw1\">As</span> <span class=\"kw1\">ZString</span> <span class=\"kw1\">Ptr</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Dim</span> attrib <span class=\"kw1\">As</span> ULong = GetFileAttributes<span class=\"br0\">(</span>dirPath<span class=\"br0\">)</span> <br/>  <span class=\"kw1\">Dim</span> dirExists <span class=\"kw1\">As</span> ULong = attrib &lt;&gt; InvalidFileAttributes AndAlso <span class=\"br0\">(</span>attrib And FileAttributeDirectory<span class=\"br0\">)</span> &lt;&gt; <span class=\"nu0\">0</span> <br/>  <span class=\"kw1\">If</span> dirExists <span class=\"kw1\">Then</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"'\"</span>; *dirPath; <span class=\"st0\">\"' exists\"</span><br/>  <span class=\"kw1\">Else</span><br/>    <span class=\"kw1\">Print</span> <span class=\"st0\">\"'\"</span>; *dirPath; <span class=\"st0\">\"' does not exist\"</span><br/>  <span class=\"kw1\">End</span> <span class=\"kw1\">If</span> <br/><span class=\"kw1\">End</span> <span class=\"kw1\">Sub</span><br/>\u00a0<br/>CheckFileExists<span class=\"br0\">(</span><span class=\"kw1\">CurDir</span> + <span class=\"st0\">\"<span class=\"es0\">\\i</span>nput.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Dim</span> dirPath <span class=\"kw1\">As</span> <span class=\"kw1\">String</span> = <span class=\"kw1\">CurDir</span> + <span class=\"st0\">\"<span class=\"es0\">\\d</span>ocs\"</span><br/>CheckDirectoryExists<span class=\"br0\">(</span><span class=\"kw1\">StrPtr</span><span class=\"br0\">(</span>dirPath<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>CheckFileExists<span class=\"br0\">(</span><span class=\"st0\">\"c:<span class=\"es0\">\\i</span>nput.txt\"</span><span class=\"br0\">)</span><br/>CheckDirectoryExists<span class=\"br0\">(</span><span class=\"kw1\">StrPtr</span><span class=\"br0\">(</span><span class=\"st0\">\"c:<span class=\"es0\">\\d</span>ocs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">Print</span><br/><span class=\"kw1\">Print</span> <span class=\"st0\">\"Press any key to quit the program\"</span><br/><span class=\"kw1\">Sleep</span></pre>"}, {"lang": "Gambas", "loc": 12, "block": "<pre class=\"gambas highlighted_source\"><a href=\"http://gambasdoc.org/help/lang/public\"><span class=\"kw1\">Public</span></a> <a href=\"http://gambasdoc.org/help/lang/sub\"><span class=\"kw1\">Sub</span></a> Main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/exist\"><span class=\"kw2\">Exist</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">Home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"'input.txt' does exist in the Home folder\"</span><br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/not\"><span class=\"kw5\">Not</span></a> <a href=\"http://gambasdoc.org/help/lang/exist\"><span class=\"kw2\">Exist</span></a><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"'input.txt' does NOT exist in Root\"</span>                <span class=\"co1\">'Not messing With my Root files</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/exist\"><span class=\"kw2\">Exist</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"docs/\"</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"The folder '~/docs' does exist\"</span><br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/not\"><span class=\"kw5\">Not</span></a> <a href=\"http://gambasdoc.org/help/lang/exist\"><span class=\"kw2\">Exist</span></a><span class=\"br0\">(</span><span class=\"st0\">\"/docs/\"</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"The folder '/docs' does NOT exist\"</span>                     <span class=\"co1\">'Not messing With my Root files</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/type/file\"><span class=\"kw4\">File</span></a>.<span class=\"me1\">Save</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">Home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"`Abdu'l-Bah\u00e1.txt\"</span>, <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><a href=\"http://gambasdoc.org/help/lang/if\"><span class=\"kw1\">If</span></a> <a href=\"http://gambasdoc.org/help/lang/exist\"><span class=\"kw2\">Exist</span></a><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=user+site:http://gambasdoc.org/&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw6\">User</span></a>.<span class=\"me1\">Home</span> <span class=\"sy0\">&amp;/</span> <span class=\"st0\">\"`Abdu'l-Bah\u00e1.txt\"</span><span class=\"br0\">)</span> <a href=\"http://gambasdoc.org/help/lang/then\"><span class=\"kw1\">Then</span></a> <a href=\"http://gambasdoc.org/help/lang/print\"><span class=\"kw1\">Print</span></a> <span class=\"st0\">\"'`Abdu'l-Bah\u00e1.txt' does exist (zero length and unusual name)\"</span><br/>\u00a0<br/><a href=\"http://gambasdoc.org/help/lang/end\"><span class=\"kw1\">End</span></a></pre>"}, {"lang": "GAP", "loc": 4, "block": "<pre class=\"text highlighted_source\">IsExistingFile(\"input.txt\");     <br/>IsDirectoryPath(\"docs\");<br/>IsExistingFile(\"/input.txt\");<br/>IsDirectoryPath(\"/docs\");</pre>"}, {"lang": "Go", "loc": 24, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>    <span class=\"st0\">\"fmt\"</span><br/>    <span class=\"st0\">\"os\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> printStat<span class=\"sy1\">(</span>p <span class=\"kw4\">string</span><span class=\"sy1\">)</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">switch</span> <span class=\"nu2\">i</span><span class=\"sy1\">,</span> err <span class=\"sy2\">:=</span> os<span class=\"sy3\">.</span>Stat<span class=\"sy1\">(</span>p<span class=\"sy1\">);</span> <span class=\"sy1\">{</span><br/>    <span class=\"kw1\">case</span> err <span class=\"sy2\">!=</span> <span class=\"kw2\">nil</span><span class=\"sy1\">:</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>err<span class=\"sy1\">)</span><br/>    <span class=\"kw1\">case</span> <span class=\"nu2\">i</span><span class=\"sy3\">.</span>IsDir<span class=\"sy1\">():</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>p<span class=\"sy1\">,</span> <span class=\"st0\">\"is a directory\"</span><span class=\"sy1\">)</span><br/>    <span class=\"kw1\">default</span><span class=\"sy1\">:</span><br/>        fmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span>p<span class=\"sy1\">,</span> <span class=\"st0\">\"is a file\"</span><span class=\"sy1\">)</span><br/>    <span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>    printStat<span class=\"sy1\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"sy1\">)</span><br/>    printStat<span class=\"sy1\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"sy1\">)</span><br/>    printStat<span class=\"sy1\">(</span><span class=\"st0\">\"docs\"</span><span class=\"sy1\">)</span><br/>    printStat<span class=\"sy1\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"sy1\">)</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Groovy", "loc": 4, "block": "<pre class=\"groovy highlighted_source\"><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">'input.txt'</span><span class=\"br0\">)</span>.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">'/input.txt'</span><span class=\"br0\">)</span>.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">'docs'</span><span class=\"br0\">)</span>.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/><a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20println\"><span class=\"kw8\">println</span></a> <a href=\"http://www.google.de/search?q=site%3Agroovy.codehaus.org/%20new\"><span class=\"kw2\">new</span></a> <a href=\"http://www.google.de/search?as_q=File&amp;num=100&amp;hl=en&amp;as_occt=url&amp;as_sitesearch=java.sun.com%2Fj2se%2F1%2E5%2E0%2Fdocs%2Fapi%2F\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span><span class=\"st0\">'/docs'</span><span class=\"br0\">)</span>.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre>"}, {"lang": "Haskell", "loc": 17, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Directory <span class=\"br0\">(</span>doesFileExist<span class=\"sy0\">,</span> doesDirectoryExist<span class=\"br0\">)</span><br/>\u00a0<br/>check <span class=\"sy0\">::</span> <span class=\"br0\">(</span>FilePath <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Bool\"><span class=\"kw4\">Bool</span></a><span class=\"br0\">)</span> <span class=\"sy0\">-&gt;</span> FilePath <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>check p s <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  result <span class=\"sy0\">&lt;-</span> p s<br/>  <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"sy0\">$</span><br/>    s <span class=\"sy0\">++</span><br/>    <span class=\"kw1\">if</span> result<br/>      <span class=\"kw1\">then</span> <span class=\"st0\">\" does exist\"</span><br/>      <span class=\"kw1\">else</span> <span class=\"st0\">\" does not exist\"</span><br/>\u00a0<br/>main <span class=\"sy0\">::</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>main <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>  check doesFileExist <span class=\"st0\">\"input.txt\"</span><br/>  check doesDirectoryExist <span class=\"st0\">\"docs\"</span><br/>  check doesFileExist <span class=\"st0\">\"/input.txt\"</span><br/>  check doesDirectoryExist <span class=\"st0\">\"/docs\"</span></pre>"}, {"lang": "HicEst", "loc": 4, "block": "<pre class=\"hicest highlighted_source\">   <span class=\"kw1\">OPEN</span><span class=\"br0\">(</span>FIle<span class=\"sy1\">=</span>   <span class=\"st0\">'input.txt'</span><span class=\"sy1\">,</span> OLD<span class=\"sy1\">,</span> IOStat<span class=\"sy1\">=</span>ios<span class=\"sy1\">,</span> ERror<span class=\"sy1\">=</span><span class=\"nu0\">99</span><span class=\"br0\">)</span><br/>   <span class=\"kw1\">OPEN</span><span class=\"br0\">(</span>FIle<span class=\"sy1\">=</span><span class=\"st0\">'C:\\input.txt'</span><span class=\"sy1\">,</span> OLD<span class=\"sy1\">,</span> IOStat<span class=\"sy1\">=</span>ios<span class=\"sy1\">,</span> ERror<span class=\"sy1\">=</span><span class=\"nu0\">99</span><span class=\"br0\">)</span><br/><span class=\"co1\">! ...</span><br/><span class=\"nu0\">99</span> <span class=\"kw1\">WRITE</span><span class=\"br0\">(</span>Messagebox<span class=\"sy1\">=</span><span class=\"st0\">'!'</span><span class=\"br0\">)</span> <span class=\"st0\">'File does not exist. Error message '</span><span class=\"sy1\">,</span> ios </pre>"}, {"lang": "i", "loc": 18, "block": "<pre class=\"text highlighted_source\">concept exists(path) {<br/>\topen(path)<br/>\terrors {<br/>\t\tif error.DoesNotExist()<br/>\t\t\tprint(path, \" does not exist!\")<br/>\t\tend<br/>\t\treturn<br/>\t}<br/>\tprint(path, \" exists!\")<br/>}<br/>\u00a0<br/>software {<br/>\texists(\"input.txt\")<br/>\texists(\"/input.txt\")<br/>\texists(\"docs\")<br/>\texists(\"/docs\")<br/>\texists(\"docs/Abdu'l-Bah\u00e1.txt\")<br/>}</pre>"}, {"lang": "Icon and Unicon", "loc": 4, "block": "<pre class=\"unicon highlighted_source\"><span class=\"kw1\">every</span> dir <span class=\"sy0\">:=</span> <span class=\"sy0\">!</span><span class=\"br0\">[</span><span class=\"st0\">\"./\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"/\"</span><span class=\"br0\">]</span> <span class=\"kw1\">do</span> <span class=\"br0\">{</span><br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"file \"</span><span class=\"sy0\">,</span> f <span class=\"sy0\">:=</span> dir <span class=\"sy0\">||</span> <span class=\"st0\">\"input.txt\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">if</span> <span class=\"kw4\">stat</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\" exists.\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\" doesn't exist.\"</span><span class=\"br0\">)</span> <br/>   <span class=\"kw4\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"directory \"</span><span class=\"sy0\">,</span> f <span class=\"sy0\">:=</span> dir <span class=\"sy0\">||</span> <span class=\"st0\">\"docs\"</span><span class=\"sy0\">,</span> <span class=\"kw1\">if</span> <span class=\"kw4\">stat</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">then</span> <span class=\"st0\">\" exists.\"</span> <span class=\"kw1\">else</span> <span class=\"st0\">\" doesn't exist.\"</span><span class=\"br0\">)</span> <br/>   <span class=\"br0\">}</span></pre>"}, {"lang": "HolyC", "loc": 20, "block": "<pre class=\"text highlighted_source\">U0 FileExists(U8 *f) {<br/>  if (FileFind(f) &amp;&amp;\u00a0!IsDir(f)) {<br/>    Print(\"'%s' file exists.\\n\", f);<br/>  } else {<br/>    Print(\"'%s' file does not exist.\\n\", f);<br/>  }<br/>}<br/>\u00a0<br/>U0 DirExists(U8 *d) {<br/>  if (IsDir(d)) {<br/>    Print(\"'%s' directory exists.\\n\", d);<br/>  } else {<br/>    Print(\"'%s' directory does not exist.\\n\", d);<br/>  }<br/>}<br/>\u00a0<br/>FileExists(\"input.txt\");<br/>FileExists(\"::/input.txt\");<br/>DirExists(\"docs\");<br/>DirExists(\"::/docs\");</pre>"}, {"lang": "IDL", "loc": 7, "block": "<pre class=\"idl highlighted_source\">\u00a0<br/>print, FILE_TEST<span class=\"br0\">(</span><span class=\"st0\">'input.txt'</span><span class=\"br0\">)</span><br/>print, FILE_TEST<span class=\"br0\">(</span>PATH_SEP<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">'input.txt'</span><span class=\"br0\">)</span><br/>print, FILE_TEST<span class=\"br0\">(</span><span class=\"st0\">'docs'</span>, <span class=\"sy0\">/</span>DIRECTORY<span class=\"br0\">)</span><br/>print, FILE_TEST<span class=\"br0\">(</span>PATH_SEP<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"st0\">'docs'</span>, <span class=\"sy0\">/</span>DIRECTORY<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "J", "loc": 6, "block": "<pre class=\"j highlighted_source\">require <span class=\"st_h\">'files'</span><br/>fexist <span class=\"st_h\">'input.txt'</span><br/>fexist <span class=\"st_h\">'/input.txt'</span><br/>direxist=: <span class=\"nu0\">2</span> = ftype<br/>direxist <span class=\"st_h\">'docs'</span><br/>direxist <span class=\"st_h\">'/docs'</span></pre>"}, {"lang": "Java", "loc": 18, "block": "<pre class=\"java highlighted_source\"><span class=\"kw1\">import</span> <span class=\"co2\">java.io.File</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> FileExistsTest <span class=\"br0\">{</span><br/>   <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">boolean</span> isFileExists<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> filename<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       <span class=\"kw4\">boolean</span> exists <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a><span class=\"br0\">(</span>filename<span class=\"br0\">)</span>.<span class=\"me1\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>       <span class=\"kw1\">return</span> exists<span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> test<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> type, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> filename<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>       <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"The following \"</span> <span class=\"sy0\">+</span> type <span class=\"sy0\">+</span> <span class=\"st0\">\" called \"</span> <span class=\"sy0\">+</span> filename <span class=\"sy0\">+</span> <br/>           <span class=\"br0\">(</span>isFileExists<span class=\"br0\">(</span>filename<span class=\"br0\">)</span> <span class=\"sy0\">?</span> <span class=\"st0\">\" exists.\"</span> <span class=\"sy0\">:</span> <span class=\"st0\">\" not exists.\"</span><span class=\"br0\">)</span><br/>       <span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/>   <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        test<span class=\"br0\">(</span><span class=\"st0\">\"file\"</span>, <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        test<span class=\"br0\">(</span><span class=\"st0\">\"file\"</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        test<span class=\"br0\">(</span><span class=\"st0\">\"directory\"</span>, <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        test<span class=\"br0\">(</span><span class=\"st0\">\"directory\"</span>, <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"docs\"</span> <span class=\"sy0\">+</span> <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Afile+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">File</span></a>.<span class=\"me1\">separator</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "JavaScript", "loc": 6, "block": "<pre class=\"javascript highlighted_source\"><span class=\"kw1\">var</span> fso <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> ActiveXObject<span class=\"br0\">(</span><span class=\"st0\">\"Scripting.FileSystemObject\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>fso.<span class=\"me1\">FileExists</span><span class=\"br0\">(</span><span class=\"st0\">'input.txt'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>fso.<span class=\"me1\">FileExists</span><span class=\"br0\">(</span><span class=\"st0\">'c:/input.txt'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>fso.<span class=\"me1\">FolderExists</span><span class=\"br0\">(</span><span class=\"st0\">'docs'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>fso.<span class=\"me1\">FolderExists</span><span class=\"br0\">(</span><span class=\"st0\">'c:/docs'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Julia", "loc": 6, "block": "<pre class=\"text highlighted_source\">@show isfile(\"input.txt\")<br/>@show isfile(\"/input.txt\")<br/>@show isdir(\"docs\")<br/>@show isdir(\"/docs\")<br/>@show isfile(\"\")<br/>@show isfile(\"`Abdu'l-Bah\u00e1.txt\")</pre>"}, {"lang": "Kotlin", "loc": 16, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.0.6</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">io</span>.<span class=\"me1\">File</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> filePaths <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"st0\">\"c:<span class=\"es1\">\\\\</span>input.txt\"</span>, <span class=\"st0\">\"zero_length.txt\"</span>, <span class=\"st0\">\"`Abdu'l-Bah\u00e1.txt\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> dirPaths  <span class=\"sy0\">=</span> arrayOf<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span>, <span class=\"st0\">\"c:<span class=\"es1\">\\\\</span>docs\"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>filePath in filePaths<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> f <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>filePath<span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"$filePath ${if (f.exists() &amp;&amp;\u00a0!f.isDirectory) \"</span>exists<span class=\"st0\">\" else \"</span>does not exist<span class=\"st0\">\"}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">for</span></a> <span class=\"br0\">(</span>dirPath in dirPaths<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> d <span class=\"sy0\">=</span> File<span class=\"br0\">(</span>dirPath<span class=\"br0\">)</span><br/>        println<span class=\"br0\">(</span><span class=\"st0\">\"$dirPath ${if (d.exists() &amp;&amp; d.isDirectory) \"</span>exists<span class=\"st0\">\" else \"</span>does not exist<span class=\"st0\">\"}\"</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "LabVIEW", "loc": 11, "block": "<pre class=\"text highlighted_source\">// local file<br/>file_exists('input.txt')<br/>\u00a0<br/>// local directory<br/>file_exists('docs')<br/>\u00a0<br/>// file in root file system (requires permissions at user OS level)<br/>file_exists('//input.txt')<br/>\u00a0<br/>// directory in root file system (requires permissions at user OS level)<br/>file_exists('//docs')</pre>"}, {"lang": "Lasso", "loc": 11, "block": "<pre class=\"text highlighted_source\">// local file<br/>file_exists('input.txt')<br/>\u00a0<br/>// local directory<br/>file_exists('docs')<br/>\u00a0<br/>// file in root file system (requires permissions at user OS level)<br/>file_exists('//input.txt')<br/>\u00a0<br/>// directory in root file system (requires permissions at user OS level)<br/>file_exists('//docs')</pre>"}, {"lang": "LFE", "loc": 10, "block": "<pre class=\"lisp highlighted_source\">\u00a0<br/><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">filelib</span> is_regular '<span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/>false<br/><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">filelib</span> is_dir '<span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/>false<br/><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">filelib</span> is_regular '<span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/>false<br/><span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"sy0\">:</span> <span class=\"me1\">filelib</span> is_dir '<span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>false<br/>\u00a0</pre>"}, {"lang": "Liberty BASIC", "loc": 29, "block": "<pre class=\"lb highlighted_source\"><span class=\"co1\">'fileExists.bas - Show how to determine if a file exists</span><br/><span class=\"kw1\">dim</span> info$<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><br/><span class=\"kw1\">input</span> <span class=\"st0\">\"Type a file path (ie. c:\\windows\\somefile.txt)?\"</span>; fpath$<br/><span class=\"kw1\">if</span> fileExists<span class=\"br0\">(</span>fpath$<span class=\"br0\">)</span> <span class=\"kw1\">then</span><br/>    <span class=\"kw1\">print</span> fpath$; <span class=\"st0\">\" exists!\"</span><br/><span class=\"kw1\">else</span><br/>    <span class=\"kw1\">print</span> fpath$; <span class=\"st0\">\" doesn't exist!\"</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/><span class=\"kw1\">end</span><br/>\u00a0<br/><span class=\"co1\">'return a true if the file in fullPath$ exists, else return false</span><br/><span class=\"kw1\">function</span> fileExists<span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">files</span> pathOnly$<span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><span class=\"sy0\">,</span> filenameOnly$<span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><span class=\"sy0\">,</span> info$<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>    fileExists <span class=\"sy0\">=</span> <span class=\"kw2\">val</span><span class=\"br0\">(</span>info$<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"co1\">'return just the directory path from a full file path</span><br/><span class=\"kw1\">function</span> pathOnly$<span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><br/>    pathOnly$ <span class=\"sy0\">=</span> fullPath$<br/>    <span class=\"kw1\">while</span> <span class=\"kw2\">right$</span><span class=\"br0\">(</span>pathOnly$<span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\\\"</span> <span class=\"kw1\">and</span> pathOnly$ <span class=\"sy0\">&lt;&gt;</span> <span class=\"st0\">\"\"</span><br/>        pathOnly$ <span class=\"sy0\">=</span> <span class=\"kw2\">left$</span><span class=\"br0\">(</span>pathOnly$<span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>pathOnly$<span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">wend</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span><br/>\u00a0<br/><span class=\"co1\">'return just the filename from a full file path</span><br/><span class=\"kw1\">function</span> filenameOnly$<span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><br/>    pathLength <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>pathOnly$<span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    filenameOnly$ <span class=\"sy0\">=</span> <span class=\"kw2\">right$</span><span class=\"br0\">(</span>fullPath$<span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>fullPath$<span class=\"br0\">)</span><span class=\"sy0\">-</span>pathLength<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">function</span></pre>"}, {"lang": "Little", "loc": 12, "block": "<pre class=\"c highlighted_source\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span>exists<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"The file <span class=\"es1\">\\\"</span>input.txt<span class=\"es1\">\\\"</span> exist\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   <br/><span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>exists<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"The file <span class=\"es1\">\\\"</span>/input.txt<span class=\"es1\">\\\"</span> exist\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  <br/><span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>exists<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"The file <span class=\"es1\">\\\"</span>docs<span class=\"es1\">\\\"</span> exist\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    <br/><span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>exists<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/puts.html\"><span class=\"kw3\">puts</span></a><span class=\"br0\">(</span><span class=\"st0\">\"The file <span class=\"es1\">\\\"</span>/docs<span class=\"es1\">\\\"</span> exist\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   <br/><span class=\"br0\">}</span></pre>"}, {"lang": "LiveCode", "loc": 4, "block": "<pre class=\"text highlighted_source\">there is a file \"/input.txt\"<br/>there is a file \"input.txt\"<br/>there is a folder \"docs\"<br/>there is a file \"/docs/input.txt\"</pre>"}, {"lang": "Logo", "loc": 4, "block": "<pre class=\"text highlighted_source\">show file? \"input.txt<br/>show file? \"/input.txt<br/>show file? \"docs<br/>show file? \"/docs</pre>"}, {"lang": "Lua", "loc": 12, "block": "<pre class=\"lua highlighted_source\"><span class=\"kw1\">function</span> output<span class=\"br0\">(</span> s<span class=\"sy0\">,</span> b <span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> b <span class=\"kw1\">then</span><br/>        <span class=\"kw3\">print</span> <span class=\"br0\">(</span> s<span class=\"sy0\">,</span> <span class=\"st0\">\" does not exist.\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw3\">print</span> <span class=\"br0\">(</span> s<span class=\"sy0\">,</span> <span class=\"st0\">\" does exist.\"</span> <span class=\"br0\">)</span><br/>    <span class=\"kw1\">end</span>    <br/><span class=\"kw1\">end</span><br/>\u00a0<br/>output<span class=\"br0\">(</span> <span class=\"st0\">\"input.txt\"</span><span class=\"sy0\">,</span>  <span class=\"kw3\">io.open</span><span class=\"br0\">(</span> <span class=\"st0\">\"input.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw4\">nil</span> <span class=\"br0\">)</span><br/>output<span class=\"br0\">(</span> <span class=\"st0\">\"/input.txt\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">io.open</span><span class=\"br0\">(</span> <span class=\"st0\">\"/input.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw4\">nil</span> <span class=\"br0\">)</span><br/>output<span class=\"br0\">(</span> <span class=\"st0\">\"docs\"</span><span class=\"sy0\">,</span>  <span class=\"kw3\">io.open</span><span class=\"br0\">(</span> <span class=\"st0\">\"docs\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw4\">nil</span> <span class=\"br0\">)</span><br/>output<span class=\"br0\">(</span> <span class=\"st0\">\"/docs\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">io.open</span><span class=\"br0\">(</span> <span class=\"st0\">\"/docs\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"r\"</span> <span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw4\">nil</span> <span class=\"br0\">)</span></pre>"}, {"lang": "M2000 Interpreter", "loc": 20, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>Module ExistDirAndFile {<br/>      Let WorkingDir$=Dir$, RootDir$=\"C:\\\"<br/>\u00a0<br/>      task(WorkingDir$)<br/>      task(RootDir$)<br/>      Dir User ' return to user directroy<br/>\u00a0<br/>      Sub task(WorkingDir$)<br/>            Local counter<br/>            Dir WorkingDir$<br/>            If Not Exist.Dir(\"docs\") then Report  \"docs not exist in \"+WorkingDir$\u00a0: counter++<br/>            If Not Exist(\"output.txt\") Then {<br/>                  Report \"output.txt not exist in \"+ WorkingDir$\u00a0: counter++<br/>            } Else.if Filelen(\"output.txt\")=0 Then Report \"output.txt has zero length\"<br/>            If counter =0 then Report  WorkingDir$+ \" has docs directory and file output.txt\"<br/>      End Sub<br/>}<br/>ExistDirAndFile<br/>\u00a0</pre>"}, {"lang": "Maple", "loc": 5, "block": "<pre class=\"text highlighted_source\">with(FileTools):<br/>Exists(\"input.txt\");<br/>Exists(\"docs\") and IsDirectory(\"docs\");<br/>Exists(\"/input.txt\");<br/>Exists(\"/docs\") and IsDirectory(\"/docs\");</pre>"}, {"lang": "Mathematica / Wolfram Language", "loc": 6, "block": "<pre class=\"text highlighted_source\">wd = NotebookDirectory[];<br/>FileExistsQ[wd &lt;&gt; \"input.txt\"]<br/>DirectoryQ[wd &lt;&gt; \"docs\"]<br/>\u00a0<br/>FileExistsQ[\"/\" &lt;&gt; \"input.txt\"]<br/>DirectoryQ[\"/\" &lt;&gt; \"docs\"]</pre>"}, {"lang": "MATLAB / Octave", "loc": 4, "block": "<pre class=\"matlab highlighted_source\"> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/exist.html\"><span class=\"kw2\">exist</span></a><span class=\"br0\">(</span><span class=\"co2\">'input.txt'</span>,<span class=\"co2\">'file'</span><span class=\"br0\">)</span> <br/> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/exist.html\"><span class=\"kw2\">exist</span></a><span class=\"br0\">(</span><span class=\"co2\">'/input.txt'</span>,<span class=\"co2\">'file'</span><span class=\"br0\">)</span> <br/> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/exist.html\"><span class=\"kw2\">exist</span></a><span class=\"br0\">(</span><span class=\"co2\">'docs'</span>,<span class=\"co2\">'dir'</span><span class=\"br0\">)</span> <br/> <a href=\"http://www.mathworks.com/access/helpdesk/help/techdoc/ref/exist.html\"><span class=\"kw2\">exist</span></a><span class=\"br0\">(</span><span class=\"co2\">'/docs'</span>,<span class=\"co2\">'dir'</span><span class=\"br0\">)</span></pre>"}, {"lang": "MAXScript", "loc": 6, "block": "<pre class=\"text highlighted_source\">-- Here<br/>doesFileExist \"input.txt\"<br/>(getDirectories \"docs\").count == 1<br/>-- Root<br/>doesFileExist \"\\input.txt\"<br/>(getDirectories \"C:\\docs\").count == 1</pre>"}, {"lang": "Modula-3", "loc": 21, "block": "<pre class=\"modula3 highlighted_source\"><span class=\"kw1\">MODULE</span> FileTest <span class=\"kw1\">EXPORTS</span> Main;<br/>\u00a0<br/><span class=\"kw1\">IMPORT</span> IO<span class=\"sy0\">,</span> Fmt<span class=\"sy0\">,</span> FS<span class=\"sy0\">,</span> File<span class=\"sy0\">,</span> OSError<span class=\"sy0\">,</span> Pathname;<br/>\u00a0<br/><span class=\"kw1\">PROCEDURE</span> FileExists<span class=\"br0\">(</span>file<span class=\"sy0\">:</span> Pathname.<span class=\"me1\">T</span><span class=\"br0\">)</span><span class=\"sy0\">:</span> <span class=\"kw4\">BOOLEAN</span> <span class=\"sy0\">=</span><br/>  <span class=\"kw1\">VAR</span> status<span class=\"sy0\">:</span> File.<span class=\"me1\">Status</span>;<br/>  <span class=\"kw1\">BEGIN</span><br/>    <span class=\"kw1\">TRY</span><br/>      status <span class=\"sy0\">:=</span> FS.<span class=\"me1\">Status</span><span class=\"br0\">(</span>file<span class=\"br0\">)</span>;<br/>      <span class=\"kw1\">RETURN</span> <span class=\"kw2\">TRUE</span>;<br/>    <span class=\"kw1\">EXCEPT</span><br/>    | OSError.<span class=\"me1\">E</span> <span class=\"sy0\">=</span>&gt; <span class=\"kw1\">RETURN</span> <span class=\"kw2\">FALSE</span>;<br/>    <span class=\"kw1\">END</span>;<br/>  <span class=\"kw1\">END</span> FileExists;<br/>\u00a0<br/><span class=\"kw1\">BEGIN</span><br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Fmt.<span class=\"me1\">Bool</span><span class=\"br0\">(</span>FileExists<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Fmt.<span class=\"me1\">Bool</span><span class=\"br0\">(</span>FileExists<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Fmt.<span class=\"me1\">Bool</span><span class=\"br0\">(</span>FileExists<span class=\"br0\">(</span><span class=\"st0\">\"docs/\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/>  IO.<span class=\"me1\">Put</span><span class=\"br0\">(</span>Fmt.<span class=\"me1\">Bool</span><span class=\"br0\">(</span>FileExists<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> &amp; <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span>;<br/><span class=\"kw1\">END</span> FileTest.</pre>"}, {"lang": "Nemerle", "loc": 7, "block": "<pre class=\"text highlighted_source\">using System.Console;<br/>using System.IO;<br/>\u00a0<br/>WriteLine(File.Exists(\"input.txt\"));<br/>WriteLine(File.Exists(\"/input.txt\"));<br/>WriteLine(Directory.Exists(\"docs\"));<br/>WriteLine(Directory.Exists(\"/docs\"));</pre>"}, {"lang": "NetRexx", "loc": 45, "block": "<pre class=\"netrexx highlighted_source\"><span class=\"coMULTI\">/* NetRexx */</span><br/>options replace format comments java crossref symbols <span class=\"kw2\">binary</span><br/>\u00a0<br/>runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span><br/><span class=\"kw1\">return</span><br/>\u00a0<br/><span class=\"co1\">-- . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</span><br/>method isExistingFile<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw2\">returns</span> boolean<br/>  ff = File<span class=\"br0\">(</span>fn<span class=\"br0\">)</span><br/>  fExists = ff.<span class=\"kw6\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> ff.<span class=\"me0\">isFile</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> fExists<br/>\u00a0<br/><span class=\"co1\">-- . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</span><br/>method isExistingDirectory<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"kw2\">public</span> <span class=\"kw2\">static</span> <span class=\"kw2\">returns</span> boolean<br/>  ff = File<span class=\"br0\">(</span>fn<span class=\"br0\">)</span><br/>  fExists = ff.<span class=\"kw6\">exists</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;</span> ff.<span class=\"me0\">isDirectory</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">return</span> fExists<br/>\u00a0<br/><span class=\"co1\">-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br/>method runSample<span class=\"br0\">(</span>arg<span class=\"br0\">)</span> <span class=\"kw2\">private</span> <span class=\"kw2\">static</span><br/>  <span class=\"kw1\">parse</span> arg files<br/>  <span class=\"kw1\">if</span> files = <span class=\"st0\">''</span> <span class=\"kw3\">then</span> files = <span class=\"st0\">'input.txt F docs D /input.txt F /docs D'</span><br/>  <span class=\"kw1\">loop</span> while files.<span class=\"me0\">length</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">parse</span> files fn ft files<br/>    <span class=\"kw1\">select</span> <span class=\"kw2\">case</span><span class=\"br0\">(</span>ft.<span class=\"kw6\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw3\">when</span> <span class=\"st0\">'F'</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> isExistingFile<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"kw3\">then</span> ex = <span class=\"st0\">'exists'</span><br/>        <span class=\"kw3\">else</span>                       ex = <span class=\"st0\">'does not exist'</span><br/>        <span class=\"kw1\">say</span> <span class=\"st0\">'File '</span><span class=\"st0\">''</span>fn<span class=\"st0\">''</span><span class=\"st0\">''</span> ex<br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">when</span> <span class=\"st0\">'D'</span> <span class=\"kw3\">then</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> isExistingDirectory<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"kw3\">then</span> ex = <span class=\"st0\">'exists'</span><br/>        <span class=\"kw3\">else</span>                            ex = <span class=\"st0\">'does not exist'</span><br/>        <span class=\"kw1\">say</span> <span class=\"st0\">'Directory '</span><span class=\"st0\">''</span>fn<span class=\"st0\">''</span><span class=\"st0\">''</span> ex<br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">otherwise</span> <span class=\"kw1\">do</span><br/>        <span class=\"kw1\">if</span> isExistingFile<span class=\"br0\">(</span>fn<span class=\"br0\">)</span> <span class=\"kw3\">then</span> ex = <span class=\"st0\">'exists'</span><br/>        <span class=\"kw3\">else</span>                       ex = <span class=\"st0\">'does not exist'</span><br/>        <span class=\"kw1\">say</span> <span class=\"st0\">'File '</span><span class=\"st0\">''</span>fn<span class=\"st0\">''</span><span class=\"st0\">''</span> ex<br/>        <span class=\"kw3\">end</span><br/>      <span class=\"kw3\">end</span><br/>    <span class=\"kw3\">end</span><br/>\u00a0<br/>  <span class=\"kw1\">return</span><br/>\u00a0</pre>"}, {"lang": "NewLISP", "loc": 7, "block": "<pre class=\"newlisp highlighted_source\"><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#dolist\"><span class=\"kw1\">dolist</span></a> <span class=\"br0\">(</span>file <span class=\"sy0\">'</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span> <span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#file%3F\"><span class=\"kw1\">file?</span></a> file <a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#true\"><span class=\"kw1\">true</span></a><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a> <span class=\"st0\">\"file \"</span> file <span class=\"st0\">\" exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#dolist\"><span class=\"kw1\">dolist</span></a> <span class=\"br0\">(</span>dir <span class=\"sy0\">'</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span> <span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#if\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#directory%3F\"><span class=\"kw1\">directory?</span></a> dir<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><a href=\"http://www.newlisp.org/downloads/newlisp_manual.html#println\"><span class=\"kw1\">println</span></a> <span class=\"st0\">\"directory \"</span> dir <span class=\"st0\">\" exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "Nim", "loc": 6, "block": "<pre class=\"text highlighted_source\">import os<br/>\u00a0<br/>echo existsFile \"input.txt\"<br/>echo existsFile \"/input.txt\"<br/>echo existsDir \"docs\"<br/>echo existsDir \"/docs\"</pre>"}, {"lang": "Objective-C", "loc": 3, "block": "<pre class=\"objc highlighted_source\"><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSFileManager_Class/\"><span class=\"kw5\">NSFileManager</span></a> <span class=\"sy0\">*</span>fm <span class=\"sy0\">=</span> <span class=\"br0\">[</span><a href=\"http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSFileManager_Class/\"><span class=\"kw5\">NSFileManager</span></a> defaultManager<span class=\"br0\">]</span>;<br/>NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"input.txt\u00a0%s\"</span>, <span class=\"br0\">[</span>fm fileExistsAtPath<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">]</span>\u00a0? <span class=\"co3\">@</span><span class=\"st0\">\"exists\"</span> <span class=\"sy0\">:</span> <span class=\"co3\">@</span><span class=\"st0\">\"doesn't exist\"</span><span class=\"br0\">)</span>;<br/>NSLog<span class=\"br0\">(</span><span class=\"co3\">@</span><span class=\"st0\">\"docs\u00a0%s\"</span>, <span class=\"br0\">[</span>fm fileExistsAtPath<span class=\"sy0\">:</span><span class=\"co3\">@</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">]</span>\u00a0? <span class=\"co3\">@</span><span class=\"st0\">\"exists\"</span> <span class=\"sy0\">:</span> <span class=\"co3\">@</span><span class=\"st0\">\"doesn't exist\"</span><span class=\"br0\">)</span>;</pre>"}, {"lang": "Objeck", "loc": 13, "block": "<pre class=\"objeck highlighted_source\">\u00a0<br/><span class=\"kw1\">use</span> IO<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">bundle</span> Default <span class=\"br0\">{</span><br/>  <span class=\"kw1\">class</span> Test <span class=\"br0\">{</span><br/>    <span class=\"kw1\">function</span> <span class=\"sy0\">:</span> Main<span class=\"br0\">(</span>args <span class=\"sy0\">:</span> <span class=\"kw2\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> ~ <span class=\"kw2\">Nil</span> <span class=\"br0\">{</span><br/>      File<span class=\"sy0\">-&gt;</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      File<span class=\"sy0\">-&gt;</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Directory<span class=\"sy0\">-&gt;</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>      Directory<span class=\"sy0\">-&gt;</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">PrintLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "OCaml", "loc": 4, "block": "<pre class=\"ocaml highlighted_source\"><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>file_exists <span class=\"st0\">\"input.txt\"</span><span class=\"sy0\">;;</span><br/><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>file_exists <span class=\"st0\">\"docs\"</span><span class=\"sy0\">;;</span><br/><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>file_exists <span class=\"st0\">\"/input.txt\"</span><span class=\"sy0\">;;</span><br/><a href=\"http://caml.inria.fr/pub/docs/manual-ocaml/libref/Sys.html\"><span class=\"kw2\">Sys</span></a><span class=\"sy0\">.</span>file_exists <span class=\"st0\">\"/docs\"</span><span class=\"sy0\">;;</span></pre>"}, {"lang": "ooRexx", "loc": 20, "block": "<pre class=\"oorexx highlighted_source\"><span class=\"coMULTI\">/**********************************************************************<br/>* exists(filespec)<br/>* returns 1   if filespec identifies a file with size&gt;0<br/>*                (a file of size 0 is deemed not to exist.)<br/>*             or a directory<br/>*         0   otherwise<br/>* 09.06.2013 Walter Pachl (retrieved from my toolset)<br/>**********************************************************************/</span><br/>exists:<br/>  <span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> spec<br/>  <span class=\"kw1\">call</span> sysfiletree spec, <span class=\"st0\">'LIST'</span>, <span class=\"st0\">'BL'</span><br/>  <span class=\"kw1\">if</span> list<span class=\"sy0\">.</span>0<span class=\"sy0\">\\</span>=<span class=\"nu0\">1</span> <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>        <span class=\"co1\">-- does not exist</span><br/>  <span class=\"kw1\">parse</span> <span class=\"kw2\">var</span> list<span class=\"sy0\">.</span>1 <span class=\"sy0\">.</span> <span class=\"sy0\">.</span> size flags <span class=\"sy0\">.</span><br/>  <span class=\"kw1\">if</span> size<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"kw3\">then</span> <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>           <span class=\"co1\">-- real file</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw6\">substr</span><span class=\"br0\">(</span>flags,<span class=\"nu0\">2</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span>=<span class=\"st0\">'D'</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Do</span><br/>    <span class=\"kw1\">Say</span> spec <span class=\"st0\">'is a directory'</span><br/>    <span class=\"kw1\">Return</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw3\">End</span><br/>  <span class=\"kw1\">If</span> size=<span class=\"nu0\">0</span> <span class=\"kw3\">Then</span> <span class=\"kw1\">Say</span> spec <span class=\"st0\">'is a zero-size file'</span><br/>  <span class=\"kw1\">Return</span> <span class=\"nu0\">0</span></pre>"}, {"lang": "Oz", "loc": 7, "block": "<pre class=\"oz highlighted_source\"><span class=\"kw1\">declare</span><br/>  <span class=\"br0\">[</span>Path<span class=\"br0\">]</span> = <span class=\"br0\">{</span>Module<span class=\"sy0\">.</span>link <span class=\"br0\">[</span><span class=\"st0\">'x-oz://system/os/Path.ozf'</span><span class=\"br0\">]</span><span class=\"br0\">}</span><br/><span class=\"kw1\">in</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Path<span class=\"sy0\">.</span>exists <span class=\"st0\">\"docs\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Path<span class=\"sy0\">.</span>exists <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Path<span class=\"sy0\">.</span>exists <span class=\"st0\">\"/docs\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span><br/>  <span class=\"br0\">{</span>Show <span class=\"br0\">{</span>Path<span class=\"sy0\">.</span>exists <span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre>"}, {"lang": "PARI/GP", "loc": 3, "block": "<pre class=\"parigp highlighted_source\"><span class=\"kw1\">trap</span><span class=\"br0\">(</span><span class=\"sy0\">,</span><span class=\"st0\">\"does not exist\"</span><span class=\"sy0\">,</span><span class=\"kw1\">read</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"st0\">\"exists\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">trap</span><span class=\"br0\">(</span><span class=\"sy0\">,</span><span class=\"st0\">\"does not exist\"</span><span class=\"sy0\">,</span><span class=\"kw1\">read</span><span class=\"br0\">(</span><span class=\"st0\">\"c:<span class=\"es0\">\\\\</span>input.txt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"st0\">\"exists\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">trap</span><span class=\"br0\">(</span><span class=\"sy0\">,</span><span class=\"st0\">\"does not exist\"</span><span class=\"sy0\">,</span><span class=\"kw1\">read</span><span class=\"br0\">(</span><span class=\"st0\">\"c:<span class=\"es0\">\\\\</span>dirname<span class=\"es0\">\\\\</span>nul\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><span class=\"st0\">\"exists\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Pascal", "loc": 18, "block": "<pre class=\"text highlighted_source\">constant fd = {\"file\",\"directory\"}<br/>\u00a0<br/>procedure check(string name)<br/>object d = dir(name)<br/>    if sequence(d) then<br/>        d = (find('d',d[1][D_ATTRIBUTES])!=0)<br/>        printf(1,\"%s\u00a0%s exists.\\n\",{fd[1+d],name})<br/>    else<br/>        printf(1,\"%s does not exist.\\n\",{name})<br/>    end if<br/>end procedure<br/>\u00a0<br/>check(\"input.txt\")<br/>check(\"docs\")<br/>check(\"/input.txt\")<br/>check(\"/docs\")<br/>check(\"/pagefile.sys\")<br/>check(\"/Program Files (x86)\")</pre>"}, {"lang": "Phix", "loc": 18, "block": "<pre class=\"text highlighted_source\">constant fd = {\"file\",\"directory\"}<br/>\u00a0<br/>procedure check(string name)<br/>object d = dir(name)<br/>    if sequence(d) then<br/>        d = (find('d',d[1][D_ATTRIBUTES])!=0)<br/>        printf(1,\"%s\u00a0%s exists.\\n\",{fd[1+d],name})<br/>    else<br/>        printf(1,\"%s does not exist.\\n\",{name})<br/>    end if<br/>end procedure<br/>\u00a0<br/>check(\"input.txt\")<br/>check(\"docs\")<br/>check(\"/input.txt\")<br/>check(\"/docs\")<br/>check(\"/pagefile.sys\")<br/>check(\"/Program Files (x86)\")</pre>"}, {"lang": "PHP", "loc": 4, "block": "<pre class=\"php highlighted_source\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/file_exists\"><span class=\"kw3\">file_exists</span></a><span class=\"br0\">(</span><span class=\"st_h\">'input.txt'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">echo</span> <span class=\"st_h\">'input.txt is here right by my side'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/file_exists\"><span class=\"kw3\">file_exists</span></a><span class=\"br0\">(</span><span class=\"st_h\">'docs'</span>     <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">echo</span> <span class=\"st_h\">'docs is here with me'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/file_exists\"><span class=\"kw3\">file_exists</span></a><span class=\"br0\">(</span><span class=\"st_h\">'/input.txt'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">echo</span> <span class=\"st_h\">'input.txt is over there in the root dir'</span><span class=\"sy0\">;</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span><a href=\"http://www.php.net/file_exists\"><span class=\"kw3\">file_exists</span></a><span class=\"br0\">(</span><span class=\"st_h\">'/docs'</span>    <span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">echo</span> <span class=\"st_h\">'docs is over there in the root dir'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl", "loc": 7, "block": "<pre class=\"perl highlighted_source\"><span class=\"kw2\">use</span> File<span class=\"sy0\">::</span><span class=\"me2\">Spec</span><span class=\"sy0\">::</span><span class=\"me2\">Functions</span> <a href=\"http://perldoc.perl.org/functions/qw.html\"><span class=\"kw3\">qw</span></a><span class=\"br0\">(</span>catfile rootdir<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"co1\"># here</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">-</span>e <span class=\"st_h\">'input.txt'</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">-</span>d <span class=\"st_h\">'docs'</span><span class=\"sy0\">;</span><br/><span class=\"co1\"># root dir</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">-</span>e catfile rootdir<span class=\"sy0\">,</span> <span class=\"st_h\">'input.txt'</span><span class=\"sy0\">;</span><br/><a href=\"http://perldoc.perl.org/functions/print.html\"><span class=\"kw3\">print</span></a> <span class=\"sy0\">-</span>d catfile rootdir<span class=\"sy0\">,</span> <span class=\"st_h\">'docs'</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Perl 6", "loc": 12, "block": "<pre class=\"perl6 highlighted_source\">\u00a0<br/><span class=\"kw1\">my</span> <span class=\"re0\">$path</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"/etc/passwd\"</span><span class=\"sy0\">;</span><br/><span class=\"kw3\">say</span> <span class=\"re0\">$path</span><span class=\"sy0\">.</span><span class=\"me1\">IO</span><span class=\"sy0\">.</span><span class=\"me1\">e</span> <span class=\"sy0\">??</span> <span class=\"st0\">\"Exists\"</span> <span class=\"sy0\">!!</span> <span class=\"st0\">\"Does not exist\"</span><span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw1\">given</span> <span class=\"re0\">$path</span><span class=\"sy0\">.</span><span class=\"me1\">IO</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">when</span> <span class=\"sy0\">:</span>d <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"$path is a directory\"</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">when</span> <span class=\"sy0\">:</span>f <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"$path is a regular file\"</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">when</span> <span class=\"sy0\">:</span>e <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"$path is neither a directory nor a file, but it does exist\"</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span><br/>    <span class=\"kw1\">default</span> <span class=\"br0\">{</span> <span class=\"kw3\">say</span> <span class=\"st0\">\"$path does not exist\"</span> <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "PicoLisp", "loc": 21, "block": "<pre class=\"text highlighted_source\">(if (info \"file.txt\")<br/>   (prinl \"Size: \" (car @) \" bytes, last modified \" (stamp (cadr @) (cddr @)))<br/>   (prinl \"File doesn't exist\") )<br/>\u00a0<br/># for directory existing <br/># Nehal-Singhal 2018-05-25<br/>\u00a0<br/>(if (info \"./docs\") <br/>  (print 'exists) <br/>  (print 'doesNotExist)))<br/>\u00a0<br/># To verify if it's really a directory, (CAR of return value will be 'T').<br/># abu 2018-05-25<br/>\u00a0<br/>  (let I (info \"./docs\")<br/>      (prinl<br/>         (nond<br/>            (I \"Does not exist\")<br/>            ((=T (car I)) \"Is not a directory\")<br/>            (NIL \"Directory exists\") ) ) )  <br/>\u00a0</pre>"}, {"lang": "Pike", "loc": 11, "block": "<pre class=\"pike highlighted_source\"><span class=\"kw1\">import</span> Stdio<span class=\"sy0\">;</span><br/>\u00a0<br/>int main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>   <span class=\"kw1\">if</span><span class=\"br0\">(</span>exist<span class=\"br0\">(</span><span class=\"st0\">\"/var\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      write<span class=\"br0\">(</span><span class=\"st0\">\"/var exists!<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/>\u00a0<br/>   <span class=\"kw1\">if</span><span class=\"br0\">(</span>exist<span class=\"br0\">(</span><span class=\"st0\">\"file-exists.pike\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>      write<span class=\"br0\">(</span><span class=\"st0\">\"I exist!<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>   <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "PL/I", "loc": 22, "block": "<pre class=\"pli highlighted_source\"><span class=\"sy0\">*</span>Process source or<span class=\"br0\">(</span>!<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"coMULTI\">/*********************************************************************<br/> * 20.10.2013 Walter Pachl<br/> * 'set dd:f=d:\\_l\\xxx.txt,recsize(300)'<br/> * 'tex'<br/> *********************************************************************/</span><br/> tex<span class=\"sy0\">:</span> <span class=\"kw1\">Proc</span> <span class=\"kw1\">Options</span><span class=\"br0\">(</span><span class=\"kw1\">main</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> fid <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span> <span class=\"kw1\">Var</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"st0\">'D:\\_l\\tst.txt'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> xxx <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span> <span class=\"kw1\">Var</span> <span class=\"kw1\">Init</span><span class=\"br0\">(</span><span class=\"st0\">'D:\\_l\\nix.txt'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> r   <span class=\"kw1\">Char</span><span class=\"br0\">(</span><span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"kw1\">Var</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Dcl</span> f <span class=\"kw1\">Record</span> <span class=\"kw1\">input</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">On</span> <span class=\"kw1\">Undefinedfile</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">Goto</span> <span class=\"kw1\">label</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Open</span> <span class=\"kw1\">File</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">Title</span><span class=\"br0\">(</span><span class=\"st0\">'/'</span>!!fid<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Read</span> <span class=\"kw1\">file</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">Into</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Skip</span> <span class=\"kw1\">List</span><span class=\"br0\">(</span><span class=\"st0\">'First line of file '</span>!!fid!!<span class=\"st0\">': '</span>!!r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Close</span> <span class=\"kw1\">File</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Open</span> <span class=\"kw1\">File</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">Title</span><span class=\"br0\">(</span><span class=\"st0\">'/'</span>!!xxx<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Read</span> <span class=\"kw1\">file</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span> <span class=\"kw1\">Into</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Put</span> <span class=\"kw1\">Skip</span> <span class=\"kw1\">List</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Close</span> <span class=\"kw1\">File</span><span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">Label</span><span class=\"sy0\">:</span> <span class=\"kw1\">Put</span> <span class=\"kw1\">Skip</span> <span class=\"kw1\">List</span><span class=\"br0\">(</span><span class=\"st0\">'File '</span>!!xxx!!<span class=\"st0\">' not found'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/> <span class=\"kw1\">End</span><span class=\"sy0\">;</span></pre>"}, {"lang": "Pop11", "loc": 4, "block": "<pre class=\"text highlighted_source\">sys_file_exists('input.txt') =&gt;<br/>sys_file_exists('/input.txt') =&gt;<br/>sys_file_exists('docs') =&gt;<br/>sys_file_exists('/docs') =&gt;</pre>"}, {"lang": "PowerShell", "loc": 1, "block": "<pre class=\"powershell highlighted_source\"> <span class=\"kw1\">Test-Path</span> input.txt</pre>"}, {"lang": "Prolog", "loc": 9, "block": "<pre class=\"prolog highlighted_source\">\u00a0<br/>\u00a0<br/>exists_file<span class=\"br0\">(</span><span class=\"st_h\">'input.txt'</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>exists_directory<span class=\"br0\">(</span><span class=\"st_h\">'docs'</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>exits_file<span class=\"br0\">(</span><span class=\"st_h\">'/input.txt'</span><span class=\"br0\">)</span><span class=\"sy4\">,</span><br/>exists_directory<span class=\"br0\">(</span><span class=\"st_h\">'/docs'</span><span class=\"br0\">)</span><span class=\"sy4\">.</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "PureBasic", "loc": 19, "block": "<pre class=\"purebasic highlighted_source\">result <span class=\"sy0\">=</span> <span class=\"kw2\">ReadFile</span><span class=\"br0\">(</span>#PB_Any, <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> result<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"this local file exists\"</span><br/>  <span class=\"kw1\">Else</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"result=\"</span> <span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>result<span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"st0\">\" so this local file is missing\"</span><br/><span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>result <span class=\"sy0\">=</span> <span class=\"kw2\">ReadFile</span><span class=\"br0\">(</span>#PB_Any, <span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> result<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"this root file exists\"</span><br/>  <span class=\"kw1\">Else</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"result=\"</span> <span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>result<span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"st0\">\" so this root file is missing\"</span><br/><span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>result <span class=\"sy0\">=</span> <span class=\"kw2\">ExamineDirectory</span><span class=\"br0\">(</span>#PB_Any,<span class=\"st0\">\"docs\"</span>,<span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> result<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"this local directory exists\"</span><br/>  <span class=\"kw1\">Else</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"result=\"</span> <span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>result<span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"st0\">\" so this local directory is missing\"</span><br/><span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>result <span class=\"sy0\">=</span> <span class=\"kw2\">ExamineDirectory</span><span class=\"br0\">(</span>#PB_Any,<span class=\"st0\">\"/docs\"</span>,<span class=\"st0\">\"\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">If</span> result<span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"this root directory exists\"</span><br/>  <span class=\"kw1\">Else</span>\u00a0: <span class=\"kw1\">Debug</span> <span class=\"st0\">\"result=\"</span> <span class=\"sy0\">+</span><span class=\"kw2\">Str</span><span class=\"br0\">(</span>result<span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"st0\">\" so this root directory is missing\"</span><br/><span class=\"kw1\">EndIf</span> </pre>"}, {"lang": "Python", "loc": 6, "block": "<pre class=\"python highlighted_source\"><span class=\"kw1\">import</span> <span class=\"kw3\">os</span><br/>\u00a0<br/><span class=\"kw3\">os</span>.<span class=\"me1\">path</span>.<span class=\"me1\">isfile</span><span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">os</span>.<span class=\"me1\">path</span>.<span class=\"me1\">isfile</span><span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">os</span>.<span class=\"me1\">path</span>.<span class=\"me1\">isdir</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/><span class=\"kw3\">os</span>.<span class=\"me1\">path</span>.<span class=\"me1\">isdir</span><span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "R", "loc": 7, "block": "<pre class=\"text highlighted_source\">file.exists(\"input.txt\")<br/>file.exists(\"/input.txt\")<br/>file.exists(\"docs\")<br/>file.exists(\"/docs\")<br/>\u00a0<br/># or<br/>file.exists(\"input.txt\", \"/input.txt\", \"docs\", \"/docs\")</pre>"}, {"lang": "Racket", "loc": 16, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>;; here<br/>(file-exists? \"input.txt\")<br/>(file-exists? \"docs\")<br/>\u00a0<br/>;; in the root<br/>(file-exists? \"/input.txt\")<br/>(file-exists? \"/docs\")<br/>\u00a0<br/>;; or in the root with relative paths<br/>(parameterize ([current-directory \"/\"])<br/>  (and (file-exists? \"input.txt\")<br/>       (file-exists? \"docs\")))<br/>\u00a0</pre>"}, {"lang": "Raven", "loc": 4, "block": "<pre class=\"text highlighted_source\">'input.txt'  exists if 'input.txt exists'  print<br/>'/input.txt' exists if '/input.txt exists' print<br/>'docs'  isdir if 'docs exists and is a directory'  print<br/>'/docs' isdir if '/docs exists and is a directory' print</pre>"}, {"lang": "REBOL", "loc": 5, "block": "<pre class=\"rebol highlighted_source\"><span class=\"kw3\">exists?</span> <span class=\"sy0\">%</span><span class=\"kw3\">input</span>.txt<br/><span class=\"kw3\">exists?</span> <span class=\"sy0\">%</span>docs<span class=\"sy0\">/</span><br/>\u00a0<br/><span class=\"kw3\">exists?</span> <span class=\"sy0\">%/</span><span class=\"kw3\">input</span>.txt<br/><span class=\"kw3\">exists?</span> <span class=\"sy0\">%/</span>docs<span class=\"sy0\">/</span></pre>"}, {"lang": "Red", "loc": 9, "block": "<pre class=\"text highlighted_source\">exists?\u00a0%input.txt<br/>exists?\u00a0%docs/<br/>exists?\u00a0%/c/input.txt<br/>exists?\u00a0%/c/docs/<br/>exists?\u00a0%//input.txt<br/>exists?\u00a0%//docs/<br/>\u00a0<br/>&gt;&gt; exists?\u00a0%`Abdu'l-Bah\u00e1.txt<br/>== true</pre>"}, {"lang": "REXX", "loc": 15, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX pgm creates a new empty file and directory; in curr dir and root.*/</span><br/>fn=<span class=\"st0\">'input.txt'</span><br/>dn=<span class=\"st0\">'docs'</span><br/>@<span class=\"sy0\">.</span>1=<span class=\"st0\">'current directory'</span>;   @<span class=\"sy0\">.</span>2=<span class=\"st0\">'root directory'</span>    <span class=\"coMULTI\">/*msgs for each pass.*/</span><br/><span class=\"kw1\">parse</span> <span class=\"kw2\">upper</span> <span class=\"kw2\">version</span> v;  regina=<span class=\"kw6\">pos</span><span class=\"br0\">(</span><span class=\"st0\">'REGINA'</span>,v<span class=\"br0\">)</span><span class=\"sy0\">\\</span>==<span class=\"nu0\">0</span> <span class=\"coMULTI\">/*Regina being used? */</span><br/>\u00a0<br/>  <span class=\"kw1\">do</span> j=<span class=\"nu0\">1</span> <span class=\"kw2\">for</span> <span class=\"nu0\">2</span>;    <span class=\"kw1\">say</span>                 <span class=\"coMULTI\">/*perform these statements twice.*/</span><br/>  <span class=\"kw1\">if</span> <span class=\"kw6\">stream</span><span class=\"br0\">(</span>fn,<span class=\"st0\">'C'</span>,<span class=\"st0\">\"QUERY EXISTS\"</span><span class=\"br0\">)</span>==<span class=\"st0\">''</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">'file '</span> fn <span class=\"st0\">\" doesn't exist in the\"</span> @<span class=\"sy0\">.</span>j<br/>                                        <span class=\"kw3\">else</span> <span class=\"kw1\">say</span> <span class=\"st0\">'file '</span> fn    <span class=\"st0\">\" does exist in the\"</span> @<span class=\"sy0\">.</span>j<br/>  <span class=\"kw1\">if</span> dosisdir<span class=\"br0\">(</span>dn<span class=\"br0\">)</span>  <span class=\"kw3\">then</span> <span class=\"kw1\">say</span> <span class=\"st0\">'directory '</span> dn    <span class=\"st0\">\" does exist in the\"</span> @<span class=\"sy0\">.</span>j<br/>                   <span class=\"kw3\">else</span> <span class=\"kw1\">say</span> <span class=\"st0\">'directory '</span> dn <span class=\"st0\">\" doesn't exist in the\"</span> @<span class=\"sy0\">.</span>j<br/>  <span class=\"kw1\">if</span> regina  <span class=\"kw3\">then</span> <span class=\"kw1\">call</span>    chdir <span class=\"st0\">'\\'</span>    <span class=\"coMULTI\">/*use Regina's version of  CHDIR.*/</span><br/>             <span class=\"kw3\">else</span> <span class=\"kw1\">call</span> doschdir <span class=\"st0\">'\\'</span>    <span class=\"coMULTI\">/*PC/REXX &amp; Personal REXX version*/</span><br/>  <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*j*/</span>                          <span class=\"coMULTI\">/*now, go and perform them again.*/</span><br/>                                       <span class=\"coMULTI\">/*stick a fork in it, we're done.*/</span></pre>"}, {"lang": "Ring", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>aFile = \"C:\\Ring\\ReadMe.txt\"<br/>see aFile<br/>if Fexists(aFile) see \" exists\" + nl<br/>else see \" doesn't exist\" + nl ok<br/>\u00a0</pre>"}, {"lang": "RLaB", "loc": 6, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>&gt;&gt; isdir(\"docs\")<br/>  0<br/>&gt;&gt; isfile(\"input.txt\")<br/>  0<br/>\u00a0</pre>"}, {"lang": "Ruby", "loc": 4, "block": "<pre class=\"ruby highlighted_source\"><span class=\"kw4\">File</span>.<span class=\"me1\">file</span>?<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw4\">File</span>.<span class=\"me1\">file</span>?<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><br/><span class=\"kw4\">File</span>.<span class=\"me1\">directory</span>?<span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span><br/><span class=\"kw4\">File</span>.<span class=\"me1\">directory</span>?<span class=\"br0\">(</span><span class=\"st0\">\"/docs\"</span><span class=\"br0\">)</span></pre>"}, {"lang": "Run BASIC", "loc": 6, "block": "<pre class=\"text highlighted_source\">files #f,\"input.txt\"<br/>if #f hasanswer() = 1 then print \"File does not exist\"<br/>files #f,\"docs\"<br/>if #f hasanswer() = 1 then print \"File does not exist\"<br/>if #f isDir()     = 0 then print \"This is a directory\"<br/>\u00a0</pre>"}, {"lang": "Rust", "loc": 19, "block": "<pre class=\"text highlighted_source\">use std::fs;<br/>\u00a0<br/>fn main() {<br/>    for file in [\"input.txt\", \"docs\", \"/input.txt\", \"/docs\"].iter() {<br/>        match fs::metadata(file) {<br/>            Ok(attr) =&gt; {<br/>                if attr.is_dir() {<br/>                    println!(\"{} is a directory\", file);<br/>                }else {<br/>                    println!(\"{} is a file\", file);<br/>                }<br/>            },<br/>            Err(_) =&gt; {<br/>                println!(\"{} does not exist\", file);<br/>            }<br/>        };<br/>    }<br/>}<br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 17, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">import</span></a> java.<span class=\"me1\">nio</span>.<span class=\"me1\">file</span>.<span class=\"br0\">{</span> Files, FileSystems <span class=\"br0\">}</span><br/>\u00a0<br/><a href=\"http://scala-lang.org\"><span class=\"kw1\">object</span></a> FileExistsTest <a href=\"http://scala-lang.org\"><span class=\"kw1\">extends</span></a> App <span class=\"br0\">{</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> defaultFS <span class=\"sy0\">=</span> FileSystems.<span class=\"me1\">getDefault</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> separator <span class=\"sy0\">=</span> defaultFS.<span class=\"me1\">getSeparator</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> test<span class=\"br0\">(</span>filename<span class=\"sy0\">:</span> String<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> path <span class=\"sy0\">=</span> defaultFS.<span class=\"me1\">getPath</span><span class=\"br0\">(</span>filename<span class=\"br0\">)</span><br/>\u00a0<br/>    println<span class=\"br0\">(</span>s<span class=\"st0\">\"The following ${if (Files.isDirectory(path)) \"</span>directory<span class=\"st0\">\" else \"</span>file<span class=\"st0\">\"} called $filename\"</span> +<br/>      <span class=\"br0\">(</span><a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>Files.<span class=\"me1\">exists</span><span class=\"br0\">(</span>path<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"st0\">\" exists.\"</span> <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> <span class=\"st0\">\" not exists.\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"br0\">}</span><br/>\u00a0<br/>  <span class=\"co1\">// main</span><br/>  List<span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span>, separator + <span class=\"st0\">\"output.txt\"</span>, <span class=\"st0\">\"docs\"</span>, separator + <span class=\"st0\">\"docs\"</span> + separator<span class=\"br0\">)</span>.<span class=\"me1\">foreach</span><span class=\"br0\">(</span>test<span class=\"br0\">)</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Scheme", "loc": 1, "block": "<pre class=\"scheme highlighted_source\"><span class=\"br0\">(</span>file<span class=\"sy0\">-</span>exists? filename<span class=\"br0\">)</span></pre>"}, {"lang": "Seed7", "loc": 9, "block": "<pre class=\"text highlighted_source\">$ include \"seed7_05.s7i\";<br/>\u00a0<br/>const proc: main is func<br/>  begin<br/>    writeln(fileType(\"input.txt\") = FILE_REGULAR);<br/>    writeln(fileType(\"/input.txt\") = FILE_REGULAR);<br/>    writeln(fileType(\"docs\") = FILE_DIR);<br/>    writeln(fileType(\"/docs\") = FILE_DIR);<br/>  end func;</pre>"}, {"lang": "Sidef", "loc": 7, "block": "<pre class=\"ruby highlighted_source\"><span class=\"co1\"># Here</span><br/>say <span class=\"br0\">(</span><span class=\"kw4\">Dir</span>.<span class=\"me1\">cwd</span>  <span class=\"sy0\">+</span> <span class=\"sy0\">%</span>f<span class=\"st0\">'input.txt'</span> <span class=\"sy0\">-&gt;</span> is_file<span class=\"br0\">)</span>;<br/>say <span class=\"br0\">(</span><span class=\"kw4\">Dir</span>.<span class=\"me1\">cwd</span>  <span class=\"sy0\">+</span> <span class=\"sy0\">%</span>d<span class=\"st0\">'docs'</span>      <span class=\"sy0\">-&gt;</span> is_dir<span class=\"br0\">)</span>;<br/>\u00a0<br/><span class=\"co1\"># Root</span><br/>say <span class=\"br0\">(</span><span class=\"kw4\">Dir</span>.<span class=\"me1\">root</span> <span class=\"sy0\">+</span> <span class=\"sy0\">%</span>f<span class=\"st0\">'input.txt'</span> <span class=\"sy0\">-&gt;</span> is_file<span class=\"br0\">)</span>;<br/>say <span class=\"br0\">(</span><span class=\"kw4\">Dir</span>.<span class=\"me1\">root</span> <span class=\"sy0\">+</span> <span class=\"sy0\">%</span>d<span class=\"st0\">'docs'</span>      <span class=\"sy0\">-&gt;</span> is_dir<span class=\"br0\">)</span>;</pre>"}, {"lang": "Slate", "loc": 5, "block": "<pre class=\"text highlighted_source\">(File newNamed: 'input.txt') exists<br/>(File newNamed: '/input.txt') exists<br/>(Directory root / 'input.txt') exists<br/>(Directory newNamed: 'docs') exists<br/>(Directory newNamed: '/docs') exists</pre>"}, {"lang": "Smalltalk", "loc": 2, "block": "<pre class=\"smalltalk highlighted_source\"><span class=\"re0\">FileDirectory</span> new fileExists: <span class=\"st0\">'c:\\serial'</span>.<br/><span class=\"br0\">(</span><span class=\"re0\">FileDirectory</span> on: <span class=\"st0\">'c:\\'</span><span class=\"br0\">)</span> directoryExists: <span class=\"st0\">'docs'</span>.</pre>"}, {"lang": "Standard ML", "loc": 4, "block": "<pre class=\"text highlighted_source\">OS.FileSys.access (\"input.txt\", []);<br/>OS.FileSys.access (\"docs\", []);<br/>OS.FileSys.access (\"/input.txt\", []);<br/>OS.FileSys.access (\"/docs\", []);</pre>"}, {"lang": "Stata", "loc": 4, "block": "<pre class=\"text highlighted_source\">mata<br/>fileexists(\"input.txt\")<br/>direxists(\"docs\")<br/>end</pre>"}, {"lang": "Tcl", "loc": 15, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"kw2\">file</span> exists <span class=\"st0\">\"input.txt\"</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"input.txt exists\"</span><br/><span class=\"br0\">}</span> <br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"kw2\">file</span> exists <span class=\"br0\">[</span><span class=\"kw2\">file</span> nativename <span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"/input.txt exists\"</span><br/><span class=\"br0\">}</span> <br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"kw2\">file</span> isdirectory <span class=\"st0\">\"docs\"</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"docs exists and is a directory\"</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span> <span class=\"br0\">[</span><span class=\"kw2\">file</span> isdirectory <span class=\"br0\">[</span><span class=\"kw2\">file</span> nativename <span class=\"st0\">\"/docs\"</span><span class=\"br0\">]</span><span class=\"br0\">]</span> <span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw2\">puts</span> <span class=\"st0\">\"/docs exists and is a directory\"</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Toka", "loc": 5, "block": "<pre class=\"text highlighted_source\">[ \"R\" file.open dup 0 &lt;&gt; [ dup file.close ] ifTrue 0 &lt;&gt; ] is exists?<br/>\" input.txt\" exists? .<br/>\" /input.txt\" exists? .<br/>\" docs\" exists? .<br/>\" /docs\" exists? .</pre>"}, {"lang": "TUSCRIPT", "loc": 14, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>$$ MODE TUSCRIPT<br/>file=\"input.txt\",directory=\"docs\"<br/>IF (file=='file') THEN<br/>PRINT file, \" exists\"<br/>ELSE<br/>PRINT/ERROR file,\" not exists\"<br/>ENDIF<br/>IF (directory=='project') THEN<br/>PRINT directory,\" exists\"<br/>ELSE<br/>PRINT/ERROR \"directory \",directory,\" not exists\"<br/>ENDIF<br/>\u00a0</pre>"}, {"lang": "UNIX Shell", "loc": 4, "block": "<pre class=\"bash highlighted_source\"><span class=\"kw3\">test</span> <span class=\"re5\">-f</span> input.txt<br/><span class=\"kw3\">test</span> <span class=\"re5\">-f</span> <span class=\"sy0\">/</span>input.txt<br/><span class=\"kw3\">test</span> <span class=\"re5\">-d</span> docs<br/><span class=\"kw3\">test</span> <span class=\"re5\">-d</span> <span class=\"sy0\">/</span>docs</pre>"}, {"lang": "Ursa", "loc": 9, "block": "<pre class=\"text highlighted_source\">def exists (string filename)<br/>\tdecl file f<br/>\ttry<br/>\t\tf.open filename<br/>\t\treturn true<br/>\tcatch ioerror<br/>\t\treturn false<br/>\tend try<br/>end exists</pre>"}, {"lang": "Vala", "loc": 8, "block": "<pre class=\"vala highlighted_source\"><span class=\"kw4\">int</span> main <span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> files <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"input.txt\"</span>, <span class=\"st0\">\"docs\"</span>, Path.<span class=\"me1\">DIR_SEPARATOR_S</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"input.txt\"</span>, Path.<span class=\"me1\">DIR_SEPARATOR_S</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">string</span> f <span class=\"kw1\">in</span> files<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>        <span class=\"kw1\">var</span> file <span class=\"sy0\">=</span> File.<span class=\"me1\">new_for_path</span> <span class=\"br0\">(</span>f<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>        print <span class=\"br0\">(</span><span class=\"st0\">\"%s exists:\u00a0%s<span class=\"es0\">\\n</span>\"</span>, f, file.<span class=\"me1\">query_exists</span> <span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">to_string</span> <span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Vedit macro language", "loc": 7, "block": "<pre class=\"vedit highlighted_source\"><span class=\"co1\">// In current directory</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>File_Exist<span class=\"br0\">(</span><span class=\"st0\">\"input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"input.txt exists\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"input.txt does not exist\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>File_Exist<span class=\"br0\">(</span><span class=\"st0\">\"docs/nul\"</span><span class=\"sy0\">,</span> NOERR<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"docs exists\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"docs does not exist\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\">// In the root directory</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>File_Exist<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt exists\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"/input.txt does not exist\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">(</span>File_Exist<span class=\"br0\">(</span><span class=\"st0\">\"/docs/nul\"</span><span class=\"sy0\">,</span> NOERR<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"/docs exists\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span> M<span class=\"br0\">(</span><span class=\"st0\">\"/docs does not exist\\n\"</span><span class=\"br0\">)</span> <span class=\"br0\">}</span></pre>"}, {"lang": "Visual Basic .NET", "loc": 13, "block": "<pre class=\"vbnet highlighted_source\"><span class=\"co1\">'Current Directory</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">If</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>, <span class=\"st0\">\"directory exists\"</span>, <span class=\"st0\">\"directory doesn't exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">If</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>, <span class=\"st0\">\"file exists\"</span>, <span class=\"st0\">\"file doesn't exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">'Root</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">If</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"\\docs\"</span><span class=\"br0\">)</span>, <span class=\"st0\">\"directory exists\"</span>, <span class=\"st0\">\"directory doesn't exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">If</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span><span class=\"st0\">\"\\output.txt\"</span><span class=\"br0\">)</span>, <span class=\"st0\">\"file exists\"</span>, <span class=\"st0\">\"file doesn't exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">'Root, platform independent</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">If</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Path</span><span class=\"sy0\">.</span><span class=\"me1\">DirectorySeparatorChar</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"docs\"</span><span class=\"br0\">)</span>, _ <br/>   <span class=\"st0\">\"directory exists\"</span>, <span class=\"st0\">\"directory doesn't exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">If</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Directory</span><span class=\"sy0\">.</span><span class=\"me1\">Exists</span><span class=\"br0\">(</span>IO<span class=\"sy0\">.</span><span class=\"me1\">Path</span><span class=\"sy0\">.</span><span class=\"me1\">DirectorySeparatorChar</span> <span class=\"sy0\">&amp;</span> <span class=\"st0\">\"output.txt\"</span><span class=\"br0\">)</span>, _ <br/>  <span class=\"st0\">\"file exists\"</span>, <span class=\"st0\">\"file doesn't exists\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "VBA", "loc": 20, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"kw2\">Option</span> <span class=\"kw2\">Explicit</span><br/>\u00a0<br/><span class=\"kw2\">Sub</span> Main_File_Exists()<br/><span class=\"kw4\">Dim</span> myFile <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, myDirectory <span class=\"kw4\">As</span> <span class=\"kw1\">String</span><br/>\u00a0<br/>    myFile = <span class=\"st0\">\"Abdu'l-Bah\u00e1.txt\"</span><br/>    myDirectory = <span class=\"st0\">\"C:\\\"</span><br/>    Debug.<span class=\"kw4\">Print</span> File_Exists(myFile, myDirectory)<br/><span class=\"kw3\">End</span> <span class=\"kw2\">Sub</span><br/>\u00a0<br/><span class=\"kw2\">Function</span> File_Exists(F <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>, D <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/>    <span class=\"kw3\">If</span> F = <span class=\"st0\">\"\"</span> <span class=\"kw3\">Then</span><br/>        File_Exists = <span class=\"kw5\">False</span><br/>    <span class=\"kw3\">Else</span><br/>        D = IIf(Right(D, 1) = <span class=\"st0\">\"\\\"</span>, D, D &amp; <span class=\"st0\">\"\\\"</span>)<br/>        File_Exists = (Dir(D &amp; F) &lt;&gt; <span class=\"st0\">\"\"</span>)<br/>    <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0</pre>"}, {"lang": "VBScript", "loc": 36, "block": "<pre class=\"text highlighted_source\">Set FSO = CreateObject(\"Scripting.FileSystemObject\")<br/>\u00a0<br/>Function FileExists(strFile)<br/>    If FSO.FileExists(strFile) Then<br/>        FileExists = True<br/>    Else<br/>        FileExists = False<br/>    End If<br/>End Function<br/>\u00a0<br/>Function FolderExists(strFolder)<br/>    If FSO.FolderExists(strFolder) Then<br/>        FolderExists = True<br/>    Else<br/>        Folderexists = False<br/>    End If<br/>End Function<br/>\u00a0<br/>'''''Usage (apostrophes indicate comments-this section will not be run)'''''<br/>'If FileExists(\"C:\\test.txt\") Then<br/>'   MsgBox \"It Exists!\"<br/>'Else<br/>'   Msgbox \"awww\"<br/>'End If<br/>''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''<br/>\u00a0<br/>'Shorter version<br/>\u00a0<br/>If CreateObject(\"Scripting.FileSystemObject\").FileExists(\"d:\\test.txt\") Then<br/>    Wscript.Echo \"File Exists\"<br/>Else<br/>    Wscript.Echo \"File Does Not Exist\")<br/>End If<br/>\u00a0<br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Visual Basic", "loc": 18, "block": "<pre class=\"vb highlighted_source\">\u00a0<br/><span class=\"co1\">'declarations:<br/></span><span class=\"kw2\">Public</span> <span class=\"kw4\">Declare</span> <span class=\"kw2\">Function</span> GetFileAttributes Lib <span class=\"st0\">\"kernel32\"</span> _<br/>  Alias <span class=\"st0\">\"GetFileAttributesA\"</span> (<span class=\"kw4\">ByVal</span> lpFileName <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span><br/><span class=\"kw2\">Public</span> Const INVALID_FILE_ATTRIBUTES <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span> = -1<br/><span class=\"kw2\">Public</span> Const ERROR_SHARING_VIOLATION <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span> = 32&amp;<br/>\u00a0<br/><span class=\"co1\">'implementation:<br/></span><span class=\"kw2\">Public</span> <span class=\"kw2\">Function</span> FileExists(<span class=\"kw4\">ByVal</span> Filename <span class=\"kw4\">As</span> <span class=\"kw1\">String</span>) <span class=\"kw4\">As</span> <span class=\"kw1\">Boolean</span><br/><span class=\"kw4\">Dim</span> l <span class=\"kw4\">As</span> <span class=\"kw1\">Long</span><br/>l = GetFileAttributes(Filename)<br/>  <span class=\"kw3\">If</span> l &lt;&gt; INVALID_FILE_ATTRIBUTES <span class=\"kw3\">Then</span><br/>    FileExists = ((l <span class=\"kw3\">And</span> vbDirectory) = 0)<br/>  <span class=\"kw3\">ElseIf</span> Err.LastDllError = ERROR_SHARING_VIOLATION <span class=\"kw3\">Then</span><br/>    FileExists = <span class=\"kw5\">True</span><br/>  <span class=\"kw3\">End</span> <span class=\"kw3\">If</span><br/><span class=\"kw3\">End</span> <span class=\"kw2\">Function</span><br/>\u00a0</pre>"}, {"lang": "Yabasic", "loc": 7, "block": "<pre class=\"text highlighted_source\">open \"foo.bar\" for writing as #1<br/>print #1 \"Hallo\u00a0!\"<br/>close #1<br/>if (not open(1,\"foo.bar\")) print \"Could not open 'foo.bar' for reading\"<br/>close #1<br/>if (not open(1,\"buzz.bar\")) print \"Could not open 'buzz.bar' for reading\"<br/>\u00a0</pre>"}, {"lang": "zkl", "loc": 5, "block": "<pre class=\"text highlighted_source\">File.exists(\"input.txt\")  //--&gt; True (in this case a sym link)<br/>File.exists(\"/input.txt\") //--&gt;False<br/>File.isDir(\"/\")     //--&gt;True<br/>File.isDir(\"docs\")  //--&gt;False<br/>\u00a0</pre>"}]}