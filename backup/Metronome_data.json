{"task": "Metronome", "blocks": [{"lang": "AutoHotkey", "loc": 31, "block": "<pre class=\"ahk highlighted_source\">bpm      <span class=\"sy0\">=</span> <span class=\"nu0\">120</span> <span class=\"co1\">; Beats per minute</span><br/>pattern  <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">/</span><span class=\"nu0\">4</span> <span class=\"co1\">;</span><br/>duration <span class=\"sy0\">=</span> <span class=\"nu0\">100</span> <span class=\"co1\">; Milliseconds</span><br/>beats    <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>   <span class=\"co1\">; internal counter</span><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <span class=\"sy0\">-</span>Caption<br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/StringSplit.htm\"><span class=\"kw3\">StringSplit</span></a><span class=\"sy0\">,</span> p<span class=\"sy0\">,</span> pattern<span class=\"sy0\">,</span> <span class=\"sy0\">/</span><br/>\u00a0<br/>Start <span class=\"sy0\">:=</span> <a href=\"http://www.autohotkey.com/docs/Variables.htm#A_TickCount\"><span class=\"kw2\">A_TickCount</span></a><br/>\u00a0<br/><a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a><br/><span class=\"br0\">{</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">Color</span></a><span class=\"sy0\">,</span> 0xFF0000<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span> w200 h200 Na<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/SoundBeep.htm\"><span class=\"kw3\">SoundBeep</span></a> <span class=\"nu0\">750</span><span class=\"sy0\">,</span> duration<br/>\tbeats<span class=\"sy0\">++</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Sleep.htm\"><span class=\"kw3\">Sleep</span></a> <span class=\"nu0\">1000</span> <span class=\"sy0\">*</span> <span class=\"nu0\">60</span> <span class=\"sy0\">/</span> bpm <span class=\"sy0\">-</span> duration<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/Loop.htm\"><span class=\"kw3\">Loop</span></a>\u00a0% p1 <span class=\"sy0\">-</span><span class=\"nu0\">1</span><br/>\t<span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Color\"><span class=\"kw7\">Color</span></a><span class=\"sy0\">,</span> 0x00FF00<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Gui.htm\"><span class=\"kw3\">Gui</span></a> <a href=\"http://www.autohotkey.com/docs/commands/Gui.htm#Show\"><span class=\"kw7\">Show</span></a><span class=\"sy0\">,</span> w200 h200 Na<br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/SoundBeep.htm\"><span class=\"kw3\">SoundBeep</span></a><span class=\"sy0\">,</span> <span class=\"sy0\">,</span> duration<br/>\t\tbeats<span class=\"sy0\">++</span><br/>\t\t<a href=\"http://www.autohotkey.com/docs/commands/Sleep.htm\"><span class=\"kw3\">Sleep</span></a> <span class=\"nu0\">1000</span> <span class=\"sy0\">*</span> <span class=\"nu0\">60</span> <span class=\"sy0\">/</span> bpm <span class=\"sy0\">-</span> duration<br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw6\">Esc</span>::<br/>\t<a href=\"http://www.autohotkey.com/docs/commands/MsgBox.htm\"><span class=\"kw3\">MsgBox</span></a>\u00a0% <span class=\"st0\">\"Metronome beeped \"</span> beats <span class=\"st0\">\" beats, over \"</span> <span class=\"br0\">(</span><span class=\"re3\">A_TickCount</span><span class=\"sy0\">-</span>Start<span class=\"br0\">)</span><span class=\"sy0\">/</span><span class=\"nu0\">1000</span> <span class=\"st0\">\" seconds. \"</span><br/>\t<a href=\"http://www.autohotkey.com/docs/commands/ExitApp.htm\"><span class=\"kw3\">ExitApp</span></a></pre>"}, {"lang": "AppleScript", "loc": 21, "block": "<pre class=\"text highlighted_source\">      BeatPattern$ = \"HLLL\"<br/>      Tempo% = 100<br/>\u00a0<br/>      *font Arial,36<br/>      REPEAT<br/>        FOR beat% = 1 TO LEN(BeatPattern$)<br/>          IF MID$(BeatPattern$, beat%, 1) = \"H\" THEN<br/>            SOUND 1,-15,148,1<br/>          ELSE<br/>            SOUND 1,-15,100,1<br/>          ENDIF<br/>          VDU 30<br/>          COLOUR 2<br/>          PRINT LEFT$(BeatPattern$,beat%-1);<br/>          COLOUR 9<br/>          PRINT MID$(BeatPattern$,beat%,1);<br/>          COLOUR 2<br/>          PRINT MID$(BeatPattern$,beat%+1);<br/>          WAIT 6000/Tempo%<br/>        NEXT<br/>      UNTIL FALSE</pre>"}, {"lang": "BBC BASIC", "loc": 21, "block": "<pre class=\"text highlighted_source\">      BeatPattern$ = \"HLLL\"<br/>      Tempo% = 100<br/>\u00a0<br/>      *font Arial,36<br/>      REPEAT<br/>        FOR beat% = 1 TO LEN(BeatPattern$)<br/>          IF MID$(BeatPattern$, beat%, 1) = \"H\" THEN<br/>            SOUND 1,-15,148,1<br/>          ELSE<br/>            SOUND 1,-15,100,1<br/>          ENDIF<br/>          VDU 30<br/>          COLOUR 2<br/>          PRINT LEFT$(BeatPattern$,beat%-1);<br/>          COLOUR 9<br/>          PRINT MID$(BeatPattern$,beat%,1);<br/>          COLOUR 2<br/>          PRINT MID$(BeatPattern$,beat%+1);<br/>          WAIT 6000/Tempo%<br/>        NEXT<br/>      UNTIL FALSE</pre>"}, {"lang": "C", "loc": 86, "block": "<pre class=\"c highlighted_source\"><span class=\"co2\">#include &lt;stdio.h&gt;</span><br/><span class=\"co2\">#include &lt;stdlib.h&gt;</span><br/><span class=\"co2\">#include &lt;unistd.h&gt;</span><br/><span class=\"co2\">#include &lt;stdint.h&gt;</span><br/><span class=\"co2\">#include &lt;signal.h&gt;</span><br/><span class=\"co2\">#include &lt;time.h&gt;</span><br/><span class=\"co2\">#include &lt;sys/time.h&gt;</span><br/>\u00a0<br/><span class=\"kw4\">struct</span> timeval start<span class=\"sy0\">,</span> last<span class=\"sy0\">;</span><br/>\u00a0<br/><span class=\"kw2\">inline</span> <span class=\"kw4\">int64_t</span> tv_to_u<span class=\"br0\">(</span><span class=\"kw4\">struct</span> timeval s<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw1\">return</span> s.<span class=\"me1\">tv_sec</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000000</span> <span class=\"sy0\">+</span> s.<span class=\"me1\">tv_usec</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">inline</span> <span class=\"kw4\">struct</span> timeval u_to_tv<span class=\"br0\">(</span><span class=\"kw4\">int64_t</span> x<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">struct</span> timeval s<span class=\"sy0\">;</span><br/>\ts.<span class=\"me1\">tv_sec</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">/</span> <span class=\"nu0\">1000000</span><span class=\"sy0\">;</span><br/>\ts.<span class=\"me1\">tv_usec</span> <span class=\"sy0\">=</span> x <span class=\"sy0\">%</span> <span class=\"nu0\">1000000</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">return</span> s<span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> draw<span class=\"br0\">(</span><span class=\"kw4\">int</span> dir<span class=\"sy0\">,</span> <span class=\"kw4\">int64_t</span> period<span class=\"sy0\">,</span> <span class=\"kw4\">int64_t</span> cur<span class=\"sy0\">,</span> <span class=\"kw4\">int64_t</span> next<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> len <span class=\"sy0\">=</span> <span class=\"nu0\">40</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span>next <span class=\"sy0\">-</span> cur<span class=\"br0\">)</span> <span class=\"sy0\">/</span> period<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> s<span class=\"sy0\">,</span> i<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>len <span class=\"sy0\">&gt;</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span> len <span class=\"sy0\">=</span> <span class=\"nu0\">40</span> <span class=\"sy0\">-</span> len<span class=\"sy0\">;</span><br/>\ts <span class=\"sy0\">=</span> <span class=\"nu0\">20</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>dir <span class=\"sy0\">?</span> len <span class=\"sy0\">:</span> <span class=\"sy0\">-</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es5\">\\033</span>[H\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">40</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span>i <span class=\"sy0\">==</span> <span class=\"nu0\">20</span> <span class=\"sy0\">?</span> <span class=\"st0\">'|'</span><span class=\"sy0\">:</span> i <span class=\"sy0\">==</span> s <span class=\"sy0\">?</span> <span class=\"st0\">'#'</span> <span class=\"sy0\">:</span> <span class=\"st0\">'-'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">void</span> beat<span class=\"br0\">(</span><span class=\"kw4\">int</span> delay<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">struct</span> timeval tv <span class=\"sy0\">=</span> start<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> dir <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int64_t</span> d <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> corr <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> slp<span class=\"sy0\">,</span> cur<span class=\"sy0\">,</span> next <span class=\"sy0\">=</span> tv_to_u<span class=\"br0\">(</span>start<span class=\"br0\">)</span> <span class=\"sy0\">+</span> delay<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int64_t</span> draw_interval <span class=\"sy0\">=</span> <span class=\"nu0\">20000</span><span class=\"sy0\">;</span><br/>\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es5\">\\033</span>[H<span class=\"es5\">\\033</span>[J\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tgettimeofday<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>tv<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tslp <span class=\"sy0\">=</span> next <span class=\"sy0\">-</span> tv_to_u<span class=\"br0\">(</span>tv<span class=\"br0\">)</span> <span class=\"sy0\">-</span> corr<span class=\"sy0\">;</span><br/>\t\tusleep<span class=\"br0\">(</span>slp<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tgettimeofday<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>tv<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/putchar.html\"><span class=\"kw3\">putchar</span></a><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"coMULTI\">/* bell */</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fflush.html\"><span class=\"kw3\">fflush</span></a><span class=\"br0\">(</span>stdout<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/printf.html\"><span class=\"kw3\">printf</span></a><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es5\">\\033</span>[5;1Hdrift:\u00a0%d compensate:\u00a0%d (usec)   \"</span><span class=\"sy0\">,</span><br/>\t\t\t<span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>d<span class=\"sy0\">,</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>corr<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tdir <span class=\"sy0\">=</span> <span class=\"sy0\">!</span>dir<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\tcur <span class=\"sy0\">=</span> tv_to_u<span class=\"br0\">(</span>tv<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\td <span class=\"sy0\">=</span> cur <span class=\"sy0\">-</span> next<span class=\"sy0\">;</span><br/>\t\tcorr <span class=\"sy0\">=</span> <span class=\"br0\">(</span>corr <span class=\"sy0\">+</span> d<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span><br/>\t\tnext <span class=\"sy0\">+=</span> delay<span class=\"sy0\">;</span><br/>\u00a0<br/>\t\t<span class=\"kw1\">while</span> <span class=\"br0\">(</span>cur <span class=\"sy0\">+</span> d <span class=\"sy0\">+</span> draw_interval <span class=\"sy0\">&lt;</span> next<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\tusleep<span class=\"br0\">(</span>draw_interval<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tgettimeofday<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>tv<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tcur <span class=\"sy0\">=</span> tv_to_u<span class=\"br0\">(</span>tv<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\tdraw<span class=\"br0\">(</span>dir<span class=\"sy0\">,</span> delay<span class=\"sy0\">,</span> cur<span class=\"sy0\">,</span> next<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fflush.html\"><span class=\"kw3\">fflush</span></a><span class=\"br0\">(</span>stdout<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"kw4\">int</span> c<span class=\"sy0\">,</span> <span class=\"kw4\">char</span><span class=\"sy0\">**</span>v<span class=\"br0\">)</span><br/><span class=\"br0\">{</span><br/>\t<span class=\"kw4\">int</span> bpm<span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>c <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span>bpm <span class=\"sy0\">=</span> <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html\"><span class=\"kw3\">atoi</span></a><span class=\"br0\">(</span>v<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> bpm <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>bpm <span class=\"sy0\">&gt;</span> <span class=\"nu0\">600</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html\"><span class=\"kw3\">fprintf</span></a><span class=\"br0\">(</span>stderr<span class=\"sy0\">,</span> <span class=\"st0\">\"frequency\u00a0%d too high<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> bpm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t<a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/exit.html\"><span class=\"kw3\">exit</span></a><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/>\u00a0<br/>\tgettimeofday<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>start<span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\tlast <span class=\"sy0\">=</span> start<span class=\"sy0\">;</span><br/>\tbeat<span class=\"br0\">(</span><span class=\"nu0\">60</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000000</span> <span class=\"sy0\">/</span> bpm<span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\u00a0<br/>\t<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Common Lisp", "loc": 64, "block": "<pre class=\"lisp highlighted_source\"><span class=\"br0\">(</span>ql<span class=\"sy0\">:</span><span class=\"me1\">quickload</span> '<span class=\"br0\">(</span>cl-openal cl-alc<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span>defparameter *short-<span class=\"kw1\">max</span>* <span class=\"br0\">(</span>- <span class=\"br0\">(</span><span class=\"kw1\">expt</span> <span class=\"nu0\">2</span> <span class=\"nu0\">15</span><span class=\"br0\">)</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>defparameter *<span class=\"nu0\">2</span>-pi* <span class=\"br0\">(</span>* <span class=\"nu0\">2</span> pi<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> make-<span class=\"kw1\">sin</span> <span class=\"br0\">(</span>period<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Create a generator for a sine wave of the given PERIOD.\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">sin</span> <span class=\"br0\">(</span>* *<span class=\"nu0\">2</span>-pi* <span class=\"br0\">(</span>/ x period<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> make-tone <span class=\"br0\">(</span><span class=\"kw1\">length</span> frequency sampling-frequency<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Create a vector containing sound information of the given LENGTH,<br/>FREQUENCY, and SAMPLING-FREQUENCY.\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>data <span class=\"br0\">(</span>make-<span class=\"kw1\">array</span> <span class=\"br0\">(</span><span class=\"kw1\">truncate</span> <span class=\"br0\">(</span>* <span class=\"kw1\">length</span> sampling-frequency<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                          <span class=\"sy0\">:</span><span class=\"me1\">element-type</span> '<span class=\"br0\">(</span>signed-byte <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>generator <span class=\"br0\">(</span>make-<span class=\"kw1\">sin</span> <span class=\"br0\">(</span>/ sampling-frequency frequency<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span><span class=\"kw1\">dotimes</span> <span class=\"br0\">(</span>i <span class=\"br0\">(</span><span class=\"kw1\">length</span> data<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span><span class=\"kw1\">setf</span> <span class=\"br0\">(</span><span class=\"kw1\">aref</span> data i<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span><span class=\"kw1\">truncate</span> <span class=\"br0\">(</span>* *short-<span class=\"kw1\">max</span>* <span class=\"br0\">(</span><span class=\"kw1\">funcall</span> generator i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    data<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> internal-time-ms <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Get the process's real time in ms.\"</span><br/>  <span class=\"br0\">(</span>* <span class=\"nu0\">1000</span> <span class=\"br0\">(</span>/ <span class=\"br0\">(</span>get-internal-real-time<span class=\"br0\">)</span> internal-time-units-per-second<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> spin-wait <span class=\"br0\">(</span>next-real-time<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Wait until the process's real time has reached the given time.\"</span><br/>  <span class=\"br0\">(</span>loop while <span class=\"br0\">(</span><span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span>internal-time-ms<span class=\"br0\">)</span> next-real-time<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> upload <span class=\"br0\">(</span>buffer data sampling-frequency<span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Upload the given vector DATA to a BUFFER at the given SAMPLING-FREQUENCY.\"</span><br/>  <span class=\"br0\">(</span>cffi<span class=\"sy0\">:</span><span class=\"me1\">with-pointer-to-vector-data</span> <span class=\"br0\">(</span>data-ptr data<span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">buffer-data</span> buffer <span class=\"sy0\">:</span><span class=\"me1\">mono16</span> data-ptr <span class=\"br0\">(</span>* <span class=\"nu0\">2</span> <span class=\"br0\">(</span><span class=\"kw1\">length</span> data<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                    sampling-frequency<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">defun</span> metronome <span class=\"br0\">(</span>beats/minute pattern <span class=\"sy0\">&amp;</span>optional <span class=\"br0\">(</span>sampling-frequency <span class=\"nu0\">44100</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"st0\">\"Play a metronome until interrupted.\"</span><br/>  <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>ms/beat <span class=\"br0\">(</span>/ <span class=\"nu0\">60000</span> beats/minute<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>    <span class=\"br0\">(</span>alc<span class=\"sy0\">:</span><span class=\"me1\">with-device</span> <span class=\"br0\">(</span>device<span class=\"br0\">)</span><br/>      <span class=\"br0\">(</span>alc<span class=\"sy0\">:</span><span class=\"me1\">with-context</span> <span class=\"br0\">(</span>context device<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>alc<span class=\"sy0\">:</span><span class=\"me1\">make-context-current</span> context<span class=\"br0\">)</span><br/>        <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">with-buffer</span> <span class=\"br0\">(</span>low-buffer<span class=\"br0\">)</span><br/>          <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">with-buffer</span> <span class=\"br0\">(</span>high-buffer<span class=\"br0\">)</span><br/>            <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">with-source</span> <span class=\"br0\">(</span>source<span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">source</span> source <span class=\"sy0\">:</span><span class=\"me1\">gain</span> <span class=\"nu0\">0.5</span><span class=\"br0\">)</span><br/>              <span class=\"br0\">(</span>flet <span class=\"br0\">(</span><span class=\"br0\">(</span>play-it <span class=\"br0\">(</span>buffer<span class=\"br0\">)</span><br/>                       <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">source</span> source <span class=\"sy0\">:</span><span class=\"me1\">buffer</span> buffer<span class=\"br0\">)</span><br/>                       <span class=\"br0\">(</span>al<span class=\"sy0\">:</span><span class=\"me1\">source-play</span> source<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span>upload-it <span class=\"br0\">(</span>buffer time frequency<span class=\"br0\">)</span><br/>                       <span class=\"br0\">(</span>upload buffer<br/>                               <span class=\"br0\">(</span>make-tone time frequency sampling-frequency<span class=\"br0\">)</span><br/>                               sampling-frequency<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span>upload-it low-buffer <span class=\"nu0\">0.1</span> <span class=\"nu0\">440</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span>upload-it high-buffer <span class=\"nu0\">0.15</span> <span class=\"nu0\">880</span><span class=\"br0\">)</span><br/>                <span class=\"br0\">(</span><span class=\"kw1\">let</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>next-scheduled-tone <span class=\"br0\">(</span>internal-time-ms<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                  <span class=\"br0\">(</span>loop<br/>                     <span class=\"br0\">(</span>loop for <span class=\"kw1\">symbol</span> in pattern <span class=\"kw1\">do</span><br/>                          <span class=\"br0\">(</span>spin-wait next-scheduled-tone<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span>incf next-scheduled-tone ms/beat<span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"kw1\">case</span> <span class=\"kw1\">symbol</span><br/>                            <span class=\"br0\">(</span><span class=\"kw1\">l</span> <span class=\"br0\">(</span>play-it low-buffer<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                            <span class=\"br0\">(</span>h <span class=\"br0\">(</span>play-it high-buffer<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                          <span class=\"br0\">(</span><span class=\"kw1\">princ</span> <span class=\"kw1\">symbol</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>                     <span class=\"br0\">(</span>terpri<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre>"}, {"lang": "EchoLisp", "loc": 8, "block": "<pre class=\"scheme highlighted_source\">\u00a0<br/><span class=\"co1\">;; available preloaded sounds are\u00a0: ok, ko, tick, tack, woosh, beep, digit .</span><br/><span class=\"br0\">(</span>lib 'timer<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"br0\">(</span><span class=\"kw1\">define</span> <span class=\"br0\">(</span>metronome<span class=\"br0\">)</span> <span class=\"br0\">(</span>blink<span class=\"br0\">)</span> <span class=\"br0\">(</span>play<span class=\"sy0\">-</span>sound 'tack<span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"br0\">(</span>at<span class=\"sy0\">-</span>every <span class=\"nu0\">1000</span> 'metronome<span class=\"br0\">)</span> <span class=\"co1\">;; every 1000 msec</span><br/><span class=\"co1\">;; CTRL-C to stop</span><br/>\u00a0</pre>"}, {"lang": "Factor", "loc": 68, "block": "<pre class=\"text highlighted_source\">USING: accessors calendar circular colors.constants colors.hsv<br/>command-line continuations io kernel math math.parser namespaces<br/>openal.example sequences system timers ui ui.gadgets<br/>ui.pens.solid\u00a0;<br/>IN: rosetta-code.metronome<br/>\u00a0<br/>: bpm&gt;duration ( bpm -- duration ) 60 swap / seconds\u00a0;<br/>\u00a0<br/>: blink-gadget ( gadget freq -- )<br/>    1.0 1.0 1.0 &lt;hsva&gt;  &lt;solid&gt; &gt;&gt;interior relayout-1\u00a0;<br/>\u00a0<br/>: blank-gadget ( gadget -- )<br/>    COLOR: white &lt;solid&gt; &gt;&gt;interior relayout-1\u00a0;<br/>\u00a0<br/>: play-note ( gadget freq -- )<br/>    [ blink-gadget ] [ 0.3 play-sine blank-gadget ] 2bi\u00a0;<br/>\u00a0<br/>: metronome-iteration ( gadget circular -- )<br/>    [ first play-note ] [ rotate-circular ] bi\u00a0;<br/>\u00a0<br/>TUPLE: metronome-gadget &lt; gadget bpm notes timer\u00a0;<br/>\u00a0<br/>: &lt;metronome-gadget&gt; ( bpm notes -- gadget )<br/>    \\ metronome-gadget new swap &gt;&gt;notes swap &gt;&gt;bpm\u00a0;<br/>\u00a0<br/>: metronome-quot ( gadget -- quot )<br/>    dup notes&gt;&gt; &lt;circular&gt; [ metronome-iteration ] 2curry\u00a0;<br/>\u00a0<br/>: metronome-timer ( gadget -- timer )<br/>    [ metronome-quot ] [ bpm&gt;&gt; bpm&gt;duration ] bi every\u00a0;<br/>\u00a0<br/>M: metronome-gadget graft* ( gadget -- )<br/>    [ metronome-timer ] keep timer&lt;&lt;\u00a0;<br/>\u00a0<br/>M: metronome-gadget ungraft*<br/>    timer&gt;&gt; stop-timer\u00a0;<br/>\u00a0<br/>M: metronome-gadget pref-dim* drop { 200 200 }\u00a0;<br/>\u00a0<br/>: metronome-defaults ( -- bpm notes ) 60 { 440 220 330 }\u00a0;<br/>\u00a0<br/>: metronome-ui ( bpm notes -- ) &lt;metronome-gadget&gt; \"Metronome\" open-window\u00a0;<br/>\u00a0<br/>: metronome-example ( -- ) metronome-defaults metronome-ui\u00a0;<br/>\u00a0<br/>: validate-args ( int-args -- )<br/>    [ length 2 &lt; ] [ [ 0 &lt;= ] any? ] bi or [ \"args error\" throw ] when\u00a0;<br/>\u00a0<br/>: (metronome-cmdline) ( args -- bpm notes )<br/>    [ string&gt;number ] map dup validate-args<br/>    unclip swap\u00a0;<br/>\u00a0<br/>: metronome-cmdline ( -- bpm notes )<br/>    command-line get [ metronome-defaults ] [ (metronome-cmdline) ] if-empty\u00a0;<br/>\u00a0<br/>: print-defaults ( -- )<br/>  metronome-defaults swap prefix<br/>  [ \" \" write ] [ number&gt;string write ] interleave nl\u00a0;<br/>\u00a0<br/>: metronome-usage ( -- )<br/>    \"Usage: metronome [BPM FREQUENCIES...]\" print<br/>    \"Arguments must be non-zero\" print<br/>    \"Example: metronome \" write print-defaults flush\u00a0;<br/>\u00a0<br/>: metronome-main ( -- )<br/>     [ [ metronome-cmdline metronome-ui ] [ drop metronome-usage 1 exit ] recover ] with-ui\u00a0;<br/>\u00a0<br/>MAIN: metronome-main</pre>"}, {"lang": "F#", "loc": 35, "block": "<pre class=\"fsharp highlighted_source\"><span class=\"kw1\">open</span> System<br/><span class=\"kw1\">open</span> System.<span class=\"me1\">Threading</span><br/><span class=\"co1\">// You can use .wav files for your clicks.</span><br/><span class=\"co1\">// If used, make sure they are in the same file </span><br/><span class=\"co1\">// as this program's executable file.</span><br/><span class=\"kw1\">let</span> high_pitch <span class=\"sy0\">=</span> <br/>    <span class=\"kw1\">new</span> System.<span class=\"me1\">Media</span>.<span class=\"me1\">SoundPlayer</span><span class=\"br0\">(</span><span class=\"st0\">\"Ping Hi.wav\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">let</span> low_pitch <span class=\"sy0\">=</span> <br/>    <span class=\"kw1\">new</span> System.<span class=\"me1\">Media</span>.<span class=\"me1\">SoundPlayer</span><span class=\"br0\">(</span><span class=\"st0\">\"Ping Low.wav\"</span><span class=\"br0\">)</span><br/><span class=\"kw1\">let</span> factor x y <span class=\"sy0\">=</span> x <span class=\"sy0\">/</span> y<br/><span class=\"co1\">// Notice that exact bpm would not work by using</span><br/><span class=\"co1\">// Thread.Sleep() as there are additional function calls</span><br/><span class=\"co1\">// that would consume a miniscule amount of time.</span><br/><span class=\"co1\">// This number may need to be adjusted based on the cpu.</span><br/><span class=\"kw1\">let</span> cpu_error <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">750.0</span>  <br/><span class=\"kw1\">let</span> print <span class=\"sy0\">=</span> <span class=\"kw1\">function</span><br/>| <span class=\"nu0\">1</span> <span class=\"sy0\">-&gt;</span> high_pitch.<span class=\"me1\">Play</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> printf <span class=\"st0\">\"<span class=\"es0\">\\n</span>TICK \"</span><br/>| _ <span class=\"sy0\">-&gt;</span> low_pitch.<span class=\"me1\">Play</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> printf <span class=\"st0\">\"tick \"</span><br/><span class=\"kw1\">let</span> wait <span class=\"br0\">(</span>time:<span class=\"kw4\">int</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <br/>    Thread.<span class=\"me1\">Sleep</span><span class=\"br0\">(</span>time<span class=\"br0\">)</span><br/><span class=\"co1\">// Composition of functions</span><br/><span class=\"kw1\">let</span> tick <span class=\"sy0\">=</span> <span class=\"kw4\">float</span><span class=\"sy0\">&gt;&gt;</span>factor <span class=\"br0\">(</span><span class=\"nu0\">60000.0</span><span class=\"sy0\">+</span>cpu_error<span class=\"br0\">)</span><span class=\"sy0\">&gt;&gt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;&gt;</span>wait<br/><span class=\"kw1\">let</span> <span class=\"kw1\">rec</span> play beats_per_measure current_beat beats_per_minute <span class=\"sy0\">=</span> <br/>    <span class=\"kw1\">match</span> current_beat, beats_per_measure <span class=\"kw1\">with</span><br/>    | a, b <span class=\"sy0\">-&gt;</span> <br/>        current_beat <span class=\"sy0\">|&gt;</span> print<br/>        beats_per_minute <span class=\"sy0\">|&gt;</span> tick<br/>        <span class=\"kw1\">if</span> a <span class=\"sy0\">&lt;&gt;</span> b <span class=\"kw1\">then</span> <br/>            beats_per_minute <span class=\"sy0\">|&gt;</span> play beats_per_measure <span class=\"br0\">(</span>current_beat <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/><span class=\"br0\">[</span><span class=\"sy0\">&lt;</span>EntryPointAttribute<span class=\"sy0\">&gt;</span><span class=\"br0\">]</span><br/><span class=\"kw1\">let</span> main <span class=\"br0\">(</span>args\u00a0: <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <br/>    <span class=\"kw1\">let</span> tempo, beats <span class=\"sy0\">=</span> <span class=\"kw4\">int</span> args.<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, <span class=\"kw4\">int</span> args.<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><br/>    <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">initInfinite</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> i <span class=\"sy0\">-&gt;</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"sy0\">|&gt;</span> <a href=\"http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/namespaces.html\"><span class=\"kw2\">Seq</span></a>.<span class=\"me1\">iter</span> <span class=\"br0\">(</span><span class=\"kw1\">fun</span> _ <span class=\"sy0\">-&gt;</span> tempo <span class=\"sy0\">|&gt;</span> play beats <span class=\"nu0\">1</span> <span class=\"sy0\">|&gt;</span> <span class=\"kw3\">ignore</span><span class=\"br0\">)</span><br/>    <span class=\"nu0\">0</span> </pre>"}, {"lang": "Go", "loc": 25, "block": "<pre class=\"go highlighted_source\"><span class=\"kw1\">package</span> main<br/>\u00a0<br/><span class=\"kw1\">import</span> <span class=\"sy1\">(</span><br/>\t<span class=\"st0\">\"fmt\"</span><br/>\t<span class=\"st0\">\"time\"</span><br/><span class=\"sy1\">)</span><br/>\u00a0<br/><span class=\"kw4\">func</span> main<span class=\"sy1\">()</span> <span class=\"sy1\">{</span><br/>\t<span class=\"kw1\">var</span> bpm <span class=\"sy2\">=</span> <span class=\"nu0\">72</span><span class=\"sy3\">.</span><span class=\"nu0\">0</span> <span class=\"co1\">// Beats Per Minute</span><br/>\t<span class=\"kw1\">var</span> bpb <span class=\"sy2\">=</span> <span class=\"nu0\">4</span>    <span class=\"co1\">// Beats Per Bar</span><br/>\u00a0<br/>\td <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>Duration<span class=\"sy1\">(</span><span class=\"kw4\">float64</span><span class=\"sy1\">(</span>time<span class=\"sy3\">.</span>Minute<span class=\"sy1\">)</span> <span class=\"sy3\">/</span> bpm<span class=\"sy1\">)</span><br/>\tfmt<span class=\"sy3\">.</span>Println<span class=\"sy1\">(</span><span class=\"st0\">\"Delay:\"</span><span class=\"sy1\">,</span> d<span class=\"sy1\">)</span><br/>\tt <span class=\"sy2\">:=</span> time<span class=\"sy3\">.</span>NewTicker<span class=\"sy1\">(</span>d<span class=\"sy1\">)</span><br/>\t<span class=\"nu2\">i</span> <span class=\"sy2\">:=</span> <span class=\"nu0\">1</span><br/>\t<span class=\"kw1\">for</span> _ <span class=\"sy2\">=</span> <span class=\"kw1\">range</span> t<span class=\"sy3\">.</span>C <span class=\"sy1\">{</span><br/>\t\t<span class=\"nu2\">i</span><span class=\"sy2\">--</span><br/>\t\t<span class=\"kw1\">if</span> <span class=\"nu2\">i</span> <span class=\"sy3\">==</span> <span class=\"nu0\">0</span> <span class=\"sy1\">{</span><br/>\t\t\t<span class=\"nu2\">i</span> <span class=\"sy2\">=</span> bpb<br/>\t\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>TICK \"</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span> <span class=\"kw1\">else</span> <span class=\"sy1\">{</span><br/>\t\t\tfmt<span class=\"sy3\">.</span>Printf<span class=\"sy1\">(</span><span class=\"st0\">\"tick \"</span><span class=\"sy1\">)</span><br/>\t\t<span class=\"sy1\">}</span><br/>\t<span class=\"sy1\">}</span><br/><span class=\"sy1\">}</span></pre>"}, {"lang": "Haskell", "loc": 52, "block": "<pre class=\"haskell highlighted_source\"><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Concurrent<br/><span class=\"kw1\">import</span> Control<span class=\"sy0\">.</span>Concurrent<span class=\"sy0\">.</span>MVar<br/><span class=\"kw1\">import</span> System<span class=\"sy0\">.</span>Process <span class=\"br0\">(</span>runCommand<span class=\"br0\">)</span><br/>\u00a0<br/><span class=\"co1\">-- This program works only on the GHC compiler because of the use of</span><br/><span class=\"co1\">-- threadDelay</span><br/>\u00a0<br/><span class=\"kw1\">data</span> Beep <span class=\"sy0\">=</span> Stop <span class=\"sy0\">|</span> Hi <span class=\"sy0\">|</span> Low<br/>\u00a0<br/><span class=\"kw1\">type</span> Pattern <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Beep<span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"kw1\">type</span> BeatsPerMinute <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:Int\"><span class=\"kw4\">Int</span></a><br/>\u00a0<br/>minute <span class=\"sy0\">=</span> <span class=\"nu0\">60000000</span> <span class=\"co1\">-- 1 minute = 60,000,000 microseconds</span><br/>\u00a0<br/><span class=\"co1\">-- give one of the following example patterns to the metronome function</span><br/>\u00a0<br/>pattern4<span class=\"sy0\">_</span>4 <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Hi<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"br0\">]</span><br/>pattern2<span class=\"sy0\">_</span>4 <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Hi<span class=\"sy0\">,</span> Low<span class=\"br0\">]</span><br/>pattern3<span class=\"sy0\">_</span>4 <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Hi<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"br0\">]</span><br/>pattern6<span class=\"sy0\">_</span>8 <span class=\"sy0\">=</span> <span class=\"br0\">[</span>Hi<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"sy0\">,</span> Low<span class=\"br0\">]</span><br/>\u00a0<br/><span class=\"co1\">-- use this version if you can't play audio, use Windows or don't</span><br/><span class=\"co1\">-- have audio files to play</span><br/><span class=\"co1\">-- beep\u00a0:: Beep -&gt; IO ()</span><br/><span class=\"co1\">-- beep Stop = return ()</span><br/><span class=\"co1\">-- beep Hi = putChar 'H'</span><br/><span class=\"co1\">-- beep Low = putChar 'L'</span><br/>\u00a0<br/><span class=\"co1\">-- use this version if you can and want to play audio on Linux using</span><br/><span class=\"co1\">-- Alsa. Change the name of the files to those of your choice</span><br/>\u00a0<br/>beep Stop <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>beep Hi <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putChar\"><span class=\"kw3\">putChar</span></a> <span class=\"st0\">'H'</span> <span class=\"sy0\">&gt;&gt;</span> runCommand <span class=\"st0\">\"aplay hi.wav &amp;&gt; /dev/null\"</span> <span class=\"sy0\">&gt;&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>beep Low <span class=\"sy0\">=</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putChar\"><span class=\"kw3\">putChar</span></a> <span class=\"st0\">'L'</span> <span class=\"sy0\">&gt;&gt;</span> runCommand <span class=\"st0\">\"aplay low.wav &amp;&gt; /dev/null\"</span> <span class=\"sy0\">&gt;&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>tick <span class=\"sy0\">::</span> MVar Pattern <span class=\"sy0\">-&gt;</span> BeatsPerMinute <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>tick b i <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    t <span class=\"sy0\">&lt;-</span> readMVar b<br/>    <span class=\"kw1\">case</span> t <span class=\"kw1\">of</span><br/>        <span class=\"br0\">[</span>Stop<span class=\"br0\">]</span> <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:return\"><span class=\"kw3\">return</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        x <span class=\"sy0\">-&gt;</span> <span class=\"kw1\">do</span><br/>            <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:mapM_\"><span class=\"kw3\">mapM_</span></a> <span class=\"br0\">(</span>\\v <span class=\"sy0\">-&gt;</span> forkIO <span class=\"br0\">(</span>beep v<span class=\"br0\">)</span> <span class=\"sy0\">&gt;&gt;</span> threadDelay <span class=\"br0\">(</span>minute `<a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:div\"><span class=\"kw3\">div</span></a>` i<span class=\"br0\">)</span><span class=\"br0\">)</span> t<br/>            tick b i<br/>\u00a0<br/>metronome <span class=\"sy0\">::</span> Pattern <span class=\"sy0\">-&gt;</span> BeatsPerMinute <span class=\"sy0\">-&gt;</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#t:IO\"><span class=\"kw4\">IO</span></a> <span class=\"br0\">(</span><span class=\"br0\">)</span><br/>metronome p i <span class=\"sy0\">=</span> <span class=\"kw1\">do</span><br/>    <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:putStrLn\"><span class=\"kw3\">putStrLn</span></a> <span class=\"st0\">\"Press any key to stop the metronome.\"</span><br/>    b <span class=\"sy0\">&lt;-</span> newMVar p<br/>    <span class=\"sy0\">_</span> <span class=\"sy0\">&lt;-</span> forkIO <span class=\"sy0\">$</span> tick b i<br/>    <span class=\"sy0\">_</span> <span class=\"sy0\">&lt;-</span> <a href=\"http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#v:getChar\"><span class=\"kw3\">getChar</span></a><br/>    putMVar b <span class=\"br0\">[</span>Stop<span class=\"br0\">]</span></pre>"}, {"lang": "J", "loc": 42, "block": "<pre class=\"j highlighted_source\">\u00a0<br/>MET=: <span class=\"nu0\">_</span> <span class=\"nu0\">_</span>&amp;$:\u00a0:<span class=\"sy0\">(</span><span class=\"nu0\">4</span>\u00a0: <span class=\"nu0\">0</span><span class=\"sy0\">)</span><br/>\u00a0<br/>  <span class=\"st_h\">'BEL BS LF CR'</span>=. <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">10</span> <span class=\"nu0\">13</span> { a.<br/>  <span class=\"st_h\">'`print stime delay'</span>=. <span class=\"nu0\">1</span>!:<span class=\"nu0\">2</span>&amp;<span class=\"nu0\">4</span>`<span class=\"sy0\">(</span><span class=\"nu0\">6</span>!:<span class=\"nu0\">1</span><span class=\"sy0\">)</span>`<span class=\"sy0\">(</span><span class=\"nu0\">6</span>!:<span class=\"nu0\">3</span><span class=\"sy0\">)</span><br/>  ticker=. <span class=\"nu0\">2</span> <span class=\"nu0\">2</span>$<span class=\"st_h\">'\\  /'</span><br/>  <span class=\"st_h\">'small large'</span>=. <span class=\"sy0\">(</span>BEL,<span class=\"nu0\">2</span>#BS<span class=\"sy0\">)</span>\u00a0; <span class=\"nu0\">5</span>#BS<br/>  clrln=. CR,<span class=\"sy0\">(</span><span class=\"nu0\">79</span>#<span class=\"st_h\">' '</span><span class=\"sy0\">)</span>,CR<br/>\u00a0<br/>  <span class=\"kw2\">x</span>=. <span class=\"nu0\">2</span> <span class=\"sy0\">(</span>{.,<span class=\"sy0\">)</span> <span class=\"kw2\">x</span><br/>  <span class=\"kw2\">y</span>=. <span class=\"nu0\">_1</span> |.&amp;.&gt; <span class=\"nu0\">2</span> <span class=\"sy0\">(</span>{.,<span class=\"sy0\">)</span> <span class=\"kw2\">y</span><br/>  <span class=\"st_h\">'i j'</span>=. <span class=\"nu0\">0</span><br/>  print <span class=\"st_h\">'bpb \\  bpm \\ '</span> , <span class=\"nu0\">2</span>#BS<br/>  delay <span class=\"nu0\">1</span><br/>\u00a0<br/>  <span class=\"kw2\">x</span>=. <span class=\"sy0\">(</span>{. , <span class=\"sy0\">(</span><span class=\"st_h\">'ti t'</span>=. stime<span class=\"st_h\">''</span><span class=\"sy0\">)</span> + {:<span class=\"sy0\">)</span> <span class=\"kw2\">x</span><br/>  <span class=\"kw1\">while.</span> <span class=\"kw2\">x</span> *./@:&gt; i,t <span class=\"kw1\">do.</span><br/>\u00a0<br/>    <span class=\"st_h\">'bpb bpm'</span>=. {<a class=\"__cf_email__\" data-cfemail=\"cde38d\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>&gt; <span class=\"kw2\">y</span>=. <span class=\"nu0\">1</span> |.&amp;.&gt; <span class=\"kw2\">y</span><br/>    dl=. <span class=\"nu0\">60</span>\u00a0% bpm<br/>\u00a0<br/>    print clrln,<span class=\"sy0\">(</span>\":bpb<span class=\"sy0\">)</span>,<span class=\"st_h\">' '</span>,<span class=\"sy0\">(</span>ticker {~ <span class=\"nu0\">2</span> | i=. &gt;: i<span class=\"sy0\">)</span>,<span class=\"st_h\">' '</span>,<span class=\"sy0\">(</span>\":bpm<span class=\"sy0\">)</span>,<span class=\"st_h\">' '</span><br/>\u00a0<br/>    <span class=\"kw1\">for.</span> i. bpb <span class=\"kw1\">do.</span><br/>      print small ,~ ticker {~ <span class=\"nu0\">2</span> | j=. &gt;: j<br/>      delay <span class=\"nu0\">0</span> &gt;. <span class=\"sy0\">(</span>t=. t + dl<span class=\"sy0\">)</span> - stime <span class=\"st_h\">''</span><br/>    <span class=\"kw1\">end.</span><br/>\u00a0<br/>  <span class=\"kw1\">end.</span><br/>\u00a0<br/>  print clrln<br/>  i , j , t - ti<br/>\u00a0<br/><span class=\"sy0\">)</span><br/>\u00a0<br/>\u00a0<br/><span class=\"co1\">NB. Basic tacit version; this is probably considered bad coding style. At least I removed the \"magic constants\". Sort of.</span><br/><span class=\"co1\">NB. The above version is by far superior.</span><br/><span class=\"st_h\">'BEL BS LF'</span>=: <span class=\"nu0\">7</span> <span class=\"nu0\">8</span> <span class=\"nu0\">10</span> { a.<br/><span class=\"st_h\">'`print delay'</span>=: <span class=\"nu0\">1</span>!:<span class=\"nu0\">2</span>&amp;<span class=\"nu0\">4</span>`<span class=\"sy0\">(</span><span class=\"nu0\">6</span>!:<span class=\"nu0\">3</span><span class=\"sy0\">)</span><br/>met=: <span class=\"nu0\">_</span>&amp;$:\u00a0:<span class=\"sy0\">((</span>] <span class=\"sy0\">(</span>{:@] [ LF <a class=\"__cf_email__\" data-cfemail=\"97e7e5fef9e3d7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[ <span class=\"sy0\">(</span><a class=\"__cf_email__\" data-cfemail=\"230e0d63\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>{<a class=\"__cf_email__\" data-cfemail=\"e7c9a7\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>] [ <a class=\"__cf_email__\" data-cfemail=\"3b5f5e575a427b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>[ <a class=\"__cf_email__\" data-cfemail=\"6717150e091327\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>] <span class=\"sy0\">(</span>BEL,<span class=\"nu0\">2</span>#BS<span class=\"sy0\">)</span> , <span class=\"sy0\">(</span><span class=\"nu0\">2</span> <span class=\"nu0\">2</span>$<span class=\"st_h\">'\\  /'</span><span class=\"sy0\">)</span> {~ {<a class=\"__cf_email__\" data-cfemail=\"587618\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>]<span class=\"sy0\">)</span>^:<span class=\"sy0\">(</span>{:@]<span class=\"sy0\">))</span> <span class=\"nu0\">1</span> , &lt;<a class=\"__cf_email__\" data-cfemail=\"0b254b\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a>%<span class=\"sy0\">)</span> <span class=\"nu0\">60</span>&amp;% [ <a class=\"__cf_email__\" data-cfemail=\"8afaf8e3e4feca\" href=\"/cdn-cgi/l/email-protection\">[email\u00a0protected]</a><span class=\"sy0\">(</span><span class=\"st_h\">'\\ '</span>\"<span class=\"nu0\">_</span><span class=\"sy0\">))</span><br/>\u00a0</pre>"}, {"lang": "Java", "loc": 31, "block": "<pre class=\"java highlighted_source\">\u00a0<br/><span class=\"kw1\">class</span> Metronome<span class=\"br0\">{</span><br/>\t<span class=\"kw4\">double</span> bpm<span class=\"sy0\">;</span><br/>\t<span class=\"kw4\">int</span> measure, counter<span class=\"sy0\">;</span><br/>\t<span class=\"kw1\">public</span> Metronome<span class=\"br0\">(</span><span class=\"kw4\">double</span> bpm, <span class=\"kw4\">int</span> measure<span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">this</span>.<span class=\"me1\">bpm</span> <span class=\"sy0\">=</span> bpm<span class=\"sy0\">;</span><br/>\t\t<span class=\"kw1\">this</span>.<span class=\"me1\">measure</span> <span class=\"sy0\">=</span> measure<span class=\"sy0\">;</span>\t<br/>\t<span class=\"br0\">}</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw4\">void</span> start<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t<span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"kw2\">true</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t<span class=\"kw1\">try</span> <span class=\"br0\">{</span><br/>\t\t\t\t<a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Athread+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">Thread</span></a>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">long</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">1000</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"nu0\">60</span><span class=\"sy0\">/</span>bpm<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">catch</span><span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Ainterruptedexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">InterruptedException</span></a> e<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\t\t\te.<span class=\"me1\">printStackTrace</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t\tcounter<span class=\"sy0\">++;</span><br/>\t\t\t<span class=\"kw1\">if</span> <span class=\"br0\">(</span>counter<span class=\"sy0\">%</span>measure<span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span><br/>\t\t\t\t <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"TICK\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><span class=\"kw1\">else</span><span class=\"br0\">{</span><br/>\t\t\t\t <a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Asystem+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">System</span></a>.<span class=\"me1\">out</span>.<span class=\"me1\">println</span><span class=\"br0\">(</span><span class=\"st0\">\"TOCK\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\t\t<span class=\"br0\">}</span><br/>\t\t<span class=\"br0\">}</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/><span class=\"kw1\">public</span> <span class=\"kw1\">class</span> test <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><a href=\"http://www.google.com/search?hl=en&amp;q=allinurl%3Astring+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky\"><span class=\"kw3\">String</span></a><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>\t\tMetronome metronome1 <span class=\"sy0\">=</span> <span class=\"kw1\">new</span> Metronome<span class=\"br0\">(</span><span class=\"nu0\">120</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t\tmetronome1.<span class=\"me1\">start</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span><br/>\t<span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0</pre>"}, {"lang": "Julia", "loc": 13, "block": "<pre class=\"text highlighted_source\">function metronome(bpm::Real=72, bpb::Int=4)<br/>    s = 60.0 / bpm<br/>    counter = 0<br/>    while true<br/>        counter += 1<br/>        if counter\u00a0% bpb\u00a0!= 0<br/>            println(\"tick\")<br/>        else<br/>            println(\"TICK\")<br/>        end<br/>        sleep(s)<br/>    end<br/>end</pre>"}, {"lang": "Kotlin", "loc": 16, "block": "<pre class=\"scala highlighted_source\"><span class=\"co1\">// version 1.1.2</span><br/>\u00a0<br/>fun metronome<span class=\"br0\">(</span>bpm<span class=\"sy0\">:</span> Int, bpb<span class=\"sy0\">:</span> Int, maxBeats<span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> Int.<span class=\"me1\">MAX_VALUE</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>    <br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> delay <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><span class=\"sy0\">_</span>000L / bpm<br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> beats <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">do</span></a> <span class=\"br0\">{</span><br/>        Thread.<span class=\"me1\">sleep</span><span class=\"br0\">(</span>delay<span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>beats <span class=\"sy0\">%</span> bpb <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>TICK \"</span><span class=\"br0\">)</span><br/>        <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> print<span class=\"br0\">(</span><span class=\"st0\">\"tick \"</span><span class=\"br0\">)</span><br/>        beats++ <br/>    <span class=\"br0\">}</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>beats <span class=\"sy0\">&lt;</span> maxBeats<span class=\"br0\">)</span><br/>    println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>fun main<span class=\"br0\">(</span>args<span class=\"sy0\">:</span> Array<span class=\"sy0\">&lt;</span>String<span class=\"sy0\">&gt;</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> metronome<span class=\"br0\">(</span><span class=\"nu0\">120</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"co1\">// limit to 20 beats </span></pre>"}, {"lang": "Liberty BASIC", "loc": 85, "block": "<pre class=\"lb highlighted_source\">    <span class=\"kw3\">WindowWidth</span>  <span class=\"sy0\">=</span><span class=\"nu0\">230</span><br/>    <span class=\"kw3\">WindowHeight</span> <span class=\"sy0\">=</span><span class=\"nu0\">220</span><br/>\u00a0<br/>    <span class=\"kw1\">button</span> <span class=\"sy0\">#</span>w.b1 <span class=\"st0\">\"Start\"</span><span class=\"sy0\">,</span>   <span class=\"br0\">[</span>start<span class=\"br0\">]</span><span class=\"sy0\">,</span>   LR<span class=\"sy0\">,</span> <span class=\"nu0\">110</span><span class=\"sy0\">,</span> <span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><br/>    <span class=\"kw1\">button</span> <span class=\"sy0\">#</span>w.b2 <span class=\"st0\">\"Tempo\"</span><span class=\"sy0\">,</span>   <span class=\"br0\">[</span>tempo<span class=\"br0\">]</span><span class=\"sy0\">,</span>   LR<span class=\"sy0\">,</span> <span class=\"nu0\">180</span><span class=\"sy0\">,</span> <span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><br/>    <span class=\"kw1\">button</span> <span class=\"sy0\">#</span>w.b3 <span class=\"st0\">\"Pattern\"</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>pattern<span class=\"br0\">]</span><span class=\"sy0\">,</span> LR<span class=\"sy0\">,</span>  <span class=\"nu0\">40</span><span class=\"sy0\">,</span> <span class=\"nu0\">90</span><span class=\"sy0\">,</span> <span class=\"nu0\">55</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><br/>\u00a0<br/>    <span class=\"kw1\">open</span> <span class=\"st0\">\"Metronome\"</span> <span class=\"kw1\">for</span> graphics_nsb_nf <span class=\"kw1\">as</span> <span class=\"sy0\">#</span>w<br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"trapclose quit\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"down\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"fill darkblue\u00a0; backcolor darkblue\u00a0; color white\"</span><br/>\u00a0<br/>    tempo    <span class=\"sy0\">=</span>   <span class=\"nu0\">60</span>              <span class=\"co1\">'   per minute</span><br/>    interval <span class=\"sy0\">=</span><span class=\"nu0\">1000</span> <span class=\"sy0\">/</span><span class=\"br0\">(</span>tempo <span class=\"sy0\">/</span><span class=\"nu0\">60</span><span class=\"br0\">)</span>  <span class=\"co1\">'   timer works in ms</span><br/>    tickCount <span class=\"sy0\">=</span>   <span class=\"nu0\">0</span>              <span class=\"co1\">'   cycle counter</span><br/>    running   <span class=\"sy0\">=</span>   <span class=\"nu0\">1</span>              <span class=\"co1\">'   flag for state</span><br/>    bar$      <span class=\"sy0\">=</span> <span class=\"st0\">\"HLLL\"</span>           <span class=\"co1\">'   initially strong-weak-weak-weak</span><br/>    count     <span class=\"sy0\">=</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span> bar$<span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"kw1\">sub</span> quit w$<br/>    <span class=\"kw1\">close</span> <span class=\"sy0\">#</span>w$<br/>    <span class=\"kw1\">end</span><br/><span class=\"kw1\">end</span> <span class=\"kw1\">sub</span><br/>\u00a0<br/><span class=\"br0\">[</span>start<span class=\"br0\">]</span><br/>    <span class=\"kw1\">if</span> running <span class=\"sy0\">=</span><span class=\"nu0\">1</span> <span class=\"kw1\">then</span><br/>        running <span class=\"sy0\">=</span><span class=\"nu0\">0</span><br/>        <span class=\"sy0\">#</span>w.b1 <span class=\"st0\">\"Stop\"</span><br/>        <span class=\"sy0\">#</span>w.b2 <span class=\"st0\">\"!disable\"</span><br/>        <span class=\"sy0\">#</span>w.b3 <span class=\"st0\">\"!disable\"</span><br/>    <span class=\"kw1\">else</span><br/>        running <span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>        <span class=\"sy0\">#</span>w.b1 <span class=\"st0\">\"Start\"</span><br/>        <span class=\"sy0\">#</span>w.b2 <span class=\"st0\">\"!enable\"</span><br/>        <span class=\"sy0\">#</span>w.b3 <span class=\"st0\">\"!enable\"</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>    <span class=\"kw1\">if</span> running <span class=\"sy0\">=</span><span class=\"nu0\">0</span> <span class=\"kw1\">then</span> <span class=\"kw1\">timer</span> interval<span class=\"sy0\">,</span> <span class=\"br0\">[</span>tick<span class=\"br0\">]</span> <span class=\"kw1\">else</span> <span class=\"kw1\">timer</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>tempo<span class=\"br0\">]</span><br/>    <span class=\"kw1\">prompt</span> <span class=\"st0\">\"New tempo 30...360\"</span>; tempo$<br/>    tempo <span class=\"sy0\">=</span><span class=\"kw2\">val</span><span class=\"br0\">(</span> tempo$<span class=\"br0\">)</span><br/>    tempo <span class=\"sy0\">=</span><span class=\"kw2\">min</span><span class=\"br0\">(</span> tempo<span class=\"sy0\">,</span> <span class=\"nu0\">360</span><span class=\"br0\">)</span><br/>    tempo <span class=\"sy0\">=</span><span class=\"kw2\">max</span><span class=\"br0\">(</span> tempo<span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">)</span><br/>    interval <span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span> <span class=\"nu0\">1000</span> <span class=\"sy0\">/</span><span class=\"br0\">(</span>tempo <span class=\"sy0\">/</span><span class=\"nu0\">60</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/> <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>pattern<span class=\"br0\">]</span><br/>    <span class=\"kw1\">prompt</span> <span class=\"st0\">\"New Pattern, eg 'HLLL' \"</span>; bar$<br/>    count <span class=\"sy0\">=</span><span class=\"kw2\">len</span><span class=\"br0\">(</span> bar$<span class=\"br0\">)</span><br/>    <span class=\"kw1\">if</span> count <span class=\"sy0\">&lt;</span><span class=\"nu0\">2</span> <span class=\"kw1\">or</span> count <span class=\"sy0\">&gt;</span><span class=\"nu0\">8</span> <span class=\"kw1\">then</span> <span class=\"kw1\">goto</span> <span class=\"br0\">[</span>pattern<span class=\"br0\">]</span><br/>\u00a0<br/> <span class=\"kw1\">wait</span><br/>\u00a0<br/><span class=\"br0\">[</span>tick<span class=\"br0\">]</span><br/>    <span class=\"co1\">'beep and flash</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"place 115 40\"</span><br/>\u00a0<br/>    <span class=\"kw1\">if</span> <span class=\"kw2\">mid$</span><span class=\"br0\">(</span> bar$<span class=\"sy0\">,</span> tickCount <span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span><span class=\"st0\">\"H\"</span> <span class=\"kw1\">then</span><br/>        <span class=\"kw1\">playwave</span> <span class=\"st0\">\"mHi.wav\"</span><span class=\"sy0\">,</span> async<br/>        <span class=\"sy0\">#</span>w <span class=\"st0\">\"backcolor blue\u00a0; color white\u00a0; circlefilled \"</span>; <span class=\"nu0\">20</span> <span class=\"sy0\">-</span>tickCount <span class=\"sy0\">*</span><span class=\"nu0\">2</span><br/>    <span class=\"kw1\">else</span><br/>        <span class=\"kw1\">playwave</span> <span class=\"st0\">\"mLo.wav\"</span><span class=\"sy0\">,</span> async<br/>        <span class=\"sy0\">#</span>w <span class=\"st0\">\"backcolor cyan\u00a0; circlefilled \"</span>; <span class=\"nu0\">20</span> <span class=\"sy0\">-</span>tickCount <span class=\"sy0\">*</span><span class=\"nu0\">2</span><br/>    <span class=\"kw1\">end</span> <span class=\"kw1\">if</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"place 50 140\u00a0; backcolor darkblue\u00a0; color white\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"\\  \"</span>; tempo; <span class=\"st0\">\" beats /min.\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"place 85 160\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"\\\"</span>; bar$<br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"place 85 120\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"\\Beat # \"</span>; tickCount <span class=\"sy0\">+</span><span class=\"nu0\">1</span><br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"place 115 40\"</span><br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"color darkblue\"</span><br/>\u00a0<br/>    tickCount <span class=\"sy0\">=</span><span class=\"br0\">(</span> tickCount <span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"kw1\">mod</span> count<br/>\u00a0<br/>    <span class=\"sy0\">#</span>w <span class=\"st0\">\"flush\"</span><br/>\u00a0<br/>    <span class=\"kw1\">wait</span></pre>"}, {"lang": "Perl 6", "loc": 15, "block": "<pre class=\"perl6 highlighted_source\"><span class=\"kw2\">sub</span> MAIN <span class=\"br0\">(</span><span class=\"re0\">$beats</span><span class=\"sy0\">-</span>per<span class=\"sy0\">-</span>minute <span class=\"sy0\">=</span> <span class=\"nu0\">72</span><span class=\"sy0\">,</span> <span class=\"re0\">$beats</span><span class=\"sy0\">-</span>per<span class=\"sy0\">-</span>bar <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$duration</span> <span class=\"sy0\">=</span> <span class=\"nu0\">60</span> <span class=\"sy0\">/</span> <span class=\"re0\">$beats</span><span class=\"sy0\">-</span>per<span class=\"sy0\">-</span>minute<span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$base</span><span class=\"sy0\">-</span>time <span class=\"sy0\">=</span> now <span class=\"sy0\">+</span> <span class=\"re0\">$duration</span><span class=\"sy0\">;</span><br/>    <span class=\"kw1\">my</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><br/>\u00a0<br/>    <span class=\"kw1\">for</span> <span class=\"re0\">$base</span><span class=\"sy0\">-</span>time<span class=\"sy0\">,</span> <span class=\"re0\">$base</span><span class=\"sy0\">-</span>time <span class=\"sy0\">+</span> <span class=\"re0\">$duration</span> <span class=\"sy0\">...</span> <span class=\"sy0\">*</span> <span class=\"sy0\">-&gt;</span> <span class=\"re0\">$next</span><span class=\"sy0\">-</span>time <span class=\"br0\">{</span><br/>        <span class=\"kw1\">if</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"sy0\">%%</span> <span class=\"re0\">$beats</span><span class=\"sy0\">-</span>per<span class=\"sy0\">-</span>bar <span class=\"br0\">{</span><br/>            <span class=\"kw3\">print</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>TICK\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>            <span class=\"kw3\">print</span>  <span class=\"st0\">\" tick\"</span><span class=\"sy0\">;</span><br/>        <span class=\"br0\">}</span><br/>        sleep <span class=\"re0\">$next</span><span class=\"sy0\">-</span>time <span class=\"sy0\">-</span> now<span class=\"sy0\">;</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span></pre>"}, {"lang": "Phix", "loc": 35, "block": "<pre class=\"text highlighted_source\">integer tempo = 120,    -- beats per minute (max 800)<br/>        measure = 4,    -- beats per bar<br/>        runsecs = 5     -- total run time (rounded up to whole bars)<br/>\u00a0<br/>integer low_freq = #200, low_duration = 20,<br/>        high_freq = #400, high_duration = 20<br/>\u00a0<br/>atom k32=0, xBeep<br/>atom t0 = time(), count = 0<br/>atom duration = 60/tempo,<br/>     next = time()+duration<br/>\u00a0<br/>while time()&lt;t0+runsecs do<br/>    for j=1 to measure do<br/>        if platform()=WINDOWS then<br/>            if k32=0 then<br/>                k32 = open_dll(\"kernel32.dll\")<br/>                xBeep = define_c_proc(k32, \"Beep\", {C_INT,C_INT})<br/>            end if<br/>            if j=1 then<br/>                c_proc(xBeep,{high_freq,high_duration})<br/>                if count=0 then t0 = time() end if<br/>            else<br/>                c_proc(xBeep,{low_freq,low_duration})<br/>            end if<br/>        else<br/>            puts(1,7)<br/>        end if<br/>        count += 1<br/>        puts(1,iff(j=1?\"\\nH\":\"L\"))<br/>        sleep(next-time())<br/>        next += duration<br/>    end for<br/>end while<br/>printf(1,\"\\naverage\u00a0%f bpm\\n\",{count*60/(time()-t0)})</pre>"}, {"lang": "PicoLisp", "loc": 9, "block": "<pre class=\"text highlighted_source\">(de metronome (Bpm)<br/>   (if (fork)<br/>      (let Pid @<br/>         (for Pendulum '(\" /\" . (\"^H^H\\\\ \" \"^H^H /\" .))<br/>            (tell Pid 'call \"/usr/bin/beep\" \"-f\" 440 \"-l\" 40)<br/>            (prin Pendulum)<br/>            (T (key (*/ 30000 Bpm)) (tell Pid 'bye)) )<br/>         (prinl) )<br/>      (wait) ) )</pre>"}, {"lang": "PureBasic", "loc": 320, "block": "<pre class=\"purebasic highlighted_source\"><span class=\"kw1\">Structure</span> METRONOMEs<br/>  msPerBeat.i<br/>  BeatsPerMinute.i<br/>  BeatsPerCycle.i<br/>  volume.i<br/>  canvasGadget.i<br/>  w.i<br/>  h.i<br/>  originX.i<br/>  originY.i<br/>  radius.i<br/>  activityStatus.i <br/><span class=\"kw1\">EndStructure</span><br/>\u00a0<br/><span class=\"kw1\">Enumeration</span>       <span class=\"co1\">;gadgets</span><br/>  #TEXT_MSPB      <span class=\"co1\">;milliseconds per beat</span><br/>  #STRING_MSPB    <span class=\"co1\">;milliseconds per beat</span><br/>  #TEXT_BPM       <span class=\"co1\">;beats per minute</span><br/>  #STRING_BPM     <span class=\"co1\">;beats per minute</span><br/>  #TEXT_BPC       <span class=\"co1\">;beats per cycle</span><br/>  #STRING_BPC     <span class=\"co1\">;beats per cycle</span><br/>  #BUTTON_VOLM    <span class=\"co1\">;volume -</span><br/>  #BUTTON_VOLP    <span class=\"co1\">;volume +</span><br/>  #BUTTON_START   <span class=\"co1\">;start</span><br/>  #SPIN_BPM       <br/>  #CANVAS_METRONOME<br/><span class=\"kw1\">EndEnumeration</span>  <br/>\u00a0<br/><span class=\"kw1\">Enumeration</span>       <span class=\"co1\">;sounds</span><br/>  #SOUND_LOW<br/>  #SOUND_HIGH<br/><span class=\"kw1\">EndEnumeration</span><br/>\u00a0<br/>#WINDOW <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>       <span class=\"co1\">;window</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> handleError<span class=\"br0\">(</span>Value, text.s<span class=\"br0\">)</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw1\">Not</span> Value: <span class=\"kw2\">MessageRequester</span><span class=\"br0\">(</span><span class=\"st0\">\"Error\"</span>, text<span class=\"br0\">)</span>: <span class=\"kw1\">End</span>: <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> drawMetronome<span class=\"br0\">(</span><span class=\"sy0\">*</span>m.METRONOMEs, Angle.f, cycleCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> CircleX, CircleY, circleColor<br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">StartDrawing</span><span class=\"br0\">(</span>CanvasOutput<span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>canvasGadget<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw2\">Box</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>w, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>h, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      CircleX <span class=\"sy0\">=</span> <span class=\"kw2\">Int</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>radius <span class=\"sy0\">*</span> <span class=\"kw2\">Cos</span><span class=\"br0\">(</span>Radian<span class=\"br0\">(</span>Angle<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      CircleY <span class=\"sy0\">=</span> <span class=\"kw2\">Int</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>radius <span class=\"sy0\">*</span> <span class=\"kw2\">Sin</span><span class=\"br0\">(</span>Radian<span class=\"br0\">(</span>Angle<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">If</span> Angle <span class=\"sy0\">=</span> <span class=\"nu0\">90</span><br/>        <span class=\"kw1\">If</span> cycleCount: circleColor <span class=\"sy0\">=</span> <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>: <span class=\"kw1\">Else</span>: circleColor <span class=\"sy0\">=</span> <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span>: <span class=\"kw1\">EndIf</span><br/>        <span class=\"kw2\">LineXY</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY <span class=\"sy0\">-</span> CircleY, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>        <span class=\"kw2\">Circle</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX <span class=\"sy0\">+</span> CircleX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY <span class=\"sy0\">-</span> CircleY <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>radius <span class=\"sy0\">*</span> <span class=\"nu0\">0.15</span>, <span class=\"nu0\">10</span>, circleColor<span class=\"br0\">)</span><br/>      <span class=\"kw1\">Else</span><br/>        <span class=\"kw2\">LineXY</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>radius <span class=\"sy0\">*</span> <span class=\"nu0\">1.02</span>, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY <span class=\"sy0\">-</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>radius, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <br/>        <span class=\"kw2\">LineXY</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originX <span class=\"sy0\">+</span> CircleX, <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>originY <span class=\"sy0\">-</span> CircleY, <span class=\"kw2\">RGB</span><span class=\"br0\">(</span><span class=\"nu0\">255</span>, <span class=\"nu0\">255</span>, <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>    <span class=\"kw2\">StopDrawing</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>    <span class=\"kw1\">ProcedureReturn</span> <span class=\"nu0\">1</span><br/>  <span class=\"kw1\">EndIf</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span>.i Metronome<span class=\"br0\">(</span><span class=\"sy0\">*</span>m.METRONOMEs<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> milliseconds <span class=\"sy0\">=</span> <span class=\"kw2\">Int</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">60</span> <span class=\"sy0\">*</span> <span class=\"nu0\">1000</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerMinute<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Protected</span> msPerFrame, framesPerBeat<br/>  <span class=\"kw1\">Protected</span> i, j, cycleCount, startTime, frameEndTime, delayTime, delayError, h.f<br/>\u00a0<br/>  <span class=\"co1\">;calculate metronome angles for each frame of animation</span><br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerMinute <span class=\"sy0\">&lt;</span> <span class=\"nu0\">60</span><br/>    framesPerBeat <span class=\"sy0\">=</span> <span class=\"kw2\">Round</span><span class=\"br0\">(</span>milliseconds <span class=\"sy0\">/</span> <span class=\"nu0\">150</span>, #PB_Round_Nearest<span class=\"br0\">)</span><br/>  <span class=\"kw1\">Else</span><br/>    framesPerBeat <span class=\"sy0\">=</span> <span class=\"kw2\">Round</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerMinute <span class=\"sy0\">-</span> <span class=\"nu0\">420</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"sy0\">-</span><span class=\"nu0\">60</span>, #PB_Round_Nearest<span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> framesPerBeat <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><br/>    framesPerBeat <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>    <span class=\"kw1\">Dim</span> metronomeFrameAngle.f<span class=\"br0\">(</span><span class=\"nu0\">1</span>, framesPerBeat<span class=\"br0\">)</span><br/>    metronomeFrameAngle<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">90</span><br/>    metronomeFrameAngle<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">90</span><br/>  <span class=\"kw1\">Else</span>  <br/>    <span class=\"kw1\">Dim</span> metronomeFrameAngle.f<span class=\"br0\">(</span><span class=\"nu0\">1</span>, framesPerBeat <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">For</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> framesPerBeat<br/>      h <span class=\"sy0\">=</span> <span class=\"nu0\">45</span> <span class=\"sy0\">/</span> framesPerBeat<br/>      metronomeFrameAngle<span class=\"br0\">(</span><span class=\"nu0\">0</span>, j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">90</span> <span class=\"sy0\">-</span> h <span class=\"sy0\">*</span> <span class=\"br0\">(</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      metronomeFrameAngle<span class=\"br0\">(</span><span class=\"nu0\">0</span>, framesPerBeat <span class=\"sy0\">+</span> j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">45</span> <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> <span class=\"br0\">(</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      metronomeFrameAngle<span class=\"br0\">(</span><span class=\"nu0\">1</span>, j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">90</span> <span class=\"sy0\">+</span> h <span class=\"sy0\">*</span> <span class=\"br0\">(</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>      metronomeFrameAngle<span class=\"br0\">(</span><span class=\"nu0\">1</span>, framesPerBeat <span class=\"sy0\">+</span> j<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"nu0\">135</span> <span class=\"sy0\">-</span> h <span class=\"sy0\">*</span> <span class=\"br0\">(</span>j <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>    <span class=\"kw1\">Next</span><br/>    framesPerBeat <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><br/>  <span class=\"kw1\">EndIf</span><br/>  msPerFrame   <span class=\"sy0\">=</span> milliseconds <span class=\"sy0\">/</span> framesPerBeat<br/>\u00a0<br/>  <span class=\"kw2\">PlaySound</span><span class=\"br0\">(</span>#SOUND_HIGH<span class=\"br0\">)</span><br/>  startTime <span class=\"sy0\">=</span> <span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  <span class=\"kw1\">Repeat</span> <br/>    <span class=\"kw1\">For</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"kw1\">To</span> <span class=\"nu0\">1</span><br/>      frameEndTime <span class=\"sy0\">=</span> startTime <span class=\"sy0\">+</span> msPerFrame<br/>      <span class=\"kw1\">For</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"kw1\">To</span> framesPerBeat<br/>        drawMetronome<span class=\"br0\">(</span><span class=\"sy0\">*</span>m, metronomeFrameAngle<span class=\"br0\">(</span>i, j<span class=\"br0\">)</span>, cycleCount<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"co1\">;check for thread exit</span><br/>        <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>activityStatus <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><br/>          <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>activityStatus <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>          <span class=\"kw1\">ProcedureReturn</span><br/>        <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>        delayTime <span class=\"sy0\">=</span> frameEndTime <span class=\"sy0\">-</span> <span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>        <span class=\"kw1\">If</span> <span class=\"br0\">(</span>delayTime <span class=\"sy0\">-</span> delayError<span class=\"br0\">)</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><br/>          <span class=\"kw2\">Delay</span><span class=\"br0\">(</span>frameEndTime <span class=\"sy0\">-</span> <span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> delayError<span class=\"br0\">)</span> <span class=\"co1\">;wait the remainder of frame</span><br/>        <span class=\"kw1\">ElseIf</span> delayTime <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><br/>          delayError <span class=\"sy0\">=</span> <span class=\"sy0\">-</span> delayTime<br/>        <span class=\"kw1\">EndIf</span> <br/>        frameEndTime <span class=\"sy0\">+</span> msPerFrame<br/>      <span class=\"kw1\">Next</span><br/>\u00a0<br/>      <span class=\"co1\">;check for thread exit</span><br/>      <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>activityStatus <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><br/>        <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>activityStatus <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw1\">ProcedureReturn</span><br/>      <span class=\"kw1\">EndIf</span><br/>\u00a0<br/>      <span class=\"kw1\">While</span> <span class=\"br0\">(</span><span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> startTime<span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> milliseconds:  <span class=\"kw1\">Wend</span><br/>\u00a0<br/>      <span class=\"kw2\">SetGadgetText</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>msPerBeat, <span class=\"kw2\">Str</span><span class=\"br0\">(</span><span class=\"kw2\">ElapsedMilliseconds</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> startTime<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>      cycleCount <span class=\"sy0\">+</span> <span class=\"nu0\">1</span>: cycleCount <span class=\"sy0\">%</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerCycle<br/>      <span class=\"kw1\">If</span> cycleCount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>        <span class=\"kw2\">PlaySound</span><span class=\"br0\">(</span>#SOUND_HIGH<span class=\"br0\">)</span><br/>      <span class=\"kw1\">Else</span><br/>        <span class=\"kw2\">PlaySound</span><span class=\"br0\">(</span>#SOUND_LOW<span class=\"br0\">)</span><br/>      <span class=\"kw1\">EndIf</span> <br/>      startTime <span class=\"sy0\">+</span> milliseconds<br/>    <span class=\"kw1\">Next</span> <br/>  <span class=\"kw1\">ForEver</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> startMetronome<span class=\"br0\">(</span><span class=\"sy0\">*</span>m.METRONOMEs, MetronomeThread<span class=\"br0\">)</span> <span class=\"co1\">;start up the thread with new values</span><br/>  <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerMinute <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">GetGadgetText</span><span class=\"br0\">(</span>#STRING_BPM<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerCycle  <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">GetGadgetText</span><span class=\"br0\">(</span>#STRING_BPC<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>  <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>activityStatus <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>BeatsPerMinute<br/>    MetronomeThread <span class=\"sy0\">=</span> <span class=\"kw2\">CreateThread</span><span class=\"br0\">(</span>@Metronome<span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"sy0\">*</span>m<span class=\"br0\">)</span><br/>  <span class=\"kw1\">EndIf</span><br/>  <span class=\"kw1\">ProcedureReturn</span> MetronomeThread<br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/><span class=\"kw1\">Procedure</span> stopMetronome<span class=\"br0\">(</span><span class=\"sy0\">*</span>m.METRONOMEs, MetronomeThread<span class=\"br0\">)</span> <span class=\"co1\">;if the thread is running: stop it</span><br/>  <span class=\"kw1\">If</span> <span class=\"kw2\">IsThread</span><span class=\"br0\">(</span>MetronomeThread<span class=\"br0\">)</span><br/>    <span class=\"sy0\">*</span>m<span class=\"sy0\">\\</span>activityStatus <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"co1\">;signal thread to stop</span><br/>  <span class=\"kw1\">EndIf</span><br/>  drawMetronome<span class=\"br0\">(</span><span class=\"sy0\">*</span>m, <span class=\"nu0\">90</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndProcedure</span><br/>\u00a0<br/>\u00a0<br/><span class=\"kw1\">Define</span> w <span class=\"sy0\">=</span> <span class=\"nu0\">360</span>, h <span class=\"sy0\">=</span> <span class=\"nu0\">360</span>, ourMetronome.METRONOMEs<br/>\u00a0<br/><span class=\"co1\">;initialize the metronome</span><br/><span class=\"kw1\">With</span> ourMetronome<br/>  <span class=\"sy0\">\\</span>msPerBeat     <span class=\"sy0\">=</span> #STRING_MSPB<br/>  <span class=\"sy0\">\\</span>canvasGadget   <span class=\"sy0\">=</span> #CANVAS_METRONOME<br/>  <span class=\"sy0\">\\</span>volume        <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><br/>  <span class=\"sy0\">\\</span>w             <span class=\"sy0\">=</span> w<br/>  <span class=\"sy0\">\\</span>h             <span class=\"sy0\">=</span> h<br/>  <span class=\"sy0\">\\</span>originX       <span class=\"sy0\">=</span> w <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>  <span class=\"sy0\">\\</span>originY       <span class=\"sy0\">=</span> h <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><br/>  <span class=\"sy0\">\\</span>radius        <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><br/><span class=\"kw1\">EndWith</span><br/>\u00a0<br/>ourMetronome<span class=\"sy0\">\\</span>canvasGadget <span class=\"sy0\">=</span> #CANVAS_METRONOME<br/>\u00a0<br/><span class=\"co1\">;initialize sounds</span><br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">InitSound</span><span class=\"br0\">(</span><span class=\"br0\">)</span>, <span class=\"st0\">\"Sound system is Not available\"</span><span class=\"br0\">)</span><br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">CatchSound</span><span class=\"br0\">(</span>#SOUND_LOW,\u00a0?sClick,\u00a0?eClick <span class=\"sy0\">-</span>\u00a0?sClick<span class=\"br0\">)</span>, <span class=\"st0\">\"Could Not CatchSound\"</span><span class=\"br0\">)</span><br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">CatchSound</span><span class=\"br0\">(</span>#SOUND_HIGH,\u00a0?sClick,\u00a0?eClick <span class=\"sy0\">-</span>\u00a0?sClick<span class=\"br0\">)</span>, <span class=\"st0\">\"Could Not CatchSound\"</span><span class=\"br0\">)</span><br/>SetSoundFrequency<span class=\"br0\">(</span>#SOUND_HIGH, <span class=\"nu0\">50000</span><span class=\"br0\">)</span><br/><span class=\"kw2\">SoundVolume</span><span class=\"br0\">(</span>#SOUND_LOW, ourMetronome<span class=\"sy0\">\\</span>volume<span class=\"br0\">)</span><br/><span class=\"kw2\">SoundVolume</span><span class=\"br0\">(</span>#SOUND_HIGH, ourMetronome<span class=\"sy0\">\\</span>volume<span class=\"br0\">)</span> <br/>\u00a0<br/><span class=\"co1\">;setup window &amp; GUI</span><br/><span class=\"kw1\">Define</span> Style, i, wp, gh<br/>\u00a0<br/>Style <span class=\"sy0\">=</span> #PB_Window_SystemMenu <span class=\"sy0\">|</span> #PB_Window_ScreenCentered <span class=\"sy0\">|</span> #PB_Window_MinimizeGadget<br/>handleError<span class=\"br0\">(</span><span class=\"kw2\">OpenWindow</span><span class=\"br0\">(</span>#WINDOW, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, w <span class=\"sy0\">+</span> <span class=\"nu0\">200</span> <span class=\"sy0\">+</span> <span class=\"nu0\">12</span>, h <span class=\"sy0\">+</span> <span class=\"nu0\">4</span>, <span class=\"st0\">\"Metronome\"</span>, Style<span class=\"br0\">)</span>, <span class=\"st0\">\"Not OpenWindow\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">SetWindowColor</span><span class=\"br0\">(</span>#WINDOW, $505050<span class=\"br0\">)</span> <br/>\u00a0<br/><span class=\"kw1\">If</span> <span class=\"kw2\">LoadFont</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"st0\">\"tahoma\"</span>, <span class=\"nu0\">9</span>, #PB_Font_HighQuality <span class=\"sy0\">|</span> #PB_Font_Bold<span class=\"br0\">)</span><br/>  <span class=\"kw2\">SetGadgetFont</span><span class=\"br0\">(</span>#PB_Default, <span class=\"kw2\">FontID</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><br/><span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>i <span class=\"sy0\">=</span> <span class=\"nu0\">3</span>: wp <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>: gh <span class=\"sy0\">=</span> <span class=\"nu0\">22</span><br/><span class=\"kw2\">TextGadget</span><span class=\"br0\">(</span>#TEXT_MSPB, w <span class=\"sy0\">+</span> wp, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">100</span>, gh, <span class=\"st0\">\"MilliSecs/Beat \"</span>, #PB_Text_Center<span class=\"br0\">)</span><br/><span class=\"kw2\">StringGadget</span><span class=\"br0\">(</span>#STRING_MSPB, w <span class=\"sy0\">+</span> wp <span class=\"sy0\">+</span> <span class=\"nu0\">108</span>, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">90</span>, gh, <span class=\"st0\">\"0\"</span>, #PB_String_ReadOnly<span class=\"br0\">)</span>: i <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><br/><span class=\"kw2\">TextGadget</span><span class=\"br0\">(</span>#TEXT_BPM, w <span class=\"sy0\">+</span> wp, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">100</span>, gh,<span class=\"st0\">\"Beats/Min \"</span>, #PB_Text_Center<span class=\"br0\">)</span><br/><span class=\"kw2\">StringGadget</span><span class=\"br0\">(</span>#STRING_BPM, w <span class=\"sy0\">+</span> wp <span class=\"sy0\">+</span> <span class=\"nu0\">108</span>, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">90</span>, gh, <span class=\"st0\">\"120\"</span>, #PB_String_Numeric<span class=\"br0\">)</span>: i <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><br/><span class=\"kw2\">GadgetToolTip</span><span class=\"br0\">(</span>#STRING_BPM, <span class=\"st0\">\"Valid range is 20 -&gt; 240\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">TextGadget</span><span class=\"br0\">(</span>#TEXT_BPC, w <span class=\"sy0\">+</span> wp, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">100</span>, gh,<span class=\"st0\">\"Beats/Cycle \"</span>, #PB_Text_Center<span class=\"br0\">)</span><br/><span class=\"kw2\">StringGadget</span><span class=\"br0\">(</span>#STRING_BPC, w <span class=\"sy0\">+</span> wp <span class=\"sy0\">+</span> <span class=\"nu0\">108</span>, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">90</span>, gh, <span class=\"st0\">\"4\"</span>, #PB_String_Numeric<span class=\"br0\">)</span>: i <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><br/><span class=\"kw2\">GadgetToolTip</span><span class=\"br0\">(</span>#STRING_BPC, <span class=\"st0\">\"Valid range is 1 -&gt; BPM\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">ButtonGadget</span><span class=\"br0\">(</span>#BUTTON_START, w <span class=\"sy0\">+</span> wp, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">200</span>, gh, <span class=\"st0\">\"Start\"</span>, #PB_Button_Toggle<span class=\"br0\">)</span>: i <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><br/><span class=\"kw2\">ButtonGadget</span><span class=\"br0\">(</span>#BUTTON_VOLM, w <span class=\"sy0\">+</span> wp, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">100</span>, gh, <span class=\"st0\">\"-Volume\"</span><span class=\"br0\">)</span><br/><span class=\"kw2\">ButtonGadget</span><span class=\"br0\">(</span>#BUTTON_VOLP, w <span class=\"sy0\">+</span> wp <span class=\"sy0\">+</span> <span class=\"nu0\">100</span>, gh <span class=\"sy0\">*</span> i, <span class=\"nu0\">100</span>, gh, <span class=\"st0\">\"+Volume\"</span><span class=\"br0\">)</span> <br/>CanvasGadget<span class=\"br0\">(</span>ourMetronome<span class=\"sy0\">\\</span>canvasGadget, <span class=\"nu0\">0</span>, <span class=\"nu0\">0</span>, ourMetronome<span class=\"sy0\">\\</span>w, ourMetronome<span class=\"sy0\">\\</span>h, #PB_Image_Border<span class=\"br0\">)</span><br/>drawMetronome<span class=\"br0\">(</span>ourMetronome, <span class=\"nu0\">90</span><span class=\"br0\">)</span> <br/>\u00a0<br/><span class=\"kw1\">Define</span> msg, GID, MetronomeThread, Value<br/><span class=\"kw1\">Repeat</span> <span class=\"co1\">;the control loop for our application</span><br/>  msg <span class=\"sy0\">=</span> <span class=\"kw2\">WaitWindowEvent</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><br/>  GID <span class=\"sy0\">=</span> <span class=\"kw2\">EventGadget</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>  etp <span class=\"sy0\">=</span> <span class=\"kw2\">EventType</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>  <span class=\"kw1\">If</span> GetAsyncKeyState_<span class=\"br0\">(</span>#VK_ESCAPE<span class=\"br0\">)</span>: <span class=\"kw1\">End</span>: <span class=\"kw1\">EndIf</span> <span class=\"co1\">;remove when app is o.k.</span><br/>\u00a0<br/>  <span class=\"kw1\">Select</span> msg<br/>\u00a0<br/>    <span class=\"kw1\">Case</span> #PB_Event_CloseWindow<br/>      <span class=\"kw1\">End</span><br/>\u00a0<br/>    <span class=\"kw1\">Case</span> #PB_Event_Gadget<br/>      <span class=\"kw1\">Select</span> GID<br/>\u00a0<br/>        <span class=\"kw1\">Case</span> #STRING_BPM<br/>          <span class=\"kw1\">If</span> etp <span class=\"sy0\">=</span> #PB_EventType_LostFocus<br/>            Value <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">GetGadgetText</span><span class=\"br0\">(</span>#STRING_BPM<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> Value <span class=\"sy0\">&gt;</span> <span class=\"nu0\">390</span><br/>            Value <span class=\"sy0\">=</span> <span class=\"nu0\">390</span><br/>            <span class=\"kw1\">ElseIf</span> Value <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><br/>            Value <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><br/>            <span class=\"kw1\">EndIf</span> <br/>            <span class=\"kw2\">SetGadgetText</span><span class=\"br0\">(</span>#STRING_BPM, <span class=\"kw2\">Str</span><span class=\"br0\">(</span>Value<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>        <span class=\"kw1\">Case</span> #STRING_BPC<br/>          <span class=\"kw1\">If</span> etp <span class=\"sy0\">=</span> #PB_EventType_LostFocus<br/>            Value <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">GetGadgetText</span><span class=\"br0\">(</span>#STRING_BPC<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">If</span> Value <span class=\"sy0\">&gt;</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">GetGadgetText</span><span class=\"br0\">(</span>#STRING_BPM<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>              Value <span class=\"sy0\">=</span> <span class=\"kw2\">Val</span><span class=\"br0\">(</span><span class=\"kw2\">GetGadgetText</span><span class=\"br0\">(</span>#STRING_BPM<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">ElseIf</span> Value <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><br/>              Value <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>            <span class=\"kw1\">EndIf</span> <br/>            <span class=\"kw2\">SetGadgetText</span><span class=\"br0\">(</span>#STRING_BPC, <span class=\"kw2\">Str</span><span class=\"br0\">(</span>Value<span class=\"br0\">)</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">EndIf</span> <br/>\u00a0<br/>        <span class=\"kw1\">Case</span> #BUTTON_VOLP, #BUTTON_VOLM <span class=\"co1\">;change volume </span><br/>          <span class=\"kw1\">If</span> GID <span class=\"sy0\">=</span> #BUTTON_VOLP <span class=\"kw1\">And</span> ourMetronome<span class=\"sy0\">\\</span>volume <span class=\"sy0\">&lt;</span> <span class=\"nu0\">100</span><br/>            ourMetronome<span class=\"sy0\">\\</span>volume <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><br/>          <span class=\"kw1\">ElseIf</span> GID <span class=\"sy0\">=</span> #BUTTON_VOLM <span class=\"kw1\">And</span> ourMetronome<span class=\"sy0\">\\</span>volume <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><br/>            ourMetronome<span class=\"sy0\">\\</span>volume <span class=\"sy0\">-</span> <span class=\"nu0\">10</span><br/>          <span class=\"kw1\">EndIf</span><br/>          <span class=\"kw2\">SoundVolume</span><span class=\"br0\">(</span>#SOUND_LOW, ourMetronome<span class=\"sy0\">\\</span>volume<span class=\"br0\">)</span><br/>          <span class=\"kw2\">SoundVolume</span><span class=\"br0\">(</span>#SOUND_HIGH, ourMetronome<span class=\"sy0\">\\</span>volume<span class=\"br0\">)</span><br/>\u00a0<br/>        <span class=\"kw1\">Case</span> #BUTTON_START <span class=\"co1\">;the toggle button for start/stop</span><br/>          <span class=\"kw1\">Select</span> <span class=\"kw2\">GetGadgetState</span><span class=\"br0\">(</span>#BUTTON_START<span class=\"br0\">)</span><br/>            <span class=\"kw1\">Case</span> <span class=\"nu0\">1</span><br/>              stopMetronome<span class=\"br0\">(</span>ourMetronome, MetronomeThread<span class=\"br0\">)</span><br/>              MetronomeThread <span class=\"sy0\">=</span> startMetronome<span class=\"br0\">(</span>ourMetronome, MetronomeThread<span class=\"br0\">)</span><br/>              <span class=\"kw2\">SetGadgetText</span><span class=\"br0\">(</span>#BUTTON_START,<span class=\"st0\">\"Stop\"</span><span class=\"br0\">)</span><br/>            <span class=\"kw1\">Case</span> <span class=\"nu0\">0</span><br/>              stopMetronome<span class=\"br0\">(</span>ourMetronome, MetronomeThread<span class=\"br0\">)</span><br/>              <span class=\"kw2\">SetGadgetText</span><span class=\"br0\">(</span>#BUTTON_START,<span class=\"st0\">\"Start\"</span><span class=\"br0\">)</span><br/>          <span class=\"kw1\">EndSelect</span><br/>\u00a0<br/>      <span class=\"kw1\">EndSelect</span><br/>  <span class=\"kw1\">EndSelect</span><br/><span class=\"kw1\">ForEver</span><br/><span class=\"kw1\">End</span><br/>\u00a0<br/><span class=\"kw1\">DataSection</span><br/>  <span class=\"co1\">;a small wav file saved as raw data</span><br/>  sClick:<br/>  <span class=\"kw1\">Data</span>.q $0000082E46464952,$20746D6645564157,$0001000100000010,$0000AC440000AC44<br/>  <span class=\"kw1\">Data</span>.q $6174616400080001,$8484848300000602,$8B8A898886868585,$C0B3A9A29C95918E<br/>  <span class=\"kw1\">Data</span>.q $31479BD3CED0CFCF,$3233323232323331,$BDAEC4C9A1423133,$D0CFCFD0CFD1CDD4<br/>  <span class=\"kw1\">Data</span>.q $323232333770A9CB,$2E34313332333232,$CFD0CFCACFCFAF53,$9783AAD3CED0CFD0<br/>  <span class=\"kw1\">Data</span>.q $3233313332448AA1,$4430333233323233,$CFD0CFAE7D7E9483,$B7B9C3B8BFD1CED0<br/>  <span class=\"kw1\">Data</span>.q $3233313037476898,$3E48493D32333233,$85959187775C4338,$898A8F8D807A7978<br/>  <span class=\"kw1\">Data</span>.q $737F898381888D8D,$3131435564717A77,$332F36413A343234,$827B7873695C4D37<br/>  <span class=\"kw1\">Data</span>.q $9C9B949191908F8A,$4D50515A67758694,$5451484341414245,$7B83868782756559<br/>  <span class=\"kw1\">Data</span>.q $565D5F616365676E,$7871675F57504B4E,$797C8083827E7C7B,$4D525E686C6D7176<br/>  <span class=\"kw1\">Data</span>.q $4D4B4B474343464A,$8B82796F655D5953,$7B7C83888B909392,$5153595E666F767B<br/>  <span class=\"kw1\">Data</span>.q $5A5A5B5B59575553,$696C6E6D67615E5B,$7879777573726F6B,$71727376797C7B79<br/>  <span class=\"kw1\">Data</span>.q $505352505159646C,$6B6153463C3B414A,$A09B908379706D6E,$6F767A7E858C949C<br/>  <span class=\"kw1\">Data</span>.q $4D4D4845484E5662,$80796F645B544E4C,$8487888885828283,$555A5D606369737D<br/>  <span class=\"kw1\">Data</span>.q $6A665F58524E4E51,$878E8F8B867D736D,$54606B72797F8081,$5852504F4E4E4C4D<br/>  <span class=\"kw1\">Data</span>.q $7E7B7A79756F675F,$6B6C6F757C7F8182,$6D6865676C6F6E6C,$6E6B6C7074777773<br/>  <span class=\"kw1\">Data</span>.q $615E5D60676F7372,$7069636061636463,$81817F7C7A797976,$65676B6E72797E80<br/>  <span class=\"kw1\">Data</span>.q $65625F5E5D5D5F62,$7D7C7B7875716E6A,$6F74777B7E7F7F7E,$454950565D63676A<br/>  <span class=\"kw1\">Data</span>.q $605A55504B464343,$9E9F9D978E817469,$6E7D8A93989A9B9C,$444546494C505861<br/>  <span class=\"kw1\">Data</span>.q $7B756F665C534C46,$7E82858788888580,$5C5D61666B70757A,$6A6B6B6B6965615E<br/>  <span class=\"kw1\">Data</span>.q $646B717676736F6B,$727272716D676261,$8285878885817A74,$5F5F636A72797D80<br/>  <span class=\"kw1\">Data</span>.q $645D58585A5E6060,$827D79777877746D,$7878797C80848685,$6A686664666B7075<br/>  <span class=\"kw1\">Data</span>.q $76726C666364686B,$807E7B7878787878,$656A6F74797B7D7F,$59585A5C5D5F6163<br/>  <span class=\"kw1\">Data</span>.q $84807C79746D665E,$777C81878B8C8B89,$555352555B636B72,$82776B625C595957<br/>  <span class=\"kw1\">Data</span>.q $989B9A979493918B,$656A6E7277818A92,$535457575656585E,$6E6E6F6D675E5753<br/>  <span class=\"kw1\">Data</span>.q $898C9398968D7F74,$69717E8C9697918B,$3B39414F5D656767,$695B56565A595145<br/>  <span class=\"kw1\">Data</span>.q $8986878A8F90897B,$7A7875757B848A8C,$747168605E636D76,$7B7365585257636F<br/>  <span class=\"kw1\">Data</span>.q $8C8981777272777C,$70757676767A8188,$6A6D6D68625F6269,$8687847D746C6868<br/>  <span class=\"kw1\">Data</span>.q $8485888A89868484,$585A616B747B8083,$5B555355595C5C5A,$8C898786847D7265<br/>  <span class=\"kw1\">Data</span>.q $888C9096999A9892,$6163666C72797F83,$5E554E4B4C52595E,$91887C7169676663<br/>  <span class=\"kw1\">Data</span>.q $8E8E8A88888C9193,$656666676A737E88,$655F585352555B62,$8B88837C756F6B69<br/>  <span class=\"kw1\">Data</span>.q $7E858B8E8E8B898B,$62676B6D6D6C6E74,$6C6C6B6A6764605F,$7C7978787775736F<br/>  <span class=\"kw1\">Data</span>.q $8E8C8C8C8D8D8982,$686D747C858C9091,$625C58585B5E6265,$908A837C75706C68<br/>  <span class=\"kw1\">Data</span>.q $848A8E9396989896,$545960676E757A7F,$65605E5D5B575352,$A19D9890877C746C<br/>  <span class=\"kw1\">Data</span>.q $8992979A9C9FA1A2,$525355575C64707E,$736D665D56514F50,$8D8D8B8986827E79<br/>  <span class=\"kw1\">Data</span>.q $7777797B7F84898C,$78746F6A6A6E7376,$7B79767372747879,$6C6B69686A6F757A<br/>  <span class=\"kw1\">Data</span>.q $7C78746F6D6C6C6D,$888B8C8B88858280,$6F75797B7D7F8184,$6F6D6B686565676A<br/>  <span class=\"kw1\">Data</span>.q $8785817D79747270,$868B8D8D8C8A8988,$6F73777A7C7D7F82,$6F6B68656465666A<br/>  <span class=\"kw1\">Data</span>.q $8A837D7976757472,$76787A7D82888C8D,$6562606064696F73,$8E8A847C756F6B68<br/>  <span class=\"kw1\">Data</span>.q $8D90939494929190,$606264686F788088,$73685D58585A5D5F,$9B96918C8987837D<br/>  <span class=\"kw1\">Data</span>.q $71767B838C959B9D,$5B5756585D63686D,$8C86817B756F6962,$888F939597979591<br/>  <span class=\"kw1\">Data</span>.q $5C606366696F7780,$7A756D6259535458,$9EA2A0988D837E7C,$79858D8F8F8E9097<br/>  <span class=\"kw1\">Data</span>.q $656B6E6D6865666E,$797A79746C656060,$7F7F7F7F7E7C7978,$8381828384848280<br/>  <span class=\"kw1\">Data</span>.q $7F82888E92918D88,$59606A757C7F7F7F,$655E5A5A59585656,$A59F97918A82796E<br/>  <span class=\"kw1\">Data</span>.q $7E848A939CA6ABAA,$48454548515E6B76,$8A7C6E6057514E4B,$A9ACABA8A4A09B94<br/>  <span class=\"kw1\">Data</span>.q $5A626A737F8C98A3,$60554D49484A4E54,$A9A19A928A81776B,$848C969FA7ADAFAD<br/>  <span class=\"kw1\">Data</span>.q $4B494C525C67717B,$8A7D7167605A544F,$A2A4A5A6A6A49F96,$626970777F89949C<br/>  <span class=\"kw1\">Data</span>.q $6B655E56504F545A,$A19F988F8379736E,$848C9296989A9C9F,$61626465676B717A<br/>  <span class=\"kw1\">Data</span>.q $807E79736D676261,$86898B8C8A888583,$797A7E8284848484,$77777A7C7E7E7C7A<br/>  <span class=\"kw1\">Data</span>.q $7979797B7D7E7C79,$7D7C7B7B7C7C7B7A,$7D7D7C7B7A7B7C7D,$797978777677797B<br/>  <span class=\"kw1\">Data</span>.q $787A7A7976757678,$415380817C777576,$2C31000002005255,$30202C36202C3020<br/>  eClick:<br/><span class=\"kw1\">EndDataSection</span></pre>"}, {"lang": "Pure Data", "loc": 1, "block": "<pre>#N canvas 553 78 360 608 10;\n#X obj 20 20 cnv 15 320 140 empty empty empty 20 12 0 14 -228856 -66577 0;\n#X obj 20 190 cnv 15 320 36 empty empty empty 20 12 0 14 -233017 -66577 0;\n#X obj 67 30 vradio 20 1 0 6 empty beats empty 0 -8 0 10 -86277 -262144 -1 1;\n#X text 40 33 1/1;\n#X text 40 53 2/2;\n#X text 40 73 3/4;\n#X text 40 93 4/4;\n#X text 40 133 6/8;\n#X obj 67 167 + 1;\n#X floatatom 67 201 5 0 0 0 beats - -;\n#X obj 181 32 vsl 20 115 208 40 0 0 empty bpm empty 25 10 0 10 -86277 -262144 -1 5971 0;\n#X text 208 42 Larghetto 60-66;\n#X text 208 58 Adagio 66-76;\n#X text 208 74 Andante 76-108;\n#X text 208 90 Moderato 108-120;\n#X text 208 106 Allegro 120-168;\n#X text 208 122 Presto 168-200;\n#X text 208 138 Prestissimo 200-208;\n#X text 208 26 Largo 40-60;\n#X obj 181 167 int;\n#X floatatom 181 201 5 0 0 1 bpm - -;\n#X obj 149 246 expr 1000 / ($f1/60);\n#X obj 122 125 tgl 25 0 empty on on/off -4 -7 0 10 -261682 -86277 -86277 0 1;\n#X obj 122 270 metro;\n#X obj 122 291 int;\n#X obj 42 249 + 1;\n#X obj 52 275 mod;\n#X obj 122 312 moses 1;\n#X obj 122 347 bng 32 250 50 0 empty empty empty 17 7 0 10 -228856 -258113 -1;\n#X obj 161 347 bng 32 250 50 0 empty empty empty 17 7 0 10 -228856 -260097 -1;\n#X msg 81 399 1 2 \\, 1 2 1 \\, 0 3 2;\n#X obj 81 420 vline~;\n#X msg 200 399 1 2 \\, 1 2 1 \\, 0 3 2;\n#X obj 200 420 vline~;\n#X obj 20 420 osc~ 1400;\n#X obj 139 420 osc~ 1230;\n#X obj 65 455 *~;\n#X obj 184 455 *~;\n#X obj 116 559 dac~;\n#X obj 117 523 +~;\n#X obj 278 490 loadbang;\n#X msg 278 511 \\; pd dsp 1 \\; beats 1 \\; bpm 120 \\; on 1;\n#X connect 2 0 8 0;\n#X connect 8 0 9 0;\n#X connect 9 0 26 1;\n#X connect 10 0 19 0;\n#X connect 19 0 20 0;\n#X connect 20 0 21 0;\n#X connect 21 0 23 1;\n#X connect 22 0 23 0;\n#X connect 23 0 24 0;\n#X connect 24 0 25 0;\n#X connect 24 0 27 0;\n#X connect 25 0 26 0;\n#X connect 26 0 24 1;\n#X connect 27 0 28 0;\n#X connect 27 1 29 0;\n#X connect 28 0 30 0;\n#X connect 29 0 32 0;\n#X connect 30 0 31 0;\n#X connect 31 0 36 1;\n#X connect 32 0 33 0;\n#X connect 33 0 37 1;\n#X connect 34 0 36 0;\n#X connect 35 0 37 0;\n#X connect 36 0 39 0;\n#X connect 37 0 39 1;\n#X connect 39 0 38 0;\n#X connect 39 0 38 1;\n#X connect 40 0 41 0;\n</pre>"}, {"lang": "Python", "loc": 20, "block": "<pre class=\"python highlighted_source\">\u00a0<br/><span class=\"co1\">#lang Python</span><br/><span class=\"kw1\">import</span> <span class=\"kw3\">time</span><br/>\u00a0<br/><span class=\"kw1\">def</span> main<span class=\"br0\">(</span>bpm <span class=\"sy0\">=</span> <span class=\"nu0\">72</span><span class=\"sy0\">,</span> bpb <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>:<br/>    sleep <span class=\"sy0\">=</span> <span class=\"nu0\">60.0</span> / bpm<br/>    counter <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>    <span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:<br/>        counter +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><br/>        <span class=\"kw1\">if</span> counter\u00a0% bpb:<br/>            <span class=\"kw1\">print</span> <span class=\"st0\">'tick'</span><br/>        <span class=\"kw1\">else</span>:<br/>            <span class=\"kw1\">print</span> <span class=\"st0\">'TICK'</span><br/>        <span class=\"kw3\">time</span>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span>sleep<span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0<br/>\u00a0<br/>main<span class=\"br0\">(</span><span class=\"br0\">)</span><br/>\u00a0<br/>\u00a0</pre>"}, {"lang": "Racket", "loc": 43, "block": "<pre class=\"text highlighted_source\">\u00a0<br/>#lang racket<br/>\u00a0<br/>(require racket/gui)<br/>\u00a0<br/>(define msec 500)<br/>(define sounds '(\"hi.wav\" \"lo.wav\"))<br/>(define colors '(\"red\" \"green\"))<br/>\u00a0<br/>(define f<br/>  (new frame% [label \"Metronome\"] [width 200] [height 200]))<br/>(define c<br/>  (new (class canvas%<br/>         (define brushes<br/>           (map (\u03bb(c) (new brush% [color c] [style 'solid])) colors))<br/>         (define cur 0)<br/>         (define/override (on-paint)<br/>           (send* (send this get-dc)<br/>                  (clear)<br/>                  (set-brush (list-ref brushes cur))<br/>                  (draw-rectangle 0 0 200 200)))<br/>         (define/public (flip!)<br/>           (set! cur (modulo (add1 cur) (length sounds)))<br/>           (play-sound (list-ref sounds cur) #f)<br/>           (on-paint))<br/>         (super-new))<br/>       [parent f]))<br/>\u00a0<br/>(define (flip)<br/>  (define init (current-inexact-milliseconds))<br/>  (define next (+ msec init))<br/>  (define ticks 1)<br/>  (let loop ()<br/>    (when (&gt; (current-inexact-milliseconds) next)<br/>      (set! ticks (add1 ticks))<br/>      (set! next (+ init (* msec ticks)))<br/>      (queue-callback (\u03bb() (send c flip!))))<br/>    (sleep 0.01)<br/>    (loop)))<br/>\u00a0<br/>(send* f (center) (show #t))<br/>(void (thread flip))<br/>\u00a0</pre>"}, {"lang": "REXX", "loc": 19, "block": "<pre class=\"rexx highlighted_source\"><span class=\"coMULTI\">/*REXX program simulates a visual (textual)  metronome  (with no sound).                */</span><br/><span class=\"kw1\">parse</span> <span class=\"kw1\">arg</span> bpm bpb dur <span class=\"sy0\">.</span>                          <span class=\"coMULTI\">/*obtain optional arguments from the CL*/</span><br/><span class=\"kw1\">if</span> bpm==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> bpm==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> bpm=<span class=\"nu0\">72</span>               <span class=\"coMULTI\">/*the number of  beats  per minute.    */</span><br/><span class=\"kw1\">if</span> bpb==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> bpb==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> bpb= <span class=\"nu0\">4</span>               <span class=\"coMULTI\">/* \"     \"    \"    \"     \"   bar.      */</span><br/><span class=\"kw1\">if</span> dur==<span class=\"st0\">''</span> <span class=\"sy0\">|</span> dur==<span class=\"st0\">\",\"</span>  <span class=\"kw3\">then</span> dur= <span class=\"nu0\">5</span>               <span class=\"coMULTI\">/*duration of the  run  in seconds.    */</span><br/><span class=\"kw1\">call</span> <span class=\"kw6\">time</span> <span class=\"st0\">'Reset'</span>                                <span class=\"coMULTI\">/*reset the REXX elapsed timer.        */</span><br/>bt=<span class=\"nu0\">1</span><span class=\"sy0\">/</span>bpb                                         <span class=\"coMULTI\">/*calculate a   tock-time   interval.  */</span><br/>\u00a0<br/>  <span class=\"kw1\">do</span> <span class=\"kw2\">until</span> et<span class=\"sy0\">&gt;</span>=dur;    et=<span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'Elasped'</span><span class=\"br0\">)</span>        <span class=\"coMULTI\">/*process  tick-tocks  for the duration*/</span><br/>  <span class=\"kw1\">say</span>; <span class=\"kw1\">call</span> <span class=\"kw6\">charout</span> ,<span class=\"st0\">'TICK'</span>                      <span class=\"coMULTI\">/*show the first tick for the period.  */</span><br/>  es=et+<span class=\"nu0\">1</span>                                        <span class=\"coMULTI\">/*bump the elapsed time  \"limiter\".    */</span><br/>  $t=et+bt<br/>                        <span class=\"kw1\">do</span> <span class=\"kw2\">until</span> e<span class=\"sy0\">&gt;</span>=es;        e=<span class=\"kw6\">time</span><span class=\"br0\">(</span><span class=\"st0\">'Elapsed'</span><span class=\"br0\">)</span><br/>                        <span class=\"kw1\">if</span> e<span class=\"sy0\">&lt;</span>$t <span class=\"kw3\">then</span> <span class=\"kw1\">iterate</span>                       <span class=\"coMULTI\">/*time for tock?     */</span><br/>                        <span class=\"kw1\">call</span> <span class=\"kw6\">charout</span> , <span class=\"st0\">' tock'</span>                     <span class=\"coMULTI\">/*show a  \"tock\".    */</span><br/>                        $t=$t+bt                                   <span class=\"coMULTI\">/*bump the TOCK time.*/</span><br/>                         <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*until e\u2265es*/</span><br/>  <span class=\"kw3\">end</span>   <span class=\"coMULTI\">/*until et\u2265dur*/</span><br/>                                                 <span class=\"coMULTI\">/*stick a fork in it,  we're all done. */</span></pre>"}, {"lang": "Ruby", "loc": 16, "block": "<pre class=\"ruby highlighted_source\">\u00a0<br/><span class=\"co1\">#!/usr/bin/ruby</span><br/>\u00a0<br/>bpm = <span class=\"kw3\">Integer</span><span class=\"br0\">(</span>ARGV<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">rescue</span> <span class=\"nu0\">60</span> <span class=\"co1\"># sets BPM by the first command line argument, set to 60 if none provided</span><br/>msr = <span class=\"kw3\">Integer</span><span class=\"br0\">(</span>ARGV<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">rescue</span> <span class=\"nu0\">4</span> <span class=\"co1\"># sets number of beats in a measure by the second command line argument, set to 4 if none provided</span><br/>i = <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw3\">loop</span> <span class=\"kw1\">do</span><br/>  <span class=\"br0\">(</span>msr<span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">times</span> <span class=\"kw1\">do</span> <br/>    <span class=\"kw3\">puts</span> <span class=\"st0\">\"<span class=\"es0\">\\a</span>\"</span><br/>    <span class=\"kw3\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">60.0</span><span class=\"sy0\">/</span>bpm<span class=\"br0\">)</span><br/>  <span class=\"kw1\">end</span><br/>  <span class=\"kw3\">puts</span> <span class=\"st0\">\"<span class=\"es0\">\\a</span>AND #{i += 1}\"</span><br/>  <span class=\"kw3\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">60.0</span><span class=\"sy0\">/</span>bpm<span class=\"br0\">)</span><br/><span class=\"kw1\">end</span><br/>\u00a0</pre>"}, {"lang": "Scala", "loc": 14, "block": "<pre class=\"scala highlighted_source\"><a href=\"http://scala-lang.org\"><span class=\"kw1\">def</span></a> metronome<span class=\"br0\">(</span>bpm<span class=\"sy0\">:</span> Int, bpb<span class=\"sy0\">:</span> Int, maxBeats<span class=\"sy0\">:</span> Int <span class=\"sy0\">=</span> Int.<span class=\"me1\">MaxValue</span><span class=\"br0\">)</span> <span class=\"br0\">{</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">val</span></a> delay <span class=\"sy0\">=</span> 60000L / bpm<br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">var</span></a> beats <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">do</span></a> <span class=\"br0\">{</span><br/>    Thread.<span class=\"me1\">sleep</span><span class=\"br0\">(</span>delay<span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">if</span></a> <span class=\"br0\">(</span>beats <span class=\"sy0\">%</span> bpb <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> print<span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es1\">\\n</span>TICK \"</span><span class=\"br0\">)</span><br/>    <a href=\"http://scala-lang.org\"><span class=\"kw1\">else</span></a> print<span class=\"br0\">(</span><span class=\"st0\">\"tick \"</span><span class=\"br0\">)</span><br/>    beats+<span class=\"sy0\">=</span><span class=\"nu0\">1</span><br/>  <span class=\"br0\">}</span><br/>  <a href=\"http://scala-lang.org\"><span class=\"kw1\">while</span></a> <span class=\"br0\">(</span>beats <span class=\"sy0\">&lt;</span> maxBeats<span class=\"br0\">)</span><br/>  println<span class=\"br0\">(</span><span class=\"br0\">)</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/>metronome<span class=\"br0\">(</span><span class=\"nu0\">120</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"co1\">// limit to 20</span></pre>"}, {"lang": "Tcl", "loc": 26, "block": "<pre class=\"tcl highlighted_source\"><span class=\"kw2\">package</span> require Tcl <span class=\"nu0\">8.5</span><br/>\u00a0<br/>lassign <span class=\"kw2\"><span class=\"re0\">$argv</span></span> bpm bpb<br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"kw2\"><span class=\"re0\">$argc</span></span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> bpb <span class=\"nu0\">4</span><span class=\"br0\">}</span><br/><span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"kw2\"><span class=\"re0\">$argc</span></span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><span class=\"kw1\">set</span> bpm <span class=\"nu0\">60</span><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"kw2\">fconfigure</span> stdout -buffering none<br/><span class=\"kw1\">set</span> intervalMS <span class=\"br0\">[</span><span class=\"kw1\">expr</span> <span class=\"br0\">{</span>round<span class=\"br0\">(</span><span class=\"nu0\">60000.0</span> / <span class=\"re0\">$bpm</span><span class=\"br0\">)</span><span class=\"br0\">}</span><span class=\"br0\">]</span><br/><span class=\"kw1\">set</span> ctr <span class=\"nu0\">0</span><br/>\u00a0<br/><span class=\"kw1\">proc</span> beat <span class=\"br0\">{</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>    <span class=\"kw1\">global</span> intervalMS ctr bpb<br/>    after <span class=\"re0\">$intervalMS</span> beat      <span class=\"sy0\">;</span><span class=\"co1\"># Reschedule first, to encourage minimal drift</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"br0\">[</span><span class=\"kw2\">incr</span> ctr<span class=\"br0\">]</span> == <span class=\"nu0\">1</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"<span class=\"es0\">\\r</span><span class=\"es0\">\\a</span>[string repeat { } [expr {$bpb+4}]]<span class=\"es0\">\\r</span>TICK\"</span><br/>    <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw2\">puts</span> -nonewline <span class=\"st0\">\"<span class=\"es0\">\\r</span>tick[string repeat . [expr {$ctr-1}]]\"</span><br/>    <span class=\"br0\">}</span><br/>    <span class=\"kw1\">if</span> <span class=\"br0\">{</span><span class=\"re0\">$ctr</span> <span class=\"sy0\">&gt;</span>= <span class=\"re0\">$bpb</span><span class=\"br0\">}</span> <span class=\"br0\">{</span><br/>\t<span class=\"kw1\">set</span> ctr <span class=\"nu0\">0</span><br/>    <span class=\"br0\">}</span><br/><span class=\"br0\">}</span><br/>\u00a0<br/><span class=\"co1\"># Run the metronome until the user uses Ctrl+C...</span><br/>beat<br/>vwait forever</pre>"}]}